
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1303"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  5  4  2  5  6  8  4  4  8  6  7  6 11  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02227 0.32857 0.61351 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
774 529 
[1] "treatment indicator table: "

  0   1 
477 826 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 686
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 118.338 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.236 0.0940
 2 mu         0.1   0.2 0.381 0.107 
 3 mu         0.1   0.3 0.408 0.110 
 4 mu         0.1   0.4 0.483 0.104 
 5 mu         0.1   0.5 0.507 0.114 
 6 mu         0.2   0.1 0.293 0.0668
 7 mu         0.2   0.2 0.425 0.0902
 8 mu         0.2   0.3 0.480 0.0927
 9 mu         0.2   0.4 0.534 0.0911
10 mu         0.2   0.5 0.552 0.0939
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.885        0.398  0.000187     10.2 
 2 mu         0.2      1.00         0.779  0.0169       14.3 
 3 mu         0.3      0.998        0.919  0.142         7.27
 4 mu         0.4      0.998        0.984  0.438         2.62
 5 mu         0.5      1.01         1      0.772         1.29
 6 mu         0.6      1.01         1      0.911         1.14
 7 mu         0.7      1.01         1      0.852         1.17
 8 mu         0.8      1.01         1      0.637         1.33
 9 mu         0.9      1.05         1      0.190         2.19
10 mu_1       0.1      0.983        0.753  0.000808     17.1 
11 mu_1       0.2      1.01         0.941  0.0378       12.2 
12 mu_1       0.3      0.993        0.965  0.222         4.62
13 mu_1       0.4      1.00         1      0.548         1.76
14 mu_1       0.5      1.01         1.00   0.849         1.24
15 mu_1       0.6      1.01         1      0.907         1.11
16 mu_1       0.7      1.01         1      0.841         1.19
17 mu_1       0.8      1.01         1      0.594         1.39
18 mu_1       0.9      1.05         1      0.169         2.30
19 mu_0       0.1      0.875        0.360  0.000118      9.47
20 mu_0       0.2      1.00         0.730  0.0117       14.8 
21 mu_0       0.3      1.00         0.900  0.108         8.41
22 mu_0       0.4      0.995        0.980  0.364         3.20
23 mu_0       0.5      1.00         1      0.695         1.41
24 mu_0       0.6      1.01         1      0.897         1.20
25 mu_0       0.7      1.01         1      0.879         1.12
26 mu_0       0.8      1.01         1      0.763         1.24
27 mu_0       0.9      1.00         1      0.380         1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.126     0.0000950  5.37e-18      6.94
 2 mu         0.2     0.628     0.00728    5.63e-12     30.4 
 3 mu         0.3     1.12      0.0712     1.87e- 8     35.4 
 4 mu         0.4     1.30      0.291      5.90e- 6     20.5 
 5 mu         0.5     1.25      0.722      5.12e- 4      6.78
 6 mu         0.6     1.12      1.06       1.96e- 2      3.46
 7 mu         0.7     1.05      1.05       1.91e- 2      2.42
 8 mu         0.8     1.23      0.608      1.46e- 4     20.0 
 9 mu         0.9     2.61      0.0871     1.80e- 8     93.7 
10 mu_1       0.1     0.363     0.000731   5.37e-17     18.5 
11 mu_1       0.2     0.981     0.0295     2.81e-11     40.5 
12 mu_1       0.3     1.32      0.170      6.24e- 8     31.5 
13 mu_1       0.4     1.35      0.490      1.48e- 5     13.7 
14 mu_1       0.5     1.23      0.997      1.02e- 3      5.91
15 mu_1       0.6     1.10      1.10       3.27e- 2      2.79
16 mu_1       0.7     1.04      0.954      8.17e- 3      3.22
17 mu_1       0.8     1.27      0.507      5.46e- 5     23.7 
18 mu_1       0.9     2.74      0.0644     6.00e- 9     98.9 
19 mu_0       0.1     0.0995    0.0000433  0             5.66
20 mu_0       0.2     0.539     0.00338    0            27.9 
21 mu_0       0.3     1.03      0.0296     0            37.1 
22 mu_0       0.4     1.26      0.155      0            25.1 
23 mu_0       0.5     1.26      0.503      0             9.90
24 mu_0       0.6     1.15      1.03       0             4.55
25 mu_0       0.7     1.06      1.04       0             2.86
26 mu_0       0.8     1.05      1.01       0             5.00
27 mu_0       0.9     1.42      0.257      0            46.8 
[1] "Total run time was 121.492 seconds"
