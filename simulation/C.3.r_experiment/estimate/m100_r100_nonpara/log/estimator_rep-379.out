
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1275"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  3 10  2  8  8  2  5  3  4  7  9  8 11  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01855 0.29815 0.58332 0.99464 5.02353 
[1] "event indicator table: "

  0   1 
749 526 
[1] "treatment indicator table: "

  0   1 
472 803 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 674
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 131.423 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.231 0.114 
 2 mu         0.1   0.2 0.432 0.109 
 3 mu         0.1   0.3 0.422 0.116 
 4 mu         0.1   0.4 0.467 0.0955
 5 mu         0.1   0.5 0.457 0.0970
 6 mu         0.2   0.1 0.307 0.0929
 7 mu         0.2   0.2 0.412 0.0734
 8 mu         0.2   0.3 0.434 0.0882
 9 mu         0.2   0.4 0.476 0.0709
10 mu         0.2   0.5 0.474 0.0707
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.702        0.229 0.0000212      6.98
 2 mu         0.2      0.803        0.713 0.00458        3.97
 3 mu         0.3      0.883        0.956 0.0679         2.35
 4 mu         0.4      0.947        0.975 0.314          1.59
 5 mu         0.5      0.987        1     0.714          1.52
 6 mu         0.6      0.998        1     0.729          1.23
 7 mu         0.7      0.986        1.00  0.593          1.21
 8 mu         0.8      0.966        1     0.339          2.15
 9 mu         0.9      0.937        1     0.0695         3.27
10 mu_1       0.1      0.733        0.540 0.000113       5.44
11 mu_1       0.2      0.841        0.895 0.0123         3.20
12 mu_1       0.3      0.918        0.974 0.124          1.70
13 mu_1       0.4      0.972        0.986 0.440          1.66
14 mu_1       0.5      0.998        1     0.793          1.43
15 mu_1       0.6      0.998        1     0.685          1.20
16 mu_1       0.7      0.982        1     0.581          1.27
17 mu_1       0.8      0.963        1     0.305          2.31
18 mu_1       0.9      0.934        1     0.0589         3.27
19 mu_0       0.1      0.699        0.194 0.0000110      7.68
20 mu_0       0.2      0.793        0.657 0.00264        4.16
21 mu_0       0.3      0.868        0.931 0.0439         2.71
22 mu_0       0.4      0.931        0.978 0.230          1.54
23 mu_0       0.5      0.977        0.994 0.604          1.61
24 mu_0       0.6      0.998        0.993 0.765          1.35
25 mu_0       0.7      0.993        1     0.622          1.19
26 mu_0       0.8      0.978        1     0.477          1.48
27 mu_0       0.9      0.965        1     0.164          3.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     275.      0.0000410  1.71e-15  23447.  
 2 mu         0.2     171.      0.00628    3.54e-10  11410.  
 3 mu         0.3      62.3     0.0768     4.00e- 7   3447.  
 4 mu         0.4      15.5     0.369      5.22e- 5    723.  
 5 mu         0.5       3.53    0.857      2.01e- 3    101.  
 6 mu         0.6       1.61    1.11       3.43e- 2     11.0 
 7 mu         0.7       1.75    0.964      2.99e- 3     24.6 
 8 mu         0.8       2.95    0.705      1.33e- 5     92.4 
 9 mu         0.9       4.81    0.132      7.32e-10    152.  
10 mu_1       0.1     249.      0.000231   1.54e-14  18036.  
11 mu_1       0.2      92.3     0.0181     1.59e- 9   4388.  
12 mu_1       0.3      25.2     0.171      1.20e- 6   1309.  
13 mu_1       0.4       5.75    0.563      1.17e- 4    230.  
14 mu_1       0.5       1.94    0.864      3.62e- 3     23.4 
15 mu_1       0.6       1.49    1.12       4.31e- 2      8.15
16 mu_1       0.7       1.91    0.902      1.07e- 3     31.2 
17 mu_1       0.8       3.22    0.529      4.16e- 6    103.  
18 mu_1       0.9       4.94    0.0904     2.03e-10    150.  
19 mu_0       0.1     278.      0.0000141  0         24048.  
20 mu_0       0.2     191.      0.00293    0         13165.  
21 mu_0       0.3      78.2     0.0354     0          4546.  
22 mu_0       0.4      22.0     0.217      0          1112.  
23 mu_0       0.5       5.13    0.664      0           187.  
24 mu_0       0.6       1.79    0.961      0            19.3 
25 mu_0       0.7       1.40    0.982      0             9.26
26 mu_0       0.8       1.88    0.792      0            51.3 
27 mu_0       0.9       3.69    0.220      0           169.  
[1] "Total run time was 134.797 seconds"
