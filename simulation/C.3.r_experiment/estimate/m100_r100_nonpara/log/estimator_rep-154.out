
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1191"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
12  7  6  4  5  6 10  6  6  6  3  7  3  8  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03824 0.37082 0.62870 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
693 498 
[1] "treatment indicator table: "

  0   1 
437 754 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 588
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 791.49 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.358 0.0861
 2 mu         0.1   0.2 0.366 0.124 
 3 mu         0.1   0.3 0.618 0.131 
 4 mu         0.1   0.4 0.748 0.173 
 5 mu         0.1   0.5 0.814 0.198 
 6 mu         0.2   0.1 0.300 0.0456
 7 mu         0.2   0.2 0.323 0.0914
 8 mu         0.2   0.3 0.546 0.0895
 9 mu         0.2   0.4 0.640 0.126 
10 mu         0.2   0.5 0.710 0.152 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.925        0.757 0.000000185      18.1 
 2 mu         0.2      0.932        0.960 0.000183          5.80
 3 mu         0.3      0.970        1     0.00708           4.83
 4 mu         0.4      0.971        0.995 0.0681            3.16
 5 mu         0.5      0.973        1     0.287             1.49
 6 mu         0.6      0.991        1     0.581             1.24
 7 mu         0.7      1.01         1     0.778             1.23
 8 mu         0.8      1.03         1     0.408             1.46
 9 mu         0.9      1.05         1     0.0810            3.52
10 mu_1       0.1      0.815        0.911 0.00000114        2.21
11 mu_1       0.2      0.944        0.980 0.000569          4.85
12 mu_1       0.3      0.974        1     0.0148            4.60
13 mu_1       0.4      0.970        1     0.109             2.46
14 mu_1       0.5      0.978        1     0.377             1.23
15 mu_1       0.6      0.998        1     0.656             1.23
16 mu_1       0.7      1.01         1     0.706             1.29
17 mu_1       0.8      1.03         1     0.347             1.56
18 mu_1       0.9      1.06         1     0.0646            3.71
19 mu_0       0.1      0.937        0.751 0.0000000788     20.0 
20 mu_0       0.2      0.930        0.937 0.0000867         6.93
21 mu_0       0.3      0.968        1     0.00376           4.93
22 mu_0       0.4      0.972        0.996 0.0410            3.63
23 mu_0       0.5      0.969        1     0.198             1.79
24 mu_0       0.6      0.981        1     0.467             1.24
25 mu_0       0.7      1.00         1     0.680             1.27
26 mu_0       0.8      1.01         1     0.650             1.38
27 mu_0       0.9      1.02         1     0.229             1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      43.7     0.000107   7.77e-19   4205.  
 2 mu         0.2      56.1     0.00930    8.15e-13   5180.  
 3 mu         0.3      39.1     0.113      2.71e- 9   3066.  
 4 mu         0.4      21.2     0.423      8.54e- 7   1167.  
 5 mu         0.5       9.07    0.820      7.41e- 5    440.  
 6 mu         0.6       3.00    0.915      2.84e- 3    136.  
 7 mu         0.7       1.26    1.06       1.41e- 3     16.8 
 8 mu         0.8       1.21    0.826      8.23e- 6     15.1 
 9 mu         0.9       1.60    0.114      8.05e-10     49.8 
10 mu_1       0.1      73.1     0.000597   7.77e-18   7008.  
11 mu_1       0.2      49.3     0.0291     4.07e-12   4316.  
12 mu_1       0.3      26.7     0.226      9.03e- 9   1703.  
13 mu_1       0.4      13.7     0.636      2.14e- 6    667.  
14 mu_1       0.5       5.80    0.809      1.48e- 4    343.  
15 mu_1       0.6       2.09    0.996      4.73e- 3     87.9 
16 mu_1       0.7       1.17    1.11       4.47e- 4      9.36
17 mu_1       0.8       1.24    0.691      2.29e- 6     17.8 
18 mu_1       0.9       1.61    0.0798     1.99e-10     52.1 
19 mu_0       0.1      40.4     0.0000303  0          3893.  
20 mu_0       0.2      57.8     0.00432    0          5395.  
21 mu_0       0.3      44.4     0.0460     0          3650.  
22 mu_0       0.4      26.2     0.261      0          1620.  
23 mu_0       0.5      12.3     0.649      0           538.  
24 mu_0       0.6       4.35    0.784      0           207.  
25 mu_0       0.7       1.49    0.951      0            34.3 
26 mu_0       0.8       1.10    1.07       0             4.64
27 mu_0       0.9       1.45    0.273      0            29.3 
[1] "Total run time was 797.303 seconds"
