
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1291"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3 10  8  5  6  6  3  6  8  6  2  6  9  9  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02692 0.32363 0.60810 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
751 540 
[1] "treatment indicator table: "

  0   1 
457 834 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 141.198 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.427 0.164 
 2 mu         0.1   0.2 0.484 0.190 
 3 mu         0.1   0.3 0.626 0.181 
 4 mu         0.1   0.4 0.711 0.190 
 5 mu         0.1   0.5 0.768 0.190 
 6 mu         0.2   0.1 0.403 0.0918
 7 mu         0.2   0.2 0.474 0.111 
 8 mu         0.2   0.3 0.589 0.0950
 9 mu         0.2   0.4 0.656 0.103 
10 mu         0.2   0.5 0.688 0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10         0.422  0.000249     25.6 
 2 mu         0.2      1.07         0.824  0.0208        9.10
 3 mu         0.3      1.04         1      0.168         4.01
 4 mu         0.4      1.02         1      0.500         1.93
 5 mu         0.5      1.02         1      0.701         1.51
 6 mu         0.6      1.01         1      0.853         1.24
 7 mu         0.7      0.987        0.985  0.773         1.23
 8 mu         0.8      0.965        0.976  0.656         1.36
 9 mu         0.9      0.958        0.969  0.266         2.80
10 mu_1       0.1      0.971        0.773  0.00102       7.79
11 mu_1       0.2      1.02         0.938  0.0447        6.24
12 mu_1       0.3      1.02         0.989  0.255         2.71
13 mu_1       0.4      1.01         1      0.583         1.68
14 mu_1       0.5      1.01         1.00   0.733         1.40
15 mu_1       0.6      1.00         1      0.844         1.24
16 mu_1       0.7      0.981        0.979  0.750         1.23
17 mu_1       0.8      0.962        0.980  0.610         1.42
18 mu_1       0.9      0.955        0.982  0.240         2.93
19 mu_0       0.1      1.12         0.367  0.000163     28.4 
20 mu_0       0.2      1.08         0.784  0.0149       11.3 
21 mu_0       0.3      1.05         0.990  0.130         4.57
22 mu_0       0.4      1.03         1      0.424         2.27
23 mu_0       0.5      1.02         1      0.645         1.62
24 mu_0       0.6      1.02         1.00   0.789         1.33
25 mu_0       0.7      1.00         0.999  0.825         1.23
26 mu_0       0.8      0.978        0.974  0.665         1.22
27 mu_0       0.9      0.980        0.981  0.502         1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.11    0.0000387  5.64e-14    211.  
 2 mu         0.2       4.22    0.00376    5.96e- 9    198.  
 3 mu         0.3       2.85    0.0514     3.00e- 6     89.7 
 4 mu         0.4       1.84    0.244      2.20e- 4     25.1 
 5 mu         0.5       1.26    0.648      5.42e- 3      9.53
 6 mu         0.6       1.12    1.04       6.41e- 2      4.04
 7 mu         0.7       1.47    1.07       5.36e- 3     17.0 
 8 mu         0.8       3.00    0.826      1.06e- 4    110.  
 9 mu         0.9       7.03    0.124      5.83e- 8    406.  
10 mu_1       0.1       4.22    0.000243   0           290.  
11 mu_1       0.2       2.87    0.0138     0           141.  
12 mu_1       0.3       2.01    0.0982     0            42.7 
13 mu_1       0.4       1.44    0.415      0            18.6 
14 mu_1       0.5       1.14    0.877      0             6.35
15 mu_1       0.6       1.15    1.03       0             3.74
16 mu_1       0.7       1.61    1.05       0            22.9 
17 mu_1       0.8       3.33    0.650      0           129.  
18 mu_1       0.9       7.32    0.0899     0           426.  
19 mu_0       0.1       5.21    0.0000106  0           235.  
20 mu_0       0.2       4.56    0.00154    0           212.  
21 mu_0       0.3       3.21    0.0205     0           110.  
22 mu_0       0.4       2.10    0.123      0            35.8 
23 mu_0       0.5       1.38    0.435      0            12.7 
24 mu_0       0.6       1.08    0.845      0             4.49
25 mu_0       0.7       1.13    0.918      0             3.33
26 mu_0       0.8       1.72    1.03       0            30.4 
27 mu_0       0.9       4.44    0.348      0           225.  
[1] "Total run time was 144.765 seconds"
