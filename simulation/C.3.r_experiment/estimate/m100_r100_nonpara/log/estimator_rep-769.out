
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  9  2  6  4  4  9  7  6  4  7  6  8  6  5 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05439 0.40940 0.64508 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
747 537 
[1] "treatment indicator table: "

  0   1 
410 874 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 185.337 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.341 0.0723
 2 mu         0.1   0.2 0.394 0.0691
 3 mu         0.1   0.3 0.439 0.0851
 4 mu         0.1   0.4 0.441 0.0753
 5 mu         0.1   0.5 0.471 0.0794
 6 mu         0.2   0.1 0.340 0.0637
 7 mu         0.2   0.2 0.411 0.0656
 8 mu         0.2   0.3 0.467 0.0797
 9 mu         0.2   0.4 0.476 0.0714
10 mu         0.2   0.5 0.521 0.0827
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.654        0.514 0.000000169       3.13
 2 mu         0.2      0.776        0.734 0.000171          7.14
 3 mu         0.3      0.983        0.908 0.00676          21.5 
 4 mu         0.4      1.07         0.983 0.0658           21.9 
 5 mu         0.5      1.04         1     0.275            10.1 
 6 mu         0.6      1.02         1.00  0.624             2.73
 7 mu         0.7      1.01         1     0.689             1.25
 8 mu         0.8      0.997        1     0.551             1.25
 9 mu         0.9      0.988        1     0.184             1.42
10 mu_1       0.1      0.708        0.661 0.00000104        2.37
11 mu_1       0.2      0.866        0.901 0.000534         12.5 
12 mu_1       0.3      1.06         0.938 0.0142           25.1 
13 mu_1       0.4      1.09         0.990 0.105            19.2 
14 mu_1       0.5      1.04         1     0.359             7.33
15 mu_1       0.6      1.01         1     0.702             1.99
16 mu_1       0.7      1.00         1     0.676             1.24
17 mu_1       0.8      0.996        1     0.490             1.26
18 mu_1       0.9      0.987        1     0.157             1.45
19 mu_0       0.1      0.648        0.480 0.0000000719      3.31
20 mu_0       0.2      0.753        0.696 0.0000808         5.80
21 mu_0       0.3      0.949        0.871 0.00357          20.0 
22 mu_0       0.4      1.07         0.968 0.0395           23.6 
23 mu_0       0.5      1.05         0.998 0.191            12.9 
24 mu_0       0.6      1.02         1     0.508             3.83
25 mu_0       0.7      1.01         1     0.720             1.31
26 mu_0       0.8      0.998        1     0.645             1.29
27 mu_0       0.9      0.990        1     0.427             1.33
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     332.    0.00000703   1.36e-15   32701. 
 2 mu         0.2     562.    0.00131      1.59e-10   50294. 
 3 mu         0.3     388.    0.0208       1.37e- 7   26176. 
 4 mu         0.4     180.    0.123        1.56e- 5    7169. 
 5 mu         0.5      56.8   0.480        5.78e- 4    2591. 
 6 mu         0.6      11.2   0.936        1.03e- 2     532. 
 7 mu         0.7       2.24  1.19         4.72e- 2      42.5
 8 mu         0.8       2.42  0.920        1.83e- 3      98.5
 9 mu         0.9       5.37  0.266        1.04e- 6     405. 
10 mu_1       0.1     592.    0.0000505    1.29e-14   57708. 
11 mu_1       0.2     539.    0.00564      7.50e-10   44377. 
12 mu_1       0.3     292.    0.0453       4.31e- 7   15398. 
13 mu_1       0.4     121.    0.254        3.68e- 5    5047. 
14 mu_1       0.5      34.6   0.662        1.09e- 3    1727. 
15 mu_1       0.6       6.56  1.03         1.61e- 2     295. 
16 mu_1       0.7       1.92  1.04         1.69e- 2      28.3
17 mu_1       0.8       2.67  0.841        5.73e- 4     123. 
18 mu_1       0.9       5.80  0.197        2.04e- 7     450. 
19 mu_0       0.1     303.    0.000000563  0          29923. 
20 mu_0       0.2     567.    0.000279     0          51773. 
21 mu_0       0.3     429.    0.00745      0          30795. 
22 mu_0       0.4     219.    0.0537       0           9840. 
23 mu_0       0.5      79.0   0.313        0           3455. 
24 mu_0       0.6      18.2   0.744        0            886. 
25 mu_0       0.7       3.00  1.14         0             94.4
26 mu_0       0.8       1.40  1.04         0             22.1
27 mu_0       0.9       1.44  0.440        0             40.9
[1] "Total run time was 191.13 seconds"
