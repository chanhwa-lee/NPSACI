
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1268"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  6  8  6  6  6  4  7 11  6  8  7  6  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02638 0.30966 0.56382 0.95096 5.00000 
[1] "event indicator table: "

  0   1 
735 533 
[1] "treatment indicator table: "

  0   1 
494 774 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 142.595 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.562 0.244
 2 mu         0.1   0.2 0.732 0.288
 3 mu         0.1   0.3 0.764 0.305
 4 mu         0.1   0.4 0.816 0.325
 5 mu         0.1   0.5 0.842 0.345
 6 mu         0.2   0.1 0.448 0.119
 7 mu         0.2   0.2 0.576 0.135
 8 mu         0.2   0.3 0.630 0.141
 9 mu         0.2   0.4 0.678 0.148
10 mu         0.2   0.5 0.700 0.157
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.37         0.588 0.00000799     56.0 
 2 mu         0.2      1.16         0.847 0.00286        24.5 
 3 mu         0.3      1.02         0.973 0.0519          7.17
 4 mu         0.4      0.975        0.979 0.240           3.21
 5 mu         0.5      0.981        1.00  0.548           1.45
 6 mu         0.6      0.996        1.00  0.793           1.15
 7 mu         0.7      1.00         1.00  0.576           1.38
 8 mu         0.8      0.992        0.999 0.264           2.24
 9 mu         0.9      0.995        0.951 0.0393          5.59
10 mu_1       0.1      1.27         0.773 0.0000404      40.1 
11 mu_1       0.2      1.05         0.927 0.00731         9.87
12 mu_1       0.3      0.986        0.992 0.0905          5.54
13 mu_1       0.4      0.974        0.994 0.336           2.22
14 mu_1       0.5      0.987        1     0.635           1.31
15 mu_1       0.6      1.00         1.00  0.767           1.16
16 mu_1       0.7      1.00         1     0.513           1.53
17 mu_1       0.8      0.989        0.990 0.221           2.34
18 mu_1       0.9      0.997        0.948 0.0305          6.09
19 mu_0       0.1      1.38         0.560 0.00000440     57.7 
20 mu_0       0.2      1.19         0.840 0.00174        28.3 
21 mu_0       0.3      1.04         0.954 0.0354          9.12
22 mu_0       0.4      0.976        0.979 0.176           3.87
23 mu_0       0.5      0.974        0.991 0.442           1.66
24 mu_0       0.6      0.991        1     0.714           1.28
25 mu_0       0.7      1.00         1.00  0.724           1.21
26 mu_0       0.8      1.00         1     0.437           1.83
27 mu_0       0.9      0.972        0.996 0.118           2.99
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.65    0.0000816  3.14e-13     128. 
 2 mu         0.2       1.47    0.00767    1.63e- 8      27.3
 3 mu         0.3       2.10    0.0865     8.18e- 6      55.7
 4 mu         0.4       2.20    0.307      5.99e- 4      57.4
 5 mu         0.5       1.70    0.843      9.02e- 3      29.5
 6 mu         0.6       1.38    0.934      1.56e- 4      11.8
 7 mu         0.7       2.30    0.995      7.69e- 7      79.9
 8 mu         0.8       9.26    0.479      3.97e-10     677. 
 9 mu         0.9      50.7     0.0546     8.51e-16    4455. 
10 mu_1       0.1       1.49    0.000590   2.79e-12      63.9
11 mu_1       0.2       1.82    0.0276     7.23e- 8      37.5
12 mu_1       0.3       2.34    0.206      2.42e- 5      65.5
13 mu_1       0.4       2.07    0.607      1.33e- 3      50.7
14 mu_1       0.5       1.53    0.964      9.02e- 4      20.8
15 mu_1       0.6       1.42    0.998      1.30e- 5      15.8
16 mu_1       0.7       2.77    1.00       5.50e- 8     114. 
17 mu_1       0.8      11.2     0.386      2.48e-11     846. 
18 mu_1       0.9      56.2     0.0365     4.73e-17    4950. 
19 mu_0       0.1       1.67    0.0000258  0            135. 
20 mu_0       0.2       1.38    0.00367    0             32.4
21 mu_0       0.3       1.99    0.0352     0             51.5
22 mu_0       0.4       2.28    0.206      0             61.9
23 mu_0       0.5       1.87    0.643      0             38.2
24 mu_0       0.6       1.33    0.919      0             14.9
25 mu_0       0.7       1.19    0.882      0             21.1
26 mu_0       0.8       1.46    0.781      0             46.7
27 mu_0       0.9       1.59    0.0954     0             47.9
[1] "Total run time was 168.711 seconds"
