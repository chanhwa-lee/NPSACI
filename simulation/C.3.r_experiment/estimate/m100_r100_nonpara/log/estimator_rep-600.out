
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1242"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  3  6  6  9  7  5 10  3  4  4  9  6  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03225 0.32095 0.58654 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
731 511 
[1] "treatment indicator table: "

  0   1 
457 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 143.674 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.441 0.0905
 2 mu         0.1   0.2 0.548 0.107 
 3 mu         0.1   0.3 0.660 0.122 
 4 mu         0.1   0.4 0.739 0.134 
 5 mu         0.1   0.5 0.830 0.175 
 6 mu         0.2   0.1 0.377 0.0446
 7 mu         0.2   0.2 0.449 0.0558
 8 mu         0.2   0.3 0.563 0.0674
 9 mu         0.2   0.4 0.624 0.0680
10 mu         0.2   0.5 0.680 0.0829
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10         0.648   0.00260     18.8 
 2 mu         0.2      0.983        0.948   0.0726       6.05
 3 mu         0.3      0.971        0.985   0.356        2.36
 4 mu         0.4      0.968        0.993   0.500        1.69
 5 mu         0.5      0.976        0.991   0.689        1.23
 6 mu         0.6      0.999        1       0.853        1.19
 7 mu         0.7      1.02         1.01    0.804        1.27
 8 mu         0.8      1.02         1.00    0.788        1.31
 9 mu         0.9      1.03         1.00    0.557        1.76
10 mu_1       0.1      0.865        0.876   0.00969      2.80
11 mu_1       0.2      0.933        0.951   0.147        2.39
12 mu_1       0.3      0.961        0.987   0.444        2.27
13 mu_1       0.4      0.966        0.986   0.543        1.41
14 mu_1       0.5      0.981        0.993   0.770        1.16
15 mu_1       0.6      1.01         1       0.844        1.20
16 mu_1       0.7      1.02         1.01    0.789        1.31
17 mu_1       0.8      1.02         1.00    0.780        1.36
18 mu_1       0.9      1.03         1       0.538        1.79
19 mu_0       0.1      1.12         0.620   0.00181     20.9 
20 mu_0       0.2      0.995        0.918   0.0540       7.44
21 mu_0       0.3      0.976        0.965   0.285        2.62
22 mu_0       0.4      0.970        0.990   0.471        1.88
23 mu_0       0.5      0.970        0.988   0.609        1.35
24 mu_0       0.6      0.988        0.998   0.816        1.18
25 mu_0       0.7      1.01         1       0.840        1.20
26 mu_0       0.8      1.02         1       0.768        1.39
27 mu_0       0.9      1.01         1       0.660        1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.32    0.0000920  4.96e-17    180.  
 2 mu         0.2       1.46    0.00717    1.30e-11     48.6 
 3 mu         0.3       1.26    0.0885     1.92e- 8     27.3 
 4 mu         0.4       1.20    0.403      3.41e- 6     21.6 
 5 mu         0.5       1.15    0.839      1.89e- 4     10.2 
 6 mu         0.6       1.14    1.05       1.11e- 3      4.50
 7 mu         0.7       1.19    1.15       9.75e- 6      3.96
 8 mu         0.8       1.27    0.895      1.13e- 8      5.24
 9 mu         0.9       1.54    0.235      9.71e-14     21.8 
10 mu_1       0.1       1.93    0.000694   4.96e-16    100.  
11 mu_1       0.2       1.30    0.0267     6.50e-11     27.6 
12 mu_1       0.3       1.26    0.201      6.41e- 8     28.0 
13 mu_1       0.4       1.21    0.590      8.52e- 6     16.6 
14 mu_1       0.5       1.16    0.887      3.78e- 4      6.33
15 mu_1       0.6       1.17    1.09       1.03e- 4      4.57
16 mu_1       0.7       1.21    1.20       7.74e- 7      3.91
17 mu_1       0.8       1.29    0.797      7.86e-10      6.21
18 mu_1       0.9       1.57    0.175      5.99e-15     23.0 
19 mu_0       0.1       2.37    0.0000287  0           189.  
20 mu_0       0.2       1.49    0.00258    0            57.4 
21 mu_0       0.3       1.26    0.0396     0            27.0 
22 mu_0       0.4       1.20    0.217      0            24.9 
23 mu_0       0.5       1.14    0.621      0            14.1 
24 mu_0       0.6       1.11    0.926      0             5.62
25 mu_0       0.7       1.14    1.08       0             4.52
26 mu_0       0.8       1.20    1.09       0             4.00
27 mu_0       0.9       1.34    0.366      0            11.5 
[1] "Total run time was 147.528 seconds"
