
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  8  5  3  6  7  4  4 12  6 10  5  6  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0256  0.3217  0.5916  0.9835  4.9081 
[1] "event indicator table: "

  0   1 
709 532 
[1] "treatment indicator table: "

  0   1 
488 753 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 113.759 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.440 0.0919
 2 mu         0.1   0.2 0.615 0.124 
 3 mu         0.1   0.3 0.629 0.121 
 4 mu         0.1   0.4 0.649 0.118 
 5 mu         0.1   0.5 0.685 0.101 
 6 mu         0.2   0.1 0.382 0.0658
 7 mu         0.2   0.2 0.516 0.0748
 8 mu         0.2   0.3 0.540 0.0744
 9 mu         0.2   0.4 0.567 0.0752
10 mu         0.2   0.5 0.604 0.0592
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.849    0.0261      6.14
 2 mu         0.2      0.996        1        0.253       2.65
 3 mu         0.3      0.998        1        0.546       1.58
 4 mu         0.4      0.997        1        0.696       1.22
 5 mu         0.5      0.996        1        0.833       1.14
 6 mu         0.6      0.999        1        0.871       1.14
 7 mu         0.7      1.01         1        0.846       1.31
 8 mu         0.8      1.02         1        0.633       1.44
 9 mu         0.9      1.02         1        0.428       1.83
10 mu_1       0.1      1.00         1        0.0736      3.65
11 mu_1       0.2      0.992        1        0.390       2.11
12 mu_1       0.3      0.995        1        0.619       1.34
13 mu_1       0.4      0.996        1        0.765       1.22
14 mu_1       0.5      0.997        1        0.854       1.10
15 mu_1       0.6      1.00         1        0.868       1.18
16 mu_1       0.7      1.01         1        0.809       1.33
17 mu_1       0.8      1.02         1        0.607       1.47
18 mu_1       0.9      1.02         1        0.414       1.91
19 mu_0       0.1      1.02         0.821    0.0208      6.71
20 mu_0       0.2      0.997        1        0.219       2.79
21 mu_0       0.3      0.999        1        0.515       1.73
22 mu_0       0.4      0.998        1        0.647       1.27
23 mu_0       0.5      0.996        1        0.794       1.18
24 mu_0       0.6      0.997        1        0.843       1.11
25 mu_0       0.7      1.00         1        0.865       1.26
26 mu_0       0.8      1.01         1        0.738       1.39
27 mu_0       0.9      1.03         1        0.556       1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.389    0.000268   1.09e-15     19.4 
 2 mu         0.2      0.799    0.0146     2.55e-10     18.8 
 3 mu         0.3      0.949    0.150      3.29e- 7      8.54
 4 mu         0.4      0.956    0.567      5.01e- 5      4.58
 5 mu         0.5      0.977    0.999      2.32e- 3      2.73
 6 mu         0.6      1.03     1.11       1.39e- 2      2.76
 7 mu         0.7      1.09     1.07       2.59e- 4      2.65
 8 mu         0.8      1.18     0.658      6.72e- 7      7.63
 9 mu         0.9      1.20     0.0714     1.64e-11     18.2 
10 mu_1       0.1      0.763    0.00184    1.04e-14     27.7 
11 mu_1       0.2      1.01     0.0423     1.21e- 9     13.5 
12 mu_1       0.3      1.02     0.312      1.04e- 6      6.45
13 mu_1       0.4      0.981    0.846      1.19e- 4      3.48
14 mu_1       0.5      1.00     1.02       4.39e- 3      2.42
15 mu_1       0.6      1.05     1.11       4.64e- 3      2.96
16 mu_1       0.7      1.10     1.02       7.39e- 5      3.31
17 mu_1       0.8      1.19     0.509      1.68e- 7      8.35
18 mu_1       0.9      1.18     0.0488     3.65e-12     19.2 
19 mu_0       0.1      0.348    0.0000818  0            18.4 
20 mu_0       0.2      0.747    0.00678    0            20.2 
21 mu_0       0.3      0.920    0.0900     0            10.5 
22 mu_0       0.4      0.939    0.347      0             5.45
23 mu_0       0.5      0.954    0.796      0             3.16
24 mu_0       0.6      1.01     1.02       0             2.46
25 mu_0       0.7      1.07     1.14       0             3.12
26 mu_0       0.8      1.15     0.998      0             4.77
27 mu_0       0.9      1.34     0.239      0            12.4 
[1] "Total run time was 117.103 seconds"
