
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1225"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  7  6 16  4  4  4  5 10  6  7  4  7  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03452 0.32374 0.57505 1.00000 4.98031 
[1] "event indicator table: "

  0   1 
756 469 
[1] "treatment indicator table: "

  0   1 
463 762 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 137.831 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.219 0.141 
 2 mu         0.1   0.2 0.316 0.0832
 3 mu         0.1   0.3 0.315 0.0743
 4 mu         0.1   0.4 0.325 0.0732
 5 mu         0.1   0.5 0.327 0.0705
 6 mu         0.2   0.1 0.268 0.102 
 7 mu         0.2   0.2 0.329 0.0693
 8 mu         0.2   0.3 0.340 0.0590
 9 mu         0.2   0.4 0.359 0.0551
10 mu         0.2   0.5 0.382 0.0450
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.681        0.505  0.000299      2.92
 2 mu         0.2      0.811        0.838  0.0244        1.98
 3 mu         0.3      0.899        0.986  0.189         1.76
 4 mu         0.4      0.949        0.962  0.539         1.22
 5 mu         0.5      0.981        0.991  0.806         1.17
 6 mu         0.6      0.996        1      0.832         1.12
 7 mu         0.7      1.01         1.01   0.764         1.20
 8 mu         0.8      1.03         1      0.353         3.28
 9 mu         0.9      1.17         1      0.0398       20.8 
10 mu_1       0.1      0.755        0.767  0.00127       2.00
11 mu_1       0.2      0.882        0.955  0.0535        2.19
12 mu_1       0.3      0.935        0.980  0.289         1.46
13 mu_1       0.4      0.968        0.984  0.661         1.21
14 mu_1       0.5      0.989        1      0.862         1.14
15 mu_1       0.6      1.00         1      0.817         1.13
16 mu_1       0.7      1.01         1.00   0.709         1.27
17 mu_1       0.8      1.03         1      0.308         3.82
18 mu_1       0.9      1.19         0.997  0.0320       23.0 
19 mu_0       0.1      0.673        0.459  0.000191      3.06
20 mu_0       0.2      0.793        0.790  0.0171        1.92
21 mu_0       0.3      0.884        0.966  0.146         1.88
22 mu_0       0.4      0.937        0.962  0.449         1.32
23 mu_0       0.5      0.972        0.981  0.722         1.20
24 mu_0       0.6      0.991        1      0.855         1.15
25 mu_0       0.7      1.00         1      0.799         1.14
26 mu_0       0.8      1.01         1.00   0.533         1.27
27 mu_0       0.9      1.02         1.01   0.110         1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.63    0.000126   3.08e-14    308.  
 2 mu         0.2       3.39    0.0115     3.59e- 9    240.  
 3 mu         0.3       2.62    0.111      3.09e- 6    124.  
 4 mu         0.4       2.00    0.359      3.53e- 4     48.0 
 5 mu         0.5       1.49    0.780      1.31e- 2     18.5 
 6 mu         0.6       1.18    1.06       2.88e- 2      6.82
 7 mu         0.7       1.30    0.988      1.42e- 3      9.06
 8 mu         0.8       1.97    0.546      1.06e- 5     30.1 
 9 mu         0.9       2.92    0.0577     5.83e-10     87.0 
10 mu_1       0.1       4.26    0.000851   2.91e-13    342.  
11 mu_1       0.2       2.63    0.0391     1.69e- 8    133.  
12 mu_1       0.3       1.99    0.276      9.74e- 6     45.8 
13 mu_1       0.4       1.64    0.602      8.33e- 4     24.2 
14 mu_1       0.5       1.31    0.966      2.47e- 2     15.5 
15 mu_1       0.6       1.15    1.04       4.00e- 3      4.78
16 mu_1       0.7       1.40    0.914      1.69e- 4     12.9 
17 mu_1       0.8       2.12    0.432      1.95e- 6     37.7 
18 mu_1       0.9       3.00    0.0387     1.62e-10     96.6 
19 mu_0       0.1       3.56    0.0000535  0           304.  
20 mu_0       0.2       3.58    0.00586    0           267.  
21 mu_0       0.3       2.89    0.0435     0           157.  
22 mu_0       0.4       2.24    0.200      0            71.2 
23 mu_0       0.5       1.68    0.536      0            24.8 
24 mu_0       0.6       1.21    0.909      0             9.86
25 mu_0       0.7       1.05    1.03       0             2.99
26 mu_0       0.8       1.35    0.874      0            11.3 
27 mu_0       0.9       2.17    0.134      0            31.7 
[1] "Total run time was 141.734 seconds"
