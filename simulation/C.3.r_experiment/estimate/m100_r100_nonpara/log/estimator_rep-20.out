
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1221"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  9  9  3  4 12  3  8  7  8  5  5  3  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05026 0.40695 0.65937 1.00000 5.96277 
[1] "event indicator table: "

  0   1 
699 522 
[1] "treatment indicator table: "

  0   1 
446 775 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 540
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 157.64 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.355 0.0697
 2 mu         0.1   0.2 0.404 0.0584
 3 mu         0.1   0.3 0.423 0.0584
 4 mu         0.1   0.4 0.500 0.0824
 5 mu         0.1   0.5 0.519 0.0838
 6 mu         0.2   0.1 0.330 0.0478
 7 mu         0.2   0.2 0.406 0.0443
 8 mu         0.2   0.3 0.441 0.0396
 9 mu         0.2   0.4 0.517 0.0541
10 mu         0.2   0.5 0.570 0.0548
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.884        0.625  0.000711      8.20
 2 mu         0.2      0.985        0.980  0.0409        3.53
 3 mu         0.3      0.984        1      0.236         2.22
 4 mu         0.4      0.979        0.998  0.524         1.51
 5 mu         0.5      0.986        1      0.727         1.29
 6 mu         0.6      0.996        0.997  0.838         1.25
 7 mu         0.7      1.00         1.00   0.844         1.18
 8 mu         0.8      0.996        1      0.710         1.24
 9 mu         0.9      0.958        0.997  0.380         1.54
10 mu_1       0.1      0.984        0.921  0.00283       4.49
11 mu_1       0.2      1.00         1      0.0860        3.01
12 mu_1       0.3      0.982        1      0.337         1.82
13 mu_1       0.4      0.980        1      0.650         1.45
14 mu_1       0.5      0.989        0.999  0.744         1.27
15 mu_1       0.6      0.998        1      0.869         1.22
16 mu_1       0.7      1.00         1      0.829         1.18
17 mu_1       0.8      0.994        1      0.685         1.27
18 mu_1       0.9      0.953        0.998  0.358         1.55
19 mu_0       0.1      0.873        0.582  0.000475      8.92
20 mu_0       0.2      0.981        0.984  0.0297        3.65
21 mu_0       0.3      0.986        1      0.192         2.40
22 mu_0       0.4      0.979        1      0.441         1.55
23 mu_0       0.5      0.983        1      0.710         1.38
24 mu_0       0.6      0.992        0.997  0.792         1.29
25 mu_0       0.7      1.00         1      0.867         1.17
26 mu_0       0.8      1.01         1.01   0.810         1.18
27 mu_0       0.9      1.00         1      0.520         1.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.410    0.000146   7.61e-13     10.2 
 2 mu         0.2      0.852    0.0121     3.50e- 8     11.9 
 3 mu         0.3      1.02     0.105      1.54e- 5     12.1 
 4 mu         0.4      0.979    0.379      5.44e- 4      6.75
 5 mu         0.5      0.958    0.844      7.92e- 3      3.17
 6 mu         0.6      0.992    1.01       7.06e- 2      2.54
 7 mu         0.7      1.00     1.00       1.38e- 2      3.91
 8 mu         0.8      0.950    0.715      1.82e- 4      3.55
 9 mu         0.9      0.887    0.0916     7.10e- 8     10.7 
10 mu_1       0.1      0.813    0.000878   6.41e-12     12.8 
11 mu_1       0.2      1.06     0.0392     1.47e- 7     14.9 
12 mu_1       0.3      1.03     0.245      4.32e- 5     10.3 
13 mu_1       0.4      0.957    0.654      1.36e- 3      4.50
14 mu_1       0.5      0.959    0.998      1.58e- 2      2.41
15 mu_1       0.6      0.994    0.984      4.38e- 2      2.96
16 mu_1       0.7      0.992    1.05       4.93e- 3      3.91
17 mu_1       0.8      0.940    0.560      5.68e- 5      3.89
18 mu_1       0.9      0.885    0.0624     1.97e- 8     11.9 
19 mu_0       0.1      0.365    0.0000583  0             9.95
20 mu_0       0.2      0.800    0.00524    0            11.2 
21 mu_0       0.3      1.01     0.0486     0            13.0 
22 mu_0       0.4      0.994    0.234      0             8.25
23 mu_0       0.5      0.957    0.697      0             4.03
24 mu_0       0.6      0.990    0.883      0             2.28
25 mu_0       0.7      1.03     1.05       0             3.91
26 mu_0       0.8      0.991    1.03       0             3.34
27 mu_0       0.9      0.901    0.257      0             5.33
[1] "Total run time was 160.948 seconds"
