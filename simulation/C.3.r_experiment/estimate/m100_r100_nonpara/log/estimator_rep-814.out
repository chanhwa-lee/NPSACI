
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1271"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  2  5  9  6  9  5  6 10  5  7  3  9  5  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02632 0.33235 0.60898 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
764 507 
[1] "treatment indicator table: "

  0   1 
489 782 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 667
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 130.549 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.455 0.0720
 2 mu         0.1   0.2 0.606 0.0770
 3 mu         0.1   0.3 0.703 0.106 
 4 mu         0.1   0.4 0.731 0.104 
 5 mu         0.1   0.5 0.751 0.104 
 6 mu         0.2   0.1 0.391 0.0534
 7 mu         0.2   0.2 0.526 0.0455
 8 mu         0.2   0.3 0.592 0.0601
 9 mu         0.2   0.4 0.627 0.0596
10 mu         0.2   0.5 0.645 0.0592
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17         0.890    0.0195     10.6 
 2 mu         0.2      1.10         1.00     0.184       2.89
 3 mu         0.3      1.05         1        0.487       2.09
 4 mu         0.4      1.01         1        0.705       1.51
 5 mu         0.5      0.999        0.999    0.817       1.23
 6 mu         0.6      1.00         1        0.790       1.23
 7 mu         0.7      1.00         1        0.658       1.23
 8 mu         0.8      0.995        1        0.491       1.39
 9 mu         0.9      0.951        0.976    0.318       1.64
10 mu_1       0.1      1.10         1        0.0669      3.88
11 mu_1       0.2      1.07         1        0.347       2.57
12 mu_1       0.3      1.03         1        0.564       1.75
13 mu_1       0.4      1.00         1        0.770       1.41
14 mu_1       0.5      0.999        0.994    0.807       1.23
15 mu_1       0.6      1.00         1        0.788       1.25
16 mu_1       0.7      1.00         1        0.616       1.26
17 mu_1       0.8      0.990        1        0.470       1.42
18 mu_1       0.9      0.945        0.979    0.302       1.71
19 mu_0       0.1      1.17         0.842    0.0142     11.7 
20 mu_0       0.2      1.11         1        0.144       3.07
21 mu_0       0.3      1.06         1        0.427       2.23
22 mu_0       0.4      1.02         1        0.645       1.60
23 mu_0       0.5      0.999        0.992    0.794       1.31
24 mu_0       0.6      0.997        0.998    0.784       1.25
25 mu_0       0.7      1.01         1.00     0.756       1.26
26 mu_0       0.8      1.01         1.01     0.577       1.31
27 mu_0       0.9      1.01         1        0.424       1.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.19     0.0000658  9.58e-14     34.1 
 2 mu         0.2      1.18     0.00751    5.58e- 9     25.5 
 3 mu         0.3      0.969    0.118      3.21e- 6     11.6 
 4 mu         0.4      0.896    0.469      2.74e- 4      7.03
 5 mu         0.5      0.944    0.807      8.12e- 3      4.16
 6 mu         0.6      1.04     0.992      2.40e- 3      3.07
 7 mu         0.7      1.17     1.07       4.99e- 5      3.42
 8 mu         0.8      1.32     0.629      1.95e- 7      9.76
 9 mu         0.9      1.22     0.0575     1.34e-11     19.7 
10 mu_1       0.1      1.50     0.000429   9.02e-13     31.8 
11 mu_1       0.2      1.06     0.0246     2.63e- 8     21.2 
12 mu_1       0.3      0.871    0.240      1.01e- 5      7.96
13 mu_1       0.4      0.869    0.645      6.46e- 4      6.28
14 mu_1       0.5      0.954    0.893      6.06e- 3      3.00
15 mu_1       0.6      1.07     1.08       2.66e- 4      3.33
16 mu_1       0.7      1.20     1.06       4.75e- 6      3.88
17 mu_1       0.8      1.33     0.487      1.63e- 8     10.8 
18 mu_1       0.9      1.18     0.0412     9.93e-13     20.6 
19 mu_0       0.1      1.16     0.0000281  6.26e-15     35.3 
20 mu_0       0.2      1.21     0.00387    4.11e-10     26.5 
21 mu_0       0.3      1.01     0.0490     2.70e- 7     13.8 
22 mu_0       0.4      0.915    0.269      2.69e- 5      7.54
23 mu_0       0.5      0.934    0.596      9.56e- 4      5.35
24 mu_0       0.6      1.00     0.897      5.60e- 3      3.54
25 mu_0       0.7      1.10     0.982      1.55e- 4      3.55
26 mu_0       0.8      1.27     1.10       9.11e- 7      5.96
27 mu_0       0.9      1.57     0.200      1.25e-10     17.8 
[1] "Total run time was 134.356 seconds"
