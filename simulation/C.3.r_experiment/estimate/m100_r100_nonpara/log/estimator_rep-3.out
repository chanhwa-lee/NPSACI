
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1218"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  4  7  9  9  6  6  5  8  2  6  8  4  3  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05734 0.35069 0.61553 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
751 467 
[1] "treatment indicator table: "

  0   1 
414 804 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 841.129 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.322 0.0909
 2 mu         0.1   0.2 0.400 0.121 
 3 mu         0.1   0.3 0.390 0.135 
 4 mu         0.1   0.4 0.384 0.148 
 5 mu         0.1   0.5 0.380 0.163 
 6 mu         0.2   0.1 0.356 0.0864
 7 mu         0.2   0.2 0.445 0.110 
 8 mu         0.2   0.3 0.448 0.120 
 9 mu         0.2   0.4 0.456 0.131 
10 mu         0.2   0.5 0.464 0.143 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.889        0.475 0.0000247     25.1 
 2 mu         0.2      1.01         0.837 0.00515       22.4 
 3 mu         0.3      0.973        0.949 0.0739         9.72
 4 mu         0.4      0.972        0.989 0.316          3.09
 5 mu         0.5      0.991        1     0.613          1.58
 6 mu         0.6      0.997        1     0.787          1.35
 7 mu         0.7      0.986        1     0.612          1.13
 8 mu         0.8      0.965        0.999 0.246          1.29
 9 mu         0.9      0.926        0.973 0.0169         2.08
10 mu_1       0.1      1.10         0.743 0.000120      33.6 
11 mu_1       0.2      1.01         0.934 0.0129        15.5 
12 mu_1       0.3      0.968        0.950 0.128          4.99
13 mu_1       0.4      0.979        1     0.450          1.68
14 mu_1       0.5      0.996        1     0.737          1.50
15 mu_1       0.6      0.995        1     0.773          1.24
16 mu_1       0.7      0.982        1     0.565          1.13
17 mu_1       0.8      0.961        0.995 0.210          1.36
18 mu_1       0.9      0.922        0.967 0.0131         2.17
19 mu_0       0.1      0.866        0.431 0.0000141     24.1 
20 mu_0       0.2      1.01         0.822 0.00322       24.1 
21 mu_0       0.3      0.975        0.933 0.0510        11.7 
22 mu_0       0.4      0.967        0.990 0.226          4.05
23 mu_0       0.5      0.986        1     0.489          1.66
24 mu_0       0.6      0.999        1     0.770          1.51
25 mu_0       0.7      0.995        0.999 0.720          1.25
26 mu_0       0.8      0.980        1     0.392          1.17
27 mu_0       0.9      0.965        1     0.0517         1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      25.2     0.000102   1.56e-15   2190.  
 2 mu         0.2      21.0     0.00665    2.31e-10   1517.  
 3 mu         0.3      12.3     0.0537     1.99e- 7    684.  
 4 mu         0.4       6.08    0.265      2.27e- 5    228.  
 5 mu         0.5       2.79    0.641      8.39e- 4     66.2 
 6 mu         0.6       1.49    1.02       1.49e- 2     16.0 
 7 mu         0.7       1.45    1.07       2.64e- 2     19.9 
 8 mu         0.8       2.65    0.746      1.01e- 3     65.6 
 9 mu         0.9       5.50    0.232      8.01e- 7    234.  
10 mu_1       0.1      28.8     0.000692   1.48e-14   2190.  
11 mu_1       0.2      14.0     0.0264     1.09e- 9    759.  
12 mu_1       0.3       6.71    0.134      6.26e- 7    234.  
13 mu_1       0.4       3.32    0.465      5.36e- 5     91.1 
14 mu_1       0.5       1.80    0.901      1.59e- 3     26.5 
15 mu_1       0.6       1.28    1.04       2.34e- 2      5.33
16 mu_1       0.7       1.55    1.01       1.69e- 2     25.1 
17 mu_1       0.8       2.90    0.659      5.70e- 4     72.4 
18 mu_1       0.9       5.67    0.172      3.56e- 7    247.  
19 mu_0       0.1      24.8     0.0000378  0          2190.  
20 mu_0       0.2      22.8     0.00185    0          1707.  
21 mu_0       0.3      14.7     0.0247     0           880.  
22 mu_0       0.4       7.92    0.120      0           342.  
23 mu_0       0.5       3.79    0.383      0           106.  
24 mu_0       0.6       1.80    0.829      0            32.0 
25 mu_0       0.7       1.22    1.05       0             7.81
26 mu_0       0.8       1.65    1.03       0            38.6 
27 mu_0       0.9       3.91    0.344      0           117.  
[1] "Total run time was 849.414 seconds"
