
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1273"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5  9  3  4  5  6  6  2  9  9  5  4 11  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02307 0.30978 0.57971 0.94107 5.00000 
[1] "event indicator table: "

  0   1 
770 503 
[1] "treatment indicator table: "

  0   1 
468 805 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 119.228 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.201 0.0667
 2 mu         0.1   0.2 0.179 0.0934
 3 mu         0.1   0.3 0.274 0.0818
 4 mu         0.1   0.4 0.392 0.0666
 5 mu         0.1   0.5 0.398 0.0683
 6 mu         0.2   0.1 0.263 0.0412
 7 mu         0.2   0.2 0.283 0.0604
 8 mu         0.2   0.3 0.364 0.0558
 9 mu         0.2   0.4 0.473 0.0448
10 mu         0.2   0.5 0.503 0.0454
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.795        0.450  0.000621      6.81
 2 mu         0.2      0.986        0.932  0.0490        4.35
 3 mu         0.3      1.03         1      0.276         1.85
 4 mu         0.4      1.03         1      0.656         1.57
 5 mu         0.5      1.02         1      0.751         1.37
 6 mu         0.6      0.999        1      0.687         1.24
 7 mu         0.7      0.986        0.998  0.794         1.29
 8 mu         0.8      0.981        0.989  0.649         1.33
 9 mu         0.9      0.988        1      0.208         2.74
10 mu_1       0.1      0.937        0.756  0.00255       7.61
11 mu_1       0.2      1.03         1      0.103         2.66
12 mu_1       0.3      1.04         1      0.394         1.71
13 mu_1       0.4      1.03         1      0.780         1.58
14 mu_1       0.5      1.01         1.00   0.708         1.26
15 mu_1       0.6      0.994        0.999  0.697         1.23
16 mu_1       0.7      0.984        0.996  0.780         1.31
17 mu_1       0.8      0.979        0.994  0.591         1.35
18 mu_1       0.9      0.989        1      0.186         2.94
19 mu_0       0.1      0.780        0.403  0.000407      6.72
20 mu_0       0.2      0.976        0.892  0.0355        4.78
21 mu_0       0.3      1.03         1      0.226         1.97
22 mu_0       0.4      1.03         1      0.573         1.61
23 mu_0       0.5      1.02         1      0.794         1.48
24 mu_0       0.6      1.01         1      0.672         1.25
25 mu_0       0.7      0.993        1.00   0.755         1.23
26 mu_0       0.8      0.986        0.997  0.754         1.37
27 mu_0       0.9      0.976        1      0.405         1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.12   0.0000160   1.20e-13     82.2 
 2 mu         0.2       1.35   0.00311     6.14e- 9     56.9 
 3 mu         0.3       1.38   0.0431      2.69e- 6     25.7 
 4 mu         0.4       1.22   0.260       2.01e- 4     10.9 
 5 mu         0.5       1.07   0.714       5.65e- 3      7.81
 6 mu         0.6       1.05   0.864       6.68e- 2     11.7 
 7 mu         0.7       1.10   1.03        6.43e- 3      7.43
 8 mu         0.8       1.23   0.553       4.29e- 5      8.15
 9 mu         0.9       1.46   0.0780      4.72e- 9     38.6 
10 mu_1       0.1       1.54   0.000111    1.07e-12     82.2 
11 mu_1       0.2       1.38   0.0101      2.76e- 8     28.5 
12 mu_1       0.3       1.29   0.101       8.96e- 6     13.7 
13 mu_1       0.4       1.10   0.428       5.03e- 4      9.10
14 mu_1       0.5       1.01   0.785       1.00e- 2      9.37
15 mu_1       0.6       1.04   0.918       5.56e- 2     11.7 
16 mu_1       0.7       1.11   0.893       2.42e- 3      6.37
17 mu_1       0.8       1.26   0.460       1.41e- 5      9.51
18 mu_1       0.9       1.50   0.0530      1.38e- 9     42.8 
19 mu_0       0.1       1.07   0.00000554  0            82.2 
20 mu_0       0.2       1.34   0.00117     0            64.0 
21 mu_0       0.3       1.42   0.0224      0            33.0 
22 mu_0       0.4       1.30   0.142       0            12.8 
23 mu_0       0.5       1.12   0.498       0             6.53
24 mu_0       0.6       1.06   0.854       0            11.7 
25 mu_0       0.7       1.07   0.982       0             9.91
26 mu_0       0.8       1.11   0.865       0             5.73
27 mu_0       0.9       1.14   0.212       0            14.1 
[1] "Total run time was 123.15 seconds"
