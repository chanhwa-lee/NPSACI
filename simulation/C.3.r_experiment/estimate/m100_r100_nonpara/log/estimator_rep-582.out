
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1253"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5 11  6  4  6  5  3  5 11  7  5  7  9  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01869 0.30252 0.58131 1.00000 4.61805 
[1] "event indicator table: "

  0   1 
704 549 
[1] "treatment indicator table: "

  0   1 
535 718 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 120.077 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.385 0.0736
 2 mu         0.1   0.2 0.445 0.0958
 3 mu         0.1   0.3 0.483 0.0812
 4 mu         0.1   0.4 0.495 0.0820
 5 mu         0.1   0.5 0.553 0.0932
 6 mu         0.2   0.1 0.369 0.0632
 7 mu         0.2   0.2 0.442 0.0788
 8 mu         0.2   0.3 0.472 0.0630
 9 mu         0.2   0.4 0.495 0.0556
10 mu         0.2   0.5 0.556 0.0684
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.928        0.739  0.000868     11.7 
 2 mu         0.2      1.01         0.991  0.0385        9.19
 3 mu         0.3      1.05         1      0.232         5.13
 4 mu         0.4      1.04         1      0.548         2.63
 5 mu         0.5      1.02         1.00   0.792         1.57
 6 mu         0.6      1.00         1      0.803         1.22
 7 mu         0.7      0.989        0.998  0.705         1.46
 8 mu         0.8      0.971        0.989  0.381         1.53
 9 mu         0.9      0.958        0.948  0.0640        2.33
10 mu_1       0.1      0.978        0.875  0.00332      12.8 
11 mu_1       0.2      1.06         1      0.0783        5.74
12 mu_1       0.3      1.05         1      0.341         2.97
13 mu_1       0.4      1.03         1      0.657         1.88
14 mu_1       0.5      1.01         1      0.834         1.40
15 mu_1       0.6      0.998        1      0.759         1.28
16 mu_1       0.7      0.986        0.993  0.661         1.49
17 mu_1       0.8      0.968        0.987  0.337         1.51
18 mu_1       0.9      0.956        0.948  0.0525        2.50
19 mu_0       0.1      0.922        0.714  0.000534     11.6 
20 mu_0       0.2      0.997        0.959  0.0286       10.1 
21 mu_0       0.3      1.05         1      0.172         6.15
22 mu_0       0.4      1.04         1      0.457         3.30
23 mu_0       0.5      1.02         1.01   0.722         1.85
24 mu_0       0.6      1.01         1      0.819         1.30
25 mu_0       0.7      0.995        1      0.768         1.40
26 mu_0       0.8      0.982        0.998  0.557         1.60
27 mu_0       0.9      0.970        0.999  0.168         1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     376.       0.000989  1.18e-12  34782.  
 2 mu         0.2     170.       0.0329    5.43e- 8  15045.  
 3 mu         0.3      48.2      0.222     2.39e- 5   3977.  
 4 mu         0.4      10.7      0.743     1.28e- 3    715.  
 5 mu         0.5       2.67     1.11      1.93e- 2     83.5 
 6 mu         0.6       1.44     1.12      3.51e- 2      6.11
 7 mu         0.7       1.47     1.02      7.57e- 4      9.63
 8 mu         0.8       1.62     0.591     1.00e- 6     24.4 
 9 mu         0.9       1.67     0.103     9.69e-12     39.6 
10 mu_1       0.1     282.       0.00662   9.94e-12  24845.  
11 mu_1       0.2      67.1      0.0960    2.29e- 7   5373.  
12 mu_1       0.3      14.5      0.450     6.71e- 5    947.  
13 mu_1       0.4       3.72     1.03      2.96e- 3    128.  
14 mu_1       0.5       1.68     1.15      3.59e- 2     11.9 
15 mu_1       0.6       1.39     0.994     7.79e- 3      6.06
16 mu_1       0.7       1.51     0.946     1.14e- 4     12.5 
17 mu_1       0.8       1.65     0.473     1.32e- 7     27.7 
18 mu_1       0.9       1.67     0.0701    1.13e-12     40.0 
19 mu_0       0.1     386.       0.000280  0         35887.  
20 mu_0       0.2     196.       0.0128    0         17463.  
21 mu_0       0.3      62.7      0.133     0          5276.  
22 mu_0       0.4      15.3      0.497     0          1106.  
23 mu_0       0.5       3.66     0.940     0           155.  
24 mu_0       0.6       1.52     1.17      0            12.8 
25 mu_0       0.7       1.36     0.964     0             8.21
26 mu_0       0.8       1.51     0.989     0            11.1 
27 mu_0       0.9       1.68     0.246     0            36.0 
[1] "Total run time was 123.341 seconds"
