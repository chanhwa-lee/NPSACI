
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1261"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  6 10  3  7  9  8  4  5 10  6  9  6  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03057 0.31719 0.61420 0.99340 5.00000 
[1] "event indicator table: "

  0   1 
761 500 
[1] "treatment indicator table: "

  0   1 
428 833 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 105.685 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.208 0.0867
 2 mu         0.1   0.2 0.260 0.114 
 3 mu         0.1   0.3 0.361 0.153 
 4 mu         0.1   0.4 0.432 0.168 
 5 mu         0.1   0.5 0.398 0.144 
 6 mu         0.2   0.1 0.280 0.0854
 7 mu         0.2   0.2 0.366 0.114 
 8 mu         0.2   0.3 0.481 0.153 
 9 mu         0.2   0.4 0.571 0.170 
10 mu         0.2   0.5 0.556 0.148 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.525        0.159  0.00114      14.1 
 2 mu         0.2      0.837        0.546  0.0422       15.7 
 3 mu         0.3      0.906        0.807  0.190         6.26
 4 mu         0.4      0.949        0.944  0.439         1.89
 5 mu         0.5      0.981        0.986  0.698         1.41
 6 mu         0.6      0.998        1      0.858         1.25
 7 mu         0.7      1.01         1      0.854         1.23
 8 mu         0.8      1.01         1      0.746         1.44
 9 mu         0.9      1.01         1      0.365         2.03
10 mu_1       0.1      0.835        0.415  0.00424      21.2 
11 mu_1       0.2      0.946        0.799  0.0990       12.1 
12 mu_1       0.3      0.949        0.945  0.312         3.70
13 mu_1       0.4      0.972        0.984  0.575         1.56
14 mu_1       0.5      0.990        0.995  0.760         1.37
15 mu_1       0.6      1.00         1      0.880         1.18
16 mu_1       0.7      1.01         1      0.851         1.23
17 mu_1       0.8      1.01         1      0.714         1.49
18 mu_1       0.9      1.01         1.00   0.330         2.11
19 mu_0       0.1      0.490        0.127  0.000799     13.3 
20 mu_0       0.2      0.809        0.493  0.0280       16.6 
21 mu_0       0.3      0.888        0.757  0.137         7.35
22 mu_0       0.4      0.934        0.911  0.348         2.30
23 mu_0       0.5      0.972        0.983  0.601         1.46
24 mu_0       0.6      0.995        0.997  0.780         1.35
25 mu_0       0.7      1.01         1      0.858         1.24
26 mu_0       0.8      1.01         1.00   0.802         1.23
27 mu_0       0.9      1.02         1      0.659         1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.86    0.0000325  8.97e-16    172.  
 2 mu         0.2       2.85    0.00383    1.18e-10    235.  
 3 mu         0.3       1.98    0.0472     1.16e- 7    107.  
 4 mu         0.4       1.44    0.263      1.54e- 5     25.1 
 5 mu         0.5       1.26    0.732      6.84e- 4     11.3 
 6 mu         0.6       1.16    1.11       1.52e- 2      3.61
 7 mu         0.7       1.12    1.14       4.10e- 3      3.02
 8 mu         0.8       1.32    0.825      1.40e- 5     12.3 
 9 mu         0.9       2.18    0.153      6.08e-10     67.0 
10 mu_1       0.1       3.28    0.000250   8.97e-15    286.  
11 mu_1       0.2       2.76    0.0122     5.88e-10    195.  
12 mu_1       0.3       1.70    0.108      3.86e- 7     59.4 
13 mu_1       0.4       1.35    0.442      3.85e- 5     17.1 
14 mu_1       0.5       1.23    0.987      1.37e- 3      8.44
15 mu_1       0.6       1.14    1.14       2.53e- 2      2.98
16 mu_1       0.7       1.13    1.16       9.77e- 4      3.74
17 mu_1       0.8       1.37    0.656      2.91e- 6     13.7 
18 mu_1       0.9       2.27    0.112      1.13e-10     74.5 
19 mu_0       0.1       1.70    0.0000108  0           159.  
20 mu_0       0.2       2.87    0.00147    0           244.  
21 mu_0       0.3       2.10    0.0225     0           127.  
22 mu_0       0.4       1.49    0.138      0            34.8 
23 mu_0       0.5       1.30    0.488      0            14.1 
24 mu_0       0.6       1.19    1.04       0             5.64
25 mu_0       0.7       1.12    1.12       0             2.64
26 mu_0       0.8       1.15    1.16       0             6.45
27 mu_0       0.9       1.33    0.381      0            23.9 
[1] "Total run time was 108.617 seconds"
