
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1285"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  3  5  5  5  4  9 12  6  6  9  7  9  1  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03286 0.30262 0.56087 0.94177 5.00000 
[1] "event indicator table: "

  0   1 
740 545 
[1] "treatment indicator table: "

  0   1 
530 755 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 674
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 559.986 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.210 0.0421
 2 mu         0.1   0.2 0.352 0.0786
 3 mu         0.1   0.3 0.392 0.0739
 4 mu         0.1   0.4 0.430 0.0799
 5 mu         0.1   0.5 0.461 0.0816
 6 mu         0.2   0.1 0.235 0.0464
 7 mu         0.2   0.2 0.383 0.0779
 8 mu         0.2   0.3 0.429 0.0760
 9 mu         0.2   0.4 0.480 0.0811
10 mu         0.2   0.5 0.524 0.0828
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.916        0.722  0.00135      14.2 
 2 mu         0.2      1.08         0.918  0.0668       17.8 
 3 mu         0.3      1.05         0.974  0.362         8.02
 4 mu         0.4      1.02         1      0.616         2.67
 5 mu         0.5      1.01         0.997  0.809         1.34
 6 mu         0.6      1.00         1      0.877         1.13
 7 mu         0.7      1.00         1      0.796         1.24
 8 mu         0.8      0.998        1      0.505         1.46
 9 mu         0.9      0.978        1      0.117         2.31
10 mu_1       0.1      1.12         0.937  0.00509      22.5 
11 mu_1       0.2      1.10         0.975  0.133        14.5 
12 mu_1       0.3      1.04         1      0.487         4.89
13 mu_1       0.4      1.01         0.997  0.765         1.83
14 mu_1       0.5      1.00         1      0.830         1.19
15 mu_1       0.6      1.00         1.00   0.865         1.14
16 mu_1       0.7      1.00         1      0.762         1.29
17 mu_1       0.8      0.997        1      0.466         1.48
18 mu_1       0.9      0.976        1      0.101         2.49
19 mu_0       0.1      0.894        0.692  0.000938     13.3 
20 mu_0       0.2      1.07         0.892  0.0503       18.6 
21 mu_0       0.3      1.06         0.963  0.296         9.35
22 mu_0       0.4      1.02         1      0.518         3.24
23 mu_0       0.5      1.01         0.999  0.720         1.50
24 mu_0       0.6      1.00         1      0.855         1.15
25 mu_0       0.7      1.00         1      0.856         1.15
26 mu_0       0.8      1.00         1      0.663         1.39
27 mu_0       0.9      0.988        1.00   0.265         1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.66     0.0000598  5.51e-15    139.  
 2 mu         0.2      4.90     0.00581    7.22e-10    214.  
 3 mu         0.3      3.45     0.0891     7.12e- 7    111.  
 4 mu         0.4      1.77     0.428      9.47e- 5     30.5 
 5 mu         0.5      1.13     0.878      4.20e- 3      5.46
 6 mu         0.6      1.06     1.05       1.18e- 2      2.34
 7 mu         0.7      1.09     1.05       3.34e- 4      2.80
 8 mu         0.8      1.30     0.446      1.71e- 6     12.4 
 9 mu         0.9      2.64     0.0423     1.49e-10     91.9 
10 mu_1       0.1      5.08     0.000345   5.51e-14    246.  
11 mu_1       0.2      4.92     0.0192     3.61e- 9    189.  
12 mu_1       0.3      2.60     0.177      2.37e- 6     65.5 
13 mu_1       0.4      1.35     0.677      2.37e- 4     13.5 
14 mu_1       0.5      1.06     1.07       8.41e- 3      3.64
15 mu_1       0.6      1.08     1.10       3.47e- 3      2.26
16 mu_1       0.7      1.11     0.981      8.43e- 5      3.25
17 mu_1       0.8      1.37     0.354      3.77e- 7     15.5 
18 mu_1       0.9      2.81     0.0282     2.91e-11    102.  
19 mu_0       0.1      2.39     0.0000184  0           127.  
20 mu_0       0.2      4.89     0.00226    0           220.  
21 mu_0       0.3      3.82     0.0460     0           131.  
22 mu_0       0.4      2.04     0.239      0            41.9 
23 mu_0       0.5      1.19     0.666      0             8.74
24 mu_0       0.6      1.04     1.07       0             3.04
25 mu_0       0.7      1.04     1.06       0             2.61
26 mu_0       0.8      0.995    0.621      0             4.59
27 mu_0       0.9      1.16     0.124      0            19.1 
[1] "Total run time was 570.378 seconds"
