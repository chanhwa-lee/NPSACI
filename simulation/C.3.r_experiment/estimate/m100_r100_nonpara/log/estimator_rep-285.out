
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1280"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  6  3  8 10  8  5  6  6  8 10  5  7  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02056 0.27680 0.55777 0.98591 5.00000 
[1] "event indicator table: "

  0   1 
750 530 
[1] "treatment indicator table: "

  0   1 
495 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 672
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 125.382 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.167 0.189
 2 mu         0.1   0.2 0.316 0.221
 3 mu         0.1   0.3 0.352 0.257
 4 mu         0.1   0.4 0.341 0.276
 5 mu         0.1   0.5 0.505 0.193
 6 mu         0.2   0.1 0.234 0.183
 7 mu         0.2   0.2 0.412 0.223
 8 mu         0.2   0.3 0.450 0.263
 9 mu         0.2   0.4 0.447 0.281
10 mu         0.2   0.5 0.618 0.206
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.410 0.0000750     21.7 
 2 mu         0.2      1.28         0.856 0.00817       33.5 
 3 mu         0.3      1.15         0.977 0.0823        17.8 
 4 mu         0.4      1.04         1     0.298          5.62
 5 mu         0.5      1.01         1     0.598          1.90
 6 mu         0.6      1.00         1     0.789          1.24
 7 mu         0.7      0.995        1     0.787          1.30
 8 mu         0.8      0.994        1     0.561          2.42
 9 mu         0.9      0.976        1     0.120          3.63
10 mu_1       0.1      1.36         0.694 0.000361      38.4 
11 mu_1       0.2      1.28         0.939 0.0209        29.7 
12 mu_1       0.3      1.10         1     0.143         10.8 
13 mu_1       0.4      1.03         1     0.403          3.11
14 mu_1       0.5      1.01         1     0.690          1.48
15 mu_1       0.6      1.00         1     0.784          1.23
16 mu_1       0.7      0.994        1     0.722          1.39
17 mu_1       0.8      0.994        1     0.517          2.59
18 mu_1       0.9      0.971        1     0.103          3.60
19 mu_0       0.1      1.04         0.373 0.0000413     20.9 
20 mu_0       0.2      1.28         0.791 0.00499       34.5 
21 mu_0       0.3      1.17         0.951 0.0562        20.8 
22 mu_0       0.4      1.06         1.00  0.227          7.29
23 mu_0       0.5      1.02         1     0.507          2.32
24 mu_0       0.6      1.01         1     0.772          1.34
25 mu_0       0.7      0.998        1     0.780          1.21
26 mu_0       0.8      0.994        0.997 0.726          1.75
27 mu_0       0.9      1.02         1     0.269          3.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      13.1     0.000115   1.19e-15   1230.  
 2 mu         0.2      16.8     0.00955    2.77e-10   1515.  
 3 mu         0.3      10.7     0.0872     3.58e- 7    897.  
 4 mu         0.4       4.90    0.369      5.44e- 5    341.  
 5 mu         0.5       2.15    0.855      2.52e- 3     86.1 
 6 mu         0.6       1.40    1.14       5.36e- 2     13.3 
 7 mu         0.7       1.59    1.16       9.83e- 3     18.9 
 8 mu         0.8       2.23    0.559      7.54e- 5     54.2 
 9 mu         0.9       2.27    0.0596     1.31e- 8     50.1 
10 mu_1       0.1      22.1     0.000668   1.13e-14   2050.  
11 mu_1       0.2      14.6     0.0331     1.31e- 9   1263.  
12 mu_1       0.3       6.66    0.197      1.13e- 6    498.  
13 mu_1       0.4       2.82    0.603      1.29e- 4    142.  
14 mu_1       0.5       1.52    0.970      4.77e- 3     28.7 
15 mu_1       0.6       1.32    1.09       6.97e- 2      4.61
16 mu_1       0.7       1.69    1.08       2.63e- 3     22.9 
17 mu_1       0.8       2.32    0.450      1.77e- 5     57.5 
18 mu_1       0.9       2.24    0.0426     2.73e- 9     47.4 
19 mu_0       0.1      12.1     0.0000413  0          1139.  
20 mu_0       0.2      17.4     0.00455    0          1578.  
21 mu_0       0.3      12.4     0.0423     0          1068.  
22 mu_0       0.4       6.29    0.223      0           474.  
23 mu_0       0.5       2.79    0.741      0           144.  
24 mu_0       0.6       1.50    1.02       0            27.7 
25 mu_0       0.7       1.37    1.14       0             9.44
26 mu_0       0.8       1.90    0.962      0            40.6 
27 mu_0       0.9       2.55    0.192      0            75.2 
[1] "Total run time was 128.695 seconds"
