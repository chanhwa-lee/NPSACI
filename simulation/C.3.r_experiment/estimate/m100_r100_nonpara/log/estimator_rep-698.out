
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1301"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  8  4  3  8  3  7  6  7  8  8  9  2  5 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0798  0.4683  0.6987  1.0000  7.0000 
[1] "event indicator table: "

  0   1 
773 528 
[1] "treatment indicator table: "

  0   1 
435 866 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 137.727 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.174 0.0898
 2 mu         0.1   0.2 0.198 0.0621
 3 mu         0.1   0.3 0.190 0.0495
 4 mu         0.1   0.4 0.199 0.0637
 5 mu         0.1   0.5 0.285 0.0765
 6 mu         0.2   0.1 0.256 0.0884
 7 mu         0.2   0.2 0.293 0.0679
 8 mu         0.2   0.3 0.304 0.0574
 9 mu         0.2   0.4 0.335 0.0692
10 mu         0.2   0.5 0.426 0.0858
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.372       0.108  0.000000473      2.18
 2 mu         0.2      0.671       0.488  0.000395         7.57
 3 mu         0.3      0.864       0.814  0.0126           6.94
 4 mu         0.4      0.951       0.948  0.0990           3.44
 5 mu         0.5      0.990       1.00   0.339            1.93
 6 mu         0.6      1.00        1      0.666            1.53
 7 mu         0.7      1.00        1      0.803            1.22
 8 mu         0.8      0.986       0.996  0.465            1.37
 9 mu         0.9      0.937       0.905  0.0787           2.40
10 mu_1       0.1      0.573       0.290  0.00000275       5.13
11 mu_1       0.2      0.817       0.708  0.00115          8.94
12 mu_1       0.3      0.930       0.912  0.0248           5.60
13 mu_1       0.4      0.977       0.974  0.149            2.65
14 mu_1       0.5      0.999       1      0.421            1.80
15 mu_1       0.6      1.01        1.00   0.731            1.41
16 mu_1       0.7      1.00        1.00   0.773            1.18
17 mu_1       0.8      0.982       0.999  0.421            1.44
18 mu_1       0.9      0.932       0.896  0.0665           2.54
19 mu_0       0.1      0.350       0.0848 0.000000220      1.91
20 mu_0       0.2      0.634       0.427  0.000205         7.23
21 mu_0       0.3      0.837       0.747  0.00741          7.51
22 mu_0       0.4      0.935       0.931  0.0660           4.13
23 mu_0       0.5      0.980       0.997  0.257            2.05
24 mu_0       0.6      0.999       1      0.535            1.71
25 mu_0       0.7      1.00        1.00   0.741            1.34
26 mu_0       0.8      1.00        1      0.641            1.27
27 mu_0       0.9      0.988       1      0.188            1.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value  max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>      <dbl>
 1 mu         0.1   14191.     0.0000148   1.46e-16 1361221.  
 2 mu         0.2   15271.     0.00309     3.82e-11 1470367.  
 3 mu         0.3    5390.     0.0484      5.65e- 8  512668.  
 4 mu         0.4     962.     0.206       1.00e- 5   88421.  
 5 mu         0.5      93.5    0.561       5.56e- 4    7784.  
 6 mu         0.6       5.90   0.950       1.48e- 2     303.  
 7 mu         0.7       1.30   0.992       6.83e- 2       6.48
 8 mu         0.8       1.47   0.887       2.64e- 3      25.4 
 9 mu         0.9       3.35   0.217       5.95e- 8     188.  
10 mu_1       0.1   21246.     0.0000991   1.46e-15 2041831.  
11 mu_1       0.2   11437.     0.0103      1.91e-10 1102775.  
12 mu_1       0.3    2693.     0.0961      1.88e- 7  256334.  
13 mu_1       0.4     362.     0.383       2.50e- 5   33158.  
14 mu_1       0.5      29.4    0.767       1.11e- 3    2335.  
15 mu_1       0.6       2.46   0.926       2.47e- 2      75.7 
16 mu_1       0.7       1.20   1.01        3.66e- 2       6.98
17 mu_1       0.8       1.54   0.736       1.03e- 3      31.7 
18 mu_1       0.9       3.59   0.162       9.92e- 9     209.  
19 mu_0       0.1   13407.     0.00000473  0        1285597.  
20 mu_0       0.2   16230.     0.00107     0        1562264.  
21 mu_0       0.3    6546.     0.0208      0         622526.  
22 mu_0       0.4    1362.     0.0889      0         125264.  
23 mu_0       0.5     158.     0.354       0          13233.  
24 mu_0       0.6      11.1    0.771       0            644.  
25 mu_0       0.7       1.53   1.02        0             15.2 
26 mu_0       0.8       1.16   0.911       0              9.47
27 mu_0       0.9       1.17   0.314       0             11.0 
[1] "Total run time was 141.109 seconds"
