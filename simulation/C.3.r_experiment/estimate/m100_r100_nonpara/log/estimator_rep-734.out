
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  9  9  4  5  5  5  5  5  6  7  3  8  6  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05971 0.39909 0.64278 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
785 467 
[1] "treatment indicator table: "

  0   1 
371 881 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 425.194 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.231 0.0595
 2 mu         0.1   0.2 0.286 0.0960
 3 mu         0.1   0.3 0.452 0.0979
 4 mu         0.1   0.4 0.444 0.0861
 5 mu         0.1   0.5 0.579 0.182 
 6 mu         0.2   0.1 0.213 0.0417
 7 mu         0.2   0.2 0.352 0.0799
 8 mu         0.2   0.3 0.459 0.0776
 9 mu         0.2   0.4 0.457 0.0711
10 mu         0.2   0.5 0.546 0.123 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.686        0.329 0.000000242      7.86
 2 mu         0.2      0.767        0.783 0.000216         4.92
 3 mu         0.3      0.818        0.913 0.00746          3.71
 4 mu         0.4      0.879        0.982 0.0640           1.78
 5 mu         0.5      0.936        0.997 0.242            1.68
 6 mu         0.6      0.966        0.987 0.525            1.43
 7 mu         0.7      0.981        0.986 0.773            1.22
 8 mu         0.8      0.997        1     0.721            1.25
 9 mu         0.9      1.00         1     0.493            1.71
10 mu_1       0.1      0.755        0.710 0.00000141       4.11
11 mu_1       0.2      0.808        0.891 0.000636         5.27
12 mu_1       0.3      0.852        0.912 0.0149           2.87
13 mu_1       0.4      0.910        1.00  0.0980           1.62
14 mu_1       0.5      0.953        0.998 0.307            1.69
15 mu_1       0.6      0.972        0.989 0.586            1.36
16 mu_1       0.7      0.985        0.990 0.803            1.18
17 mu_1       0.8      1.00         1     0.706            1.27
18 mu_1       0.9      1.00         1     0.462            1.74
19 mu_0       0.1      0.678        0.288 0.000000112      8.51
20 mu_0       0.2      0.756        0.761 0.000111         4.83
21 mu_0       0.3      0.804        0.911 0.00427          4.08
22 mu_0       0.4      0.858        0.941 0.0413           2.05
23 mu_0       0.5      0.919        0.985 0.177            1.68
24 mu_0       0.6      0.956        0.990 0.433            1.57
25 mu_0       0.7      0.972        0.982 0.701            1.35
26 mu_0       0.8      0.985        1     0.782            1.19
27 mu_0       0.9      1.00         1     0.612            1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     263.    0.00000457   1.53e-16  22084.  
 2 mu         0.2     379.    0.000766     2.01e-11  25820.  
 3 mu         0.3     335.    0.0170       1.98e- 8  30236.  
 4 mu         0.4     160.    0.102        2.63e- 6  14722.  
 5 mu         0.5      42.8   0.381        1.17e- 4   3499.  
 6 mu         0.6       7.63  0.905        2.59e- 3    383.  
 7 mu         0.7       1.89  1.20         8.38e- 3     30.9 
 8 mu         0.8       1.31  1.17         1.11e- 5     11.6 
 9 mu         0.9       1.28  0.473        1.07e-10     30.3 
10 mu_1       0.1     343.    0.0000415    1.53e-15  23246.  
11 mu_1       0.2     405.    0.00248      1.00e-10  33973.  
12 mu_1       0.3     282.    0.0403       6.59e- 8  26523.  
13 mu_1       0.4     107.    0.205        6.57e- 6   9685.  
14 mu_1       0.5      25.1   0.597        2.34e- 4   1842.  
15 mu_1       0.6       4.74  1.14         4.32e- 3    168.  
16 mu_1       0.7       1.61  1.30         1.26e- 3     18.6 
17 mu_1       0.8       1.30  1.22         1.46e- 6     13.6 
18 mu_1       0.9       1.27  0.381        1.25e-11     31.4 
19 mu_0       0.1     254.    0.000000362  0         21955.  
20 mu_0       0.2     372.    0.000182     0         23781.  
21 mu_0       0.3     358.    0.00487      0         31827.  
22 mu_0       0.4     195.    0.0375       0         18079.  
23 mu_0       0.5      60.6   0.198        0          5157.  
24 mu_0       0.6      12.0   0.584        0           705.  
25 mu_0       0.7       2.54  1.23         0            59.7 
26 mu_0       0.8       1.38  1.27         0             7.97
27 mu_0       0.9       1.36  0.938        0            20.2 
[1] "Total run time was 430.504 seconds"
