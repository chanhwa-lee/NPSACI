
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1253"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  5  4  9  6  4  9  6  4  8 10  6  5  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04211 0.36841 0.60522 1.00000 4.28472 
[1] "event indicator table: "

  0   1 
744 509 
[1] "treatment indicator table: "

  0   1 
448 805 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 132.797 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.379 0.0563
 2 mu         0.1   0.2 0.472 0.0500
 3 mu         0.1   0.3 0.519 0.0686
 4 mu         0.1   0.4 0.557 0.0974
 5 mu         0.1   0.5 0.682 0.101 
 6 mu         0.2   0.1 0.329 0.0338
 7 mu         0.2   0.2 0.425 0.0302
 8 mu         0.2   0.3 0.491 0.0492
 9 mu         0.2   0.4 0.516 0.0727
10 mu         0.2   0.5 0.606 0.0571
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02         0.976    0.0296      3.38
 2 mu         0.2      1.01         1        0.257       2.15
 3 mu         0.3      1.01         1        0.583       1.74
 4 mu         0.4      1.00         1        0.596       1.33
 5 mu         0.5      1.00         1        0.701       1.28
 6 mu         0.6      1.00         1        0.792       1.37
 7 mu         0.7      0.996        0.998    0.761       1.22
 8 mu         0.8      0.995        1        0.771       1.28
 9 mu         0.9      0.996        1        0.651       1.46
10 mu_1       0.1      1.03         1        0.0908      2.73
11 mu_1       0.2      1.02         1        0.440       2.17
12 mu_1       0.3      1.01         1.00     0.526       1.52
13 mu_1       0.4      1.00         1        0.638       1.30
14 mu_1       0.5      1.00         1        0.729       1.27
15 mu_1       0.6      0.999        1        0.791       1.38
16 mu_1       0.7      0.995        1        0.763       1.20
17 mu_1       0.8      0.996        1        0.760       1.30
18 mu_1       0.9      0.996        1        0.632       1.52
19 mu_0       0.1      1.02         0.946    0.0228      3.50
20 mu_0       0.2      1.01         1        0.211       2.14
21 mu_0       0.3      1.01         1        0.567       1.83
22 mu_0       0.4      1.01         1        0.568       1.34
23 mu_0       0.5      1.00         1        0.673       1.30
24 mu_0       0.6      1.00         1        0.787       1.36
25 mu_0       0.7      0.997        1.00     0.757       1.35
26 mu_0       0.8      0.992        1        0.733       1.24
27 mu_0       0.9      0.996        1        0.736       1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.193    0.000201   8.20e-17      4.21
 2 mu         0.2      0.897    0.0183     2.15e-11     12.4 
 3 mu         0.3      1.48     0.137      3.18e- 8     19.0 
 4 mu         0.4      1.55     0.462      5.64e- 6     12.3 
 5 mu         0.5      1.36     1.10       3.13e- 4      6.70
 6 mu         0.6      1.15     1.13       8.33e- 3      3.27
 7 mu         0.7      1.02     0.876      6.98e- 3      2.86
 8 mu         0.8      1.05     0.854      4.74e- 5      4.43
 9 mu         0.9      1.31     0.137      5.21e- 9     15.0 
10 mu_1       0.1      0.550    0.00167    8.20e-16     10.5 
11 mu_1       0.2      1.37     0.0542     1.08e-10     16.3 
12 mu_1       0.3      1.68     0.345      1.06e- 7     19.0 
13 mu_1       0.4      1.54     0.789      1.41e- 5      9.24
14 mu_1       0.5      1.30     1.22       6.26e- 4      6.03
15 mu_1       0.6      1.10     1.00       1.39e- 2      3.27
16 mu_1       0.7      1.00     0.895      2.49e- 3      2.83
17 mu_1       0.8      1.06     0.690      1.56e- 5      4.66
18 mu_1       0.9      1.33     0.102      1.52e- 9     16.7 
19 mu_0       0.1      0.153    0.0000530  0             3.51
20 mu_0       0.2      0.778    0.00790    0            11.4 
21 mu_0       0.3      1.40     0.0553     0            19.0 
22 mu_0       0.4      1.56     0.256      0            14.4 
23 mu_0       0.5      1.42     0.859      0             7.37
24 mu_0       0.6      1.22     1.08       0             4.41
25 mu_0       0.7      1.06     1.06       0             3.18
26 mu_0       0.8      1.02     0.916      0             3.49
27 mu_0       0.9      1.13     0.242      0             6.57
[1] "Total run time was 136.289 seconds"
