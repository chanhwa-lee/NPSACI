
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1226"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 12 13 14 15 16 17 18 19 20 
 4  8 11  6  6  7  9  4  6 10  5  8  7  7  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03267 0.30859 0.56279 0.97137 4.93169 
[1] "event indicator table: "

  0   1 
715 511 
[1] "treatment indicator table: "

  0   1 
476 750 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 114.061 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.352 0.164 
 2 mu         0.1   0.2 0.395 0.209 
 3 mu         0.1   0.3 0.412 0.228 
 4 mu         0.1   0.4 0.445 0.247 
 5 mu         0.1   0.5 0.557 0.261 
 6 mu         0.2   0.1 0.274 0.0807
 7 mu         0.2   0.2 0.323 0.105 
 8 mu         0.2   0.3 0.343 0.110 
 9 mu         0.2   0.4 0.372 0.116 
10 mu         0.2   0.5 0.476 0.122 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.204 0.000116      26.6 
 2 mu         0.2      0.963        0.561 0.0134        10.4 
 3 mu         0.3      0.972        0.873 0.128          4.09
 4 mu         0.4      0.987        0.985 0.400          2.48
 5 mu         0.5      0.989        0.995 0.667          1.51
 6 mu         0.6      0.994        1     0.744          1.22
 7 mu         0.7      1.00         1     0.503          1.56
 8 mu         0.8      0.993        1     0.210          2.21
 9 mu         0.9      0.965        0.951 0.0229         3.83
10 mu_1       0.1      0.938        0.540 0.000518      13.9 
11 mu_1       0.2      0.936        0.815 0.0310         5.14
12 mu_1       0.3      0.980        0.966 0.202          3.10
13 mu_1       0.4      0.990        0.986 0.498          1.86
14 mu_1       0.5      0.991        0.995 0.723          1.37
15 mu_1       0.6      0.998        1     0.710          1.29
16 mu_1       0.7      1.00         1     0.438          1.65
17 mu_1       0.8      0.992        0.991 0.174          2.27
18 mu_1       0.9      0.965        0.944 0.0182         4.15
19 mu_0       0.1      1.09         0.168 0.0000711     29.3 
20 mu_0       0.2      0.970        0.492 0.00905       12.7 
21 mu_0       0.3      0.969        0.851 0.0957         5.22
22 mu_0       0.4      0.985        0.978 0.335          2.93
23 mu_0       0.5      0.986        0.998 0.556          1.76
24 mu_0       0.6      0.988        0.992 0.688          1.27
25 mu_0       0.7      0.995        1     0.655          1.40
26 mu_0       0.8      0.997        1     0.358          1.96
27 mu_0       0.9      0.967        0.989 0.0655         2.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      56.5     0.000179   4.87e-12   5542.  
 2 mu         0.2      40.4     0.0132     1.39e- 7   3789.  
 3 mu         0.3      14.4     0.0986     2.37e- 5   1150.  
 4 mu         0.4       4.59    0.393      8.55e- 4    203.  
 5 mu         0.5       2.16    0.855      1.30e- 2     24.2 
 6 mu         0.6       1.60    1.21       1.74e- 2      6.62
 7 mu         0.7       1.67    1.06       6.72e- 4     13.3 
 8 mu         0.8       1.87    0.518      4.49e- 6     19.6 
 9 mu         0.9       1.43    0.0715     4.94e-10     15.1 
10 mu_1       0.1      67.7     0.00143    4.10e-11   6521.  
11 mu_1       0.2      25.5     0.0445     6.46e- 7   2229.  
12 mu_1       0.3       7.39    0.230      7.33e- 5    451.  
13 mu_1       0.4       2.87    0.667      1.98e- 3     59.6 
14 mu_1       0.5       1.78    1.10       2.41e- 2     17.9 
15 mu_1       0.6       1.54    1.24       7.65e- 3      7.73
16 mu_1       0.7       1.73    0.933      2.53e- 4     15.2 
17 mu_1       0.8       1.89    0.379      1.48e- 6     19.6 
18 mu_1       0.9       1.38    0.0453     1.44e-10     15.1 
19 mu_0       0.1      55.2     0.0000718  0          5434.  
20 mu_0       0.2      44.2     0.00440    0          4179.  
21 mu_0       0.3      17.5     0.0515     0          1450.  
22 mu_0       0.4       5.73    0.219      0           298.  
23 mu_0       0.5       2.54    0.624      0            36.2 
24 mu_0       0.6       1.69    1.02       0             9.66
25 mu_0       0.7       1.54    1.20       0             9.70
26 mu_0       0.8       1.80    0.779      0            19.6 
27 mu_0       0.9       1.85    0.226      0            20.2 
[1] "Total run time was 117.616 seconds"
