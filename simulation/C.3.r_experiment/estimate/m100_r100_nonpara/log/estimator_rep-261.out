
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1147"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 19 20 
 8  7  7  8 11  9  8  5  5  4  5  7  2  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06928 0.44314 0.69129 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
705 442 
[1] "treatment indicator table: "

  0   1 
361 786 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 563
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 131.324 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.777 0.307
 2 mu         0.1   0.2 0.787 0.291
 3 mu         0.1   0.3 0.968 0.392
 4 mu         0.1   0.4 0.983 0.384
 5 mu         0.1   0.5 1.02  0.399
 6 mu         0.2   0.1 0.586 0.185
 7 mu         0.2   0.2 0.602 0.160
 8 mu         0.2   0.3 0.732 0.226
 9 mu         0.2   0.4 0.753 0.214
10 mu         0.2   0.5 0.779 0.208
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.25         0.383  0.000204     51.5 
 2 mu         0.2      1.06         0.872  0.0198       17.7 
 3 mu         0.3      1.00         1      0.176         3.85
 4 mu         0.4      0.996        1      0.432         1.71
 5 mu         0.5      0.993        1      0.642         1.43
 6 mu         0.6      0.991        1      0.822         1.18
 7 mu         0.7      1.00         1      0.856         1.13
 8 mu         0.8      1.02         1.01   0.744         1.25
 9 mu         0.9      1.04         1.02   0.709         1.47
10 mu_1       0.1      1.17         0.785  0.000967     32.2 
11 mu_1       0.2      1.03         1      0.0478        5.63
12 mu_1       0.3      1.01         1.00   0.288         2.08
13 mu_1       0.4      0.999        1      0.544         1.53
14 mu_1       0.5      0.992        1      0.723         1.39
15 mu_1       0.6      0.992        1      0.870         1.15
16 mu_1       0.7      1.01         1      0.833         1.17
17 mu_1       0.8      1.03         1.02   0.737         1.30
18 mu_1       0.9      1.04         1.02   0.688         1.49
19 mu_0       0.1      1.26         0.326  0.000119     53.7 
20 mu_0       0.2      1.07         0.814  0.0129       20.7 
21 mu_0       0.3      0.999        0.983  0.128         5.00
22 mu_0       0.4      0.995        1      0.358         1.95
23 mu_0       0.5      0.994        1      0.561         1.48
24 mu_0       0.6      0.989        1      0.738         1.28
25 mu_0       0.7      0.991        1      0.864         1.17
26 mu_0       0.8      1.01         1      0.773         1.20
27 mu_0       0.9      1.03         1.01   0.714         1.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     13.2     0.0000122   5.11e-17   1121.  
 2 mu         0.2     11.2     0.00148     2.38e-11    862.  
 3 mu         0.3      5.32    0.0263      4.62e- 8    299.  
 4 mu         0.4      2.41    0.182       9.37e- 6     61.5 
 5 mu         0.5      1.45    0.507       5.42e- 4     12.9 
 6 mu         0.6      1.17    0.958       1.38e- 2      3.35
 7 mu         0.7      1.07    1.08        1.15e- 2      3.03
 8 mu         0.8      1.09    1.10        5.14e- 5      3.79
 9 mu         0.9      1.19    0.373       3.97e- 9      8.30
10 mu_1       0.1     16.7     0.0000945   0          1402.  
11 mu_1       0.2      7.91    0.00513     0           539.  
12 mu_1       0.3      3.15    0.0556      0           125.  
13 mu_1       0.4      1.62    0.288       0            19.3 
14 mu_1       0.5      1.20    0.754       0             6.36
15 mu_1       0.6      1.10    0.969       0             3.30
16 mu_1       0.7      1.07    1.05        0             3.09
17 mu_1       0.8      1.12    1.01        0             4.30
18 mu_1       0.9      1.21    0.302       0             9.22
19 mu_0       0.1     12.8     0.00000287  0          1090.  
20 mu_0       0.2     12.0     0.000415    0           943.  
21 mu_0       0.3      6.26    0.00952     0           374.  
22 mu_0       0.4      2.94    0.0747      0            89.6 
23 mu_0       0.5      1.70    0.291       0            21.1 
24 mu_0       0.6      1.27    0.692       0             5.66
25 mu_0       0.7      1.07    1.07        0             3.29
26 mu_0       0.8      0.989   1.01        0             3.25
27 mu_0       0.9      1.07    0.459       0             5.59
[1] "Total run time was 135.631 seconds"
