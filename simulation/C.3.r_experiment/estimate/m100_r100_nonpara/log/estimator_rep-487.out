
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1279"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  7  5  5  9  9  2  8  6 11  9  5  8  4  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01365 0.27850 0.53959 0.92692 5.00000 
[1] "event indicator table: "

  0   1 
712 567 
[1] "treatment indicator table: "

  0   1 
490 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 148.264 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.614 0.165 
 2 mu         0.1   0.2 0.687 0.183 
 3 mu         0.1   0.3 0.724 0.182 
 4 mu         0.1   0.4 0.797 0.184 
 5 mu         0.1   0.5 0.820 0.186 
 6 mu         0.2   0.1 0.494 0.0900
 7 mu         0.2   0.2 0.574 0.103 
 8 mu         0.2   0.3 0.619 0.0973
 9 mu         0.2   0.4 0.700 0.0990
10 mu         0.2   0.5 0.726 0.0977
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.676  0.000868     21.5 
 2 mu         0.2      0.997        0.873  0.0351        9.00
 3 mu         0.3      0.976        0.965  0.184         3.04
 4 mu         0.4      0.992        1      0.457         1.52
 5 mu         0.5      1.01         1.00   0.708         1.30
 6 mu         0.6      1.01         1.00   0.831         1.23
 7 mu         0.7      1.01         1.00   0.758         1.22
 8 mu         0.8      1.00         1      0.680         1.56
 9 mu         0.9      0.990        0.951  0.364         1.99
10 mu_1       0.1      1.07         0.728  0.00351      15.4 
11 mu_1       0.2      0.974        0.911  0.0772        5.40
12 mu_1       0.3      0.982        0.990  0.288         1.68
13 mu_1       0.4      1.00         1      0.579         1.50
14 mu_1       0.5      1.01         1.00   0.735         1.26
15 mu_1       0.6      1.01         1.01   0.849         1.22
16 mu_1       0.7      1.01         1      0.741         1.32
17 mu_1       0.8      1.00         1      0.644         1.59
18 mu_1       0.9      0.990        0.954  0.343         2.09
19 mu_0       0.1      1.04         0.639  0.000575     22.3 
20 mu_0       0.2      1.00         0.869  0.0245       10.3 
21 mu_0       0.3      0.973        0.956  0.140         3.69
22 mu_0       0.4      0.986        0.995  0.376         1.53
23 mu_0       0.5      1.00         1      0.639         1.39
24 mu_0       0.6      1.01         1.01   0.745         1.25
25 mu_0       0.7      1.01         1.01   0.799         1.23
26 mu_0       0.8      1.01         1      0.694         1.44
27 mu_0       0.9      0.988        0.989  0.558         1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    2544.     0.0000257   4.02e-16 246292.  
 2 mu         0.2     564.     0.00455     9.38e-11  52551.  
 3 mu         0.3      74.6    0.0648      1.21e- 7   6235.  
 4 mu         0.4       7.96   0.427       1.84e- 5    444.  
 5 mu         0.5       1.65   0.853       8.53e- 4     18.0 
 6 mu         0.6       1.16   1.10        1.82e- 2      3.63
 7 mu         0.7       1.11   1.00        1.48e- 3      3.41
 8 mu         0.8       1.10   0.752       7.65e- 7      8.60
 9 mu         0.9       1.10   0.0868      1.64e-12      9.94
10 mu_1       0.1    1293.     0.000171    3.81e-15 123146.  
11 mu_1       0.2     147.     0.0150      4.44e-10  13138.  
12 mu_1       0.3      14.7    0.149       3.83e- 7   1039.  
13 mu_1       0.4       2.15   0.671       4.37e- 5     55.6 
14 mu_1       0.5       1.17   0.983       1.62e- 3      4.00
15 mu_1       0.6       1.12   1.19        2.51e- 2      2.49
16 mu_1       0.7       1.12   1.03        1.06e- 4      4.22
17 mu_1       0.8       1.11   0.622       4.78e- 8      9.32
18 mu_1       0.9       1.10   0.0624      9.12e-14     10.9 
19 mu_0       0.1    2683.     0.00000951  0        259975.  
20 mu_0       0.2     668.     0.00177     0         62404.  
21 mu_0       0.3     100.     0.0335      0          8462.  
22 mu_0       0.4      11.8    0.207       0           704.  
23 mu_0       0.5       2.14   0.569       0            33.4 
24 mu_0       0.6       1.21   0.890       0             8.06
25 mu_0       0.7       1.09   1.18        0             2.80
26 mu_0       0.8       1.07   0.853       0             5.73
27 mu_0       0.9       1.05   0.163       0            13.3 
[1] "Total run time was 152.281 seconds"
