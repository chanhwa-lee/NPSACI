
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1293"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  6  7  6  2 11  6  9  5  4 10  4  3 11  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04289 0.35847 0.63449 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
741 552 
[1] "treatment indicator table: "

  0   1 
472 821 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 160.141 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.323 0.0637
 2 mu         0.1   0.2 0.461 0.0796
 3 mu         0.1   0.3 0.529 0.0934
 4 mu         0.1   0.4 0.629 0.134 
 5 mu         0.1   0.5 0.676 0.120 
 6 mu         0.2   0.1 0.327 0.0514
 7 mu         0.2   0.2 0.462 0.0753
 8 mu         0.2   0.3 0.520 0.0791
 9 mu         0.2   0.4 0.596 0.0953
10 mu         0.2   0.5 0.642 0.0836
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.738        0.649   0.00290      3.04
 2 mu         0.2      0.863        0.913   0.0782       1.96
 3 mu         0.3      0.952        0.985   0.352        1.59
 4 mu         0.4      0.987        1.00    0.566        1.25
 5 mu         0.5      0.995        1       0.691        1.14
 6 mu         0.6      0.995        1       0.808        1.10
 7 mu         0.7      0.996        1       0.868        1.23
 8 mu         0.8      1.01         1       0.750        1.67
 9 mu         0.9      1.04         1       0.478        3.16
10 mu_1       0.1      0.803        0.819   0.0113       2.23
11 mu_1       0.2      0.925        0.958   0.160        1.83
12 mu_1       0.3      0.981        0.982   0.494        1.41
13 mu_1       0.4      0.995        1       0.568        1.23
14 mu_1       0.5      0.996        1.00    0.744        1.14
15 mu_1       0.6      0.995        1       0.822        1.13
16 mu_1       0.7      0.997        1       0.863        1.28
17 mu_1       0.8      1.01         1       0.736        1.77
18 mu_1       0.9      1.05         1       0.440        3.35
19 mu_0       0.1      0.731        0.618   0.00196      3.30
20 mu_0       0.2      0.847        0.887   0.0576       1.99
21 mu_0       0.3      0.940        0.978   0.283        1.68
22 mu_0       0.4      0.982        0.999   0.558        1.31
23 mu_0       0.5      0.994        1       0.639        1.18
24 mu_0       0.6      0.995        1.00    0.748        1.12
25 mu_0       0.7      0.994        1       0.827        1.14
26 mu_0       0.8      1.00         1       0.807        1.26
27 mu_0       0.9      1.01         1.01    0.702        1.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.283    0.0000820  2.65e-18      6.26
 2 mu         0.2      0.777    0.00993    2.78e-12     11.4 
 3 mu         0.3      1.13     0.102      9.24e- 9     11.6 
 4 mu         0.4      1.22     0.479      2.91e- 6      7.25
 5 mu         0.5      1.18     0.988      2.53e- 4      4.01
 6 mu         0.6      1.08     0.997      9.69e- 3      4.21
 7 mu         0.7      1.05     0.909      3.98e- 3      4.54
 8 mu         0.8      1.41     0.621      3.04e- 5     13.2 
 9 mu         0.9      2.53     0.0660     3.76e- 9     32.2 
10 mu_1       0.1      0.711    0.000464   2.65e-17     13.9 
11 mu_1       0.2      1.12     0.0314     1.39e-11     14.2 
12 mu_1       0.3      1.24     0.203      3.08e- 8      9.68
13 mu_1       0.4      1.19     0.695      7.29e- 6      4.78
14 mu_1       0.5      1.12     0.930      5.06e- 4      3.91
15 mu_1       0.6      1.04     0.886      1.62e- 2      4.07
16 mu_1       0.7      1.07     0.903      1.71e- 3      5.95
17 mu_1       0.8      1.50     0.480      1.14e- 5     15.1 
18 mu_1       0.9      2.63     0.0458     1.25e- 9     35.8 
19 mu_0       0.1      0.235    0.0000331  0             5.41
20 mu_0       0.2      0.692    0.00429    0            10.7 
21 mu_0       0.3      1.08     0.0567     0            12.4 
22 mu_0       0.4      1.24     0.309      0             9.07
23 mu_0       0.5      1.23     0.848      0             5.69
24 mu_0       0.6      1.14     0.891      0             4.44
25 mu_0       0.7      1.02     0.972      0             3.29
26 mu_0       0.8      1.04     0.823      0             8.95
27 mu_0       0.9      1.63     0.120      0            20.0 
[1] "Total run time was 164.161 seconds"
