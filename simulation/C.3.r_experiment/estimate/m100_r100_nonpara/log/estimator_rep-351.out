
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  8  5  4  5  9  5  7  8  9  5  9  7  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02236 0.30614 0.61816 1.00000 6.49185 
[1] "event indicator table: "

  0   1 
774 467 
[1] "treatment indicator table: "

  0   1 
453 788 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 146.756 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.435 0.0821
 2 mu         0.1   0.2 0.440 0.0674
 3 mu         0.1   0.3 0.488 0.0797
 4 mu         0.1   0.4 0.507 0.0890
 5 mu         0.1   0.5 0.542 0.113 
 6 mu         0.2   0.1 0.434 0.0684
 7 mu         0.2   0.2 0.453 0.0574
 8 mu         0.2   0.3 0.485 0.0580
 9 mu         0.2   0.4 0.517 0.0636
10 mu         0.2   0.5 0.537 0.0765
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.791        0.488 0.000000514     10.0 
 2 mu         0.2      0.877        0.891 0.000395         4.24
 3 mu         0.3      0.932        0.979 0.0116           2.04
 4 mu         0.4      0.983        0.994 0.0839           2.56
 5 mu         0.5      1.01         1     0.269            3.18
 6 mu         0.6      1.01         1     0.517            2.08
 7 mu         0.7      1.00         1     0.747            1.26
 8 mu         0.8      0.983        0.986 0.539            2.05
 9 mu         0.9      0.953        0.989 0.0886           3.15
10 mu_1       0.1      0.817        0.803 0.00000284       4.38
11 mu_1       0.2      0.904        0.968 0.00110          3.17
12 mu_1       0.3      0.961        1     0.0219           1.60
13 mu_1       0.4      1.00         0.998 0.122            3.04
14 mu_1       0.5      1.01         1     0.328            3.06
15 mu_1       0.6      1.01         1     0.567            1.80
16 mu_1       0.7      0.997        1     0.780            1.34
17 mu_1       0.8      0.979        0.989 0.488            2.19
18 mu_1       0.9      0.950        0.988 0.0720           3.17
19 mu_0       0.1      0.788        0.439 0.000000255     11.1 
20 mu_0       0.2      0.870        0.854 0.000218         5.15
21 mu_0       0.3      0.920        0.972 0.00720          2.41
22 mu_0       0.4      0.970        0.989 0.0586           2.24
23 mu_0       0.5      1.00         0.990 0.211            3.29
24 mu_0       0.6      1.01         1     0.444            2.51
25 mu_0       0.7      1.01         1     0.671            1.30
26 mu_0       0.8      0.997        1     0.746            1.46
27 mu_0       0.9      0.978        0.970 0.238            2.96
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.30    0.0000327  4.85e-15     140. 
 2 mu         0.2       4.32    0.00580    5.66e-10     219. 
 3 mu         0.3       4.52    0.0764     4.88e- 7     169. 
 4 mu         0.4       3.53    0.345      5.56e- 5      87.5
 5 mu         0.5       2.42    0.753      2.06e- 3      53.9
 6 mu         0.6       1.78    1.07       3.65e- 2      23.5
 7 mu         0.7       1.65    1.10       1.83e- 3      11.7
 8 mu         0.8       2.28    0.727      1.07e- 5      39.1
 9 mu         0.9       5.56    0.143      1.04e- 9     257. 
10 mu_1       0.1       4.79    0.000201   4.59e-14     280. 
11 mu_1       0.2       5.13    0.0166     2.67e- 9     219. 
12 mu_1       0.3       4.06    0.155      1.54e- 6     113. 
13 mu_1       0.4       2.76    0.590      1.31e- 4      72.0
14 mu_1       0.5       1.91    0.919      3.89e- 3      39.2
15 mu_1       0.6       1.60    1.05       2.05e- 2      18.3
16 mu_1       0.7       1.68    1.10       5.80e- 4      10.0
17 mu_1       0.8       2.48    0.623      2.96e- 6      48.9
18 mu_1       0.9       6.01    0.112      2.58e-10     286. 
19 mu_0       0.1       2.02    0.0000107  0            125. 
20 mu_0       0.2       4.11    0.00286    0            219. 
21 mu_0       0.3       4.72    0.0385     0            193. 
22 mu_0       0.4       4.03    0.202      0            117. 
23 mu_0       0.5       2.92    0.574      0             68.6
24 mu_0       0.6       2.05    0.977      0             37.3
25 mu_0       0.7       1.60    1.02       0             15.6
26 mu_0       0.8       1.45    0.890      0             12.1
27 mu_0       0.9       1.55    0.171      0             27.3
[1] "Total run time was 150.991 seconds"
