
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1384"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  1  3  5  3  7  8  4  5  8 11  7 13  4 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03397 0.31268 0.56891 0.98487 6.00000 
[1] "event indicator table: "

  0   1 
788 596 
[1] "treatment indicator table: "

  0   1 
588 796 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 699
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 685
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 157.253 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.647 0.218 
 2 mu         0.1   0.2 0.863 0.296 
 3 mu         0.1   0.3 0.972 0.338 
 4 mu         0.1   0.4 1.06  0.367 
 5 mu         0.1   0.5 1.13  0.395 
 6 mu         0.2   0.1 0.492 0.0980
 7 mu         0.2   0.2 0.655 0.130 
 8 mu         0.2   0.3 0.739 0.159 
 9 mu         0.2   0.4 0.821 0.189 
10 mu         0.2   0.5 0.873 0.182 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.51         0.893  0.000191     64.8 
 2 mu         0.2      1.20         1      0.0158       18.0 
 3 mu         0.3      1.07         1      0.126         6.49
 4 mu         0.4      1.02         1      0.387         2.77
 5 mu         0.5      0.997        1      0.682         1.33
 6 mu         0.6      0.991        0.995  0.828         1.27
 7 mu         0.7      0.989        1      0.682         1.18
 8 mu         0.8      0.985        1      0.384         1.54
 9 mu         0.9      0.969        0.984  0.0518        2.66
10 mu_1       0.1      1.03         0.957  0.000784     11.7 
11 mu_1       0.2      1.07         0.987  0.0338        9.85
12 mu_1       0.3      1.03         1      0.191         4.50
13 mu_1       0.4      1.00         1      0.484         1.92
14 mu_1       0.5      0.993        0.998  0.747         1.21
15 mu_1       0.6      0.990        1      0.793         1.27
16 mu_1       0.7      0.988        1      0.635         1.18
17 mu_1       0.8      0.984        1      0.329         1.63
18 mu_1       0.9      0.966        0.978  0.0411        2.87
19 mu_0       0.1      1.57         0.867  0.000125     72.0 
20 mu_0       0.2      1.24         1      0.0113       22.4 
21 mu_0       0.3      1.09         0.997  0.0975        7.35
22 mu_0       0.4      1.03         1      0.323         3.35
23 mu_0       0.5      1.00         1      0.618         1.54
24 mu_0       0.6      0.994        1      0.824         1.26
25 mu_0       0.7      0.991        0.998  0.791         1.25
26 mu_0       0.8      0.990        1      0.595         1.24
27 mu_0       0.9      0.999        1      0.148         2.14
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.54    0.000178   4.69e-15    663.  
 2 mu         0.2       8.77    0.0184     9.72e-10    646.  
 3 mu         0.3       5.98    0.186      1.10e- 6    293.  
 4 mu         0.4       3.18    0.619      1.43e- 4     81.8 
 5 mu         0.5       1.59    0.894      5.53e- 3     14.3 
 6 mu         0.6       1.10    1.07       1.98e- 3      6.70
 7 mu         0.7       1.40    0.858      2.36e- 5     38.1 
 8 mu         0.8       2.59    0.268      3.58e- 8    125.  
 9 mu         0.9       3.52    0.0206     3.89e-13    183.  
10 mu_1       0.1      11.1     0.00129    4.22e-14    948.  
11 mu_1       0.2       7.57    0.0485     4.37e- 9    461.  
12 mu_1       0.3       4.40    0.370      3.30e- 6    139.  
13 mu_1       0.4       2.29    0.863      3.23e- 4     29.9 
14 mu_1       0.5       1.30    0.925      9.95e- 3      8.54
15 mu_1       0.6       1.09    0.941      4.95e- 4      9.86
16 mu_1       0.7       1.54    0.792      5.06e- 6     48.0 
17 mu_1       0.8       2.78    0.168      6.71e- 9    138.  
18 mu_1       0.9       3.48    0.0115     6.48e-14    180.  
19 mu_0       0.1       7.14    0.0000636  0           632.  
20 mu_0       0.2       9.07    0.00840    0           692.  
21 mu_0       0.3       6.66    0.119      0           358.  
22 mu_0       0.4       3.77    0.465      0           117.  
23 mu_0       0.5       1.88    0.789      0            24.6 
24 mu_0       0.6       1.12    1.02       0             4.09
25 mu_0       0.7       1.08    0.886      0            14.9 
26 mu_0       0.8       1.84    0.557      0            73.7 
27 mu_0       0.9       3.89    0.0736     0           216.  
[1] "Total run time was 161.024 seconds"
