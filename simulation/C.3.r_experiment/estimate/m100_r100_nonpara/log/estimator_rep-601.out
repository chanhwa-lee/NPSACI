
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1211"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  6  9  6  4 11  6  6  2  6  1  7  5 10  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03176 0.29285 0.57559 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
705 506 
[1] "treatment indicator table: "

  0   1 
493 718 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 134.13 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.188 0.0686
 2 mu         0.1   0.2 0.301 0.123 
 3 mu         0.1   0.3 0.297 0.0870
 4 mu         0.1   0.4 0.297 0.0783
 5 mu         0.1   0.5 0.324 0.0537
 6 mu         0.2   0.1 0.232 0.0547
 7 mu         0.2   0.2 0.347 0.114 
 8 mu         0.2   0.3 0.375 0.0752
 9 mu         0.2   0.4 0.393 0.0650
10 mu         0.2   0.5 0.417 0.0449
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.570        0.314   0.00182      3.70
 2 mu         0.2      0.799        0.705   0.0599       3.28
 3 mu         0.3      0.920        0.904   0.250        2.71
 4 mu         0.4      0.971        0.987   0.464        1.70
 5 mu         0.5      0.993        1       0.670        1.79
 6 mu         0.6      1.00         1       0.885        1.45
 7 mu         0.7      1.00         1       0.702        1.31
 8 mu         0.8      0.985        1       0.390        2.29
 9 mu         0.9      0.899        0.933   0.0760       5.56
10 mu_1       0.1      0.753        0.676   0.00647      3.54
11 mu_1       0.2      0.899        0.929   0.111        3.31
12 mu_1       0.3      0.963        0.985   0.358        2.31
13 mu_1       0.4      0.989        0.997   0.523        1.83
14 mu_1       0.5      1.00         1       0.735        1.74
15 mu_1       0.6      1.00         1       0.874        1.37
16 mu_1       0.7      1.00         1       0.659        1.38
17 mu_1       0.8      0.978        1       0.351        2.52
18 mu_1       0.9      0.889        0.915   0.0640       5.77
19 mu_0       0.1      0.550        0.271   0.00130      3.85
20 mu_0       0.2      0.773        0.645   0.0448       3.27
21 mu_0       0.3      0.902        0.838   0.188        2.88
22 mu_0       0.4      0.959        0.977   0.425        1.93
23 mu_0       0.5      0.985        0.997   0.605        1.84
24 mu_0       0.6      0.999        1       0.827        1.57
25 mu_0       0.7      1.01         1       0.802        1.24
26 mu_0       0.8      1.01         1       0.547        1.55
27 mu_0       0.9      0.997        1       0.184        3.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      77.2      0.000534  1.35e-16   7592.  
 2 mu         0.2      43.9      0.0240    7.07e-11   4100.  
 3 mu         0.3      12.3      0.151     1.57e- 7    953.  
 4 mu         0.4       3.11     0.470     3.71e- 5    123.  
 5 mu         0.5       1.39     0.873     2.57e- 3      9.34
 6 mu         0.6       1.17     1.06      8.22e- 2      5.17
 7 mu         0.7       1.50     1.06      2.88e- 3     23.5 
 8 mu         0.8       2.81     0.506     3.82e- 6     88.5 
 9 mu         0.9       6.19     0.0552    3.69e-11    182.  
10 mu_1       0.1      82.5      0.00312   1.35e-15   7992.  
11 mu_1       0.2      24.9      0.0777    3.54e-10   2158.  
12 mu_1       0.3       5.75     0.309     5.23e- 7    334.  
13 mu_1       0.4       1.87     0.701     9.27e- 5     32.4 
14 mu_1       0.5       1.22     0.978     5.15e- 3      8.84
15 mu_1       0.6       1.21     1.13      4.94e- 2      5.26
16 mu_1       0.7       1.66     0.969     4.33e- 4     29.9 
17 mu_1       0.8       3.09     0.414     5.02e- 7     98.4 
18 mu_1       0.9       6.51     0.0349    4.31e-12    202.  
19 mu_0       0.1      76.6      0.000223  0          7548.  
20 mu_0       0.2      48.6      0.00884   0          4586.  
21 mu_0       0.3      15.1      0.0714    0          1218.  
22 mu_0       0.4       3.95     0.294     0           184.  
23 mu_0       0.5       1.57     0.649     0            15.5 
24 mu_0       0.6       1.12     0.914     0             6.81
25 mu_0       0.7       1.14     1.12      0             8.71
26 mu_0       0.8       1.68     0.617     0            49.2 
27 mu_0       0.9       3.31     0.0868    0           162.  
[1] "Total run time was 137.504 seconds"
