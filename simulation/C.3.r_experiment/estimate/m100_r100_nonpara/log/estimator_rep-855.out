
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1292"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2 10  4  7  6  7  5  6 11  3  6  5  3  4 11 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03721 0.30694 0.58788 0.96342 5.00000 
[1] "event indicator table: "

  0   1 
802 490 
[1] "treatment indicator table: "

  0   1 
457 835 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 162.514 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.240 0.0424
 2 mu         0.1   0.2 0.368 0.0662
 3 mu         0.1   0.3 0.407 0.0753
 4 mu         0.1   0.4 0.425 0.0706
 5 mu         0.1   0.5 0.438 0.0689
 6 mu         0.2   0.1 0.269 0.0356
 7 mu         0.2   0.2 0.377 0.0496
 8 mu         0.2   0.3 0.415 0.0507
 9 mu         0.2   0.4 0.453 0.0543
10 mu         0.2   0.5 0.476 0.0524
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.637        0.259 0.000000889      4.22
 2 mu         0.2      0.728        0.635 0.000679         4.24
 3 mu         0.3      0.872        0.858 0.0198           7.89
 4 mu         0.4      0.973        0.945 0.140            6.85
 5 mu         0.5      1.01         0.998 0.393            3.66
 6 mu         0.6      1.02         1     0.700            1.70
 7 mu         0.7      1.01         1.00  0.856            1.16
 8 mu         0.8      1.01         1     0.676            1.31
 9 mu         0.9      0.993        1     0.437            1.54
10 mu_1       0.1      0.683        0.552 0.00000491       4.48
11 mu_1       0.2      0.811        0.806 0.00189          6.72
12 mu_1       0.3      0.935        0.922 0.0372           8.50
13 mu_1       0.4      0.997        0.968 0.197            5.78
14 mu_1       0.5      1.02         1     0.468            2.75
15 mu_1       0.6      1.02         1     0.758            1.45
16 mu_1       0.7      1.01         1     0.843            1.18
17 mu_1       0.8      1.01         1     0.660            1.33
18 mu_1       0.9      0.991        0.999 0.404            1.63
19 mu_0       0.1      0.632        0.221 0.000000442      4.37
20 mu_0       0.2      0.707        0.595 0.000376         3.66
21 mu_0       0.3      0.845        0.807 0.0123           7.62
22 mu_0       0.4      0.957        0.934 0.0984           7.57
23 mu_0       0.5      1.01         0.982 0.310            4.56
24 mu_0       0.6      1.02         1     0.607            2.08
25 mu_0       0.7      1.01         1     0.842            1.34
26 mu_0       0.8      1.01         1     0.737            1.24
27 mu_0       0.9      1.01         1     0.519            1.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     23.7      0.0000418  4.10e-14   1286.  
 2 mu         0.2     64.8      0.00430    4.25e- 9   2460.  
 3 mu         0.3     72.0      0.0423     3.00e- 6   2509.  
 4 mu         0.4     43.6      0.202      2.51e- 4   1374.  
 5 mu         0.5     15.9      0.521      6.46e- 3    408.  
 6 mu         0.6      4.00     0.995      5.49e- 2     53.6 
 7 mu         0.7      1.35     1.23       5.48e- 2      5.33
 8 mu         0.8      1.09     0.768      2.12e- 3      4.56
 9 mu         0.9      0.741    0.206      2.27e- 6      8.44
10 mu_1       0.1     50.6      0.000285   3.67e-13   2338.  
11 mu_1       0.2     78.3      0.0156     1.90e- 8   3075.  
12 mu_1       0.3     62.9      0.112      8.49e- 6   2116.  
13 mu_1       0.4     30.7      0.375      5.34e- 4   1030.  
14 mu_1       0.5      9.89     0.801      1.10e- 2    245.  
15 mu_1       0.6      2.60     1.15       8.00e- 2     26.8 
16 mu_1       0.7      1.22     1.06       2.94e- 2      3.14
17 mu_1       0.8      1.07     0.647      9.93e- 4      5.10
18 mu_1       0.9      0.693    0.166      7.58e- 7      8.39
19 mu_0       0.1     20.7      0.0000153  0          1169.  
20 mu_0       0.2     61.4      0.00141    0          2307.  
21 mu_0       0.3     75.8      0.0136     0          2688.  
22 mu_0       0.4     52.1      0.0852     0          1603.  
23 mu_0       0.5     22.0      0.291      0           571.  
24 mu_0       0.6      6.09     0.736      0            93.8 
25 mu_0       0.7      1.67     1.15       0            10.5 
26 mu_0       0.8      1.19     0.901      0             3.64
27 mu_0       0.9      1.18     0.557      0             8.89
[1] "Total run time was 166.503 seconds"
