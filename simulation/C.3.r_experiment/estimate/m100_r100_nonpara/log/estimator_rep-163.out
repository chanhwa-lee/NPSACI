
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1295"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  5  8  4  2  8  3  4  9  5 11 11  3  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03145 0.39551 0.65743 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
769 526 
[1] "treatment indicator table: "

  0   1 
507 788 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 180.876 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.260 0.0609
 2 mu         0.1   0.2 0.364 0.0554
 3 mu         0.1   0.3 0.416 0.0474
 4 mu         0.1   0.4 0.459 0.0498
 5 mu         0.1   0.5 0.506 0.0536
 6 mu         0.2   0.1 0.251 0.0489
 7 mu         0.2   0.2 0.313 0.0547
 8 mu         0.2   0.3 0.366 0.0433
 9 mu         0.2   0.4 0.421 0.0388
10 mu         0.2   0.5 0.463 0.0356
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.934        0.806   0.00992      6.13
 2 mu         0.2      0.955        0.965   0.139        2.33
 3 mu         0.3      0.968        0.995   0.273        1.57
 4 mu         0.4      0.978        1       0.499        1.32
 5 mu         0.5      0.987        1       0.752        1.17
 6 mu         0.6      0.996        1       0.837        1.16
 7 mu         0.7      1.01         1.00    0.827        1.18
 8 mu         0.8      1.01         1       0.726        1.44
 9 mu         0.9      1.01         1       0.446        1.82
10 mu_1       0.1      0.950        0.961   0.0322       3.15
11 mu_1       0.2      0.965        1       0.195        1.93
12 mu_1       0.3      0.974        1       0.331        1.38
13 mu_1       0.4      0.982        1       0.591        1.27
14 mu_1       0.5      0.990        0.999   0.767        1.16
15 mu_1       0.6      0.998        1       0.839        1.15
16 mu_1       0.7      1.01         1       0.790        1.23
17 mu_1       0.8      1.01         1.00    0.705        1.49
18 mu_1       0.9      1.01         1       0.424        1.86
19 mu_0       0.1      0.933        0.772   0.00744      6.78
20 mu_0       0.2      0.952        0.959   0.114        2.48
21 mu_0       0.3      0.965        0.991   0.249        1.65
22 mu_0       0.4      0.975        1       0.437        1.36
23 mu_0       0.5      0.983        1       0.730        1.21
24 mu_0       0.6      0.992        0.997   0.795        1.17
25 mu_0       0.7      1.00         1.00    0.804        1.17
26 mu_0       0.8      1.01         1.00    0.775        1.36
27 mu_0       0.9      1.01         1       0.642        1.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.00    0.000109   8.21e-17    222.  
 2 mu         0.2       2.24    0.00978    3.83e-11     95.8 
 3 mu         0.3       1.52    0.127      7.42e- 8     25.3 
 4 mu         0.4       1.15    0.532      1.23e- 5      6.48
 5 mu         0.5       1.05    0.954      5.44e- 4      3.54
 6 mu         0.6       1.06    1.11       1.21e- 2      2.91
 7 mu         0.7       1.06    1.07       5.48e- 4      3.15
 8 mu         0.8       1.08    0.641      5.04e- 6      5.30
 9 mu         0.9       1.17    0.0681     4.92e-10     12.3 
10 mu_1       0.1       2.94    0.000739   7.80e-16    158.  
11 mu_1       0.2       1.75    0.0325     1.82e-10     36.2 
12 mu_1       0.3       1.28    0.277      2.35e- 7     12.9 
13 mu_1       0.4       1.08    0.756      3.06e- 5      4.72
14 mu_1       0.5       1.06    1.06       1.09e- 3      3.44
15 mu_1       0.6       1.07    1.14       3.02e- 3      2.58
16 mu_1       0.7       1.06    1.01       9.92e- 5      3.66
17 mu_1       0.8       1.09    0.477      5.10e- 7      5.38
18 mu_1       0.9       1.18    0.0420     6.22e-11     13.2 
19 mu_0       0.1       3.01    0.0000420  0           229.  
20 mu_0       0.2       2.36    0.00496    0           111.  
21 mu_0       0.3       1.63    0.0756     0            33.6 
22 mu_0       0.4       1.19    0.304      0             9.16
23 mu_0       0.5       1.05    0.766      0             4.10
24 mu_0       0.6       1.04    0.978      0             3.39
25 mu_0       0.7       1.04    1.10       0             2.55
26 mu_0       0.8       1.05    0.891      0             4.97
27 mu_0       0.9       1.13    0.168      0             6.16
[1] "Total run time was 185.707 seconds"
