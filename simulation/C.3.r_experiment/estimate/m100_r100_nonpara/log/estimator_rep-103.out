
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1294"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  7  1  7  8 12  3  8  6  7  7 10  2  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03635 0.37896 0.65450 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
729 565 
[1] "treatment indicator table: "

  0   1 
494 800 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 130.12 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.520 0.0902
 2 mu         0.1   0.2 0.580 0.0981
 3 mu         0.1   0.3 0.684 0.115 
 4 mu         0.1   0.4 0.750 0.111 
 5 mu         0.1   0.5 0.760 0.110 
 6 mu         0.2   0.1 0.420 0.0532
 7 mu         0.2   0.2 0.472 0.0591
 8 mu         0.2   0.3 0.560 0.0724
 9 mu         0.2   0.4 0.642 0.0587
10 mu         0.2   0.5 0.666 0.0561
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10         0.824    0.0444      8.32
 2 mu         0.2      1.08         1        0.242       4.39
 3 mu         0.3      1.05         1.01     0.506       2.19
 4 mu         0.4      1.02         1        0.718       1.48
 5 mu         0.5      0.994        0.993    0.811       1.23
 6 mu         0.6      0.990        0.996    0.790       1.12
 7 mu         0.7      0.997        1        0.774       1.16
 8 mu         0.8      1.01         1.01     0.690       1.35
 9 mu         0.9      1.03         1        0.367       1.75
10 mu_1       0.1      1.06         0.951    0.125       6.36
11 mu_1       0.2      1.06         1        0.424       2.65
12 mu_1       0.3      1.03         1        0.587       1.73
13 mu_1       0.4      1.00         1        0.789       1.44
14 mu_1       0.5      0.992        0.998    0.820       1.20
15 mu_1       0.6      0.992        1        0.782       1.11
16 mu_1       0.7      1.00         1        0.763       1.19
17 mu_1       0.8      1.02         1.01     0.667       1.39
18 mu_1       0.9      1.03         1        0.337       1.78
19 mu_0       0.1      1.11         0.774    0.0327      8.53
20 mu_0       0.2      1.09         1        0.189       4.83
21 mu_0       0.3      1.06         1.01     0.446       2.46
22 mu_0       0.4      1.02         1.00     0.664       1.53
23 mu_0       0.5      0.996        1        0.754       1.31
24 mu_0       0.6      0.986        0.988    0.801       1.17
25 mu_0       0.7      0.990        1.00     0.774       1.13
26 mu_0       0.8      1.01         1.00     0.744       1.22
27 mu_0       0.9      1.03         1.02     0.577       1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.271    0.000134   3.66e-15      7.09
 2 mu         0.2      0.916    0.0126     4.79e-10     20.7 
 3 mu         0.3      1.35     0.0997     4.72e- 7     36.3 
 4 mu         0.4      1.34     0.495      6.28e- 5     23.6 
 5 mu         0.5      1.15     0.958      2.79e- 3      7.00
 6 mu         0.6      1.02     1.01       3.55e- 3      2.12
 7 mu         0.7      0.997    0.963      5.65e- 5      2.90
 8 mu         0.8      1.10     0.420      1.28e- 7      8.23
 9 mu         0.9      1.69     0.0451     2.79e-12     61.0 
10 mu_1       0.1      0.644    0.000766   3.66e-14     14.8 
11 mu_1       0.2      1.28     0.0410     2.40e- 9     31.0 
12 mu_1       0.3      1.48     0.217      1.57e- 6     36.3 
13 mu_1       0.4      1.31     0.699      1.57e- 4     17.7 
14 mu_1       0.5      1.11     1.01       5.58e- 3      4.95
15 mu_1       0.6      0.995    1.04       9.33e- 4      1.89
16 mu_1       0.7      1.00     0.842      1.27e- 5      3.11
17 mu_1       0.8      1.13     0.303      2.53e- 8     10.3 
18 mu_1       0.9      1.78     0.0306     4.89e-13     67.7 
19 mu_0       0.1      0.229    0.0000621  0             6.63
20 mu_0       0.2      0.824    0.00545    0            18.1 
21 mu_0       0.3      1.30     0.0470     0            36.3 
22 mu_0       0.4      1.36     0.330      0            27.5 
23 mu_0       0.5      1.20     0.785      0             9.80
24 mu_0       0.6      1.06     0.951      0             3.31
25 mu_0       0.7      0.988    1.08       0             2.42
26 mu_0       0.8      0.964    0.659      0             3.91
27 mu_0       0.9      0.846    0.0780     0             6.05
[1] "Total run time was 133.831 seconds"
