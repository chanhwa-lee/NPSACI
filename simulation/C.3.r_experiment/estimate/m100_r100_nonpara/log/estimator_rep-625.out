
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1184"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  9  2 10  5  3 11 11  7  5  3  7  7  3  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03836 0.33576 0.61709 1.00000 5.68835 
[1] "event indicator table: "

  0   1 
738 446 
[1] "treatment indicator table: "

  0   1 
409 775 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 560
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 111.113 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.252 0.121 
 2 mu         0.1   0.2 0.265 0.120 
 3 mu         0.1   0.3 0.395 0.140 
 4 mu         0.1   0.4 0.438 0.110 
 5 mu         0.1   0.5 0.460 0.103 
 6 mu         0.2   0.1 0.342 0.129 
 7 mu         0.2   0.2 0.374 0.116 
 8 mu         0.2   0.3 0.470 0.113 
 9 mu         0.2   0.4 0.507 0.0899
10 mu         0.2   0.5 0.539 0.0977
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.733        0.284 0.0000939      7.42
 2 mu         0.2      0.906        0.835 0.0140         6.05
 3 mu         0.3      0.967        0.975 0.138          4.63
 4 mu         0.4      0.978        0.999 0.407          2.50
 5 mu         0.5      0.982        0.998 0.607          1.56
 6 mu         0.6      0.995        1     0.682          1.29
 7 mu         0.7      1.01         1     0.833          1.31
 8 mu         0.8      1.00         1     0.671          1.71
 9 mu         0.9      0.981        0.998 0.275          2.86
10 mu_1       0.1      0.876        0.598 0.000425       5.86
11 mu_1       0.2      0.964        0.949 0.0321         6.23
12 mu_1       0.3      0.975        1     0.214          3.60
13 mu_1       0.4      0.974        0.999 0.490          1.90
14 mu_1       0.5      0.983        1     0.635          1.32
15 mu_1       0.6      0.998        1     0.698          1.33
16 mu_1       0.7      1.01         1     0.838          1.28
17 mu_1       0.8      1.00         1     0.615          1.84
18 mu_1       0.9      0.978        0.999 0.240          2.92
19 mu_0       0.1      0.717        0.240 0.0000571      8.21
20 mu_0       0.2      0.891        0.790 0.00954        6.00
21 mu_0       0.3      0.964        0.929 0.106          5.08
22 mu_0       0.4      0.980        1     0.326          2.91
23 mu_0       0.5      0.982        0.999 0.579          1.79
24 mu_0       0.6      0.991        1     0.657          1.32
25 mu_0       0.7      1.01         1     0.752          1.37
26 mu_0       0.8      1.01         1     0.769          1.29
27 mu_0       0.9      1.01         1     0.570          2.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      62.3     0.000100   5.63e-15   3487.  
 2 mu         0.2      51.6     0.00700    1.17e- 9   3394.  
 3 mu         0.3      23.6     0.0814     1.32e- 6   1538.  
 4 mu         0.4       7.90    0.316      1.72e- 4    430.  
 5 mu         0.5       2.71    0.852      3.07e- 3     75.4 
 6 mu         0.6       1.62    1.22       2.74e- 2      9.42
 7 mu         0.7       1.65    1.10       5.71e- 2      9.14
 8 mu         0.8       2.22    0.780      4.36e- 4     21.6 
 9 mu         0.9       3.18    0.223      5.39e- 8     56.2 
10 mu_1       0.1      75.3     0.000715   5.07e-14   4982.  
11 mu_1       0.2      33.3     0.0246     5.25e- 9   2424.  
12 mu_1       0.3      11.1     0.193      3.96e- 6    732.  
13 mu_1       0.4       3.64    0.530      3.87e- 4    154.  
14 mu_1       0.5       1.79    1.04       6.14e- 3     21.5 
15 mu_1       0.6       1.50    1.23       4.56e- 2     10.2 
16 mu_1       0.7       1.69    1.06       2.45e- 2      8.45
17 mu_1       0.8       2.33    0.660      1.63e- 4     25.2 
18 mu_1       0.9       3.25    0.156      1.80e- 8     58.2 
19 mu_0       0.1      60.8     0.0000357  0          3321.  
20 mu_0       0.2      56.2     0.00312    0          3637.  
21 mu_0       0.3      28.9     0.0363     0          1884.  
22 mu_0       0.4      10.7     0.165      0           614.  
23 mu_0       0.5       3.63    0.540      0           129.  
24 mu_0       0.6       1.81    1.10       0            16.0 
25 mu_0       0.7       1.56    1.29       0            10.7 
26 mu_0       0.8       1.76    1.18       0            10.5 
27 mu_0       0.9       2.63    0.509      0            43.8 
[1] "Total run time was 114.075 seconds"
