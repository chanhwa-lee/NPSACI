
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1274"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  7  5  5  9  3  3  4  8  3 11  7  4  9  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03838 0.35133 0.57472 0.98040 4.83871 
[1] "event indicator table: "

  0   1 
735 539 
[1] "treatment indicator table: "

  0   1 
482 792 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 166.142 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.252 0.0574
 2 mu         0.1   0.2 0.349 0.0597
 3 mu         0.1   0.3 0.339 0.0528
 4 mu         0.1   0.4 0.416 0.0802
 5 mu         0.1   0.5 0.467 0.111 
 6 mu         0.2   0.1 0.268 0.0506
 7 mu         0.2   0.2 0.367 0.0492
 8 mu         0.2   0.3 0.369 0.0439
 9 mu         0.2   0.4 0.445 0.0705
10 mu         0.2   0.5 0.505 0.0995
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.675        0.683 0.0000812      2.93
 2 mu         0.2      0.824        0.910 0.00896        2.40
 3 mu         0.3      0.964        1     0.0911         2.27
 4 mu         0.4      1.02         1.01  0.326          2.21
 5 mu         0.5      1.02         1.00  0.596          1.75
 6 mu         0.6      1.01         1     0.780          1.32
 7 mu         0.7      1.00         1     0.759          1.24
 8 mu         0.8      1.00         0.999 0.414          1.59
 9 mu         0.9      0.989        1     0.0535         2.93
10 mu_1       0.1      0.777        0.921 0.000381       2.23
11 mu_1       0.2      0.921        1     0.0223         2.80
12 mu_1       0.3      1.01         1.01  0.154          2.18
13 mu_1       0.4      1.03         1.01  0.424          2.15
14 mu_1       0.5      1.02         1.00  0.682          1.61
15 mu_1       0.6      1.00         1     0.816          1.27
16 mu_1       0.7      0.998        1     0.737          1.29
17 mu_1       0.8      0.999        1.00  0.369          1.65
18 mu_1       0.9      0.986        0.996 0.0439         3.02
19 mu_0       0.1      0.663        0.646 0.0000447      3.09
20 mu_0       0.2      0.800        0.883 0.00547        2.30
21 mu_0       0.3      0.943        1     0.0621         2.43
22 mu_0       0.4      1.02         1.01  0.253          2.26
23 mu_0       0.5      1.03         1.00  0.511          1.90
24 mu_0       0.6      1.01         1     0.727          1.41
25 mu_0       0.7      1.01         1     0.795          1.20
26 mu_0       0.8      1.00         1     0.595          1.35
27 mu_0       0.9      1.02         0.997 0.140          2.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    6919.      0.000109   4.68e-15 671719.  
 2 mu         0.2    2025.      0.00747    9.69e-10 181395.  
 3 mu         0.3     389.      0.0800     8.55e- 7  28109.  
 4 mu         0.4      63.4     0.355      6.40e- 5   2727.  
 5 mu         0.5      10.5     0.887      1.82e- 3    425.  
 6 mu         0.6       2.42    1.24       2.80e- 2     42.0 
 7 mu         0.7       1.53    1.37       1.03e- 3     11.2 
 8 mu         0.8       2.11    0.655      6.02e- 6     56.6 
 9 mu         0.9       3.94    0.0729     3.62e-10    236.  
10 mu_1       0.1    4025.      0.000689   4.21e-14 373177.  
11 mu_1       0.2     666.      0.0260     4.36e- 9  50387.  
12 mu_1       0.3     112.      0.173      2.85e- 6   5205.  
13 mu_1       0.4      20.7     0.543      1.60e- 4    865.  
14 mu_1       0.5       4.56    1.01       3.64e- 3    126.  
15 mu_1       0.6       1.74    1.21       1.16e- 2     15.2 
16 mu_1       0.7       1.54    1.28       3.27e- 4     14.0 
17 mu_1       0.8       2.26    0.521      1.67e- 6     67.0 
18 mu_1       0.9       4.07    0.0481     2.24e-11    248.  
19 mu_0       0.1    7240.      0.0000178  0        704890.  
20 mu_0       0.2    2365.      0.00247    0        214147.  
21 mu_0       0.3     508.      0.0375     0         37925.  
22 mu_0       0.4      91.8     0.213      0          4293.  
23 mu_0       0.5      16.4     0.626      0           728.  
24 mu_0       0.6       3.43    0.958      0            90.1 
25 mu_0       0.7       1.50    1.17       0             7.17
26 mu_0       0.8       1.53    0.935      0            20.2 
27 mu_0       0.9       2.78    0.160      0           124.  
[1] "Total run time was 169.71 seconds"
