
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1275"
[1] "cluster size dist'n: "

 6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  9  5  5  9  5  4  6  7  3 10 14  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.07866 0.41103 0.66095 1.00000 6.01838 
[1] "event indicator table: "

  0   1 
760 515 
[1] "treatment indicator table: "

  0   1 
450 825 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 132.669 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.257 0.0857
 2 mu         0.1   0.2 0.374 0.0788
 3 mu         0.1   0.3 0.371 0.0766
 4 mu         0.1   0.4 0.382 0.0842
 5 mu         0.1   0.5 0.389 0.0868
 6 mu         0.2   0.1 0.270 0.0555
 7 mu         0.2   0.2 0.405 0.0640
 8 mu         0.2   0.3 0.423 0.0652
 9 mu         0.2   0.4 0.458 0.0734
10 mu         0.2   0.5 0.481 0.0761
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.662        0.353 0.0000224      3.92
 2 mu         0.2      0.909        0.821 0.00478        6.19
 3 mu         0.3      1.06         0.996 0.0692         6.92
 4 mu         0.4      1.07         1     0.311          4.34
 5 mu         0.5      1.03         1     0.692          2.12
 6 mu         0.6      1.01         1     0.789          1.26
 7 mu         0.7      0.996        1     0.829          1.13
 8 mu         0.8      0.983        0.991 0.768          1.23
 9 mu         0.9      0.955        0.969 0.471          1.99
10 mu_1       0.1      0.835        0.691 0.000109       3.77
11 mu_1       0.2      1.04         0.966 0.0120         7.79
12 mu_1       0.3      1.10         1     0.119          6.25
13 mu_1       0.4      1.06         1     0.421          3.35
14 mu_1       0.5      1.02         1.00  0.793          1.80
15 mu_1       0.6      1.00         1     0.792          1.14
16 mu_1       0.7      0.994        1     0.807          1.15
17 mu_1       0.8      0.981        0.991 0.741          1.26
18 mu_1       0.9      0.953        0.966 0.439          2.15
19 mu_0       0.1      0.643        0.312 0.0000128      4.15
20 mu_0       0.2      0.876        0.753 0.00298        5.79
21 mu_0       0.3      1.05         0.994 0.0477         7.21
22 mu_0       0.4      1.08         1     0.239          5.00
23 mu_0       0.5      1.04         1     0.592          2.56
24 mu_0       0.6      1.01         1     0.785          1.43
25 mu_0       0.7      1.00         1     0.817          1.15
26 mu_0       0.8      0.992        1     0.753          1.22
27 mu_0       0.9      0.972        0.977 0.554          1.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.37   0.0000307   3.14e-15     89.3 
 2 mu         0.2       3.90   0.00411     3.66e-10     94.1 
 3 mu         0.3       5.98   0.0541      3.16e- 7    144.  
 4 mu         0.4       5.13   0.241       3.60e- 5    164.  
 5 mu         0.5       2.89   0.701       1.33e- 3     87.5 
 6 mu         0.6       1.46   0.988       2.36e- 2     21.5 
 7 mu         0.7       1.11   1.11        4.48e- 2      3.35
 8 mu         0.8       1.38   0.885       4.49e- 4     16.5 
 9 mu         0.9       2.17   0.185       9.88e- 8     41.1 
10 mu_1       0.1       2.65   0.000228    2.97e-14    128.  
11 mu_1       0.2       5.23   0.0130      1.73e- 9    138.  
12 mu_1       0.3       6.07   0.113       9.94e- 7    171.  
13 mu_1       0.4       4.30   0.435       8.50e- 5    151.  
14 mu_1       0.5       2.25   0.865       2.52e- 3     64.5 
15 mu_1       0.6       1.26   1.02        3.72e- 2     13.2 
16 mu_1       0.7       1.11   1.09        1.78e- 2      4.30
17 mu_1       0.8       1.46   0.726       1.56e- 4     18.5 
18 mu_1       0.9       2.25   0.138       3.05e- 8     45.7 
19 mu_0       0.1       1.23   0.00000993  0            85.0 
20 mu_0       0.2       3.57   0.00138     0            94.4 
21 mu_0       0.3       5.94   0.0202      0           145.  
22 mu_0       0.4       5.68   0.113       0           172.  
23 mu_0       0.5       3.52   0.389       0           111.  
24 mu_0       0.6       1.76   0.861       0            34.0 
25 mu_0       0.7       1.09   0.953       0             4.68
26 mu_0       0.8       1.07   0.878       0             8.23
27 mu_0       0.9       1.46   0.331       0            34.3 
[1] "Total run time was 137.122 seconds"
