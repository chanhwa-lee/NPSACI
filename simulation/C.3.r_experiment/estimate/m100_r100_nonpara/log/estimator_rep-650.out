
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1251"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 12  6  4  5  9  3 10  5  3  3  4  8  4 12  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05088 0.35322 0.60644 0.99797 5.00000 
[1] "event indicator table: "

  0   1 
755 496 
[1] "treatment indicator table: "

  0   1 
442 809 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 298.84 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.295 0.101 
 2 mu         0.1   0.2 0.350 0.0999
 3 mu         0.1   0.3 0.445 0.136 
 4 mu         0.1   0.4 0.438 0.145 
 5 mu         0.1   0.5 0.489 0.140 
 6 mu         0.2   0.1 0.262 0.0830
 7 mu         0.2   0.2 0.375 0.0793
 8 mu         0.2   0.3 0.482 0.102 
 9 mu         0.2   0.4 0.487 0.109 
10 mu         0.2   0.5 0.529 0.112 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.896        0.365 0.0000450     17.0 
 2 mu         0.2      1.03         0.847 0.00490       13.4 
 3 mu         0.3      0.997        0.990 0.0520         7.31
 4 mu         0.4      0.977        0.997 0.210          3.40
 5 mu         0.5      0.977        1     0.451          1.69
 6 mu         0.6      0.985        1     0.707          1.28
 7 mu         0.7      0.998        1     0.834          1.25
 8 mu         0.8      1.01         1.00  0.619          1.42
 9 mu         0.9      1.02         1     0.184          2.29
10 mu_1       0.1      1.13         0.748 0.000216      19.0 
11 mu_1       0.2      1.01         0.997 0.0121         7.78
12 mu_1       0.3      0.971        1     0.0899         3.23
13 mu_1       0.4      0.970        1     0.284          1.67
14 mu_1       0.5      0.978        1     0.527          1.42
15 mu_1       0.6      0.987        1     0.766          1.22
16 mu_1       0.7      1.00         1     0.813          1.30
17 mu_1       0.8      1.02         1     0.581          1.48
18 mu_1       0.9      1.02         1     0.162          2.46
19 mu_0       0.1      0.870        0.325 0.0000261     16.8 
20 mu_0       0.2      1.03         0.791 0.00310       14.9 
21 mu_0       0.3      1.01         0.973 0.0357         9.05
22 mu_0       0.4      0.982        1.00  0.157          4.57
23 mu_0       0.5      0.976        1     0.375          2.22
24 mu_0       0.6      0.981        1     0.620          1.38
25 mu_0       0.7      0.991        1     0.827          1.18
26 mu_0       0.8      1.01         1     0.740          1.46
27 mu_0       0.9      1.01         1     0.380          1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.242    0.0000302  3.04e-17      3.80
 2 mu         0.2      0.985    0.00409    1.42e-11     25.7 
 3 mu         0.3      1.81     0.0513     2.75e- 8     45.1 
 4 mu         0.4      2.03     0.263      5.57e- 6     53.6 
 5 mu         0.5      1.65     0.731      3.22e- 4     43.0 
 6 mu         0.6      1.24     0.976      8.23e- 3     15.9 
 7 mu         0.7      1.12     0.937      1.43e- 2      4.38
 8 mu         0.8      1.19     0.629      2.82e- 4      9.20
 9 mu         0.9      1.31     0.122      4.85e- 8     13.5 
10 mu_1       0.1      0.690    0.000201   2.89e-16     10.7 
11 mu_1       0.2      1.56     0.0141     6.73e-11     38.5 
12 mu_1       0.3      2.09     0.117      8.70e- 8     45.1 
13 mu_1       0.4      1.96     0.438      1.32e- 5     56.4 
14 mu_1       0.5      1.49     0.904      6.12e- 4     36.2 
15 mu_1       0.6      1.17     0.942      1.30e- 2     11.1 
16 mu_1       0.7      1.12     0.930      7.55e- 3      5.15
17 mu_1       0.8      1.21     0.495      1.30e- 4     10.1 
18 mu_1       0.9      1.33     0.0877     1.62e- 8     13.6 
19 mu_0       0.1      0.193    0.0000109  0             3.52
20 mu_0       0.2      0.842    0.00140    0            22.5 
21 mu_0       0.3      1.69     0.0217     0            45.1 
22 mu_0       0.4      2.08     0.151      0            51.7 
23 mu_0       0.5      1.82     0.513      0            49.8 
24 mu_0       0.6      1.35     0.958      0            23.0 
25 mu_0       0.7      1.11     0.996      0             4.82
26 mu_0       0.8      1.07     0.945      0             7.42
27 mu_0       0.9      1.09     0.246      0            15.8 
[1] "Total run time was 303.642 seconds"
