
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1290"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  6  6  6  3  9 10  8  4 10  4  4  4  8  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02944 0.30864 0.56869 0.98029 5.00000 
[1] "event indicator table: "

  0   1 
781 509 
[1] "treatment indicator table: "

  0   1 
510 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 135.467 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.353 0.0597
 2 mu         0.1   0.2 0.532 0.0832
 3 mu         0.1   0.3 0.546 0.0740
 4 mu         0.1   0.4 0.628 0.0537
 5 mu         0.1   0.5 0.644 0.0523
 6 mu         0.2   0.1 0.304 0.0398
 7 mu         0.2   0.2 0.455 0.0504
 8 mu         0.2   0.3 0.481 0.0433
 9 mu         0.2   0.4 0.536 0.0314
10 mu         0.2   0.5 0.559 0.0342
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.996        0.934    0.0254      3.67
 2 mu         0.2      0.975        0.970    0.249       1.68
 3 mu         0.3      0.990        1        0.533       1.43
 4 mu         0.4      1.01         1.01     0.719       1.33
 5 mu         0.5      1.01         1        0.848       1.21
 6 mu         0.6      1.00         1        0.807       1.24
 7 mu         0.7      0.991        1        0.730       1.23
 8 mu         0.8      0.995        0.994    0.716       1.29
 9 mu         0.9      1.02         1        0.482       1.91
10 mu_1       0.1      0.957        0.965    0.0683      1.98
11 mu_1       0.2      0.973        0.968    0.392       1.51
12 mu_1       0.3      0.997        1        0.641       1.43
13 mu_1       0.4      1.01         1.00     0.758       1.27
14 mu_1       0.5      1.01         1.00     0.833       1.24
15 mu_1       0.6      0.996        1        0.775       1.23
16 mu_1       0.7      0.990        1.00     0.732       1.26
17 mu_1       0.8      0.998        1        0.692       1.29
18 mu_1       0.9      1.03         1        0.456       1.97
19 mu_0       0.1      1.00         0.937    0.0207      3.93
20 mu_0       0.2      0.975        0.970    0.213       1.82
21 mu_0       0.3      0.987        0.999    0.481       1.45
22 mu_0       0.4      1.00         1        0.676       1.38
23 mu_0       0.5      1.01         1.00     0.818       1.21
24 mu_0       0.6      1.01         1.01     0.828       1.25
25 mu_0       0.7      0.994        0.998    0.727       1.20
26 mu_0       0.8      0.985        0.985    0.736       1.35
27 mu_0       0.9      0.990        0.996    0.604       1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.851    0.000183   1.46e-16     20.7 
 2 mu         0.2      1.03     0.0178     6.78e-11     12.7 
 3 mu         0.3      0.968    0.131      1.32e- 7      7.77
 4 mu         0.4      0.930    0.524      2.67e- 5      5.26
 5 mu         0.5      0.947    0.823      1.37e- 3      2.98
 6 mu         0.6      1.00     1.09       2.90e- 3      2.65
 7 mu         0.7      1.13     1.15       5.27e- 5      3.01
 8 mu         0.8      1.31     0.795      1.57e- 7      5.28
 9 mu         0.9      1.46     0.103      6.07e-12     21.9 
10 mu_1       0.1      1.06     0.00108    0            18.8 
11 mu_1       0.2      0.986    0.0468     0            11.5 
12 mu_1       0.3      0.904    0.296      0             7.40
13 mu_1       0.4      0.915    0.787      0             3.75
14 mu_1       0.5      0.962    0.912      0             2.92
15 mu_1       0.6      1.03     1.05       0             2.65
16 mu_1       0.7      1.17     1.20       0             3.44
17 mu_1       0.8      1.34     0.644      0             6.10
18 mu_1       0.9      1.45     0.0762     0            23.1 
19 mu_0       0.1      0.828    0.0000685  0            20.9 
20 mu_0       0.2      1.04     0.00680    0            14.5 
21 mu_0       0.3      0.995    0.0690     0             7.93
22 mu_0       0.4      0.939    0.312      0             6.26
23 mu_0       0.5      0.932    0.622      0             3.28
24 mu_0       0.6      0.950    0.902      0             2.65
25 mu_0       0.7      1.03     0.994      0             2.50
26 mu_0       0.8      1.23     1.02       0             4.42
27 mu_0       0.9      1.53     0.272      0            10.9 
[1] "Total run time was 139.374 seconds"
