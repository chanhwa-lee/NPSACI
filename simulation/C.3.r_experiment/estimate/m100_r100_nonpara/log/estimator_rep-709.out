
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1234"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  8  5  6 10  4  6  9 10  7  6  3  7  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02759 0.33509 0.58216 0.97915 5.00000 
[1] "event indicator table: "

  0   1 
725 509 
[1] "treatment indicator table: "

  0   1 
434 800 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 172.005 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.441 0.0802
 2 mu         0.1   0.2 0.533 0.0896
 3 mu         0.1   0.3 0.616 0.108 
 4 mu         0.1   0.4 0.746 0.126 
 5 mu         0.1   0.5 0.788 0.140 
 6 mu         0.2   0.1 0.409 0.0525
 7 mu         0.2   0.2 0.486 0.0622
 8 mu         0.2   0.3 0.552 0.0767
 9 mu         0.2   0.4 0.672 0.0834
10 mu         0.2   0.5 0.718 0.0935
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.941        0.418 0.0000334      9.85
 2 mu         0.2      0.976        0.835 0.00654        6.06
 3 mu         0.3      0.981        0.965 0.0864         4.57
 4 mu         0.4      0.981        0.980 0.351          2.58
 5 mu         0.5      0.990        0.998 0.698          1.42
 6 mu         0.6      0.999        1     0.845          1.15
 7 mu         0.7      0.996        1     0.815          1.13
 8 mu         0.8      0.979        1     0.617          1.31
 9 mu         0.9      0.931        0.960 0.204          1.75
10 mu_1       0.1      0.989        0.706 0.000169       8.40
11 mu_1       0.2      0.974        0.931 0.0167         5.70
12 mu_1       0.3      0.974        0.973 0.149          3.86
13 mu_1       0.4      0.980        1     0.468          2.01
14 mu_1       0.5      0.993        1     0.762          1.23
15 mu_1       0.6      1.00         1     0.851          1.13
16 mu_1       0.7      0.994        1     0.762          1.15
17 mu_1       0.8      0.975        0.994 0.575          1.34
18 mu_1       0.9      0.924        0.955 0.180          1.80
19 mu_0       0.1      0.935        0.376 0.0000184     10.9 
20 mu_0       0.2      0.977        0.806 0.00400        6.63
21 mu_0       0.3      0.984        0.930 0.0594         4.88
22 mu_0       0.4      0.981        0.987 0.273          2.96
23 mu_0       0.5      0.986        1.00  0.609          1.60
24 mu_0       0.6      0.997        1     0.812          1.20
25 mu_0       0.7      1.00         1     0.826          1.12
26 mu_0       0.8      0.996        1     0.763          1.20
27 mu_0       0.9      0.992        1     0.416          1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.533    0.0000545  2.41e-15     19.2 
 2 mu         0.2      1.63     0.00556    3.89e-10     48.2 
 3 mu         0.3      2.21     0.0869     2.55e- 7     56.2 
 4 mu         0.4      2.06     0.297      2.55e- 5     34.6 
 5 mu         0.5      1.50     0.748      9.05e- 4     22.2 
 6 mu         0.6      1.10     0.914      1.67e- 2      7.45
 7 mu         0.7      1.14     1.07       1.49e- 2      5.05
 8 mu         0.8      1.62     0.879      1.14e- 4     16.9 
 9 mu         0.9      2.52     0.163      1.41e- 8     61.8 
10 mu_1       0.1      1.28     0.000355   2.17e-14     41.1 
11 mu_1       0.2      2.19     0.0176     1.94e- 9     64.3 
12 mu_1       0.3      2.29     0.188      8.51e- 7     49.9 
13 mu_1       0.4      1.88     0.562      6.37e- 5     33.6 
14 mu_1       0.5      1.33     0.878      1.81e- 3     17.3 
15 mu_1       0.6      1.05     0.918      2.79e- 2      5.23
16 mu_1       0.7      1.20     1.05       6.40e- 3      6.19
17 mu_1       0.8      1.73     0.751      4.28e- 5     21.2 
18 mu_1       0.9      2.63     0.124      4.70e- 9     68.7 
19 mu_0       0.1      0.449    0.0000190  0            16.7 
20 mu_0       0.2      1.49     0.00291    0            44.2 
21 mu_0       0.3      2.18     0.0348     0            58.8 
22 mu_0       0.4      2.18     0.138      0            39.8 
23 mu_0       0.5      1.68     0.445      0            27.1 
24 mu_0       0.6      1.17     0.924      0            10.8 
25 mu_0       0.7      0.993    0.983      0             2.44
26 mu_0       0.8      1.17     0.957      0             7.96
27 mu_0       0.9      1.50     0.313      0            24.4 
[1] "Total run time was 177.413 seconds"
