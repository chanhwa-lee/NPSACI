
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1271"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  2 10  9  8  3  6  6  5  7  9  3  9  8  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04478 0.38644 0.63043 1.00000 4.74628 
[1] "event indicator table: "

  0   1 
762 509 
[1] "treatment indicator table: "

  0   1 
451 820 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.995 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.416 0.149 
 2 mu         0.1   0.2 0.434 0.175 
 3 mu         0.1   0.3 0.649 0.211 
 4 mu         0.1   0.4 0.662 0.220 
 5 mu         0.1   0.5 0.697 0.241 
 6 mu         0.2   0.1 0.364 0.0893
 7 mu         0.2   0.2 0.378 0.106 
 8 mu         0.2   0.3 0.547 0.126 
 9 mu         0.2   0.4 0.559 0.129 
10 mu         0.2   0.5 0.600 0.144 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.24         0.223 0.0000324     32.5 
 2 mu         0.2      1.10         0.726 0.00602       25.6 
 3 mu         0.3      1.05         0.904 0.0753        13.6 
 4 mu         0.4      1.02         0.962 0.289          5.85
 5 mu         0.5      1.00         0.993 0.553          2.37
 6 mu         0.6      0.998        1     0.701          1.25
 7 mu         0.7      1.00         1     0.745          1.37
 8 mu         0.8      1.01         1.01  0.472          1.53
 9 mu         0.9      0.996        0.966 0.0819         1.97
10 mu_1       0.1      1.16         0.530 0.000163      36.3 
11 mu_1       0.2      1.02         0.864 0.0152        14.6 
12 mu_1       0.3      1.00         0.958 0.129          5.61
13 mu_1       0.4      0.998        0.997 0.380          2.69
14 mu_1       0.5      0.994        0.995 0.614          1.74
15 mu_1       0.6      0.997        0.997 0.721          1.23
16 mu_1       0.7      1.01         1     0.704          1.41
17 mu_1       0.8      1.01         1.00  0.424          1.55
18 mu_1       0.9      0.995        0.965 0.0679         2.09
19 mu_0       0.1      1.25         0.187 0.0000179     32.1 
20 mu_0       0.2      1.12         0.643 0.00373       28.3 
21 mu_0       0.3      1.07         0.895 0.0525        17.0 
22 mu_0       0.4      1.04         0.943 0.228          8.22
23 mu_0       0.5      1.01         1     0.492          3.48
24 mu_0       0.6      1.00         0.999 0.671          1.58
25 mu_0       0.7      1.00         1     0.744          1.28
26 mu_0       0.8      1.01         1     0.598          1.45
27 mu_0       0.9      1.01         1.02  0.207          1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.62    0.000122   2.82e-15    114.  
 2 mu         0.2       6.60    0.00922    3.28e-10    499.  
 3 mu         0.3       7.82    0.0902     2.83e- 7    581.  
 4 mu         0.4       5.03    0.321      3.23e- 5    337.  
 5 mu         0.5       2.42    0.795      1.19e- 3    111.  
 6 mu         0.6       1.40    0.919      2.12e- 2     19.7 
 7 mu         0.7       1.31    1.07       3.96e- 2     10.6 
 8 mu         0.8       1.60    0.776      6.04e- 4     20.5 
 9 mu         0.9       1.89    0.130      2.66e- 7     41.4 
10 mu_1       0.1       4.16    0.000854   2.66e-14    304.  
11 mu_1       0.2       8.75    0.0322     1.55e- 9    665.  
12 mu_1       0.3       7.15    0.211      8.91e- 7    517.  
13 mu_1       0.4       3.77    0.516      7.62e- 5    225.  
14 mu_1       0.5       1.86    0.939      2.26e- 3     59.1 
15 mu_1       0.6       1.31    0.966      3.34e- 2      8.77
16 mu_1       0.7       1.35    1.06       1.13e- 2     12.8 
17 mu_1       0.8       1.66    0.686      2.22e- 4     21.7 
18 mu_1       0.9       1.90    0.0892     8.69e- 8     42.7 
19 mu_0       0.1       1.34    0.0000397  0            92.8 
20 mu_0       0.2       6.06    0.00374    0           457.  
21 mu_0       0.3       8.10    0.0401     0           609.  
22 mu_0       0.4       5.88    0.188      0           412.  
23 mu_0       0.5       2.98    0.620      0           162.  
24 mu_0       0.6       1.53    0.958      0            36.2 
25 mu_0       0.7       1.20    1.01       0             6.46
26 mu_0       0.8       1.36    1.01       0            15.8 
27 mu_0       0.9       1.84    0.384      0            29.6 
[1] "Total run time was 198.228 seconds"
