
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1256"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4 10  1  7  8  6  6  7  7  6  9  9  5  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02353 0.29116 0.56816 0.97802 6.00000 
[1] "event indicator table: "

  0   1 
743 513 
[1] "treatment indicator table: "

  0   1 
517 739 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 117.686 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.438 0.0898
 2 mu         0.1   0.2 0.631 0.129 
 3 mu         0.1   0.3 0.634 0.115 
 4 mu         0.1   0.4 0.792 0.177 
 5 mu         0.1   0.5 0.792 0.170 
 6 mu         0.2   0.1 0.346 0.0604
 7 mu         0.2   0.2 0.500 0.0857
 8 mu         0.2   0.3 0.512 0.0574
 9 mu         0.2   0.4 0.653 0.132 
10 mu         0.2   0.5 0.655 0.123 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.950        0.558 0.0000455     14.3 
 2 mu         0.2      0.913        0.885 0.00518        3.96
 3 mu         0.3      0.944        0.949 0.0554         2.21
 4 mu         0.4      0.966        0.995 0.217          1.44
 5 mu         0.5      0.981        0.992 0.481          1.29
 6 mu         0.6      0.999        1     0.750          1.17
 7 mu         0.7      1.02         1.00  0.635          1.43
 8 mu         0.8      1.03         1.01  0.231          1.96
 9 mu         0.9      1.08         1     0.0142         4.85
10 mu_1       0.1      0.842        0.826 0.000219       2.76
11 mu_1       0.2      0.924        0.965 0.0129         2.86
12 mu_1       0.3      0.959        0.988 0.0957         1.87
13 mu_1       0.4      0.974        0.994 0.297          1.36
14 mu_1       0.5      0.987        0.996 0.564          1.25
15 mu_1       0.6      1.01         1     0.807          1.24
16 mu_1       0.7      1.02         1.01  0.580          1.55
17 mu_1       0.8      1.04         1.00  0.194          2.14
18 mu_1       0.9      1.08         1     0.0109         5.28
19 mu_0       0.1      0.962        0.515 0.0000262     15.7 
20 mu_0       0.2      0.910        0.851 0.00325        4.69
21 mu_0       0.3      0.937        0.938 0.0382         2.36
22 mu_0       0.4      0.961        0.993 0.164          1.53
23 mu_0       0.5      0.976        0.986 0.397          1.34
24 mu_0       0.6      0.991        1     0.664          1.17
25 mu_0       0.7      1.01         1     0.762          1.40
26 mu_0       0.8      1.02         1     0.379          1.70
27 mu_0       0.9      1.01         1     0.0440         2.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       9.25    0.000130   7.51e-13    876.  
 2 mu         0.2       9.30    0.0104     1.94e- 8    758.  
 3 mu         0.3       5.17    0.117      6.52e- 6    301.  
 4 mu         0.4       2.45    0.420      3.58e- 4     72.1 
 5 mu         0.5       1.39    0.965      7.07e- 3     12.5 
 6 mu         0.6       1.18    1.03       6.97e- 2      5.14
 7 mu         0.7       1.58    0.972      4.99e- 3     29.2 
 8 mu         0.8       2.74    0.477      3.33e- 5     96.1 
 9 mu         0.9       3.82    0.0454     3.66e- 9    141.  
10 mu_1       0.1      12.9     0.000966   6.62e-12   1169.  
11 mu_1       0.2       7.37    0.0330     8.57e- 8    505.  
12 mu_1       0.3       3.48    0.256      1.92e- 5    134.  
13 mu_1       0.4       1.77    0.712      7.90e- 4     27.0 
14 mu_1       0.5       1.22    0.924      1.25e- 2      7.38
15 mu_1       0.6       1.22    1.04       4.49e- 2      7.55
16 mu_1       0.7       1.76    0.923      1.69e- 3     36.8 
17 mu_1       0.8       2.96    0.371      1.10e- 5    106.  
18 mu_1       0.9       3.89    0.0284     1.07e- 9    138.  
19 mu_0       0.1       8.85    0.0000490  0           844.  
20 mu_0       0.2       9.79    0.00546    0           821.  
21 mu_0       0.3       5.90    0.0554     0           372.  
22 mu_0       0.4       2.90    0.228      0           104.  
23 mu_0       0.5       1.55    0.725      0            18.2 
24 mu_0       0.6       1.13    0.955      0             6.01
25 mu_0       0.7       1.17    0.960      0            11.4 
26 mu_0       0.8       1.82    0.545      0            56.5 
27 mu_0       0.9       3.16    0.0823     0           165.  
[1] "Total run time was 121.088 seconds"
