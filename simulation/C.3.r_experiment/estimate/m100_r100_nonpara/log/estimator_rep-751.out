
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  7  6  3  8  3  6  6  1  8  6  9  8  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06168 0.41492 0.66693 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
782 502 
[1] "treatment indicator table: "

  0   1 
393 891 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 111.68 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.647 0.224 
 2 mu         0.1   0.2 0.785 0.290 
 3 mu         0.1   0.3 0.857 0.317 
 4 mu         0.1   0.4 0.962 0.369 
 5 mu         0.1   0.5 1.05  0.403 
 6 mu         0.2   0.1 0.394 0.0815
 7 mu         0.2   0.2 0.488 0.103 
 8 mu         0.2   0.3 0.546 0.102 
 9 mu         0.2   0.4 0.613 0.121 
10 mu         0.2   0.5 0.688 0.133 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.80         0.562 0.0000613     70.3 
 2 mu         0.2      1.24         0.975 0.00854       17.8 
 3 mu         0.3      1.04         1     0.0681         4.51
 4 mu         0.4      0.976        1     0.229          1.93
 5 mu         0.5      0.978        1     0.473          1.33
 6 mu         0.6      0.995        1     0.716          1.41
 7 mu         0.7      1.01         1     0.838          1.25
 8 mu         0.8      1.01         1     0.800          1.31
 9 mu         0.9      0.981        1     0.576          1.59
10 mu_1       0.1      1.00         0.926 0.000278       9.85
11 mu_1       0.2      1.01         1     0.0211         6.36
12 mu_1       0.3      0.971        0.998 0.117          2.75
13 mu_1       0.4      0.965        1     0.314          1.70
14 mu_1       0.5      0.979        1.00  0.560          1.37
15 mu_1       0.6      0.997        0.992 0.771          1.40
16 mu_1       0.7      1.01         1     0.830          1.22
17 mu_1       0.8      1.01         1     0.778          1.34
18 mu_1       0.9      0.979        1     0.568          1.65
19 mu_0       0.1      1.89         0.525 0.0000373     78.0 
20 mu_0       0.2      1.30         0.956 0.00539       21.9 
21 mu_0       0.3      1.06         1     0.0470         5.92
22 mu_0       0.4      0.983        1     0.172          2.10
23 mu_0       0.5      0.976        1     0.386          1.39
24 mu_0       0.6      0.991        0.997 0.634          1.42
25 mu_0       0.7      1.01         1     0.801          1.35
26 mu_0       0.8      1.01         1.00  0.798          1.22
27 mu_0       0.9      0.999        1     0.648          1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.305  0.00000278   1.13e-18     13.8 
 2 mu         0.2      0.980  0.000641     1.18e-12     29.8 
 3 mu         0.3      1.62   0.0177       3.93e- 9     59.6 
 4 mu         0.4      1.71   0.131        1.24e- 6     53.7 
 5 mu         0.5      1.47   0.499        1.08e- 4     26.5 
 6 mu         0.6      1.26   0.951        4.12e- 3      7.07
 7 mu         0.7      1.18   1.03         1.01e- 2      4.02
 8 mu         0.8      1.14   1.10         1.02e- 4      3.74
 9 mu         0.9      1.43   0.250        2.24e- 8     17.7 
10 mu_1       0.1      0.794  0.0000203    1.13e-17     27.6 
11 mu_1       0.2      1.48   0.00199      5.92e-12     49.7 
12 mu_1       0.3      1.80   0.0484       1.31e- 8     66.2 
13 mu_1       0.4      1.62   0.238        3.10e- 6     44.8 
14 mu_1       0.5      1.35   0.760        2.15e- 4     17.7 
15 mu_1       0.6      1.21   1.07         6.87e- 3      5.06
16 mu_1       0.7      1.16   1.05         4.03e- 3      4.15
17 mu_1       0.8      1.14   1.10         3.53e- 5      4.45
18 mu_1       0.9      1.48   0.196        6.90e- 9     19.7 
19 mu_0       0.1      0.251  0.000000424  0            12.3 
20 mu_0       0.2      0.855  0.000201     0            24.8 
21 mu_0       0.3      1.54   0.00540      0            56.7 
22 mu_0       0.4      1.77   0.0518       0            59.7 
23 mu_0       0.5      1.59   0.204        0            35.3 
24 mu_0       0.6      1.34   0.696        0            11.8 
25 mu_0       0.7      1.22   0.984        0             4.06
26 mu_0       0.8      1.12   1.07         0             4.17
27 mu_0       0.9      1.06   0.468        0             8.77
[1] "Total run time was 114.994 seconds"
