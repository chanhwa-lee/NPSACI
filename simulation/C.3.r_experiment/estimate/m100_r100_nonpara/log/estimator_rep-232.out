
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1314"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  4  6  6  6  5  6  5  6  6  7  8  6  5 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03434 0.36264 0.63714 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
786 528 
[1] "treatment indicator table: "

  0   1 
479 835 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 667
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 122.069 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.396 0.0936
 2 mu         0.1   0.2 0.435 0.0966
 3 mu         0.1   0.3 0.463 0.0869
 4 mu         0.1   0.4 0.452 0.0737
 5 mu         0.1   0.5 0.452 0.0747
 6 mu         0.2   0.1 0.348 0.0513
 7 mu         0.2   0.2 0.394 0.0526
 8 mu         0.2   0.3 0.436 0.0601
 9 mu         0.2   0.4 0.493 0.0609
10 mu         0.2   0.5 0.512 0.0608
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.806        0.413  0.00105       4.99
 2 mu         0.2      0.907        0.784  0.0328        6.86
 3 mu         0.3      0.955        0.941  0.174         5.16
 4 mu         0.4      0.976        0.973  0.438         3.24
 5 mu         0.5      0.987        0.993  0.726         2.05
 6 mu         0.6      0.995        0.999  0.735         1.39
 7 mu         0.7      1.01         1      0.617         1.91
 8 mu         0.8      1.07         1      0.275         6.31
 9 mu         0.9      1.20         1      0.0312       18.8 
10 mu_1       0.1      0.902        0.754  0.00462       8.60
11 mu_1       0.2      0.955        0.912  0.0752        6.44
12 mu_1       0.3      0.970        0.951  0.280         3.91
13 mu_1       0.4      0.982        0.988  0.567         2.46
14 mu_1       0.5      0.990        1      0.711         1.69
15 mu_1       0.6      0.999        1      0.750         1.22
16 mu_1       0.7      1.02         1      0.568         2.22
17 mu_1       0.8      1.08         1      0.239         7.27
18 mu_1       0.9      1.20         0.998  0.0251       19.6 
19 mu_0       0.1      0.795        0.370  0.000650      4.99
20 mu_0       0.2      0.895        0.748  0.0222        6.97
21 mu_0       0.3      0.948        0.907  0.129         5.70
22 mu_0       0.4      0.971        0.952  0.353         3.76
23 mu_0       0.5      0.984        0.999  0.637         2.42
24 mu_0       0.6      0.990        0.998  0.714         1.63
25 mu_0       0.7      0.998        0.992  0.732         1.38
26 mu_0       0.8      1.02         1      0.418         2.62
27 mu_0       0.9      1.12         1      0.0859       11.4 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.475   0.0000102   1.43e-13     35.1 
 2 mu         0.2      0.673   0.00315     8.35e- 9     13.5 
 3 mu         0.3      0.948   0.0685      3.72e- 6     12.6 
 4 mu         0.4      1.06    0.284       1.79e- 4     11.6 
 5 mu         0.5      1.13    0.774       3.39e- 3      6.60
 6 mu         0.6      1.51    1.03        2.47e- 3     11.3 
 7 mu         0.7      3.54    1.07        5.14e- 5     99.6 
 8 mu         0.8     12.1     0.820       2.01e- 7    563.  
 9 mu         0.9     33.2     0.0809      1.38e-11   1852.  
10 mu_1       0.1      0.577   0.0000649   1.35e-12     23.4 
11 mu_1       0.2      0.893   0.0118      3.93e- 8     12.9 
12 mu_1       0.3      1.09    0.149       1.16e- 5     14.0 
13 mu_1       0.4      1.10    0.459       4.18e- 4      9.69
14 mu_1       0.5      1.17    0.856       6.24e- 3      6.53
15 mu_1       0.6      1.70    0.985       2.74e- 4     17.7 
16 mu_1       0.7      4.27    1.06        4.89e- 6    134.  
17 mu_1       0.8     13.9     0.679       1.68e- 8    662.  
18 mu_1       0.9     34.5     0.0546      1.02e-12   1936.  
19 mu_0       0.1      0.464   0.00000391  0            36.4 
20 mu_0       0.2      0.619   0.00127     0            15.7 
21 mu_0       0.3      0.886   0.0275      0            12.0 
22 mu_0       0.4      1.03    0.169       0            12.9 
23 mu_0       0.5      1.09    0.543       0             8.80
24 mu_0       0.6      1.21    0.939       0             6.14
25 mu_0       0.7      1.84    0.919       0            19.5 
26 mu_0       0.8      5.08    0.864       0           165.  
27 mu_0       0.9     21.1     0.249       0          1089.  
[1] "Total run time was 125.956 seconds"
