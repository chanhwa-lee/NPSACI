
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1184"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5  9  8  5  5  8  6  4 11  5  8  2  4  8  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03035 0.35807 0.63220 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
722 462 
[1] "treatment indicator table: "

  0   1 
421 763 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 127.587 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.238 0.126
 2 mu         0.1   0.2 0.314 0.182
 3 mu         0.1   0.3 0.353 0.180
 4 mu         0.1   0.4 0.400 0.216
 5 mu         0.1   0.5 0.420 0.225
 6 mu         0.2   0.1 0.301 0.149
 7 mu         0.2   0.2 0.388 0.198
 8 mu         0.2   0.3 0.447 0.209
 9 mu         0.2   0.4 0.524 0.247
10 mu         0.2   0.5 0.560 0.262
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.764       0.123  0.00000978     35.7 
 2 mu         0.2      1.14        0.477  0.00334        48.9 
 3 mu         0.3      1.06        0.837  0.0575         22.7 
 4 mu         0.4      1.00        0.987  0.269           6.02
 5 mu         0.5      0.999       1      0.592           1.64
 6 mu         0.6      0.999       1      0.824           1.27
 7 mu         0.7      1.00        1      0.778           1.38
 8 mu         0.8      1.01        1      0.682           1.63
 9 mu         0.9      1.01        1      0.275           4.11
10 mu_1       0.1      1.22        0.323  0.0000492      59.5 
11 mu_1       0.2      1.19        0.720  0.00849        40.9 
12 mu_1       0.3      1.03        0.980  0.0989         13.0 
13 mu_1       0.4      1.00        1      0.358           3.07
14 mu_1       0.5      1.00        1      0.669           1.41
15 mu_1       0.6      0.999       1      0.788           1.22
16 mu_1       0.7      1.00        1      0.802           1.42
17 mu_1       0.8      1.01        1      0.657           1.74
18 mu_1       0.9      1.01        0.997  0.248           4.38
19 mu_0       0.1      0.713       0.0984 0.00000540     33.0 
20 mu_0       0.2      1.13        0.408  0.00206        50.9 
21 mu_0       0.3      1.07        0.777  0.0397         26.9 
22 mu_0       0.4      1.00        0.972  0.209           7.98
23 mu_0       0.5      0.997       1      0.515           2.06
24 mu_0       0.6      1.00        1      0.782           1.34
25 mu_0       0.7      0.998       1      0.722           1.29
26 mu_0       0.8      1.00        1      0.783           1.55
27 mu_0       0.9      1.01        1      0.523           2.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      20.4     0.0000962  2.91e-16   1920.  
 2 mu         0.2      48.2     0.00844    7.64e-11   4666.  
 3 mu         0.3      29.4     0.0767     1.13e- 7   2789.  
 4 mu         0.4       8.92    0.284      2.00e- 5    748.  
 5 mu         0.5       2.26    0.653      1.11e- 3     98.8 
 6 mu         0.6       1.17    0.974      2.96e- 2      7.17
 7 mu         0.7       1.12    1.02       1.08e- 2      3.97
 8 mu         0.8       1.47    0.578      1.24e- 4     17.2 
 9 mu         0.9       2.42    0.0806     6.80e- 9     63.0 
10 mu_1       0.1      40.2     0.000590   2.91e-15   3839.  
11 mu_1       0.2      48.2     0.0267     3.82e-10   4666.  
12 mu_1       0.3      20.0     0.183      3.76e- 7   1859.  
13 mu_1       0.4       5.01    0.497      5.01e- 5    374.  
14 mu_1       0.5       1.55    0.820      2.22e- 3     39.5 
15 mu_1       0.6       1.09    1.00       4.93e- 2      5.66
16 mu_1       0.7       1.15    0.980      4.89e- 3      5.67
17 mu_1       0.8       1.56    0.488      4.90e- 5     21.6 
18 mu_1       0.9       2.53    0.0541     1.51e- 9     70.0 
19 mu_0       0.1      18.2     0.0000370  0          1706.  
20 mu_0       0.2      48.2     0.00372    0          4666.  
21 mu_0       0.3      33.5     0.0315     0          3187.  
22 mu_0       0.4      11.5     0.147      0           998.  
23 mu_0       0.5       2.97    0.441      0           158.  
24 mu_0       0.6       1.29    0.773      0            11.5 
25 mu_0       0.7       1.03    0.956      0             3.13
26 mu_0       0.8       1.09    0.877      0             5.44
27 mu_0       0.9       1.42    0.191      0            16.8 
[1] "Total run time was 131.032 seconds"
