
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1327"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3 11  4  3 12  3  2  6  5  6  6  1  9  8 10 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0370  0.3277  0.5943  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
773 554 
[1] "treatment indicator table: "

  0   1 
525 802 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 114.122 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.277 0.0693
 2 mu         0.1   0.2 0.363 0.0309
 3 mu         0.1   0.3 0.436 0.0685
 4 mu         0.1   0.4 0.440 0.0671
 5 mu         0.1   0.5 0.490 0.0942
 6 mu         0.2   0.1 0.286 0.0480
 7 mu         0.2   0.2 0.370 0.0287
 8 mu         0.2   0.3 0.469 0.0553
 9 mu         0.2   0.4 0.482 0.0529
10 mu         0.2   0.5 0.543 0.0712
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.847        0.842    0.0135      2.61
 2 mu         0.2      0.967        0.986    0.141       2.16
 3 mu         0.3      0.993        1        0.394       1.75
 4 mu         0.4      0.991        1        0.678       1.33
 5 mu         0.5      0.988        1        0.799       1.29
 6 mu         0.6      0.993        1        0.786       1.18
 7 mu         0.7      1.01         1        0.806       1.26
 8 mu         0.8      1.03         1.01     0.731       1.32
 9 mu         0.9      1.03         1        0.657       1.50
10 mu_1       0.1      0.965        1        0.0395      2.36
11 mu_1       0.2      1.00         1        0.231       2.24
12 mu_1       0.3      0.997        1        0.507       1.49
13 mu_1       0.4      0.988        1        0.733       1.33
14 mu_1       0.5      0.988        0.997    0.791       1.26
15 mu_1       0.6      0.996        1        0.797       1.20
16 mu_1       0.7      1.01         1        0.793       1.27
17 mu_1       0.8      1.03         1.02     0.710       1.36
18 mu_1       0.9      1.03         1        0.660       1.54
19 mu_0       0.1      0.834        0.810    0.0106      2.72
20 mu_0       0.2      0.958        0.984    0.118       2.15
21 mu_0       0.3      0.992        1        0.346       1.86
22 mu_0       0.4      0.993        1        0.621       1.34
23 mu_0       0.5      0.989        1        0.789       1.32
24 mu_0       0.6      0.990        1        0.769       1.21
25 mu_0       0.7      0.999        1        0.836       1.23
26 mu_0       0.8      1.02         1        0.778       1.34
27 mu_0       0.9      1.04         1.02     0.630       1.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.592    0.000110   3.44e-15     30.4 
 2 mu         0.2      0.942    0.0169     7.12e-10     23.7 
 3 mu         0.3      1.17     0.165      5.00e- 7     12.2 
 4 mu         0.4      1.25     0.546      3.74e- 5      6.71
 5 mu         0.5      1.20     1.04       1.06e- 3      4.20
 6 mu         0.6      1.09     1.06       1.64e- 2      3.19
 7 mu         0.7      1.01     0.912      6.08e- 3      3.65
 8 mu         0.8      1.03     0.501      1.08e- 4      4.90
 9 mu         0.9      1.30     0.0418     2.67e- 8     12.7 
10 mu_1       0.1      0.947    0.000752   3.09e-14     33.8 
11 mu_1       0.2      1.11     0.0495     3.20e- 9     13.2 
12 mu_1       0.3      1.22     0.320      1.67e- 6      9.44
13 mu_1       0.4      1.23     0.842      9.35e- 5      4.85
14 mu_1       0.5      1.16     1.09       2.13e- 3      3.78
15 mu_1       0.6      1.07     1.06       2.20e- 2      3.08
16 mu_1       0.7      1.02     0.802      1.45e- 3      3.89
17 mu_1       0.8      1.07     0.357      2.87e- 5      5.72
18 mu_1       0.9      1.34     0.0273     9.38e- 9     13.2 
19 mu_0       0.1      0.553    0.0000563  0            30.0 
20 mu_0       0.2      0.901    0.00733    0            26.3 
21 mu_0       0.3      1.15     0.0923     0            15.5 
22 mu_0       0.4      1.26     0.379      0             7.99
23 mu_0       0.5      1.24     0.939      0             4.67
24 mu_0       0.6      1.13     1.10       0             3.73
25 mu_0       0.7      0.998    0.895      0             3.38
26 mu_0       0.8      0.902    0.435      0             4.98
27 mu_0       0.9      0.917    0.0338     0             8.49
[1] "Total run time was 117.426 seconds"
