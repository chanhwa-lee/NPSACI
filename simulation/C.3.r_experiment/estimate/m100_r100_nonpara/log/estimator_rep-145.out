
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
13  6  9  6  7  5  4  2  2  7  5  6  5 11  5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04431 0.35620 0.65819 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
698 508 
[1] "treatment indicator table: "

  0   1 
446 760 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 565
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 137.544 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.290 0.0456
 2 mu         0.1   0.2 0.458 0.0766
 3 mu         0.1   0.3 0.520 0.0848
 4 mu         0.1   0.4 0.513 0.0859
 5 mu         0.1   0.5 0.511 0.0901
 6 mu         0.2   0.1 0.341 0.0535
 7 mu         0.2   0.2 0.497 0.0673
 8 mu         0.2   0.3 0.560 0.0741
 9 mu         0.2   0.4 0.570 0.0765
10 mu         0.2   0.5 0.575 0.0816
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.763        0.497 0.0000311     10.9 
 2 mu         0.2      0.919        0.805 0.00394       12.0 
 3 mu         0.3      0.966        0.960 0.0472         4.76
 4 mu         0.4      0.988        1     0.209          2.70
 5 mu         0.5      1.00         1     0.525          1.56
 6 mu         0.6      1.01         1     0.734          1.20
 7 mu         0.7      1.01         1     0.832          1.43
 8 mu         0.8      1.00         1     0.650          1.56
 9 mu         0.9      0.990        1     0.133          2.11
10 mu_1       0.1      0.931        0.827 0.000159      16.4 
11 mu_1       0.2      0.981        0.966 0.0104         9.17
12 mu_1       0.3      0.991        0.999 0.0860         3.69
13 mu_1       0.4      0.999        1     0.300          2.27
14 mu_1       0.5      1.00         1     0.643          1.37
15 mu_1       0.6      1.01         1     0.774          1.30
16 mu_1       0.7      1.01         1     0.830          1.46
17 mu_1       0.8      1.00         1     0.599          1.65
18 mu_1       0.9      0.990        1     0.114          2.24
19 mu_0       0.1      0.744        0.442 0.0000169     10.3 
20 mu_0       0.2      0.904        0.766 0.00233       12.7 
21 mu_0       0.3      0.955        0.943 0.0306         5.57
22 mu_0       0.4      0.980        0.999 0.148          2.98
23 mu_0       0.5      0.995        1     0.408          1.76
24 mu_0       0.6      1.00         1     0.674          1.26
25 mu_0       0.7      1.01         1     0.813          1.36
26 mu_0       0.8      1.00         1     0.827          1.53
27 mu_0       0.9      0.991        1     0.304          1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      15.9     0.000224   6.76e-16   1558.  
 2 mu         0.2      11.4     0.0119     1.58e-10   1065.  
 3 mu         0.3       4.42    0.111      2.04e- 7    323.  
 4 mu         0.4       1.99    0.339      3.10e- 5     56.9 
 5 mu         0.5       1.38    0.714      1.43e- 3     10.5 
 6 mu         0.6       1.17    1.04       5.34e- 3      4.72
 7 mu         0.7       1.13    0.994      8.51e- 5      4.70
 8 mu         0.8       1.19    0.762      1.93e- 7     11.4 
 9 mu         0.9       1.68    0.177      4.20e-12     42.2 
10 mu_1       0.1      18.9     0.00148    6.41e-15   1833.  
11 mu_1       0.2       7.27    0.0394     7.46e-10    627.  
12 mu_1       0.3       2.68    0.231      6.43e- 7    127.  
13 mu_1       0.4       1.63    0.532      7.34e- 5     18.1 
14 mu_1       0.5       1.30    0.725      2.72e- 3      7.42
15 mu_1       0.6       1.15    1.11       1.41e- 3      5.05
16 mu_1       0.7       1.13    0.954      1.92e- 5      5.03
17 mu_1       0.8       1.21    0.631      3.82e- 8     13.4 
18 mu_1       0.9       1.74    0.129      7.37e-13     44.3 
19 mu_0       0.1      15.5     0.0000886  0          1528.  
20 mu_0       0.2      12.4     0.00493    0          1175.  
21 mu_0       0.3       5.17    0.0581     0           408.  
22 mu_0       0.4       2.24    0.207      0            83.7 
23 mu_0       0.5       1.47    0.569      0            13.6 
24 mu_0       0.6       1.21    0.880      0             5.66
25 mu_0       0.7       1.14    1.08       0             5.33
26 mu_0       0.8       1.13    0.983      0             5.85
27 mu_0       0.9       1.19    0.435      0            23.4 
[1] "Total run time was 142.211 seconds"
