
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1358"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  6  3  3  3  9  6  3  7  7  4  8  8 10 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02826 0.35032 0.59497 1.00000 4.17172 
[1] "event indicator table: "

  0   1 
809 549 
[1] "treatment indicator table: "

  0   1 
484 874 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 696
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 155.451 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.446 0.109 
 2 mu         0.1   0.2 0.556 0.119 
 3 mu         0.1   0.3 0.559 0.118 
 4 mu         0.1   0.4 0.606 0.113 
 5 mu         0.1   0.5 0.615 0.114 
 6 mu         0.2   0.1 0.303 0.0800
 7 mu         0.2   0.2 0.392 0.0848
 8 mu         0.2   0.3 0.394 0.0911
 9 mu         0.2   0.4 0.431 0.0917
10 mu         0.2   0.5 0.449 0.0993
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.996        0.762  0.00163      11.4 
 2 mu         0.2      0.906        0.915  0.0568        3.12
 3 mu         0.3      0.947        0.970  0.315         1.74
 4 mu         0.4      0.980        0.986  0.558         1.57
 5 mu         0.5      0.992        0.997  0.713         1.40
 6 mu         0.6      1.00         1      0.842         1.19
 7 mu         0.7      1.02         1      0.849         1.23
 8 mu         0.8      1.03         1.01   0.826         1.39
 9 mu         0.9      1.02         1      0.469         1.55
10 mu_1       0.1      0.811        0.814  0.00735       3.77
11 mu_1       0.2      0.894        0.922  0.133         1.95
12 mu_1       0.3      0.964        0.959  0.505         1.59
13 mu_1       0.4      0.988        0.995  0.599         1.56
14 mu_1       0.5      0.996        1      0.765         1.33
15 mu_1       0.6      1.01         0.999  0.847         1.20
16 mu_1       0.7      1.02         1.00   0.858         1.26
17 mu_1       0.8      1.03         1.01   0.803         1.39
18 mu_1       0.9      1.02         1      0.439         1.56
19 mu_0       0.1      1.02         0.711  0.000999     12.6 
20 mu_0       0.2      0.909        0.904  0.0378        3.75
21 mu_0       0.3      0.939        0.961  0.233         1.84
22 mu_0       0.4      0.974        0.989  0.531         1.57
23 mu_0       0.5      0.988        1      0.661         1.47
24 mu_0       0.6      0.997        0.999  0.828         1.23
25 mu_0       0.7      1.01         1      0.829         1.19
26 mu_0       0.8      1.02         1.00   0.829         1.40
27 mu_0       0.9      1.03         1.01   0.621         1.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.43   0.00000714  3.84e-17     84.9 
 2 mu         0.2       2.59   0.00127     1.79e-11     72.1 
 3 mu         0.3       2.06   0.0300      3.47e- 8     49.0 
 4 mu         0.4       1.49   0.261       7.04e- 6     26.3 
 5 mu         0.5       1.13   0.648       4.07e- 4      8.99
 6 mu         0.6       1.11   0.980       1.75e- 3      3.93
 7 mu         0.7       1.26   1.18        1.79e- 5      5.08
 8 mu         0.8       1.31   1.20        2.37e- 8      5.39
 9 mu         0.9       1.34   0.316       2.29e-13     17.0 
10 mu_1       0.1       3.11   0.0000522   3.65e-16    106.  
11 mu_1       0.2       2.44   0.00474     8.50e-11     72.1 
12 mu_1       0.3       1.83   0.0661      1.10e- 7     38.8 
13 mu_1       0.4       1.32   0.302       1.67e- 5     19.3 
14 mu_1       0.5       1.08   0.874       7.73e- 4      5.29
15 mu_1       0.6       1.14   1.00        3.06e- 4      4.50
16 mu_1       0.7       1.29   1.24        2.69e- 6      4.99
17 mu_1       0.8       1.30   1.15        3.12e- 9      5.93
18 mu_1       0.9       1.34   0.248       2.68e-14     18.0 
19 mu_0       0.1       2.36   0.00000247  0            82.6 
20 mu_0       0.2       2.62   0.000379    0            72.1 
21 mu_0       0.3       2.16   0.0126      0            56.0 
22 mu_0       0.4       1.60   0.106       0            30.9 
23 mu_0       0.5       1.17   0.368       0            12.7 
24 mu_0       0.6       1.06   0.931       0             4.04
25 mu_0       0.7       1.20   1.05        0             5.30
26 mu_0       0.8       1.32   1.36        0             4.76
27 mu_0       0.9       1.34   0.455       0             8.81
[1] "Total run time was 159.782 seconds"
