
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1261"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  3  7  7  8  4  7  8 11  5  8  6  7  4  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02504 0.30669 0.61328 1.00000 7.70108 
[1] "event indicator table: "

  0   1 
782 479 
[1] "treatment indicator table: "

  0   1 
467 794 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 167.539 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.374 0.0615
 2 mu         0.1   0.2 0.479 0.0521
 3 mu         0.1   0.3 0.562 0.0710
 4 mu         0.1   0.4 0.668 0.0873
 5 mu         0.1   0.5 0.707 0.0814
 6 mu         0.2   0.1 0.329 0.0423
 7 mu         0.2   0.2 0.405 0.0362
 8 mu         0.2   0.3 0.484 0.0475
 9 mu         0.2   0.4 0.531 0.0445
10 mu         0.2   0.5 0.571 0.0395
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.13         1        0.0350     12.4 
 2 mu         0.2      1.01         1        0.297       2.83
 3 mu         0.3      0.983        1        0.415       1.38
 4 mu         0.4      0.992        1        0.541       1.37
 5 mu         0.5      0.996        1        0.710       1.27
 6 mu         0.6      0.997        0.998    0.826       1.21
 7 mu         0.7      1.00         1        0.813       1.22
 8 mu         0.8      1.00         1.00     0.605       1.40
 9 mu         0.9      0.998        1        0.431       1.47
10 mu_1       0.1      1.00         1        0.106       2.11
11 mu_1       0.2      0.971        0.983    0.396       1.50
12 mu_1       0.3      0.981        0.992    0.478       1.41
13 mu_1       0.4      0.994        1.00     0.624       1.34
14 mu_1       0.5      0.997        1        0.791       1.28
15 mu_1       0.6      0.998        0.996    0.827       1.19
16 mu_1       0.7      1.00         1        0.806       1.25
17 mu_1       0.8      1.00         1        0.564       1.43
18 mu_1       0.9      0.997        1        0.429       1.53
19 mu_0       0.1      1.14         1        0.0271     13.6 
20 mu_0       0.2      1.02         1        0.253       3.31
21 mu_0       0.3      0.985        1        0.389       1.44
22 mu_0       0.4      0.990        1        0.486       1.39
23 mu_0       0.5      0.995        0.993    0.629       1.32
24 mu_0       0.6      0.994        0.997    0.766       1.25
25 mu_0       0.7      0.998        0.999    0.822       1.20
26 mu_0       0.8      1.00         1        0.771       1.30
27 mu_0       0.9      1.00         1.00     0.448       1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.61     0.000117   2.85e-18     69.7 
 2 mu         0.2      1.97     0.0139     1.50e-12     67.9 
 3 mu         0.3      1.43     0.108      3.32e- 9     30.8 
 4 mu         0.4      1.02     0.438      7.85e- 7      8.60
 5 mu         0.5      0.905    0.705      5.44e- 5      4.09
 6 mu         0.6      0.936    0.756      1.74e- 3      3.78
 7 mu         0.7      1.01     0.871      1.29e- 4      4.10
 8 mu         0.8      1.13     0.876      5.77e- 7      6.86
 9 mu         0.9      1.16     0.168      4.45e-11     11.6 
10 mu_1       0.1      2.27     0.000532   0            99.6 
11 mu_1       0.2      1.74     0.0303     0            48.5 
12 mu_1       0.3      1.14     0.238      0            14.6 
13 mu_1       0.4      0.922    0.552      0             4.65
14 mu_1       0.5      0.906    0.676      0             3.51
15 mu_1       0.6      0.954    0.882      0             3.88
16 mu_1       0.7      1.03     0.889      0             4.69
17 mu_1       0.8      1.14     0.726      0             6.86
18 mu_1       0.9      1.14     0.134      0            12.1 
19 mu_0       0.1      1.54     0.0000416  0            66.4 
20 mu_0       0.2      2.03     0.00597    0            72.7 
21 mu_0       0.3      1.55     0.0446     0            37.7 
22 mu_0       0.4      1.08     0.258      0            12.3 
23 mu_0       0.5      0.904    0.615      0             4.67
24 mu_0       0.6      0.909    0.615      0             4.14
25 mu_0       0.7      0.969    0.881      0             3.95
26 mu_0       0.8      1.07     0.832      0             6.86
27 mu_0       0.9      1.29     0.211      0             6.81
[1] "Total run time was 172.186 seconds"
