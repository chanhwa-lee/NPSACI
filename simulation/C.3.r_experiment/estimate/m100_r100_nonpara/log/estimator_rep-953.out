
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1328"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  8  7  4  3  7  7  2  9  5  8  5 10  9  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01516 0.30763 0.57535 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
790 538 
[1] "treatment indicator table: "

  0   1 
503 825 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 696
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 122.128 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.383 0.0534
 2 mu         0.1   0.2 0.578 0.0677
 3 mu         0.1   0.3 0.681 0.107 
 4 mu         0.1   0.4 0.693 0.0908
 5 mu         0.1   0.5 0.693 0.0776
 6 mu         0.2   0.1 0.333 0.0307
 7 mu         0.2   0.2 0.503 0.0394
 8 mu         0.2   0.3 0.569 0.0498
 9 mu         0.2   0.4 0.598 0.0449
10 mu         0.2   0.5 0.616 0.0397
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.974        0.933    0.0208      3.73
 2 mu         0.2      0.974        0.984    0.221       2.00
 3 mu         0.3      0.976        1        0.438       1.76
 4 mu         0.4      0.980        1        0.647       1.45
 5 mu         0.5      0.984        1.00     0.696       1.18
 6 mu         0.6      0.992        1.00     0.731       1.27
 7 mu         0.7      1.00         1        0.810       1.35
 8 mu         0.8      1.01         1.00     0.737       1.39
 9 mu         0.9      1.02         1        0.487       1.60
10 mu_1       0.1      0.981        1        0.0638      2.84
11 mu_1       0.2      0.978        0.997    0.339       1.87
12 mu_1       0.3      0.977        1        0.508       1.61
13 mu_1       0.4      0.979        1        0.731       1.31
14 mu_1       0.5      0.984        0.997    0.675       1.18
15 mu_1       0.6      0.993        1        0.765       1.29
16 mu_1       0.7      1.01         1        0.788       1.35
17 mu_1       0.8      1.01         1.00     0.729       1.40
18 mu_1       0.9      1.02         1        0.469       1.65
19 mu_0       0.1      0.973        0.874    0.0160      4.12
20 mu_0       0.2      0.973        1.00     0.185       2.07
21 mu_0       0.3      0.976        0.995    0.408       1.82
22 mu_0       0.4      0.980        1        0.591       1.55
23 mu_0       0.5      0.985        1        0.718       1.26
24 mu_0       0.6      0.990        0.997    0.679       1.23
25 mu_0       0.7      0.999        1        0.796       1.34
26 mu_0       0.8      1.01         1        0.768       1.34
27 mu_0       0.9      1.02         1.00     0.643       1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.58    0.0000603  3.54e-15     61.0 
 2 mu         0.2       1.95    0.00695    4.12e-10     42.3 
 3 mu         0.3       1.54    0.0624     3.56e- 7     19.1 
 4 mu         0.4       1.14    0.381      4.05e- 5      8.26
 5 mu         0.5       1.06    0.807      1.50e- 3      3.40
 6 mu         0.6       1.20    1.15       1.74e- 2      4.15
 7 mu         0.7       1.34    1.11       6.16e- 4      6.05
 8 mu         0.8       1.29    1.05       1.60e- 6      7.75
 9 mu         0.9       1.17    0.148      3.91e-11     10.3 
10 mu_1       0.1       2.02    0.000342   3.34e-14     61.0 
11 mu_1       0.2       1.81    0.0239     1.95e- 9     28.7 
12 mu_1       0.3       1.32    0.142      1.12e- 6     13.9 
13 mu_1       0.4       1.07    0.571      9.57e- 5      5.18
14 mu_1       0.5       1.10    0.891      2.83e- 3      3.62
15 mu_1       0.6       1.25    1.16       2.24e- 3      4.25
16 mu_1       0.7       1.36    1.11       7.08e- 5      6.72
17 mu_1       0.8       1.28    0.887      4.00e- 7      7.54
18 mu_1       0.9       1.17    0.109      8.69e-12     11.0 
19 mu_0       0.1       1.54    0.0000228  0            61.0 
20 mu_0       0.2       1.98    0.00226    0            47.6 
21 mu_0       0.3       1.63    0.0282     0            24.5 
22 mu_0       0.4       1.18    0.212      0            10.3 
23 mu_0       0.5       1.03    0.633      0             4.25
24 mu_0       0.6       1.13    1.06       0             3.99
25 mu_0       0.7       1.31    1.10       0             4.60
26 mu_0       0.8       1.35    1.21       0             8.61
27 mu_0       0.9       1.23    0.435      0             7.02
[1] "Total run time was 125.441 seconds"
