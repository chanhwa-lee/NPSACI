
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1324"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  6  3  8  4  5  9  6  9  4 11  7  5  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03075 0.31496 0.59247 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
795 529 
[1] "treatment indicator table: "

  0   1 
470 854 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 167.541 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.292 0.0571
 2 mu         0.1   0.2 0.390 0.0735
 3 mu         0.1   0.3 0.446 0.0737
 4 mu         0.1   0.4 0.449 0.0741
 5 mu         0.1   0.5 0.511 0.0672
 6 mu         0.2   0.1 0.327 0.0441
 7 mu         0.2   0.2 0.430 0.0634
 8 mu         0.2   0.3 0.488 0.0684
 9 mu         0.2   0.4 0.500 0.0659
10 mu         0.2   0.5 0.559 0.0592
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.881        0.896    0.0332      2.86
 2 mu         0.2      0.989        1.00     0.296       2.07
 3 mu         0.3      1.02         0.991    0.377       1.81
 4 mu         0.4      1.02         1        0.604       1.72
 5 mu         0.5      1.01         1.01     0.775       1.28
 6 mu         0.6      0.997        1        0.813       1.18
 7 mu         0.7      0.991        0.998    0.757       1.29
 8 mu         0.8      0.988        1        0.707       1.32
 9 mu         0.9      0.979        0.983    0.490       1.46
10 mu_1       0.1      0.991        1        0.0916      2.36
11 mu_1       0.2      1.02         1        0.346       1.95
12 mu_1       0.3      1.02         1        0.411       1.91
13 mu_1       0.4      1.02         1.01     0.707       1.59
14 mu_1       0.5      1.01         1        0.824       1.23
15 mu_1       0.6      0.994        1        0.784       1.15
16 mu_1       0.7      0.991        0.999    0.760       1.33
17 mu_1       0.8      0.987        0.999    0.694       1.29
18 mu_1       0.9      0.978        0.988    0.468       1.48
19 mu_0       0.1      0.869        0.858    0.0267      2.93
20 mu_0       0.2      0.983        1        0.257       2.10
21 mu_0       0.3      1.01         0.984    0.362       1.76
22 mu_0       0.4      1.02         1        0.536       1.80
23 mu_0       0.5      1.02         1.01     0.710       1.41
24 mu_0       0.6      1.00         1        0.781       1.21
25 mu_0       0.7      0.991        1        0.752       1.20
26 mu_0       0.8      0.991        1        0.757       1.43
27 mu_0       0.9      0.986        0.993    0.670       1.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.13     0.0000548  3.98e-18     59.8 
 2 mu         0.2      1.21     0.0137     2.09e-12     25.8 
 3 mu         0.3      1.20     0.109      4.63e- 9     13.0 
 4 mu         0.4      1.21     0.438      1.09e- 6      8.32
 5 mu         0.5      1.15     0.727      7.59e- 5      5.56
 6 mu         0.6      1.02     0.924      2.43e- 3      3.33
 7 mu         0.7      0.940    0.957      2.62e- 4      3.07
 8 mu         0.8      1.04     0.825      1.43e- 6      4.30
 9 mu         0.9      1.34     0.227      1.10e-10     10.4 
10 mu_1       0.1      1.34     0.000361   3.98e-17     42.7 
11 mu_1       0.2      1.24     0.0409     1.04e-11     20.0 
12 mu_1       0.3      1.26     0.259      1.54e- 8      9.42
13 mu_1       0.4      1.24     0.642      2.74e- 6      8.32
14 mu_1       0.5      1.13     0.800      1.52e- 4      4.45
15 mu_1       0.6      0.981    0.961      1.13e- 3      3.35
16 mu_1       0.7      0.928    0.888      2.68e- 5      3.32
17 mu_1       0.8      1.05     0.692      1.38e- 7      4.26
18 mu_1       0.9      1.36     0.179      1.53e-11     10.9 
19 mu_0       0.1      1.11     0.0000231  0            61.7 
20 mu_0       0.2      1.20     0.00586    0            30.0 
21 mu_0       0.3      1.17     0.0539     0            14.7 
22 mu_0       0.4      1.18     0.312      0             8.32
23 mu_0       0.5      1.17     0.638      0             6.67
24 mu_0       0.6      1.07     0.761      0             4.62
25 mu_0       0.7      0.967    0.855      0             3.58
26 mu_0       0.8      0.964    0.756      0             4.53
27 mu_0       0.9      1.17     0.259      0             5.93
[1] "Total run time was 171.774 seconds"
