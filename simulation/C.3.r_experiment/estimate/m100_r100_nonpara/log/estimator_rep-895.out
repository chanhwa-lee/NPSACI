
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1207"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  7  9  7  6  5  2  7  5  4  4 10  5  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02886 0.35626 0.63031 1.00000 5.79058 
[1] "event indicator table: "

  0   1 
717 490 
[1] "treatment indicator table: "

  0   1 
450 757 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 126.25 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.301 0.0888
 2 mu         0.1   0.2 0.347 0.0704
 3 mu         0.1   0.3 0.336 0.0604
 4 mu         0.1   0.4 0.343 0.0675
 5 mu         0.1   0.5 0.389 0.0461
 6 mu         0.2   0.1 0.302 0.0798
 7 mu         0.2   0.2 0.345 0.0498
 8 mu         0.2   0.3 0.351 0.0431
 9 mu         0.2   0.4 0.364 0.0548
10 mu         0.2   0.5 0.428 0.0417
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.665        0.687  0.000262      2.24
 2 mu         0.2      0.783        0.907  0.0214        2.01
 3 mu         0.3      0.881        0.978  0.154         2.08
 4 mu         0.4      0.954        0.962  0.415         2.49
 5 mu         0.5      0.994        1      0.672         2.10
 6 mu         0.6      1.00         1      0.863         1.47
 7 mu         0.7      0.988        1      0.706         1.19
 8 mu         0.8      0.966        1.00   0.369         1.44
 9 mu         0.9      0.938        1      0.0669        2.82
10 mu_1       0.1      0.759        0.774  0.00118       2.79
11 mu_1       0.2      0.853        0.975  0.0519        1.80
12 mu_1       0.3      0.928        0.971  0.257         2.58
13 mu_1       0.4      0.979        1      0.584         2.46
14 mu_1       0.5      1.00         1      0.798         1.84
15 mu_1       0.6      1.00         1      0.867         1.29
16 mu_1       0.7      0.985        1      0.659         1.23
17 mu_1       0.8      0.964        0.991  0.334         1.52
18 mu_1       0.9      0.936        1      0.0548        2.91
19 mu_0       0.1      0.654        0.654  0.000160      2.26
20 mu_0       0.2      0.765        0.859  0.0137        2.09
21 mu_0       0.3      0.862        0.982  0.110         1.87
22 mu_0       0.4      0.937        0.963  0.302         2.51
23 mu_0       0.5      0.986        1.00   0.534         2.36
24 mu_0       0.6      1.00         1      0.773         1.75
25 mu_0       0.7      0.994        1      0.817         1.21
26 mu_0       0.8      0.975        0.997  0.506         1.30
27 mu_0       0.9      0.958        1      0.166         2.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     105.      0.000163   4.78e-17   10160. 
 2 mu         0.2      77.6     0.00886    2.23e-11    6945. 
 3 mu         0.3      30.0     0.103      4.32e- 8    2109. 
 4 mu         0.4       9.89    0.356      8.75e- 6     403. 
 5 mu         0.5       3.56    0.802      5.06e- 4     153. 
 6 mu         0.6       1.62    1.04       1.29e- 2      35.4
 7 mu         0.7       1.48    1.05       3.41e- 2      22.1
 8 mu         0.8       3.31    0.594      1.03e- 4     163. 
 9 mu         0.9       9.86    0.0859     4.00e- 9     679. 
10 mu_1       0.1     127.      0.00103    4.54e-16   11953. 
11 mu_1       0.2      51.2     0.0319     1.06e-10    4085. 
12 mu_1       0.3      16.2     0.211      1.37e- 7     827. 
13 mu_1       0.4       5.56    0.576      2.08e- 5     252. 
14 mu_1       0.5       2.27    0.958      9.62e- 4      76.3
15 mu_1       0.6       1.32    1.07       2.05e- 2      14.8
16 mu_1       0.7       1.56    0.945      5.83e- 3      29.9
17 mu_1       0.8       3.71    0.453      1.52e- 5     193. 
18 mu_1       0.9      10.4     0.0567     5.23e-10     715. 
19 mu_0       0.1     102.      0.0000456  0           9961. 
20 mu_0       0.2      84.2     0.00446    0           7660. 
21 mu_0       0.3      35.9     0.0459     0           2658. 
22 mu_0       0.4      12.8     0.225      0            546. 
23 mu_0       0.5       4.85    0.639      0            229. 
24 mu_0       0.6       2.08    1.02       0             66.4
25 mu_0       0.7       1.31    1.04       0             10.6
26 mu_0       0.8       1.68    0.873      0             42.9
27 mu_0       0.9       5.34    0.215      0            357. 
[1] "Total run time was 129.337 seconds"
