
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1301"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  8  6  6  6  5  3  7  8  5 10  5 14  2  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02939 0.34384 0.59389 1.00000 5.55110 
[1] "event indicator table: "

  0   1 
798 503 
[1] "treatment indicator table: "

  0   1 
453 848 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 156.449 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.246 0.0899
 2 mu         0.1   0.2 0.281 0.131 
 3 mu         0.1   0.3 0.336 0.123 
 4 mu         0.1   0.4 0.329 0.157 
 5 mu         0.1   0.5 0.323 0.166 
 6 mu         0.2   0.1 0.276 0.0962
 7 mu         0.2   0.2 0.317 0.139 
 8 mu         0.2   0.3 0.383 0.135 
 9 mu         0.2   0.4 0.392 0.169 
10 mu         0.2   0.5 0.393 0.179 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.780        0.606 0.000000243      8.64
 2 mu         0.2      0.949        0.792 0.000146        20.4 
 3 mu         0.3      0.938        0.892 0.00465         14.4 
 4 mu         0.4      0.924        0.952 0.0423           5.14
 5 mu         0.5      0.952        0.973 0.185            2.16
 6 mu         0.6      0.982        0.990 0.479            1.87
 7 mu         0.7      1.00         1     0.692            1.85
 8 mu         0.8      1.04         1     0.376            5.97
 9 mu         0.9      1.19         1     0.0870          23.0 
10 mu_1       0.1      0.902        0.764 0.00000146      15.5 
11 mu_1       0.2      0.977        0.872 0.000451        21.6 
12 mu_1       0.3      0.937        0.930 0.00983         10.4 
13 mu_1       0.4      0.940        0.970 0.0691           3.12
14 mu_1       0.5      0.968        0.989 0.249            2.20
15 mu_1       0.6      0.991        1     0.562            1.72
16 mu_1       0.7      1.01         1     0.628            2.26
17 mu_1       0.8      1.05         1     0.325            7.31
18 mu_1       0.9      1.21         1     0.0711          25.6 
19 mu_0       0.1      0.767        0.585 0.000000107      8.82
20 mu_0       0.2      0.942        0.774 0.0000698       20.0 
21 mu_0       0.3      0.938        0.872 0.00243         16.1 
22 mu_0       0.4      0.913        0.950 0.0245           6.48
23 mu_0       0.5      0.936        0.959 0.120            2.11
24 mu_0       0.6      0.970        0.985 0.355            2.09
25 mu_0       0.7      0.992        0.996 0.701            1.47
26 mu_0       0.8      0.997        1     0.582            1.27
27 mu_0       0.9      0.977        1     0.230            1.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value  max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>      <dbl>
 1 mu         0.1  533620.     0.0000152   2.69e-14 53162128. 
 2 mu         0.2  211324.     0.00220     1.82e- 9 20440760. 
 3 mu         0.3   53457.     0.0362      1.05e- 6  4728257. 
 4 mu         0.4    9918.     0.188       8.94e- 5   728425. 
 5 mu         0.5    1312.     0.541       2.65e- 3    70918. 
 6 mu         0.6     107.     0.917       2.11e- 2     6816. 
 7 mu         0.7       5.94   1.16        5.98e- 4      300. 
 8 mu         0.8       9.92   1.09        3.06e- 6      742. 
 9 mu         0.9      60.5    0.256       2.66e-10     5498. 
10 mu_1       0.1  359117.     0.000111    2.40e-13 35441418. 
11 mu_1       0.2   76275.     0.00788     8.56e- 9  6813587. 
12 mu_1       0.3   15352.     0.0794      3.28e- 6  1050724. 
13 mu_1       0.4    2764.     0.336       2.10e- 4   154130. 
14 mu_1       0.5     379.     0.628       4.98e- 3    28136. 
15 mu_1       0.6      32.4    1.02        6.21e- 3     2673. 
16 mu_1       0.7       3.62   1.15        1.51e- 4      110. 
17 mu_1       0.8      12.0    0.971       6.74e- 7      928. 
18 mu_1       0.9      66.7    0.207       5.21e-11     6109. 
19 mu_0       0.1  553009.     0.00000461  0        55131095. 
20 mu_0       0.2  245087.     0.000906    0        23847553. 
21 mu_0       0.3   69788.     0.0139      0         6304342. 
22 mu_0       0.4   14687.     0.0901      0         1133105. 
23 mu_0       0.5    2245.     0.342       0          132381. 
24 mu_0       0.6     220.     0.657       0           13030. 
25 mu_0       0.7      11.4    0.990       0             765. 
26 mu_0       0.8       1.68   1.19        0              41.6
27 mu_0       0.9       3.88   0.619       0             274. 
[1] "Total run time was 160.432 seconds"
