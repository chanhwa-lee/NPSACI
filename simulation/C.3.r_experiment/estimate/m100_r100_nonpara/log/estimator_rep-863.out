
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1192"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 12 13 14 15 16 17 18 19 20 
 7  5 11  6  5  9 12  7  6  8  5  7  5  1  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03694 0.38064 0.62478 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
705 487 
[1] "treatment indicator table: "

  0   1 
439 753 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 439.84 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.451 0.0858
 2 mu         0.1   0.2 0.474 0.0811
 3 mu         0.1   0.3 0.552 0.110 
 4 mu         0.1   0.4 0.559 0.107 
 5 mu         0.1   0.5 0.575 0.105 
 6 mu         0.2   0.1 0.425 0.0573
 7 mu         0.2   0.2 0.460 0.0462
 8 mu         0.2   0.3 0.539 0.0725
 9 mu         0.2   0.4 0.553 0.0643
10 mu         0.2   0.5 0.586 0.0586
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.939        0.628   0.00170      8.82
 2 mu         0.2      1.00         0.946   0.0701       5.29
 3 mu         0.3      1.01         1       0.384        2.11
 4 mu         0.4      1.02         1       0.624        1.59
 5 mu         0.5      1.02         1.00    0.676        1.28
 6 mu         0.6      1.01         1.00    0.831        1.17
 7 mu         0.7      1.00         1       0.819        1.20
 8 mu         0.8      1.00         1       0.734        1.40
 9 mu         0.9      1.02         1       0.434        2.00
10 mu_1       0.1      1.04         0.978   0.00690      9.47
11 mu_1       0.2      1.03         1       0.149        3.34
12 mu_1       0.3      1.02         1       0.566        1.79
13 mu_1       0.4      1.02         1       0.635        1.34
14 mu_1       0.5      1.01         1       0.702        1.24
15 mu_1       0.6      1.00         1.00    0.823        1.16
16 mu_1       0.7      1.00         1       0.811        1.21
17 mu_1       0.8      1.00         1       0.715        1.45
18 mu_1       0.9      1.02         1       0.400        2.10
19 mu_0       0.1      0.928        0.567   0.00112      8.75
20 mu_0       0.2      0.994        0.920   0.0504       5.78
21 mu_0       0.3      1.01         1       0.305        2.29
22 mu_0       0.4      1.02         1       0.616        1.79
23 mu_0       0.5      1.02         1       0.649        1.35
24 mu_0       0.6      1.01         1       0.787        1.22
25 mu_0       0.7      1.01         1       0.823        1.18
26 mu_0       0.8      1.00         1       0.744        1.23
27 mu_0       0.9      1.01         1       0.613        1.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.09    0.000157   2.70e-18     42.8 
 2 mu         0.2       1.55    0.0162     2.83e-12     39.5 
 3 mu         0.3       1.56    0.124      9.40e- 9     30.7 
 4 mu         0.4       1.47    0.400      2.97e- 6     16.6 
 5 mu         0.5       1.33    0.706      2.57e- 4     16.0 
 6 mu         0.6       1.14    1.01       9.86e- 3      7.40
 7 mu         0.7       1.07    1.01       3.85e- 3      4.26
 8 mu         0.8       1.21    0.688      3.38e- 5      5.50
 9 mu         0.9       1.56    0.118      6.61e- 9     32.8 
10 mu_1       0.1       1.70    0.00104    2.70e-17     53.0 
11 mu_1       0.2       1.63    0.0445     1.41e-11     42.3 
12 mu_1       0.3       1.52    0.259      3.13e- 8     21.9 
13 mu_1       0.4       1.43    0.674      7.41e- 6     18.5 
14 mu_1       0.5       1.27    0.955      5.14e- 4     14.2 
15 mu_1       0.6       1.11    0.912      1.64e- 2      5.48
16 mu_1       0.7       1.08    0.939      1.30e- 3      4.06
17 mu_1       0.8       1.24    0.520      9.94e- 6      6.44
18 mu_1       0.9       1.57    0.0765     1.73e- 9     36.4 
19 mu_0       0.1       1.02    0.0000722  0            42.8 
20 mu_0       0.2       1.53    0.00665    0            39.9 
21 mu_0       0.3       1.58    0.0477     0            34.4 
22 mu_0       0.4       1.50    0.232      0            17.5 
23 mu_0       0.5       1.38    0.571      0            17.8 
24 mu_0       0.6       1.19    0.787      0            10.3 
25 mu_0       0.7       1.05    0.971      0             4.74
26 mu_0       0.8       1.10    0.989      0             4.57
27 mu_0       0.9       1.38    0.299      0            10.1 
[1] "Total run time was 444.822 seconds"
