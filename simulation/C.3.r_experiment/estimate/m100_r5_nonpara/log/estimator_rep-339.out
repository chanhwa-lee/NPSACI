
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1298"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  6  2 11  4  5  2  4  6  7 11  9  7  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02432 0.33036 0.59055 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
760 538 
[1] "treatment indicator table: "

  0   1 
505 793 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 692
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 38.347 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.425 0.240
 2 mu         0.1   0.2 0.523 0.250
 3 mu         0.1   0.3 0.556 0.272
 4 mu         0.1   0.4 0.594 0.288
 5 mu         0.1   0.5 0.583 0.293
 6 mu         0.2   0.1 0.385 0.124
 7 mu         0.2   0.2 0.468 0.126
 8 mu         0.2   0.3 0.517 0.135
 9 mu         0.2   0.4 0.580 0.144
10 mu         0.2   0.5 0.588 0.147
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.914       0.0216 0.0000000141      41.6 
 2 mu         0.2      0.958       0.212  0.0000297         18.0 
 3 mu         0.3      0.996       0.661  0.00184            6.95
 4 mu         0.4      1.03        0.924  0.0260             3.33
 5 mu         0.5      1.03        0.996  0.147              2.45
 6 mu         0.6      1.01        1.01   0.242              2.18
 7 mu         0.7      0.980       0.930  0.0939             2.44
 8 mu         0.8      1.00        0.779  0.00740            6.68
 9 mu         0.9      1.04        0.510  0.0000426          8.67
10 mu_1       0.1      1.10        0.0923 0.0000000945      29.7 
11 mu_1       0.2      0.986       0.440  0.0000996          9.55
12 mu_1       0.3      1.02        0.833  0.00416            5.00
13 mu_1       0.4      1.04        1.02   0.0447             3.00
14 mu_1       0.5      1.03        1.01   0.0922             2.32
15 mu_1       0.6      1.00        1.03   0.244              2.22
16 mu_1       0.7      0.982       0.919  0.0659             2.98
17 mu_1       0.8      1.02        0.726  0.00475            7.30
18 mu_1       0.9      1.04        0.446  0.0000248          8.43
19 mu_0       0.1      0.894       0.0138 0.00000000522     42.9 
20 mu_0       0.2      0.951       0.166  0.0000122         20.9 
21 mu_0       0.3      0.983       0.540  0.000852           7.78
22 mu_0       0.4      1.03        0.863  0.0135             4.03
23 mu_0       0.5      1.04        1.01   0.0921             2.99
24 mu_0       0.6      1.01        1.01   0.110              2.11
25 mu_0       0.7      0.975       0.970  0.159              2.06
26 mu_0       0.8      0.953       0.866  0.0180             4.20
27 mu_0       0.9      1.07        0.770  0.000203          10.8 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.26    0.000185   5.94e-15     46.3 
 2 mu         0.2       1.75    0.0126     9.59e-10     52.8 
 3 mu         0.3       1.65    0.124      8.27e- 7     31.4 
 4 mu         0.4       1.45    0.522      9.43e- 5     10.9 
 5 mu         0.5       1.30    0.968      3.49e- 3      6.37
 6 mu         0.6       1.29    1.06       1.86e- 2      7.89
 7 mu         0.7       2.29    0.961      5.37e- 4     59.8 
 8 mu         0.8       8.60    0.460      2.39e- 6    419.  
 9 mu         0.9      30.0     0.0371     1.31e-10   1964.  
10 mu_1       0.1       1.94    0.00135    5.34e-14     57.9 
11 mu_1       0.2       1.73    0.0348     4.53e- 9     49.5 
12 mu_1       0.3       1.48    0.292      2.60e- 6     19.6 
13 mu_1       0.4       1.33    0.775      2.23e- 4      9.65
14 mu_1       0.5       1.24    1.00       6.59e- 3      4.96
15 mu_1       0.6       1.34    1.02       7.75e- 3     12.3 
16 mu_1       0.7       2.71    0.895      1.92e- 4     80.0 
17 mu_1       0.8       9.95    0.374      7.47e- 7    498.  
18 mu_1       0.9      31.4     0.0209     3.65e-11   2073.  
19 mu_0       0.1       1.19    0.0000441  0            45.1 
20 mu_0       0.2       1.76    0.00531    0            53.6 
21 mu_0       0.3       1.73    0.0652     0            36.4 
22 mu_0       0.4       1.53    0.302      0            15.8 
23 mu_0       0.5       1.35    0.756      0             7.79
24 mu_0       0.6       1.21    1.04       0             4.98
25 mu_0       0.7       1.31    1.05       0            12.5 
26 mu_0       0.8       3.20    0.696      0           105.  
27 mu_0       0.9      16.9     0.0910     0           982.  
[1] "Total run time was 41.676 seconds"
