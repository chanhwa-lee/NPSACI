
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1357"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  7  4  2  9  5  5  4  8  7  8  8  5  8 12  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01775 0.31535 0.59835 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
801 556 
[1] "treatment indicator table: "

  0   1 
569 788 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 691
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 44.099 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.382 0.114 
 2 mu         0.1   0.2 0.388 0.103 
 3 mu         0.1   0.3 0.414 0.115 
 4 mu         0.1   0.4 0.457 0.136 
 5 mu         0.1   0.5 0.480 0.133 
 6 mu         0.2   0.1 0.382 0.0719
 7 mu         0.2   0.2 0.418 0.0665
 8 mu         0.2   0.3 0.462 0.0766
 9 mu         0.2   0.4 0.513 0.0823
10 mu         0.2   0.5 0.557 0.0832
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.662       0.0789 0.0000000934      7.66
 2 mu         0.2      0.899       0.420  0.000170          5.21
 3 mu         0.3      0.981       0.871  0.00894           3.11
 4 mu         0.4      1.03        0.971  0.0887            2.80
 5 mu         0.5      1.04        1.02   0.296             1.90
 6 mu         0.6      1.04        1.06   0.305             1.78
 7 mu         0.7      1.02        0.994  0.219             2.07
 8 mu         0.8      1.02        0.918  0.0294            3.13
 9 mu         0.9      1.06        0.441  0.000321          6.29
10 mu_1       0.1      0.942       0.237  0.000000590       6.82
11 mu_1       0.2      0.967       0.713  0.000538          4.42
12 mu_1       0.3      0.989       0.955  0.0190            2.80
13 mu_1       0.4      1.03        0.970  0.134             2.66
14 mu_1       0.5      1.04        1.02   0.384             2.04
15 mu_1       0.6      1.03        1.06   0.195             1.72
16 mu_1       0.7      1.02        0.965  0.135             2.21
17 mu_1       0.8      1.02        0.876  0.0187            3.23
18 mu_1       0.9      1.07        0.385  0.000197          6.96
19 mu_0       0.1      0.631       0.0614 0.0000000382      7.87
20 mu_0       0.2      0.882       0.359  0.0000779         5.41
21 mu_0       0.3      0.977       0.754  0.00464           3.64
22 mu_0       0.4      1.03        0.965  0.0582            2.89
23 mu_0       0.5      1.05        1.04   0.207             2.09
24 mu_0       0.6      1.05        1.04   0.436             2.02
25 mu_0       0.7      1.04        1.02   0.140             1.84
26 mu_0       0.8      1.02        0.875  0.0227            2.73
27 mu_0       0.9      0.974       0.692  0.000855          3.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.454     0.000399  1.54e-18     11.7 
 2 mu         0.2      0.677     0.0212    1.62e-12      9.01
 3 mu         0.3      0.924     0.207     5.38e- 9      4.24
 4 mu         0.4      1.02      0.702     1.70e- 6      3.94
 5 mu         0.5      0.984     0.976     1.47e- 4      2.63
 6 mu         0.6      0.962     1.01      4.18e- 3      3.69
 7 mu         0.7      1.01      0.875     1.54e- 4      4.17
 8 mu         0.8      1.12      0.380     1.36e- 6      5.83
 9 mu         0.9      1.45      0.0414    3.32e-10     18.8 
10 mu_1       0.1      0.637     0.00250   1.54e-17     13.9 
11 mu_1       0.2      0.796     0.0717    8.09e-12      6.01
12 mu_1       0.3      1.01      0.389     1.79e- 8      4.40
13 mu_1       0.4      1.04      0.832     4.24e- 6      3.94
14 mu_1       0.5      0.993     1.02      2.94e- 4      2.67
15 mu_1       0.6      0.977     0.946     5.36e- 4      4.10
16 mu_1       0.7      1.02      0.797     1.70e- 5      3.97
17 mu_1       0.8      1.14      0.270     1.31e- 7      6.72
18 mu_1       0.9      1.48      0.0286    3.19e-11     20.8 
19 mu_0       0.1      0.434     0.000177  0            12.0 
20 mu_0       0.2      0.647     0.0104    0             9.76
21 mu_0       0.3      0.885     0.131     0             4.96
22 mu_0       0.4      1.00      0.518     0             3.94
23 mu_0       0.5      0.974     0.945     0             3.16
24 mu_0       0.6      0.939     0.861     0             3.07
25 mu_0       0.7      0.969     0.806     0             4.63
26 mu_0       0.8      1.06      0.619     0             4.22
27 mu_0       0.9      1.18      0.0701    0             9.21
[1] "Total run time was 47.338 seconds"
