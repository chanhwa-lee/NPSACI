
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1273"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  8  4  9  7  9  5  9  6  4  4  2  9  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01851 0.33272 0.61553 1.00000 5.02903 
[1] "event indicator table: "

  0   1 
765 508 
[1] "treatment indicator table: "

  0   1 
438 835 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 86.455 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.338 0.151
 2 mu         0.1   0.2 0.552 0.287
 3 mu         0.1   0.3 0.562 0.284
 4 mu         0.1   0.4 0.592 0.284
 5 mu         0.1   0.5 0.614 0.272
 6 mu         0.2   0.1 0.341 0.123
 7 mu         0.2   0.2 0.543 0.234
 8 mu         0.2   0.3 0.569 0.230
 9 mu         0.2   0.4 0.603 0.228
10 mu         0.2   0.5 0.634 0.217
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.748      0.00336 0.00000000524     31.3 
 2 mu         0.2      0.905      0.0590  0.0000191         19.0 
 3 mu         0.3      0.936      0.310   0.00152           12.7 
 4 mu         0.4      0.934      0.653   0.0215            10.6 
 5 mu         0.5      0.945      0.813   0.101              5.09
 6 mu         0.6      0.969      0.931   0.292              2.43
 7 mu         0.7      0.978      0.941   0.179              1.55
 8 mu         0.8      1.00       0.956   0.128              3.72
 9 mu         0.9      1.13       0.664   0.00313            9.21
10 mu_1       0.1      1.02       0.0168  0.0000000341      34.7 
11 mu_1       0.2      0.966      0.146   0.0000623         12.1 
12 mu_1       0.3      0.945      0.471   0.00331           13.6 
13 mu_1       0.4      0.933      0.718   0.0345             8.72
14 mu_1       0.5      0.958      0.935   0.135              3.53
15 mu_1       0.6      0.982      0.926   0.337              2.15
16 mu_1       0.7      0.985      0.957   0.172              1.95
17 mu_1       0.8      1.01       0.917   0.0977             4.48
18 mu_1       0.9      1.15       0.607   0.00216           10.1 
19 mu_0       0.1      0.718      0.00174 0.00000000204     30.9 
20 mu_0       0.2      0.890      0.0323  0.00000832        21.1 
21 mu_0       0.3      0.932      0.210   0.000746          12.4 
22 mu_0       0.4      0.935      0.516   0.0129            11.9 
23 mu_0       0.5      0.933      0.747   0.0681             6.65
24 mu_0       0.6      0.950      0.880   0.198              2.85
25 mu_0       0.7      0.962      0.944   0.195              1.77
26 mu_0       0.8      0.964      0.991   0.0271             2.00
27 mu_0       0.9      1.01       0.832   0.000330           3.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      26.1    0.0000330   3.26e-13   2450.  
 2 mu         0.2      11.5    0.00268     9.65e- 9    849.  
 3 mu         0.3       5.52   0.0473      2.70e- 6    255.  
 4 mu         0.4       2.63   0.236       1.14e- 4     63.7 
 5 mu         0.5       1.48   0.688       2.07e- 3     13.3 
 6 mu         0.6       1.16   1.03        2.21e- 2      3.95
 7 mu         0.7       1.09   1.02        5.60e- 2      4.41
 8 mu         0.8       1.09   0.724       3.74e- 4      7.37
 9 mu         0.9       1.06   0.105       4.11e- 8     13.5 
10 mu_1       0.1       3.05   0.000210    0           160.  
11 mu_1       0.2       3.43   0.00882     0           129.  
12 mu_1       0.3       2.54   0.0929      0           101.  
13 mu_1       0.4       1.59   0.379       0            36.8 
14 mu_1       0.5       1.19   0.801       0             6.99
15 mu_1       0.6       1.09   0.937       0             3.80
16 mu_1       0.7       1.07   1.01        0             5.04
17 mu_1       0.8       1.09   0.604       0             7.37
18 mu_1       0.9       1.05   0.0733      0            15.0 
19 mu_0       0.1      28.6    0.00000445  0          2723.  
20 mu_0       0.2      13.6    0.000903    0          1061.  
21 mu_0       0.3       6.80   0.0199      0           365.  
22 mu_0       0.4       3.33   0.136       0           106.  
23 mu_0       0.5       1.76   0.492       0            24.7 
24 mu_0       0.6       1.26   0.901       0             7.20
25 mu_0       0.7       1.13   1.05        0             4.05
26 mu_0       0.8       1.11   0.957       0             7.37
27 mu_0       0.9       1.11   0.274       0            11.3 
[1] "Total run time was 91.361 seconds"
