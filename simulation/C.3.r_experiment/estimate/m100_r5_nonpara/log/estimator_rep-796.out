
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1253"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  9  6  5  5  5  6  8  6  4  6  8  9  4  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03006 0.32667 0.59643 0.98122 5.25236 
[1] "event indicator table: "

  0   1 
708 545 
[1] "treatment indicator table: "

  0   1 
481 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.716 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.470 0.139 
 2 mu         0.1   0.2 0.469 0.142 
 3 mu         0.1   0.3 0.584 0.188 
 4 mu         0.1   0.4 0.622 0.189 
 5 mu         0.1   0.5 0.667 0.201 
 6 mu         0.2   0.1 0.403 0.0769
 7 mu         0.2   0.2 0.429 0.0801
 8 mu         0.2   0.3 0.514 0.0952
 9 mu         0.2   0.4 0.556 0.102 
10 mu         0.2   0.5 0.585 0.110 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.962       0.0719 0.000000295     21.5 
 2 mu         0.2      1.04        0.373  0.000169         7.67
 3 mu         0.3      1.01        0.846  0.00510          4.68
 4 mu         0.4      0.993       0.920  0.0441           2.49
 5 mu         0.5      1.00        0.999  0.185            2.71
 6 mu         0.6      1.01        0.976  0.281            1.90
 7 mu         0.7      1.01        0.970  0.267            1.98
 8 mu         0.8      0.982       0.977  0.0563           2.13
 9 mu         0.9      0.900       0.666  0.00123          3.79
10 mu_1       0.1      1.09        0.249  0.00000196      15.1 
11 mu_1       0.2      1.06        0.664  0.000564         6.68
12 mu_1       0.3      1.00        0.848  0.0114           3.41
13 mu_1       0.4      0.991       0.989  0.0748           2.65
14 mu_1       0.5      1.00        1.01   0.218            2.64
15 mu_1       0.6      1.00        0.992  0.249            1.89
16 mu_1       0.7      1.00        0.958  0.272            1.95
17 mu_1       0.8      0.974       0.979  0.0417           2.26
18 mu_1       0.9      0.893       0.591  0.000789         3.99
19 mu_0       0.1      0.948       0.0499 0.000000109     22.2 
20 mu_0       0.2      1.03        0.295  0.0000700        9.16
21 mu_0       0.3      1.01        0.710  0.00240          5.23
22 mu_0       0.4      0.994       0.898  0.0236           2.61
23 mu_0       0.5      1.00        0.958  0.113            2.79
24 mu_0       0.6      1.01        1.03   0.206            2.28
25 mu_0       0.7      1.01        0.954  0.178            2.06
26 mu_0       0.8      1.01        0.981  0.115            1.97
27 mu_0       0.9      0.967       0.961  0.00435          2.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.26      0.000258  1.80e-15     88.4 
 2 mu         0.2      1.15      0.0245    3.73e-10     24.2 
 3 mu         0.3      1.22      0.173     4.22e- 7      9.14
 4 mu         0.4      1.20      0.513     5.50e- 5      5.39
 5 mu         0.5      1.14      0.984     2.12e- 3      4.03
 6 mu         0.6      1.07      1.01      1.18e- 2      3.17
 7 mu         0.7      1.06      1.10      4.99e- 4      3.92
 8 mu         0.8      1.27      0.677     5.77e- 6      5.62
 9 mu         0.9      1.91      0.0929    3.65e-10     21.2 
10 mu_1       0.1      0.831     0.00195   0            14.0 
11 mu_1       0.2      1.20      0.0590    0            13.4 
12 mu_1       0.3      1.24      0.357     0             7.55
13 mu_1       0.4      1.19      0.831     0             4.66
14 mu_1       0.5      1.12      1.05      0             3.87
15 mu_1       0.6      1.05      1.09      0             2.80
16 mu_1       0.7      1.07      0.984     0             4.11
17 mu_1       0.8      1.32      0.513     0             7.02
18 mu_1       0.9      1.98      0.0588    0            23.6 
19 mu_0       0.1      1.30      0.000110  0            98.3 
20 mu_0       0.2      1.14      0.00899   0            30.3 
21 mu_0       0.3      1.21      0.0831    0            10.4 
22 mu_0       0.4      1.21      0.277     0             5.98
23 mu_0       0.5      1.17      0.808     0             4.43
24 mu_0       0.6      1.09      0.976     0             3.73
25 mu_0       0.7      1.02      0.884     0             3.49
26 mu_0       0.8      1.04      0.903     0             4.49
27 mu_0       0.9      1.23      0.0942    0             9.13
[1] "Total run time was 69.944 seconds"
