
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1305"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  9  7  3  4  4  8  6  6  9 11  2  6  5  6 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0428  0.3670  0.6290  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
762 543 
[1] "treatment indicator table: "

  0   1 
544 761 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 697
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.651 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.395 0.151 
 2 mu         0.1   0.2 0.541 0.209 
 3 mu         0.1   0.3 0.630 0.247 
 4 mu         0.1   0.4 0.640 0.240 
 5 mu         0.1   0.5 0.639 0.237 
 6 mu         0.2   0.1 0.354 0.0988
 7 mu         0.2   0.2 0.479 0.135 
 8 mu         0.2   0.3 0.557 0.162 
 9 mu         0.2   0.4 0.583 0.152 
10 mu         0.2   0.5 0.592 0.147 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.875       0.0320 0.00000179      22.1 
 2 mu         0.2      0.906       0.333  0.000956         9.78
 3 mu         0.3      0.857       0.690  0.0262           3.87
 4 mu         0.4      0.873       0.836  0.199            1.93
 5 mu         0.5      0.945       0.942  0.382            1.79
 6 mu         0.6      1.04        1.04   0.509            1.71
 7 mu         0.7      1.10        1.05   0.399            2.01
 8 mu         0.8      1.10        1.03   0.0503           4.65
 9 mu         0.9      1.16        0.543  0.000606        11.5 
10 mu_1       0.1      1.09        0.117  0.00000994      13.6 
11 mu_1       0.2      0.912       0.606  0.00301          7.34
12 mu_1       0.3      0.862       0.839  0.0553           2.70
13 mu_1       0.4      0.899       0.884  0.275            1.90
14 mu_1       0.5      0.978       0.963  0.424            1.69
15 mu_1       0.6      1.06        1.05   0.549            1.91
16 mu_1       0.7      1.11        1.05   0.311            2.02
17 mu_1       0.8      1.10        0.996  0.0359           5.18
18 mu_1       0.9      1.17        0.479  0.000397        12.7 
19 mu_0       0.1      0.851       0.0212 0.000000752     23.2 
20 mu_0       0.2      0.904       0.246  0.000443        10.4 
21 mu_0       0.3      0.855       0.579  0.0137           4.56
22 mu_0       0.4      0.856       0.809  0.120            2.05
23 mu_0       0.5      0.912       0.889  0.264            1.89
24 mu_0       0.6      0.996       0.983  0.375            1.71
25 mu_0       0.7      1.08        1.04   0.456            2.11
26 mu_0       0.8      1.11        1.10   0.108            2.54
27 mu_0       0.9      1.07        0.864  0.00248          8.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.683    0.000130   2.69e-16     50.9 
 2 mu         0.2      1.08     0.0153     1.25e-10     44.0 
 3 mu         0.3      1.12     0.160      2.43e- 7     17.5 
 4 mu         0.4      1.06     0.576      4.92e- 5      4.68
 5 mu         0.5      1.04     0.936      2.85e- 3      3.04
 6 mu         0.6      1.05     1.03       3.74e- 2      2.66
 7 mu         0.7      1.07     1.08       1.23e- 3      3.65
 8 mu         0.8      1.28     0.386      7.21e- 6     13.7 
 9 mu         0.9      2.19     0.0235     4.04e-10     63.2 
10 mu_1       0.1      1.14     0.000816   2.55e-15     67.9 
11 mu_1       0.2      1.22     0.0449     5.95e-10     29.4 
12 mu_1       0.3      1.13     0.314      7.69e- 7      8.43
13 mu_1       0.4      1.05     0.841      1.17e- 4      3.10
14 mu_1       0.5      1.05     1.04       5.41e- 3      2.86
15 mu_1       0.6      1.06     1.15       1.07e- 2      2.66
16 mu_1       0.7      1.09     0.932      2.98e- 4      4.82
17 mu_1       0.8      1.35     0.305      1.75e- 6     17.1 
18 mu_1       0.9      2.29     0.0154     1.12e-10     70.3 
19 mu_0       0.1      0.633    0.0000509  0            49.0 
20 mu_0       0.2      1.04     0.00778    0            47.7 
21 mu_0       0.3      1.11     0.0907     0            21.6 
22 mu_0       0.4      1.06     0.344      0             6.04
23 mu_0       0.5      1.04     0.812      0             3.22
24 mu_0       0.6      1.05     1.12       0             2.66
25 mu_0       0.7      1.03     1.04       0             2.62
26 mu_0       0.8      0.999    0.675      0             4.77
27 mu_0       0.9      1.29     0.0724     0            20.2 
[1] "Total run time was 60.547 seconds"
