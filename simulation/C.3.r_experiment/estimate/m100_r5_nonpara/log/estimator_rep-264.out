
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1231"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8  6  8  8  5  6  3  6  4 12  6 10  3  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06034 0.39948 0.66097 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
771 460 
[1] "treatment indicator table: "

  0   1 
402 829 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 42.544 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.207 0.0771
 2 mu         0.1   0.2 0.274 0.111 
 3 mu         0.1   0.3 0.301 0.132 
 4 mu         0.1   0.4 0.363 0.140 
 5 mu         0.1   0.5 0.400 0.150 
 6 mu         0.2   0.1 0.195 0.0429
 7 mu         0.2   0.2 0.251 0.0628
 8 mu         0.2   0.3 0.292 0.0681
 9 mu         0.2   0.4 0.344 0.0687
10 mu         0.2   0.5 0.382 0.0776
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.792      0.00728  9.71e-12     32.8 
 2 mu         0.2      0.759      0.152    1.18e- 7     11.4 
 3 mu         0.3      0.816      0.485    2.49e- 5      7.34
 4 mu         0.4      0.866      0.704    9.62e- 4      4.54
 5 mu         0.5      0.900      0.939    1.42e- 2      2.04
 6 mu         0.6      0.948      1.01     8.69e- 2      1.97
 7 mu         0.7      1.02       1.03     3.07e- 1      2.05
 8 mu         0.8      1.04       1.04     2.68e- 1      2.00
 9 mu         0.9      0.934      0.822    1.24e- 2      2.90
10 mu_1       0.1      0.694      0.0282   8.02e-11      9.79
11 mu_1       0.2      0.765      0.348    4.91e- 7      7.88
12 mu_1       0.3      0.841      0.595    6.91e- 5      6.79
13 mu_1       0.4      0.880      0.832    2.02e- 3      3.32
14 mu_1       0.5      0.911      0.914    2.24e- 2      1.99
15 mu_1       0.6      0.964      1.03     1.21e- 1      1.88
16 mu_1       0.7      1.03       1.02     3.72e- 1      2.14
17 mu_1       0.8      1.03       1.03     2.11e- 1      1.96
18 mu_1       0.9      0.923      0.797    8.18e- 3      3.12
19 mu_0       0.1      0.803      0.00495  1.87e-12     36.5 
20 mu_0       0.2      0.757      0.0932   2.52e- 8     14.2 
21 mu_0       0.3      0.806      0.396    5.92e- 6      7.57
22 mu_0       0.4      0.857      0.621    2.60e- 4      5.35
23 mu_0       0.5      0.889      0.861    4.46e- 3      2.58
24 mu_0       0.6      0.924      0.924    3.61e- 2      2.11
25 mu_0       0.7      0.990      1.04     1.54e- 1      2.04
26 mu_0       0.8      1.06       1.08     1.83e- 1      2.32
27 mu_0       0.9      1.03       0.965    5.04e- 2      2.24
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.836   0.0000111   1.92e-14     30.9 
 2 mu         0.2      2.02    0.00142     1.12e- 9     60.2 
 3 mu         0.3      1.98    0.0224      5.44e- 7     40.9 
 4 mu         0.4      1.46    0.194       3.06e- 5     15.3 
 5 mu         0.5      1.15    0.606       6.95e- 4      5.14
 6 mu         0.6      1.11    0.951       8.92e- 3      4.85
 7 mu         0.7      1.16    1.08        3.87e- 3      5.38
 8 mu         0.8      1.19    1.11        2.97e- 5      5.77
 9 mu         0.9      1.15    0.326       5.16e- 9      7.44
10 mu_1       0.1      1.80    0.0000717   1.81e-13     61.9 
11 mu_1       0.2      2.38    0.00640     5.26e- 9     60.2 
12 mu_1       0.3      1.82    0.0574      1.81e- 6     27.3 
13 mu_1       0.4      1.31    0.333       7.64e- 5      7.63
14 mu_1       0.5      1.11    0.704       1.39e- 3      4.33
15 mu_1       0.6      1.12    0.925       1.49e- 2      5.39
16 mu_1       0.7      1.17    1.09        1.04e- 3      5.12
17 mu_1       0.8      1.20    0.965       6.96e- 6      5.69
18 mu_1       0.9      1.15    0.256       1.08e- 9      7.72
19 mu_0       0.1      0.730   0.00000275  0            27.5 
20 mu_0       0.2      1.93    0.000364    0            60.2 
21 mu_0       0.3      2.05    0.00929     0            46.8 
22 mu_0       0.4      1.56    0.0910      0            20.3 
23 mu_0       0.5      1.19    0.319       0             5.95
24 mu_0       0.6      1.10    0.722       0             4.37
25 mu_0       0.7      1.14    1.09        0             5.97
26 mu_0       0.8      1.17    1.04        0             6.07
27 mu_0       0.9      1.10    0.387       0             5.35
[1] "Total run time was 45.606 seconds"
