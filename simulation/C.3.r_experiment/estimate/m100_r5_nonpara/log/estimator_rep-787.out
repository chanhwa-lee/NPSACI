
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1226"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7 10  3  7  5  7  2  6  6 11  9  6  8  5  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05112 0.39641 0.63888 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
742 484 
[1] "treatment indicator table: "

  0   1 
418 808 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 42.916 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.408 0.158
 2 mu         0.1   0.2 0.434 0.165
 3 mu         0.1   0.3 0.510 0.193
 4 mu         0.1   0.4 0.525 0.186
 5 mu         0.1   0.5 0.568 0.198
 6 mu         0.2   0.1 0.442 0.142
 7 mu         0.2   0.2 0.485 0.152
 8 mu         0.2   0.3 0.579 0.184
 9 mu         0.2   0.4 0.580 0.180
10 mu         0.2   0.5 0.663 0.203
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.747      0.0133  0.00000000757     27.4 
 2 mu         0.2      1.00       0.180   0.0000278         29.6 
 3 mu         0.3      1.00       0.521   0.00224           10.4 
 4 mu         0.4      0.997      0.874   0.0253             3.72
 5 mu         0.5      0.990      0.944   0.139              2.29
 6 mu         0.6      0.999      1.02    0.280              1.67
 7 mu         0.7      1.02       1.04    0.323              1.73
 8 mu         0.8      1.01       1.01    0.0557             2.26
 9 mu         0.9      0.989      0.739   0.000712           4.04
10 mu_1       0.1      1.01       0.0543  0.0000000492      41.2 
11 mu_1       0.2      1.03       0.384   0.0000909         22.2 
12 mu_1       0.3      1.00       0.780   0.00494            5.24
13 mu_1       0.4      0.993      0.888   0.0488             3.32
14 mu_1       0.5      0.989      0.996   0.216              1.78
15 mu_1       0.6      1.01       1.02    0.326              1.66
16 mu_1       0.7      1.02       1.02    0.304              1.90
17 mu_1       0.8      1.01       0.979   0.0395             2.58
18 mu_1       0.9      0.986      0.663   0.000454           4.42
19 mu_0       0.1      0.718      0.00777 0.00000000294     25.9 
20 mu_0       0.2      0.998      0.134   0.0000121         31.5 
21 mu_0       0.3      1.00       0.430   0.000736          12.6 
22 mu_0       0.4      0.999      0.782   0.00963            4.01
23 mu_0       0.5      0.990      0.918   0.0626             2.80
24 mu_0       0.6      0.987      1.01    0.211              1.77
25 mu_0       0.7      0.998      0.997   0.312              1.65
26 mu_0       0.8      1.01       1.03    0.120              2.26
27 mu_0       0.9      1.02       1.02    0.00303            3.11
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.19     0.0000481  2.10e-14    233.  
 2 mu         0.2      1.91     0.00486    2.18e- 9    101.  
 3 mu         0.3      1.10     0.0628     1.64e- 6     26.6 
 4 mu         0.4      0.867    0.282      1.60e- 4      6.70
 5 mu         0.5      0.907    0.757      3.29e- 3      4.04
 6 mu         0.6      0.993    1.01       3.52e- 2      2.46
 7 mu         0.7      1.05     1.08       1.02e- 3      2.38
 8 mu         0.8      1.12     0.788      6.00e- 6      4.51
 9 mu         0.9      1.15     0.148      8.24e-10     10.6 
10 mu_1       0.1      2.71     0.000337   1.88e-13    166.  
11 mu_1       0.2      1.22     0.0161     9.73e- 9     35.9 
12 mu_1       0.3      0.879    0.137      4.89e- 6     11.0 
13 mu_1       0.4      0.867    0.482      3.59e- 4      5.98
14 mu_1       0.5      0.949    0.862      6.59e- 3      3.36
15 mu_1       0.6      1.01     1.02       4.39e- 3      2.34
16 mu_1       0.7      1.06     1.04       1.04e- 4      2.44
17 mu_1       0.8      1.14     0.652      5.36e- 7      4.70
18 mu_1       0.9      1.16     0.108      6.54e-11     11.8 
19 mu_0       0.1      3.24     0.0000151  0           240.  
20 mu_0       0.2      2.09     0.00203    0           117.  
21 mu_0       0.3      1.20     0.0258     0            35.3 
22 mu_0       0.4      0.868    0.159      0             8.75
23 mu_0       0.5      0.864    0.560      0             5.10
24 mu_0       0.6      0.964    0.989      0             3.07
25 mu_0       0.7      1.04     1.10       0             2.38
26 mu_0       0.8      1.07     1.13       0             3.76
27 mu_0       0.9      1.03     0.377      0             5.69
[1] "Total run time was 46.084 seconds"
