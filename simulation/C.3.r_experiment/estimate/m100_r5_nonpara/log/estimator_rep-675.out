
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1231"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5 13  4  5  6 10  7  4  3  4  2  6  8  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02824 0.34480 0.59780 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
726 505 
[1] "treatment indicator table: "

  0   1 
485 746 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 574
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 62.006 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.465 0.114 
 2 mu         0.1   0.2 0.506 0.124 
 3 mu         0.1   0.3 0.710 0.162 
 4 mu         0.1   0.4 0.731 0.160 
 5 mu         0.1   0.5 0.804 0.188 
 6 mu         0.2   0.1 0.373 0.0579
 7 mu         0.2   0.2 0.428 0.0595
 8 mu         0.2   0.3 0.589 0.0771
 9 mu         0.2   0.4 0.629 0.0778
10 mu         0.2   0.5 0.682 0.0918
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.09         0.174 0.0000000439     13.9 
 2 mu         0.2      1.09         0.737 0.0000958         4.78
 3 mu         0.3      1.08         1.02  0.00614           4.25
 4 mu         0.4      1.04         1.03  0.0870            2.04
 5 mu         0.5      1.00         0.983 0.257             1.67
 6 mu         0.6      0.978        0.979 0.335             1.75
 7 mu         0.7      0.978        0.957 0.286             2.32
 8 mu         0.8      0.986        1.03  0.124             2.11
 9 mu         0.9      1.00         0.700 0.00444           4.80
10 mu_1       0.1      0.952        0.400 0.000000294       6.85
11 mu_1       0.2      1.09         0.990 0.000323          5.33
12 mu_1       0.3      1.06         1.00  0.0139            3.52
13 mu_1       0.4      1.01         1.06  0.149             1.87
14 mu_1       0.5      0.979        0.959 0.262             1.74
15 mu_1       0.6      0.965        0.954 0.396             1.81
16 mu_1       0.7      0.975        0.958 0.259             2.38
17 mu_1       0.8      0.987        1.01  0.101             2.28
18 mu_1       0.9      1.00         0.616 0.00321           4.97
19 mu_0       0.1      1.10         0.138 0.0000000161     15.4 
20 mu_0       0.2      1.09         0.606 0.0000390         5.36
21 mu_0       0.3      1.10         0.998 0.00281           4.57
22 mu_0       0.4      1.05         1.05  0.0406            2.40
23 mu_0       0.5      1.02         1.04  0.109             1.92
24 mu_0       0.6      0.997        0.992 0.235             1.81
25 mu_0       0.7      0.986        0.978 0.351             2.21
26 mu_0       0.8      0.984        0.938 0.144             2.36
27 mu_0       0.9      0.966        0.848 0.00826           3.26
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07     0.000208   1.41e-17     27.7 
 2 mu         0.2      1.42     0.0140     7.38e-12     30.0 
 3 mu         0.3      1.25     0.113      1.64e- 8     10.9 
 4 mu         0.4      1.06     0.508      3.87e- 6      6.93
 5 mu         0.5      1.00     0.867      2.69e- 4      4.34
 6 mu         0.6      1.02     1.02       3.44e- 3      3.11
 7 mu         0.7      1.07     1.11       5.47e- 5      2.96
 8 mu         0.8      1.21     0.746      1.12e- 7      5.63
 9 mu         0.9      1.49     0.108      1.21e-12     19.0 
10 mu_1       0.1      1.64     0.00119    1.41e-16     41.6 
11 mu_1       0.2      1.44     0.0418     3.69e-11     22.5 
12 mu_1       0.3      1.16     0.262      5.46e- 8      8.09
13 mu_1       0.4      1.02     0.709      9.68e- 6      6.11
14 mu_1       0.5      1.00     0.935      5.37e- 4      3.57
15 mu_1       0.6      1.04     1.10       9.04e- 4      3.34
16 mu_1       0.7      1.08     1.05       1.23e- 5      2.73
17 mu_1       0.8      1.23     0.588      2.09e- 8      5.98
18 mu_1       0.9      1.50     0.0705     2.02e-13     21.1 
19 mu_0       0.1      1.01     0.0000623  0            27.3 
20 mu_0       0.2      1.42     0.00637    0            31.8 
21 mu_0       0.3      1.28     0.0519     0            12.7 
22 mu_0       0.4      1.10     0.332      0             7.47
23 mu_0       0.5      0.998    0.736      0             5.11
24 mu_0       0.6      1.00     0.882      0             3.16
25 mu_0       0.7      1.04     1.03       0             3.52
26 mu_0       0.8      1.13     1.10       0             4.22
27 mu_0       0.9      1.36     0.233      0            10.7 
[1] "Total run time was 66.405 seconds"
