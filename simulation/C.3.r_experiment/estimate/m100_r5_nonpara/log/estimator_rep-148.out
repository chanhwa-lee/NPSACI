
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1210"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  9  7  8  6  9  5  3  7  5  8  3  4  6  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0331  0.3347  0.6142  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
737 473 
[1] "treatment indicator table: "

  0   1 
465 745 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 578
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 64 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.327 0.101 
 2 mu         0.1   0.2 0.419 0.128 
 3 mu         0.1   0.3 0.440 0.152 
 4 mu         0.1   0.4 0.437 0.157 
 5 mu         0.1   0.5 0.434 0.159 
 6 mu         0.2   0.1 0.333 0.0562
 7 mu         0.2   0.2 0.464 0.0748
 8 mu         0.2   0.3 0.516 0.0909
 9 mu         0.2   0.4 0.530 0.0964
10 mu         0.2   0.5 0.538 0.101 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.826       0.0975 0.0000000990     19.5 
 2 mu         0.2      1.06        0.477  0.000161         10.7 
 3 mu         0.3      1.14        0.827  0.00744           8.29
 4 mu         0.4      1.10        0.950  0.0746            5.01
 5 mu         0.5      1.02        0.943  0.279             2.48
 6 mu         0.6      0.977       0.973  0.326             1.95
 7 mu         0.7      0.985       0.966  0.101             2.96
 8 mu         0.8      0.977       0.940  0.0103            2.88
 9 mu         0.9      0.921       0.646  0.0000722         6.56
10 mu_1       0.1      1.10        0.287  0.000000595      14.8 
11 mu_1       0.2      1.20        0.865  0.000483         10.2 
12 mu_1       0.3      1.18        0.939  0.0150            6.93
13 mu_1       0.4      1.09        1.04   0.115             3.72
14 mu_1       0.5      1.00        1.01   0.336             2.05
15 mu_1       0.6      0.976       0.981  0.285             2.27
16 mu_1       0.7      0.987       0.969  0.0761            3.13
17 mu_1       0.8      0.970       0.896  0.00704           2.71
18 mu_1       0.9      0.917       0.614  0.0000441         7.09
19 mu_0       0.1      0.796       0.0651 0.0000000440     20.6 
20 mu_0       0.2      1.02        0.367  0.0000799        11.3 
21 mu_0       0.3      1.13        0.769  0.00419           8.88
22 mu_0       0.4      1.11        0.917  0.0402            6.06
23 mu_0       0.5      1.04        0.978  0.159             3.03
24 mu_0       0.6      0.979       0.990  0.344             1.75
25 mu_0       0.7      0.980       0.947  0.157             2.56
26 mu_0       0.8      1.00        0.948  0.0233            3.54
27 mu_0       0.9      0.956       0.890  0.000325          3.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.13     0.000466  4.69e-16     36.4 
 2 mu         0.2       2.15     0.0178    1.09e-10     87.4 
 3 mu         0.3       2.22     0.175     1.41e- 7     78.0 
 4 mu         0.4       1.73     0.577     2.15e- 5     33.2 
 5 mu         0.5       1.29     1.12      9.94e- 4      7.59
 6 mu         0.6       1.07     0.991     2.12e- 2      3.23
 7 mu         0.7       1.08     0.893     3.81e- 3      3.78
 8 mu         0.8       1.28     0.674     3.96e- 5      7.55
 9 mu         0.9       1.52     0.0892    4.36e- 9     17.4 
10 mu_1       0.1       1.98     0.00322   4.44e-15     59.5 
11 mu_1       0.2       2.42     0.0618    5.18e-10    103.  
12 mu_1       0.3       2.03     0.351     4.46e- 7     61.2 
13 mu_1       0.4       1.51     0.860     5.09e- 5     19.6 
14 mu_1       0.5       1.18     0.945     1.88e- 3      3.57
15 mu_1       0.6       1.04     0.918     1.38e- 2      3.59
16 mu_1       0.7       1.10     0.967     9.08e- 4      4.15
17 mu_1       0.8       1.31     0.523     1.30e- 5      8.76
18 mu_1       0.9       1.53     0.0579    1.28e- 9     18.0 
19 mu_0       0.1       1.03     0.000125  0            35.4 
20 mu_0       0.2       2.08     0.00627   0            83.6 
21 mu_0       0.3       2.31     0.103     0            85.2 
22 mu_0       0.4       1.87     0.359     0            42.4 
23 mu_0       0.5       1.40     0.805     0            11.6 
24 mu_0       0.6       1.12     1.05      0             3.42
25 mu_0       0.7       1.03     0.955     0             3.98
26 mu_0       0.8       1.13     0.790     0             4.91
27 mu_0       0.9       1.44     0.285     0            12.5 
[1] "Total run time was 68.381 seconds"
