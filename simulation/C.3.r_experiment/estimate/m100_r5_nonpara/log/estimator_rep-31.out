
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1247"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  3  8  8  6  3  8  5  1  9  9  9  3  4  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05931 0.39353 0.64405 1.00000 4.35039 
[1] "event indicator table: "

  0   1 
713 534 
[1] "treatment indicator table: "

  0   1 
464 783 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.618 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.279 0.141 
 2 mu         0.1   0.2 0.436 0.145 
 3 mu         0.1   0.3 0.563 0.160 
 4 mu         0.1   0.4 0.612 0.174 
 5 mu         0.1   0.5 0.612 0.182 
 6 mu         0.2   0.1 0.329 0.0961
 7 mu         0.2   0.2 0.471 0.102 
 8 mu         0.2   0.3 0.604 0.119 
 9 mu         0.2   0.4 0.645 0.130 
10 mu         0.2   0.5 0.651 0.136 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.07        0.0378 0.0000000286     22.5 
 2 mu         0.2      1.19        0.415  0.0000520        14.2 
 3 mu         0.3      1.14        0.840  0.00272           8.47
 4 mu         0.4      1.05        0.903  0.0311            3.00
 5 mu         0.5      0.982       0.898  0.147             2.48
 6 mu         0.6      0.968       0.959  0.0357            1.91
 7 mu         0.7      0.980       0.954  0.118             1.76
 8 mu         0.8      1.00        0.996  0.147             2.45
 9 mu         0.9      0.993       0.759  0.00530           6.46
10 mu_1       0.1      1.34        0.147  0.000000181      20.5 
11 mu_1       0.2      1.20        0.759  0.000164         13.3 
12 mu_1       0.3      1.11        0.961  0.00577           5.30
13 mu_1       0.4      1.01        0.873  0.0501            2.71
14 mu_1       0.5      0.970       0.892  0.106             2.34
15 mu_1       0.6      0.967       0.984  0.0306            1.87
16 mu_1       0.7      0.983       0.943  0.152             1.81
17 mu_1       0.8      1.00        1.01   0.119             2.85
18 mu_1       0.9      0.993       0.724  0.00383           7.07
19 mu_0       0.1      1.04        0.0267 0.0000000117     22.8 
20 mu_0       0.2      1.18        0.310  0.0000238        15.8 
21 mu_0       0.3      1.16        0.691  0.00141           9.82
22 mu_0       0.4      1.07        0.913  0.0185            3.69
23 mu_0       0.5      0.994       0.909  0.0995            2.62
24 mu_0       0.6      0.969       0.886  0.0434            2.18
25 mu_0       0.7      0.971       0.987  0.0383            1.71
26 mu_0       0.8      0.989       0.950  0.234             1.96
27 mu_0       0.9      0.984       0.960  0.0186            3.16
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      6.94     0.0000635  3.37e-17    642.  
 2 mu         0.2      3.92     0.00743    1.57e-11    308.  
 3 mu         0.3      1.62     0.0801     3.05e- 8     62.7 
 4 mu         0.4      1.10     0.381      6.18e- 6      6.95
 5 mu         0.5      1.08     0.814      3.57e- 4      6.45
 6 mu         0.6      1.18     1.22       9.14e- 3      2.98
 7 mu         0.7      1.23     1.29       8.12e- 5      2.99
 8 mu         0.8      1.12     0.950      7.17e- 8      3.75
 9 mu         0.9      1.09     0.146      3.46e-13     11.3 
10 mu_1       0.1      7.24     0.000527   3.21e-16    642.  
11 mu_1       0.2      2.50     0.0268     7.47e-11    154.  
12 mu_1       0.3      1.24     0.174      9.66e- 8     20.9 
13 mu_1       0.4      1.08     0.654      1.47e- 5      7.45
14 mu_1       0.5      1.13     0.952      6.79e- 4      5.73
15 mu_1       0.6      1.22     1.34       1.76e- 3      2.84
16 mu_1       0.7      1.23     1.31       1.16e- 5      3.15
17 mu_1       0.8      1.10     0.783      8.97e- 9      4.69
18 mu_1       0.9      1.10     0.101      3.85e-14     12.5 
19 mu_0       0.1      6.91     0.0000263  0           642.  
20 mu_0       0.2      4.28     0.00296    0           347.  
21 mu_0       0.3      1.78     0.0354     0            80.6 
22 mu_0       0.4      1.11     0.209      0            10.4 
23 mu_0       0.5      1.02     0.565      0             7.17
24 mu_0       0.6      1.11     1.05       0             4.14
25 mu_0       0.7      1.22     1.30       0             2.82
26 mu_0       0.8      1.17     1.32       0             3.72
27 mu_0       0.9      0.968    0.300      0             5.66
[1] "Total run time was 56.267 seconds"
