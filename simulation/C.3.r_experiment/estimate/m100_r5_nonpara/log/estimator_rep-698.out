
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1247"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  9  3  6  4  7  3  5  4  8  8 10  4  6  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04128 0.33973 0.59542 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
746 501 
[1] "treatment indicator table: "

  0   1 
467 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 95.376 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.0958 0.0867
 2 mu         0.1   0.2 0.247  0.215 
 3 mu         0.1   0.3 0.216  0.195 
 4 mu         0.1   0.4 0.263  0.234 
 5 mu         0.1   0.5 0.235  0.216 
 6 mu         0.2   0.1 0.169  0.0707
 7 mu         0.2   0.2 0.336  0.205 
 8 mu         0.2   0.3 0.332  0.181 
 9 mu         0.2   0.4 0.397  0.216 
10 mu         0.2   0.5 0.386  0.195 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.306      0.00497 0.00000000397      5.45
 2 mu         0.2      0.535      0.0873  0.0000104          5.86
 3 mu         0.3      0.702      0.401   0.000812           3.89
 4 mu         0.4      0.827      0.725   0.0144             4.45
 5 mu         0.5      0.911      0.770   0.108              2.76
 6 mu         0.6      0.962      0.928   0.344              1.78
 7 mu         0.7      0.981      0.986   0.240              1.73
 8 mu         0.8      0.952      0.966   0.0207             2.88
 9 mu         0.9      0.921      0.564   0.000125          10.1 
10 mu_1       0.1      0.493      0.0241  0.0000000298       7.07
11 mu_1       0.2      0.658      0.240   0.0000390          5.03
12 mu_1       0.3      0.781      0.646   0.00204            4.45
13 mu_1       0.4      0.876      0.809   0.0273             4.21
14 mu_1       0.5      0.941      0.891   0.165              2.21
15 mu_1       0.6      0.978      0.971   0.363              1.68
16 mu_1       0.7      0.983      0.989   0.150              1.75
17 mu_1       0.8      0.947      0.959   0.0138             3.24
18 mu_1       0.9      0.922      0.496   0.0000755         10.6 
19 mu_0       0.1      0.285      0.00308 0.00000000110      5.86
20 mu_0       0.2      0.504      0.0534  0.00000321         6.07
21 mu_0       0.3      0.668      0.283   0.000285           3.91
22 mu_0       0.4      0.795      0.596   0.00583            4.61
23 mu_0       0.5      0.880      0.772   0.0513             3.31
24 mu_0       0.6      0.938      0.863   0.196              1.96
25 mu_0       0.7      0.974      0.975   0.387              1.76
26 mu_0       0.8      0.969      0.972   0.0484             1.69
27 mu_0       0.9      0.909      0.871   0.000570           5.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value   max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>       <dbl>
 1 mu         0.1  406808.      0.000210   1.00e-16 40677336.  
 2 mu         0.2   54972.      0.0103     4.67e-11  5492368.  
 3 mu         0.3    5699.      0.0720     9.06e- 8   567409.  
 4 mu         0.4     422.      0.329      1.84e- 5    41286.  
 5 mu         0.5      21.8     0.796      1.06e- 3     1861.  
 6 mu         0.6       1.92    1.01       2.72e- 2       41.9 
 7 mu         0.7       1.11    0.969      4.36e- 2        4.87
 8 mu         0.8       1.26    0.642      2.72e- 4        9.46
 9 mu         0.9       1.49    0.0984     2.44e- 9       21.9 
10 mu_1       0.1      58.0     0.00140    0            5556.  
11 mu_1       0.2      42.2     0.0289     0            3798.  
12 mu_1       0.3      16.0     0.153      0            1153.  
13 mu_1       0.4       5.41    0.510      0             203.  
14 mu_1       0.5       2.26    0.981      0              25.7 
15 mu_1       0.6       1.27    1.03       0              12.9 
16 mu_1       0.7       1.09    0.951      0               3.32
17 mu_1       0.8       1.30    0.528      0              11.0 
18 mu_1       0.9       1.49    0.0692     0              22.6 
19 mu_0       0.1  452002.      0.0000389  0        45197040.  
20 mu_0       0.2   68705.      0.00399    0         6865460.  
21 mu_0       0.3    8135.      0.0305     0          810585.  
22 mu_0       0.4     699.      0.201      0           68810.  
23 mu_0       0.5      41.3     0.517      0            3722.  
24 mu_0       0.6       2.91    0.948      0             105.  
25 mu_0       0.7       1.17    1.04       0               8.65
26 mu_0       0.8       1.12    0.989      0               4.36
27 mu_0       0.9       1.52    0.356      0              15.6 
[1] "Total run time was 100.676 seconds"
