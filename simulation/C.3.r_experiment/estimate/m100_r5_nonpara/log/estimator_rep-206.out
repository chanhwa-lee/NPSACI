
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  5  7  3  5 11  9 10  7  7  2  6  3  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0262  0.3535  0.6061  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
749 503 
[1] "treatment indicator table: "

  0   1 
436 816 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.077 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.234 0.0878
 2 mu         0.1   0.2 0.272 0.0898
 3 mu         0.1   0.3 0.322 0.103 
 4 mu         0.1   0.4 0.421 0.116 
 5 mu         0.1   0.5 0.432 0.144 
 6 mu         0.2   0.1 0.364 0.116 
 7 mu         0.2   0.2 0.420 0.149 
 8 mu         0.2   0.3 0.482 0.174 
 9 mu         0.2   0.4 0.586 0.193 
10 mu         0.2   0.5 0.594 0.213 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.651      0.0133  0.00000000661     11.5 
 2 mu         0.2      1.03       0.147   0.00000573        34.9 
 3 mu         0.3      1.14       0.536   0.000275          27.2 
 4 mu         0.4      1.13       0.837   0.00400           10.0 
 5 mu         0.5      1.12       1.03    0.0297             3.23
 6 mu         0.6      1.08       1.04    0.142              2.07
 7 mu         0.7      1.05       1.00    0.327              3.67
 8 mu         0.8      1.01       0.849   0.0977             5.52
 9 mu         0.9      0.946      0.688   0.00620            9.75
10 mu_1       0.1      0.924      0.0360  0.0000000554      25.2 
11 mu_1       0.2      1.19       0.302   0.0000242         38.7 
12 mu_1       0.3      1.16       0.789   0.000780          20.2 
13 mu_1       0.4      1.13       0.881   0.00857            5.62
14 mu_1       0.5      1.11       1.05    0.0515             3.04
15 mu_1       0.6      1.07       1.05    0.209              2.42
16 mu_1       0.7      1.05       0.966   0.262              4.13
17 mu_1       0.8      1.01       0.832   0.0747             6.17
18 mu_1       0.9      0.944      0.649   0.00441           10.2 
19 mu_0       0.1      0.621      0.00822 0.00000000119     12.8 
20 mu_0       0.2      0.990      0.102   0.00000112        33.9 
21 mu_0       0.3      1.13       0.420   0.0000590         30.2 
22 mu_0       0.4      1.13       0.854   0.000949          12.9 
23 mu_0       0.5      1.13       0.943   0.00791            3.58
24 mu_0       0.6      1.10       1.05    0.0433             2.38
25 mu_0       0.7      1.06       1.04    0.175              2.61
26 mu_0       0.8      1.02       0.926   0.190              4.78
27 mu_0       0.9      0.963      0.803   0.0223             7.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      66.4     0.0000329  9.95e-17   6563.  
 2 mu         0.2      37.6     0.00538    9.98e-11   3593.  
 3 mu         0.3      14.6     0.0512     2.21e- 7   1241.  
 4 mu         0.4       4.93    0.285      3.47e- 5    303.  
 5 mu         0.5       1.86    0.759      1.03e- 3     51.1 
 6 mu         0.6       1.24    1.13       1.52e- 2      5.26
 7 mu         0.7       1.79    1.22       8.52e- 3     27.6 
 8 mu         0.8       4.85    0.953      1.47e- 4    115.  
 9 mu         0.9      20.5     0.174      9.09e- 8   1210.  
10 mu_1       0.1      56.2     0.000200   9.95e-16   5469.  
11 mu_1       0.2      17.2     0.0179     4.99e-10   1497.  
12 mu_1       0.3       5.61    0.118      7.37e- 7    345.  
13 mu_1       0.4       2.24    0.464      8.16e- 5     63.2 
14 mu_1       0.5       1.27    0.924      1.93e- 3      8.51
15 mu_1       0.6       1.22    1.10       2.38e- 2      6.18
16 mu_1       0.7       2.03    1.27       2.61e- 3     35.1 
17 mu_1       0.8       5.54    0.879      3.94e- 5    143.  
18 mu_1       0.9      22.2     0.120      2.43e- 8   1344.  
19 mu_0       0.1      67.5     0.0000136  0          6684.  
20 mu_0       0.2      42.8     0.00173    0          4117.  
21 mu_0       0.3      18.5     0.0286     0          1625.  
22 mu_0       0.4       6.72    0.139      0           464.  
23 mu_0       0.5       2.45    0.499      0            93.6 
24 mu_0       0.6       1.27    0.921      0            12.1 
25 mu_0       0.7       1.24    1.14       0            10.2 
26 mu_0       0.8       2.11    1.07       0            57.8 
27 mu_0       0.9       5.08    0.319      0           190.  
[1] "Total run time was 63.07 seconds"
