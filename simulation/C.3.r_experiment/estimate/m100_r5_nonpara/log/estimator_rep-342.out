
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1154"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5  9  9  6  8  9  4  6  6  6  7  2  6  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04544 0.37649 0.64415 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
731 423 
[1] "treatment indicator table: "

  0   1 
351 803 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 577
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 577
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 83.667 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.301 0.184
 2 mu         0.1   0.2 0.364 0.177
 3 mu         0.1   0.3 0.442 0.243
 4 mu         0.1   0.4 0.418 0.227
 5 mu         0.1   0.5 0.437 0.212
 6 mu         0.2   0.1 0.311 0.147
 7 mu         0.2   0.2 0.363 0.134
 8 mu         0.2   0.3 0.453 0.191
 9 mu         0.2   0.4 0.446 0.176
10 mu         0.2   0.5 0.465 0.163
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.524     0.00116  0.00000000342     26.5 
 2 mu         0.2      0.657     0.0356   0.0000127         14.8 
 3 mu         0.3      0.835     0.197    0.000573           8.53
 4 mu         0.4      0.946     0.446    0.00765            8.90
 5 mu         0.5      0.974     0.805    0.0510             6.06
 6 mu         0.6      0.983     0.956    0.212              2.86
 7 mu         0.7      1.00      0.976    0.572              1.79
 8 mu         0.8      1.03      0.992    0.369              2.36
 9 mu         0.9      0.980     0.828    0.0353             3.28
10 mu_1       0.1      0.523     0.00688  0.0000000234      15.0 
11 mu_1       0.2      0.713     0.0902   0.0000474         10.2 
12 mu_1       0.3      0.879     0.340    0.00160            9.64
13 mu_1       0.4      0.948     0.655    0.0160             8.27
14 mu_1       0.5      0.965     0.887    0.0858             4.79
15 mu_1       0.6      0.983     0.954    0.298              2.13
16 mu_1       0.7      1.01      0.975    0.531              1.82
17 mu_1       0.8      1.03      0.965    0.262              2.45
18 mu_1       0.9      0.971     0.799    0.0265             3.38
19 mu_0       0.1      0.525     0.000653 0.00000000120     29.4 
20 mu_0       0.2      0.643     0.0211   0.00000262        18.4 
21 mu_0       0.3      0.816     0.135    0.000134          10.9 
22 mu_0       0.4      0.945     0.337    0.00206            9.31
23 mu_0       0.5      0.984     0.656    0.0162             7.33
24 mu_0       0.6      0.982     0.896    0.0812             3.96
25 mu_0       0.7      0.987     0.953    0.226              1.94
26 mu_0       0.8      1.01      0.976    0.386              1.99
27 mu_0       0.9      1.06      0.962    0.114              3.12
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.75    0.0000208   5.31e-18    261.  
 2 mu         0.2      1.77    0.00230     2.78e-12    129.  
 3 mu         0.3      1.59    0.0303      6.17e- 9     57.7 
 4 mu         0.4      1.61    0.158       1.46e- 6     22.9 
 5 mu         0.5      1.47    0.379       1.01e- 4     13.1 
 6 mu         0.6      1.23    0.723       3.23e- 3      5.75
 7 mu         0.7      1.06    0.917       6.05e- 2      6.77
 8 mu         0.8      1.08    0.873       2.25e- 3      5.02
 9 mu         0.9      1.53    0.360       1.12e- 6     33.1 
10 mu_1       0.1      0.387   0.000107    0            13.6 
11 mu_1       0.2      0.802   0.00713     0            15.4 
12 mu_1       0.3      1.28    0.0707      0            23.5 
13 mu_1       0.4      1.46    0.280       0            17.7 
14 mu_1       0.5      1.34    0.547       0            10.0 
15 mu_1       0.6      1.15    0.820       0             5.13
16 mu_1       0.7      1.05    0.932       0             6.77
17 mu_1       0.8      1.11    0.846       0             6.28
18 mu_1       0.9      1.59    0.276       0            36.7 
19 mu_0       0.1      3.02    0.00000390  0           290.  
20 mu_0       0.2      2.01    0.000866    0           161.  
21 mu_0       0.3      1.73    0.0105      0            82.4 
22 mu_0       0.4      1.72    0.0530      0            38.1 
23 mu_0       0.5      1.60    0.165       0            16.1 
24 mu_0       0.6      1.34    0.518       0             8.39
25 mu_0       0.7      1.09    0.908       0             6.77
26 mu_0       0.8      0.970   0.843       0             5.78
27 mu_0       0.9      1.04    0.530       0             7.39
[1] "Total run time was 88.614 seconds"
