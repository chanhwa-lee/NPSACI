
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1240"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5 10  3  7  7  5 11  7  7  8  4  2  6  4  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01806 0.28539 0.56915 0.93757 5.00000 
[1] "event indicator table: "

  0   1 
726 514 
[1] "treatment indicator table: "

  0   1 
489 751 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 42.761 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.102 0.0873
 2 mu         0.1   0.2 0.273 0.111 
 3 mu         0.1   0.3 0.274 0.105 
 4 mu         0.1   0.4 0.265 0.105 
 5 mu         0.1   0.5 0.250 0.110 
 6 mu         0.2   0.1 0.177 0.0628
 7 mu         0.2   0.2 0.352 0.0930
 8 mu         0.2   0.3 0.379 0.0804
 9 mu         0.2   0.4 0.390 0.0821
10 mu         0.2   0.5 0.391 0.0860
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.510      0.00815 0.0000000954     15.3 
 2 mu         0.2      0.738      0.115   0.000163          9.40
 3 mu         0.3      0.911      0.489   0.00841           8.44
 4 mu         0.4      1.01       0.885   0.0628            4.63
 5 mu         0.5      1.04       0.992   0.201             2.41
 6 mu         0.6      1.01       1.01    0.415             1.55
 7 mu         0.7      0.986      0.978   0.0744            1.98
 8 mu         0.8      1.02       0.811   0.00409           5.45
 9 mu         0.9      1.20       0.345   0.0000153        25.0 
10 mu_1       0.1      0.606      0.0396  0.000000574       8.79
11 mu_1       0.2      0.835      0.262   0.000495         10.9 
12 mu_1       0.3      0.959      0.671   0.0174            6.61
13 mu_1       0.4      1.02       0.984   0.126             3.72
14 mu_1       0.5      1.03       0.992   0.328             1.91
15 mu_1       0.6      0.997      1.02    0.279             1.48
16 mu_1       0.7      0.984      0.970   0.0437            2.55
17 mu_1       0.8      1.03       0.762   0.00214           6.42
18 mu_1       0.9      1.23       0.286   0.00000729       26.4 
19 mu_0       0.1      0.499      0.00481 0.0000000422     17.0 
20 mu_0       0.2      0.714      0.0802  0.0000798        10.7 
21 mu_0       0.3      0.890      0.392   0.00406           9.22
22 mu_0       0.4      1.01       0.778   0.0210            5.69
23 mu_0       0.5      1.05       1.01    0.0735            2.91
24 mu_0       0.6      1.03       1.03    0.199             1.89
25 mu_0       0.7      0.992      1.01    0.146             1.78
26 mu_0       0.8      0.963      0.967   0.0119            2.69
27 mu_0       0.9      0.999      0.702   0.0000877        12.5 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      14.8     0.000200   2.37e-13   1351.  
 2 mu         0.2      13.1     0.00925    2.18e- 8   1169.  
 3 mu         0.3       6.12    0.101      1.44e- 5    463.  
 4 mu         0.4       2.54    0.426      1.21e- 3    111.  
 5 mu         0.5       1.42    0.902      3.10e- 2     16.2 
 6 mu         0.6       1.16    0.990      1.55e- 1      4.31
 7 mu         0.7       1.17    1.00       1.56e- 2      7.04
 8 mu         0.8       1.30    0.419      2.68e- 4     10.1 
 9 mu         0.9       1.33    0.0407     4.30e- 8     22.4 
10 mu_1       0.1      19.7     0.00113    2.02e-12   1801.  
11 mu_1       0.2       9.16    0.0302     9.28e- 8    779.  
12 mu_1       0.3       3.45    0.232      4.08e- 5    206.  
13 mu_1       0.4       1.70    0.662      2.57e- 3     37.0 
14 mu_1       0.5       1.23    0.986      5.27e- 2      5.79
15 mu_1       0.6       1.13    1.02       1.09e- 1      4.22
16 mu_1       0.7       1.19    0.873      7.44e- 3      7.54
17 mu_1       0.8       1.33    0.319      4.64e- 5     11.1 
18 mu_1       0.9       1.33    0.0236     6.38e- 9     24.9 
19 mu_0       0.1      14.2     0.0000670  0          1301.  
20 mu_0       0.2      14.1     0.00457    0          1266.  
21 mu_0       0.3       7.26    0.0483     0           574.  
22 mu_0       0.4       3.10    0.254      0           160.  
23 mu_0       0.5       1.61    0.757      0            28.1 
24 mu_0       0.6       1.20    1.08       0             4.43
25 mu_0       0.7       1.12    1.01       0             5.87
26 mu_0       0.8       1.16    0.833      0             8.59
27 mu_0       0.9       1.33    0.138      0            17.3 
[1] "Total run time was 45.92 seconds"
