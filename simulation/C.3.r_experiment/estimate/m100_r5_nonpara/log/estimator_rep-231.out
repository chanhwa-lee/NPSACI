
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  5  9  8  6  9 10  4  5  1  6  5  9  8  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02811 0.34747 0.62847 1.00000 5.13101 
[1] "event indicator table: "

  0   1 
762 507 
[1] "treatment indicator table: "

  0   1 
439 830 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.604 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.349 0.228
 2 mu         0.1   0.2 0.509 0.320
 3 mu         0.1   0.3 0.561 0.372
 4 mu         0.1   0.4 0.580 0.407
 5 mu         0.1   0.5 0.597 0.424
 6 mu         0.2   0.1 0.670 0.439
 7 mu         0.2   0.2 0.947 0.612
 8 mu         0.2   0.3 1.09  0.718
 9 mu         0.2   0.4 1.16  0.786
10 mu         0.2   0.5 1.20  0.820
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12       0.00518  1.08e-10     80.5 
 2 mu         0.2      2.26       0.0901   1.03e- 6    157.  
 3 mu         0.3      1.92       0.382    1.66e- 4    107.  
 4 mu         0.4      1.29       0.735    4.69e- 3     39.9 
 5 mu         0.5      1.00       0.876    4.85e- 2      9.33
 6 mu         0.6      0.981      0.931    2.49e- 1      2.23
 7 mu         0.7      1.02       1.00     2.31e- 1      3.14
 8 mu         0.8      1.09       1.03     2.93e- 2      7.40
 9 mu         0.9      1.12       0.734    3.29e- 4     14.4 
10 mu_1       0.1      2.25       0.0229   7.96e-10    161.  
11 mu_1       0.2      2.44       0.224    3.83e- 6    157.  
12 mu_1       0.3      1.63       0.583    4.11e- 4     71.1 
13 mu_1       0.4      1.11       0.854    8.80e- 3     20.2 
14 mu_1       0.5      0.975      0.888    7.34e- 2      4.26
15 mu_1       0.6      0.992      0.971    3.19e- 1      1.95
16 mu_1       0.7      1.03       0.990    1.73e- 1      3.61
17 mu_1       0.8      1.10       0.990    1.94e- 2      7.83
18 mu_1       0.9      1.12       0.675    1.93e- 4     15.1 
19 mu_0       0.1      0.994      0.00331  3.12e-11     71.5 
20 mu_0       0.2      2.22       0.0566   3.33e- 7    157.  
21 mu_0       0.3      2.05       0.301    6.03e- 5    122.  
22 mu_0       0.4      1.40       0.635    1.96e- 3     53.1 
23 mu_0       0.5      1.03       0.832    2.36e- 2     14.4 
24 mu_0       0.6      0.964      0.859    1.43e- 1      2.98
25 mu_0       0.7      0.998      0.962    3.64e- 1      2.07
26 mu_0       0.8      1.05       0.977    6.91e- 2      5.72
27 mu_0       0.9      1.14       0.933    1.55e- 3     10.1 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.60   0.0000185   2.57e-15    176.  
 2 mu         0.2       3.75   0.00456     2.81e-10    244.  
 3 mu         0.3       3.05   0.0627      1.85e- 7    165.  
 4 mu         0.4       2.03   0.264       1.84e- 5     73.2 
 5 mu         0.5       1.41   0.680       6.54e- 4     22.2 
 6 mu         0.6       1.17   1.05        1.21e- 2      6.19
 7 mu         0.7       1.25   1.08        6.31e- 3     13.9 
 8 mu         0.8       1.67   0.638       5.53e- 5     40.0 
 9 mu         0.9       1.94   0.111       1.08e- 8     52.0 
10 mu_1       0.1       4.59   0.000144    2.43e-14    320.  
11 mu_1       0.2       3.73   0.0143      1.40e- 9    222.  
12 mu_1       0.3       2.37   0.136       6.15e- 7    100.  
13 mu_1       0.4       1.56   0.492       4.60e- 5     33.3 
14 mu_1       0.5       1.22   0.839       1.31e- 3      8.06
15 mu_1       0.6       1.14   1.06        2.02e- 2      4.63
16 mu_1       0.7       1.30   0.985       2.12e- 3     17.3 
17 mu_1       0.8       1.75   0.513       1.63e- 5     43.7 
18 mu_1       0.9       1.94   0.0708      2.83e- 9     50.6 
19 mu_0       0.1       2.38   0.00000658  0           160.  
20 mu_0       0.2       3.76   0.00168     0           249.  
21 mu_0       0.3       3.35   0.0282      0           193.  
22 mu_0       0.4       2.35   0.155       0            99.9 
23 mu_0       0.5       1.60   0.424       0            36.3 
24 mu_0       0.6       1.22   0.850       0            11.0 
25 mu_0       0.7       1.12   1.05        0             5.78
26 mu_0       0.8       1.35   1.00        0            25.0 
27 mu_0       0.9       1.92   0.329       0            65.0 
[1] "Total run time was 56.733 seconds"
