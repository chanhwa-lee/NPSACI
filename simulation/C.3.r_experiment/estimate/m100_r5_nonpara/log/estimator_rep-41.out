
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1278"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  9  6  6  5  4  3  5 11  7  6  7  3  8  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02741 0.32390 0.59211 1.00000 4.52659 
[1] "event indicator table: "

  0   1 
773 505 
[1] "treatment indicator table: "

  0   1 
483 795 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 54.869 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.205 0.117 
 2 mu         0.1   0.2 0.246 0.139 
 3 mu         0.1   0.3 0.337 0.176 
 4 mu         0.1   0.4 0.354 0.197 
 5 mu         0.1   0.5 0.362 0.210 
 6 mu         0.2   0.1 0.199 0.0581
 7 mu         0.2   0.2 0.254 0.0679
 8 mu         0.2   0.3 0.369 0.0803
 9 mu         0.2   0.4 0.407 0.0863
10 mu         0.2   0.5 0.433 0.0940
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.815       0.0197 0.000000363     29.3 
 2 mu         0.2      0.842       0.218  0.000406        10.1 
 3 mu         0.3      0.874       0.640  0.0129           7.91
 4 mu         0.4      0.915       0.793  0.0900           3.79
 5 mu         0.5      0.966       0.944  0.279            2.01
 6 mu         0.6      0.989       1.00   0.450            1.72
 7 mu         0.7      1.01        1.02   0.190            1.75
 8 mu         0.8      1.07        0.996  0.0333           2.81
 9 mu         0.9      1.18        0.699  0.000183         8.87
10 mu_1       0.1      0.835       0.0789 0.00000217      14.7 
11 mu_1       0.2      0.883       0.420  0.00123         10.8 
12 mu_1       0.3      0.896       0.728  0.0251           5.77
13 mu_1       0.4      0.938       0.900  0.142            2.42
14 mu_1       0.5      0.980       0.948  0.382            1.86
15 mu_1       0.6      0.994       1.00   0.371            1.67
16 mu_1       0.7      1.02        1.01   0.151            1.93
17 mu_1       0.8      1.09        0.987  0.0220           3.20
18 mu_1       0.9      1.19        0.629  0.000109         9.83
19 mu_0       0.1      0.813       0.0124 0.000000161     31.0 
20 mu_0       0.2      0.831       0.176  0.000199         9.88
21 mu_0       0.3      0.865       0.539  0.00599          8.83
22 mu_0       0.4      0.900       0.726  0.0374           4.73
23 mu_0       0.5      0.951       0.893  0.146            2.21
24 mu_0       0.6      0.982       0.957  0.374            1.80
25 mu_0       0.7      0.988       0.977  0.271            1.77
26 mu_0       0.8      1.02        1.01   0.0783           2.27
27 mu_0       0.9      1.08        0.971  0.000843         4.32
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.711    0.0000374  1.05e-13     22.8 
 2 mu         0.2      1.36     0.00653    1.09e- 8     28.4 
 3 mu         0.3      1.76     0.0837     7.56e- 6     50.0 
 4 mu         0.4      1.57     0.409      5.54e- 4     32.4 
 5 mu         0.5      1.28     0.902      1.37e- 2      9.64
 6 mu         0.6      1.16     1.07       5.41e- 2      3.90
 7 mu         0.7      1.19     1.23       2.38e- 3      4.04
 8 mu         0.8      1.40     0.622      2.09e- 5     11.7 
 9 mu         0.9      1.62     0.0656     4.08e- 9     25.3 
10 mu_1       0.1      1.21     0.000202   9.38e-13     28.5 
11 mu_1       0.2      1.64     0.0192     4.86e- 8     42.7 
12 mu_1       0.3      1.72     0.172      2.24e- 5     50.0 
13 mu_1       0.4      1.42     0.626      1.23e- 3     24.3 
14 mu_1       0.5      1.20     0.974      2.43e- 2      5.78
15 mu_1       0.6      1.15     1.19       2.12e- 2      3.50
16 mu_1       0.7      1.23     1.21       8.00e- 4      4.34
17 mu_1       0.8      1.45     0.518      6.14e- 6     13.0 
18 mu_1       0.9      1.65     0.0457     1.07e- 9     28.1 
19 mu_0       0.1      0.655    0.0000140  0            22.2 
20 mu_0       0.2      1.29     0.00320    0            24.9 
21 mu_0       0.3      1.77     0.0449     0            50.0 
22 mu_0       0.4      1.68     0.264      0            37.8 
23 mu_0       0.5      1.36     0.727      0            13.5 
24 mu_0       0.6      1.16     1.01       0             4.50
25 mu_0       0.7      1.11     1.07       0             4.04
26 mu_0       0.8      1.18     0.819      0             6.14
27 mu_0       0.9      1.32     0.0965     0            22.7 
[1] "Total run time was 59.449 seconds"
