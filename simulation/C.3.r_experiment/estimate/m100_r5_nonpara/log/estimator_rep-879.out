
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1270"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5  7  4  5  8  5  5  5  3  7  8  8  6 10  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01957 0.30327 0.55470 0.93214 5.00000 
[1] "event indicator table: "

  0   1 
779 491 
[1] "treatment indicator table: "

  0   1 
503 767 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 99.239 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.322 0.105 
 2 mu         0.1   0.2 0.341 0.115 
 3 mu         0.1   0.3 0.420 0.131 
 4 mu         0.1   0.4 0.453 0.140 
 5 mu         0.1   0.5 0.515 0.145 
 6 mu         0.2   0.1 0.356 0.0714
 7 mu         0.2   0.2 0.405 0.0784
 8 mu         0.2   0.3 0.500 0.0841
 9 mu         0.2   0.4 0.544 0.0921
10 mu         0.2   0.5 0.612 0.0966
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.751       0.0424 0.000000423     19.2 
 2 mu         0.2      1.02        0.311  0.000223        11.3 
 3 mu         0.3      1.13        0.806  0.00515          5.09
 4 mu         0.4      1.11        1.04   0.0391           3.15
 5 mu         0.5      1.03        1.00   0.159            3.02
 6 mu         0.6      0.947       0.937  0.301            1.65
 7 mu         0.7      0.902       0.923  0.232            1.92
 8 mu         0.8      0.936       0.841  0.0301           3.50
 9 mu         0.9      1.08        0.445  0.000184         8.22
10 mu_1       0.1      0.813       0.130  0.00000258      18.2 
11 mu_1       0.2      1.09        0.562  0.000774         7.76
12 mu_1       0.3      1.14        0.974  0.0120           4.63
13 mu_1       0.4      1.09        1.04   0.0691           3.44
14 mu_1       0.5      1.00        0.969  0.231            2.74
15 mu_1       0.6      0.927       0.931  0.323            1.47
16 mu_1       0.7      0.900       0.928  0.194            2.03
17 mu_1       0.8      0.950       0.801  0.0200           3.98
18 mu_1       0.9      1.10        0.377  0.000112         8.89
19 mu_0       0.1      0.744       0.0311 0.000000183     21.3 
20 mu_0       0.2      0.996       0.233  0.0000853       12.3 
21 mu_0       0.3      1.12        0.686  0.00222          5.71
22 mu_0       0.4      1.13        1.02   0.0191           3.40
23 mu_0       0.5      1.06        1.03   0.0869           3.30
24 mu_0       0.6      0.977       0.939  0.258            1.97
25 mu_0       0.7      0.905       0.931  0.321            1.66
26 mu_0       0.8      0.877       0.887  0.0706           2.29
27 mu_0       0.9      0.892       0.687  0.000836         3.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.231     0.000257  6.23e-15      7.79
 2 mu         0.2      0.739     0.0174    7.26e-10     14.1 
 3 mu         0.3      1.15      0.143     6.26e- 7     18.9 
 4 mu         0.4      1.23      0.437     7.13e- 5     10.7 
 5 mu         0.5      1.13      0.954     2.64e- 3      4.93
 6 mu         0.6      1.03      0.926     4.69e- 2      5.28
 7 mu         0.7      1.07      0.933     7.71e- 3      8.52
 8 mu         0.8      1.44      0.474     1.33e- 4     36.6 
 9 mu         0.9      1.94      0.0525    4.73e- 8     67.8 
10 mu_1       0.1      0.579     0.00141   5.88e-14     14.2 
11 mu_1       0.2      1.08      0.0523    3.43e- 9     19.6 
12 mu_1       0.3      1.29      0.300     1.97e- 6     17.5 
13 mu_1       0.4      1.22      0.709     1.68e- 4      8.07
14 mu_1       0.5      1.09      1.05      4.99e- 3      4.90
15 mu_1       0.6      1.02      0.927     4.10e- 2      5.10
16 mu_1       0.7      1.10      0.839     2.36e- 3     10.9 
17 mu_1       0.8      1.51      0.347     3.56e- 5     41.0 
18 mu_1       0.9      1.96      0.0312    1.46e- 8     67.5 
19 mu_0       0.1      0.193     0.000113  0             7.08
20 mu_0       0.2      0.654     0.00749   0            12.7 
21 mu_0       0.3      1.09      0.0756    0            19.5 
22 mu_0       0.4      1.23      0.284     0            12.9 
23 mu_0       0.5      1.16      0.749     0             5.52
24 mu_0       0.6      1.05      0.978     0             5.56
25 mu_0       0.7      0.998     0.935     0             4.04
26 mu_0       0.8      1.17      0.795     0            19.3 
27 mu_0       0.9      1.81      0.146     0            71.4 
[1] "Total run time was 106.377 seconds"
