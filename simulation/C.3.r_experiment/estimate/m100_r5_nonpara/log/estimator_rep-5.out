
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1305"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  7  5  2  1  8 11  7  7  7 10  8  7  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03521 0.36595 0.63850 1.00000 5.46040 
[1] "event indicator table: "

  0   1 
800 505 
[1] "treatment indicator table: "

  0   1 
437 868 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 116.76 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.310 0.121 
 2 mu         0.1   0.2 0.342 0.112 
 3 mu         0.1   0.3 0.346 0.108 
 4 mu         0.1   0.4 0.343 0.104 
 5 mu         0.1   0.5 0.356 0.103 
 6 mu         0.2   0.1 0.305 0.0617
 7 mu         0.2   0.2 0.348 0.0668
 8 mu         0.2   0.3 0.373 0.0667
 9 mu         0.2   0.4 0.407 0.0731
10 mu         0.2   0.5 0.436 0.0795
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.467      0.00795  1.16e-11      6.25
 2 mu         0.2      0.725      0.155    1.39e- 7      6.24
 3 mu         0.3      0.875      0.505    2.87e- 5      4.13
 4 mu         0.4      0.948      0.795    1.09e- 3      3.32
 5 mu         0.5      0.989      0.941    1.58e- 2      2.29
 6 mu         0.6      1.02       1.02     1.20e- 1      2.27
 7 mu         0.7      1.03       0.975    3.73e- 1      2.41
 8 mu         0.8      1.00       0.921    1.84e- 1      2.14
 9 mu         0.9      1.03       0.804    1.81e- 2      3.92
10 mu_1       0.1      0.723      0.0373   9.54e-11      8.26
11 mu_1       0.2      0.839      0.312    5.76e- 7      5.41
12 mu_1       0.3      0.913      0.749    7.96e- 5      3.49
13 mu_1       0.4      0.956      0.861    2.28e- 3      3.13
14 mu_1       0.5      0.991      0.941    2.66e- 2      2.11
15 mu_1       0.6      1.02       0.981    1.69e- 1      2.32
16 mu_1       0.7      1.02       0.967    3.73e- 1      2.49
17 mu_1       0.8      0.997      0.901    1.33e- 1      2.31
18 mu_1       0.9      1.04       0.812    1.23e- 2      4.10
19 mu_0       0.1      0.439      0.00434  2.24e-12      6.18
20 mu_0       0.2      0.697      0.113    2.99e- 8      6.44
21 mu_0       0.3      0.859      0.392    6.93e- 6      4.71
22 mu_0       0.4      0.942      0.760    3.00e- 4      3.44
23 mu_0       0.5      0.986      0.881    5.06e- 3      2.58
24 mu_0       0.6      1.02       0.949    4.57e- 2      2.33
25 mu_0       0.7      1.04       0.994    2.58e- 1      2.33
26 mu_0       0.8      1.01       0.944    3.83e- 1      2.60
27 mu_0       0.9      0.950      0.923    7.11e- 2      3.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.182   0.0000245   3.24e-17      4.33
 2 mu         0.2      0.737   0.00147     1.51e-11     12.0 
 3 mu         0.3      1.17    0.0270      2.93e- 8     12.3 
 4 mu         0.4      1.23    0.200       5.93e- 6      9.69
 5 mu         0.5      1.13    0.580       2.88e- 4      5.74
 6 mu         0.6      1.06    0.878       5.32e- 3      7.45
 7 mu         0.7      1.07    1.00        5.10e- 3      4.65
 8 mu         0.8      1.07    1.04        3.41e- 5      4.06
 9 mu         0.9      1.02    0.359       3.75e- 9      9.91
10 mu_1       0.1      0.485   0.000153    3.08e-16     10.8 
11 mu_1       0.2      1.09    0.00640     7.17e-11     15.0 
12 mu_1       0.3      1.29    0.0638      9.27e- 8     12.6 
13 mu_1       0.4      1.21    0.339       1.41e- 5      7.45
14 mu_1       0.5      1.10    0.794       5.75e- 4      6.75
15 mu_1       0.6      1.06    0.860       8.87e- 3      7.30
16 mu_1       0.7      1.08    1.05        1.92e- 3      3.90
17 mu_1       0.8      1.06    1.09        1.12e- 5      3.95
18 mu_1       0.9      1.02    0.289       1.10e- 9     11.0 
19 mu_0       0.1      0.148   0.00000247  0             3.61
20 mu_0       0.2      0.648   0.000500    0            11.3 
21 mu_0       0.3      1.11    0.0105      0            13.1 
22 mu_0       0.4      1.24    0.0962      0            11.2 
23 mu_0       0.5      1.16    0.303       0             6.35
24 mu_0       0.6      1.06    0.777       0             7.67
25 mu_0       0.7      1.05    0.859       0             6.38
26 mu_0       0.8      1.08    1.05        0             4.51
27 mu_0       0.9      0.973   0.478       0             4.15
[1] "Total run time was 126.848 seconds"
