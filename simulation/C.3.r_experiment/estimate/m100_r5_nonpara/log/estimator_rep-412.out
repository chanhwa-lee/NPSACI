
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1268"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  7  6  6  7  6  8  3  7  3  6  9  3  7 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02546 0.32519 0.56964 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
714 554 
[1] "treatment indicator table: "

  0   1 
534 734 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 64.647 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.491 0.116 
 2 mu         0.1   0.2 0.737 0.171 
 3 mu         0.1   0.3 0.774 0.169 
 4 mu         0.1   0.4 0.770 0.163 
 5 mu         0.1   0.5 0.802 0.164 
 6 mu         0.2   0.1 0.419 0.0687
 7 mu         0.2   0.2 0.603 0.101 
 8 mu         0.2   0.3 0.652 0.103 
 9 mu         0.2   0.4 0.663 0.102 
10 mu         0.2   0.5 0.711 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.876       0.0578 0.0000000348     16.0 
 2 mu         0.2      0.912       0.412  0.0000716        10.0 
 3 mu         0.3      0.960       0.834  0.00442           5.93
 4 mu         0.4      1.02        0.945  0.0622            3.33
 5 mu         0.5      1.04        1.04   0.107             1.83
 6 mu         0.6      1.01        1.02   0.109             1.81
 7 mu         0.7      1.01        0.976  0.114             2.43
 8 mu         0.8      1.02        1.01   0.0190            2.92
 9 mu         0.9      0.986       0.518  0.000212         10.5 
10 mu_1       0.1      0.866       0.205  0.000000222       7.01
11 mu_1       0.2      0.904       0.705  0.000231          5.86
12 mu_1       0.3      0.970       0.904  0.00968           4.31
13 mu_1       0.4      1.03        1.01   0.0802            2.24
14 mu_1       0.5      1.03        1.04   0.127             1.81
15 mu_1       0.6      1.00        0.996  0.129             1.98
16 mu_1       0.7      1.01        0.979  0.0632            2.47
17 mu_1       0.8      1.02        0.954  0.0125            3.15
18 mu_1       0.9      0.979       0.456  0.000125         11.7 
19 mu_0       0.1      0.877       0.0414 0.0000000140     17.2 
20 mu_0       0.2      0.914       0.328  0.0000318        11.7 
21 mu_0       0.3      0.956       0.755  0.00217           7.57
22 mu_0       0.4      1.01        0.915  0.0340            4.66
23 mu_0       0.5      1.05        1.01   0.0715            2.74
24 mu_0       0.6      1.03        1.04   0.0786            1.82
25 mu_0       0.7      1.02        0.966  0.215             2.35
26 mu_0       0.8      1.04        0.941  0.0449            2.52
27 mu_0       0.9      1.05        0.877  0.00100           3.92
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06      0.000318  9.12e-18     58.4 
 2 mu         0.2      1.45      0.0250    4.78e-12     50.5 
 3 mu         0.3      1.43      0.287     1.06e- 8     20.0 
 4 mu         0.4      1.28      0.782     2.51e- 6     10.0 
 5 mu         0.5      1.14      1.07      1.74e- 4      3.17
 6 mu         0.6      1.03      1.12      5.56e- 3      2.65
 7 mu         0.7      0.983     0.907     5.47e- 4      2.82
 8 mu         0.8      1.20      0.364     2.13e- 6      7.73
 9 mu         0.9      2.14      0.0220    1.04e-10     32.2 
10 mu_1       0.1      1.55      0.00186   9.12e-17     77.8 
11 mu_1       0.2      1.50      0.0696    2.39e-11     33.7 
12 mu_1       0.3      1.41      0.524     3.53e- 8     15.4 
13 mu_1       0.4      1.25      1.04      6.27e- 6      7.50
14 mu_1       0.5      1.12      1.19      3.48e- 4      2.64
15 mu_1       0.6      1.02      1.02      5.07e- 3      2.65
16 mu_1       0.7      1.01      0.719     1.64e- 4      3.51
17 mu_1       0.8      1.28      0.243     5.61e- 7      9.15
18 mu_1       0.9      2.25      0.0155    2.44e-11     33.9 
19 mu_0       0.1      1.00      0.000127  0            56.2 
20 mu_0       0.2      1.44      0.0134    0            54.7 
21 mu_0       0.3      1.45      0.163     0            24.8 
22 mu_0       0.4      1.30      0.591     0            11.7 
23 mu_0       0.5      1.16      1.10      0             4.16
24 mu_0       0.6      1.05      1.02      0             2.92
25 mu_0       0.7      0.923     0.930     0             2.82
26 mu_0       0.8      0.863     0.406     0             3.69
27 mu_0       0.9      1.17      0.0321    0            16.9 
[1] "Total run time was 68.831 seconds"
