
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1262"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  9 10  8  4  3  8  1  9  6 11  4  7  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03526 0.33947 0.61600 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
716 546 
[1] "treatment indicator table: "

  0   1 
513 749 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.986 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.220 0.0624
 2 mu         0.1   0.2 0.255 0.0684
 3 mu         0.1   0.3 0.260 0.0696
 4 mu         0.1   0.4 0.275 0.0765
 5 mu         0.1   0.5 0.283 0.0835
 6 mu         0.2   0.1 0.282 0.0513
 7 mu         0.2   0.2 0.344 0.0593
 8 mu         0.2   0.3 0.357 0.0595
 9 mu         0.2   0.4 0.379 0.0620
10 mu         0.2   0.5 0.397 0.0685
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.424      0.0125  0.00000000795     13.8 
 2 mu         0.2      0.667      0.190   0.0000304         10.6 
 3 mu         0.3      0.825      0.555   0.00251            3.81
 4 mu         0.4      0.943      0.838   0.0398             3.91
 5 mu         0.5      1.01       0.999   0.235              3.21
 6 mu         0.6      1.03       1.02    0.569              1.95
 7 mu         0.7      1.05       0.981   0.207              3.57
 8 mu         0.8      1.06       0.847   0.0329             8.11
 9 mu         0.9      1.02       0.373   0.000362          14.1 
10 mu_1       0.1      0.706      0.0548  0.0000000519      17.2 
11 mu_1       0.2      0.803      0.363   0.0000997          6.65
12 mu_1       0.3      0.897      0.779   0.00552            4.46
13 mu_1       0.4      0.973      0.917   0.0662             3.52
14 mu_1       0.5      1.02       1.02    0.317              2.97
15 mu_1       0.6      1.03       1.01    0.421              1.83
16 mu_1       0.7      1.04       0.971   0.140              4.10
17 mu_1       0.8      1.06       0.796   0.0216             8.71
18 mu_1       0.9      1.01       0.322   0.000213          14.6 
19 mu_0       0.1      0.392      0.00675 0.00000000307     13.4 
20 mu_0       0.2      0.633      0.144   0.0000131         11.6 
21 mu_0       0.3      0.794      0.453   0.00122            4.69
22 mu_0       0.4      0.922      0.757   0.0223             4.16
23 mu_0       0.5      1.00       0.957   0.153              3.61
24 mu_0       0.6      1.03       1.01    0.456              2.46
25 mu_0       0.7      1.05       1.03    0.364              2.31
26 mu_0       0.8      1.07       1.01    0.0780             5.69
27 mu_0       0.9      1.12       0.759   0.00171           12.6 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.50     0.000231  1.66e-15     57.3 
 2 mu         0.2       4.40     0.0205    7.76e-10    198.  
 3 mu         0.3       4.68     0.168     1.50e- 6    177.  
 4 mu         0.4       2.96     0.579     3.05e- 4     75.3 
 5 mu         0.5       1.64     0.920     1.76e- 2     17.2 
 6 mu         0.6       1.23     1.26      1.39e- 1      2.99
 7 mu         0.7       1.49     0.907     1.09e- 2      8.87
 8 mu         0.8       2.71     0.372     2.15e- 4     53.3 
 9 mu         0.9       6.03     0.0302    3.16e- 8    250.  
10 mu_1       0.1       3.41     0.00138   1.58e-14    135.  
11 mu_1       0.2       5.42     0.0577    3.68e- 9    233.  
12 mu_1       0.3       4.13     0.349     4.77e- 6    139.  
13 mu_1       0.4       2.27     0.877     7.24e- 4     44.3 
14 mu_1       0.5       1.35     1.06      3.35e- 2      8.54
15 mu_1       0.6       1.21     1.13      6.19e- 2      2.94
16 mu_1       0.7       1.60     0.750     4.15e- 3     11.3 
17 mu_1       0.8       2.95     0.280     7.17e- 5     63.3 
18 mu_1       0.9       6.24     0.0183    1.05e- 8    264.  
19 mu_0       0.1       1.29     0.000108  0            48.6 
20 mu_0       0.2       4.15     0.00896   0           189.  
21 mu_0       0.3       4.92     0.102     0           193.  
22 mu_0       0.4       3.43     0.356     0            96.0 
23 mu_0       0.5       1.93     0.736     0            26.3 
24 mu_0       0.6       1.27     1.06      0             5.00
25 mu_0       0.7       1.22     1.11      0             3.28
26 mu_0       0.8       1.75     0.663     0            18.5 
27 mu_0       0.9       4.12     0.0924    0           125.  
[1] "Total run time was 47.429 seconds"
