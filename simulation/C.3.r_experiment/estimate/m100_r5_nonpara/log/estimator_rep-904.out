
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1261"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6 10  7  3  6  5  2  8  8  8  3  7  6  5  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02182 0.28654 0.55976 0.92814 5.00000 
[1] "event indicator table: "

  0   1 
741 520 
[1] "treatment indicator table: "

  0   1 
490 771 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.098 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.336 0.0998
 2 mu         0.1   0.2 0.375 0.0993
 3 mu         0.1   0.3 0.403 0.103 
 4 mu         0.1   0.4 0.416 0.107 
 5 mu         0.1   0.5 0.409 0.113 
 6 mu         0.2   0.1 0.333 0.0630
 7 mu         0.2   0.2 0.378 0.0583
 8 mu         0.2   0.3 0.406 0.0627
 9 mu         0.2   0.4 0.436 0.0706
10 mu         0.2   0.5 0.443 0.0727
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.617       0.0209  2.13e- 9      9.95
 2 mu         0.2      0.738       0.247   9.93e- 6      4.84
 3 mu         0.3      0.866       0.709   1.02e- 3      3.61
 4 mu         0.4      0.965       0.870   2.06e- 2      2.75
 5 mu         0.5      0.994       0.910   1.59e- 1      2.33
 6 mu         0.6      0.997       0.964   2.36e- 1      2.05
 7 mu         0.7      0.998       0.989   1.83e- 1      1.77
 8 mu         0.8      1.03        0.931   3.87e- 2      6.03
 9 mu         0.9      1.31        0.667   1.86e- 3     24.9 
10 mu_1       0.1      0.667       0.0859  1.54e- 8      7.65
11 mu_1       0.2      0.772       0.430   3.60e- 5      3.99
12 mu_1       0.3      0.912       0.790   2.47e- 3      3.48
13 mu_1       0.4      0.989       0.865   3.76e- 2      2.67
14 mu_1       0.5      1.00        0.958   1.93e- 1      2.14
15 mu_1       0.6      1.00        0.978   2.35e- 1      2.07
16 mu_1       0.7      1.00        0.993   1.23e- 1      1.91
17 mu_1       0.8      1.04        0.891   2.63e- 2      6.98
18 mu_1       0.9      1.34        0.631   1.32e- 3     26.3 
19 mu_0       0.1      0.612       0.0130  6.56e-10     10.2 
20 mu_0       0.2      0.729       0.168   3.42e- 6      5.59
21 mu_0       0.3      0.846       0.661   3.99e- 4      3.86
22 mu_0       0.4      0.948       0.836   9.36e- 3      3.17
23 mu_0       0.5      0.986       0.910   8.56e- 2      2.53
24 mu_0       0.6      0.987       0.886   2.29e- 1      2.03
25 mu_0       0.7      0.988       0.981   2.60e- 1      1.93
26 mu_0       0.8      0.981       1.01    8.81e- 2      2.22
27 mu_0       0.9      1.02        0.832   6.76e- 3     12.9 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.11     0.000195   1.13e-14     78.2 
 2 mu         0.2      2.34     0.0116     1.31e- 9    107.  
 3 mu         0.3      2.53     0.106      1.13e- 6     60.1 
 4 mu         0.4      2.07     0.441      1.29e- 4     39.0 
 5 mu         0.5      1.52     0.881      4.78e- 3     12.7 
 6 mu         0.6      1.25     1.09       1.41e- 2      3.97
 7 mu         0.7      1.29     1.24       3.49e- 4      3.82
 8 mu         0.8      1.71     0.739      1.36e- 6     18.9 
 9 mu         0.9      2.81     0.119      6.65e-11     60.6 
10 mu_1       0.1      2.11     0.00148    1.06e-13    130.  
11 mu_1       0.2      2.70     0.0385     6.20e- 9     89.1 
12 mu_1       0.3      2.47     0.246      3.56e- 6     60.1 
13 mu_1       0.4      1.90     0.674      3.05e- 4     29.2 
14 mu_1       0.5      1.43     0.943      9.02e- 3      9.85
15 mu_1       0.6      1.25     1.13       4.95e- 3      3.73
16 mu_1       0.7      1.35     1.22       1.05e- 4      5.12
17 mu_1       0.8      1.83     0.551      3.58e- 7     22.1 
18 mu_1       0.9      2.95     0.0817     1.56e-11     67.3 
19 mu_0       0.1      0.998    0.0000574  0            72.4 
20 mu_0       0.2      2.25     0.00528    0           111.  
21 mu_0       0.3      2.55     0.0554     0            60.1 
22 mu_0       0.4      2.18     0.285      0            45.5 
23 mu_0       0.5      1.61     0.667      0            16.2 
24 mu_0       0.6      1.24     0.910      0             5.95
25 mu_0       0.7      1.14     1.14       0             3.71
26 mu_0       0.8      1.22     1.01       0             5.90
27 mu_0       0.9      1.58     0.206      0            34.5 
[1] "Total run time was 63.447 seconds"
