
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1210"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  2 11  5  7  8  5  8  4  5  9  7  7  9  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03624 0.36474 0.63104 1.00000 5.27696 
[1] "event indicator table: "

  0   1 
736 474 
[1] "treatment indicator table: "

  0   1 
431 779 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 580
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 41.967 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.155 0.103
 2 mu         0.1   0.2 0.191 0.124
 3 mu         0.1   0.3 0.212 0.144
 4 mu         0.1   0.4 0.166 0.156
 5 mu         0.1   0.5 0.145 0.168
 6 mu         0.2   0.1 0.281 0.110
 7 mu         0.2   0.2 0.338 0.132
 8 mu         0.2   0.3 0.366 0.148
 9 mu         0.2   0.4 0.345 0.160
10 mu         0.2   0.5 0.341 0.171
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.388      0.00903 0.00000000302      9.27
 2 mu         0.2      0.760      0.144   0.0000122         15.5 
 3 mu         0.3      0.911      0.452   0.00107           10.6 
 4 mu         0.4      0.952      0.793   0.0180             4.15
 5 mu         0.5      0.985      0.951   0.113              2.62
 6 mu         0.6      1.02       1.02    0.358              1.76
 7 mu         0.7      1.03       1.02    0.540              1.96
 8 mu         0.8      0.997      0.988   0.147              2.21
 9 mu         0.9      0.963      0.692   0.00697            4.82
10 mu_1       0.1      0.740      0.0390  0.0000000207      15.9 
11 mu_1       0.2      0.934      0.349   0.0000418         15.5 
12 mu_1       0.3      0.966      0.750   0.00244            7.13
13 mu_1       0.4      0.978      0.888   0.0309             3.02
14 mu_1       0.5      1.01       0.942   0.157              2.23
15 mu_1       0.6      1.03       1.03    0.412              1.79
16 mu_1       0.7      1.03       1.03    0.463              1.95
17 mu_1       0.8      0.995      0.930   0.117              2.50
18 mu_1       0.9      0.962      0.622   0.00506            5.18
19 mu_0       0.1      0.348      0.00525 0.00000000106      8.99
20 mu_0       0.2      0.717      0.0979  0.00000482        15.5 
21 mu_0       0.3      0.888      0.328   0.000482          12.1 
22 mu_0       0.4      0.936      0.662   0.00942            5.40
23 mu_0       0.5      0.964      0.883   0.0651             3.01
24 mu_0       0.6      1.00       0.999   0.192              2.30
25 mu_0       0.7      1.03       0.987   0.444              1.97
26 mu_0       0.8      1.01       1.00    0.270              1.97
27 mu_0       0.9      0.964      0.870   0.0241             2.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.21    0.0000372  2.48e-18    117.  
 2 mu         0.2       3.23    0.00511    1.30e-12    160.  
 3 mu         0.3       2.16    0.0718     2.89e- 9     72.9 
 4 mu         0.4       1.44    0.396      6.83e- 7     18.0 
 5 mu         0.5       1.25    0.997      4.74e- 5      6.19
 6 mu         0.6       1.17    1.08       1.51e- 3      4.29
 7 mu         0.7       1.13    1.20       2.80e- 3      3.90
 8 mu         0.8       1.28    0.826      9.55e- 6     11.4 
 9 mu         0.9       2.01    0.142      4.15e-10     66.6 
10 mu_1       0.1       3.77    0.000316   2.48e-17    195.  
11 mu_1       0.2       3.03    0.0163     6.51e-12    133.  
12 mu_1       0.3       1.73    0.163      9.62e- 9     40.5 
13 mu_1       0.4       1.30    0.637      1.71e- 6      8.45
14 mu_1       0.5       1.21    1.14       9.47e- 5      6.19
15 mu_1       0.6       1.14    1.03       2.52e- 3      3.57
16 mu_1       0.7       1.13    1.21       6.67e- 4      3.81
17 mu_1       0.8       1.33    0.659      1.99e- 6     14.2 
18 mu_1       0.9       2.12    0.102      7.68e-11     74.0 
19 mu_0       0.1       2.04    0.0000114  0           108.  
20 mu_0       0.2       3.28    0.00216    0           167.  
21 mu_0       0.3       2.35    0.0322     0            86.8 
22 mu_0       0.4       1.53    0.235      0            24.4 
23 mu_0       0.5       1.29    0.676      0             6.19
24 mu_0       0.6       1.21    1.13       0             5.36
25 mu_0       0.7       1.12    1.02       0             4.10
26 mu_0       0.8       1.05    1.07       0             3.07
27 mu_0       0.9       1.04    0.247      0            11.3 
[1] "Total run time was 45.243 seconds"
