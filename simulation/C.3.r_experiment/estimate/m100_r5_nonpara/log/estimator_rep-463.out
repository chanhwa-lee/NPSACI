
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1293"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  1  6  5  3 13  5  9  5  7  8 10  5  8  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02474 0.31636 0.60937 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
728 565 
[1] "treatment indicator table: "

  0   1 
502 791 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.44 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.403 0.113 
 2 mu         0.1   0.2 0.491 0.142 
 3 mu         0.1   0.3 0.602 0.163 
 4 mu         0.1   0.4 0.645 0.181 
 5 mu         0.1   0.5 0.655 0.194 
 6 mu         0.2   0.1 0.408 0.0586
 7 mu         0.2   0.2 0.517 0.0805
 8 mu         0.2   0.3 0.629 0.0965
 9 mu         0.2   0.4 0.685 0.102 
10 mu         0.2   0.5 0.696 0.101 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10         0.167  1.04e- 9     26.6 
 2 mu         0.2      1.20         0.784  5.33e- 6      8.40
 3 mu         0.3      1.21         1.14   6.11e- 4      5.16
 4 mu         0.4      1.14         1.12   1.41e- 2      4.45
 5 mu         0.5      1.04         0.967  1.28e- 1      2.78
 6 mu         0.6      0.993        0.992  3.03e- 1      2.17
 7 mu         0.7      0.978        0.972  1.59e- 1      1.97
 8 mu         0.8      0.962        0.917  2.17e- 2      2.74
 9 mu         0.9      0.900        0.675  4.18e- 4      3.94
10 mu_1       0.1      1.20         0.484  7.58e- 9     15.7 
11 mu_1       0.2      1.23         1.07   1.95e- 5      4.98
12 mu_1       0.3      1.21         1.16   1.51e- 3      5.28
13 mu_1       0.4      1.10         1.04   2.64e- 2      3.92
14 mu_1       0.5      1.02         0.985  1.94e- 1      2.24
15 mu_1       0.6      0.985        0.989  2.31e- 1      2.26
16 mu_1       0.7      0.974        0.956  1.14e- 1      2.13
17 mu_1       0.8      0.958        0.863  1.46e- 2      3.01
18 mu_1       0.9      0.893        0.619  2.59e- 4      3.95
19 mu_0       0.1      1.09         0.121  3.15e-10     27.8 
20 mu_0       0.2      1.19         0.662  1.77e- 6      9.58
21 mu_0       0.3      1.22         1.06   2.27e- 4      5.11
22 mu_0       0.4      1.16         1.09   5.94e- 3      4.80
23 mu_0       0.5      1.06         0.996  6.24e- 2      3.32
24 mu_0       0.6      1.01         0.959  3.38e- 1      2.04
25 mu_0       0.7      0.985        1.00   1.62e- 1      2.23
26 mu_0       0.8      0.980        0.937  5.00e- 2      2.53
27 mu_0       0.9      0.963        0.879  1.85e- 3      3.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.468    0.0000568  3.71e-15     17.4 
 2 mu         0.2      1.18     0.00642    4.32e-10     38.0 
 3 mu         0.3      1.27     0.0824     3.72e- 7     39.0 
 4 mu         0.4      1.08     0.367      4.25e- 5     16.3 
 5 mu         0.5      1.08     0.688      1.57e- 3      4.94
 6 mu         0.6      1.24     1.15       7.33e- 3      6.68
 7 mu         0.7      1.36     1.20       1.78e- 4      6.76
 8 mu         0.8      1.37     0.718      7.96e- 7      7.20
 9 mu         0.9      1.37     0.0620     6.15e-11     13.0 
10 mu_1       0.1      0.940    0.000350   3.50e-14     21.7 
11 mu_1       0.2      1.45     0.0250     2.04e- 9     47.6 
12 mu_1       0.3      1.25     0.183      1.17e- 6     32.5 
13 mu_1       0.4      1.07     0.579      1.00e- 4     10.2 
14 mu_1       0.5      1.13     0.937      2.97e- 3      5.93
15 mu_1       0.6      1.30     1.15       1.53e- 3      6.68
16 mu_1       0.7      1.39     1.22       3.18e- 5      6.81
17 mu_1       0.8      1.38     0.542      1.24e- 7      7.61
18 mu_1       0.9      1.39     0.0436     8.54e-12     14.5 
19 mu_0       0.1      0.416    0.0000185  0            16.9 
20 mu_0       0.2      1.12     0.00259    0            35.7 
21 mu_0       0.3      1.28     0.0404     0            41.8 
22 mu_0       0.4      1.08     0.236      0            20.3 
23 mu_0       0.5      1.03     0.665      0             5.01
24 mu_0       0.6      1.16     0.964      0             6.68
25 mu_0       0.7      1.30     1.17       0             6.62
26 mu_0       0.8      1.29     0.923      0             6.55
27 mu_0       0.9      1.21     0.190      0            10.1 
[1] "Total run time was 56.325 seconds"
