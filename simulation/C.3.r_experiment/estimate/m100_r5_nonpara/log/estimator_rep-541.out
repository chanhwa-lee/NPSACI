
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1202"
[1] "cluster size dist'n: "

 5  6  7  8 10 11 12 13 14 15 16 17 18 19 20 
 7 10  5  6  9  2 13  8 10  5  8  7  2  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03608 0.36789 0.64265 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
727 475 
[1] "treatment indicator table: "

  0   1 
456 746 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.19 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.321 0.117 
 2 mu         0.1   0.2 0.406 0.132 
 3 mu         0.1   0.3 0.417 0.127 
 4 mu         0.1   0.4 0.420 0.129 
 5 mu         0.1   0.5 0.426 0.133 
 6 mu         0.2   0.1 0.365 0.0868
 7 mu         0.2   0.2 0.459 0.106 
 8 mu         0.2   0.3 0.496 0.105 
 9 mu         0.2   0.4 0.528 0.109 
10 mu         0.2   0.5 0.548 0.112 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.701       0.0231 0.000000403     17.7 
 2 mu         0.2      0.924       0.253  0.000219        15.4 
 3 mu         0.3      0.911       0.597  0.00622          6.49
 4 mu         0.4      0.893       0.832  0.0494           2.58
 5 mu         0.5      0.920       0.893  0.183            1.80
 6 mu         0.6      0.964       0.923  0.173            2.58
 7 mu         0.7      0.999       0.946  0.0341           3.70
 8 mu         0.8      1.02        0.915  0.00258          6.26
 9 mu         0.9      1.01        0.507  0.0000176       10.6 
10 mu_1       0.1      1.06        0.105  0.00000253      23.7 
11 mu_1       0.2      0.972       0.527  0.000694        10.4 
12 mu_1       0.3      0.899       0.804  0.0132           3.30
13 mu_1       0.4      0.900       0.896  0.0798           2.06
14 mu_1       0.5      0.943       0.907  0.241            2.01
15 mu_1       0.6      0.989       0.944  0.108            3.10
16 mu_1       0.7      1.02        0.921  0.0195           4.85
17 mu_1       0.8      1.04        0.901  0.00135          7.59
18 mu_1       0.9      1.02        0.451  0.00000908      11.7 
19 mu_0       0.1      0.661       0.0141 0.000000166     17.1 
20 mu_0       0.2      0.912       0.179  0.000101        16.7 
21 mu_0       0.3      0.915       0.487  0.00321          7.86
22 mu_0       0.4      0.888       0.790  0.0292           3.27
23 mu_0       0.5      0.896       0.884  0.125            2.29
24 mu_0       0.6      0.925       0.902  0.270            2.09
25 mu_0       0.7      0.948       0.932  0.0681           3.53
26 mu_0       0.8      0.957       0.902  0.00752          3.79
27 mu_0       0.9      0.979       0.867  0.0000904        8.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.79     0.000179   3.42e-15     114. 
 2 mu         0.2      1.24     0.0172     7.96e-10      35.0
 3 mu         0.3      1.27     0.148      6.76e- 7      17.3
 4 mu         0.4      1.35     0.588      5.06e- 5      18.2
 5 mu         0.5      1.50     1.06       1.44e- 3      14.7
 6 mu         0.6      2.40     1.11       2.21e- 2      77.4
 7 mu         0.7      4.89     0.968      1.92e- 3     212. 
 8 mu         0.8      9.21     0.688      3.34e- 5     271. 
 9 mu         0.9     16.9      0.107      3.26e- 8     652. 
10 mu_1       0.1      0.566    0.000767   0             20.7
11 mu_1       0.2      1.01     0.0405     0             13.5
12 mu_1       0.3      1.28     0.295      0             20.6
13 mu_1       0.4      1.36     0.843      0             16.2
14 mu_1       0.5      1.63     1.19       0             22.9
15 mu_1       0.6      2.85     1.03       0            100. 
16 mu_1       0.7      5.59     0.950      0            235. 
17 mu_1       0.8      9.97     0.528      0            264. 
18 mu_1       0.9     17.5      0.0690     0            688. 
19 mu_0       0.1      1.93     0.0000502  0            126. 
20 mu_0       0.2      1.29     0.00695    0             43.7
21 mu_0       0.3      1.27     0.0763     0             15.9
22 mu_0       0.4      1.34     0.355      0             19.5
23 mu_0       0.5      1.36     0.734      0             13.8
24 mu_0       0.6      1.74     1.01       0             43.0
25 mu_0       0.7      3.25     1.02       0            157. 
26 mu_0       0.8      6.17     0.803      0            302. 
27 mu_0       0.9     11.6      0.126      0            326. 
[1] "Total run time was 46.187 seconds"
