
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1231"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  9  9  2  2  7  8  8  4  5  7 10  6  6  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03151 0.34528 0.65253 1.00000 6.12029 
[1] "event indicator table: "

  0   1 
737 494 
[1] "treatment indicator table: "

  0   1 
450 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.423 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.318 0.0809
 2 mu         0.1   0.2 0.394 0.111 
 3 mu         0.1   0.3 0.400 0.117 
 4 mu         0.1   0.4 0.443 0.138 
 5 mu         0.1   0.5 0.457 0.146 
 6 mu         0.2   0.1 0.306 0.0548
 7 mu         0.2   0.2 0.390 0.0735
 8 mu         0.2   0.3 0.414 0.0776
 9 mu         0.2   0.4 0.460 0.0875
10 mu         0.2   0.5 0.501 0.0927
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.788       0.0616 0.000000130      11.8 
 2 mu         0.2      0.898       0.445  0.000208          7.40
 3 mu         0.3      1.01        0.830  0.00878           6.74
 4 mu         0.4      1.11        1.09   0.0566            5.24
 5 mu         0.5      1.11        1.07   0.150             2.55
 6 mu         0.6      1.04        1.03   0.320             2.02
 7 mu         0.7      0.949       0.943  0.221             1.94
 8 mu         0.8      0.865       0.884  0.0575            1.71
 9 mu         0.9      0.791       0.640  0.000628          4.65
10 mu_1       0.1      0.981       0.212  0.000000779      12.5 
11 mu_1       0.2      0.979       0.785  0.000624          6.10
12 mu_1       0.3      1.08        0.960  0.0189            6.90
13 mu_1       0.4      1.13        1.07   0.110             4.27
14 mu_1       0.5      1.09        1.06   0.241             2.19
15 mu_1       0.6      1.01        0.982  0.337             1.97
16 mu_1       0.7      0.926       0.956  0.156             1.94
17 mu_1       0.8      0.851       0.855  0.0346            1.97
18 mu_1       0.9      0.787       0.592  0.000383          5.08
19 mu_0       0.1      0.766       0.0414 0.0000000577     12.3 
20 mu_0       0.2      0.878       0.348  0.000104          8.11
21 mu_0       0.3      0.974       0.721  0.00383           6.66
22 mu_0       0.4      1.09        0.993  0.0207            5.88
23 mu_0       0.5      1.12        1.04   0.0584            3.20
24 mu_0       0.6      1.08        1.05   0.133             2.19
25 mu_0       0.7      1.00        1.00   0.263             2.13
26 mu_0       0.8      0.919       0.902  0.123             2.04
27 mu_0       0.9      0.822       0.751  0.00283           2.21
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.80    0.0000572  7.54e-15    409.  
 2 mu         0.2       4.39    0.00605    7.44e-10    196.  
 3 mu         0.3       2.19    0.0838     4.28e- 7     83.6 
 4 mu         0.4       1.23    0.350      3.66e- 5     26.7 
 5 mu         0.5       1.02    0.663      1.08e- 3      5.36
 6 mu         0.6       1.13    0.859      2.43e- 3      4.68
 7 mu         0.7       1.46    1.02       5.05e- 5     16.9 
 8 mu         0.8       2.01    0.944      4.57e- 8     28.2 
 9 mu         0.9       2.99    0.158      2.21e-13    131.  
10 mu_1       0.1       6.85    0.000381   6.79e-14    409.  
11 mu_1       0.2       3.34    0.0186     3.50e- 9    132.  
12 mu_1       0.3       1.58    0.179      1.34e- 6     52.2 
13 mu_1       0.4       1.06    0.555      8.61e- 5     12.5 
14 mu_1       0.5       1.02    0.775      2.04e- 3      5.36
15 mu_1       0.6       1.18    0.810      2.70e- 4      6.24
16 mu_1       0.7       1.55    1.10       4.81e- 6     19.3 
17 mu_1       0.8       2.07    0.854      5.71e- 9     28.2 
18 mu_1       0.9       3.10    0.117      2.45e-14    145.  
19 mu_0       0.1       5.69    0.0000171  0           409.  
20 mu_0       0.2       4.65    0.00208    0           221.  
21 mu_0       0.3       2.45    0.0340     0            97.0 
22 mu_0       0.4       1.34    0.185      0            36.2 
23 mu_0       0.5       1.01    0.547      0             7.92
24 mu_0       0.6       1.04    0.744      0             5.24
25 mu_0       0.7       1.27    0.827      0            11.2 
26 mu_0       0.8       1.73    0.953      0            28.2 
27 mu_0       0.9       2.01    0.356      0            23.2 
[1] "Total run time was 65.832 seconds"
