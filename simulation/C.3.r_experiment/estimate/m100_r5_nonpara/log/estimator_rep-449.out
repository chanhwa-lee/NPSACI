
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  2  5  5  7  9  6  4 10  6  7  7  6  6  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0301  0.3679  0.6118  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
760 509 
[1] "treatment indicator table: "

  0   1 
475 794 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 684
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 88.108 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.251 0.0908
 2 mu         0.1   0.2 0.388 0.112 
 3 mu         0.1   0.3 0.409 0.121 
 4 mu         0.1   0.4 0.431 0.132 
 5 mu         0.1   0.5 0.458 0.140 
 6 mu         0.2   0.1 0.331 0.0744
 7 mu         0.2   0.2 0.459 0.0884
 8 mu         0.2   0.3 0.493 0.100 
 9 mu         0.2   0.4 0.550 0.109 
10 mu         0.2   0.5 0.603 0.115 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.645       0.0252 0.0000000847     15.7 
 2 mu         0.2      0.913       0.269  0.0000857        11.9 
 3 mu         0.3      0.951       0.652  0.00335           6.53
 4 mu         0.4      0.968       0.905  0.0323            2.75
 5 mu         0.5      0.983       1.00   0.137             2.08
 6 mu         0.6      0.982       0.991  0.327             1.79
 7 mu         0.7      0.993       0.990  0.103             2.19
 8 mu         0.8      1.03        0.958  0.0106            3.13
 9 mu         0.9      1.09        0.802  0.0000978        10.5 
10 mu_1       0.1      1.02        0.0983 0.000000548      13.6 
11 mu_1       0.2      1.01        0.521  0.000277         10.6 
12 mu_1       0.3      0.970       0.916  0.00725           4.16
13 mu_1       0.4      0.974       0.972  0.0528            2.38
14 mu_1       0.5      0.978       0.960  0.184             1.97
15 mu_1       0.6      0.976       0.976  0.274             1.66
16 mu_1       0.7      0.995       1.00   0.0712            2.32
17 mu_1       0.8      1.04        0.935  0.00648           3.64
18 mu_1       0.9      1.10        0.742  0.0000539        11.3 
19 mu_0       0.1      0.603       0.0154 0.0000000332     16.1 
20 mu_0       0.2      0.889       0.203  0.0000378        12.2 
21 mu_0       0.3      0.943       0.497  0.00168           7.54
22 mu_0       0.4      0.964       0.823  0.0187            3.00
23 mu_0       0.5      0.987       0.932  0.0910            2.20
24 mu_0       0.6      0.990       0.989  0.217             1.98
25 mu_0       0.7      0.989       0.989  0.177             1.88
26 mu_0       0.8      1.00        1.02   0.0269            2.68
27 mu_0       0.9      0.989       0.827  0.000493          5.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.890    0.000102   2.97e-17     41.3 
 2 mu         0.2      1.25     0.00942    1.39e-11     25.5 
 3 mu         0.3      1.22     0.0853     2.69e- 8     19.2 
 4 mu         0.4      1.10     0.325      5.45e- 6     11.4 
 5 mu         0.5      1.01     0.760      3.15e- 4      8.09
 6 mu         0.6      1.01     0.955      7.43e- 3      3.52
 7 mu         0.7      1.12     1.02       1.18e- 4      3.85
 8 mu         0.8      1.29     0.776      2.69e- 7      9.40
 9 mu         0.9      1.44     0.0750     5.84e-12     19.6 
10 mu_1       0.1      1.36     0.000615   2.82e-16     37.6 
11 mu_1       0.2      1.34     0.0316     6.58e-11     23.5 
12 mu_1       0.3      1.18     0.194      8.51e- 8     16.0 
13 mu_1       0.4      1.05     0.544      1.29e- 5     11.0 
14 mu_1       0.5      0.990    0.882      5.98e- 4      6.22
15 mu_1       0.6      1.03     1.01       1.95e- 3      3.71
16 mu_1       0.7      1.16     1.09       2.67e- 5      4.19
17 mu_1       0.8      1.32     0.632      5.30e- 8     10.6 
18 mu_1       0.9      1.46     0.0484     1.02e-12     19.6 
19 mu_0       0.1      0.837    0.0000438  0            41.8 
20 mu_0       0.2      1.23     0.00392    0            28.9 
21 mu_0       0.3      1.24     0.0279     0            20.5 
22 mu_0       0.4      1.13     0.187      0            11.9 
23 mu_0       0.5      1.04     0.492      0             9.95
24 mu_0       0.6      0.991    0.874      0             5.19
25 mu_0       0.7      1.03     0.941      0             3.67
26 mu_0       0.8      1.13     0.968      0             4.70
27 mu_0       0.9      1.27     0.222      0            19.6 
[1] "Total run time was 93.869 seconds"
