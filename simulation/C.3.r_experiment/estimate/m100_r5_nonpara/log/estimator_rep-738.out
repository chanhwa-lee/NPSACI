
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  7  8  8 10  4  5 10  2  2  1  5  8  6 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.07045 0.42947 0.67615 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
739 502 
[1] "treatment indicator table: "

  0   1 
413 828 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 117.845 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.379 0.192
 2 mu         0.1   0.2 0.484 0.207
 3 mu         0.1   0.3 0.486 0.204
 4 mu         0.1   0.4 0.487 0.201
 5 mu         0.1   0.5 0.502 0.203
 6 mu         0.2   0.1 0.312 0.106
 7 mu         0.2   0.2 0.424 0.119
 8 mu         0.2   0.3 0.440 0.118
 9 mu         0.2   0.4 0.476 0.116
10 mu         0.2   0.5 0.512 0.116
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.672       0.0169  9.81e-10     17.1 
 2 mu         0.2      0.850       0.256   2.93e- 6      9.25
 3 mu         0.3      1.02        0.618   2.68e- 4      5.13
 4 mu         0.4      1.11        0.924   5.68e- 3      4.38
 5 mu         0.5      1.11        1.00    5.21e- 2      3.36
 6 mu         0.6      1.06        0.987   2.68e- 1      2.31
 7 mu         0.7      0.993       0.995   2.16e- 1      2.07
 8 mu         0.8      0.972       0.901   5.27e- 2      2.40
 9 mu         0.9      1.02        0.775   7.47e- 4      7.51
10 mu_1       0.1      0.664       0.0568  7.87e- 9      6.77
11 mu_1       0.2      0.929       0.439   1.18e- 5      7.91
12 mu_1       0.3      1.08        0.806   7.21e- 4      4.51
13 mu_1       0.4      1.13        0.988   1.15e- 2      4.27
14 mu_1       0.5      1.10        1.00    8.51e- 2      2.80
15 mu_1       0.6      1.03        1.01    2.78e- 1      2.11
16 mu_1       0.7      0.976       0.974   2.53e- 1      2.05
17 mu_1       0.8      0.972       0.909   2.94e- 2      2.46
18 mu_1       0.9      1.03        0.716   3.78e- 4      8.19
19 mu_0       0.1      0.673       0.0115  2.16e-10     18.5 
20 mu_0       0.2      0.830       0.175   7.16e- 7     10.9 
21 mu_0       0.3      0.997       0.477   7.36e- 5      6.23
22 mu_0       0.4      1.10        0.817   1.78e- 3      4.45
23 mu_0       0.5      1.12        0.948   1.91e- 2      3.98
24 mu_0       0.6      1.10        1.03    1.18e- 1      2.67
25 mu_0       0.7      1.03        1.02    1.30e- 1      2.22
26 mu_0       0.8      0.971       0.984   1.46e- 1      2.18
27 mu_0       0.9      0.951       0.888   4.08e- 3      3.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.456   0.0000247   9.51e-17     20.9 
 2 mu         0.2      0.826   0.00154     4.43e-11     18.3 
 3 mu         0.3      1.12    0.0294      8.60e- 8     15.2 
 4 mu         0.4      1.20    0.223       1.74e- 5      8.91
 5 mu         0.5      1.13    0.647       1.01e- 3      6.59
 6 mu         0.6      1.11    0.878       2.58e- 2      6.08
 7 mu         0.7      1.24    1.07        7.41e- 3      6.02
 8 mu         0.8      1.46    1.07        6.50e- 5      7.50
 9 mu         0.9      1.72    0.242       1.27e- 8     14.3 
10 mu_1       0.1      0.763   0.000203    9.04e-16     26.1 
11 mu_1       0.2      1.00    0.00630     2.11e-10     20.0 
12 mu_1       0.3      1.20    0.0658      2.72e- 7     11.9 
13 mu_1       0.4      1.20    0.358       4.14e- 5      8.91
14 mu_1       0.5      1.11    0.749       1.92e- 3      5.27
15 mu_1       0.6      1.13    1.02        4.08e- 2      6.59
16 mu_1       0.7      1.29    1.19        2.49e- 3      5.78
17 mu_1       0.8      1.51    0.921       1.91e- 5      7.40
18 mu_1       0.9      1.76    0.188       3.32e- 9     15.1 
19 mu_0       0.1      0.422   0.00000204  0            20.3 
20 mu_0       0.2      0.782   0.000382    0            20.0 
21 mu_0       0.3      1.08    0.0144      0            16.6 
22 mu_0       0.4      1.20    0.108       0             8.91
23 mu_0       0.5      1.14    0.387       0             7.90
24 mu_0       0.6      1.08    0.762       0             5.32
25 mu_0       0.7      1.14    0.996       0             7.02
26 mu_0       0.8      1.25    1.09        0             7.89
27 mu_0       0.9      1.34    0.278       0             8.17
[1] "Total run time was 123.805 seconds"
