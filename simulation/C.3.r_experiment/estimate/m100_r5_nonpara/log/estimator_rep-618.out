
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1246"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  7  4  5  7  8  1  6  7  7  7  9  5  9  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02324 0.32165 0.58564 1.00000 4.94768 
[1] "event indicator table: "

  0   1 
741 505 
[1] "treatment indicator table: "

  0   1 
476 770 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.352 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.316 0.0928
 2 mu         0.1   0.2 0.368 0.121 
 3 mu         0.1   0.3 0.456 0.138 
 4 mu         0.1   0.4 0.503 0.147 
 5 mu         0.1   0.5 0.536 0.166 
 6 mu         0.2   0.1 0.388 0.100 
 7 mu         0.2   0.2 0.466 0.133 
 8 mu         0.2   0.3 0.565 0.152 
 9 mu         0.2   0.4 0.625 0.163 
10 mu         0.2   0.5 0.662 0.176 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.828      0.0122  0.0000000806     15.0 
 2 mu         0.2      1.14       0.173   0.0000701        25.9 
 3 mu         0.3      1.11       0.526   0.00210          15.6 
 4 mu         0.4      1.03       0.873   0.0211            5.54
 5 mu         0.5      1.02       1.05    0.114             2.05
 6 mu         0.6      1.02       0.986   0.401             2.55
 7 mu         0.7      1.03       0.999   0.311             2.62
 8 mu         0.8      1.08       0.874   0.0387            7.13
 9 mu         0.9      1.24       0.550   0.000389         29.7 
10 mu_1       0.1      1.06       0.0518  0.000000554      28.1 
11 mu_1       0.2      1.16       0.364   0.000287         24.3 
12 mu_1       0.3      1.06       0.758   0.00576           9.96
13 mu_1       0.4      1.01       1.02    0.0436            3.25
14 mu_1       0.5      1.02       1.02    0.189             2.04
15 mu_1       0.6      1.02       0.956   0.448             2.64
16 mu_1       0.7      1.03       0.971   0.242             2.84
17 mu_1       0.8      1.09       0.852   0.0266            8.40
18 mu_1       0.9      1.26       0.506   0.000243         32.4 
19 mu_0       0.1      0.802      0.00700 0.0000000280     15.0 
20 mu_0       0.2      1.13       0.118   0.0000157        26.3 
21 mu_0       0.3      1.13       0.422   0.000533         18.0 
22 mu_0       0.4      1.05       0.762   0.00615           7.16
23 mu_0       0.5      1.02       0.972   0.0388            2.75
24 mu_0       0.6      1.02       1.02    0.164             2.41
25 mu_0       0.7      1.02       0.925   0.288             2.71
26 mu_0       0.8      1.04       0.982   0.0871            3.62
27 mu_0       0.9      1.07       0.837   0.00170           5.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.512    0.000142   2.11e-15     22.2 
 2 mu         0.2      0.874    0.0119     9.81e-10     21.9 
 3 mu         0.3      1.11     0.125      1.24e- 6     14.8 
 4 mu         0.4      1.16     0.429      1.24e- 4      9.65
 5 mu         0.5      1.09     0.947      4.41e- 3      6.19
 6 mu         0.6      1.07     0.972      8.15e- 2      4.23
 7 mu         0.7      1.30     0.884      1.72e- 2      9.78
 8 mu         0.8      2.40     0.404      3.39e- 4     67.4 
 9 mu         0.9      5.74     0.0549     2.65e- 7    316.  
10 mu_1       0.1      0.974    0.000878   2.00e-14     31.8 
11 mu_1       0.2      1.06     0.0395     4.66e- 9     15.7 
12 mu_1       0.3      1.14     0.257      4.15e- 6      9.10
13 mu_1       0.4      1.10     0.661      3.10e- 4      9.38
14 mu_1       0.5      1.04     0.955      8.82e- 3      4.81
15 mu_1       0.6      1.07     0.946      9.77e- 2      5.31
16 mu_1       0.7      1.37     0.818      6.55e- 3     10.9 
17 mu_1       0.8      2.61     0.303      1.13e- 4     80.1 
18 mu_1       0.9      5.95     0.0365     7.86e- 8    334.  
19 mu_0       0.1      0.461    0.0000602  0            21.2 
20 mu_0       0.2      0.827    0.00508    0            23.5 
21 mu_0       0.3      1.10     0.0551     0            18.1 
22 mu_0       0.4      1.20     0.274      0            11.1 
23 mu_0       0.5      1.14     0.748      0             7.57
24 mu_0       0.6      1.07     0.956      0             4.35
25 mu_0       0.7      1.12     0.994      0             7.67
26 mu_0       0.8      1.56     0.727      0            16.9 
27 mu_0       0.9      3.84     0.185      0           158.  
[1] "Total run time was 54.126 seconds"
