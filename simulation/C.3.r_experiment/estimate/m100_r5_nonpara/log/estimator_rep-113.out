
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1273"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  4  3  7  5  9  1  6  6  5  8  8  9 11  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05017 0.38731 0.63702 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
732 541 
[1] "treatment indicator table: "

  0   1 
488 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 45.816 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.290 0.133 
 2 mu         0.1   0.2 0.331 0.158 
 3 mu         0.1   0.3 0.388 0.169 
 4 mu         0.1   0.4 0.409 0.157 
 5 mu         0.1   0.5 0.404 0.161 
 6 mu         0.2   0.1 0.274 0.0900
 7 mu         0.2   0.2 0.326 0.108 
 8 mu         0.2   0.3 0.386 0.118 
 9 mu         0.2   0.4 0.419 0.110 
10 mu         0.2   0.5 0.431 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.603      0.0142  0.00000000841     21.4 
 2 mu         0.2      0.710      0.196   0.0000215         13.6 
 3 mu         0.3      0.863      0.536   0.00163            7.11
 4 mu         0.4      0.988      0.875   0.0280             5.23
 5 mu         0.5      1.04       0.909   0.199              3.10
 6 mu         0.6      1.01       0.939   0.349              2.24
 7 mu         0.7      0.958      0.932   0.0949             1.76
 8 mu         0.8      0.973      0.838   0.0104             4.26
 9 mu         0.9      1.14       0.424   0.000111          13.5 
10 mu_1       0.1      0.644      0.0588  0.0000000598      19.1 
11 mu_1       0.2      0.793      0.413   0.0000770         10.5 
12 mu_1       0.3      0.937      0.753   0.00395            6.40
13 mu_1       0.4      1.03       0.923   0.0512             4.05
14 mu_1       0.5      1.05       0.913   0.295              2.76
15 mu_1       0.6      1.00       0.980   0.265              2.14
16 mu_1       0.7      0.954      0.920   0.0674             1.86
17 mu_1       0.8      0.986      0.803   0.00676            4.84
18 mu_1       0.9      1.15       0.387   0.0000652         14.1 
19 mu_0       0.1      0.598      0.00811 0.00000000269     23.7 
20 mu_0       0.2      0.689      0.144   0.00000758        14.4 
21 mu_0       0.3      0.832      0.446   0.000645           8.55
22 mu_0       0.4      0.963      0.784   0.0126             6.02
23 mu_0       0.5      1.03       0.888   0.104              4.11
24 mu_0       0.6      1.03       0.896   0.292              2.53
25 mu_0       0.7      0.967      0.919   0.159              1.86
26 mu_0       0.8      0.921      0.911   0.0249             2.18
27 mu_0       0.9      1.02       0.766   0.000524           7.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.22    0.000173   1.76e-16     48.8 
 2 mu         0.2       1.54    0.0148     4.61e-11     53.4 
 3 mu         0.3       1.61    0.125      6.81e- 8     27.7 
 4 mu         0.4       1.49    0.411      1.21e- 5     24.4 
 5 mu         0.5       1.29    0.902      6.70e- 4     12.5 
 6 mu         0.6       1.21    1.03       3.27e- 3      3.27
 7 mu         0.7       1.36    1.08       4.46e- 5      6.96
 8 mu         0.8       1.67    0.589      8.86e- 8     19.5 
 9 mu         0.9       2.28    0.0659     1.71e-12     43.0 
10 mu_1       0.1       1.69    0.000814   0            75.0 
11 mu_1       0.2       1.62    0.0313     0            41.1 
12 mu_1       0.3       1.60    0.245      0            27.9 
13 mu_1       0.4       1.41    0.629      0            21.6 
14 mu_1       0.5       1.22    0.996      0             8.86
15 mu_1       0.6       1.21    1.03       0             3.98
16 mu_1       0.7       1.41    1.05       0             8.95
17 mu_1       0.8       1.72    0.412      0            21.5 
18 mu_1       0.9       2.35    0.0353     0            47.8 
19 mu_0       0.1       1.17    0.0000767  0            45.8 
20 mu_0       0.2       1.52    0.00486    0            56.5 
21 mu_0       0.3       1.61    0.0481     0            33.4 
22 mu_0       0.4       1.55    0.258      0            26.4 
23 mu_0       0.5       1.35    0.718      0            16.2 
24 mu_0       0.6       1.21    0.958      0             5.21
25 mu_0       0.7       1.27    1.02       0             5.85
26 mu_0       0.8       1.48    0.946      0            11.5 
27 mu_0       0.9       1.70    0.149      0            33.6 
[1] "Total run time was 49.031 seconds"
