
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1283"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  5  7  5  4  7  7  8  5 13  2  9  8  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03157 0.35092 0.61985 1.00000 4.37954 
[1] "event indicator table: "

  0   1 
763 520 
[1] "treatment indicator table: "

  0   1 
493 790 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 71.146 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 1.24  0.941
 2 mu         0.1   0.2 1.42  1.06 
 3 mu         0.1   0.3 1.54  1.16 
 4 mu         0.1   0.4 1.63  1.24 
 5 mu         0.1   0.5 1.68  1.29 
 6 mu         0.2   0.1 0.614 0.296
 7 mu         0.2   0.2 0.727 0.335
 8 mu         0.2   0.3 0.795 0.369
 9 mu         0.2   0.4 0.844 0.394
10 mu         0.2   0.5 0.888 0.412
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      2.65        0.0480 0.000000996    191.  
 2 mu         0.2      1.48        0.328  0.000549        60.6 
 3 mu         0.3      1.07        0.727  0.0139          13.1 
 4 mu         0.4      0.997       0.899  0.107            2.46
 5 mu         0.5      0.993       0.974  0.333            1.66
 6 mu         0.6      0.999       1.02   0.270            1.52
 7 mu         0.7      1.00        0.983  0.283            2.16
 8 mu         0.8      0.972       0.937  0.0566           2.73
 9 mu         0.9      0.896       0.556  0.00146          8.36
10 mu_1       0.1      2.08        0.173  0.00000577     115.  
11 mu_1       0.2      1.18        0.634  0.00163         23.2 
12 mu_1       0.3      1.02        0.861  0.0281           4.67
13 mu_1       0.4      0.992       0.963  0.170            2.15
14 mu_1       0.5      0.989       1.03   0.385            1.48
15 mu_1       0.6      0.993       1.01   0.258            1.63
16 mu_1       0.7      0.997       0.998  0.184            2.29
17 mu_1       0.8      0.961       0.920  0.0354           3.21
18 mu_1       0.9      0.896       0.485  0.000837         9.14
19 mu_0       0.1      2.71        0.0341 0.000000466    200.  
20 mu_0       0.2      1.55        0.248  0.000278        70.0 
21 mu_0       0.3      1.09        0.622  0.00775         16.7 
22 mu_0       0.4      1.00        0.896  0.0648           3.30
23 mu_0       0.5      0.997       0.935  0.252            2.08
24 mu_0       0.6      1.01        1.03   0.288            1.74
25 mu_0       0.7      1.02        1.02   0.282            1.88
26 mu_0       0.8      1.01        0.983  0.141            2.55
27 mu_0       0.9      0.898       0.792  0.00709          2.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.36     0.000102   9.94e-18    464.  
 2 mu         0.2      2.51     0.00764    1.04e-11    141.  
 3 mu         0.3      1.30     0.107      3.47e- 8     25.0 
 4 mu         0.4      0.994    0.397      1.09e- 5      5.79
 5 mu         0.5      0.988    0.814      9.48e- 4      3.80
 6 mu         0.6      1.07     1.06       6.46e- 3      3.42
 7 mu         0.7      1.15     1.23       7.55e- 5      3.05
 8 mu         0.8      1.37     0.695      1.31e- 7     13.1 
 9 mu         0.9      2.84     0.0814     2.26e-12    121.  
10 mu_1       0.1      3.94     0.000820   9.94e-17    273.  
11 mu_1       0.2      1.56     0.0257     5.21e-11     41.5 
12 mu_1       0.3      1.03     0.231      1.16e- 7     12.4 
13 mu_1       0.4      0.947    0.548      2.73e- 5      3.88
14 mu_1       0.5      1.01     0.927      1.90e- 3      4.05
15 mu_1       0.6      1.10     1.10       6.33e- 4      3.04
16 mu_1       0.7      1.18     1.15       6.35e- 6      3.30
17 mu_1       0.8      1.43     0.552      9.66e- 9     15.6 
18 mu_1       0.9      3.01     0.0556     1.47e-13    134.  
19 mu_0       0.1      5.52     0.0000311  0           486.  
20 mu_0       0.2      2.75     0.00356    0           166.  
21 mu_0       0.3      1.42     0.0503     0            33.6 
22 mu_0       0.4      1.02     0.226      0             7.94
23 mu_0       0.5      0.967    0.612      0             3.54
24 mu_0       0.6      1.03     1.10       0             4.00
25 mu_0       0.7      1.10     1.15       0             2.74
26 mu_0       0.8      1.15     0.945      0             4.82
27 mu_0       0.9      1.34     0.233      0            30.7 
[1] "Total run time was 77.285 seconds"
