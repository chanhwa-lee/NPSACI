
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1215"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  8  7  4  4 11  8  3  5 10  9  6  5  5  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03062 0.33092 0.63058 1.00000 5.77001 
[1] "event indicator table: "

  0   1 
750 465 
[1] "treatment indicator table: "

  0   1 
470 745 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.825 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.341 0.129 
 2 mu         0.1   0.2 0.382 0.109 
 3 mu         0.1   0.3 0.433 0.0871
 4 mu         0.1   0.4 0.454 0.0869
 5 mu         0.1   0.5 0.473 0.0896
 6 mu         0.2   0.1 0.273 0.0703
 7 mu         0.2   0.2 0.338 0.0643
 8 mu         0.2   0.3 0.395 0.0590
 9 mu         0.2   0.4 0.431 0.0645
10 mu         0.2   0.5 0.463 0.0660
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.815       0.0778 0.0000000199       8.23
 2 mu         0.2      0.866       0.423  0.0000425          4.38
 3 mu         0.3      0.879       0.749  0.00229            4.31
 4 mu         0.4      0.903       0.787  0.0221             3.93
 5 mu         0.5      0.939       0.858  0.0864             2.78
 6 mu         0.6      0.980       0.945  0.118              2.16
 7 mu         0.7      0.994       1.00   0.176              2.38
 8 mu         0.8      0.996       1.04   0.0533             2.99
 9 mu         0.9      1.06        0.881  0.00218            5.40
10 mu_1       0.1      0.796       0.200  0.000000133        6.24
11 mu_1       0.2      0.801       0.641  0.000143           3.35
12 mu_1       0.3      0.850       0.723  0.00460            4.78
13 mu_1       0.4      0.908       0.795  0.0336             3.40
14 mu_1       0.5      0.961       0.943  0.109              2.78
15 mu_1       0.6      0.996       0.973  0.138              1.93
16 mu_1       0.7      0.998       1.02   0.0974             2.43
17 mu_1       0.8      0.999       1.02   0.0220             3.23
18 mu_1       0.9      1.07        0.872  0.00141            5.99
19 mu_0       0.1      0.818       0.0568 0.00000000733      9.08
20 mu_0       0.2      0.882       0.343  0.0000174          5.31
21 mu_0       0.3      0.892       0.693  0.00123            4.11
22 mu_0       0.4      0.900       0.805  0.0144             4.29
23 mu_0       0.5      0.918       0.851  0.0639             2.78
24 mu_0       0.6      0.955       0.926  0.0875             2.57
25 mu_0       0.7      0.986       0.986  0.176              2.25
26 mu_0       0.8      0.986       0.937  0.0537             2.57
27 mu_0       0.9      0.984       0.938  0.00163            4.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.899     0.000433  3.10e-17     34.4 
 2 mu         0.2      1.01      0.0211    8.13e-12     12.8 
 3 mu         0.3      1.10      0.183     1.20e- 8      9.87
 4 mu         0.4      1.23      0.640     2.13e- 6      6.90
 5 mu         0.5      1.29      0.963     1.18e- 4      7.69
 6 mu         0.6      1.28      1.05      4.79e- 4      7.53
 7 mu         0.7      1.23      1.08      5.60e- 6      5.78
 8 mu         0.8      1.18      0.853     9.74e- 9      8.66
 9 mu         0.9      1.25      0.0959    1.67e-13     22.2 
10 mu_1       0.1      1.15      0.00258   3.10e-16     20.2 
11 mu_1       0.2      1.12      0.0844    4.06e-11     12.8 
12 mu_1       0.3      1.19      0.348     4.00e- 8      8.17
13 mu_1       0.4      1.29      0.747     5.33e- 6      6.90
14 mu_1       0.5      1.30      0.905     2.37e- 4      8.39
15 mu_1       0.6      1.26      1.00      4.69e- 5      6.84
16 mu_1       0.7      1.22      0.961     4.70e- 7      6.06
17 mu_1       0.8      1.19      0.697     7.16e-10     10.8 
18 mu_1       0.9      1.27      0.0671    1.09e-14     24.7 
19 mu_0       0.1      0.870     0.000223  0            36.0 
20 mu_0       0.2      0.982     0.00787   0            14.6 
21 mu_0       0.3      1.06      0.0949    0            11.3 
22 mu_0       0.4      1.19      0.420     0             6.90
23 mu_0       0.5      1.28      0.805     0             6.99
24 mu_0       0.6      1.29      0.969     0             8.55
25 mu_0       0.7      1.25      0.889     0             6.83
26 mu_0       0.8      1.14      0.859     0             6.62
27 mu_0       0.9      1.06      0.192     0             9.89
[1] "Total run time was 55.301 seconds"
