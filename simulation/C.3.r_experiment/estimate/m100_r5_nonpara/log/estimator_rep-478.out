
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1339"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  4  2  8  7  5  6  8  8  9  3  6 14  5  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02346 0.31733 0.59550 1.00000 4.18650 
[1] "event indicator table: "

  0   1 
802 537 
[1] "treatment indicator table: "

  0   1 
513 826 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 711
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 41.081 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.594 0.166 
 2 mu         0.1   0.2 0.647 0.191 
 3 mu         0.1   0.3 0.759 0.201 
 4 mu         0.1   0.4 0.778 0.209 
 5 mu         0.1   0.5 0.791 0.217 
 6 mu         0.2   0.1 0.407 0.0938
 7 mu         0.2   0.2 0.447 0.113 
 8 mu         0.2   0.3 0.554 0.116 
 9 mu         0.2   0.4 0.574 0.122 
10 mu         0.2   0.5 0.597 0.127 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.30        0.0347 0.0000000282     21.8 
 2 mu         0.2      1.13        0.390  0.0000575        11.4 
 3 mu         0.3      0.988       0.759  0.00342           6.50
 4 mu         0.4      0.991       0.941  0.0307            2.83
 5 mu         0.5      1.03        1.02   0.106             2.38
 6 mu         0.6      1.07        1.04   0.101             2.35
 7 mu         0.7      1.06        1.07   0.0803            2.40
 8 mu         0.8      0.981       0.950  0.00991           2.41
 9 mu         0.9      0.896       0.667  0.000162          4.37
10 mu_1       0.1      1.21        0.0992 0.000000188      12.9 
11 mu_1       0.2      1.01        0.599  0.000192         10.2 
12 mu_1       0.3      0.975       0.833  0.00765           4.34
13 mu_1       0.4      1.01        0.949  0.0513            2.51
14 mu_1       0.5      1.05        1.02   0.0515            2.45
15 mu_1       0.6      1.08        1.10   0.138             2.35
16 mu_1       0.7      1.05        1.07   0.0530            2.41
17 mu_1       0.8      0.963       0.921  0.00601           2.43
18 mu_1       0.9      0.888       0.648  0.0000894         4.70
19 mu_0       0.1      1.31        0.0226 0.0000000104     22.8 
20 mu_0       0.2      1.16        0.302  0.0000239        11.7 
21 mu_0       0.3      0.994       0.704  0.00161           7.43
22 mu_0       0.4      0.976       0.893  0.0170            3.23
23 mu_0       0.5      1.01        0.981  0.0761            2.30
24 mu_0       0.6      1.06        1.04   0.0448            2.34
25 mu_0       0.7      1.09        1.10   0.144             2.37
26 mu_0       0.8      1.05        1.03   0.0255            2.34
27 mu_0       0.9      0.970       0.923  0.000815          3.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.10    0.0000869  5.23e-19    405.  
 2 mu         0.2       3.36    0.00769    5.48e-13    138.  
 3 mu         0.3       2.17    0.107      1.82e- 9     40.5 
 4 mu         0.4       1.64    0.432      5.75e- 7     23.5 
 5 mu         0.5       1.35    0.790      4.98e- 5      7.71
 6 mu         0.6       1.22    0.972      5.99e- 4      5.20
 7 mu         0.7       1.19    0.976      1.07e- 5      4.86
 8 mu         0.8       1.26    0.661      3.66e- 8     12.1 
 9 mu         0.9       1.43    0.153      2.23e-12     17.7 
10 mu_1       0.1       4.41    0.000459   0           253.  
11 mu_1       0.2       2.34    0.0233     0            46.3 
12 mu_1       0.3       1.82    0.205      0            36.0 
13 mu_1       0.4       1.50    0.573      0            15.6 
14 mu_1       0.5       1.30    0.861      0             5.65
15 mu_1       0.6       1.21    1.05       0             5.20
16 mu_1       0.7       1.19    0.938      0             4.77
17 mu_1       0.8       1.27    0.580      0            13.3 
18 mu_1       0.9       1.44    0.119      0            17.3 
19 mu_0       0.1       6.28    0.0000372  0           422.  
20 mu_0       0.2       3.61    0.00277    0           162.  
21 mu_0       0.3       2.32    0.0489     0            42.4 
22 mu_0       0.4       1.73    0.257      0            28.7 
23 mu_0       0.5       1.40    0.581      0            11.3 
24 mu_0       0.6       1.24    0.882      0             5.20
25 mu_0       0.7       1.18    0.951      0             5.06
26 mu_0       0.8       1.19    0.791      0             7.10
27 mu_0       0.9       1.29    0.112      0            20.8 
[1] "Total run time was 44.466 seconds"
