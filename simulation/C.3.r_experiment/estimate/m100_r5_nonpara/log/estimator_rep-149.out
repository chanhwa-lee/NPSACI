
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8 12  6  7  3  4  8  4  8  8  2  2 10  5  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03476 0.28856 0.58421 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
672 534 
[1] "treatment indicator table: "

  0   1 
474 732 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 560
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 69.094 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.735 0.376 
 2 mu         0.1   0.2 0.812 0.438 
 3 mu         0.1   0.3 0.881 0.472 
 4 mu         0.1   0.4 0.919 0.490 
 5 mu         0.1   0.5 0.955 0.521 
 6 mu         0.2   0.1 0.475 0.0876
 7 mu         0.2   0.2 0.561 0.101 
 8 mu         0.2   0.3 0.632 0.109 
 9 mu         0.2   0.4 0.672 0.117 
10 mu         0.2   0.5 0.698 0.122 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.60         0.146 0.000000121      87.4 
 2 mu         0.2      1.16         0.678 0.0000888        16.9 
 3 mu         0.3      1.08         0.960 0.00326           3.45
 4 mu         0.4      1.04         1.06  0.0350            2.07
 5 mu         0.5      1.03         1.02  0.187             2.02
 6 mu         0.6      1.02         1.01  0.299             1.75
 7 mu         0.7      0.976        0.933 0.139             1.87
 8 mu         0.8      0.919        0.919 0.0184            2.55
 9 mu         0.9      0.854        0.712 0.000228          3.60
10 mu_1       0.1      0.992        0.399 0.000000732       6.98
11 mu_1       0.2      1.07         0.934 0.000321          4.86
12 mu_1       0.3      1.04         0.991 0.00792           3.16
13 mu_1       0.4      1.03         1.08  0.0646            1.75
14 mu_1       0.5      1.02         0.998 0.280             2.05
15 mu_1       0.6      1.01         0.998 0.175             1.67
16 mu_1       0.7      0.964        0.929 0.106             1.98
17 mu_1       0.8      0.911        0.910 0.0127            2.71
18 mu_1       0.9      0.848        0.640 0.000141          4.00
19 mu_0       0.1      1.67         0.112 0.0000000410     97.1 
20 mu_0       0.2      1.18         0.570 0.0000308        21.0 
21 mu_0       0.3      1.09         0.954 0.00126           3.94
22 mu_0       0.4      1.06         1.08  0.0153            2.39
23 mu_0       0.5      1.04         1.04  0.0926            1.99
24 mu_0       0.6      1.03         1.03  0.351             1.87
25 mu_0       0.7      1.00         1.01  0.125             1.92
26 mu_0       0.8      0.954        0.936 0.0149            2.19
27 mu_0       0.9      0.899        0.762 0.000298          3.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.45      0.000281  5.30e-15     94.1 
 2 mu         0.2      1.32      0.0209    3.47e-10     45.8 
 3 mu         0.3      1.12      0.150     2.28e- 7     13.8 
 4 mu         0.4      1.01      0.541     2.28e- 5      4.35
 5 mu         0.5      0.981     1.01      8.08e- 4      2.61
 6 mu         0.6      1.00      1.05      1.06e- 2      2.48
 7 mu         0.7      1.08      1.09      2.63e- 4      3.01
 8 mu         0.8      1.24      0.699     1.03e- 6      4.75
 9 mu         0.9      1.57      0.0667    5.01e-11     17.6 
10 mu_1       0.1      1.68      0.00178   5.30e-14     72.4 
11 mu_1       0.2      1.19      0.0679    1.74e- 9     17.7 
12 mu_1       0.3      1.03      0.339     7.60e- 7      6.43
13 mu_1       0.4      0.978     0.744     5.69e- 5      3.29
14 mu_1       0.5      0.980     1.04      1.62e- 3      2.75
15 mu_1       0.6      1.02      1.03      3.73e- 3      2.59
16 mu_1       0.7      1.12      1.08      7.92e- 5      3.22
17 mu_1       0.8      1.29      0.541     2.70e- 7      5.60
18 mu_1       0.9      1.60      0.0460    1.17e-11     18.4 
19 mu_0       0.1      1.43      0.000133  0            96.5 
20 mu_0       0.2      1.36      0.00768   0            52.8 
21 mu_0       0.3      1.15      0.0711    0            18.2 
22 mu_0       0.4      1.03      0.340     0             5.47
23 mu_0       0.5      0.983     0.763     0             2.65
24 mu_0       0.6      0.976     1.06      0             2.79
25 mu_0       0.7      0.999     1.02      0             2.74
26 mu_0       0.8      1.06      0.937     0             3.67
27 mu_0       0.9      1.29      0.195     0             9.77
[1] "Total run time was 73.332 seconds"
