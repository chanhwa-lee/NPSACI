
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1262"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  7  4  8  6  4  8  9 13  7  6  2  6  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04106 0.37716 0.61697 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
745 517 
[1] "treatment indicator table: "

  0   1 
470 792 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 80.087 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.554 0.360 
 2 mu         0.1   0.2 0.674 0.414 
 3 mu         0.1   0.3 0.799 0.480 
 4 mu         0.1   0.4 0.797 0.491 
 5 mu         0.1   0.5 0.845 0.515 
 6 mu         0.2   0.1 0.346 0.0982
 7 mu         0.2   0.2 0.419 0.106 
 8 mu         0.2   0.3 0.485 0.125 
 9 mu         0.2   0.4 0.493 0.126 
10 mu         0.2   0.5 0.535 0.130 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.40       0.0120  0.00000000474     92.1 
 2 mu         0.2      0.846      0.156   0.0000194         20.5 
 3 mu         0.3      0.816      0.541   0.00173            4.46
 4 mu         0.4      0.857      0.815   0.0297             3.24
 5 mu         0.5      0.904      0.873   0.155              3.23
 6 mu         0.6      0.954      0.950   0.282              2.17
 7 mu         0.7      1.01       0.989   0.305              1.72
 8 mu         0.8      1.06       0.976   0.0776             2.66
 9 mu         0.9      1.05       0.843   0.000970           4.09
10 mu_1       0.1      0.534      0.0504  0.0000000311       5.31
11 mu_1       0.2      0.703      0.348   0.0000643          4.88
12 mu_1       0.3      0.804      0.763   0.00385            3.00
13 mu_1       0.4      0.863      0.808   0.0502             3.56
14 mu_1       0.5      0.916      0.859   0.183              2.98
15 mu_1       0.6      0.966      0.950   0.337              1.87
16 mu_1       0.7      1.02       1.00    0.277              1.72
17 mu_1       0.8      1.06       1.00    0.0537             2.82
18 mu_1       0.9      1.05       0.790   0.000598           4.16
19 mu_0       0.1      1.50       0.00775 0.00000000181    102.  
20 mu_0       0.2      0.882      0.111   0.00000823        25.4 
21 mu_0       0.3      0.821      0.408   0.000822           5.92
22 mu_0       0.4      0.853      0.762   0.0161             3.03
23 mu_0       0.5      0.892      0.875   0.0835             3.48
24 mu_0       0.6      0.937      0.891   0.198              2.63
25 mu_0       0.7      0.983      1.02    0.362              1.83
26 mu_0       0.8      1.04       1.03    0.173              1.99
27 mu_0       0.9      1.12       1.02    0.00431            3.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.582    0.000130   2.89e-16     19.6 
 2 mu         0.2      1.21     0.0142     3.79e-11     33.4 
 3 mu         0.3      1.41     0.114      3.74e- 8     22.7 
 4 mu         0.4      1.28     0.529      4.97e- 6     17.7 
 5 mu         0.5      1.11     0.934      2.21e- 4      8.73
 6 mu         0.6      1.01     0.893      4.90e- 3      3.40
 7 mu         0.7      1.01     1.01       8.06e- 4      5.02
 8 mu         0.8      1.09     0.655      3.14e- 6      4.94
 9 mu         0.9      1.45     0.0880     1.54e-10     30.1 
10 mu_1       0.1      1.09     0.000745   2.89e-15     34.4 
11 mu_1       0.2      1.44     0.0409     1.90e-10     33.4 
12 mu_1       0.3      1.40     0.243      1.25e- 7     21.8 
13 mu_1       0.4      1.22     0.821      1.24e- 5     14.8 
14 mu_1       0.5      1.07     0.946      4.42e- 4      5.82
15 mu_1       0.6      1.01     0.921      8.17e- 3      4.04
16 mu_1       0.7      1.02     0.916      2.42e- 4      5.12
17 mu_1       0.8      1.11     0.501      8.26e- 7      5.72
18 mu_1       0.9      1.50     0.0572     3.59e-11     33.4 
19 mu_0       0.1      0.526    0.0000520  0            19.1 
20 mu_0       0.2      1.15     0.00612    0            33.4 
21 mu_0       0.3      1.41     0.0666     0            26.0 
22 mu_0       0.4      1.33     0.335      0            19.7 
23 mu_0       0.5      1.15     0.746      0            11.6 
24 mu_0       0.6      1.03     0.990      0             4.18
25 mu_0       0.7      0.996    0.861      0             4.78
26 mu_0       0.8      1.00     0.964      0             5.39
27 mu_0       0.9      1.04     0.226      0             7.24
[1] "Total run time was 85.126 seconds"
