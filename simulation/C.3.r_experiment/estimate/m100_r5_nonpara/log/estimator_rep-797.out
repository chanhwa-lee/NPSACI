
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1251"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  8  6  9  3  8  8  5  2  5  5  5  8  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03463 0.31438 0.58543 1.00000 4.89740 
[1] "event indicator table: "

  0   1 
710 541 
[1] "treatment indicator table: "

  0   1 
479 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.317 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.578 0.200
 2 mu         0.1   0.2 0.701 0.243
 3 mu         0.1   0.3 0.748 0.275
 4 mu         0.1   0.4 0.843 0.306
 5 mu         0.1   0.5 0.893 0.339
 6 mu         0.2   0.1 0.529 0.171
 7 mu         0.2   0.2 0.639 0.210
 8 mu         0.2   0.3 0.698 0.242
 9 mu         0.2   0.4 0.783 0.272
10 mu         0.2   0.5 0.838 0.304
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.42        0.0453 0.0000000185      49.5 
 2 mu         0.2      1.44        0.317  0.0000254         54.2 
 3 mu         0.3      1.15        0.678  0.00138           28.1 
 4 mu         0.4      0.981       0.845  0.0191             9.20
 5 mu         0.5      0.940       0.840  0.117              2.85
 6 mu         0.6      0.958       0.900  0.348              2.25
 7 mu         0.7      1.01        0.988  0.200              2.59
 8 mu         0.8      1.14        0.981  0.0123            11.9 
 9 mu         0.9      1.33        0.651  0.0000381         24.8 
10 mu_1       0.1      1.40        0.118  0.000000129       76.2 
11 mu_1       0.2      1.17        0.530  0.0000897         41.7 
12 mu_1       0.3      0.966       0.807  0.00330           14.4 
13 mu_1       0.4      0.918       0.831  0.0345             3.60
14 mu_1       0.5      0.934       0.865  0.172              2.77
15 mu_1       0.6      0.967       0.958  0.384              2.04
16 mu_1       0.7      1.02        0.996  0.140              3.24
17 mu_1       0.8      1.16        0.931  0.00766           13.4 
18 mu_1       0.9      1.34        0.599  0.0000211         24.8 
19 mu_0       0.1      1.42        0.0303 0.00000000622     46.6 
20 mu_0       0.2      1.51        0.255  0.00000929        57.3 
21 mu_0       0.3      1.24        0.576  0.000561          33.9 
22 mu_0       0.4      1.02        0.785  0.00875           12.9 
23 mu_0       0.5      0.946       0.824  0.0622             4.81
24 mu_0       0.6      0.944       0.855  0.254              2.58
25 mu_0       0.7      0.977       0.954  0.312              1.70
26 mu_0       0.8      1.05        1.02   0.0311             5.99
27 mu_0       0.9      1.28        0.856  0.000191          24.8 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     120.      0.0000476  6.37e-16   9333.  
 2 mu         0.2      57.1     0.00547    1.48e-10   4481.  
 3 mu         0.3      15.0     0.0750     1.92e- 7    911.  
 4 mu         0.4       3.92    0.369      2.92e- 5    101.  
 5 mu         0.5       1.65    0.746      1.35e- 3     21.4 
 6 mu         0.6       1.21    0.991      3.27e- 3      6.59
 7 mu         0.7       1.28    1.19       5.21e- 5      4.87
 8 mu         0.8       1.41    1.03       1.18e- 7     10.7 
 9 mu         0.9       1.21    0.259      2.57e-12     19.0 
10 mu_1       0.1      98.4     0.000300   0          9333.  
11 mu_1       0.2      26.5     0.0154     0          2240.  
12 mu_1       0.3       5.82    0.146      0           304.  
13 mu_1       0.4       2.03    0.498      0            32.5 
14 mu_1       0.5       1.27    0.880      0            16.7 
15 mu_1       0.6       1.17    0.977      0             4.27
16 mu_1       0.7       1.31    1.17       0             5.80
17 mu_1       0.8       1.41    0.908      0            11.2 
18 mu_1       0.9       1.19    0.185      0            21.1 
19 mu_0       0.1     122.      0.0000135  0          9333.  
20 mu_0       0.2      64.7     0.00197    0          5041.  
21 mu_0       0.3      19.0     0.0321     0          1172.  
22 mu_0       0.4       5.18    0.163      0           152.  
23 mu_0       0.5       2.04    0.427      0            26.2 
24 mu_0       0.6       1.27    0.815      0            10.1 
25 mu_0       0.7       1.21    1.07       0             4.36
26 mu_0       0.8       1.40    1.26       0             8.92
27 mu_0       0.9       1.45    0.611      0            13.0 
[1] "Total run time was 69.751 seconds"
