
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1264"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 11  3  5 10  3  2 10  5  7  6 10  6  8  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02686 0.38997 0.65761 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
774 490 
[1] "treatment indicator table: "

  0   1 
440 824 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.87 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.624 0.369
 2 mu         0.1   0.2 0.818 0.469
 3 mu         0.1   0.3 0.881 0.522
 4 mu         0.1   0.4 0.975 0.544
 5 mu         0.1   0.5 1.03  0.596
 6 mu         0.2   0.1 0.411 0.167
 7 mu         0.2   0.2 0.546 0.218
 8 mu         0.2   0.3 0.586 0.236
 9 mu         0.2   0.4 0.657 0.235
10 mu         0.2   0.5 0.703 0.252
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      2.04        0.0370 0.00000000782     96.4 
 2 mu         0.2      1.51        0.375  0.0000119         32.9 
 3 mu         0.3      1.26        0.772  0.000735           6.68
 4 mu         0.4      1.15        1.06   0.0119             3.97
 5 mu         0.5      1.06        0.990  0.0888             2.61
 6 mu         0.6      1.01        0.999  0.375              1.97
 7 mu         0.7      0.993       1.04   0.303              1.59
 8 mu         0.8      0.991       0.967  0.0896             2.10
 9 mu         0.9      0.962       0.693  0.00658            5.98
10 mu_1       0.1      1.67        0.116  0.0000000617      60.2 
11 mu_1       0.2      1.25        0.654  0.0000470         10.3 
12 mu_1       0.3      1.16        1.00   0.00195            5.20
13 mu_1       0.4      1.10        1.08   0.0238             3.30
14 mu_1       0.5      1.03        0.984  0.143              2.31
15 mu_1       0.6      0.998       1.02   0.363              1.79
16 mu_1       0.7      0.998       1.03   0.239              1.63
17 mu_1       0.8      0.996       0.974  0.0668             2.34
18 mu_1       0.9      0.962       0.658  0.00448            6.64
19 mu_0       0.1      2.09        0.0253 0.00000000183    100.  
20 mu_0       0.2      1.58        0.293  0.00000308        38.6 
21 mu_0       0.3      1.30        0.673  0.000213           8.93
22 mu_0       0.4      1.19        1.04   0.00393            4.41
23 mu_0       0.5      1.10        1.06   0.0343             2.91
24 mu_0       0.6      1.02        0.973  0.181              2.25
25 mu_0       0.7      0.982       0.991  0.341              1.57
26 mu_0       0.8      0.972       0.964  0.181              1.80
27 mu_0       0.9      0.967       0.876  0.0235             2.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.71    0.0000827  7.09e-16    212.  
 2 mu         0.2       2.62    0.00786    9.30e-11     91.8 
 3 mu         0.3       1.43    0.102      9.16e- 8     24.3 
 4 mu         0.4       1.11    0.365      1.22e- 5      8.09
 5 mu         0.5       1.09    0.966      5.41e- 4      4.88
 6 mu         0.6       1.11    1.09       1.20e- 2      4.18
 7 mu         0.7       1.10    1.19       2.93e- 4      3.77
 8 mu         0.8       1.09    0.841      1.15e- 6      5.03
 9 mu         0.9       1.26    0.145      7.88e-11     12.9 
10 mu_1       0.1       3.95    0.000617   7.09e-15    152.  
11 mu_1       0.2       1.66    0.0286     4.65e-10     32.8 
12 mu_1       0.3       1.12    0.216      3.05e- 7     11.8 
13 mu_1       0.4       1.05    0.580      3.05e- 5      7.39
14 mu_1       0.5       1.08    0.985      1.08e- 3      4.35
15 mu_1       0.6       1.10    1.14       1.57e- 3      3.92
16 mu_1       0.7       1.08    1.12       2.79e- 5      3.80
17 mu_1       0.8       1.08    0.665      9.57e- 8      5.30
18 mu_1       0.9       1.29    0.107      5.84e-12     14.3 
19 mu_0       0.1       4.80    0.0000296  0           219.  
20 mu_0       0.2       2.86    0.00368    0           107.  
21 mu_0       0.3       1.57    0.0428     0            32.2 
22 mu_0       0.4       1.15    0.219      0            11.2 
23 mu_0       0.5       1.09    0.725      0             6.15
24 mu_0       0.6       1.13    0.982      0             4.58
25 mu_0       0.7       1.13    1.10       0             3.69
26 mu_0       0.8       1.09    1.04       0             3.97
27 mu_0       0.9       1.03    0.371      0             6.59
[1] "Total run time was 58.251 seconds"
