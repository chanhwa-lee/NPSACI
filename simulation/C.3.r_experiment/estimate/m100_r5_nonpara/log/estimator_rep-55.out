
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1332"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  9  4  4  5  6  5  3 11  3  8 11  6  6 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03499 0.32391 0.58116 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
788 544 
[1] "treatment indicator table: "

  0   1 
517 815 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 702
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 54.515 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.455 0.214
 2 mu         0.1   0.2 0.504 0.254
 3 mu         0.1   0.3 0.573 0.285
 4 mu         0.1   0.4 0.645 0.291
 5 mu         0.1   0.5 0.667 0.302
 6 mu         0.2   0.1 0.421 0.139
 7 mu         0.2   0.2 0.478 0.158
 8 mu         0.2   0.3 0.563 0.177
 9 mu         0.2   0.4 0.612 0.181
10 mu         0.2   0.5 0.639 0.187
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.24        0.0185 0.000000103      48.1 
 2 mu         0.2      1.20        0.257  0.000176         29.4 
 3 mu         0.3      1.07        0.664  0.00866           8.08
 4 mu         0.4      1.04        0.936  0.0929            3.84
 5 mu         0.5      1.01        0.984  0.267             2.31
 6 mu         0.6      0.984       1.01   0.267             1.74
 7 mu         0.7      0.964       0.925  0.260             1.70
 8 mu         0.8      0.911       0.861  0.0588            2.67
 9 mu         0.9      0.861       0.508  0.00204          10.1 
10 mu_1       0.1      1.42        0.0722 0.000000620      53.5 
11 mu_1       0.2      1.10        0.440  0.000534         16.5 
12 mu_1       0.3      1.03        0.853  0.0177            5.73
13 mu_1       0.4      1.02        0.956  0.145             2.93
14 mu_1       0.5      0.999       0.951  0.239             2.20
15 mu_1       0.6      0.984       0.973  0.277             1.68
16 mu_1       0.7      0.958       0.936  0.216             1.81
17 mu_1       0.8      0.901       0.833  0.0419            3.08
18 mu_1       0.9      0.856       0.439  0.00133          10.6 
19 mu_0       0.1      1.22        0.0116 0.0000000454     47.5 
20 mu_0       0.2      1.23        0.188  0.0000866        32.7 
21 mu_0       0.3      1.09        0.533  0.00479          10.2 
22 mu_0       0.4      1.05        0.911  0.0371            4.45
23 mu_0       0.5      1.01        0.962  0.147             2.45
24 mu_0       0.6      0.986       0.969  0.253             1.96
25 mu_0       0.7      0.977       0.942  0.294             1.61
26 mu_0       0.8      0.948       0.922  0.126             1.95
27 mu_0       0.9      0.907       0.790  0.00848           5.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.933    0.0000572  5.74e-16     52.7 
 2 mu         0.2      1.14     0.00643    1.34e-10     41.3 
 3 mu         0.3      1.16     0.0893     1.73e- 7     42.1 
 4 mu         0.4      1.11     0.424      2.63e- 5     20.9 
 5 mu         0.5      1.08     0.918      1.22e- 3      5.73
 6 mu         0.6      1.11     1.12       1.88e- 2      3.36
 7 mu         0.7      1.16     1.12       6.94e- 4      5.82
 8 mu         0.8      1.37     0.604      6.11e- 6     22.1 
 9 mu         0.9      2.26     0.0671     1.68e- 9     71.8 
10 mu_1       0.1      1.17     0.000323   5.44e-15     40.5 
11 mu_1       0.2      1.19     0.0229     6.34e-10     51.6 
12 mu_1       0.3      1.15     0.179      5.46e- 7     35.1 
13 mu_1       0.4      1.11     0.618      6.23e- 5     13.1 
14 mu_1       0.5      1.12     1.07       2.31e- 3      3.63
15 mu_1       0.6      1.15     1.09       2.41e- 3      3.50
16 mu_1       0.7      1.21     1.12       7.62e- 5      8.31
17 mu_1       0.8      1.45     0.515      5.87e- 7     27.6 
18 mu_1       0.9      2.40     0.0488     1.43e-10     79.8 
19 mu_0       0.1      0.907    0.0000154  0            54.0 
20 mu_0       0.2      1.13     0.00229    0            38.7 
21 mu_0       0.3      1.16     0.0471     0            45.1 
22 mu_0       0.4      1.10     0.211      0            26.2 
23 mu_0       0.5      1.05     0.676      0             8.60
24 mu_0       0.6      1.05     1.06       0             3.15
25 mu_0       0.7      1.05     0.964      0             3.49
26 mu_0       0.8      1.03     0.793      0             4.90
27 mu_0       0.9      1.00     0.111      0            10.5 
[1] "Total run time was 58.848 seconds"
