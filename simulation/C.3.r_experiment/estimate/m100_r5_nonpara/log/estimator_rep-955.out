
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1275"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4  8  2 10  5  6  2 15  5  4  5  6  3  7 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03319 0.33462 0.61011 0.99696 5.00000 
[1] "event indicator table: "

  0   1 
714 561 
[1] "treatment indicator table: "

  0   1 
485 790 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 691
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.388 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.339 0.0901
 2 mu         0.1   0.2 0.380 0.0991
 3 mu         0.1   0.3 0.507 0.143 
 4 mu         0.1   0.4 0.538 0.153 
 5 mu         0.1   0.5 0.522 0.143 
 6 mu         0.2   0.1 0.406 0.0961
 7 mu         0.2   0.2 0.492 0.126 
 8 mu         0.2   0.3 0.601 0.150 
 9 mu         0.2   0.4 0.653 0.164 
10 mu         0.2   0.5 0.667 0.169 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.602       0.0528 0.0000000960     10.8 
 2 mu         0.2      0.957       0.370  0.000149         29.0 
 3 mu         0.3      1.18        0.787  0.00529          29.7 
 4 mu         0.4      1.12        0.877  0.0538           12.4 
 5 mu         0.5      1.04        0.977  0.260             2.69
 6 mu         0.6      1.02        1.01   0.375             1.94
 7 mu         0.7      0.979       0.946  0.246             1.94
 8 mu         0.8      0.921       0.904  0.0584            2.18
 9 mu         0.9      1.03        0.569  0.00104          16.6 
10 mu_1       0.1      0.698       0.175  0.000000577      13.3 
11 mu_1       0.2      1.17        0.672  0.000488         36.3 
12 mu_1       0.3      1.24        0.885  0.0122           24.8 
13 mu_1       0.4      1.11        0.983  0.0947            7.77
14 mu_1       0.5      1.03        0.991  0.208             2.31
15 mu_1       0.6      1.00        0.990  0.263             1.94
16 mu_1       0.7      0.967       0.930  0.272             1.88
17 mu_1       0.8      0.920       0.875  0.0390            2.65
18 mu_1       0.9      1.05        0.524  0.000637         18.5 
19 mu_0       0.1      0.591       0.0353 0.0000000425     11.9 
20 mu_0       0.2      0.904       0.275  0.0000589        27.2 
21 mu_0       0.3      1.16        0.655  0.00231          31.9 
22 mu_0       0.4      1.13        0.852  0.0265           15.5 
23 mu_0       0.5      1.06        0.991  0.149             3.73
24 mu_0       0.6      1.03        1.02   0.248             2.14
25 mu_0       0.7      1.01        0.973  0.186             2.10
26 mu_0       0.8      0.924       0.877  0.131             1.90
27 mu_0       0.9      0.794       0.824  0.00466           2.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     12.9      0.000227   4.24e-17    841.  
 2 mu         0.2      9.47     0.0132     1.98e-11    454.  
 3 mu         0.3      3.87     0.104      3.83e- 8    109.  
 4 mu         0.4      1.68     0.365      6.96e- 6     35.5 
 5 mu         0.5      1.10     0.786      3.09e- 4      7.85
 6 mu         0.6      1.03     0.975      6.86e- 3      4.05
 7 mu         0.7      1.15     1.10       3.19e- 4      3.44
 8 mu         0.8      1.34     0.890      4.23e- 7     17.0 
 9 mu         0.9      1.36     0.222      4.08e-12     49.8 
10 mu_1       0.1     15.4      0.00158    4.03e-16    885.  
11 mu_1       0.2      6.38     0.0456     9.39e-11    239.  
12 mu_1       0.3      2.34     0.226      1.21e- 7     55.9 
13 mu_1       0.4      1.28     0.620      1.74e- 5     13.7 
14 mu_1       0.5      1.05     0.922      6.18e- 4      5.89
15 mu_1       0.6      1.06     1.01       5.47e- 3      4.05
16 mu_1       0.7      1.18     1.22       4.80e- 5      4.61
17 mu_1       0.8      1.35     0.767      5.56e- 8     19.9 
18 mu_1       0.9      1.34     0.165      4.78e-13     51.8 
19 mu_0       0.1     12.6      0.0000849  0           836.  
20 mu_0       0.2     10.2      0.00486    0           508.  
21 mu_0       0.3      4.52     0.0453     0           135.  
22 mu_0       0.4      1.95     0.196      0            50.1 
23 mu_0       0.5      1.16     0.589      0            12.6 
24 mu_0       0.6      0.994    0.878      0             4.05
25 mu_0       0.7      1.08     1.08       0             3.44
26 mu_0       0.8      1.33     1.22       0             5.88
27 mu_0       0.9      1.57     0.574      0            31.1 
[1] "Total run time was 72.05 seconds"
