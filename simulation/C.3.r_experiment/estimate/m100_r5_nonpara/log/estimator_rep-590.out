
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1228"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  7  7  7  6  9  7  7  5  3  3  9  6  3  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0438  0.3486  0.5991  1.0000  5.6752 
[1] "event indicator table: "

  0   1 
708 520 
[1] "treatment indicator table: "

  0   1 
477 751 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.259 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.442 0.119 
 2 mu         0.1   0.2 0.480 0.147 
 3 mu         0.1   0.3 0.489 0.155 
 4 mu         0.1   0.4 0.540 0.177 
 5 mu         0.1   0.5 0.576 0.195 
 6 mu         0.2   0.1 0.342 0.0697
 7 mu         0.2   0.2 0.393 0.0831
 8 mu         0.2   0.3 0.416 0.0882
 9 mu         0.2   0.4 0.468 0.100 
10 mu         0.2   0.5 0.522 0.117 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.01        0.0209 0.00000000638     15.6 
 2 mu         0.2      0.946       0.223  0.0000246          6.57
 3 mu         0.3      0.940       0.522  0.00207            4.79
 4 mu         0.4      0.968       0.792  0.0342             3.64
 5 mu         0.5      0.987       0.985  0.162              2.21
 6 mu         0.6      0.996       1.00   0.268              1.68
 7 mu         0.7      0.973       0.964  0.0851             1.93
 8 mu         0.8      0.876       0.759  0.00842            2.47
 9 mu         0.9      0.736       0.369  0.0000546          4.68
10 mu_1       0.1      1.02        0.0734 0.0000000416      11.9 
11 mu_1       0.2      0.935       0.417  0.0000807          5.11
12 mu_1       0.3      0.952       0.713  0.00458            4.75
13 mu_1       0.4      0.977       0.896  0.0573             2.89
14 mu_1       0.5      0.991       1.00   0.245              2.17
15 mu_1       0.6      0.995       0.996  0.225              1.80
16 mu_1       0.7      0.959       0.942  0.0647             2.05
17 mu_1       0.8      0.854       0.708  0.00570            2.75
18 mu_1       0.9      0.722       0.309  0.0000332          5.02
19 mu_0       0.1      1.01        0.0131 0.00000000246     17.3 
20 mu_0       0.2      0.949       0.149  0.0000106          7.10
21 mu_0       0.3      0.934       0.423  0.00100            4.80
22 mu_0       0.4      0.962       0.759  0.0154             4.13
23 mu_0       0.5      0.983       0.935  0.0798             2.30
24 mu_0       0.6      0.998       1.02   0.265              1.90
25 mu_0       0.7      1.01        1.01   0.133              1.88
26 mu_0       0.8      0.962       0.919  0.0193             2.39
27 mu_0       0.9      0.862       0.762  0.000248           3.11
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.325    0.000149   8.88e-17      6.71
 2 mu         0.2      0.962    0.0139     4.14e-11     15.0 
 3 mu         0.3      1.46     0.0983     8.03e- 8     22.9 
 4 mu         0.4      1.53     0.357      1.63e- 5     18.1 
 5 mu         0.5      1.32     0.822      9.41e- 4      8.54
 6 mu         0.6      1.13     1.00       2.41e- 2      5.16
 7 mu         0.7      1.25     1.13       7.54e- 3      6.23
 8 mu         0.8      2.38     0.645      5.75e- 5     78.8 
 9 mu         0.9      9.54     0.0730     7.12e- 9    739.  
10 mu_1       0.1      0.780    0.00117    8.44e-16      9.69
11 mu_1       0.2      1.38     0.0436     1.97e-10     23.1 
12 mu_1       0.3      1.59     0.234      2.54e- 7     23.5 
13 mu_1       0.4      1.46     0.624      3.87e- 5     13.9 
14 mu_1       0.5      1.23     0.901      1.79e- 3      5.91
15 mu_1       0.6      1.13     1.11       3.81e- 2      4.63
16 mu_1       0.7      1.36     1.12       3.23e- 3      8.90
17 mu_1       0.8      2.69     0.531      2.16e- 5     98.5 
18 mu_1       0.9     10.4      0.0415     2.37e- 9    821.  
19 mu_0       0.1      0.274    0.0000569  0             6.39
20 mu_0       0.2      0.857    0.00561    0            13.0 
21 mu_0       0.3      1.40     0.0422     0            22.6 
22 mu_0       0.4      1.58     0.172      0            20.8 
23 mu_0       0.5      1.40     0.562      0            11.8 
24 mu_0       0.6      1.13     0.798      0             5.95
25 mu_0       0.7      0.991    0.905      0             4.22
26 mu_0       0.8      1.14     0.947      0             7.12
27 mu_0       0.9      1.71     0.163      0            23.4 
[1] "Total run time was 60.207 seconds"
