
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1208"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  7  9  4  9  5  5  8  7 12  5  4  2  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03719 0.37378 0.61458 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
717 491 
[1] "treatment indicator table: "

  0   1 
445 763 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.185 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.303 0.227
 2 mu         0.1   0.2 0.258 0.200
 3 mu         0.1   0.3 0.218 0.171
 4 mu         0.1   0.4 0.213 0.159
 5 mu         0.1   0.5 0.192 0.146
 6 mu         0.2   0.1 0.364 0.199
 7 mu         0.2   0.2 0.350 0.175
 8 mu         0.2   0.3 0.346 0.151
 9 mu         0.2   0.4 0.359 0.142
10 mu         0.2   0.5 0.350 0.132
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.190      0.00736 0.00000000639      3.64
 2 mu         0.2      0.505      0.126   0.0000230          6.45
 3 mu         0.3      0.800      0.480   0.00176            6.95
 4 mu         0.4      0.972      0.785   0.0257             4.86
 5 mu         0.5      1.02       0.967   0.139              2.48
 6 mu         0.6      1.01       0.977   0.395              1.57
 7 mu         0.7      0.961      0.957   0.428              1.58
 8 mu         0.8      0.873      0.784   0.0724             3.65
 9 mu         0.9      0.754      0.293   0.00150            7.85
10 mu_1       0.1      0.446      0.0311  0.0000000415       6.83
11 mu_1       0.2      0.747      0.283   0.0000747          7.42
12 mu_1       0.3      0.946      0.734   0.00383            6.66
13 mu_1       0.4      1.02       0.891   0.0420             3.63
14 mu_1       0.5      1.02       0.976   0.185              1.87
15 mu_1       0.6      1.00       0.986   0.460              1.50
16 mu_1       0.7      0.947      0.929   0.330              1.85
17 mu_1       0.8      0.860      0.721   0.0499             4.14
18 mu_1       0.9      0.747      0.250   0.000929           8.07
19 mu_0       0.1      0.162      0.00450 0.00000000248      3.28
20 mu_0       0.2      0.445      0.0891  0.0000100          6.51
21 mu_0       0.3      0.738      0.362   0.000880           7.07
22 mu_0       0.4      0.938      0.711   0.0148             5.69
23 mu_0       0.5      1.01       0.911   0.0934             3.08
24 mu_0       0.6      1.02       0.977   0.297              1.96
25 mu_0       0.7      0.994      1.01    0.590              1.65
26 mu_0       0.8      0.926      0.916   0.162              1.97
27 mu_0       0.9      0.812      0.597   0.00661            5.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    923.       0.0000864  2.83e-15  90247.  
 2 mu         0.2    160.       0.00625    6.60e-10  13709.  
 3 mu         0.3     25.4      0.0746     8.54e- 7   1619.  
 4 mu         0.4      4.12     0.305      1.30e- 4    137.  
 5 mu         0.5      1.30     0.652      6.01e- 3     12.9 
 6 mu         0.6      0.991    0.871      1.28e- 1      3.65
 7 mu         0.7      1.06     0.975      2.10e- 3      4.70
 8 mu         0.8      1.35     0.632      3.19e- 6     11.3 
 9 mu         0.9      1.75     0.0995     4.87e-11     47.3 
10 mu_1       0.1     31.4      0.000559   0          2533.  
11 mu_1       0.2     17.5      0.0241     0          1368.  
12 mu_1       0.3      5.26     0.145      0           318.  
13 mu_1       0.4      1.71     0.459      0            41.1 
14 mu_1       0.5      1.05     0.815      0             5.54
15 mu_1       0.6      0.984    0.991      0             3.65
16 mu_1       0.7      1.10     0.975      0             6.04
17 mu_1       0.8      1.41     0.499      0            13.4 
18 mu_1       0.9      1.78     0.0736     0            49.8 
19 mu_0       0.1   1023.       0.0000317  0        100274.  
20 mu_0       0.2    195.       0.00260    0         17136.  
21 mu_0       0.3     34.0      0.0336     0          2312.  
22 mu_0       0.4      5.73     0.165      0           229.  
23 mu_0       0.5      1.54     0.460      0            20.6 
24 mu_0       0.6      1.00     0.791      0             6.22
25 mu_0       0.7      0.955    0.921      0             3.47
26 mu_0       0.8      1.11     0.924      0             7.76
27 mu_0       0.9      1.53     0.256      0            24.9 
[1] "Total run time was 55.508 seconds"
