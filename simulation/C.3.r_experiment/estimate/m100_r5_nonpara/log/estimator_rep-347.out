
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1213"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 10  6  5  7  9  6  7  7  7  7  2  7  5  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03475 0.36605 0.62141 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
705 508 
[1] "treatment indicator table: "

  0   1 
441 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.051 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.281 0.274
 2 mu         0.1   0.2 0.544 0.360
 3 mu         0.1   0.3 0.633 0.427
 4 mu         0.1   0.4 0.768 0.430
 5 mu         0.1   0.5 0.790 0.457
 6 mu         0.2   0.1 0.250 0.150
 7 mu         0.2   0.2 0.436 0.190
 8 mu         0.2   0.3 0.487 0.233
 9 mu         0.2   0.4 0.631 0.204
10 mu         0.2   0.5 0.653 0.219
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.19        0.0591 0.00000394     56.9 
 2 mu         0.2      1.08        0.458  0.00166        25.5 
 3 mu         0.3      1.02        0.848  0.0292         10.6 
 4 mu         0.4      1.02        0.939  0.162           4.08
 5 mu         0.5      1.04        0.984  0.404           1.92
 6 mu         0.6      1.03        1.01   0.404           1.72
 7 mu         0.7      0.987       0.962  0.274           2.05
 8 mu         0.8      0.941       0.868  0.0175          3.95
 9 mu         0.9      0.913       0.524  0.0000548      11.5 
10 mu_1       0.1      0.968       0.242  0.0000232       7.19
11 mu_1       0.2      0.941       0.767  0.00477         3.63
12 mu_1       0.3      0.963       0.931  0.0569          2.51
13 mu_1       0.4      1.00        0.946  0.243           2.41
14 mu_1       0.5      1.03        1.01   0.312           1.87
15 mu_1       0.6      1.02        1.00   0.332           1.85
16 mu_1       0.7      0.981       0.937  0.194           2.06
17 mu_1       0.8      0.939       0.849  0.0109          4.53
18 mu_1       0.9      0.913       0.429  0.0000304      12.0 
19 mu_0       0.1      1.22        0.0400 0.00000180     63.1 
20 mu_0       0.2      1.12        0.361  0.000879       31.6 
21 mu_0       0.3      1.05        0.902  0.0173         14.7 
22 mu_0       0.4      1.04        0.943  0.108           6.35
23 mu_0       0.5      1.05        0.961  0.345           2.57
24 mu_0       0.6      1.04        1.03   0.313           1.77
25 mu_0       0.7      1.00        1.01   0.378           2.02
26 mu_0       0.8      0.949       0.933  0.0439          2.10
27 mu_0       0.9      0.913       0.693  0.000274        7.01
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      8.79     0.0000417  8.46e-15    826.  
 2 mu         0.2      7.26     0.00518    1.11e- 9    635.  
 3 mu         0.3      3.26     0.0689     1.09e- 6    220.  
 4 mu         0.4      1.49     0.281      1.12e- 4     45.3 
 5 mu         0.5      1.03     0.703      2.56e- 3      5.51
 6 mu         0.6      0.990    0.949      3.28e- 2      2.31
 7 mu         0.7      1.13     1.22       5.76e- 3      2.84
 8 mu         0.8      1.46     1.00       3.78e- 5     19.1 
 9 mu         0.9      2.77     0.182      2.92e- 9    141.  
10 mu_1       0.1     11.3      0.000318   8.46e-14   1032.  
11 mu_1       0.2      5.07     0.0180     5.55e- 9    397.  
12 mu_1       0.3      1.97     0.147      3.64e- 6     91.8 
13 mu_1       0.4      1.10     0.472      2.81e- 4     14.1 
14 mu_1       0.5      0.938    0.855      5.11e- 3      2.55
15 mu_1       0.6      0.990    0.968      1.10e- 2      2.36
16 mu_1       0.7      1.17     1.26       8.22e- 4      3.79
17 mu_1       0.8      1.53     0.847      5.91e- 6     23.8 
18 mu_1       0.9      2.94     0.132      4.06e-10    157.  
19 mu_0       0.1      8.51     0.0000163  0           803.  
20 mu_0       0.2      7.80     0.00178    0           694.  
21 mu_0       0.3      3.82     0.0304     0           275.  
22 mu_0       0.4      1.74     0.152      0            66.0 
23 mu_0       0.5      1.12     0.521      0             9.64
24 mu_0       0.6      0.989    0.917      0             2.65
25 mu_0       0.7      1.03     0.978      0             2.61
26 mu_0       0.8      1.17     1.10       0             4.10
27 mu_0       0.9      1.24     0.279      0            21.3 
[1] "Total run time was 49.359 seconds"
