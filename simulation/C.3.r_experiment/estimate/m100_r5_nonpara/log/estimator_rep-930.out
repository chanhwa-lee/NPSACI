
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1178"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8 10  8 11  8  4  9  1  6  5  5  6  1  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04229 0.34279 0.62360 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
687 491 
[1] "treatment indicator table: "

  0   1 
420 758 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 39.691 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.283 0.102 
 2 mu         0.1   0.2 0.357 0.111 
 3 mu         0.1   0.3 0.378 0.117 
 4 mu         0.1   0.4 0.449 0.125 
 5 mu         0.1   0.5 0.499 0.138 
 6 mu         0.2   0.1 0.281 0.0680
 7 mu         0.2   0.2 0.360 0.0838
 8 mu         0.2   0.3 0.387 0.0963
 9 mu         0.2   0.4 0.464 0.106 
10 mu         0.2   0.5 0.524 0.122 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.544      0.0143  0.00000000663      9.07
 2 mu         0.2      0.702      0.172   0.0000106          8.87
 3 mu         0.3      0.761      0.565   0.000674           5.06
 4 mu         0.4      0.856      0.819   0.0111             2.58
 5 mu         0.5      0.944      0.933   0.0829             3.04
 6 mu         0.6      0.993      0.980   0.317              2.11
 7 mu         0.7      1.04       0.983   0.313              2.31
 8 mu         0.8      1.10       1.04    0.0476             5.94
 9 mu         0.9      1.09       0.598   0.000696          10.7 
10 mu_1       0.1      0.630      0.0564  0.0000000433      11.5 
11 mu_1       0.2      0.732      0.378   0.0000400          8.03
12 mu_1       0.3      0.806      0.766   0.00172            3.63
13 mu_1       0.4      0.909      0.907   0.0215             2.97
14 mu_1       0.5      0.973      0.986   0.130              2.95
15 mu_1       0.6      1.01       0.999   0.332              1.82
16 mu_1       0.7      1.06       1.02    0.252              2.87
17 mu_1       0.8      1.12       0.974   0.0349             6.77
18 mu_1       0.9      1.09       0.522   0.000462          10.9 
19 mu_0       0.1      0.534      0.00922 0.00000000188     10.1 
20 mu_0       0.2      0.694      0.126   0.00000321         9.32
21 mu_0       0.3      0.741      0.426   0.000225           5.67
22 mu_0       0.4      0.821      0.752   0.00414            2.44
23 mu_0       0.5      0.915      0.861   0.0357             3.12
24 mu_0       0.6      0.969      0.981   0.146              2.62
25 mu_0       0.7      1.00       1.01    0.270              1.61
26 mu_0       0.8      1.05       1.00    0.0980             2.61
27 mu_0       0.9      1.10       0.895   0.00280            8.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.28    0.0000477  3.11e-13     67.7 
 2 mu         0.2       2.02    0.00604    9.07e- 9     82.3 
 3 mu         0.3       1.73    0.0676     3.48e- 6     60.5 
 4 mu         0.4       1.46    0.344      2.23e- 4     36.6 
 5 mu         0.5       1.33    0.814      5.28e- 3     16.0 
 6 mu         0.6       1.25    1.07       3.39e- 2      4.82
 7 mu         0.7       1.25    1.12       5.40e- 4      6.30
 8 mu         0.8       1.36    0.760      1.23e- 6     15.8 
 9 mu         0.9       1.49    0.129      2.66e-11     19.4 
10 mu_1       0.1       2.47    0.000329   2.92e-12    107.  
11 mu_1       0.2       2.19    0.0189     4.25e- 8     76.1 
12 mu_1       0.3       1.57    0.154      1.09e- 5     44.9 
13 mu_1       0.4       1.32    0.552      5.22e- 4     20.3 
14 mu_1       0.5       1.25    0.997      9.90e- 3      7.44
15 mu_1       0.6       1.22    1.13       8.92e- 3      3.73
16 mu_1       0.7       1.26    1.07       1.22e- 4      7.58
17 mu_1       0.8       1.38    0.585      2.42e- 7     16.7 
18 mu_1       0.9       1.50    0.0852     4.67e-12     21.5 
19 mu_0       0.1       1.15    0.0000196  0            63.4 
20 mu_0       0.2       1.98    0.00217    0            86.6 
21 mu_0       0.3       1.80    0.0305     0            67.3 
22 mu_0       0.4       1.54    0.209      0            47.4 
23 mu_0       0.5       1.40    0.673      0            24.8 
24 mu_0       0.6       1.29    1.07       0             9.37
25 mu_0       0.7       1.24    1.26       0             3.38
26 mu_0       0.8       1.29    0.998      0            12.5 
27 mu_0       0.9       1.37    0.349      0            20.6 
[1] "Total run time was 42.834 seconds"
