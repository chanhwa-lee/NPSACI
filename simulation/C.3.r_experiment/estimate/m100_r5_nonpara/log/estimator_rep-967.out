
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1264"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  6  4 11  7  5  5  3  8  7  5  5  7  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05017 0.34040 0.60170 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
715 549 
[1] "treatment indicator table: "

  0   1 
458 806 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.28 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.262 0.0941
 2 mu         0.1   0.2 0.406 0.122 
 3 mu         0.1   0.3 0.437 0.113 
 4 mu         0.1   0.4 0.493 0.115 
 5 mu         0.1   0.5 0.505 0.116 
 6 mu         0.2   0.1 0.313 0.0579
 7 mu         0.2   0.2 0.464 0.0710
 8 mu         0.2   0.3 0.534 0.0732
 9 mu         0.2   0.4 0.624 0.0863
10 mu         0.2   0.5 0.654 0.0884
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.587       0.0786  1.86e-10      8.98
 2 mu         0.2      0.952       0.431   1.71e- 6      7.43
 3 mu         0.3      1.09        0.916   2.61e- 4      6.10
 4 mu         0.4      1.06        1.03    7.12e- 3      3.64
 5 mu         0.5      1.00        0.966   7.18e- 2      2.45
 6 mu         0.6      0.986       0.949   1.77e- 1      1.88
 7 mu         0.7      0.997       0.979   2.75e- 1      1.78
 8 mu         0.8      1.00        0.989   1.13e- 1      2.50
 9 mu         0.9      0.986       0.953   2.52e- 3      3.44
10 mu_1       0.1      0.893       0.296   1.37e- 9     11.2 
11 mu_1       0.2      1.10        0.773   6.30e- 6      7.66
12 mu_1       0.3      1.10        1.00    6.45e- 4      4.60
13 mu_1       0.4      1.03        1.03    1.33e- 2      3.15
14 mu_1       0.5      0.989       0.932   1.08e- 1      2.29
15 mu_1       0.6      0.989       0.934   1.73e- 1      1.80
16 mu_1       0.7      1.00        0.974   3.24e- 1      1.81
17 mu_1       0.8      1.00        0.994   8.31e- 2      2.65
18 mu_1       0.9      0.985       0.914   1.68e- 3      3.67
19 mu_0       0.1      0.554       0.0542  5.44e-11      8.73
20 mu_0       0.2      0.915       0.352   5.59e- 7      7.55
21 mu_0       0.3      1.09        0.844   9.69e- 5      6.81
22 mu_0       0.4      1.07        1.04    3.02e- 3      4.53
23 mu_0       0.5      1.01        1.01    3.51e- 2      2.60
24 mu_0       0.6      0.982       0.961   1.81e- 1      2.06
25 mu_0       0.7      0.989       0.941   1.60e- 1      1.80
26 mu_0       0.8      1.01        0.992   2.34e- 1      2.01
27 mu_0       0.9      0.994       0.887   1.01e- 2      3.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.613    0.000138   2.40e-16     16.6 
 2 mu         0.2      1.13     0.00789    5.60e-11     18.0 
 3 mu         0.3      1.26     0.0854     7.25e- 8     13.7 
 4 mu         0.4      1.22     0.299      1.10e- 5      8.67
 5 mu         0.5      1.10     0.770      5.10e- 4      5.13
 6 mu         0.6      0.997    0.816      3.70e- 3      6.12
 7 mu         0.7      0.987    0.823      4.42e- 5      3.90
 8 mu         0.8      1.11     0.916      6.70e- 8      4.45
 9 mu         0.9      1.23     0.299      7.27e-13      9.47
10 mu_1       0.1      1.20     0.000978   2.28e-15     25.0 
11 mu_1       0.2      1.36     0.0314     2.65e-10     17.7 
12 mu_1       0.3      1.28     0.199      2.29e- 7      9.81
13 mu_1       0.4      1.17     0.488      2.61e- 5      7.74
14 mu_1       0.5      1.05     0.730      9.66e- 4      4.91
15 mu_1       0.6      0.977    0.904      9.26e- 4      6.12
16 mu_1       0.7      1.00     0.872      9.47e- 6      4.05
17 mu_1       0.8      1.13     0.813      1.26e- 8      4.71
18 mu_1       0.9      1.22     0.225      1.21e-13      9.97
19 mu_0       0.1      0.548    0.0000376  0            15.7 
20 mu_0       0.2      1.08     0.00225    0            19.1 
21 mu_0       0.3      1.25     0.0277     0            15.6 
22 mu_0       0.4      1.24     0.133      0             9.44
23 mu_0       0.5      1.15     0.523      0             6.59
24 mu_0       0.6      1.03     0.708      0             6.12
25 mu_0       0.7      0.951    0.793      0             5.20
26 mu_0       0.8      1.02     0.954      0             4.32
27 mu_0       0.9      1.25     0.327      0             6.25
[1] "Total run time was 62.663 seconds"
