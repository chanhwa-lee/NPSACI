
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1231"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  6  8  9 10  3  3  6  6  7  8  7  7  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04377 0.39520 0.64030 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
736 495 
[1] "treatment indicator table: "

  0   1 
446 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 89.283 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.354 0.118 
 2 mu         0.1   0.2 0.448 0.161 
 3 mu         0.1   0.3 0.543 0.151 
 4 mu         0.1   0.4 0.587 0.170 
 5 mu         0.1   0.5 0.652 0.186 
 6 mu         0.2   0.1 0.362 0.0818
 7 mu         0.2   0.2 0.459 0.117 
 8 mu         0.2   0.3 0.543 0.119 
 9 mu         0.2   0.4 0.579 0.124 
10 mu         0.2   0.5 0.639 0.125 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.04        0.0351 0.00000170      14.6 
 2 mu         0.2      1.03        0.328  0.00105          6.30
 3 mu         0.3      1.09        0.804  0.0325           4.70
 4 mu         0.4      1.14        0.970  0.146            4.01
 5 mu         0.5      1.13        1.04   0.302            3.95
 6 mu         0.6      1.06        1.02   0.217            2.35
 7 mu         0.7      0.968       0.944  0.0840           3.02
 8 mu         0.8      0.933       0.940  0.0609           2.61
 9 mu         0.9      1.01        0.871  0.00152          3.41
10 mu_1       0.1      0.924       0.129  0.0000103       10.5 
11 mu_1       0.2      1.00        0.560  0.00324          5.25
12 mu_1       0.3      1.12        0.914  0.0347           4.21
13 mu_1       0.4      1.16        1.01   0.125            4.01
14 mu_1       0.5      1.12        1.03   0.319            3.72
15 mu_1       0.6      1.03        0.967  0.143            2.52
16 mu_1       0.7      0.956       0.954  0.0945           3.06
17 mu_1       0.8      0.938       0.904  0.0445           2.69
18 mu_1       0.9      1.02        0.880  0.000991         3.75
19 mu_0       0.1      1.05        0.0253 0.000000744     15.2 
20 mu_0       0.2      1.04        0.268  0.000502         7.52
21 mu_0       0.3      1.07        0.739  0.0173           4.91
22 mu_0       0.4      1.13        0.961  0.0763           4.16
23 mu_0       0.5      1.14        0.972  0.210            4.17
24 mu_0       0.6      1.09        1.06   0.276            2.91
25 mu_0       0.7      0.998       0.967  0.0594           2.92
26 mu_0       0.8      0.916       0.885  0.127            3.07
27 mu_0       0.9      0.907       0.803  0.00625          3.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.727    0.000103   9.60e-17     26.8 
 2 mu         0.2      1.47     0.0141     2.52e-11     46.7 
 3 mu         0.3      1.48     0.116      3.72e- 8     36.5 
 4 mu         0.4      1.31     0.420      6.60e- 6     13.3 
 5 mu         0.5      1.22     0.904      3.66e- 4      7.36
 6 mu         0.6      1.15     0.998      6.05e- 3      6.37
 7 mu         0.7      1.11     0.972      2.47e- 3      4.18
 8 mu         0.8      1.18     0.765      2.49e- 5      6.22
 9 mu         0.9      1.40     0.211      4.35e- 9     14.4 
10 mu_1       0.1      1.40     0.000705   9.60e-16     38.3 
11 mu_1       0.2      1.70     0.0384     1.26e-10     51.9 
12 mu_1       0.3      1.44     0.281      1.24e- 7     27.0 
13 mu_1       0.4      1.28     0.693      1.65e- 5      9.33
14 mu_1       0.5      1.21     0.991      7.33e- 4      7.80
15 mu_1       0.6      1.13     1.02       1.01e- 2      5.62
16 mu_1       0.7      1.11     0.920      5.04e- 4      4.31
17 mu_1       0.8      1.20     0.632      4.44e- 6      6.55
18 mu_1       0.9      1.42     0.154      1.08e- 9     16.0 
19 mu_0       0.1      0.652    0.0000422  0            25.5 
20 mu_0       0.2      1.41     0.00652    0            45.4 
21 mu_0       0.3      1.50     0.0531     0            40.5 
22 mu_0       0.4      1.33     0.225      0            17.3 
23 mu_0       0.5      1.24     0.627      0             8.28
24 mu_0       0.6      1.17     0.994      0             7.50
25 mu_0       0.7      1.10     0.937      0             4.01
26 mu_0       0.8      1.10     0.654      0             5.42
27 mu_0       0.9      1.16     0.179      0             8.09
[1] "Total run time was 94.16 seconds"
