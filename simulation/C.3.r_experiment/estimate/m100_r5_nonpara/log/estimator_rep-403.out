
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1259"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  7  3 10  7  6  4 12  3  4  7 10  7  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01004 0.25543 0.52992 0.94181 4.05070 
[1] "event indicator table: "

  0   1 
785 474 
[1] "treatment indicator table: "

  0   1 
447 812 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.771 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.381 0.0931
 2 mu         0.1   0.2 0.387 0.0920
 3 mu         0.1   0.3 0.407 0.0945
 4 mu         0.1   0.4 0.415 0.0961
 5 mu         0.1   0.5 0.436 0.104 
 6 mu         0.2   0.1 0.485 0.0860
 7 mu         0.2   0.2 0.554 0.0988
 8 mu         0.2   0.3 0.609 0.101 
 9 mu         0.2   0.4 0.623 0.102 
10 mu         0.2   0.5 0.662 0.112 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.683       0.0943 0.000000726     10.1 
 2 mu         0.2      1.10        0.433  0.000367         7.85
 3 mu         0.3      1.16        0.830  0.00957          4.60
 4 mu         0.4      1.09        0.970  0.0583           3.54
 5 mu         0.5      1.03        0.972  0.184            2.41
 6 mu         0.6      0.995       0.978  0.178            1.88
 7 mu         0.7      0.980       0.972  0.418            1.58
 8 mu         0.8      0.990       0.975  0.111            2.09
 9 mu         0.9      1.02        0.844  0.00312          4.29
10 mu_1       0.1      1.15        0.310  0.00000454      11.2 
11 mu_1       0.2      1.25        0.771  0.00115          6.97
12 mu_1       0.3      1.16        0.959  0.0200           4.09
13 mu_1       0.4      1.06        1.05   0.105            2.82
14 mu_1       0.5      1.01        0.957  0.255            2.27
15 mu_1       0.6      0.990       0.956  0.191            1.81
16 mu_1       0.7      0.978       0.990  0.367            1.65
17 mu_1       0.8      0.991       0.981  0.0707           2.20
18 mu_1       0.9      1.01        0.835  0.00181          4.43
19 mu_0       0.1      0.631       0.0707 0.000000303     10.0 
20 mu_0       0.2      1.06        0.334  0.000169         8.07
21 mu_0       0.3      1.16        0.712  0.00437          5.14
22 mu_0       0.4      1.11        0.979  0.0269           4.02
23 mu_0       0.5      1.04        0.979  0.0935           3.01
24 mu_0       0.6      1.00        0.947  0.159            2.11
25 mu_0       0.7      0.983       0.950  0.256            1.74
26 mu_0       0.8      0.986       0.997  0.274            1.93
27 mu_0       0.9      1.07        1.04   0.0149           3.12
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.341   0.0000418   2.88e-19      8.96
 2 mu         0.2      1.04    0.00501     3.02e-13     16.6 
 3 mu         0.3      1.32    0.0669      1.00e- 9     22.2 
 4 mu         0.4      1.24    0.330       3.17e- 7     12.6 
 5 mu         0.5      1.16    0.786       2.75e- 5      4.49
 6 mu         0.6      1.16    0.981       1.05e- 3      3.76
 7 mu         0.7      1.17    1.23        1.38e- 3      4.65
 8 mu         0.8      1.19    1.08        8.09e- 6      5.95
 9 mu         0.9      1.48    0.228       7.91e-10     14.6 
10 mu_1       0.1      0.812   0.000355    2.88e-18     16.8 
11 mu_1       0.2      1.39    0.0153      1.51e-12     23.0 
12 mu_1       0.3      1.37    0.143       3.35e- 9     20.5 
13 mu_1       0.4      1.21    0.547       7.92e- 7      8.75
14 mu_1       0.5      1.16    0.964       5.49e- 5      4.04
15 mu_1       0.6      1.18    1.07        1.76e- 3      3.58
16 mu_1       0.7      1.18    1.23        4.40e- 4      5.16
17 mu_1       0.8      1.20    0.907       2.25e- 6      5.79
18 mu_1       0.9      1.51    0.177       1.95e-10     16.2 
19 mu_0       0.1      0.288   0.00000896  0             8.09
20 mu_0       0.2      0.952   0.00162     0            15.7 
21 mu_0       0.3      1.31    0.0272      0            22.9 
22 mu_0       0.4      1.26    0.177       0            15.2 
23 mu_0       0.5      1.15    0.464       0             5.19
24 mu_0       0.6      1.13    0.933       0             4.18
25 mu_0       0.7      1.14    0.877       0             3.64
26 mu_0       0.8      1.14    1.09        0             6.61
27 mu_0       0.9      1.15    0.297       0             6.76
[1] "Total run time was 43.988 seconds"
