
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1213"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  9  5  8  5 11  6  7  6  7  8  7  3  8  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02726 0.34501 0.60611 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
729 484 
[1] "treatment indicator table: "

  0   1 
456 757 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.29 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.283 0.119 
 2 mu         0.1   0.2 0.259 0.120 
 3 mu         0.1   0.3 0.316 0.129 
 4 mu         0.1   0.4 0.362 0.140 
 5 mu         0.1   0.5 0.358 0.148 
 6 mu         0.2   0.1 0.195 0.0601
 7 mu         0.2   0.2 0.181 0.0619
 8 mu         0.2   0.3 0.251 0.0676
 9 mu         0.2   0.4 0.304 0.0725
10 mu         0.2   0.5 0.303 0.0783
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.564      0.00787 0.000000203      13.0 
 2 mu         0.2      0.590      0.113   0.0000949         4.53
 3 mu         0.3      0.712      0.412   0.00266           3.59
 4 mu         0.4      0.863      0.719   0.0249            4.02
 5 mu         0.5      0.980      0.906   0.124             3.28
 6 mu         0.6      1.04       0.992   0.266             2.49
 7 mu         0.7      1.06       1.04    0.247             2.08
 8 mu         0.8      1.08       0.924   0.116             3.45
 9 mu         0.9      1.02       0.568   0.00319           8.17
10 mu_1       0.1      0.613      0.0365  0.00000122        6.86
11 mu_1       0.2      0.695      0.254   0.000361          4.25
12 mu_1       0.3      0.806      0.590   0.00681           4.37
13 mu_1       0.4      0.924      0.791   0.0483            3.76
14 mu_1       0.5      1.01       0.956   0.195             2.93
15 mu_1       0.6      1.04       1.00    0.211             2.54
16 mu_1       0.7      1.07       1.04    0.284             2.15
17 mu_1       0.8      1.08       0.877   0.0942            3.82
18 mu_1       0.9      1.01       0.516   0.00214           8.94
19 mu_0       0.1      0.558      0.00430 0.0000000670     13.7 
20 mu_0       0.2      0.564      0.0737  0.0000284         5.06
21 mu_0       0.3      0.672      0.317   0.000887          3.52
22 mu_0       0.4      0.822      0.609   0.00935           4.22
23 mu_0       0.5      0.954      0.849   0.0534            3.62
24 mu_0       0.6      1.03       0.972   0.202             2.70
25 mu_0       0.7      1.05       1.01    0.160             2.53
26 mu_0       0.8      1.07       1.09    0.204             2.89
27 mu_0       0.9      1.07       0.895   0.0126            6.23
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      48.5     0.000109   3.50e-15   2421.  
 2 mu         0.2      33.5     0.0105     4.08e-10   1178.  
 3 mu         0.3      14.5     0.0987     3.52e- 7    416.  
 4 mu         0.4       4.40    0.375      4.01e- 5    112.  
 5 mu         0.5       1.54    0.716      1.48e- 3     14.7 
 6 mu         0.6       1.08    0.946      2.63e- 2      4.91
 7 mu         0.7       1.13    0.968      1.35e- 2      5.99
 8 mu         0.8       1.36    0.660      4.15e- 5     12.4 
 9 mu         0.9       1.52    0.155      1.01e- 9     35.7 
10 mu_1       0.1      34.7     0.000506   0          1863.  
11 mu_1       0.2      18.9     0.0240     0           696.  
12 mu_1       0.3       6.62    0.170      0           277.  
13 mu_1       0.4       2.03    0.432      0            55.8 
14 mu_1       0.5       1.11    0.691      0             5.89
15 mu_1       0.6       1.04    0.963      0             5.45
16 mu_1       0.7       1.17    0.887      0             6.70
17 mu_1       0.8       1.39    0.510      0            12.9 
18 mu_1       0.9       1.52    0.111      0            37.4 
19 mu_0       0.1      50.1     0.0000423  0          2484.  
20 mu_0       0.2      37.2     0.00501    0          1360.  
21 mu_0       0.3      17.8     0.0492     0           475.  
22 mu_0       0.4       5.97    0.219      0           149.  
23 mu_0       0.5       1.97    0.615      0            23.6 
24 mu_0       0.6       1.14    0.880      0             4.91
25 mu_0       0.7       1.06    0.940      0             6.14
26 mu_0       0.8       1.22    0.946      0            10.3 
27 mu_0       0.9       1.53    0.352      0            19.8 
[1] "Total run time was 57.279 seconds"
