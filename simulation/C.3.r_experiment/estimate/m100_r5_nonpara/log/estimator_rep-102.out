
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1239"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  8  2  5  3 10  4 11  7  7  9  4  3 10  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04256 0.37360 0.63392 1.00000 5.01905 
[1] "event indicator table: "

  0   1 
728 511 
[1] "treatment indicator table: "

  0   1 
476 763 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 39.54 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.409 0.174 
 2 mu         0.1   0.2 0.468 0.190 
 3 mu         0.1   0.3 0.623 0.233 
 4 mu         0.1   0.4 0.656 0.250 
 5 mu         0.1   0.5 0.714 0.270 
 6 mu         0.2   0.1 0.285 0.0579
 7 mu         0.2   0.2 0.364 0.0628
 8 mu         0.2   0.3 0.462 0.0760
 9 mu         0.2   0.4 0.491 0.0770
10 mu         0.2   0.5 0.550 0.0817
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04        0.0652  1.11e- 9     44.0 
 2 mu         0.2      0.911       0.399   5.77e- 6      8.46
 3 mu         0.3      0.936       0.857   6.70e- 4      3.48
 4 mu         0.4      0.983       0.885   1.55e- 2      3.66
 5 mu         0.5      1.01        0.974   1.38e- 1      3.10
 6 mu         0.6      1.01        0.989   3.07e- 1      2.22
 7 mu         0.7      1.00        1.04    3.20e- 1      2.04
 8 mu         0.8      1.03        1.04    5.56e- 2      2.59
 9 mu         0.9      1.11        0.828   8.71e- 4      6.79
10 mu_1       0.1      0.797       0.184   8.07e- 9      7.57
11 mu_1       0.2      0.888       0.644   2.12e- 5      4.57
12 mu_1       0.3      0.950       0.820   1.65e- 3      3.63
13 mu_1       0.4      1.00        0.917   2.89e- 2      3.56
14 mu_1       0.5      1.02        0.981   2.08e- 1      3.05
15 mu_1       0.6      1.02        1.02    3.25e- 1      2.28
16 mu_1       0.7      1.01        1.06    2.49e- 1      1.90
17 mu_1       0.8      1.04        1.02    4.14e- 2      2.90
18 mu_1       0.9      1.12        0.757   5.81e- 4      7.37
19 mu_0       0.1      1.06        0.0490  3.34e-10     48.9 
20 mu_0       0.2      0.916       0.315   1.91e- 6     10.6 
21 mu_0       0.3      0.930       0.807   2.48e- 4      3.71
22 mu_0       0.4      0.971       0.845   6.54e- 3      3.72
23 mu_0       0.5      1.00        0.954   6.85e- 2      3.16
24 mu_0       0.6      1.00        0.926   1.45e- 1      2.62
25 mu_0       0.7      0.984       0.979   2.02e- 1      2.36
26 mu_0       0.8      0.980       1.03    1.12e- 1      1.94
27 mu_0       0.9      1.02        0.987   3.49e- 3      2.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.16     0.000350  6.44e-15     50.9 
 2 mu         0.2       1.74     0.0220    7.51e-10     81.5 
 3 mu         0.3       1.74     0.178     5.67e- 7     55.4 
 4 mu         0.4       1.53     0.633     4.85e- 5     34.1 
 5 mu         0.5       1.27     0.973     1.44e- 3     20.2 
 6 mu         0.6       1.11     1.06      1.81e- 2      6.73
 7 mu         0.7       1.11     0.975     6.70e- 4      3.74
 8 mu         0.8       1.23     0.807     5.90e- 6      7.98
 9 mu         0.9       1.67     0.125     9.50e-10     32.7 
10 mu_1       0.1       1.79     0.00235   6.08e-14     83.7 
11 mu_1       0.2       1.90     0.0722    3.54e- 9     81.5 
12 mu_1       0.3       1.69     0.354     1.78e- 6     38.6 
13 mu_1       0.4       1.44     0.940     1.14e- 4     30.4 
14 mu_1       0.5       1.20     1.06      2.70e- 3     14.4 
15 mu_1       0.6       1.08     1.02      2.32e- 3      4.01
16 mu_1       0.7       1.12     1.04      7.36e- 5      3.84
17 mu_1       0.8       1.26     0.637     5.67e- 7      8.86
18 mu_1       0.9       1.73     0.0911    1.39e-10     36.4 
19 mu_0       0.1       1.10     0.000168  0            52.2 
20 mu_0       0.2       1.70     0.00994   0            81.5 
21 mu_0       0.3       1.76     0.106     0            63.3 
22 mu_0       0.4       1.59     0.414     0            36.5 
23 mu_0       0.5       1.35     0.807     0            25.9 
24 mu_0       0.6       1.14     0.996     0            10.8 
25 mu_0       0.7       1.09     0.918     0             4.16
26 mu_0       0.8       1.13     0.891     0             4.92
27 mu_0       0.9       1.15     0.277     0            14.6 
[1] "Total run time was 42.722 seconds"
