
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1290"
[1] "cluster size dist'n: "

 5  6  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  5  9  6 10  7  5  4  8  6  6 11  8  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03647 0.33332 0.59456 0.98189 4.96612 
[1] "event indicator table: "

  0   1 
760 530 
[1] "treatment indicator table: "

  0   1 
498 792 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 39.378 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.370 0.156 
 2 mu         0.1   0.2 0.428 0.152 
 3 mu         0.1   0.3 0.445 0.127 
 4 mu         0.1   0.4 0.454 0.119 
 5 mu         0.1   0.5 0.460 0.104 
 6 mu         0.2   0.1 0.341 0.0990
 7 mu         0.2   0.2 0.411 0.0995
 8 mu         0.2   0.3 0.468 0.0865
 9 mu         0.2   0.4 0.495 0.0825
10 mu         0.2   0.5 0.517 0.0753
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.616       0.0648 0.000000252      5.66
 2 mu         0.2      0.812       0.382  0.000227         4.58
 3 mu         0.3      0.946       0.752  0.00772          5.16
 4 mu         0.4      1.02        0.970  0.0605           4.27
 5 mu         0.5      1.03        0.968  0.186            2.63
 6 mu         0.6      1.00        1.01   0.191            2.14
 7 mu         0.7      0.958       0.960  0.0461           2.00
 8 mu         0.8      0.975       0.949  0.00420          3.27
 9 mu         0.9      1.11        0.797  0.0000363        8.09
10 mu_1       0.1      0.827       0.188  0.00000154       6.76
11 mu_1       0.2      0.927       0.670  0.000693         5.14
12 mu_1       0.3      1.01        0.944  0.0157           5.21
13 mu_1       0.4      1.04        1.03   0.0941           3.66
14 mu_1       0.5      1.03        0.987  0.242            2.30
15 mu_1       0.6      0.989       0.986  0.134            2.01
16 mu_1       0.7      0.954       0.959  0.0295           1.98
17 mu_1       0.8      0.988       0.925  0.00242          3.68
18 mu_1       0.9      1.12        0.761  0.0000188        8.60
19 mu_0       0.1      0.592       0.0509 0.000000109      5.96
20 mu_0       0.2      0.784       0.301  0.000110         4.86
21 mu_0       0.3      0.919       0.704  0.00428          5.14
22 mu_0       0.4      1.01        0.977  0.0333           4.68
23 mu_0       0.5      1.04        0.962  0.102            3.16
24 mu_0       0.6      1.02        0.990  0.253            2.34
25 mu_0       0.7      0.968       0.971  0.0847           2.13
26 mu_0       0.8      0.922       0.923  0.0113           2.46
27 mu_0       0.9      0.951       0.867  0.000194         3.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.675    0.000233   6.93e-19     29.9 
 2 mu         0.2      1.29     0.0198     7.26e-13     40.9 
 3 mu         0.3      1.40     0.190      2.41e- 9     26.6 
 4 mu         0.4      1.28     0.591      7.61e- 7     20.5 
 5 mu         0.5      1.15     1.01       6.60e- 5      8.43
 6 mu         0.6      1.11     0.999      2.53e- 3      3.58
 7 mu         0.7      1.31     0.889      7.15e- 4      9.28
 8 mu         0.8      2.51     0.463      2.44e- 6     68.4 
 9 mu         0.9      6.31     0.0481     1.06e-10    285.  
10 mu_1       0.1      1.20     0.00117    6.93e-18     49.9 
11 mu_1       0.2      1.52     0.0605     3.63e-12     34.1 
12 mu_1       0.3      1.42     0.380      8.05e- 9     27.7 
13 mu_1       0.4      1.24     0.800      1.90e- 6     16.0 
14 mu_1       0.5      1.12     0.924      1.32e- 4      5.27
15 mu_1       0.6      1.11     1.01       4.22e- 3      3.58
16 mu_1       0.7      1.39     0.861      1.70e- 4     12.6 
17 mu_1       0.8      2.76     0.350      5.08e- 7     81.0 
18 mu_1       0.9      6.55     0.0324     1.96e-11    300.  
19 mu_0       0.1      0.617    0.0000843  0            27.7 
20 mu_0       0.2      1.23     0.00946    0            42.6 
21 mu_0       0.3      1.39     0.109      0            26.1 
22 mu_0       0.4      1.31     0.394      0            23.5 
23 mu_0       0.5      1.19     0.829      0            11.6 
24 mu_0       0.6      1.11     1.09       0             3.74
25 mu_0       0.7      1.13     0.919      0             3.97
26 mu_0       0.8      1.53     0.752      0            18.0 
27 mu_0       0.9      4.09     0.122      0           150.  
[1] "Total run time was 42.771 seconds"
