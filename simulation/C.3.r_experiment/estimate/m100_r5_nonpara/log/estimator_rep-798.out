
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1253"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  5  5  6 15  5  6  8  7  5  5  8  4  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.07097 0.43202 0.67954 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
748 505 
[1] "treatment indicator table: "

  0   1 
436 817 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.753 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.110 0.0843
 2 mu         0.1   0.2 0.157 0.112 
 3 mu         0.1   0.3 0.160 0.131 
 4 mu         0.1   0.4 0.156 0.142 
 5 mu         0.1   0.5 0.126 0.164 
 6 mu         0.2   0.1 0.194 0.0587
 7 mu         0.2   0.2 0.287 0.0790
 8 mu         0.2   0.3 0.308 0.0960
 9 mu         0.2   0.4 0.322 0.104 
10 mu         0.2   0.5 0.311 0.123 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.404      0.00712 0.00000000468     22.3 
 2 mu         0.2      0.665      0.114   0.0000195         13.9 
 3 mu         0.3      0.876      0.375   0.00178            6.60
 4 mu         0.4      0.983      0.796   0.0315             5.19
 5 mu         0.5      1.02       0.971   0.196              3.34
 6 mu         0.6      1.02       0.984   0.300              2.87
 7 mu         0.7      0.974      0.997   0.104              2.51
 8 mu         0.8      0.909      0.888   0.0161             6.42
 9 mu         0.9      0.846      0.551   0.000178          11.4 
10 mu_1       0.1      0.643      0.0308  0.0000000321      20.4 
11 mu_1       0.2      0.835      0.273   0.0000671          6.51
12 mu_1       0.3      0.975      0.639   0.00409            6.98
13 mu_1       0.4      1.02       0.909   0.0547             4.23
14 mu_1       0.5      1.03       0.981   0.292              3.45
15 mu_1       0.6      1.01       1.01    0.233              2.55
16 mu_1       0.7      0.961      0.968   0.0757             3.14
17 mu_1       0.8      0.897      0.836   0.0106             7.29
18 mu_1       0.9      0.838      0.479   0.000103          11.6 
19 mu_0       0.1      0.377      0.00429 0.00000000164     22.5 
20 mu_0       0.2      0.623      0.0716  0.00000763        15.7 
21 mu_0       0.3      0.834      0.279   0.000788           7.32
22 mu_0       0.4      0.957      0.714   0.0161             5.83
23 mu_0       0.5      1.00       0.914   0.0929             3.26
24 mu_0       0.6      1.02       0.973   0.291              3.35
25 mu_0       0.7      1.01       0.993   0.169              2.17
26 mu_0       0.8      0.954      0.953   0.0379             2.91
27 mu_0       0.9      0.917      0.788   0.000850           9.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.821   0.0000257   2.58e-14     28.4 
 2 mu         0.2      1.94    0.00352     8.47e-10     56.6 
 3 mu         0.3      2.02    0.0589      3.71e- 7     44.2 
 4 mu         0.4      1.54    0.301       2.77e- 5     17.7 
 5 mu         0.5      1.27    0.831       7.89e- 4      6.45
 6 mu         0.6      1.26    1.15        1.22e- 2      5.28
 7 mu         0.7      1.65    1.03        4.50e- 3     21.2 
 8 mu         0.8      3.86    0.682       2.00e- 5    144.  
 9 mu         0.9     13.0     0.0969      1.10e- 9    841.  
10 mu_1       0.1      1.81    0.000193    2.58e-13     56.8 
11 mu_1       0.2      2.35    0.0127      4.23e- 9     62.9 
12 mu_1       0.3      1.85    0.121       1.24e- 6     32.7 
13 mu_1       0.4      1.34    0.478       6.94e- 5      9.08
14 mu_1       0.5      1.18    0.932       1.58e- 3      5.36
15 mu_1       0.6      1.26    1.11        2.03e- 2      6.16
16 mu_1       0.7      1.81    0.987       1.61e- 3     28.4 
17 mu_1       0.8      4.44    0.554       6.26e- 6    180.  
18 mu_1       0.9     14.1     0.0695      3.06e-10    934.  
19 mu_0       0.1      0.712   0.00000780  0            25.3 
20 mu_0       0.2      1.83    0.00132     0            55.0 
21 mu_0       0.3      2.09    0.0283      0            49.1 
22 mu_0       0.4      1.68    0.165       0            23.7 
23 mu_0       0.5      1.35    0.607       0            10.3 
24 mu_0       0.6      1.26    1.06        0             5.39
25 mu_0       0.7      1.27    1.22        0             6.56
26 mu_0       0.8      1.57    0.899       0            32.8 
27 mu_0       0.9      3.41    0.195       0           192.  
[1] "Total run time was 66.597 seconds"
