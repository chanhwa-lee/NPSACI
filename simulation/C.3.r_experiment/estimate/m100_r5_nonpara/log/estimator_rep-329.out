
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1202"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10 10 10  6  5  1  4  9  5  3  4  4  7  8  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03227 0.35609 0.60574 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
683 519 
[1] "treatment indicator table: "

  0   1 
500 702 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 576
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 44.729 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.973 0.241
 2 mu         0.1   0.2 1.30  0.365
 3 mu         0.1   0.3 1.54  0.459
 4 mu         0.1   0.4 1.63  0.459
 5 mu         0.1   0.5 1.67  0.460
 6 mu         0.2   0.1 0.668 0.124
 7 mu         0.2   0.2 0.869 0.206
 8 mu         0.2   0.3 1.03  0.265
 9 mu         0.2   0.4 1.12  0.268
10 mu         0.2   0.5 1.15  0.265
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      2.20        0.114  0.0000000749     34.7 
 2 mu         0.2      1.63        0.451  0.000135         13.7 
 3 mu         0.3      1.25        0.971  0.00644           7.63
 4 mu         0.4      1.07        0.962  0.0556            3.68
 5 mu         0.5      1.01        1.03   0.126             2.16
 6 mu         0.6      1.01        1.01   0.135             2.02
 7 mu         0.7      1.03        0.958  0.217             2.70
 8 mu         0.8      1.03        0.871  0.0693            4.31
 9 mu         0.9      0.979       0.707  0.00429           9.56
10 mu_1       0.1      1.73        0.304  0.000000473      19.3 
11 mu_1       0.2      1.31        0.719  0.000425         10.6 
12 mu_1       0.3      1.09        0.900  0.0144            4.92
13 mu_1       0.4      1.01        1.00   0.0775            2.58
14 mu_1       0.5      0.993       0.999  0.143             1.82
15 mu_1       0.6      1.01        1.01   0.139             2.08
16 mu_1       0.7      1.03        0.943  0.147             2.89
17 mu_1       0.8      1.03        0.802  0.0348            4.94
18 mu_1       0.9      0.967       0.660  0.00256          10.2 
19 mu_0       0.1      2.26        0.0822 0.0000000307     38.6 
20 mu_0       0.2      1.71        0.376  0.0000577        17.0 
21 mu_0       0.3      1.32        0.893  0.00302           8.80
22 mu_0       0.4      1.11        0.902  0.0400            4.42
23 mu_0       0.5      1.02        1.05   0.109             2.71
24 mu_0       0.6      1.01        1.03   0.129             1.94
25 mu_0       0.7      1.03        1.04   0.164             2.26
26 mu_0       0.8      1.06        0.974  0.151             3.30
27 mu_0       0.9      1.09        0.886  0.0152            3.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.82     0.000406  2.42e-14    555.  
 2 mu         0.2       2.84     0.0213    1.41e- 9    107.  
 3 mu         0.3       1.92     0.166     8.10e- 7     34.2 
 4 mu         0.4       1.56     0.583     6.93e- 5     13.0 
 5 mu         0.5       1.42     1.02      2.05e- 3     10.4 
 6 mu         0.6       1.33     1.02      6.51e- 3     10.1 
 7 mu         0.7       1.24     1.02      1.16e- 4      7.20
 8 mu         0.8       1.29     0.765     3.97e- 7      8.69
 9 mu         0.9       1.62     0.0787    2.43e-11     22.0 
10 mu_1       0.1       1.38     0.00183   0            38.5 
11 mu_1       0.2       1.84     0.0710    0            52.7 
12 mu_1       0.3       1.66     0.328     0            24.0 
13 mu_1       0.4       1.48     0.816     0            13.7 
14 mu_1       0.5       1.40     1.07      0            10.8 
15 mu_1       0.6       1.32     1.10      0            10.1 
16 mu_1       0.7       1.25     1.01      0             6.17
17 mu_1       0.8       1.33     0.637     0             9.65
18 mu_1       0.9       1.68     0.0527    0            24.4 
19 mu_0       0.1       7.43     0.000178  0           617.  
20 mu_0       0.2       3.09     0.00885   0           133.  
21 mu_0       0.3       2.02     0.0789    0            38.6 
22 mu_0       0.4       1.61     0.392     0            14.1 
23 mu_0       0.5       1.44     0.851     0            12.1 
24 mu_0       0.6       1.34     1.01      0            11.0 
25 mu_0       0.7       1.22     0.979     0             9.60
26 mu_0       0.8       1.11     0.571     0             4.83
27 mu_0       0.9       1.07     0.0681    0            15.9 
[1] "Total run time was 48.007 seconds"
