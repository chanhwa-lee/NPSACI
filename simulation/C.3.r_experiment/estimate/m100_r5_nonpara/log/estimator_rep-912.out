
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1235"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  5 12  6  4  6  7  5 10  4  9  5  6  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02704 0.29487 0.57940 0.97888 4.95047 
[1] "event indicator table: "

  0   1 
730 505 
[1] "treatment indicator table: "

  0   1 
476 759 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 93.399 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.191 0.141
 2 mu         0.1   0.2 0.296 0.192
 3 mu         0.1   0.3 0.320 0.232
 4 mu         0.1   0.4 0.423 0.237
 5 mu         0.1   0.5 0.502 0.235
 6 mu         0.2   0.1 0.253 0.118
 7 mu         0.2   0.2 0.375 0.156
 8 mu         0.2   0.3 0.425 0.188
 9 mu         0.2   0.4 0.528 0.200
10 mu         0.2   0.5 0.597 0.201
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.04        0.0297 0.0000000959     29.7 
 2 mu         0.2      1.20        0.259  0.0000968        25.8 
 3 mu         0.3      1.19        0.664  0.00376          10.5 
 4 mu         0.4      1.15        0.937  0.0353            5.11
 5 mu         0.5      1.07        1.02   0.138             2.25
 6 mu         0.6      0.997       0.999  0.280             1.51
 7 mu         0.7      0.994       0.916  0.114             2.94
 8 mu         0.8      1.06        0.825  0.00915           6.90
 9 mu         0.9      1.04        0.428  0.0000718        12.8 
10 mu_1       0.1      1.30        0.124  0.000000620      39.7 
11 mu_1       0.2      1.16        0.534  0.000313         17.3 
12 mu_1       0.3      1.16        0.866  0.00811           7.24
13 mu_1       0.4      1.13        1.03   0.0572            4.02
14 mu_1       0.5      1.05        1.01   0.180             1.85
15 mu_1       0.6      0.987       0.983  0.307             1.51
16 mu_1       0.7      1.00        0.930  0.0728            3.41
17 mu_1       0.8      1.07        0.800  0.00538           7.26
18 mu_1       0.9      1.04        0.377  0.0000390        14.2 
19 mu_0       0.1      1.01        0.0195 0.0000000376     28.6 
20 mu_0       0.2      1.21        0.181  0.0000427        27.9 
21 mu_0       0.3      1.20        0.558  0.00190          12.9 
22 mu_0       0.4      1.17        0.859  0.0208            5.83
23 mu_0       0.5      1.10        0.978  0.0972            2.84
24 mu_0       0.6      1.01        0.989  0.238             1.65
25 mu_0       0.7      0.977       0.967  0.211             1.85
26 mu_0       0.8      1.02        0.920  0.0242            5.43
27 mu_0       0.9      1.05        0.753  0.000367          9.19
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.06    0.000334   2.15e-15    214.  
 2 mu         0.2       4.68    0.0131     1.41e-10    149.  
 3 mu         0.3       3.21    0.0951     9.23e- 8     67.0 
 4 mu         0.4       1.80    0.409      9.21e- 6     22.3 
 5 mu         0.5       1.15    0.901      3.27e- 4      5.85
 6 mu         0.6       1.15    1.08       6.05e- 3      3.89
 7 mu         0.7       1.69    1.20       4.77e- 3     16.2 
 8 mu         0.8       2.59    0.726      2.44e- 5     40.9 
 9 mu         0.9       3.15    0.125      2.12e- 9     74.3 
10 mu_1       0.1       5.70    0.00169    2.15e-14    214.  
11 mu_1       0.2       4.00    0.0447     7.03e-10     90.2 
12 mu_1       0.3       2.26    0.211      3.08e- 7     31.3 
13 mu_1       0.4       1.32    0.637      2.30e- 5      9.81
14 mu_1       0.5       1.04    0.974      6.55e- 4      3.30
15 mu_1       0.6       1.23    1.20       1.01e- 2      5.61
16 mu_1       0.7       1.87    1.18       1.20e- 3     20.1 
17 mu_1       0.8       2.76    0.673      5.37e- 6     44.3 
18 mu_1       0.9       3.21    0.0957     4.15e-10     82.5 
19 mu_0       0.1       3.88    0.0000855  0           214.  
20 mu_0       0.2       4.85    0.00466    0           167.  
21 mu_0       0.3       3.61    0.0392     0            86.2 
22 mu_0       0.4       2.12    0.222      0            33.5 
23 mu_0       0.5       1.27    0.599      0             9.73
24 mu_0       0.6       1.02    0.936      0             2.95
25 mu_0       0.7       1.26    1.14       0             8.07
26 mu_0       0.8       1.92    0.823      0            27.3 
27 mu_0       0.9       2.56    0.179      0            63.0 
[1] "Total run time was 98.482 seconds"
