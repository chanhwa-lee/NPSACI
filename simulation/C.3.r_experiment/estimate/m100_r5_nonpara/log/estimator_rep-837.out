
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6 11  5  4  3  4 12  6  9  6  6  3  9  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0178  0.3131  0.5660  0.9649  5.0000 
[1] "event indicator table: "

  0   1 
692 514 
[1] "treatment indicator table: "

  0   1 
460 746 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 544
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.331 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.403 0.0842
 2 mu         0.1   0.2 0.433 0.100 
 3 mu         0.1   0.3 0.485 0.113 
 4 mu         0.1   0.4 0.526 0.121 
 5 mu         0.1   0.5 0.611 0.147 
 6 mu         0.2   0.1 0.405 0.0567
 7 mu         0.2   0.2 0.456 0.0664
 8 mu         0.2   0.3 0.510 0.0772
 9 mu         0.2   0.4 0.547 0.0818
10 mu         0.2   0.5 0.595 0.0924
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.961       0.0704 0.000000358     12.7 
 2 mu         0.2      1.02        0.467  0.000221         5.04
 3 mu         0.3      1.04        0.866  0.00725          3.66
 4 mu         0.4      1.09        1.03   0.0679           2.48
 5 mu         0.5      1.10        1.07   0.150            2.05
 6 mu         0.6      1.05        1.06   0.273            1.91
 7 mu         0.7      0.954       0.967  0.0301           1.77
 8 mu         0.8      0.857       0.818  0.000789         3.54
 9 mu         0.9      0.770       0.565  0.000000786      9.78
10 mu_1       0.1      1.16        0.189  0.00000240       8.63
11 mu_1       0.2      1.05        0.811  0.000749         4.64
12 mu_1       0.3      1.08        1.03   0.0165           2.85
13 mu_1       0.4      1.12        1.10   0.117            2.35
14 mu_1       0.5      1.09        1.08   0.125            2.15
15 mu_1       0.6      1.03        1.04   0.175            1.81
16 mu_1       0.7      0.924       0.896  0.0168           1.79
17 mu_1       0.8      0.836       0.766  0.000396         4.03
18 mu_1       0.9      0.754       0.498  0.000000359     10.1 
19 mu_0       0.1      0.938       0.0523 0.000000131     14.1 
20 mu_0       0.2      1.02        0.370  0.0000895        5.40
21 mu_0       0.3      1.02        0.761  0.00329          4.00
22 mu_0       0.4      1.08        0.969  0.0350           2.59
23 mu_0       0.5      1.10        1.07   0.174            2.03
24 mu_0       0.6      1.08        1.09   0.172            2.16
25 mu_0       0.7      1.02        1.04   0.0609           1.72
26 mu_0       0.8      0.939       1.02   0.00236          1.95
27 mu_0       0.9      0.913       0.831  0.00000464       6.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.566    0.000294   2.90e-15     19.3 
 2 mu         0.2      1.12     0.0140     3.38e-10     28.9 
 3 mu         0.3      1.33     0.116      2.91e- 7     25.6 
 4 mu         0.4      1.24     0.415      3.32e- 5     15.5 
 5 mu         0.5      1.06     0.842      1.23e- 3      6.74
 6 mu         0.6      0.986    0.930      8.15e- 3      3.74
 7 mu         0.7      1.15     0.990      1.98e- 4     10.4 
 8 mu         0.8      1.66     0.700      8.84e- 7     30.3 
 9 mu         0.9      2.97     0.105      6.83e-11     98.7 
10 mu_1       0.1      1.16     0.00184    2.74e-14     36.7 
11 mu_1       0.2      1.42     0.0467     1.60e- 9     32.2 
12 mu_1       0.3      1.35     0.264      9.17e- 7     18.9 
13 mu_1       0.4      1.15     0.656      7.84e- 5      8.59
14 mu_1       0.5      0.996    0.741      2.32e- 3      4.00
15 mu_1       0.6      1.01     0.936      1.70e- 3      5.06
16 mu_1       0.7      1.25     0.999      3.53e- 5     14.9 
17 mu_1       0.8      1.82     0.577      1.38e- 7     37.9 
18 mu_1       0.9      3.18     0.0731     9.49e-12    110.  
19 mu_0       0.1      0.499    0.0000975  0            18.8 
20 mu_0       0.2      1.04     0.00575    0            28.1 
21 mu_0       0.3      1.32     0.0521     0            28.4 
22 mu_0       0.4      1.31     0.213      0            20.0 
23 mu_0       0.5      1.12     0.557      0            10.5 
24 mu_0       0.6      0.955    0.791      0             4.16
25 mu_0       0.7      0.928    0.760      0             4.35
26 mu_0       0.8      0.996    0.789      0             9.55
27 mu_0       0.9      1.03     0.268      0             6.99
[1] "Total run time was 43.641 seconds"
