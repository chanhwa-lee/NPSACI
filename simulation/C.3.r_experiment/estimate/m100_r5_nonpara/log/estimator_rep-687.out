
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1239"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  9 11  5  7  5  5  2  3  4  5 10  7 11  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02788 0.34842 0.59803 0.98801 5.00000 
[1] "event indicator table: "

  0   1 
712 527 
[1] "treatment indicator table: "

  0   1 
476 763 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 37.748 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.409 0.143
 2 mu         0.1   0.2 0.517 0.173
 3 mu         0.1   0.3 0.597 0.196
 4 mu         0.1   0.4 0.600 0.208
 5 mu         0.1   0.5 0.696 0.220
 6 mu         0.2   0.1 0.388 0.107
 7 mu         0.2   0.2 0.476 0.130
 8 mu         0.2   0.3 0.575 0.153
 9 mu         0.2   0.4 0.579 0.159
10 mu         0.2   0.5 0.664 0.167
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.940      0.00552 0.0000000287     28.3 
 2 mu         0.2      1.01       0.102   0.0000554        19.0 
 3 mu         0.3      0.926      0.388   0.00310           8.19
 4 mu         0.4      0.905      0.730   0.0330            4.01
 5 mu         0.5      0.928      0.913   0.164             2.36
 6 mu         0.6      0.957      0.915   0.482             1.56
 7 mu         0.7      1.00       0.917   0.321             5.17
 8 mu         0.8      1.05       0.811   0.0800           14.7 
 9 mu         0.9      0.967      0.402   0.00261          20.2 
10 mu_1       0.1      0.852      0.0257  0.000000182      24.7 
11 mu_1       0.2      0.857      0.229   0.000177         15.0 
12 mu_1       0.3      0.826      0.564   0.00665           4.01
13 mu_1       0.4      0.873      0.824   0.0581            3.08
14 mu_1       0.5      0.921      0.915   0.239             2.04
15 mu_1       0.6      0.962      0.906   0.512             1.91
16 mu_1       0.7      1.01       0.926   0.253             6.29
17 mu_1       0.8      1.05       0.775   0.0627           16.0 
18 mu_1       0.9      0.950      0.345   0.00188          19.8 
19 mu_0       0.1      0.950      0.00331 0.0000000117     31.4 
20 mu_0       0.2      1.05       0.0646  0.0000251        20.0 
21 mu_0       0.3      0.969      0.287   0.00150          11.6 
22 mu_0       0.4      0.927      0.626   0.0164            6.36
23 mu_0       0.5      0.935      0.857   0.0903            3.28
24 mu_0       0.6      0.949      0.933   0.308             1.75
25 mu_0       0.7      0.981      0.917   0.478             2.54
26 mu_0       0.8      1.04       0.885   0.146             9.25
27 mu_0       0.9      1.12       0.740   0.00918          24.1 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.18     0.0000570  4.97e-15     75.5 
 2 mu         0.2      5.11     0.00734    1.03e- 9    331.  
 3 mu         0.3      5.43     0.0674     1.16e- 6    385.  
 4 mu         0.4      3.46     0.329      1.52e- 4    223.  
 5 mu         0.5      1.74     0.731      5.85e- 3     73.4 
 6 mu         0.6      1.09     0.867      9.16e- 2     13.1 
 7 mu         0.7      1.03     0.821      5.49e- 3      7.44
 8 mu         0.8      1.27     0.396      6.28e- 5     14.8 
 9 mu         0.9      1.74     0.0311     1.55e- 8     26.2 
10 mu_1       0.1      4.35     0.000480   4.47e-14    201.  
11 mu_1       0.2      6.09     0.0232     4.63e- 9    441.  
12 mu_1       0.3      4.66     0.155      3.49e- 6    343.  
13 mu_1       0.4      2.47     0.496      3.41e- 4    149.  
14 mu_1       0.5      1.31     0.814      1.05e- 2     39.2 
15 mu_1       0.6      1.01     0.814      4.54e- 2      5.81
16 mu_1       0.7      1.06     0.710      2.47e- 3      7.50
17 mu_1       0.8      1.34     0.321      2.48e- 5     15.8 
18 mu_1       0.9      1.79     0.0205     5.45e- 9     27.4 
19 mu_0       0.1      1.94     0.0000253  0            61.5 
20 mu_0       0.2      4.86     0.00285    0           303.  
21 mu_0       0.3      5.76     0.0391     0           404.  
22 mu_0       0.4      4.12     0.215      0           273.  
23 mu_0       0.5      2.18     0.625      0           108.  
24 mu_0       0.6      1.21     0.899      0            24.0 
25 mu_0       0.7      0.948    0.779      0             7.29
26 mu_0       0.8      0.977    0.502      0            11.1 
27 mu_0       0.9      1.26     0.0676     0            20.6 
[1] "Total run time was 40.877 seconds"
