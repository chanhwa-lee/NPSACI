
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1185"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  5 10 12  7  5  4  5  8  5  4  7  5  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04586 0.36564 0.60573 1.00000 4.31171 
[1] "event indicator table: "

  0   1 
718 467 
[1] "treatment indicator table: "

  0   1 
420 765 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 577
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.01 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.588 0.199
 2 mu         0.1   0.2 0.713 0.241
 3 mu         0.1   0.3 0.820 0.286
 4 mu         0.1   0.4 0.903 0.299
 5 mu         0.1   0.5 0.920 0.302
 6 mu         0.2   0.1 0.479 0.119
 7 mu         0.2   0.2 0.603 0.143
 8 mu         0.2   0.3 0.694 0.173
 9 mu         0.2   0.4 0.755 0.174
10 mu         0.2   0.5 0.783 0.173
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.17       0.0141  0.0000000170      38.1 
 2 mu         0.2      1.09       0.187   0.0000344         16.9 
 3 mu         0.3      1.04       0.562   0.00145            7.72
 4 mu         0.4      1.03       0.894   0.0176             6.35
 5 mu         0.5      1.03       0.985   0.107              3.53
 6 mu         0.6      1.00       1.01    0.317              2.09
 7 mu         0.7      0.975      0.957   0.297              2.48
 8 mu         0.8      0.958      0.932   0.0349             3.17
 9 mu         0.9      0.957      0.662   0.000200           5.64
10 mu_1       0.1      0.898      0.0598  0.000000114       11.9 
11 mu_1       0.2      0.955      0.362   0.000115           7.73
12 mu_1       0.3      0.980      0.823   0.00377            7.99
13 mu_1       0.4      1.01       0.961   0.0346             5.11
14 mu_1       0.5      1.01       1.02    0.170              2.57
15 mu_1       0.6      0.993      0.975   0.308              2.33
16 mu_1       0.7      0.971      0.955   0.229              2.39
17 mu_1       0.8      0.963      0.921   0.0225             3.45
18 mu_1       0.9      0.962      0.579   0.000116           6.07
19 mu_0       0.1      1.20       0.00972 0.00000000631     42.3 
20 mu_0       0.2      1.13       0.138   0.00000992        21.0 
21 mu_0       0.3      1.06       0.447   0.000455           9.80
22 mu_0       0.4      1.04       0.786   0.00625            7.18
23 mu_0       0.5      1.04       0.972   0.0434             4.50
24 mu_0       0.6      1.02       1.04    0.192              2.25
25 mu_0       0.7      0.984      0.978   0.390              2.69
26 mu_0       0.8      0.940      0.939   0.0845             2.03
27 mu_0       0.9      0.914      0.824   0.000954           4.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.76    0.000124   1.39e-14    330.  
 2 mu         0.2       3.23    0.0106     8.10e-10    203.  
 3 mu         0.3       2.53    0.0975     4.66e- 7     80.1 
 4 mu         0.4       1.96    0.370      3.98e- 5     31.2 
 5 mu         0.5       1.53    0.850      1.18e- 3     14.8 
 6 mu         0.6       1.27    1.08       1.74e- 2      5.28
 7 mu         0.7       1.23    1.07       1.12e- 2      3.42
 8 mu         0.8       1.46    0.692      7.45e- 5      8.90
 9 mu         0.9       1.89    0.0750     8.20e- 9     32.9 
10 mu_1       0.1       3.99    0.000719   1.31e-13    300.  
11 mu_1       0.2       2.59    0.0363     3.81e- 9     92.2 
12 mu_1       0.3       2.09    0.206      1.46e- 6     40.6 
13 mu_1       0.4       1.68    0.612      9.37e- 5     24.0 
14 mu_1       0.5       1.37    0.943      2.22e- 3      9.09
15 mu_1       0.6       1.21    1.08       2.74e- 2      4.40
16 mu_1       0.7       1.24    1.06       4.20e- 3      3.61
17 mu_1       0.8       1.52    0.550      2.45e- 5      9.89
18 mu_1       0.9       1.92    0.0503     2.40e- 9     36.5 
19 mu_0       0.1       3.73    0.0000452  0           333.  
20 mu_0       0.2       3.39    0.00488    0           231.  
21 mu_0       0.3       2.72    0.0436     0           104.  
22 mu_0       0.4       2.14    0.199      0            36.0 
23 mu_0       0.5       1.69    0.585      0            20.4 
24 mu_0       0.6       1.37    1.08       0             7.11
25 mu_0       0.7       1.19    1.18       0             3.60
26 mu_0       0.8       1.24    0.821      0             4.94
27 mu_0       0.9       1.54    0.217      0            16.3 
[1] "Total run time was 46.055 seconds"
