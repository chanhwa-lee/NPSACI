
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1279"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  9  7  4  5  2  5  3  3  5  5  5 12 11  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03153 0.36561 0.62557 1.00000 4.67359 
[1] "event indicator table: "

  0   1 
761 518 
[1] "treatment indicator table: "

  0   1 
476 803 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.443 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.522 0.140 
 2 mu         0.1   0.2 0.572 0.144 
 3 mu         0.1   0.3 0.604 0.155 
 4 mu         0.1   0.4 0.632 0.159 
 5 mu         0.1   0.5 0.680 0.178 
 6 mu         0.2   0.1 0.448 0.0794
 7 mu         0.2   0.2 0.529 0.0827
 8 mu         0.2   0.3 0.571 0.0897
 9 mu         0.2   0.4 0.616 0.0908
10 mu         0.2   0.5 0.657 0.101 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.834       0.0463 0.0000000432     20.3 
 2 mu         0.2      0.918       0.383  0.0000791         6.86
 3 mu         0.3      0.978       0.834  0.00421           5.41
 4 mu         0.4      1.00        0.979  0.0497            2.80
 5 mu         0.5      1.03        0.968  0.244             2.34
 6 mu         0.6      1.06        0.998  0.402             2.24
 7 mu         0.7      1.02        1.04   0.323             1.99
 8 mu         0.8      0.976       0.940  0.130             1.91
 9 mu         0.9      1.10        0.779  0.00269           6.15
10 mu_1       0.1      0.962       0.155  0.000000273      12.1 
11 mu_1       0.2      0.975       0.712  0.000251          7.10
12 mu_1       0.3      1.00        0.981  0.00897           4.31
13 mu_1       0.4      1.01        0.978  0.0805            2.62
14 mu_1       0.5      1.05        0.995  0.313             2.42
15 mu_1       0.6      1.06        1.03   0.393             2.18
16 mu_1       0.7      1.01        1.02   0.251             1.85
17 mu_1       0.8      0.974       0.922  0.0953            1.95
18 mu_1       0.9      1.12        0.742  0.00171           6.79
19 mu_0       0.1      0.820       0.0341 0.0000000177     21.2 
20 mu_0       0.2      0.904       0.291  0.0000362         7.81
21 mu_0       0.3      0.966       0.688  0.00218           5.88
22 mu_0       0.4      0.996       0.955  0.0291            3.30
23 mu_0       0.5      1.02        0.977  0.163             2.25
24 mu_0       0.6      1.06        1.00   0.353             2.44
25 mu_0       0.7      1.05        1.00   0.407             2.31
26 mu_0       0.8      0.988       0.974  0.111             1.88
27 mu_0       0.9      0.971       0.962  0.00557           2.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.807   0.0000638   2.77e-16     37.9 
 2 mu         0.2      1.15    0.00576     3.63e-11     29.2 
 3 mu         0.3      1.06    0.0648      3.58e- 8     14.8 
 4 mu         0.4      1.01    0.284       4.76e- 6      7.91
 5 mu         0.5      0.972   0.692       2.12e- 4      6.34
 6 mu         0.6      0.936   0.869       4.69e- 3      2.77
 7 mu         0.7      0.997   1.03        1.33e- 4      4.88
 8 mu         0.8      1.15    0.607       3.02e- 7      5.09
 9 mu         0.9      1.12    0.0854      6.56e-12      9.44
10 mu_1       0.1      1.33    0.000430    2.77e-15     47.4 
11 mu_1       0.2      1.23    0.0164      1.82e-10     21.7 
12 mu_1       0.3      1.07    0.158       1.19e- 7      9.85
13 mu_1       0.4      1.01    0.528       1.19e- 5      8.32
14 mu_1       0.5      0.958   0.839       4.23e- 4      5.34
15 mu_1       0.6      0.942   0.825       2.20e- 3      3.34
16 mu_1       0.7      1.03    0.978       3.00e- 5      5.04
17 mu_1       0.8      1.17    0.474       5.96e- 8      5.21
18 mu_1       0.9      1.11    0.0518      1.15e-12      9.79
19 mu_0       0.1      0.748   0.00000724  0            36.9 
20 mu_0       0.2      1.12    0.00209     0            31.9 
21 mu_0       0.3      1.05    0.0271      0            16.9 
22 mu_0       0.4      1.01    0.167       0             7.63
23 mu_0       0.5      0.986   0.454       0             7.34
24 mu_0       0.6      0.928   0.783       0             3.39
25 mu_0       0.7      0.911   0.834       0             4.52
26 mu_0       0.8      1.04    0.735       0             5.07
27 mu_0       0.9      1.21    0.172       0             6.68
[1] "Total run time was 43.713 seconds"
