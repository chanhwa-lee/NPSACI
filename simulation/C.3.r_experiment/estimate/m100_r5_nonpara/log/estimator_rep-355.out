
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1322"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  8  1  4 11  6  5  4  8  8  8  3  5 11  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02618 0.34966 0.62653 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
811 511 
[1] "treatment indicator table: "

  0   1 
430 892 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.226 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.399 0.162 
 2 mu         0.1   0.2 0.522 0.215 
 3 mu         0.1   0.3 0.549 0.237 
 4 mu         0.1   0.4 0.652 0.247 
 5 mu         0.1   0.5 0.675 0.260 
 6 mu         0.2   0.1 0.304 0.0815
 7 mu         0.2   0.2 0.396 0.115 
 8 mu         0.2   0.3 0.428 0.125 
 9 mu         0.2   0.4 0.505 0.127 
10 mu         0.2   0.5 0.520 0.132 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.12       0.0162  0.00000000821     27.9 
 2 mu         0.2      0.923      0.137   0.0000298         12.5 
 3 mu         0.3      0.855      0.489   0.00163            4.91
 4 mu         0.4      0.898      0.806   0.0228             3.09
 5 mu         0.5      0.982      0.935   0.131              3.79
 6 mu         0.6      1.05       1.00    0.257              2.78
 7 mu         0.7      1.06       1.02    0.141              2.39
 8 mu         0.8      0.990      0.939   0.111              2.28
 9 mu         0.9      0.983      0.777   0.00397            5.41
10 mu_1       0.1      1.06       0.0701  0.0000000562      18.8 
11 mu_1       0.2      0.855      0.314   0.000110           6.56
12 mu_1       0.3      0.864      0.675   0.00404            3.68
13 mu_1       0.4      0.931      0.869   0.0428             3.10
14 mu_1       0.5      1.01       0.961   0.122              3.83
15 mu_1       0.6      1.07       1.06    0.197              2.57
16 mu_1       0.7      1.05       1.00    0.133              2.44
17 mu_1       0.8      0.979      0.916   0.0766             2.30
18 mu_1       0.9      0.991      0.756   0.00250            5.89
19 mu_0       0.1      1.13       0.00967 0.00000000288     29.3 
20 mu_0       0.2      0.940      0.0978  0.00000965        13.9 
21 mu_0       0.3      0.851      0.392   0.000593           6.10
22 mu_0       0.4      0.876      0.698   0.00952            3.40
23 mu_0       0.5      0.949      0.906   0.0705             3.76
24 mu_0       0.6      1.03       0.985   0.153              3.30
25 mu_0       0.7      1.07       1.02    0.0903             2.75
26 mu_0       0.8      1.03       0.978   0.0202             2.62
27 mu_0       0.9      0.918      0.853   0.000213           2.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.570   0.0000133   2.44e-17     40.8 
 2 mu         0.2      1.12    0.00362     7.05e-12     39.7 
 3 mu         0.3      1.26    0.0490      1.04e- 8     19.2 
 4 mu         0.4      1.16    0.267       1.85e- 6     16.9 
 5 mu         0.5      1.15    0.708       1.03e- 4      8.34
 6 mu         0.6      1.26    1.02        2.73e- 3      7.00
 7 mu         0.7      1.34    1.27        1.18e- 3      7.93
 8 mu         0.8      1.30    1.03        6.89e- 6      7.47
 9 mu         0.9      1.32    0.273       6.73e-10      7.92
10 mu_1       0.1      1.00    0.0000954   2.31e-16     58.2 
11 mu_1       0.2      1.33    0.0122      3.53e-11     28.3 
12 mu_1       0.3      1.30    0.114       3.47e- 8     20.8 
13 mu_1       0.4      1.19    0.452       4.62e- 6     14.1 
14 mu_1       0.5      1.21    0.736       2.05e- 4      6.13
15 mu_1       0.6      1.30    1.14        4.55e- 3      7.78
16 mu_1       0.7      1.34    1.22        3.74e- 4      7.55
17 mu_1       0.8      1.28    0.845       1.91e- 6      7.47
18 mu_1       0.9      1.31    0.204       1.66e-10      8.80
19 mu_0       0.1      0.523   0.00000423  0            38.8 
20 mu_0       0.2      1.07    0.00133     0            42.5 
21 mu_0       0.3      1.24    0.0189      0            22.0 
22 mu_0       0.4      1.14    0.120       0            18.8 
23 mu_0       0.5      1.10    0.500       0            11.1 
24 mu_0       0.6      1.21    0.792       0             5.84
25 mu_0       0.7      1.35    1.22        0             8.81
26 mu_0       0.8      1.38    1.28        0             7.47
27 mu_0       0.9      1.38    0.686       0             7.68
[1] "Total run time was 71.441 seconds"
