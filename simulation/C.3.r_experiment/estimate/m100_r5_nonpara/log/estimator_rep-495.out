
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1225"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  6  6  6  5  8  4 10  4  6  7  6  7  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02475 0.34610 0.59571 1.00000 4.10031 
[1] "event indicator table: "

  0   1 
717 508 
[1] "treatment indicator table: "

  0   1 
459 766 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.083 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.755 0.165 
 2 mu         0.1   0.2 0.838 0.182 
 3 mu         0.1   0.3 0.868 0.188 
 4 mu         0.1   0.4 0.907 0.201 
 5 mu         0.1   0.5 0.944 0.205 
 6 mu         0.2   0.1 0.591 0.0831
 7 mu         0.2   0.2 0.700 0.0947
 8 mu         0.2   0.3 0.736 0.0995
 9 mu         0.2   0.4 0.771 0.108 
10 mu         0.2   0.5 0.839 0.111 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.27         0.149 0.000000430     20.6 
 2 mu         0.2      1.29         0.668 0.000687        10.7 
 3 mu         0.3      1.21         0.928 0.0288           8.30
 4 mu         0.4      1.06         1.03  0.117            3.72
 5 mu         0.5      0.962        0.938 0.236            1.88
 6 mu         0.6      0.923        0.887 0.131            1.54
 7 mu         0.7      0.929        0.968 0.193            1.66
 8 mu         0.8      0.979        0.952 0.0843           2.20
 9 mu         0.9      1.03         0.900 0.00170          4.87
10 mu_1       0.1      1.14         0.454 0.00000258      11.1 
11 mu_1       0.2      1.28         0.800 0.00206         11.5 
12 mu_1       0.3      1.14         0.928 0.0613           6.47
13 mu_1       0.4      1.01         0.933 0.208            2.60
14 mu_1       0.5      0.944        0.912 0.126            1.77
15 mu_1       0.6      0.923        0.901 0.160            1.66
16 mu_1       0.7      0.939        0.955 0.191            1.65
17 mu_1       0.8      0.990        0.970 0.0592           2.53
18 mu_1       0.9      1.04         0.864 0.00109          5.26
19 mu_0       0.1      1.28         0.111 0.000000191     22.8 
20 mu_0       0.2      1.29         0.595 0.000343        10.5 
21 mu_0       0.3      1.24         0.891 0.0126           9.08
22 mu_0       0.4      1.09         1.00  0.0564           4.47
23 mu_0       0.5      0.979        0.951 0.168            2.03
24 mu_0       0.6      0.923        0.903 0.0862           1.60
25 mu_0       0.7      0.905        0.857 0.198            1.78
26 mu_0       0.8      0.937        0.945 0.0320           2.00
27 mu_0       0.9      0.988        0.898 0.000877         2.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.828    0.000195   1.20e-18     26.9 
 2 mu         0.2      1.05     0.00931    1.25e-12     13.6 
 3 mu         0.3      1.06     0.0970     4.17e- 9     10.6 
 4 mu         0.4      1.02     0.342      1.31e- 6      5.28
 5 mu         0.5      0.952    0.746      1.14e- 4      3.53
 6 mu         0.6      0.970    0.901      4.44e- 4      4.25
 7 mu         0.7      1.11     0.946      3.41e- 6      5.61
 8 mu         0.8      1.24     1.02       3.01e- 9      5.02
 9 mu         0.9      1.40     0.199      1.45e-14     14.5 
10 mu_1       0.1      1.25     0.00156    1.20e-17     26.9 
11 mu_1       0.2      1.16     0.0302     6.27e-12     15.1 
12 mu_1       0.3      1.08     0.236      1.39e- 8      7.85
13 mu_1       0.4      0.994    0.558      3.29e- 6      5.28
14 mu_1       0.5      0.927    0.866      2.28e- 4      3.77
15 mu_1       0.6      0.985    0.853      7.40e- 5      4.85
16 mu_1       0.7      1.14     0.987      4.87e- 7      5.49
17 mu_1       0.8      1.26     0.847      3.76e-10      5.33
18 mu_1       0.9      1.42     0.148      1.61e-15     16.2 
19 mu_0       0.1      0.781    0.0000440  0            26.9 
20 mu_0       0.2      1.03     0.00409    0            14.5 
21 mu_0       0.3      1.05     0.0341     0            11.8 
22 mu_0       0.4      1.04     0.182      0             5.70
23 mu_0       0.5      0.976    0.573      0             4.23
24 mu_0       0.6      0.948    0.905      0             3.79
25 mu_0       0.7      1.04     0.894      0             5.91
26 mu_0       0.8      1.16     0.821      0             6.27
27 mu_0       0.9      1.23     0.202      0             7.30
[1] "Total run time was 60.499 seconds"
