
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1271"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4  8  7  8  2  6  7  6  8  4  4  6  4 10  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04585 0.38476 0.61349 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
765 506 
[1] "treatment indicator table: "

  0   1 
453 818 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 89.659 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.102  0.0639
 2 mu         0.1   0.2 0.0911 0.0672
 3 mu         0.1   0.3 0.0989 0.0819
 4 mu         0.1   0.4 0.0907 0.0908
 5 mu         0.1   0.5 0.128  0.0951
 6 mu         0.2   0.1 0.155  0.0443
 7 mu         0.2   0.2 0.177  0.0498
 8 mu         0.2   0.3 0.210  0.0604
 9 mu         0.2   0.4 0.225  0.0660
10 mu         0.2   0.5 0.255  0.0699
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.395      0.00672 0.0000000154      11.4 
 2 mu         0.2      0.571      0.0975  0.0000224          6.78
 3 mu         0.3      0.683      0.332   0.00131            3.65
 4 mu         0.4      0.783      0.659   0.0199             2.81
 5 mu         0.5      0.889      0.884   0.137              2.53
 6 mu         0.6      0.973      0.978   0.394              1.77
 7 mu         0.7      1.02       1.02    0.398              1.91
 8 mu         0.8      1.04       1.01    0.115              2.41
 9 mu         0.9      0.986      0.643   0.00363            8.08
10 mu_1       0.1      0.466      0.0358  0.000000121        9.27
11 mu_1       0.2      0.661      0.241   0.0000881          5.99
12 mu_1       0.3      0.754      0.582   0.00345            3.11
13 mu_1       0.4      0.840      0.815   0.0392             2.87
14 mu_1       0.5      0.928      0.944   0.216              2.16
15 mu_1       0.6      0.993      1.00    0.389              1.69
16 mu_1       0.7      1.03       1.05    0.325              1.98
17 mu_1       0.8      1.04       1.01    0.0913             2.75
18 mu_1       0.9      0.975      0.581   0.00261            8.76
19 mu_0       0.1      0.387      0.00393 0.00000000367     12.4 
20 mu_0       0.2      0.549      0.0629  0.00000597         7.16
21 mu_0       0.3      0.653      0.229   0.000398           4.17
22 mu_0       0.4      0.745      0.563   0.00700            2.77
23 mu_0       0.5      0.850      0.797   0.0574             2.90
24 mu_0       0.6      0.943      0.976   0.278              2.39
25 mu_0       0.7      1.01       1.03    0.339              1.74
26 mu_0       0.8      1.06       1.05    0.212              2.11
27 mu_0       0.9      1.09       1.04    0.0128             3.09
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.519   0.0000230   8.85e-17     31.3 
 2 mu         0.2      1.19    0.00442     4.13e-11     43.4 
 3 mu         0.3      1.71    0.0954      8.00e- 8     29.3 
 4 mu         0.4      1.72    0.339       1.62e- 5     29.9 
 5 mu         0.5      1.39    0.801       9.38e- 4     17.7 
 6 mu         0.6      1.14    0.989       2.40e- 2      5.91
 7 mu         0.7      1.16    1.20        1.65e- 2      3.55
 8 mu         0.8      1.37    0.772       1.89e- 4      7.84
 9 mu         0.9      1.37    0.106       4.68e- 8     13.3 
10 mu_1       0.1      1.13    0.000155    8.41e-16     56.9 
11 mu_1       0.2      1.61    0.0138      1.96e-10     39.4 
12 mu_1       0.3      1.84    0.193       2.53e- 7     33.8 
13 mu_1       0.4      1.60    0.556       3.85e- 5     26.7 
14 mu_1       0.5      1.24    0.952       1.78e- 3     12.6 
15 mu_1       0.6      1.09    0.990       3.80e- 2      3.52
16 mu_1       0.7      1.18    1.12        7.45e- 3      4.35
17 mu_1       0.8      1.40    0.620       7.46e- 5      8.40
18 mu_1       0.9      1.34    0.0738      1.64e- 8     14.0 
19 mu_0       0.1      0.450   0.00000747  0            28.4 
20 mu_0       0.2      1.08    0.00187     0            44.3 
21 mu_0       0.3      1.65    0.0417      0            34.3 
22 mu_0       0.4      1.80    0.188       0            32.1 
23 mu_0       0.5      1.53    0.549       0            22.8 
24 mu_0       0.6      1.23    0.986       0             9.50
25 mu_0       0.7      1.12    1.17        0             3.14
26 mu_0       0.8      1.28    1.05        0             5.60
27 mu_0       0.9      1.64    0.384       0            12.6 
[1] "Total run time was 96.428 seconds"
