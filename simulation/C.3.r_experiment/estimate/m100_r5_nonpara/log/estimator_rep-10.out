
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1258"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  9  2  6  6  5  9  8  7  7  1 10  5  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02487 0.35534 0.62733 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
769 489 
[1] "treatment indicator table: "

  0   1 
475 783 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 672
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 586
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.697 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.235 0.106
 2 mu         0.1   0.2 0.332 0.130
 3 mu         0.1   0.3 0.366 0.143
 4 mu         0.1   0.4 0.472 0.187
 5 mu         0.1   0.5 0.465 0.169
 6 mu         0.2   0.1 0.365 0.114
 7 mu         0.2   0.2 0.487 0.136
 8 mu         0.2   0.3 0.546 0.152
 9 mu         0.2   0.4 0.665 0.194
10 mu         0.2   0.5 0.680 0.183
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.396      0.0115  0.000000654     16.8 
 2 mu         0.2      0.883      0.139   0.000546        21.7 
 3 mu         0.3      1.21       0.519   0.0135          22.4 
 4 mu         0.4      1.20       0.858   0.100           11.5 
 5 mu         0.5      1.09       0.999   0.348            5.85
 6 mu         0.6      1.03       1.01    0.560            2.06
 7 mu         0.7      1.01       1.01    0.256            2.12
 8 mu         0.8      0.998      0.855   0.0474           6.30
 9 mu         0.9      0.894      0.397   0.000838        10.5 
10 mu_1       0.1      0.627      0.0563  0.00000365      15.3 
11 mu_1       0.2      1.15       0.288   0.00154         27.2 
12 mu_1       0.3      1.30       0.762   0.0301          18.7 
13 mu_1       0.4      1.19       0.932   0.170            9.64
14 mu_1       0.5      1.08       1.01    0.394            4.04
15 mu_1       0.6      1.02       1.03    0.420            1.50
16 mu_1       0.7      1.01       1.01    0.193            2.48
17 mu_1       0.8      0.992      0.799   0.0324           6.88
18 mu_1       0.9      0.879      0.345   0.000533        10.4 
19 mu_0       0.1      0.370      0.00745 0.000000309     16.9 
20 mu_0       0.2      0.816      0.0919  0.000252        20.4 
21 mu_0       0.3      1.17       0.403   0.00642         23.9 
22 mu_0       0.4      1.20       0.767   0.0537          12.8 
23 mu_0       0.5      1.11       0.966   0.145            7.65
24 mu_0       0.6      1.04       0.993   0.281            2.89
25 mu_0       0.7      1.01       1.02    0.403            1.57
26 mu_0       0.8      1.02       1.02    0.107            3.97
27 mu_0       0.9      1.03       0.741   0.00358         11.1 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.03    0.000170   3.85e-14    415.  
 2 mu         0.2      10.4     0.0131     3.99e- 9    909.  
 3 mu         0.3       8.68    0.107      3.01e- 6    707.  
 4 mu         0.4       4.64    0.348      2.94e- 4    307.  
 5 mu         0.5       2.03    0.823      9.08e- 3     80.8 
 6 mu         0.6       1.16    1.04       3.99e- 2     12.0 
 7 mu         0.7       1.28    0.960      1.29e- 3     14.1 
 8 mu         0.8       2.14    0.525      8.66e- 6     69.4 
 9 mu         0.9       3.38    0.0724     1.34e- 9    145.  
10 mu_1       0.1      10.2     0.000929   3.45e-13    890.  
11 mu_1       0.2      11.2     0.0450     1.79e- 8    974.  
12 mu_1       0.3       6.71    0.254      8.98e- 6    505.  
13 mu_1       0.4       3.11    0.611      6.58e- 4    165.  
14 mu_1       0.5       1.48    0.996      1.62e- 2     34.6 
15 mu_1       0.6       1.08    1.01       8.87e- 3      5.45
16 mu_1       0.7       1.35    0.895      2.46e- 4     18.2 
17 mu_1       0.8       2.29    0.408      1.44e- 6     78.1 
18 mu_1       0.9       3.42    0.0439     1.98e-10    145.  
19 mu_0       0.1       4.45    0.0000669  0           363.  
20 mu_0       0.2      10.2     0.00601    0           893.  
21 mu_0       0.3       9.52    0.0430     0           793.  
22 mu_0       0.4       5.66    0.210      0           402.  
23 mu_0       0.5       2.59    0.565      0           127.  
24 mu_0       0.6       1.28    0.983      0            23.5 
25 mu_0       0.7       1.09    1.01       0             7.87
26 mu_0       0.8       1.57    0.884      0            34.7 
27 mu_0       0.9       2.96    0.185      0           145.  
[1] "Total run time was 64.942 seconds"
