
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1277"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  7  7  6  1  6  8  9  6  7  2 10  8  8  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02951 0.33116 0.58273 0.99010 5.41900 
[1] "event indicator table: "

  0   1 
753 524 
[1] "treatment indicator table: "

  0   1 
466 811 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 573
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 704
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 37.76 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.313 0.105 
 2 mu         0.1   0.2 0.510 0.244 
 3 mu         0.1   0.3 0.510 0.215 
 4 mu         0.1   0.4 0.492 0.200 
 5 mu         0.1   0.5 0.511 0.173 
 6 mu         0.2   0.1 0.290 0.0881
 7 mu         0.2   0.2 0.469 0.219 
 8 mu         0.2   0.3 0.474 0.189 
 9 mu         0.2   0.4 0.467 0.172 
10 mu         0.2   0.5 0.479 0.143 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.582      0.00883  7.50e-11     11.7 
 2 mu         0.2      0.594      0.137    6.85e- 7      4.94
 3 mu         0.3      0.731      0.417    1.04e- 4      4.24
 4 mu         0.4      0.836      0.671    2.78e- 3      3.03
 5 mu         0.5      0.907      0.802    2.72e- 2      2.21
 6 mu         0.6      0.967      0.960    1.35e- 1      1.96
 7 mu         0.7      1.03       1.04     2.24e- 1      2.05
 8 mu         0.8      1.10       1.00     2.83e- 2      3.53
 9 mu         0.9      1.15       1.02     4.39e- 4      6.10
10 mu_1       0.1      0.518      0.0369   5.52e-10      5.93
11 mu_1       0.2      0.662      0.291    2.52e- 6      4.94
12 mu_1       0.3      0.786      0.593    2.56e- 4      3.60
13 mu_1       0.4      0.872      0.826    5.15e- 3      2.41
14 mu_1       0.5      0.934      0.872    4.08e- 2      2.18
15 mu_1       0.6      0.991      1.00     1.73e- 1      1.83
16 mu_1       0.7      1.05       1.02     1.35e- 1      2.46
17 mu_1       0.8      1.12       1.00     1.56e- 2      3.97
18 mu_1       0.9      1.16       1.00     2.71e- 4      6.74
19 mu_0       0.1      0.589      0.00587  2.19e-11     13.0 
20 mu_0       0.2      0.578      0.0998   2.25e- 7      4.94
21 mu_0       0.3      0.707      0.342    3.87e- 5      4.52
22 mu_0       0.4      0.812      0.603    1.19e- 3      3.45
23 mu_0       0.5      0.880      0.756    1.36e- 2      2.29
24 mu_0       0.6      0.930      0.861    7.81e- 2      2.18
25 mu_0       0.7      0.981      0.966    2.10e- 1      2.04
26 mu_0       0.8      1.04       1.02     7.83e- 2      2.52
27 mu_0       0.9      1.11       0.993    1.95e- 3      4.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.00   0.0000380   1.91e-15    567.  
 2 mu         0.2       7.16   0.00493     3.96e-10    621.  
 3 mu         0.3       4.58   0.0544      4.48e- 7    321.  
 4 mu         0.4       2.38   0.221       5.83e- 5    105.  
 5 mu         0.5       1.36   0.717       2.25e- 3     22.0 
 6 mu         0.6       1.10   0.904       3.80e- 3      3.47
 7 mu         0.7       1.20   0.911       6.05e- 5      8.77
 8 mu         0.8       1.38   1.15        1.38e- 7     11.2 
 9 mu         0.9       1.36   0.266       2.99e-12     14.3 
10 mu_1       0.1       9.46   0.000253    1.72e-14    872.  
11 mu_1       0.2       6.07   0.0150      1.78e- 9    477.  
12 mu_1       0.3       3.08   0.126       1.34e- 6    165.  
13 mu_1       0.4       1.66   0.374       1.31e- 4     40.3 
14 mu_1       0.5       1.16   0.867       4.05e- 3      6.78
15 mu_1       0.6       1.10   0.970       1.00e- 3      4.15
16 mu_1       0.7       1.25   1.02        1.37e- 5      9.74
17 mu_1       0.8       1.42   1.13        2.72e- 8     10.9 
18 mu_1       0.9       1.36   0.196       5.24e-13     15.9 
19 mu_0       0.1       5.62   0.00000720  0           533.  
20 mu_0       0.2       7.44   0.00160     0           656.  
21 mu_0       0.3       5.22   0.0197      0           389.  
22 mu_0       0.4       2.85   0.0986      0           148.  
23 mu_0       0.5       1.56   0.416       0            37.3 
24 mu_0       0.6       1.09   0.952       0             5.77
25 mu_0       0.7       1.07   0.945       0             6.50
26 mu_0       0.8       1.25   0.871       0            12.5 
27 mu_0       0.9       1.32   0.212       0            11.9 
[1] "Total run time was 41.179 seconds"
