
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1259"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  4  4  6  5  6  6  7  4  6 14  8  3  2  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01843 0.32680 0.60461 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
768 491 
[1] "treatment indicator table: "

  0   1 
512 747 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 71.965 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.375 0.0812
 2 mu         0.1   0.2 0.459 0.0965
 3 mu         0.1   0.3 0.498 0.104 
 4 mu         0.1   0.4 0.616 0.125 
 5 mu         0.1   0.5 0.622 0.125 
 6 mu         0.2   0.1 0.348 0.0542
 7 mu         0.2   0.2 0.422 0.0622
 8 mu         0.2   0.3 0.451 0.0643
 9 mu         0.2   0.4 0.528 0.0716
10 mu         0.2   0.5 0.543 0.0728
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.987        0.163 0.00000120      15.1 
 2 mu         0.2      0.984        0.708 0.000988         6.25
 3 mu         0.3      0.977        0.922 0.0303           3.23
 4 mu         0.4      0.983        0.931 0.161            2.11
 5 mu         0.5      0.991        0.987 0.357            1.81
 6 mu         0.6      0.999        1.00  0.463            1.82
 7 mu         0.7      1.00         1.04  0.287            1.87
 8 mu         0.8      1.00         0.960 0.0499           2.01
 9 mu         0.9      0.999        0.801 0.000782         4.19
10 mu_1       0.1      1.06         0.461 0.00000667       8.89
11 mu_1       0.2      0.943        0.899 0.00278          3.16
12 mu_1       0.3      0.949        0.936 0.0586           2.65
13 mu_1       0.4      0.971        0.901 0.250            2.11
14 mu_1       0.5      0.990        0.997 0.397            1.58
15 mu_1       0.6      1.00         1.02  0.394            1.92
16 mu_1       0.7      1.00         1.04  0.238            1.91
17 mu_1       0.8      1.00         0.958 0.0372           2.13
18 mu_1       0.9      1.00         0.740 0.000521         4.45
19 mu_0       0.1      0.979        0.125 0.000000592     15.8 
20 mu_0       0.2      0.995        0.591 0.000540         7.22
21 mu_0       0.3      0.989        0.935 0.0165           4.07
22 mu_0       0.4      0.991        0.923 0.0951           2.27
23 mu_0       0.5      0.992        0.958 0.232            2.05
24 mu_0       0.6      0.995        1.01  0.477            1.66
25 mu_0       0.7      0.998        0.980 0.353            2.03
26 mu_0       0.8      0.998        1.09  0.101            2.08
27 mu_0       0.9      0.989        0.877 0.00313          2.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.67     0.000213   5.25e-15     38.2 
 2 mu         0.2      1.09     0.0157     6.11e-10     27.8 
 3 mu         0.3      0.776    0.139      5.27e- 7      9.63
 4 mu         0.4      0.824    0.575      6.01e- 5      2.92
 5 mu         0.5      0.965    0.998      2.22e- 3      2.68
 6 mu         0.6      1.05     1.09       1.05e- 4      2.67
 7 mu         0.7      1.07     1.10       6.90e- 7      2.75
 8 mu         0.8      1.12     0.580      5.34e-10      4.64
 9 mu         0.9      1.31     0.0517     2.29e-15     15.6 
10 mu_1       0.1      1.58     0.00123    4.96e-14     45.1 
11 mu_1       0.2      0.828    0.0456     2.89e- 9     17.4 
12 mu_1       0.3      0.756    0.306      1.66e- 6      4.01
13 mu_1       0.4      0.897    0.699      1.42e- 4      2.70
14 mu_1       0.5      1.02     1.16       5.11e- 4      2.95
15 mu_1       0.6      1.07     1.10       9.21e- 6      2.45
16 mu_1       0.7      1.09     1.01       5.19e- 8      2.90
17 mu_1       0.8      1.15     0.457      3.51e-11      5.42
18 mu_1       0.9      1.34     0.0328     1.34e-16     17.3 
19 mu_0       0.1      1.68     0.0000675  0            40.2 
20 mu_0       0.2      1.16     0.00735    0            30.4 
21 mu_0       0.3      0.784    0.0773     0            12.0 
22 mu_0       0.4      0.776    0.378      0             3.24
23 mu_0       0.5      0.909    0.856      0             2.41
24 mu_0       0.6      1.01     1.06       0             3.01
25 mu_0       0.7      1.03     1.03       0             2.41
26 mu_0       0.8      1.00     0.750      0             3.57
27 mu_0       0.9      1.05     0.107      0             8.05
[1] "Total run time was 77.05 seconds"
