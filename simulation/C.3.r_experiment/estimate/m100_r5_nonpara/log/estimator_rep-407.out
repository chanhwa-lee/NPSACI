
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1262"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  8 10  6  5  5  6  6  5  4  2  3 10  6  4 14 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02736 0.31989 0.57907 1.00000 4.98796 
[1] "event indicator table: "

  0   1 
729 533 
[1] "treatment indicator table: "

  0   1 
512 750 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 38.194 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.392 0.106 
 2 mu         0.1   0.2 0.550 0.147 
 3 mu         0.1   0.3 0.611 0.145 
 4 mu         0.1   0.4 0.685 0.164 
 5 mu         0.1   0.5 0.738 0.169 
 6 mu         0.2   0.1 0.408 0.0712
 7 mu         0.2   0.2 0.558 0.0968
 8 mu         0.2   0.3 0.633 0.0924
 9 mu         0.2   0.4 0.698 0.104 
10 mu         0.2   0.5 0.768 0.100 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.06        0.119  0.0000000586     19.7 
 2 mu         0.2      1.17        0.563  0.0000861         8.59
 3 mu         0.3      1.15        0.886  0.00337           6.76
 4 mu         0.4      1.06        0.985  0.0326            3.65
 5 mu         0.5      1.03        1.05   0.140             1.79
 6 mu         0.6      1.02        1.00   0.203             2.72
 7 mu         0.7      0.957       0.899  0.207             2.03
 8 mu         0.8      0.883       0.886  0.0202            2.61
 9 mu         0.9      0.894       0.631  0.000128          5.93
10 mu_1       0.1      1.09        0.348  0.000000353      12.0 
11 mu_1       0.2      1.19        0.802  0.000279          8.23
12 mu_1       0.3      1.11        0.966  0.00729           5.82
13 mu_1       0.4      1.03        1.01   0.0533            2.68
14 mu_1       0.5      1.01        1.03   0.187             2.14
15 mu_1       0.6      0.997       0.970  0.166             2.75
16 mu_1       0.7      0.935       0.871  0.140             1.94
17 mu_1       0.8      0.875       0.846  0.0136            2.95
18 mu_1       0.9      0.898       0.539  0.0000778         6.45
19 mu_0       0.1      1.05        0.0820 0.0000000259     20.8 
20 mu_0       0.2      1.17        0.470  0.0000379         9.37
21 mu_0       0.3      1.16        0.875  0.00169           7.17
22 mu_0       0.4      1.08        0.938  0.0188            4.30
23 mu_0       0.5      1.04        1.07   0.0922            1.96
24 mu_0       0.6      1.04        1.06   0.257             2.66
25 mu_0       0.7      1.01        0.981  0.164             2.51
26 mu_0       0.8      0.917       0.884  0.0464            2.08
27 mu_0       0.9      0.855       0.676  0.000584          3.20
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.89    0.000155   9.43e-15    176.  
 2 mu         0.2       2.03    0.0113     1.90e- 9     53.6 
 3 mu         0.3       1.35    0.102      1.63e- 6     12.5 
 4 mu         0.4       1.24    0.456      1.86e- 4     12.1 
 5 mu         0.5       1.19    0.854      5.56e- 3      6.21
 6 mu         0.6       1.15    1.13       2.45e- 3      3.91
 7 mu         0.7       1.24    1.13       2.87e- 5      3.68
 8 mu         0.8       1.62    0.615      4.99e- 8      8.93
 9 mu         0.9       2.37    0.0482     8.57e-13     30.2 
10 mu_1       0.1       2.39    0.000966   0           104.  
11 mu_1       0.2       1.26    0.0305     0            24.8 
12 mu_1       0.3       1.19    0.201      0            13.8 
13 mu_1       0.4       1.22    0.556      0            10.7 
14 mu_1       0.5       1.18    0.986      0             5.79
15 mu_1       0.6       1.18    1.19       0             3.59
16 mu_1       0.7       1.32    0.989      0             3.80
17 mu_1       0.8       1.75    0.451      0            10.1 
18 mu_1       0.9       2.46    0.0323     0            31.6 
19 mu_0       0.1       4.06    0.0000540  0           184.  
20 mu_0       0.2       2.22    0.00370    0            63.0 
21 mu_0       0.3       1.42    0.0464     0            15.1 
22 mu_0       0.4       1.26    0.302      0            13.0 
23 mu_0       0.5       1.19    0.704      0             8.03
24 mu_0       0.6       1.09    0.990      0             4.81
25 mu_0       0.7       1.03    0.956      0             3.41
26 mu_0       0.8       1.12    0.524      0             5.46
27 mu_0       0.9       1.58    0.0381     0            17.5 
[1] "Total run time was 41.444 seconds"
