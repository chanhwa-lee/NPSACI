
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1342"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  2  7  3  5  4  2  7  6  6 13 13  7  4  5  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04396 0.34839 0.60807 1.00000 4.59374 
[1] "event indicator table: "

  0   1 
797 545 
[1] "treatment indicator table: "

  0   1 
494 848 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 679
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.964 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.320 0.0861
 2 mu         0.1   0.2 0.380 0.113 
 3 mu         0.1   0.3 0.396 0.126 
 4 mu         0.1   0.4 0.397 0.135 
 5 mu         0.1   0.5 0.474 0.143 
 6 mu         0.2   0.1 0.368 0.0683
 7 mu         0.2   0.2 0.446 0.0873
 8 mu         0.2   0.3 0.482 0.0954
 9 mu         0.2   0.4 0.502 0.105 
10 mu         0.2   0.5 0.582 0.121 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.984       0.0497 0.000000125      16.8 
 2 mu         0.2      1.21        0.384  0.000135         15.4 
 3 mu         0.3      1.20        0.902  0.00569          12.2 
 4 mu         0.4      1.11        1.09   0.0601            4.78
 5 mu         0.5      1.02        1.02   0.278             2.09
 6 mu         0.6      0.965       0.968  0.427             1.74
 7 mu         0.7      0.935       0.904  0.181             1.69
 8 mu         0.8      0.933       0.862  0.0392            2.97
 9 mu         0.9      0.915       0.528  0.00111           5.53
10 mu_1       0.1      1.24        0.172  0.000000813      11.5 
11 mu_1       0.2      1.26        0.708  0.000440         17.1 
12 mu_1       0.3      1.17        1.09   0.0125            9.29
13 mu_1       0.4      1.07        1.04   0.100             3.17
14 mu_1       0.5      0.997       1.00   0.306             2.00
15 mu_1       0.6      0.948       0.967  0.375             1.61
16 mu_1       0.7      0.928       0.878  0.150             1.77
17 mu_1       0.8      0.932       0.862  0.0303            3.07
18 mu_1       0.9      0.913       0.493  0.000655          6.14
19 mu_0       0.1      0.956       0.0356 0.0000000486     17.4 
20 mu_0       0.2      1.20        0.303  0.0000582        15.0 
21 mu_0       0.3      1.21        0.803  0.00277          13.4 
22 mu_0       0.4      1.13        1.03   0.0334            5.96
23 mu_0       0.5      1.05        1.06   0.179             2.44
24 mu_0       0.6      0.991       1.02   0.443             1.94
25 mu_0       0.7      0.952       0.989  0.254             1.55
26 mu_0       0.8      0.937       0.936  0.0748            2.58
27 mu_0       0.9      0.937       0.772  0.00431           3.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.685   0.0000300   5.06e-17     37.4 
 2 mu         0.2      0.932   0.00338     2.36e-11     36.4 
 3 mu         0.3      1.01    0.0500      4.57e- 8     16.5 
 4 mu         0.4      1.07    0.321       9.27e- 6      8.83
 5 mu         0.5      1.10    0.780       5.36e- 4      9.79
 6 mu         0.6      1.11    0.898       1.37e- 2      5.89
 7 mu         0.7      1.18    1.22        3.44e- 3      3.28
 8 mu         0.8      1.39    0.774       3.47e- 5      5.93
 9 mu         0.9      1.63    0.0880      1.07e- 8     17.4 
10 mu_1       0.1      1.07    0.000182    4.81e-16     53.4 
11 mu_1       0.2      0.981   0.0105      1.12e-10     26.0 
12 mu_1       0.3      1.03    0.110       1.45e- 7      8.51
13 mu_1       0.4      1.08    0.525       2.20e- 5     10.3 
14 mu_1       0.5      1.11    0.888       1.02e- 3      9.14
15 mu_1       0.6      1.13    1.07        1.90e- 2      4.58
16 mu_1       0.7      1.22    1.31        7.03e- 4      3.52
17 mu_1       0.8      1.45    0.642       6.19e- 6      6.95
18 mu_1       0.9      1.65    0.0645      1.70e- 9     18.1 
19 mu_0       0.1      0.643   0.00000689  0            35.6 
20 mu_0       0.2      0.920   0.00145     0            38.9 
21 mu_0       0.3      0.997   0.0250      0            20.2 
22 mu_0       0.4      1.06    0.161       0             7.85
23 mu_0       0.5      1.09    0.582       0            10.4 
24 mu_0       0.6      1.08    0.855       0             7.85
25 mu_0       0.7      1.07    0.948       0             3.08
26 mu_0       0.8      1.15    1.04        0             4.56
27 mu_0       0.9      1.50    0.189       0            10.8 
[1] "Total run time was 58.026 seconds"
