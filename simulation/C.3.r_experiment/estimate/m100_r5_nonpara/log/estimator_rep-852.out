
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1289"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  5  7  7 11  4  7  7  3  6  6  5  4  9 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03587 0.35173 0.62510 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
775 514 
[1] "treatment indicator table: "

  0   1 
477 812 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.945 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.207 0.0528
 2 mu         0.1   0.2 0.302 0.0917
 3 mu         0.1   0.3 0.361 0.113 
 4 mu         0.1   0.4 0.388 0.103 
 5 mu         0.1   0.5 0.396 0.101 
 6 mu         0.2   0.1 0.274 0.0417
 7 mu         0.2   0.2 0.370 0.0651
 8 mu         0.2   0.3 0.452 0.0769
 9 mu         0.2   0.4 0.501 0.0757
10 mu         0.2   0.5 0.533 0.0782
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.624       0.0753 0.0000000385      9.98
 2 mu         0.2      0.990       0.432  0.0000469         6.93
 3 mu         0.3      1.11        0.939  0.00228           3.48
 4 mu         0.4      1.09        1.06   0.0284            2.56
 5 mu         0.5      1.06        1.04   0.160             2.32
 6 mu         0.6      1.03        1.04   0.415             1.71
 7 mu         0.7      0.980       0.999  0.265             1.74
 8 mu         0.8      0.933       0.934  0.0286            2.62
 9 mu         0.9      0.923       0.649  0.000283          6.78
10 mu_1       0.1      0.848       0.274  0.000000266       9.01
11 mu_1       0.2      1.12        0.778  0.000163          5.47
12 mu_1       0.3      1.13        1.06   0.00534           3.34
13 mu_1       0.4      1.07        1.05   0.0504            2.44
14 mu_1       0.5      1.04        1.05   0.232             2.21
15 mu_1       0.6      1.01        1.01   0.418             1.72
16 mu_1       0.7      0.966       0.956  0.194             1.80
17 mu_1       0.8      0.922       0.895  0.0190            2.74
18 mu_1       0.9      0.920       0.588  0.000171          7.38
19 mu_0       0.1      0.599       0.0556 0.0000000132     11.1 
20 mu_0       0.2      0.956       0.357  0.0000179         7.30
21 mu_0       0.3      1.11        0.846  0.000973          3.54
22 mu_0       0.4      1.10        1.05   0.0137            2.77
23 mu_0       0.5      1.07        1.02   0.0886            2.43
24 mu_0       0.6      1.05        1.04   0.329             2.14
25 mu_0       0.7      1.02        0.996  0.395             1.75
26 mu_0       0.8      0.976       0.975  0.0672            2.16
27 mu_0       0.9      0.949       0.889  0.000884          3.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.370    0.0000687  5.78e-19     18.8 
 2 mu         0.2      0.659    0.00812    6.06e-13     20.3 
 3 mu         0.3      0.815    0.122      2.01e- 9      9.13
 4 mu         0.4      0.975    0.420      6.35e- 7      3.57
 5 mu         0.5      1.03     0.824      5.51e- 5      2.68
 6 mu         0.6      0.981    1.02       2.11e- 3      2.69
 7 mu         0.7      0.964    0.945      4.99e- 5      2.95
 8 mu         0.8      1.09     0.651      7.57e- 8      4.40
 9 mu         0.9      1.36     0.0662     8.22e-13     14.5 
10 mu_1       0.1      0.687    0.000401   5.78e-18     28.2 
11 mu_1       0.2      0.827    0.0272     3.03e-12     15.2 
12 mu_1       0.3      0.947    0.283      6.71e- 9      5.83
13 mu_1       0.4      1.04     0.642      1.59e- 6      3.28
14 mu_1       0.5      1.03     1.00       1.10e- 4      2.83
15 mu_1       0.6      0.966    0.970      1.05e- 3      2.69
16 mu_1       0.7      0.974    0.949      1.07e- 5      3.16
17 mu_1       0.8      1.11     0.512      1.42e- 8      5.17
18 mu_1       0.9      1.38     0.0446     1.37e-13     15.1 
19 mu_0       0.1      0.335    0.0000280  0            17.8 
20 mu_0       0.2      0.617    0.00427    0            21.6 
21 mu_0       0.3      0.759    0.0619     0            10.9 
22 mu_0       0.4      0.931    0.238      0             4.82
23 mu_0       0.5      1.03     0.624      0             3.13
24 mu_0       0.6      1.00     0.890      0             2.88
25 mu_0       0.7      0.941    0.957      0             2.55
26 mu_0       0.8      0.996    0.836      0             3.80
27 mu_0       0.9      1.23     0.190      0             8.51
[1] "Total run time was 47.155 seconds"
