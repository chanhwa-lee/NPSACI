
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1149"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 10 12  6  7  6  6  9  7  8  5  1  6  6  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.07499 0.40328 0.67633 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
691 458 
[1] "treatment indicator table: "

  0   1 
373 776 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 557
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 83.35 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.187 0.0713
 2 mu         0.1   0.2 0.297 0.136 
 3 mu         0.1   0.3 0.315 0.135 
 4 mu         0.1   0.4 0.314 0.132 
 5 mu         0.1   0.5 0.410 0.161 
 6 mu         0.2   0.1 0.252 0.0647
 7 mu         0.2   0.2 0.385 0.118 
 8 mu         0.2   0.3 0.418 0.115 
 9 mu         0.2   0.4 0.441 0.114 
10 mu         0.2   0.5 0.525 0.138 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.425      0.00384 0.0000000139      12.7 
 2 mu         0.2      0.728      0.0779  0.0000146          9.98
 3 mu         0.3      0.907      0.315   0.000666           7.73
 4 mu         0.4      0.985      0.659   0.00906            5.51
 5 mu         0.5      1.01       0.906   0.0620             3.19
 6 mu         0.6      1.02       0.999   0.266              2.12
 7 mu         0.7      1.02       0.979   0.408              2.11
 8 mu         0.8      1.01       0.976   0.0933             3.64
 9 mu         0.9      0.973      0.691   0.00371            8.82
10 mu_1       0.1      0.791      0.0196  0.0000000930      14.1 
11 mu_1       0.2      0.910      0.196   0.0000611          9.04
12 mu_1       0.3      0.969      0.548   0.00186            7.08
13 mu_1       0.4      0.994      0.815   0.0191             4.40
14 mu_1       0.5      1.01       0.951   0.105              2.72
15 mu_1       0.6      1.01       0.966   0.378              1.89
16 mu_1       0.7      1.02       1.00    0.324              2.18
17 mu_1       0.8      1.01       0.935   0.0708             4.30
18 mu_1       0.9      0.972      0.631   0.00260            9.56
19 mu_0       0.1      0.384      0.00209 0.00000000322     12.5 
20 mu_0       0.2      0.682      0.0498  0.00000297        11.0 
21 mu_0       0.3      0.880      0.229   0.000152           8.00
22 mu_0       0.4      0.979      0.539   0.00237            6.55
23 mu_0       0.5      1.02       0.830   0.0190             3.87
24 mu_0       0.6      1.02       0.979   0.0982             2.47
25 mu_0       0.7      1.02       0.960   0.369              1.97
26 mu_0       0.8      1.01       0.999   0.183              2.36
27 mu_0       0.9      0.984      0.925   0.0137             2.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.11    0.0000929  7.34e-15     94.6 
 2 mu         0.2       1.12    0.00518    1.31e- 9     58.3 
 3 mu         0.3       1.27    0.0549     1.13e- 6     23.0 
 4 mu         0.4       1.35    0.240      1.29e- 4     14.4 
 5 mu         0.5       1.24    0.699      4.77e- 3      7.40
 6 mu         0.6       1.09    0.931      6.53e- 2      4.38
 7 mu         0.7       1.09    1.03       1.12e- 2      3.21
 8 mu         0.8       1.36    0.879      2.22e- 4      7.06
 9 mu         0.9       1.80    0.216      2.44e- 7     24.8 
10 mu_1       0.1       1.27    0.000695   6.60e-14     86.0 
11 mu_1       0.2       1.17    0.0205     6.19e- 9     26.5 
12 mu_1       0.3       1.37    0.113      3.56e- 6     18.2 
13 mu_1       0.4       1.35    0.444      3.04e- 4     12.0 
14 mu_1       0.5       1.18    0.743      9.00e- 3      5.67
15 mu_1       0.6       1.05    1.03       2.59e- 2      4.26
16 mu_1       0.7       1.10    1.05       1.46e- 3      3.83
17 mu_1       0.8       1.42    0.713      2.53e- 5      7.35
18 mu_1       0.9       1.83    0.168      2.47e- 8     27.6 
19 mu_0       0.1       1.09    0.0000265  0            95.6 
20 mu_0       0.2       1.11    0.00141    0            66.2 
21 mu_0       0.3       1.22    0.0262     0            29.9 
22 mu_0       0.4       1.35    0.122      0            16.0 
23 mu_0       0.5       1.30    0.457      0             9.87
24 mu_0       0.6       1.16    0.834      0             5.59
25 mu_0       0.7       1.05    0.976      0             4.25
26 mu_0       0.8       1.14    1.08       0             5.88
27 mu_0       0.9       1.54    0.460      0            13.6 
[1] "Total run time was 88.042 seconds"
