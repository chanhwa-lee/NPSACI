
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1171"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10 12  8  7  6  6  2  4  3  6  8  4  5  6  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04082 0.35302 0.62904 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
692 479 
[1] "treatment indicator table: "

  0   1 
428 743 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 540
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 133.419 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.991 0.634
 2 mu         0.1   0.2 1.26  0.857
 3 mu         0.1   0.3 1.42  1.03 
 4 mu         0.1   0.4 1.56  1.19 
 5 mu         0.1   0.5 1.63  1.24 
 6 mu         0.2   0.1 0.550 0.271
 7 mu         0.2   0.2 0.673 0.345
 8 mu         0.2   0.3 0.747 0.408
 9 mu         0.2   0.4 0.806 0.468
10 mu         0.2   0.5 0.844 0.487
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      2.96       0.00930 0.0000000130     240.  
 2 mu         0.2      1.53       0.114   0.0000473         93.7 
 3 mu         0.3      1.03       0.418   0.00291           32.4 
 4 mu         0.4      0.923      0.708   0.0391             9.80
 5 mu         0.5      0.949      0.904   0.0267             4.42
 6 mu         0.6      0.999      0.956   0.0240             2.13
 7 mu         0.7      1.04       1.01    0.139              2.57
 8 mu         0.8      1.09       0.945   0.105              7.28
 9 mu         0.9      1.14       0.798   0.00213           15.1 
10 mu_1       0.1      0.569      0.0468  0.0000000847      13.1 
11 mu_1       0.2      0.648      0.243   0.000154           4.82
12 mu_1       0.3      0.775      0.551   0.00653            8.50
13 mu_1       0.4      0.882      0.780   0.0664             6.86
14 mu_1       0.5      0.963      0.915   0.00914            3.43
15 mu_1       0.6      1.02       0.998   0.0341             2.19
16 mu_1       0.7      1.06       1.03    0.177              3.12
17 mu_1       0.8      1.11       0.922   0.0785             8.22
18 mu_1       0.9      1.15       0.760   0.00149           15.4 
19 mu_0       0.1      3.22       0.00426 0.00000000506    267.  
20 mu_0       0.2      1.75       0.0713  0.0000198        117.  
21 mu_0       0.3      1.13       0.304   0.00136           46.1 
22 mu_0       0.4      0.950      0.571   0.0209            15.9 
23 mu_0       0.5      0.935      0.800   0.0442             5.41
24 mu_0       0.6      0.967      0.921   0.00891            2.45
25 mu_0       0.7      0.994      0.985   0.0494             2.44
26 mu_0       0.8      1.01       0.941   0.0537             3.55
27 mu_0       0.9      1.08       0.899   0.00425           11.8 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      28.7      0.000395  7.25e-15   2524.  
 2 mu         0.2      15.1      0.0180    4.12e-10    874.  
 3 mu         0.3       7.67     0.142     1.81e- 7    263.  
 4 mu         0.4       3.60     0.472     1.35e- 5     77.2 
 5 mu         0.5       1.90     1.02      3.84e- 4     20.3 
 6 mu         0.6       1.39     1.13      5.92e- 3      4.08
 7 mu         0.7       1.65     1.28      4.25e- 3     21.6 
 8 mu         0.8       3.83     0.962     6.80e- 5    140.  
 9 mu         0.9      14.2      0.266     2.10e- 8    727.  
10 mu_1       0.1       6.78     0.00251   0           261.  
11 mu_1       0.2       6.64     0.0515    0           254.  
12 mu_1       0.3       3.95     0.309     0           127.  
13 mu_1       0.4       2.22     0.716     0            41.4 
14 mu_1       0.5       1.52     0.951     0             8.70
15 mu_1       0.6       1.35     1.19      0             4.15
16 mu_1       0.7       1.84     1.19      0            30.8 
17 mu_1       0.8       4.47     0.837     0           175.  
18 mu_1       0.9      15.6      0.185     0           808.  
19 mu_0       0.1      31.1      0.000154  0          2804.  
20 mu_0       0.2      17.2      0.00621   0          1093.  
21 mu_0       0.3       9.27     0.0641    0           376.  
22 mu_0       0.4       4.52     0.274     0           109.  
23 mu_0       0.5       2.27     0.725     0            31.9 
24 mu_0       0.6       1.44     0.990     0             5.92
25 mu_0       0.7       1.22     1.02      0             4.08
26 mu_0       0.8       1.26     0.874     0             7.24
27 mu_0       0.9       1.41     0.126     0            26.5 
[1] "Total run time was 139.585 seconds"
