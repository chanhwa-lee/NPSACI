
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1298"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  4  7  9  4  5  8 10  6  9  6  6  7  4  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04144 0.35018 0.62414 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
797 501 
[1] "treatment indicator table: "

  0   1 
466 832 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.003 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.409 0.202
 2 mu         0.1   0.2 0.535 0.263
 3 mu         0.1   0.3 0.631 0.315
 4 mu         0.1   0.4 0.722 0.357
 5 mu         0.1   0.5 0.825 0.405
 6 mu         0.2   0.1 0.332 0.109
 7 mu         0.2   0.2 0.426 0.151
 8 mu         0.2   0.3 0.491 0.158
 9 mu         0.2   0.4 0.561 0.181
10 mu         0.2   0.5 0.638 0.212
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.02       0.00276 0.00000000306     62.0 
 2 mu         0.2      0.776      0.0442  0.0000114         22.4 
 3 mu         0.3      0.755      0.274   0.000952          17.4 
 4 mu         0.4      0.806      0.588   0.0162             9.20
 5 mu         0.5      0.902      0.807   0.114              4.30
 6 mu         0.6      0.989      0.949   0.432              1.85
 7 mu         0.7      1.02       1.00    0.277              2.05
 8 mu         0.8      1.03       0.942   0.0317             7.33
 9 mu         0.9      1.09       0.485   0.000290          14.8 
10 mu_1       0.1      0.691      0.0142  0.0000000199      28.7 
11 mu_1       0.2      0.746      0.126   0.0000373         22.4 
12 mu_1       0.3      0.759      0.412   0.00210           11.7 
13 mu_1       0.4      0.831      0.736   0.0276             5.91
14 mu_1       0.5      0.934      0.868   0.160              2.87
15 mu_1       0.6      1.01       0.977   0.513              1.86
16 mu_1       0.7      1.03       0.979   0.228              2.41
17 mu_1       0.8      1.03       0.905   0.0214             8.19
18 mu_1       0.9      1.10       0.431   0.000180          14.8 
19 mu_0       0.1      1.05       0.00130 0.00000000119     67.9 
20 mu_0       0.2      0.783      0.0288  0.00000492        22.4 
21 mu_0       0.3      0.754      0.200   0.000429          19.8 
22 mu_0       0.4      0.789      0.455   0.00785           12.1 
23 mu_0       0.5      0.870      0.749   0.0616             5.73
24 mu_0       0.6      0.961      0.909   0.245              2.78
25 mu_0       0.7      1.02       1.02    0.391              1.96
26 mu_0       0.8      1.03       0.965   0.0731             3.90
27 mu_0       0.9      1.03       0.862   0.00128           14.9 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      21.8     0.0000674  1.59e-16   2086.  
 2 mu         0.2      28.7     0.00569    7.40e-11   2569.  
 3 mu         0.3      18.6     0.0672     1.44e- 7   1521.  
 4 mu         0.4       8.23    0.295      2.91e- 5    579.  
 5 mu         0.5       2.99    0.705      1.68e- 3    146.  
 6 mu         0.6       1.36    0.870      7.90e- 3     22.6 
 7 mu         0.7       1.13    1.04       1.26e- 4      3.03
 8 mu         0.8       1.24    0.668      2.86e- 7      6.93
 9 mu         0.9       1.34    0.0858     6.21e-12     23.8 
10 mu_1       0.1      36.9     0.000385   1.51e-15   3476.  
11 mu_1       0.2      25.3     0.0174     3.52e-10   2141.  
12 mu_1       0.3      11.6     0.138      4.55e- 7    845.  
13 mu_1       0.4       4.43    0.459      6.91e- 5    241.  
14 mu_1       0.5       1.80    0.814      3.20e- 3     48.7 
15 mu_1       0.6       1.14    0.979      2.08e- 3      6.27
16 mu_1       0.7       1.12    0.963      2.84e- 5      3.52
17 mu_1       0.8       1.26    0.540      5.64e- 8      8.04
18 mu_1       0.9       1.34    0.0666     1.09e-12     25.2 
19 mu_0       0.1      20.1     0.0000241  0          1931.  
20 mu_0       0.2      29.6     0.00222    0          2676.  
21 mu_0       0.3      21.6     0.0309     0          1810.  
22 mu_0       0.4      10.8     0.164      0           804.  
23 mu_0       0.5       4.18    0.530      0           243.  
24 mu_0       0.6       1.68    0.873      0            47.0 
25 mu_0       0.7       1.15    0.983      0             4.81
26 mu_0       0.8       1.18    1.03       0             4.78
27 mu_0       0.9       1.40    0.278      0            11.9 
[1] "Total run time was 62.215 seconds"
