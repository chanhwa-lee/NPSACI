
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1291"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  6  7  7  3  7  7  7  3  9  6  4  9  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03898 0.34388 0.62901 1.00000 5.38554 
[1] "event indicator table: "

  0   1 
753 538 
[1] "treatment indicator table: "

  0   1 
480 811 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.986 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.317 0.0974
 2 mu         0.1   0.2 0.369 0.116 
 3 mu         0.1   0.3 0.425 0.139 
 4 mu         0.1   0.4 0.412 0.140 
 5 mu         0.1   0.5 0.426 0.138 
 6 mu         0.2   0.1 0.350 0.0857
 7 mu         0.2   0.2 0.428 0.100 
 8 mu         0.2   0.3 0.512 0.134 
 9 mu         0.2   0.4 0.516 0.131 
10 mu         0.2   0.5 0.537 0.127 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.659      0.0140  0.0000000922     24.2 
 2 mu         0.2      0.873      0.214   0.0000602        21.0 
 3 mu         0.3      0.869      0.618   0.00214           8.32
 4 mu         0.4      0.893      0.805   0.0226            3.03
 5 mu         0.5      0.976      0.919   0.122             2.01
 6 mu         0.6      1.02       1.01    0.379             1.80
 7 mu         0.7      0.993      1.01    0.174             1.73
 8 mu         0.8      0.977      0.949   0.0484            2.11
 9 mu         0.9      1.10       1.02    0.000911          9.46
10 mu_1       0.1      0.959      0.0600  0.000000659      32.3 
11 mu_1       0.2      0.904      0.448   0.000216         14.0 
12 mu_1       0.3      0.866      0.759   0.00516           3.71
13 mu_1       0.4      0.921      0.881   0.0417            2.68
14 mu_1       0.5      1.01       0.951   0.185             1.99
15 mu_1       0.6      1.03       1.05    0.487             1.74
16 mu_1       0.7      0.992      0.995   0.130             1.77
17 mu_1       0.8      0.984      0.910   0.0326            2.43
18 mu_1       0.9      1.11       0.988   0.000561          9.98
19 mu_0       0.1      0.626      0.00899 0.0000000292     23.3 
20 mu_0       0.2      0.865      0.156   0.0000212        22.7 
21 mu_0       0.3      0.870      0.474   0.000840         10.3 
22 mu_0       0.4      0.875      0.782   0.00990           3.27
23 mu_0       0.5      0.945      0.887   0.0592            2.30
24 mu_0       0.6      1.01       1.00    0.216             1.99
25 mu_0       0.7      0.995      0.997   0.278             1.65
26 mu_0       0.8      0.947      0.997   0.0271            1.81
27 mu_0       0.9      0.976      0.743   0.000172          4.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.41     0.0000682  3.87e-16     61.3 
 2 mu         0.2      2.92     0.00759    9.01e-11    149.  
 3 mu         0.3      2.35     0.0712     1.17e- 7     89.0 
 4 mu         0.4      1.51     0.361      1.77e- 5     23.9 
 5 mu         0.5      1.13     0.897      8.20e- 4      6.43
 6 mu         0.6      1.00     1.07       1.51e- 2      2.97
 7 mu         0.7      0.984    0.958      1.22e- 3      2.50
 8 mu         0.8      1.12     0.732      8.87e- 6      9.32
 9 mu         0.9      1.44     0.124      2.17e-10     27.6 
10 mu_1       0.1      2.71     0.000603   3.66e-15    123.  
11 mu_1       0.2      3.07     0.0233     4.27e-10    149.  
12 mu_1       0.3      1.98     0.168      3.68e- 7     59.3 
13 mu_1       0.4      1.32     0.577      4.20e- 5     11.9 
14 mu_1       0.5      1.08     0.909      1.55e- 3      5.72
15 mu_1       0.6      0.991    1.03       1.01e- 2      2.73
16 mu_1       0.7      0.999    0.967      3.27e- 4      2.44
17 mu_1       0.8      1.15     0.568      2.20e- 6     10.5 
18 mu_1       0.9      1.45     0.0907     4.82e-11     29.0 
19 mu_0       0.1      1.26     0.0000228  0            54.4 
20 mu_0       0.2      2.88     0.00245    0           149.  
21 mu_0       0.3      2.51     0.0386     0           102.  
22 mu_0       0.4      1.64     0.189      0            31.8 
23 mu_0       0.5      1.19     0.682      0             7.15
24 mu_0       0.6      1.01     0.937      0             4.12
25 mu_0       0.7      0.950    0.951      0             2.91
26 mu_0       0.8      0.986    0.897      0             4.66
27 mu_0       0.9      1.30     0.186      0            19.4 
[1] "Total run time was 62.98 seconds"
