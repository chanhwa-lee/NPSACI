
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1304"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  3  9  4 11  7  2  3  7  5  4  6  9  4  8 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04511 0.38011 0.63539 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
762 542 
[1] "treatment indicator table: "

  0   1 
456 848 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 672
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.764 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.190 0.0832
 2 mu         0.1   0.2 0.146 0.0545
 3 mu         0.1   0.3 0.110 0.0643
 4 mu         0.1   0.4 0.175 0.0887
 5 mu         0.1   0.5 0.206 0.107 
 6 mu         0.2   0.1 0.397 0.135 
 7 mu         0.2   0.2 0.412 0.151 
 8 mu         0.2   0.3 0.424 0.185 
 9 mu         0.2   0.4 0.531 0.218 
10 mu         0.2   0.5 0.613 0.260 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.339      0.0115  0.0000000248       8.63
 2 mu         0.2      1.28       0.148   0.0000507         61.6 
 3 mu         0.3      2.49       0.468   0.00304          161.  
 4 mu         0.4      2.65       0.780   0.0373           166.  
 5 mu         0.5      1.89       0.950   0.154             85.6 
 6 mu         0.6      1.24       1.01    0.341             22.6 
 7 mu         0.7      0.994      0.968   0.0663             3.53
 8 mu         0.8      0.872      0.783   0.00345            5.32
 9 mu         0.9      0.691      0.392   0.00000888         4.02
10 mu_1       0.1      0.731      0.0473  0.000000158       13.9 
11 mu_1       0.2      1.96       0.324   0.000163         109.  
12 mu_1       0.3      2.88       0.715   0.00659          190.  
13 mu_1       0.4      2.50       0.937   0.0662           147.  
14 mu_1       0.5      1.64       0.970   0.224             60.6 
15 mu_1       0.6      1.14       1.00    0.260             13.7 
16 mu_1       0.7      0.963      0.924   0.0448             3.04
17 mu_1       0.8      0.853      0.730   0.00208            5.52
18 mu_1       0.9      0.678      0.338   0.00000484         4.36
19 mu_0       0.1      0.295      0.00713 0.00000000997      8.52
20 mu_0       0.2      1.11       0.0995  0.0000226         49.8 
21 mu_0       0.3      2.32       0.367   0.00151          149.  
22 mu_0       0.4      2.75       0.733   0.0178           179.  
23 mu_0       0.5      2.14       0.899   0.0844           111.  
24 mu_0       0.6      1.41       1.02    0.259             35.9 
25 mu_0       0.7      1.07       0.990   0.117              6.12
26 mu_0       0.8      0.945      0.924   0.00892            4.50
27 mu_0       0.9      0.803      0.637   0.0000452          6.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      23.0   0.00000663   3.35e-14    2019. 
 2 mu         0.2      37.5   0.00140      1.95e- 9    3493. 
 3 mu         0.3      23.0   0.0325       1.12e- 6    2078. 
 4 mu         0.4       8.40  0.222        9.58e- 5     664. 
 5 mu         0.5       2.82  0.770        2.84e- 3     121. 
 6 mu         0.6       2.76  0.974        4.19e- 2     133. 
 7 mu         0.7       6.41  1.02         2.74e- 3     496. 
 8 mu         0.8      10.2   0.849        2.41e- 5     831. 
 9 mu         0.9       5.90  0.135        6.63e- 9     342. 
10 mu_1       0.1      40.8   0.0000564    3.15e-13    3786. 
11 mu_1       0.2      35.1   0.00421      9.17e- 9    3275. 
12 mu_1       0.3      14.9   0.0767       3.51e- 6    1299. 
13 mu_1       0.4       4.68  0.387        2.25e- 4     311. 
14 mu_1       0.5       2.07  0.803        5.34e- 3      45.4
15 mu_1       0.6       3.13  1.01         9.51e- 3     178. 
16 mu_1       0.7       7.20  1.10         3.01e- 4     567. 
17 mu_1       0.8      10.4   0.732        2.32e- 6     831. 
18 mu_1       0.9       5.62  0.103        5.67e-10     304. 
19 mu_0       0.1      21.0   0.000000804  0           1823. 
20 mu_0       0.2      38.1   0.000487     0           3548. 
21 mu_0       0.3      26.4   0.0128       0           2412. 
22 mu_0       0.4      10.9   0.104        0            899. 
23 mu_0       0.5       3.57  0.437        0            197. 
24 mu_0       0.6       2.22  0.898        0             66.6
25 mu_0       0.7       4.55  0.971        0            331. 
26 mu_0       0.8       9.64  0.747        0            831. 
27 mu_0       0.9       8.46  0.147        0            684. 
[1] "Total run time was 96.947 seconds"
