
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1250"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8  7  8  2  7  8  7  8  2  7  4  7  5  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05291 0.40039 0.65541 1.00000 5.73890 
[1] "event indicator table: "

  0   1 
702 548 
[1] "treatment indicator table: "

  0   1 
448 802 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.039 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.249 0.0886
 2 mu         0.1   0.2 0.429 0.121 
 3 mu         0.1   0.3 0.426 0.116 
 4 mu         0.1   0.4 0.420 0.111 
 5 mu         0.1   0.5 0.420 0.102 
 6 mu         0.2   0.1 0.303 0.0712
 7 mu         0.2   0.2 0.483 0.101 
 8 mu         0.2   0.3 0.500 0.0976
 9 mu         0.2   0.4 0.512 0.0941
10 mu         0.2   0.5 0.539 0.0888
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.580       0.0257 0.00000000298      9.16
 2 mu         0.2      0.839       0.200  0.0000110          6.40
 3 mu         0.3      0.957       0.547  0.000904           7.68
 4 mu         0.4      0.957       0.904  0.0150             4.88
 5 mu         0.5      0.940       0.954  0.100              2.08
 6 mu         0.6      0.965       0.964  0.366              2.04
 7 mu         0.7      1.02        1.00   0.320              1.69
 8 mu         0.8      1.08        1.06   0.0979             2.75
 9 mu         0.9      1.16        0.728  0.00254            5.83
10 mu_1       0.1      0.851       0.100  0.0000000194      10.2 
11 mu_1       0.2      0.962       0.436  0.0000360          8.58
12 mu_1       0.3      0.975       0.776  0.00199            7.00
13 mu_1       0.4      0.937       0.917  0.0252             3.55
14 mu_1       0.5      0.930       0.943  0.140              1.80
15 mu_1       0.6      0.970       0.941  0.442              2.10
16 mu_1       0.7      1.03        1.02   0.267              1.88
17 mu_1       0.8      1.09        1.10   0.0726             2.89
18 mu_1       0.9      1.17        0.677  0.00171            6.44
19 mu_0       0.1      0.550       0.0174 0.00000000116      9.44
20 mu_0       0.2      0.808       0.135  0.00000477         6.60
21 mu_0       0.3      0.949       0.435  0.000438           7.96
22 mu_0       0.4      0.970       0.805  0.00813            5.77
23 mu_0       0.5      0.951       0.969  0.0522             2.76
24 mu_0       0.6      0.957       0.930  0.130              1.93
25 mu_0       0.7      0.990       0.992  0.279              2.02
26 mu_0       0.8      1.02        0.985  0.199              2.39
27 mu_0       0.9      1.07        0.987  0.0100             3.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      13.4     0.0000548  1.61e-16   1271.  
 2 mu         0.2       5.18    0.00620    4.23e-11    391.  
 3 mu         0.3       2.31    0.0753     6.25e- 8    103.  
 4 mu         0.4       1.36    0.332      1.11e- 5     24.0 
 5 mu         0.5       1.09    0.818      6.16e- 4      7.26
 6 mu         0.6       1.04    1.05       1.64e- 2      4.28
 7 mu         0.7       1.06    1.09       1.62e- 2      2.64
 8 mu         0.8       1.25    0.656      2.13e- 4      5.81
 9 mu         0.9       1.77    0.0807     7.50e- 8     24.2 
10 mu_1       0.1       1.42    0.000297   0           105.  
11 mu_1       0.2       1.40    0.0202     0            72.6 
12 mu_1       0.3       1.19    0.143      0            32.7 
13 mu_1       0.4       1.06    0.536      0            10.9 
14 mu_1       0.5       1.04    0.958      0             3.97
15 mu_1       0.6       1.05    1.02       0             4.13
16 mu_1       0.7       1.09    1.03       0             3.15
17 mu_1       0.8       1.30    0.511      0             6.72
18 mu_1       0.9       1.82    0.0610     0            26.9 
19 mu_0       0.1      14.8     0.0000277  0          1412.  
20 mu_0       0.2       6.12    0.00277    0           489.  
21 mu_0       0.3       2.80    0.0341     0           147.  
22 mu_0       0.4       1.56    0.176      0            36.7 
23 mu_0       0.5       1.15    0.593      0            11.9 
24 mu_0       0.6       1.04    0.967      0             4.50
25 mu_0       0.7       1.00    1.07       0             3.28
26 mu_0       0.8       1.06    0.832      0             4.84
27 mu_0       0.9       1.33    0.204      0            12.4 
[1] "Total run time was 46.485 seconds"
