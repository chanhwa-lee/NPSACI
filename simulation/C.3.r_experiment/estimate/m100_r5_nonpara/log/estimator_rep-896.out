
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1190"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  9  5  8  8 10  6  4  8  3  7  3  8  4  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03646 0.39524 0.63134 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
708 482 
[1] "treatment indicator table: "

  0   1 
428 762 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 38.681 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.489 0.199
 2 mu         0.1   0.2 0.569 0.274
 3 mu         0.1   0.3 0.759 0.277
 4 mu         0.1   0.4 0.746 0.309
 5 mu         0.1   0.5 0.754 0.341
 6 mu         0.2   0.1 0.488 0.167
 7 mu         0.2   0.2 0.564 0.219
 8 mu         0.2   0.3 0.734 0.230
 9 mu         0.2   0.4 0.748 0.266
10 mu         0.2   0.5 0.782 0.296
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.47       0.0220  8.84e-12     42.4 
 2 mu         0.2       1.50       0.184   1.05e- 7     45.8 
 3 mu         0.3       1.15       0.563   2.15e- 5     16.0 
 4 mu         0.4       1.03       0.832   8.04e- 4      4.82
 5 mu         0.5       1.02       0.980   1.14e- 2      5.09
 6 mu         0.6       1.02       1.01    8.39e- 2      4.73
 7 mu         0.7       1.04       0.980   3.37e- 1      2.98
 8 mu         0.8       1.14       1.04    3.34e- 2      4.11
 9 mu         0.9       1.25       0.923   2.12e- 4      6.92
10 mu_1       0.1       1.79       0.0811  7.29e-11     63.6 
11 mu_1       0.2       1.36       0.401   4.35e- 7     34.3 
12 mu_1       0.3       1.08       0.755   5.94e- 5      8.07
13 mu_1       0.4       1.03       0.932   1.67e- 3      4.41
14 mu_1       0.5       1.02       1.00    1.91e- 2      5.38
15 mu_1       0.6       1.02       1.01    1.18e- 1      4.34
16 mu_1       0.7       1.06       0.967   2.49e- 1      2.62
17 mu_1       0.8       1.16       1.07    2.19e- 2      4.50
18 mu_1       0.9       1.26       0.854   1.24e- 4      7.52
19 mu_0       0.1       1.44       0.0143  1.72e-12     40.0 
20 mu_0       0.2       1.53       0.132   2.27e- 8     48.6 
21 mu_0       0.3       1.18       0.458   5.23e- 6     19.4 
22 mu_0       0.4       1.03       0.740   2.24e- 4      5.67
23 mu_0       0.5       1.01       0.930   3.73e- 3      4.80
24 mu_0       0.6       1.01       0.993   3.30e- 2      5.32
25 mu_0       0.7       1.01       0.990   1.81e- 1      3.85
26 mu_0       0.8       1.05       0.982   7.90e- 2      3.07
27 mu_0       0.9       1.17       1.03    1.00e- 3      5.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.948    0.0000839  2.84e-15     33.3 
 2 mu         0.2      1.43     0.00735    5.89e-10     41.6 
 3 mu         0.3      1.59     0.0843     6.66e- 7     36.5 
 4 mu         0.4      1.51     0.294      8.68e- 5     26.3 
 5 mu         0.5      1.34     0.680      2.96e- 3     15.9 
 6 mu         0.6      1.21     0.868      2.64e- 2      7.79
 7 mu         0.7      1.14     1.10       3.17e- 3      3.87
 8 mu         0.8      1.13     0.981      2.12e- 5      4.36
 9 mu         0.9      1.02     0.308      2.33e- 9      8.07
10 mu_1       0.1      1.70     0.000609   2.56e-14     66.6 
11 mu_1       0.2      1.61     0.0249     2.65e- 9     41.6 
12 mu_1       0.3      1.51     0.167      2.00e- 6     24.4 
13 mu_1       0.4      1.35     0.548      1.95e- 4     15.1 
14 mu_1       0.5      1.23     0.744      5.92e- 3      9.61
15 mu_1       0.6      1.16     0.975      2.73e- 2      6.08
16 mu_1       0.7      1.13     1.14       1.19e- 3      3.25
17 mu_1       0.8      1.13     0.903      6.97e- 6      4.88
18 mu_1       0.9      1.01     0.246      6.81e-10      8.03
19 mu_0       0.1      0.864    0.0000241  0            29.6 
20 mu_0       0.2      1.38     0.00231    0            41.6 
21 mu_0       0.3      1.63     0.0330     0            41.8 
22 mu_0       0.4      1.61     0.124      0            35.1 
23 mu_0       0.5      1.44     0.410      0            25.4 
24 mu_0       0.6      1.28     0.692      0            15.6 
25 mu_0       0.7      1.17     0.897      0             7.67
26 mu_0       0.8      1.15     1.18       0             4.38
27 mu_0       0.9      1.18     0.500      0             8.50
[1] "Total run time was 42.138 seconds"
