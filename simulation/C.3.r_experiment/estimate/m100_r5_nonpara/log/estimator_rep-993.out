
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1271"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  2  7  5  6  4  6  9 11  8 11 12  6  5  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04192 0.35213 0.62785 1.00000 4.52003 
[1] "event indicator table: "

  0   1 
736 535 
[1] "treatment indicator table: "

  0   1 
468 803 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.614 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.273 0.116 
 2 mu         0.1   0.2 0.341 0.148 
 3 mu         0.1   0.3 0.417 0.178 
 4 mu         0.1   0.4 0.409 0.165 
 5 mu         0.1   0.5 0.403 0.158 
 6 mu         0.2   0.1 0.267 0.0712
 7 mu         0.2   0.2 0.342 0.101 
 8 mu         0.2   0.3 0.416 0.119 
 9 mu         0.2   0.4 0.431 0.106 
10 mu         0.2   0.5 0.444 0.0985
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.492      0.00881  7.78e-11     19.5 
 2 mu         0.2      0.692      0.145    4.76e- 7      5.07
 3 mu         0.3      0.869      0.534    6.69e- 5      4.54
 4 mu         0.4      0.954      0.837    1.95e- 3      2.74
 5 mu         0.5      1.01       1.02     2.33e- 2      3.13
 6 mu         0.6      1.03       1.01     1.52e- 1      2.70
 7 mu         0.7      1.02       0.978    3.67e- 1      2.18
 8 mu         0.8      1.02       0.962    2.01e- 1      2.00
 9 mu         0.9      1.03       0.859    1.61e- 2      4.38
10 mu_1       0.1      0.600      0.0385   6.34e-10      5.57
11 mu_1       0.2      0.849      0.320    1.95e- 6      5.62
12 mu_1       0.3      0.941      0.705    1.84e- 4      3.80
13 mu_1       0.4      0.988      0.978    4.05e- 3      3.00
14 mu_1       0.5      1.02       1.02     3.89e- 2      3.12
15 mu_1       0.6      1.03       1.02     2.13e- 1      2.52
16 mu_1       0.7      1.02       0.976    3.60e- 1      2.19
17 mu_1       0.8      1.02       0.930    1.57e- 1      2.19
18 mu_1       0.9      1.03       0.861    1.14e- 2      4.68
19 mu_0       0.1      0.480      0.00539  1.59e-11     21.7 
20 mu_0       0.2      0.653      0.0995   1.08e- 7      4.96
21 mu_0       0.3      0.839      0.422    1.69e- 5      4.88
22 mu_0       0.4      0.932      0.705    5.57e- 4      3.27
23 mu_0       0.5      0.989      0.985    7.68e- 3      3.14
24 mu_0       0.6      1.02       1.00     5.94e- 2      2.96
25 mu_0       0.7      1.03       0.981    2.44e- 1      2.27
26 mu_0       0.8      1.03       1.01     2.05e- 1      2.18
27 mu_0       0.9      1.05       0.979    1.24e- 2      2.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.22    0.0000811  2.14e-14    182.  
 2 mu         0.2       2.07    0.00808    7.01e-10    111.  
 3 mu         0.3       1.47    0.100      3.07e- 7     29.4 
 4 mu         0.4       1.27    0.405      2.30e- 5     19.4 
 5 mu         0.5       1.21    0.797      6.53e- 4     17.9 
 6 mu         0.6       1.10    1.01       1.01e- 2      8.63
 7 mu         0.7       1.04    0.957      2.07e- 4      3.30
 8 mu         0.8       1.07    0.640      4.12e- 7      5.76
 9 mu         0.9       1.21    0.117      7.96e-12     16.9 
10 mu_1       0.1       2.83    0.000551   2.14e-13    202.  
11 mu_1       0.2       1.83    0.0258     3.51e- 9     61.5 
12 mu_1       0.3       1.38    0.212      1.02e- 6     16.0 
13 mu_1       0.4       1.28    0.644      5.75e- 5     21.2 
14 mu_1       0.5       1.18    0.919      1.31e- 3     15.7 
15 mu_1       0.6       1.07    0.935      2.81e- 3      6.29
16 mu_1       0.7       1.03    0.972      3.29e- 5      3.53
17 mu_1       0.8       1.08    0.509      5.72e- 8      6.75
18 mu_1       0.9       1.22    0.0782     9.82e-13     18.3 
19 mu_0       0.1       2.16    0.0000272  0           180.  
20 mu_0       0.2       2.13    0.00397    0           123.  
21 mu_0       0.3       1.50    0.0508     0            37.3 
22 mu_0       0.4       1.26    0.225      0            18.2 
23 mu_0       0.5       1.23    0.625      0            20.2 
24 mu_0       0.6       1.15    0.995      0            12.1 
25 mu_0       0.7       1.06    0.932      0             3.57
26 mu_0       0.8       1.04    0.972      0             4.04
27 mu_0       0.9       1.07    0.311      0            10.5 
[1] "Total run time was 46.996 seconds"
