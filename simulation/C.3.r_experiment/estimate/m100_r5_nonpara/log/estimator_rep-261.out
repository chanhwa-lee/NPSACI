
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1214"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  6 12  7  5  7 11  4  9  1  5  4  9  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02285 0.31168 0.57749 0.99857 6.00000 
[1] "event indicator table: "

  0   1 
742 472 
[1] "treatment indicator table: "

  0   1 
442 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 567
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 39.082 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.275 0.0855
 2 mu         0.1   0.2 0.293 0.0875
 3 mu         0.1   0.3 0.310 0.0925
 4 mu         0.1   0.4 0.320 0.0994
 5 mu         0.1   0.5 0.342 0.103 
 6 mu         0.2   0.1 0.374 0.0608
 7 mu         0.2   0.2 0.424 0.0643
 8 mu         0.2   0.3 0.465 0.0658
 9 mu         0.2   0.4 0.495 0.0682
10 mu         0.2   0.5 0.519 0.0710
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.591       0.0539  8.57e-10     11.2 
 2 mu         0.2      0.929       0.443   3.93e- 6      6.48
 3 mu         0.3      1.13        0.987   4.00e- 4      3.85
 4 mu         0.4      1.14        1.07    8.10e- 3      3.42
 5 mu         0.5      1.04        1.01    6.45e- 2      2.56
 6 mu         0.6      0.978       0.950   2.70e- 1      1.99
 7 mu         0.7      0.967       0.967   2.59e- 1      1.97
 8 mu         0.8      0.932       0.938   4.65e- 2      2.10
 9 mu         0.9      0.801       0.633   5.76e- 4      3.49
10 mu_1       0.1      0.750       0.189   6.19e- 9      9.02
11 mu_1       0.2      1.08        0.755   1.42e- 5      5.11
12 mu_1       0.3      1.16        1.03    9.66e- 4      3.74
13 mu_1       0.4      1.10        0.951   1.48e- 2      3.18
14 mu_1       0.5      1.01        0.965   9.53e- 2      2.46
15 mu_1       0.6      0.971       0.961   3.41e- 1      1.84
16 mu_1       0.7      0.969       0.998   1.64e- 1      2.04
17 mu_1       0.8      0.921       0.888   3.21e- 2      2.32
18 mu_1       0.9      0.788       0.570   3.55e- 4      3.70
19 mu_0       0.1      0.574       0.0374  2.64e-10     12.4 
20 mu_0       0.2      0.892       0.364   1.36e- 6      6.82
21 mu_0       0.3      1.12        0.867   1.57e- 4      4.33
22 mu_0       0.4      1.16        1.08    3.65e- 3      3.58
23 mu_0       0.5      1.08        1.06    3.37e- 2      2.93
24 mu_0       0.6      0.988       0.952   1.65e- 1      2.23
25 mu_0       0.7      0.963       0.957   4.35e- 1      1.81
26 mu_0       0.8      0.976       0.971   1.04e- 1      2.14
27 mu_0       0.9      0.917       0.900   2.56e- 3      2.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.397    0.000113   1.33e-18     19.6 
 2 mu         0.2      1.01     0.0102     1.39e-12     17.2 
 3 mu         0.3      1.37     0.126      4.62e- 9     22.3 
 4 mu         0.4      1.31     0.490      1.46e- 6     12.7 
 5 mu         0.5      1.15     0.919      1.26e- 4      3.89
 6 mu         0.6      0.980    0.953      4.85e- 3      2.47
 7 mu         0.7      0.917    0.866      2.25e- 3      2.54
 8 mu         0.8      1.20     0.642      1.00e- 5      6.75
 9 mu         0.9      2.01     0.0999     5.50e-10     21.7 
10 mu_1       0.1      0.795    0.000993   1.33e-17     24.5 
11 mu_1       0.2      1.35     0.0324     6.95e-12     23.2 
12 mu_1       0.3      1.44     0.255      1.54e- 8     20.7 
13 mu_1       0.4      1.27     0.723      3.65e- 6      8.80
14 mu_1       0.5      1.09     1.02       2.53e- 4      3.03
15 mu_1       0.6      0.943    0.922      8.08e- 3      2.47
16 mu_1       0.7      0.940    0.815      8.02e- 4      3.05
17 mu_1       0.8      1.28     0.485      3.12e- 6      7.73
18 mu_1       0.9      2.11     0.0678     1.53e-10     24.1 
19 mu_0       0.1      0.352    0.0000410  0            19.0 
20 mu_0       0.2      0.924    0.00543    0            18.8 
21 mu_0       0.3      1.33     0.0657     0            23.0 
22 mu_0       0.4      1.35     0.316      0            15.3 
23 mu_0       0.5      1.21     0.856      0             5.84
24 mu_0       0.6      1.03     0.984      0             2.90
25 mu_0       0.7      0.862    0.774      0             2.73
26 mu_0       0.8      0.862    0.593      0             4.58
27 mu_0       0.9      1.15     0.122      0            10.3 
[1] "Total run time was 42.121 seconds"
