
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1251"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  6  8  5  8  4  8  8  5  8  2  6  3  9  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01756 0.27884 0.56718 0.98259 4.78565 
[1] "event indicator table: "

  0   1 
725 526 
[1] "treatment indicator table: "

  0   1 
469 782 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 589
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 123.024 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.116  0.0840
 2 mu         0.1   0.2 0.0897 0.0997
 3 mu         0.1   0.3 0.123  0.0818
 4 mu         0.1   0.4 0.167  0.0511
 5 mu         0.1   0.5 0.154  0.0533
 6 mu         0.2   0.1 0.198  0.0585
 7 mu         0.2   0.2 0.218  0.0800
 8 mu         0.2   0.3 0.274  0.0723
 9 mu         0.2   0.4 0.326  0.0570
10 mu         0.2   0.5 0.326  0.0592
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.233      0.0134  0.0000000508      1.84
 2 mu         0.2      0.567      0.200   0.0000964         4.17
 3 mu         0.3      0.792      0.559   0.00518           4.88
 4 mu         0.4      0.904      0.868   0.0601            2.40
 5 mu         0.5      0.978      0.995   0.250             2.02
 6 mu         0.6      1.02       1.00    0.373             1.59
 7 mu         0.7      1.01       0.967   0.356             2.02
 8 mu         0.8      1.00       0.984   0.104             2.79
 9 mu         0.9      0.934      0.687   0.00238           3.74
10 mu_1       0.1      0.531      0.0582  0.000000313       3.91
11 mu_1       0.2      0.770      0.389   0.000296          5.48
12 mu_1       0.3      0.877      0.769   0.0107            4.29
13 mu_1       0.4      0.941      0.950   0.0950            2.03
14 mu_1       0.5      0.999      0.975   0.301             1.91
15 mu_1       0.6      1.02       1.01    0.311             1.67
16 mu_1       0.7      1.01       1.01    0.369             2.24
17 mu_1       0.8      1.00       0.997   0.0780            2.75
18 mu_1       0.9      0.927      0.649   0.00163           4.09
19 mu_0       0.1      0.200      0.00835 0.0000000204      1.61
20 mu_0       0.2      0.516      0.146   0.0000466         3.84
21 mu_0       0.3      0.755      0.451   0.00280           5.14
22 mu_0       0.4      0.880      0.759   0.0231            2.93
23 mu_0       0.5      0.957      0.998   0.0865            2.13
24 mu_0       0.6      1.01       0.985   0.253             1.65
25 mu_0       0.7      1.01       1.02    0.278             1.81
26 mu_0       0.8      1.00       0.985   0.202             2.92
27 mu_0       0.9      0.996      0.949   0.00908           2.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.900    0.0000540  8.04e-14     58.7 
 2 mu         0.2      1.10     0.00673    5.02e- 9     36.2 
 3 mu         0.3      1.16     0.0584     2.20e- 6     14.3 
 4 mu         0.4      1.06     0.308      1.65e- 4      9.27
 5 mu         0.5      0.960    0.733      4.68e- 3      3.75
 6 mu         0.6      0.962    0.864      7.21e- 2      3.74
 7 mu         0.7      1.01     0.899      6.96e- 3      3.01
 8 mu         0.8      1.08     0.658      1.00e- 4      6.69
 9 mu         0.9      1.33     0.0769     1.53e- 8     31.6 
10 mu_1       0.1      1.20     0.000326   6.83e-13     53.4 
11 mu_1       0.2      1.15     0.0260     2.51e- 8     16.4 
12 mu_1       0.3      1.12     0.135      7.33e- 6     14.3 
13 mu_1       0.4      1.00     0.477      4.12e- 4      6.95
14 mu_1       0.5      0.941    0.829      9.36e- 3      4.13
15 mu_1       0.6      0.971    0.889      1.61e- 2      3.43
16 mu_1       0.7      1.02     0.965      9.04e- 4      2.97
17 mu_1       0.8      1.10     0.557      1.57e- 5      7.72
18 mu_1       0.9      1.36     0.0551     5.11e- 9     35.1 
19 mu_0       0.1      0.867    0.0000265  0            59.3 
20 mu_0       0.2      1.09     0.00211    0            41.1 
21 mu_0       0.3      1.18     0.0288     0            18.5 
22 mu_0       0.4      1.10     0.185      0            10.8 
23 mu_0       0.5      0.979    0.535      0             3.85
24 mu_0       0.6      0.950    0.873      0             4.21
25 mu_0       0.7      0.985    0.840      0             3.08
26 mu_0       0.8      1.01     0.892      0             4.20
27 mu_0       0.9      1.00     0.235      0            10.6 
[1] "Total run time was 129.217 seconds"
