
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1226"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 12  4  8  5  3  7  8  7  9  6  5  6  4  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0373  0.3887  0.6406  1.0000  7.0000 
[1] "event indicator table: "

  0   1 
709 517 
[1] "treatment indicator table: "

  0   1 
435 791 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.249 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.338 0.0866
 2 mu         0.1   0.2 0.410 0.0849
 3 mu         0.1   0.3 0.412 0.0912
 4 mu         0.1   0.4 0.403 0.107 
 5 mu         0.1   0.5 0.395 0.109 
 6 mu         0.2   0.1 0.306 0.0683
 7 mu         0.2   0.2 0.401 0.0679
 8 mu         0.2   0.3 0.416 0.0756
 9 mu         0.2   0.4 0.417 0.0935
10 mu         0.2   0.5 0.416 0.0955
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.623       0.0568 0.0000000409      9.43
 2 mu         0.2      0.778       0.309  0.0000818        12.2 
 3 mu         0.3      0.963       0.595  0.00455           8.29
 4 mu         0.4      1.09        0.924  0.0413            5.20
 5 mu         0.5      1.10        0.989  0.164             4.48
 6 mu         0.6      1.05        1.02   0.167             2.55
 7 mu         0.7      0.999       0.979  0.0500            1.93
 8 mu         0.8      0.963       0.969  0.0795            2.35
 9 mu         0.9      0.928       0.836  0.00141           4.16
10 mu_1       0.1      0.745       0.187  0.000000269      12.5 
11 mu_1       0.2      0.920       0.537  0.000261         12.2 
12 mu_1       0.3      1.06        0.772  0.00973           6.25
13 mu_1       0.4      1.12        0.994  0.0879            5.07
14 mu_1       0.5      1.09        1.04   0.287             4.06
15 mu_1       0.6      1.04        1.02   0.0986            2.09
16 mu_1       0.7      0.992       0.986  0.0481            2.01
17 mu_1       0.8      0.960       0.964  0.0517            2.37
18 mu_1       0.9      0.925       0.825  0.000827          4.33
19 mu_0       0.1      0.609       0.0370 0.0000000151     10.2 
20 mu_0       0.2      0.743       0.236  0.0000348        12.2 
21 mu_0       0.3      0.921       0.548  0.00115           9.47
22 mu_0       0.4      1.06        0.832  0.00860           5.80
23 mu_0       0.5      1.11        0.994  0.0410            4.90
24 mu_0       0.6      1.07        1.04   0.147             3.25
25 mu_0       0.7      1.02        1.01   0.0543            1.98
26 mu_0       0.8      0.974       0.969  0.00400           2.28
27 mu_0       0.9      0.952       0.917  0.0000277         2.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      14.4     0.0000970  2.31e-17    776.  
 2 mu         0.2       8.55    0.00791    6.04e-12    478.  
 3 mu         0.3       3.80    0.0815     8.93e- 9    189.  
 4 mu         0.4       1.81    0.371      1.58e- 6     53.8 
 5 mu         0.5       1.30    1.01       8.79e- 5     12.3 
 6 mu         0.6       1.22    1.08       2.34e- 3      6.83
 7 mu         0.7       1.19    1.10       1.52e- 3      5.32
 8 mu         0.8       1.10    0.953      1.34e- 5      4.52
 9 mu         0.9       1.03    0.190      3.67e- 9      7.65
10 mu_1       0.1      11.3     0.000606   0           705.  
11 mu_1       0.2       4.11    0.0277     0           217.  
12 mu_1       0.3       1.76    0.166      0            57.1 
13 mu_1       0.4       1.23    0.615      0            12.2 
14 mu_1       0.5       1.19    0.950      0            11.7 
15 mu_1       0.6       1.20    0.949      0             5.39
16 mu_1       0.7       1.17    1.04       0             5.32
17 mu_1       0.8       1.08    0.813      0             4.71
18 mu_1       0.9       1.02    0.139      0             7.97
19 mu_0       0.1      14.8     0.0000439  0           784.  
20 mu_0       0.2       9.66    0.00270    0           543.  
21 mu_0       0.3       4.67    0.0397     0           245.  
22 mu_0       0.4       2.20    0.196      0            81.5 
23 mu_0       0.5       1.40    0.765      0            19.8 
24 mu_0       0.6       1.25    0.965      0             8.98
25 mu_0       0.7       1.23    1.03       0             5.32
26 mu_0       0.8       1.18    0.964      0             4.71
27 mu_0       0.9       1.07    0.265      0             6.12
[1] "Total run time was 56.419 seconds"
