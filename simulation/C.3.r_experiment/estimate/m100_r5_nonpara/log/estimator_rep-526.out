
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  4 11  5  8  6  5  3  7 18  6 10  2  5  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01006 0.27769 0.55406 0.90599 5.22579 
[1] "event indicator table: "

  0   1 
727 514 
[1] "treatment indicator table: "

  0   1 
532 709 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.738 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.477 0.184
 2 mu         0.1   0.2 0.526 0.189
 3 mu         0.1   0.3 0.547 0.191
 4 mu         0.1   0.4 0.559 0.200
 5 mu         0.1   0.5 0.551 0.202
 6 mu         0.2   0.1 0.285 0.106
 7 mu         0.2   0.2 0.339 0.114
 8 mu         0.2   0.3 0.355 0.114
 9 mu         0.2   0.4 0.363 0.126
10 mu         0.2   0.5 0.361 0.132
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.886       0.0342 0.00000000562     15.8 
 2 mu         0.2      0.745       0.286  0.0000139          6.76
 3 mu         0.3      0.794       0.649  0.00102            3.41
 4 mu         0.4      0.874       0.881  0.0168             3.71
 5 mu         0.5      0.919       0.900  0.116              2.59
 6 mu         0.6      0.953       0.949  0.163              1.79
 7 mu         0.7      0.995       1.01   0.0227             4.34
 8 mu         0.8      1.02        0.906  0.000841           9.13
 9 mu         0.9      0.947       0.485  0.00000164        13.0 
10 mu_1       0.1      0.751       0.140  0.0000000399       8.57
11 mu_1       0.2      0.751       0.580  0.0000495          3.71
12 mu_1       0.3      0.849       0.764  0.00244            4.01
13 mu_1       0.4      0.914       0.879  0.0305             3.44
14 mu_1       0.5      0.940       0.935  0.170              2.22
15 mu_1       0.6      0.969       0.954  0.109              2.40
16 mu_1       0.7      1.01        0.977  0.0125             5.45
17 mu_1       0.8      1.02        0.870  0.000418          10.2 
18 mu_1       0.9      0.936       0.444  0.000000741       13.0 
19 mu_0       0.1      0.901       0.0235 0.00000000181     16.9 
20 mu_0       0.2      0.744       0.209  0.00000495         7.95
21 mu_0       0.3      0.770       0.565  0.000408           3.46
22 mu_0       0.4      0.848       0.788  0.00768            3.91
23 mu_0       0.5      0.898       0.862  0.0614             2.95
24 mu_0       0.6      0.929       0.914  0.243              1.71
25 mu_0       0.7      0.968       0.984  0.0465             2.22
26 mu_0       0.8      1.02        0.975  0.00253            4.73
27 mu_0       0.9      1.05        0.776  0.00000977        13.1 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      15.2      0.000383  5.92e-16   1126.  
 2 mu         0.2       6.68     0.0230    7.75e-11    244.  
 3 mu         0.3       3.41     0.172     7.64e- 8     92.7 
 4 mu         0.4       1.83     0.634     1.02e- 5     39.5 
 5 mu         0.5       1.20     0.860     4.51e- 4     12.6 
 6 mu         0.6       1.06     0.875     3.17e- 3      5.03
 7 mu         0.7       1.25     0.882     4.32e- 5     18.3 
 8 mu         0.8       1.77     0.328     8.59e- 8     45.9 
 9 mu         0.9       2.16     0.0153    1.66e-12     37.8 
10 mu_1       0.1       4.97     0.00188   0           250.  
11 mu_1       0.2       3.58     0.0666    0           122.  
12 mu_1       0.3       2.19     0.331     0            72.7 
13 mu_1       0.4       1.38     0.699     0            23.2 
14 mu_1       0.5       1.08     0.854     0            10.0 
15 mu_1       0.6       1.07     0.840     0             5.16
16 mu_1       0.7       1.33     0.848     0            22.0 
17 mu_1       0.8       1.85     0.224     0            48.3 
18 mu_1       0.9       2.19     0.0105    0            36.2 
19 mu_0       0.1      16.3      0.000174  0          1251.  
20 mu_0       0.2       7.46     0.00947   0           304.  
21 mu_0       0.3       3.94     0.101     0           101.  
22 mu_0       0.4       2.13     0.396     0            50.3 
23 mu_0       0.5       1.32     0.741     0            15.1 
24 mu_0       0.6       1.05     0.805     0             7.55
25 mu_0       0.7       1.08     0.851     0             9.62
26 mu_0       0.8       1.43     0.477     0            36.2 
27 mu_0       0.9       1.93     0.0362    0            59.6 
[1] "Total run time was 65.128 seconds"
