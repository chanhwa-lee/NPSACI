
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1316"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  5  8  6  8  4  4  6  8  9  3  7  8  7  5 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03045 0.29983 0.57107 0.98013 5.00000 
[1] "event indicator table: "

  0   1 
787 529 
[1] "treatment indicator table: "

  0   1 
517 799 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 92.716 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.334 0.101 
 2 mu         0.1   0.2 0.363 0.109 
 3 mu         0.1   0.3 0.375 0.119 
 4 mu         0.1   0.4 0.404 0.121 
 5 mu         0.1   0.5 0.497 0.129 
 6 mu         0.2   0.1 0.332 0.0598
 7 mu         0.2   0.2 0.379 0.0642
 8 mu         0.2   0.3 0.400 0.0694
 9 mu         0.2   0.4 0.430 0.0691
10 mu         0.2   0.5 0.517 0.0730
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.793       0.0461 0.00000000619     12.4 
 2 mu         0.2      0.925       0.377  0.0000237          5.62
 3 mu         0.3      1.01        0.790  0.00199            3.87
 4 mu         0.4      1.01        0.948  0.0327             2.64
 5 mu         0.5      0.984       0.968  0.207              1.98
 6 mu         0.6      0.978       1.01   0.368              1.68
 7 mu         0.7      0.999       1.01   0.316              2.04
 8 mu         0.8      1.03        1.02   0.0696             3.06
 9 mu         0.9      1.06        0.733  0.00225            4.50
10 mu_1       0.1      0.824       0.166  0.0000000404       5.30
11 mu_1       0.2      0.991       0.705  0.0000777          4.65
12 mu_1       0.3      1.02        0.901  0.00438            3.42
13 mu_1       0.4      0.999       0.950  0.0548             2.46
14 mu_1       0.5      0.977       0.995  0.283              1.93
15 mu_1       0.6      0.981       1.00   0.305              1.64
16 mu_1       0.7      1.00        0.992  0.199              2.18
17 mu_1       0.8      1.03        0.970  0.0382             3.30
18 mu_1       0.9      1.06        0.667  0.00152            4.45
19 mu_0       0.1      0.789       0.0353 0.00000000239     13.3 
20 mu_0       0.2      0.908       0.293  0.0000102          6.37
21 mu_0       0.3      1.00        0.738  0.000960           4.10
22 mu_0       0.4      1.02        0.946  0.0141             3.10
23 mu_0       0.5      0.992       0.965  0.0538             2.22
24 mu_0       0.6      0.974       0.988  0.161              1.88
25 mu_0       0.7      0.987       1.01   0.260              1.76
26 mu_0       0.8      1.02        0.969  0.153              2.52
27 mu_0       0.9      1.04        0.914  0.00873            5.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.696    0.000145   4.77e-17     18.2 
 2 mu         0.2      1.07     0.00861    2.22e-11     20.0 
 3 mu         0.3      1.15     0.0964     4.31e- 8     12.5 
 4 mu         0.4      1.11     0.488      8.74e- 6      6.34
 5 mu         0.5      1.03     0.915      5.05e- 4      3.75
 6 mu         0.6      0.995    0.986      1.29e- 2      2.60
 7 mu         0.7      1.04     1.01       8.27e- 4      3.09
 8 mu         0.8      1.06     0.711      8.33e- 6      3.97
 9 mu         0.9      0.992    0.0619     2.57e- 9     11.3 
10 mu_1       0.1      1.20     0.000803   4.53e-16     28.1 
11 mu_1       0.2      1.16     0.0305     1.06e-10     16.2 
12 mu_1       0.3      1.12     0.203      1.37e- 7      9.61
13 mu_1       0.4      1.06     0.739      2.08e- 5      5.38
14 mu_1       0.5      1.00     0.916      9.60e- 4      3.33
15 mu_1       0.6      1.00     0.920      4.57e- 3      2.82
16 mu_1       0.7      1.05     1.05       1.69e- 4      3.06
17 mu_1       0.8      1.06     0.553      1.49e- 6      4.38
18 mu_1       0.9      0.978    0.0458     4.08e-10     11.9 
19 mu_0       0.1      0.641    0.0000477  0            17.1 
20 mu_0       0.2      1.05     0.00338    0            21.1 
21 mu_0       0.3      1.16     0.0498     0            13.7 
22 mu_0       0.4      1.14     0.309      0             8.12
23 mu_0       0.5      1.05     0.828      0             4.17
24 mu_0       0.6      0.986    1.03       0             2.45
25 mu_0       0.7      1.01     0.923      0             3.17
26 mu_0       0.8      1.07     1.07       0             3.71
27 mu_0       0.9      1.12     0.193      0             6.84
[1] "Total run time was 97.615 seconds"
