
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1297"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  3  8  6  5  9  5  6  9  8  9  4  4  6  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04425 0.38954 0.64341 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
753 544 
[1] "treatment indicator table: "

  0   1 
488 809 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 117.26 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.282 0.113 
 2 mu         0.1   0.2 0.370 0.123 
 3 mu         0.1   0.3 0.396 0.124 
 4 mu         0.1   0.4 0.550 0.186 
 5 mu         0.1   0.5 0.557 0.184 
 6 mu         0.2   0.1 0.253 0.0681
 7 mu         0.2   0.2 0.357 0.0918
 8 mu         0.2   0.3 0.376 0.0966
 9 mu         0.2   0.4 0.470 0.138 
10 mu         0.2   0.5 0.496 0.140 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.650      0.0108  0.000000202      20.0 
 2 mu         0.2      0.786      0.161   0.000301         19.3 
 3 mu         0.3      0.913      0.556   0.00948          12.8 
 4 mu         0.4      0.988      0.772   0.0614            6.90
 5 mu         0.5      0.997      0.878   0.196             3.32
 6 mu         0.6      0.991      0.972   0.326             1.80
 7 mu         0.7      1.02       0.989   0.0584            1.85
 8 mu         0.8      1.08       0.915   0.00288           6.82
 9 mu         0.9      1.32       0.483   0.00000721       23.4 
10 mu_1       0.1      0.806      0.0404  0.00000121       27.0 
11 mu_1       0.2      0.855      0.331   0.000874         14.1 
12 mu_1       0.3      0.944      0.707   0.0186            6.93
13 mu_1       0.4      0.990      0.892   0.112             4.68
14 mu_1       0.5      0.993      0.948   0.293             2.36
15 mu_1       0.6      0.999      1.01    0.238             1.64
16 mu_1       0.7      1.03       1.06    0.0378            2.15
17 mu_1       0.8      1.10       0.857   0.00167           7.90
18 mu_1       0.9      1.35       0.442   0.00000375       24.5 
19 mu_0       0.1      0.633      0.00651 0.0000000897     19.2 
20 mu_0       0.2      0.769      0.115   0.000157         20.6 
21 mu_0       0.3      0.900      0.427   0.00480          15.4 
22 mu_0       0.4      0.987      0.749   0.0279            9.35
23 mu_0       0.5      1.00       0.862   0.0993            4.82
24 mu_0       0.6      0.980      0.941   0.251             2.23
25 mu_0       0.7      0.986      0.983   0.106             1.65
26 mu_0       0.8      1.02       0.995   0.00775           2.49
27 mu_0       0.9      1.08       0.760   0.0000383        13.2 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.11    0.0000407  1.30e-13    535.  
 2 mu         0.2       4.44    0.00593    1.14e- 8    165.  
 3 mu         0.3       3.79    0.0753     5.72e- 6    106.  
 4 mu         0.4       2.45    0.345      2.63e- 4     51.6 
 5 mu         0.5       1.47    0.860      4.79e- 3     15.1 
 6 mu         0.6       1.11    0.966      5.12e- 2      6.97
 7 mu         0.7       1.12    1.05       7.85e- 3      3.78
 8 mu         0.8       1.24    0.606      3.50e- 5      9.50
 9 mu         0.9       1.15    0.106      1.92e- 9     15.4 
10 mu_1       0.1       1.84    0.000189   0            62.2 
11 mu_1       0.2       3.64    0.0144     0           119.  
12 mu_1       0.3       3.14    0.153      0            92.9 
13 mu_1       0.4       1.94    0.567      0            33.9 
14 mu_1       0.5       1.25    0.965      0            13.4 
15 mu_1       0.6       1.07    0.887      0             5.16
16 mu_1       0.7       1.15    1.03       0             4.87
17 mu_1       0.8       1.25    0.517      0            10.8 
18 mu_1       0.9       1.13    0.0789     0            15.8 
19 mu_0       0.1       6.59    0.0000106  0           594.  
20 mu_0       0.2       4.63    0.00246    0           206.  
21 mu_0       0.3       4.06    0.0356     0           112.  
22 mu_0       0.4       2.79    0.218      0            63.3 
23 mu_0       0.5       1.68    0.658      0            18.1 
24 mu_0       0.6       1.17    0.905      0             9.68
25 mu_0       0.7       1.08    0.981      0             4.20
26 mu_0       0.8       1.20    0.918      0             4.98
27 mu_0       0.9       1.31    0.285      0            14.0 
[1] "Total run time was 122.557 seconds"
