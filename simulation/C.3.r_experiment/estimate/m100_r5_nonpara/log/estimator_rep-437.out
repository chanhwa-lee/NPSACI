
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1263"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  6  5  9  5  7  5  4  9  3  8  7  7 10  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03227 0.36121 0.62608 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
774 489 
[1] "treatment indicator table: "

  0   1 
433 830 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.497 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.474 0.179
 2 mu         0.1   0.2 0.565 0.205
 3 mu         0.1   0.3 0.592 0.224
 4 mu         0.1   0.4 0.602 0.241
 5 mu         0.1   0.5 0.604 0.253
 6 mu         0.2   0.1 0.472 0.110
 7 mu         0.2   0.2 0.562 0.127
 8 mu         0.2   0.3 0.599 0.141
 9 mu         0.2   0.4 0.628 0.151
10 mu         0.2   0.5 0.639 0.158
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.10        0.0488 0.0000000139      24.0 
 2 mu         0.2      1.21        0.370  0.0000328         11.5 
 3 mu         0.3      1.13        0.935  0.00229            4.74
 4 mu         0.4      1.08        0.918  0.0356             2.83
 5 mu         0.5      1.01        1.00   0.178              2.46
 6 mu         0.6      0.965       0.954  0.346              1.77
 7 mu         0.7      0.960       0.930  0.0816             1.99
 8 mu         0.8      0.969       0.980  0.00564            3.86
 9 mu         0.9      1.07        0.802  0.0000375         19.5 
10 mu_1       0.1      1.50        0.160  0.0000000983      24.0 
11 mu_1       0.2      1.22        0.674  0.000116           6.36
12 mu_1       0.3      1.12        1.09   0.00544            3.42
13 mu_1       0.4      1.06        1.03   0.0638             2.59
14 mu_1       0.5      0.987       0.950  0.177              2.33
15 mu_1       0.6      0.951       0.932  0.269              1.75
16 mu_1       0.7      0.954       0.920  0.0453             2.06
17 mu_1       0.8      0.965       0.982  0.00286            4.28
18 mu_1       0.9      1.08        0.756  0.0000174         21.6 
19 mu_0       0.1      1.06        0.0330 0.00000000451     24.0 
20 mu_0       0.2      1.21        0.295  0.0000119         13.0 
21 mu_0       0.3      1.13        0.786  0.000940           5.52
22 mu_0       0.4      1.10        0.914  0.0168             3.37
23 mu_0       0.5      1.04        1.02   0.104              2.61
24 mu_0       0.6      0.985       0.950  0.251              2.14
25 mu_0       0.7      0.973       0.913  0.166              1.84
26 mu_0       0.8      0.985       0.957  0.0167             2.20
27 mu_0       0.9      0.963       0.859  0.000218           5.89
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.659   0.0000271   3.92e-16     43.3 
 2 mu         0.2      0.774   0.00325     1.52e-10     26.7 
 3 mu         0.3      0.914   0.0588      9.99e- 8     10.5 
 4 mu         0.4      1.08    0.271       9.96e- 6      8.81
 5 mu         0.5      1.18    0.675       3.54e- 4      8.64
 6 mu         0.6      1.21    0.870       6.54e- 3      5.87
 7 mu         0.7      1.18    1.02        5.13e- 3      4.56
 8 mu         0.8      1.33    0.783       1.02e- 4     12.6 
 9 mu         0.9      2.33    0.125       6.41e- 8     58.9 
10 mu_1       0.1      0.902   0.000178    3.73e-15     39.4 
11 mu_1       0.2      0.853   0.0110      7.60e-10     12.1 
12 mu_1       0.3      0.990   0.125       3.33e- 7      8.92
13 mu_1       0.4      1.12    0.459       2.49e- 5      9.78
14 mu_1       0.5      1.19    0.790       7.08e- 4      7.68
15 mu_1       0.6      1.20    0.931       1.09e- 2      5.37
16 mu_1       0.7      1.18    1.03        6.67e- 4      4.60
17 mu_1       0.8      1.39    0.749       1.16e- 5     14.9 
18 mu_1       0.9      2.44    0.0969      1.13e- 8     62.2 
19 mu_0       0.1      0.631   0.00000495  0            43.8 
20 mu_0       0.2      0.754   0.00145     0            30.3 
21 mu_0       0.3      0.881   0.0277      0            13.7 
22 mu_0       0.4      1.05    0.143       0             8.15
23 mu_0       0.5      1.18    0.480       0             9.60
24 mu_0       0.6      1.24    0.742       0             8.15
25 mu_0       0.7      1.20    0.873       0             4.97
26 mu_0       0.8      1.11    0.948       0             5.93
27 mu_0       0.9      1.28    0.226       0            29.5 
[1] "Total run time was 60.471 seconds"
