
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1350"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  2  6  7  9  3  7  6  6  6  4  4 11 14  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03952 0.36233 0.60582 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
804 546 
[1] "treatment indicator table: "

  0   1 
519 831 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 669
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 72.282 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.166 0.0827
 2 mu         0.1   0.2 0.227 0.0820
 3 mu         0.1   0.3 0.262 0.105 
 4 mu         0.1   0.4 0.252 0.110 
 5 mu         0.1   0.5 0.341 0.107 
 6 mu         0.2   0.1 0.196 0.0540
 7 mu         0.2   0.2 0.233 0.0557
 8 mu         0.2   0.3 0.272 0.0711
 9 mu         0.2   0.4 0.279 0.0697
10 mu         0.2   0.5 0.342 0.0787
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.551      0.00226 0.00000000566     10.2 
 2 mu         0.2      0.572      0.0772  0.0000142         11.7 
 3 mu         0.3      0.669      0.410   0.00106            9.38
 4 mu         0.4      0.812      0.708   0.0179             6.18
 5 mu         0.5      0.921      0.831   0.112              3.51
 6 mu         0.6      0.984      0.932   0.370              1.99
 7 mu         0.7      1.06       1.07    0.216              2.14
 8 mu         0.8      1.12       0.972   0.0203             3.91
 9 mu         0.9      0.943      0.649   0.000182           5.91
10 mu_1       0.1      0.590      0.00988 0.0000000402      17.4 
11 mu_1       0.2      0.575      0.161   0.0000509         10.3 
12 mu_1       0.3      0.709      0.594   0.00256            5.78
13 mu_1       0.4      0.856      0.768   0.0327             3.57
14 mu_1       0.5      0.945      0.865   0.169              2.50
15 mu_1       0.6      1.00       0.984   0.374              1.97
16 mu_1       0.7      1.08       1.05    0.149              2.55
17 mu_1       0.8      1.12       0.958   0.0128             4.21
18 mu_1       0.9      0.913      0.588   0.000105           5.86
19 mu_0       0.1      0.547      0.00139 0.00000000182     10.4 
20 mu_0       0.2      0.571      0.0568  0.00000504        12.0 
21 mu_0       0.3      0.653      0.300   0.000422          10.9 
22 mu_0       0.4      0.783      0.600   0.00810            8.24
23 mu_0       0.5      0.897      0.787   0.0539             5.34
24 mu_0       0.6      0.960      0.850   0.200              3.02
25 mu_0       0.7      1.03       1.03    0.309              1.96
26 mu_0       0.8      1.14       1.05    0.0505             2.98
27 mu_0       0.9      1.22       1.01    0.000875           6.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.66    0.0000792  6.36e-15    270.  
 2 mu         0.2       9.87    0.00717    7.41e-10    739.  
 3 mu         0.3       7.87    0.0833     6.39e- 7    505.  
 4 mu         0.4       3.73    0.406      7.29e- 5    158.  
 5 mu         0.5       1.70    0.850      2.70e- 3     25.4 
 6 mu         0.6       1.18    1.06       6.15e- 3      5.89
 7 mu         0.7       1.35    0.978      1.49e- 4     21.4 
 8 mu         0.8       2.90    0.479      6.67e- 7    158.  
 9 mu         0.9       8.57    0.0472     5.15e-11    659.  
10 mu_1       0.1       7.80    0.000470   6.01e-14    569.  
11 mu_1       0.2      10.9     0.0219     3.50e- 9    778.  
12 mu_1       0.3       6.22    0.171      2.01e- 6    354.  
13 mu_1       0.4       2.64    0.598      1.72e- 4     83.2 
14 mu_1       0.5       1.37    0.876      5.10e- 3     12.7 
15 mu_1       0.6       1.14    1.05       1.28e- 3      3.89
16 mu_1       0.7       1.43    0.860      2.66e- 5     29.0 
17 mu_1       0.8       3.24    0.342      1.04e- 7    187.  
18 mu_1       0.9       8.99    0.0311     7.16e-12    694.  
19 mu_0       0.1       3.19    0.0000261  0           237.  
20 mu_0       0.2       9.61    0.00336    0           730.  
21 mu_0       0.3       8.58    0.0428     0           570.  
22 mu_0       0.4       4.46    0.254      0           208.  
23 mu_0       0.5       2.02    0.691      0            39.6 
24 mu_0       0.6       1.25    0.976      0            11.0 
25 mu_0       0.7       1.14    1.11       0             4.40
26 mu_0       0.8       1.51    0.873      0            41.6 
27 mu_0       0.9       4.76    0.145      0           347.  
[1] "Total run time was 76.695 seconds"
