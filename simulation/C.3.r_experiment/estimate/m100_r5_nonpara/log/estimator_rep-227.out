
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1127"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
12  6  7  6 11  8  7  6  4  5  4  8  3  4  7  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02926 0.31537 0.58655 0.94336 5.08647 
[1] "event indicator table: "

  0   1 
633 494 
[1] "treatment indicator table: "

  0   1 
451 676 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 545
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 70.101 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.637 0.143 
 2 mu         0.1   0.2 0.629 0.137 
 3 mu         0.1   0.3 0.657 0.144 
 4 mu         0.1   0.4 0.760 0.175 
 5 mu         0.1   0.5 0.851 0.207 
 6 mu         0.2   0.1 0.548 0.0879
 7 mu         0.2   0.2 0.560 0.0774
 8 mu         0.2   0.3 0.604 0.0828
 9 mu         0.2   0.4 0.695 0.103 
10 mu         0.2   0.5 0.768 0.119 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.02        0.111  0.000000453     19.7 
 2 mu         0.2      1.07        0.554  0.000405         7.36
 3 mu         0.3      1.03        0.911  0.00935          3.20
 4 mu         0.4      1.00        0.944  0.0695           2.18
 5 mu         0.5      1.01        1.02   0.262            1.94
 6 mu         0.6      1.03        1.03   0.506            1.77
 7 mu         0.7      1.02        1.03   0.345            2.00
 8 mu         0.8      0.982       0.970  0.0745           4.09
 9 mu         0.9      0.945       0.520  0.00155          7.11
10 mu_1       0.1      1.03        0.310  0.00000294       7.30
11 mu_1       0.2      1.03        0.846  0.00141          4.44
12 mu_1       0.3      0.980       0.976  0.0217           2.56
13 mu_1       0.4      0.984       0.958  0.121            2.15
14 mu_1       0.5      1.01        1.01   0.369            1.78
15 mu_1       0.6      1.03        1.06   0.351            1.96
16 mu_1       0.7      1.01        1.00   0.202            2.13
17 mu_1       0.8      0.976       0.909  0.0515           4.50
18 mu_1       0.9      0.945       0.480  0.000963         7.06
19 mu_0       0.1      1.02        0.0834 0.000000177     21.8 
20 mu_0       0.2      1.09        0.466  0.000155         8.96
21 mu_0       0.3      1.05        0.793  0.00405          3.77
22 mu_0       0.4      1.01        0.974  0.0348           2.61
23 mu_0       0.5      1.01        0.981  0.155            2.10
24 mu_0       0.6      1.03        1.04   0.420            1.73
25 mu_0       0.7      1.03        1.01   0.422            2.20
26 mu_0       0.8      1.01        0.983  0.166            2.67
27 mu_0       0.9      0.945       0.831  0.00685          7.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.44     0.000798  1.46e-16     40.2 
 2 mu         0.2       1.59     0.0282    6.79e-11     34.8 
 3 mu         0.3       1.34     0.217     1.32e- 7     19.3 
 4 mu         0.4       1.16     0.731     2.67e- 5     11.0 
 5 mu         0.5       1.09     0.865     1.54e- 3      5.47
 6 mu         0.6       1.07     1.00      1.65e- 2      3.42
 7 mu         0.7       1.09     1.11      3.50e- 4      4.05
 8 mu         0.8       1.20     0.542     1.19e- 6      7.49
 9 mu         0.9       1.46     0.0721    5.19e-11     21.9 
10 mu_1       0.1       1.77     0.00425   0            53.6 
11 mu_1       0.2       1.47     0.0937    0            23.2 
12 mu_1       0.3       1.26     0.334     0            17.9 
13 mu_1       0.4       1.15     0.881     0             7.62
14 mu_1       0.5       1.09     0.960     0             5.05
15 mu_1       0.6       1.07     0.980     0             2.85
16 mu_1       0.7       1.11     1.03      0             4.34
17 mu_1       0.8       1.24     0.400     0             8.19
18 mu_1       0.9       1.50     0.0458    0            23.1 
19 mu_0       0.1       1.40     0.000356  0            38.7 
20 mu_0       0.2       1.62     0.0130    0            37.7 
21 mu_0       0.3       1.37     0.135     0            19.9 
22 mu_0       0.4       1.16     0.468     0            13.2 
23 mu_0       0.5       1.09     0.939     0             5.89
24 mu_0       0.6       1.07     1.08      0             4.61
25 mu_0       0.7       1.05     0.965     0             3.38
26 mu_0       0.8       1.02     0.713     0             4.97
27 mu_0       0.9       1.06     0.139     0            12.2 
[1] "Total run time was 74.585 seconds"
