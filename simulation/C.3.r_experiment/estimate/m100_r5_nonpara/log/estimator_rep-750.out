
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1208"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  2 10 12  3  4  8  6  7  7  7  6  6  2  5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03467 0.34696 0.61049 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
737 471 
[1] "treatment indicator table: "

  0   1 
455 753 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.851 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.147  0.105 
 2 mu         0.1   0.2 0.108  0.0819
 3 mu         0.1   0.3 0.0699 0.0701
 4 mu         0.1   0.4 0.110  0.0991
 5 mu         0.1   0.5 0.0974 0.0969
 6 mu         0.2   0.1 0.201  0.100 
 7 mu         0.2   0.2 0.175  0.0796
 8 mu         0.2   0.3 0.150  0.0708
 9 mu         0.2   0.4 0.202  0.0989
10 mu         0.2   0.5 0.197  0.0974
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.153      0.00238  4.96e-10      2.66
 2 mu         0.2      0.401      0.0733   4.06e- 6      5.19
 3 mu         0.3      0.714      0.318    5.41e- 4      9.00
 4 mu         0.4      0.972      0.660    1.24e- 2      9.93
 5 mu         0.5      1.08       0.903    9.95e- 2      7.96
 6 mu         0.6      1.08       1.00     3.68e- 1      4.83
 7 mu         0.7      1.06       0.991    1.19e- 1      5.37
 8 mu         0.8      1.18       0.791    1.67e- 2     24.1 
 9 mu         0.9      1.87       0.350    3.10e- 4     98.1 
10 mu_1       0.1      0.395      0.0104   3.47e- 9      6.45
11 mu_1       0.2      0.645      0.175    1.42e- 5      9.73
12 mu_1       0.3      0.898      0.569    1.27e- 3     11.3 
13 mu_1       0.4      1.06       0.860    2.18e- 2      9.39
14 mu_1       0.5      1.09       1.01     1.41e- 1      6.15
15 mu_1       0.6      1.07       1.01     2.83e- 1      3.31
16 mu_1       0.7      1.07       0.960    8.42e- 2      7.35
17 mu_1       0.8      1.23       0.772    1.09e- 2     30.0 
18 mu_1       0.9      1.98       0.303    1.83e- 4    109.  
19 mu_0       0.1      0.126      0.00151  1.65e-10      2.36
20 mu_0       0.2      0.340      0.0473   1.52e- 6      4.79
21 mu_0       0.3      0.635      0.228    2.30e- 4      8.02
22 mu_0       0.4      0.916      0.517    6.10e- 3     10.3 
23 mu_0       0.5      1.07       0.819    5.79e- 2      9.77
24 mu_0       0.6      1.10       0.999    2.62e- 1      7.11
25 mu_0       0.7      1.05       1.02     1.99e- 1      3.96
26 mu_0       0.8      0.965      0.928    4.02e- 2      3.71
27 mu_0       0.9      0.878      0.583    1.45e- 3      7.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.13    0.000209   2.62e-16    237.  
 2 mu         0.2      17.2     0.0162     1.22e-10    922.  
 3 mu         0.3      16.9     0.101      2.37e- 7    940.  
 4 mu         0.4       9.61    0.308      4.80e- 5    467.  
 5 mu         0.5       4.12    0.656      2.78e- 3    128.  
 6 mu         0.6       1.90    1.04       6.99e- 2     26.1 
 7 mu         0.7       1.75    1.14       3.08e- 3     22.0 
 8 mu         0.8       4.48    0.635      2.47e- 5    163.  
 9 mu         0.9      16.5     0.0953     6.03e-10    956.  
10 mu_1       0.1      11.8     0.00149    2.49e-15    592.  
11 mu_1       0.2      20.7     0.0516     5.80e-10   1152.  
12 mu_1       0.3      14.7     0.247      7.50e- 7    783.  
13 mu_1       0.4       7.05    0.562      1.14e- 4    292.  
14 mu_1       0.5       2.98    0.962      5.28e- 3     64.0 
15 mu_1       0.6       1.64    1.11       2.74e- 2     15.6 
16 mu_1       0.7       1.92    1.06       1.03e- 3     31.5 
17 mu_1       0.8       5.21    0.530      6.17e- 6    204.  
18 mu_1       0.9      18.0     0.0730     1.34e-10   1062.  
19 mu_0       0.1       4.39    0.0000798  0           197.  
20 mu_0       0.2      16.3     0.00565    0           864.  
21 mu_0       0.3      17.9     0.0422     0          1007.  
22 mu_0       0.4      11.3     0.153      0           584.  
23 mu_0       0.5       5.26    0.441      0           192.  
24 mu_0       0.6       2.28    0.927      0            42.0 
25 mu_0       0.7       1.35    1.06       0             9.09
26 mu_0       0.8       1.54    0.983      0            23.4 
27 mu_0       0.9       3.85    0.264      0           131.  
[1] "Total run time was 44.142 seconds"
