
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1233"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  7  6  3  6  9  5 12  4  7  6  2  4  5 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04483 0.38213 0.62891 1.00000 9.00000 
[1] "event indicator table: "

  0   1 
738 495 
[1] "treatment indicator table: "

  0   1 
434 799 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 208.114 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.254 0.129 
 2 mu         0.1   0.2 0.407 0.170 
 3 mu         0.1   0.3 0.442 0.185 
 4 mu         0.1   0.4 0.440 0.191 
 5 mu         0.1   0.5 0.429 0.191 
 6 mu         0.2   0.1 0.289 0.0830
 7 mu         0.2   0.2 0.419 0.108 
 8 mu         0.2   0.3 0.456 0.110 
 9 mu         0.2   0.4 0.482 0.110 
10 mu         0.2   0.5 0.490 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.607       0.0233 0.00000252     28.3 
 2 mu         0.2      0.790       0.201  0.00111        13.2 
 3 mu         0.3      0.958       0.562  0.0181          5.98
 4 mu         0.4      1.05        0.926  0.0838          3.26
 5 mu         0.5      1.06        1.00   0.218           2.54
 6 mu         0.6      1.02        1.04   0.401           1.60
 7 mu         0.7      0.975       0.990  0.189           1.43
 8 mu         0.8      0.955       0.960  0.0138          1.95
 9 mu         0.9      1.01        0.725  0.0000708       6.65
10 mu_1       0.1      0.586       0.0903 0.0000139       6.39
11 mu_1       0.2      0.866       0.473  0.00356         7.63
12 mu_1       0.3      1.02        0.871  0.0394          4.05
13 mu_1       0.4      1.08        1.01   0.137           2.94
14 mu_1       0.5      1.06        1.03   0.293           2.35
15 mu_1       0.6      1.00        1.00   0.427           1.57
16 mu_1       0.7      0.965       0.979  0.131           1.51
17 mu_1       0.8      0.950       0.939  0.00871         2.07
18 mu_1       0.9      1.01        0.655  0.0000408       7.35
19 mu_0       0.1      0.610       0.0150 0.00000125     31.3 
20 mu_0       0.2      0.771       0.137  0.000501       16.2 
21 mu_0       0.3      0.933       0.431  0.00897         8.05
22 mu_0       0.4      1.04        0.897  0.0480          3.88
23 mu_0       0.5      1.07        0.952  0.142           2.73
24 mu_0       0.6      1.04        1.02   0.278           1.77
25 mu_0       0.7      0.999       1.02   0.323           1.57
26 mu_0       0.8      0.975       1.01   0.0341          1.63
27 mu_0       0.9      0.969       0.853  0.000341        2.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.04    0.0000186   8.55e-14    280.  
 2 mu         0.2      1.68    0.00353     7.87e- 9    109.  
 3 mu         0.3      1.28    0.0514      4.11e- 6     37.5 
 4 mu         0.4      1.13    0.250       2.31e- 4     10.9 
 5 mu         0.5      1.01    0.755       5.25e- 3      5.96
 6 mu         0.6      1.00    1.03        6.74e- 2      2.40
 7 mu         0.7      1.14    1.19        3.43e- 2      2.79
 8 mu         0.8      1.27    0.828       8.87e- 4      4.35
 9 mu         0.9      1.41    0.110       7.80e- 7     20.1 
10 mu_1       0.1      0.570   0.000117    0             9.31
11 mu_1       0.2      0.856   0.0102      0            14.5 
12 mu_1       0.3      1.02    0.103       0            11.2 
13 mu_1       0.4      1.02    0.417       0             8.92
14 mu_1       0.5      0.958   0.827       0             4.77
15 mu_1       0.6      1.02    1.04        0             2.40
16 mu_1       0.7      1.18    1.14        0             2.99
17 mu_1       0.8      1.30    0.665       0             5.44
18 mu_1       0.9      1.45    0.0793      0            22.4 
19 mu_0       0.1      3.32    0.00000635  0           311.  
20 mu_0       0.2      1.89    0.00162     0           136.  
21 mu_0       0.3      1.39    0.0226      0            53.5 
22 mu_0       0.4      1.21    0.126       0            18.2 
23 mu_0       0.5      1.06    0.495       0             7.15
24 mu_0       0.6      0.985   0.995       0             2.78
25 mu_0       0.7      1.06    1.11        0             2.42
26 mu_0       0.8      1.16    1.11        0             3.90
27 mu_0       0.9      1.06    0.293       0             5.80
[1] "Total run time was 215.757 seconds"
