
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1193"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  7 10  7  7  9  6  6  4  4  6  7  5  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05119 0.36652 0.63307 1.00000 4.41693 
[1] "event indicator table: "

  0   1 
705 488 
[1] "treatment indicator table: "

  0   1 
441 752 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 546
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 39.442 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.231 0.104 
 2 mu         0.1   0.2 0.217 0.0574
 3 mu         0.1   0.3 0.227 0.0556
 4 mu         0.1   0.4 0.219 0.0516
 5 mu         0.1   0.5 0.222 0.0517
 6 mu         0.2   0.1 0.290 0.0802
 7 mu         0.2   0.2 0.341 0.0565
 8 mu         0.2   0.3 0.373 0.0593
 9 mu         0.2   0.4 0.386 0.0611
10 mu         0.2   0.5 0.405 0.0649
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.424       0.0251 0.0000000180       5.19
 2 mu         0.2      0.823       0.269  0.0000367          6.32
 3 mu         0.3      1.02        0.644  0.00221            9.69
 4 mu         0.4      1.02        0.882  0.0295             6.55
 5 mu         0.5      0.993       0.983  0.164              2.67
 6 mu         0.6      0.997       0.982  0.389              1.93
 7 mu         0.7      0.997       0.992  0.343              1.89
 8 mu         0.8      0.954       0.891  0.0858             3.32
 9 mu         0.9      0.953       0.553  0.00419            7.86
10 mu_1       0.1      0.790       0.0996 0.000000120        6.06
11 mu_1       0.2      1.03        0.552  0.000123           9.30
12 mu_1       0.3      1.06        0.867  0.00494            9.52
13 mu_1       0.4      1.01        0.943  0.0501             4.94
14 mu_1       0.5      0.983       0.974  0.228              2.00
15 mu_1       0.6      0.994       1.00   0.402              2.04
16 mu_1       0.7      0.987       0.985  0.284              1.98
17 mu_1       0.8      0.944       0.848  0.0677             3.84
18 mu_1       0.9      0.960       0.492  0.00306            8.48
19 mu_0       0.1      0.384       0.0168 0.00000000664      5.19
20 mu_0       0.2      0.771       0.193  0.0000152          5.69
21 mu_0       0.3      0.999       0.494  0.00103            9.76
22 mu_0       0.4      1.03        0.791  0.0158             7.63
23 mu_0       0.5      1.00        0.940  0.101              3.46
24 mu_0       0.6      1.00        1.01   0.356              2.32
25 mu_0       0.7      1.02        1.00   0.408              2.13
26 mu_0       0.8      0.995       1.02   0.158              2.15
27 mu_0       0.9      0.889       0.798  0.0143             2.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      26.1     0.000134   4.00e-16   2388.  
 2 mu         0.2      17.7     0.00986    1.05e-10   1632.  
 3 mu         0.3       5.94    0.0920     1.55e- 7    495.  
 4 mu         0.4       1.86    0.368      2.75e- 5     87.2 
 5 mu         0.5       1.14    0.839      1.33e- 3      9.07
 6 mu         0.6       1.07    1.07       3.55e- 3      3.16
 7 mu         0.7       1.07    1.12       5.54e- 5      2.28
 8 mu         0.8       1.19    0.691      1.45e- 7      7.20
 9 mu         0.9       1.97    0.127      4.96e-12     60.0 
10 mu_1       0.1      30.1     0.000779   4.00e-15   2809.  
11 mu_1       0.2      10.7     0.0328     5.24e-10    960.  
12 mu_1       0.3       2.92    0.184      5.16e- 7    194.  
13 mu_1       0.4       1.31    0.571      6.87e- 5     25.7 
14 mu_1       0.5       1.12    1.08       2.67e- 3      6.69
15 mu_1       0.6       1.10    1.14       3.70e- 4      3.01
16 mu_1       0.7       1.09    1.06       4.95e- 6      3.26
17 mu_1       0.8       1.23    0.561      1.13e- 8      9.00
18 mu_1       0.9       2.07    0.0909     3.45e-13     66.7 
19 mu_0       0.1      25.6     0.0000498  0          2341.  
20 mu_0       0.2      19.5     0.00443    0          1800.  
21 mu_0       0.3       7.23    0.0439     0           625.  
22 mu_0       0.4       2.23    0.214      0           128.  
23 mu_0       0.5       1.16    0.572      0            15.6 
24 mu_0       0.6       1.04    0.929      0             3.76
25 mu_0       0.7       1.02    1.03       0             2.76
26 mu_0       0.8       1.02    0.939      0             3.42
27 mu_0       0.9       1.03    0.221      0             5.29
[1] "Total run time was 42.677 seconds"
