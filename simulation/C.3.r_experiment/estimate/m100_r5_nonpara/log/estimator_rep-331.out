
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1255"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  6  7  7  6  6  9  9  8  7  7  5  5  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04079 0.38913 0.62589 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
746 509 
[1] "treatment indicator table: "

  0   1 
445 810 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 39.995 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.207 0.122 
 2 mu         0.1   0.2 0.180 0.105 
 3 mu         0.1   0.3 0.152 0.114 
 4 mu         0.1   0.4 0.225 0.0972
 5 mu         0.1   0.5 0.251 0.107 
 6 mu         0.2   0.1 0.277 0.104 
 7 mu         0.2   0.2 0.277 0.0893
 8 mu         0.2   0.3 0.285 0.0960
 9 mu         0.2   0.4 0.354 0.0860
10 mu         0.2   0.5 0.383 0.0921
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.349      0.00639 0.0000000561      8.84
 2 mu         0.2      0.608      0.107   0.000114          6.46
 3 mu         0.3      0.819      0.428   0.00601           5.49
 4 mu         0.4      0.946      0.766   0.0629            4.23
 5 mu         0.5      1.00       0.926   0.220             2.48
 6 mu         0.6      1.01       0.992   0.474             1.75
 7 mu         0.7      0.995      0.988   0.303             1.62
 8 mu         0.8      0.985      0.944   0.101             2.36
 9 mu         0.9      1.09       0.751   0.00439           7.36
10 mu_1       0.1      0.521      0.0261  0.000000374       8.94
11 mu_1       0.2      0.750      0.259   0.000379          6.73
12 mu_1       0.3      0.907      0.641   0.0122            5.42
13 mu_1       0.4      0.988      0.880   0.0978            3.47
14 mu_1       0.5      1.02       0.992   0.351             2.24
15 mu_1       0.6      1.01       0.991   0.300             1.73
16 mu_1       0.7      0.992      1.00    0.140             1.63
17 mu_1       0.8      0.989      0.910   0.0452            2.62
18 mu_1       0.9      1.10       0.684   0.00307           7.96
19 mu_0       0.1      0.330      0.00405 0.0000000208      9.64
20 mu_0       0.2      0.572      0.0726  0.0000473         6.62
21 mu_0       0.3      0.781      0.343   0.00316           5.92
22 mu_0       0.4      0.918      0.675   0.0303            4.78
23 mu_0       0.5      0.988      0.885   0.0855            2.94
24 mu_0       0.6      1.01       0.961   0.196             2.03
25 mu_0       0.7      1.00       0.965   0.386             1.79
26 mu_0       0.8      0.970      1.00    0.248             1.77
27 mu_0       0.9      0.983      0.848   0.0162            3.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.890    0.0000443  3.93e-15     71.3 
 2 mu         0.2      1.27     0.00489    4.58e-10     55.6 
 3 mu         0.3      1.41     0.0731     3.94e- 7     28.7 
 4 mu         0.4      1.28     0.310      4.50e- 5     12.4 
 5 mu         0.5      1.11     0.772      1.66e- 3      5.09
 6 mu         0.6      1.04     1.06       2.95e- 2      2.30
 7 mu         0.7      1.06     1.10       1.51e- 2      2.92
 8 mu         0.8      1.11     0.726      2.27e- 4      4.09
 9 mu         0.9      1.21     0.130      9.97e- 8     11.8 
10 mu_1       0.1      1.29     0.000266   3.71e-14     79.3 
11 mu_1       0.2      1.39     0.0159     2.16e- 9     30.9 
12 mu_1       0.3      1.36     0.156      1.24e- 6     16.7 
13 mu_1       0.4      1.18     0.534      1.06e- 4      9.68
14 mu_1       0.5      1.06     0.924      3.14e- 3      3.32
15 mu_1       0.6      1.03     1.05       4.65e- 2      2.66
16 mu_1       0.7      1.07     1.04       6.34e- 3      2.96
17 mu_1       0.8      1.13     0.594      8.33e- 5      5.12
18 mu_1       0.9      1.23     0.100      3.26e- 8     13.1 
19 mu_0       0.1      0.845    0.0000141  0            70.5 
20 mu_0       0.2      1.24     0.00222    0            61.8 
21 mu_0       0.3      1.43     0.0351     0            36.4 
22 mu_0       0.4      1.34     0.154      0            16.5 
23 mu_0       0.5      1.16     0.556      0             7.00
24 mu_0       0.6      1.04     1.03       0             3.26
25 mu_0       0.7      1.03     1.08       0             2.99
26 mu_0       0.8      1.03     0.956      0             3.31
27 mu_0       0.9      1.04     0.252      0             6.29
[1] "Total run time was 43.27 seconds"
