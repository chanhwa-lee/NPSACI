
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1309"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  6  9  2  4  9  6  7  2 11  3  6 15  8  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05122 0.37757 0.61967 1.00000 5.73241 
[1] "event indicator table: "

  0   1 
751 558 
[1] "treatment indicator table: "

  0   1 
451 858 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 75.681 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.213 0.120 
 2 mu         0.1   0.2 0.277 0.104 
 3 mu         0.1   0.3 0.261 0.0963
 4 mu         0.1   0.4 0.361 0.131 
 5 mu         0.1   0.5 0.336 0.120 
 6 mu         0.2   0.1 0.239 0.0812
 7 mu         0.2   0.2 0.351 0.0745
 8 mu         0.2   0.3 0.361 0.0724
 9 mu         0.2   0.4 0.459 0.100 
10 mu         0.2   0.5 0.448 0.0918
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.274       0.0225 0.0000000986      7.08
 2 mu         0.2      0.607       0.231  0.0000717         4.75
 3 mu         0.3      0.858       0.619  0.00205           3.61
 4 mu         0.4      0.960       0.943  0.0190            2.78
 5 mu         0.5      0.972       0.979  0.0951            1.94
 6 mu         0.6      0.970       0.969  0.320             1.84
 7 mu         0.7      0.979       0.946  0.279             1.72
 8 mu         0.8      1.02        1.02   0.125             2.28
 9 mu         0.9      1.12        0.852  0.00528           4.37
10 mu_1       0.1      0.537       0.0828 0.000000702       6.60
11 mu_1       0.2      0.815       0.462  0.000276          3.94
12 mu_1       0.3      0.961       0.897  0.00523           3.81
13 mu_1       0.4      0.986       0.973  0.0367            2.36
14 mu_1       0.5      0.972       1.02   0.150             2.01
15 mu_1       0.6      0.971       0.953  0.392             1.76
16 mu_1       0.7      0.988       0.947  0.242             1.70
17 mu_1       0.8      1.04        1.01   0.0949            2.64
18 mu_1       0.9      1.14        0.825  0.00373           4.70
19 mu_0       0.1      0.245       0.0149 0.0000000252      7.14
20 mu_0       0.2      0.555       0.164  0.0000205         5.25
21 mu_0       0.3      0.813       0.501  0.000694          3.53
22 mu_0       0.4      0.942       0.872  0.00715           3.15
23 mu_0       0.5      0.971       0.982  0.0401            2.00
24 mu_0       0.6      0.968       0.987  0.151             1.99
25 mu_0       0.7      0.960       0.922  0.172             1.77
26 mu_0       0.8      0.959       0.941  0.0507            1.75
27 mu_0       0.9      0.999       1.00   0.00452           3.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       8.54   0.0000199   6.20e-16    463.  
 2 mu         0.2       6.79   0.00530     8.12e-11    400.  
 3 mu         0.3       3.32   0.0580      8.00e- 8    159.  
 4 mu         0.4       1.69   0.258       1.06e- 5     38.0 
 5 mu         0.5       1.21   0.760       4.73e- 4      7.12
 6 mu         0.6       1.08   1.08        1.05e- 2      2.80
 7 mu         0.7       1.04   0.957       1.42e- 2      2.99
 8 mu         0.8       1.05   0.647       9.54e- 5      5.06
 9 mu         0.9       1.11   0.104       1.47e- 8     10.5 
10 mu_1       0.1      10.0    0.000112    6.20e-15    617.  
11 mu_1       0.2       4.46   0.0153      4.06e-10    267.  
12 mu_1       0.3       1.96   0.145       2.67e- 7     70.5 
13 mu_1       0.4       1.27   0.484       2.66e- 5     12.7 
14 mu_1       0.5       1.11   0.931       9.46e- 4      5.35
15 mu_1       0.6       1.04   1.02        1.75e- 2      2.87
16 mu_1       0.7       1.02   0.916       2.71e- 3      3.56
17 mu_1       0.8       1.06   0.522       1.59e- 5      5.27
18 mu_1       0.9       1.11   0.0715      2.18e- 9     11.5 
19 mu_0       0.1       8.37   0.00000643  0           446.  
20 mu_0       0.2       7.38   0.00208     0           434.  
21 mu_0       0.3       3.91   0.0223      0           196.  
22 mu_0       0.4       1.96   0.144       0            54.9 
23 mu_0       0.5       1.32   0.526       0             9.85
24 mu_0       0.6       1.14   1.03        0             3.86
25 mu_0       0.7       1.07   1.12        0             2.92
26 mu_0       0.8       1.05   0.897       0             4.22
27 mu_0       0.9       1.12   0.278       0             6.84
[1] "Total run time was 80.295 seconds"
