
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1235"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10 10  9  4  4  6  4  2  5  7  6  6  9  3 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03297 0.33330 0.58181 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
743 492 
[1] "treatment indicator table: "

  0   1 
456 779 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 39.656 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.360 0.0949
 2 mu         0.1   0.2 0.451 0.118 
 3 mu         0.1   0.3 0.489 0.119 
 4 mu         0.1   0.4 0.514 0.114 
 5 mu         0.1   0.5 0.514 0.114 
 6 mu         0.2   0.1 0.309 0.0531
 7 mu         0.2   0.2 0.409 0.0827
 8 mu         0.2   0.3 0.485 0.0968
 9 mu         0.2   0.4 0.526 0.0931
10 mu         0.2   0.5 0.529 0.0932
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.788       0.0165  3.23e-10     10.2 
 2 mu         0.2      0.899       0.220   1.66e- 6      7.32
 3 mu         0.3      0.913       0.601   1.90e- 4      5.73
 4 mu         0.4      0.927       0.778   4.39e- 3      3.17
 5 mu         0.5      0.943       0.937   4.00e- 2      2.07
 6 mu         0.6      0.961       0.918   1.92e- 1      2.02
 7 mu         0.7      0.962       0.983   2.44e- 1      1.79
 8 mu         0.8      0.937       0.960   5.65e- 2      2.00
 9 mu         0.9      0.899       0.809   5.11e- 4      5.03
10 mu_1       0.1      0.912       0.0502  2.38e- 9      8.89
11 mu_1       0.2      0.934       0.409   6.34e- 6      7.59
12 mu_1       0.3      0.922       0.711   4.86e- 4      4.46
13 mu_1       0.4      0.934       0.905   8.43e- 3      2.32
14 mu_1       0.5      0.953       0.936   6.18e- 2      2.11
15 mu_1       0.6      0.970       0.940   2.50e- 1      2.04
16 mu_1       0.7      0.965       1.02    1.57e- 1      1.77
17 mu_1       0.8      0.937       0.916   2.54e- 2      2.32
18 mu_1       0.9      0.898       0.806   3.12e- 4      5.45
19 mu_0       0.1      0.774       0.0101  8.44e-11     11.2 
20 mu_0       0.2      0.890       0.158   4.86e- 7      7.25
21 mu_0       0.3      0.909       0.459   6.36e- 5      6.28
22 mu_0       0.4      0.922       0.696   1.70e- 3      3.74
23 mu_0       0.5      0.933       0.885   1.82e- 2      2.48
24 mu_0       0.6      0.947       0.926   1.03e- 1      1.99
25 mu_0       0.7      0.955       0.914   3.58e- 1      1.97
26 mu_0       0.8      0.938       0.954   6.77e- 2      1.79
27 mu_0       0.9      0.907       0.847   2.00e- 3      2.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     12.2      0.000114   3.31e-17   1173.  
 2 mu         0.2      3.59     0.0113     1.54e-11    250.  
 3 mu         0.3      1.63     0.102      3.00e- 8     29.7 
 4 mu         0.4      1.24     0.388      6.07e- 6     11.4 
 5 mu         0.5      1.04     0.677      3.51e- 4      4.92
 6 mu         0.6      0.951    0.919      1.43e- 3      3.52
 7 mu         0.7      0.959    0.799      7.06e- 6      3.03
 8 mu         0.8      1.13     0.856      3.64e- 9      4.61
 9 mu         0.9      1.65     0.148      7.81e-15     25.8 
10 mu_1       0.1      6.92     0.000625   3.15e-16    586.  
11 mu_1       0.2      2.06     0.0380     7.34e-11     62.5 
12 mu_1       0.3      1.39     0.229      9.49e- 8     16.1 
13 mu_1       0.4      1.11     0.592      1.44e- 5      7.15
14 mu_1       0.5      0.967    0.864      6.67e- 4      3.64
15 mu_1       0.6      0.928    0.760      1.19e- 4      3.62
16 mu_1       0.7      0.974    0.843      5.04e- 7      3.24
17 mu_1       0.8      1.18     0.658      2.28e-10      5.77
18 mu_1       0.9      1.72     0.0965     4.34e-16     28.7 
19 mu_0       0.1     12.8      0.0000508  0          1238.  
20 mu_0       0.2      3.97     0.00473    0           297.  
21 mu_0       0.3      1.74     0.0462     0            40.3 
22 mu_0       0.4      1.33     0.242      0            14.6 
23 mu_0       0.5      1.12     0.517      0             7.65
24 mu_0       0.6      0.985    0.775      0             3.71
25 mu_0       0.7      0.924    0.788      0             3.61
26 mu_0       0.8      0.933    0.772      0             3.71
27 mu_0       0.9      1.04     0.146      0             5.71
[1] "Total run time was 42.946 seconds"
