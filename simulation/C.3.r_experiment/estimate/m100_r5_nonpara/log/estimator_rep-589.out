
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1276"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  9  7  7  6  6  2  6  2  6  7  9  6  5 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03415 0.38587 0.64042 1.00000 4.46248 
[1] "event indicator table: "

  0   1 
779 497 
[1] "treatment indicator table: "

  0   1 
441 835 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 85.956 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.314 0.109 
 2 mu         0.1   0.2 0.409 0.139 
 3 mu         0.1   0.3 0.383 0.130 
 4 mu         0.1   0.4 0.362 0.128 
 5 mu         0.1   0.5 0.365 0.129 
 6 mu         0.2   0.1 0.246 0.0566
 7 mu         0.2   0.2 0.317 0.0720
 8 mu         0.2   0.3 0.310 0.0712
 9 mu         0.2   0.4 0.300 0.0735
10 mu         0.2   0.5 0.319 0.0736
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.595      0.00813  6.03e-10     11.0 
 2 mu         0.2      0.586      0.141    4.95e- 6      5.12
 3 mu         0.3      0.667      0.485    4.51e- 4      3.34
 4 mu         0.4      0.829      0.707    7.79e- 3      2.42
 5 mu         0.5      0.968      0.859    5.64e- 2      3.09
 6 mu         0.6      1.03       0.985    1.93e- 1      3.02
 7 mu         0.7      1.04       1.05     1.35e- 1      1.97
 8 mu         0.8      1.04       0.983    6.35e- 2      3.17
 9 mu         0.9      1.02       0.784    2.17e- 2      4.67
10 mu_1       0.1      0.573      0.0383   4.23e- 9      7.03
11 mu_1       0.2      0.614      0.274    1.73e- 5      3.96
12 mu_1       0.3      0.747      0.643    1.13e- 3      2.41
13 mu_1       0.4      0.907      0.742    1.47e- 2      2.73
14 mu_1       0.5      1.00       0.892    8.54e- 2      3.25
15 mu_1       0.6      1.03       0.992    2.40e- 1      2.83
16 mu_1       0.7      1.04       1.02     9.39e- 2      2.14
17 mu_1       0.8      1.04       0.981    7.51e- 2      3.42
18 mu_1       0.9      1.02       0.813    1.42e- 2      4.73
19 mu_0       0.1      0.598      0.00477  2.01e-10     12.2 
20 mu_0       0.2      0.579      0.106    1.84e- 6      5.48
21 mu_0       0.3      0.632      0.403    1.60e- 4      3.90
22 mu_0       0.4      0.777      0.674    3.21e- 3      2.46
23 mu_0       0.5      0.930      0.798    2.74e- 2      2.98
24 mu_0       0.6      1.02       0.934    1.23e- 1      3.30
25 mu_0       0.7      1.05       1.02     2.04e- 1      2.35
26 mu_0       0.8      1.05       1.04     1.72e- 2      2.21
27 mu_0       0.9      0.996      0.879    8.19e- 5      4.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.37     0.0000559  7.55e-19    113.  
 2 mu         0.2      3.92     0.00968    7.92e-13    147.  
 3 mu         0.3      4.05     0.108      2.63e- 9    114.  
 4 mu         0.4      3.10     0.437      8.31e- 7     58.8 
 5 mu         0.5      2.02     0.941      7.20e- 5     21.4 
 6 mu         0.6      1.30     1.02       2.76e- 3      5.16
 7 mu         0.7      0.988    0.864      2.91e- 2      3.27
 8 mu         0.8      1.14     0.786      5.74e- 4     15.1 
 9 mu         0.9      2.11     0.135      4.49e- 7     63.1 
10 mu_1       0.1      4.16     0.000464   7.55e-18    188.  
11 mu_1       0.2      4.29     0.0268     3.96e-12    147.  
12 mu_1       0.3      3.54     0.227      8.78e- 9     85.8 
13 mu_1       0.4      2.48     0.690      2.08e- 6     37.3 
14 mu_1       0.5      1.64     1.11       1.44e- 4     11.0 
15 mu_1       0.6      1.14     0.972      4.60e- 3      4.12
16 mu_1       0.7      0.949    0.885      1.11e- 2      3.37
17 mu_1       0.8      1.19     0.635      1.91e- 4     17.9 
18 mu_1       0.9      2.21     0.102      1.33e- 7     66.4 
19 mu_0       0.1      2.17     0.0000192  0           110.  
20 mu_0       0.2      3.83     0.00416    0           147.  
21 mu_0       0.3      4.26     0.0540     0           130.  
22 mu_0       0.4      3.51     0.269      0            78.4 
23 mu_0       0.5      2.40     0.754      0            34.2 
24 mu_0       0.6      1.55     1.05       0            10.3 
25 mu_0       0.7      1.08     0.958      0             3.03
26 mu_0       0.8      0.939    0.717      0             3.98
27 mu_0       0.9      1.22     0.215      0            33.2 
[1] "Total run time was 90.855 seconds"
