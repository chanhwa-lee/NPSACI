
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1233"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3 10 10  6  9  5  8  3  3  6  9  5  4  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03147 0.34610 0.60230 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
733 500 
[1] "treatment indicator table: "

  0   1 
427 806 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 576
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.74 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.0335 0.0614
 2 mu         0.1   0.2 0.0496 0.0622
 3 mu         0.1   0.3 0.0823 0.0719
 4 mu         0.1   0.4 0.0542 0.0949
 5 mu         0.1   0.5 0.0396 0.106 
 6 mu         0.2   0.1 0.137  0.0653
 7 mu         0.2   0.2 0.176  0.0730
 8 mu         0.2   0.3 0.216  0.0812
 9 mu         0.2   0.4 0.207  0.0970
10 mu         0.2   0.5 0.206  0.107 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.243      0.00432  1.03e- 9      6.11
 2 mu         0.2      0.490      0.0847   8.46e- 6     10.5 
 3 mu         0.3      0.676      0.362    9.67e- 4      6.28
 4 mu         0.4      0.849      0.714    1.62e- 2      5.72
 5 mu         0.5      0.972      0.922    1.01e- 1      3.97
 6 mu         0.6      1.02       1.00     3.03e- 1      2.17
 7 mu         0.7      1.00       0.992    4.45e- 1      1.60
 8 mu         0.8      0.944      0.890    8.49e- 2      2.41
 9 mu         0.9      0.881      0.518    1.01e- 3      7.17
10 mu_1       0.1      0.481      0.0186   7.20e- 9      8.74
11 mu_1       0.2      0.634      0.203    2.97e- 5     10.5 
12 mu_1       0.3      0.779      0.589    2.21e- 3      6.60
13 mu_1       0.4      0.921      0.878    2.78e- 2      4.96
14 mu_1       0.5      1.01       0.964    1.39e- 1      2.98
15 mu_1       0.6      1.03       1.02     3.53e- 1      1.79
16 mu_1       0.7      1.00       0.992    3.76e- 1      1.98
17 mu_1       0.8      0.939      0.855    5.82e- 2      2.82
18 mu_1       0.9      0.880      0.474    6.21e- 4      7.96
19 mu_0       0.1      0.217      0.00234  3.42e-10      5.82
20 mu_0       0.2      0.454      0.0559   3.15e- 6     10.5 
21 mu_0       0.3      0.632      0.251    4.36e- 4      7.17
22 mu_0       0.4      0.800      0.557    8.51e- 3      6.22
23 mu_0       0.5      0.937      0.869    4.12e- 2      4.95
24 mu_0       0.6      1.01       0.964    1.23e- 1      3.07
25 mu_0       0.7      1.01       1.01     2.72e- 1      1.81
26 mu_0       0.8      0.964      0.968    1.79e- 1      1.93
27 mu_0       0.9      0.889      0.856    4.52e- 3      2.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.421    0.0000592  1.63e-16     23.1 
 2 mu         0.2      1.10     0.00496    7.59e-11     45.7 
 3 mu         0.3      1.49     0.0692     1.47e- 7     46.1 
 4 mu         0.4      1.52     0.326      2.98e- 5     32.5 
 5 mu         0.5      1.36     0.767      1.73e- 3     17.0 
 6 mu         0.6      1.20     1.04       4.28e- 2      6.63
 7 mu         0.7      1.10     0.993      4.99e- 2      5.19
 8 mu         0.8      1.15     0.711      9.79e- 4      5.22
 9 mu         0.9      1.48     0.129      5.45e- 7     24.4 
10 mu_1       0.1      1.09     0.000386   1.55e-15     57.8 
11 mu_1       0.2      1.52     0.0186     3.60e-10     57.1 
12 mu_1       0.3      1.56     0.153      4.66e- 7     38.4 
13 mu_1       0.4      1.43     0.512      7.09e- 5     20.3 
14 mu_1       0.5      1.27     0.966      3.28e- 3      9.19
15 mu_1       0.6      1.15     0.961      6.73e- 2      6.44
16 mu_1       0.7      1.09     0.951      2.25e- 2      4.69
17 mu_1       0.8      1.18     0.625      4.32e- 4      6.19
18 mu_1       0.9      1.51     0.0864     2.23e- 7     25.8 
19 mu_0       0.1      0.347    0.0000194  0            19.3 
20 mu_0       0.2      0.995    0.00196    0            42.8 
21 mu_0       0.3      1.46     0.0315     0            49.4 
22 mu_0       0.4      1.58     0.170      0            40.6 
23 mu_0       0.5      1.45     0.545      0            25.5 
24 mu_0       0.6      1.27     0.987      0            12.0 
25 mu_0       0.7      1.13     1.04       0             6.38
26 mu_0       0.8      1.04     0.965      0             4.86
27 mu_0       0.9      1.22     0.289      0            12.2 
[1] "Total run time was 62.177 seconds"
