
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1253"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  6  5  5  6 12  6  5  9  3 13  2  5  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02341 0.30455 0.57347 0.91995 4.10016 
[1] "event indicator table: "

  0   1 
727 526 
[1] "treatment indicator table: "

  0   1 
501 752 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.686 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.439 0.142 
 2 mu         0.1   0.2 0.575 0.192 
 3 mu         0.1   0.3 0.656 0.216 
 4 mu         0.1   0.4 0.688 0.226 
 5 mu         0.1   0.5 0.703 0.236 
 6 mu         0.2   0.1 0.393 0.0908
 7 mu         0.2   0.2 0.503 0.117 
 8 mu         0.2   0.3 0.570 0.127 
 9 mu         0.2   0.4 0.602 0.137 
10 mu         0.2   0.5 0.624 0.140 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.18        0.0310 0.0000000359     31.0 
 2 mu         0.2      1.08        0.288  0.0000430        15.7 
 3 mu         0.3      1.03        0.719  0.00206           5.79
 4 mu         0.4      1.02        0.925  0.0254            2.74
 5 mu         0.5      1.00        1.02   0.144             2.24
 6 mu         0.6      0.993       0.987  0.471             1.76
 7 mu         0.7      0.987       1.01   0.197             2.01
 8 mu         0.8      0.952       0.825  0.0297            2.96
 9 mu         0.9      0.879       0.426  0.000476          5.15
10 mu_1       0.1      1.27        0.128  0.000000248      24.1 
11 mu_1       0.2      0.983       0.534  0.000149          6.87
12 mu_1       0.3      1.00        0.903  0.00480           2.83
13 mu_1       0.4      1.01        1.00   0.0451            2.59
14 mu_1       0.5      0.998       0.989  0.210             2.10
15 mu_1       0.6      0.993       0.981  0.403             1.66
16 mu_1       0.7      0.986       0.986  0.146             2.26
17 mu_1       0.8      0.947       0.793  0.0180            3.03
18 mu_1       0.9      0.870       0.391  0.000261          5.29
19 mu_0       0.1      1.17        0.0206 0.0000000124     31.7 
20 mu_0       0.2      1.11        0.207  0.0000165        17.9 
21 mu_0       0.3      1.04        0.593  0.000883          7.15
22 mu_0       0.4      1.03        0.917  0.0123            3.11
23 mu_0       0.5      1.01        1.02   0.0789            2.39
24 mu_0       0.6      0.992       0.972  0.301             1.92
25 mu_0       0.7      0.989       0.965  0.317             1.76
26 mu_0       0.8      0.974       0.978  0.0685            2.71
27 mu_0       0.9      0.967       0.735  0.00241           3.89
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.77    0.000230   5.10e-14    110.  
 2 mu         0.2       2.62    0.0185     5.28e- 9     56.9 
 3 mu         0.3       2.00    0.139      3.98e- 6     33.2 
 4 mu         0.4       1.35    0.555      3.89e- 4     16.5 
 5 mu         0.5       1.05    0.910      1.09e- 2      4.52
 6 mu         0.6       1.06    1.05       1.73e- 2      3.80
 7 mu         0.7       1.28    1.02       4.81e- 4      8.74
 8 mu         0.8       1.69    0.431      2.82e- 6     16.7 
 9 mu         0.9       1.88    0.0539     3.88e-10     48.8 
10 mu_1       0.1       3.01    0.00136    4.56e-13     86.6 
11 mu_1       0.2       2.32    0.0562     2.36e- 8     40.7 
12 mu_1       0.3       1.64    0.294      1.19e- 5     27.6 
13 mu_1       0.4       1.16    0.812      8.71e- 4     10.3 
14 mu_1       0.5       1.02    1.05       1.93e- 2      2.90
15 mu_1       0.6       1.09    1.01       2.07e- 3      4.98
16 mu_1       0.7       1.34    0.964      4.91e- 5      9.81
17 mu_1       0.8       1.75    0.329      2.52e- 7     19.5 
18 mu_1       0.9       1.86    0.0333     3.08e-11     50.8 
19 mu_0       0.1       2.75    0.0000894  0           113.  
20 mu_0       0.2       2.70    0.00683    0            65.2 
21 mu_0       0.3       2.15    0.0776     0            35.5 
22 mu_0       0.4       1.48    0.342      0            20.6 
23 mu_0       0.5       1.09    0.871      0             6.77
24 mu_0       0.6       1.01    1.00       0             3.42
25 mu_0       0.7       1.13    0.950      0             6.24
26 mu_0       0.8       1.48    0.901      0            12.1 
27 mu_0       0.9       2.06    0.206      0            30.5 
[1] "Total run time was 55.775 seconds"
