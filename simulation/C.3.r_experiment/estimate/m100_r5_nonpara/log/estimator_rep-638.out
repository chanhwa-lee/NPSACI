
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1161"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 16 17 18 19 20 
 6  4  9  9 10  4  9  7  5 14  8  6  5  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04596 0.34409 0.58071 1.00000 4.32348 
[1] "event indicator table: "

  0   1 
669 492 
[1] "treatment indicator table: "

  0   1 
461 700 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 544
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.533 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.462 0.206 
 2 mu         0.1   0.2 0.658 0.266 
 3 mu         0.1   0.3 0.683 0.284 
 4 mu         0.1   0.4 0.746 0.307 
 5 mu         0.1   0.5 0.854 0.329 
 6 mu         0.2   0.1 0.368 0.0802
 7 mu         0.2   0.2 0.533 0.0965
 8 mu         0.2   0.3 0.569 0.103 
 9 mu         0.2   0.4 0.611 0.105 
10 mu         0.2   0.5 0.702 0.123 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.25        0.0472 0.000000192      56.2 
 2 mu         0.2      1.05        0.366  0.0000736        11.0 
 3 mu         0.3      1.02        0.707  0.00206           5.38
 4 mu         0.4      1.02        0.936  0.0195            3.09
 5 mu         0.5      1.04        1.01   0.0995            2.13
 6 mu         0.6      1.05        1.02   0.339             1.86
 7 mu         0.7      1.03        1.02   0.402             2.35
 8 mu         0.8      1.00        0.908  0.108             2.23
 9 mu         0.9      1.01        0.657  0.00380           6.64
10 mu_1       0.1      0.999       0.175  0.00000145       12.7 
11 mu_1       0.2      1.04        0.630  0.000280          6.71
12 mu_1       0.3      1.04        0.960  0.00528           4.51
13 mu_1       0.4      1.04        1.05   0.0379            2.41
14 mu_1       0.5      1.05        1.02   0.158             2.18
15 mu_1       0.6      1.04        1.02   0.352             1.95
16 mu_1       0.7      1.02        1.02   0.354             2.42
17 mu_1       0.8      0.990       0.863  0.0747            2.52
18 mu_1       0.9      1.01        0.604  0.00238           7.38
19 mu_0       0.1      1.28        0.0331 0.0000000524     62.5 
20 mu_0       0.2      1.05        0.265  0.0000221        13.6 
21 mu_0       0.3      1.01        0.589  0.000686          5.75
22 mu_0       0.4      1.01        0.890  0.00721           3.53
23 mu_0       0.5      1.03        1.02   0.0413            2.23
24 mu_0       0.6      1.05        1.04   0.158             2.02
25 mu_0       0.7      1.06        1.06   0.251             2.18
26 mu_0       0.8      1.05        1.03   0.174             2.62
27 mu_0       0.9      1.01        0.867  0.0165            3.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.30     0.000173   7.50e-14     62.7 
 2 mu         0.2      1.84     0.0169     4.37e- 9     38.6 
 3 mu         0.3      1.65     0.132      2.51e- 6     20.1 
 4 mu         0.4      1.31     0.604      1.42e- 4     13.9 
 5 mu         0.5      1.13     0.995      3.24e- 3      6.31
 6 mu         0.6      1.07     1.14       4.15e- 2      2.86
 7 mu         0.7      1.06     1.07       3.24e- 3      3.44
 8 mu         0.8      1.21     0.663      1.89e- 5     10.8 
 9 mu         0.9      1.77     0.105      1.85e- 9     31.2 
10 mu_1       0.1      1.98     0.000986   7.05e-13     57.0 
11 mu_1       0.2      1.92     0.0530     2.05e- 8     30.1 
12 mu_1       0.3      1.49     0.291      7.87e- 6     18.3 
13 mu_1       0.4      1.20     0.936      3.56e- 4      9.47
14 mu_1       0.5      1.10     1.07       6.47e- 3      3.44
15 mu_1       0.6      1.07     1.06       1.71e- 2      2.77
16 mu_1       0.7      1.08     1.06       9.66e- 4      4.64
17 mu_1       0.8      1.27     0.504      5.26e- 6     13.5 
18 mu_1       0.9      1.85     0.0750     4.57e-10     34.7 
19 mu_0       0.1      1.23     0.0000899  0            63.3 
20 mu_0       0.2      1.82     0.00679    0            43.9 
21 mu_0       0.3      1.71     0.0695     0            22.2 
22 mu_0       0.4      1.37     0.366      0            16.8 
23 mu_0       0.5      1.16     0.878      0             9.17
24 mu_0       0.6      1.08     1.10       0             3.32
25 mu_0       0.7      1.02     1.07       0             3.28
26 mu_0       0.8      0.981    0.856      0             4.54
27 mu_0       0.9      1.09     0.187      0             9.55
[1] "Total run time was 43.713 seconds"
