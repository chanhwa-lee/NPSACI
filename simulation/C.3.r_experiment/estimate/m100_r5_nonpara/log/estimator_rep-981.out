
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1192"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  8  9  3  8  4  7  6  6  5 11  7  5  4  6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02185 0.33496 0.56153 0.91690 5.00000 
[1] "event indicator table: "

  0   1 
702 490 
[1] "treatment indicator table: "

  0   1 
413 779 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 568
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.938 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.633 0.218
 2 mu         0.1   0.2 0.699 0.249
 3 mu         0.1   0.3 0.724 0.260
 4 mu         0.1   0.4 0.788 0.308
 5 mu         0.1   0.5 1.06  0.339
 6 mu         0.2   0.1 0.531 0.160
 7 mu         0.2   0.2 0.595 0.182
 8 mu         0.2   0.3 0.618 0.188
 9 mu         0.2   0.4 0.674 0.223
10 mu         0.2   0.5 0.895 0.248
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.35       0.0110   1.32e-10     29.2 
 2 mu         0.2      1.21       0.135    1.35e- 6     21.4 
 3 mu         0.3      0.955      0.548    2.31e- 4      9.58
 4 mu         0.4      0.871      0.766    6.99e- 3      3.85
 5 mu         0.5      0.887      0.886    7.68e- 2      2.16
 6 mu         0.6      0.940      0.943    2.42e- 1      1.65
 7 mu         0.7      1.01       1.02     2.52e- 1      2.02
 8 mu         0.8      1.06       1.01     1.91e- 1      2.44
 9 mu         0.9      1.03       0.990    2.70e- 2      2.64
10 mu_1       0.1      1.49       0.0518   1.03e- 9     33.0 
11 mu_1       0.2      1.01       0.284    5.25e- 6     14.7 
12 mu_1       0.3      0.861      0.671    5.98e- 4      5.78
13 mu_1       0.4      0.863      0.840    1.36e- 2      2.57
14 mu_1       0.5      0.908      0.901    1.19e- 1      2.14
15 mu_1       0.6      0.966      0.965    2.45e- 1      1.67
16 mu_1       0.7      1.03       0.997    2.23e- 1      2.19
17 mu_1       0.8      1.06       1.03     1.74e- 1      2.40
18 mu_1       0.9      1.03       0.986    2.08e- 2      2.73
19 mu_0       0.1      1.33       0.00666  3.26e-11     29.7 
20 mu_0       0.2      1.26       0.0835   3.75e- 7     23.1 
21 mu_0       0.3      0.996      0.410    7.33e- 5     11.2 
22 mu_0       0.4      0.877      0.684    2.59e- 3      4.71
23 mu_0       0.5      0.866      0.867    3.41e- 2      2.38
24 mu_0       0.6      0.902      0.888    1.58e- 1      1.86
25 mu_0       0.7      0.964      0.923    2.21e- 1      1.70
26 mu_0       0.8      1.04       1.01     4.45e- 2      2.62
27 mu_0       0.9      1.04       0.997    1.04e- 3      2.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.805   0.0000321   3.82e-15     52.7 
 2 mu         0.2      1.15    0.00393     4.46e-10     46.2 
 3 mu         0.3      1.18    0.0746      3.84e- 7     27.2 
 4 mu         0.4      1.17    0.421       4.38e- 5     12.3 
 5 mu         0.5      1.20    0.704       1.62e- 3      6.40
 6 mu         0.6      1.17    0.987       2.88e- 2      6.38
 7 mu         0.7      1.10    1.03        1.07e- 3      5.17
 8 mu         0.8      1.12    1.02        4.15e- 6      4.93
 9 mu         0.9      1.31    0.211       2.03e-10     12.5 
10 mu_1       0.1      1.30    0.000219    3.61e-14     65.9 
11 mu_1       0.2      1.22    0.0142      2.10e- 9     28.9 
12 mu_1       0.3      1.14    0.156       1.21e- 6     11.3 
13 mu_1       0.4      1.15    0.649       1.03e- 4      7.75
14 mu_1       0.5      1.18    0.867       3.06e- 3      7.04
15 mu_1       0.6      1.15    0.964       1.51e- 2      6.41
16 mu_1       0.7      1.09    1.06        3.20e- 4      4.66
17 mu_1       0.8      1.14    0.868       1.09e- 6      4.98
18 mu_1       0.9      1.34    0.167       4.74e-11     13.9 
19 mu_0       0.1      0.750   0.00000839  0            51.2 
20 mu_0       0.2      1.13    0.00146     0            50.5 
21 mu_0       0.3      1.20    0.0348      0            34.0 
22 mu_0       0.4      1.19    0.249       0            18.0 
23 mu_0       0.5      1.21    0.729       0             7.60
24 mu_0       0.6      1.21    0.974       0             7.18
25 mu_0       0.7      1.13    0.843       0             6.35
26 mu_0       0.8      1.04    0.940       0             5.19
27 mu_0       0.9      1.10    0.232       0             8.20
[1] "Total run time was 56.879 seconds"
