
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1260"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  4 11 10  8  4  9  4  4  6  3  5  5  8 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01736 0.30633 0.57373 0.98622 5.99046 
[1] "event indicator table: "

  0   1 
745 515 
[1] "treatment indicator table: "

  0   1 
454 806 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.214 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.0847 0.0643
 2 mu         0.1   0.2 0.149  0.0758
 3 mu         0.1   0.3 0.177  0.0862
 4 mu         0.1   0.4 0.242  0.0715
 5 mu         0.1   0.5 0.301  0.0784
 6 mu         0.2   0.1 0.208  0.0506
 7 mu         0.2   0.2 0.310  0.0664
 8 mu         0.2   0.3 0.349  0.0753
 9 mu         0.2   0.4 0.410  0.0740
10 mu         0.2   0.5 0.461  0.0819
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.466      0.00875 0.000000139       6.31
 2 mu         0.2      0.777      0.123   0.000244          6.10
 3 mu         0.3      0.865      0.387   0.0106            5.01
 4 mu         0.4      0.884      0.665   0.0570            4.20
 5 mu         0.5      0.911      0.833   0.159             2.59
 6 mu         0.6      0.943      0.920   0.339             1.83
 7 mu         0.7      0.977      0.937   0.296             2.83
 8 mu         0.8      1.03       0.954   0.109             3.29
 9 mu         0.9      1.16       0.866   0.00243           7.19
10 mu_1       0.1      0.838      0.0407  0.000000841       8.47
11 mu_1       0.2      0.903      0.269   0.000741          5.62
12 mu_1       0.3      0.875      0.593   0.0224            5.08
13 mu_1       0.4      0.880      0.756   0.108             3.31
14 mu_1       0.5      0.915      0.880   0.246             1.89
15 mu_1       0.6      0.953      0.950   0.400             2.09
16 mu_1       0.7      0.991      0.937   0.252             2.90
17 mu_1       0.8      1.05       0.920   0.0715            3.67
18 mu_1       0.9      1.18       0.841   0.00166           7.44
19 mu_0       0.1      0.424      0.00525 0.0000000613      6.07
20 mu_0       0.2      0.746      0.0910  0.000119          6.49
21 mu_0       0.3      0.861      0.296   0.00472           4.98
22 mu_0       0.4      0.887      0.589   0.0228            4.78
23 mu_0       0.5      0.907      0.790   0.0723            3.36
24 mu_0       0.6      0.929      0.877   0.171             1.88
25 mu_0       0.7      0.943      0.899   0.316             2.68
26 mu_0       0.8      0.952      0.892   0.216             2.73
27 mu_0       0.9      1.01       0.861   0.00940           4.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.668    0.0000611  2.65e-16     28.8 
 2 mu         0.2      1.39     0.00615    1.24e-10     56.0 
 3 mu         0.3      1.63     0.0702     2.40e- 7     38.1 
 4 mu         0.4      1.54     0.331      4.86e- 5     25.6 
 5 mu         0.5      1.34     0.732      2.81e- 3     11.0 
 6 mu         0.6      1.19     1.09       2.13e- 2      3.37
 7 mu         0.7      1.16     1.06       5.27e- 4      4.45
 8 mu         0.8      1.26     0.821      2.05e- 6      8.49
 9 mu         0.9      1.67     0.148      1.00e-10     39.8 
10 mu_1       0.1      1.32     0.000398   2.52e-15     57.5 
11 mu_1       0.2      1.68     0.0223     5.87e-10     56.0 
12 mu_1       0.3      1.65     0.154      7.59e- 7     32.2 
13 mu_1       0.4      1.46     0.552      1.15e- 4     21.4 
14 mu_1       0.5      1.27     0.854      5.34e- 3      7.31
15 mu_1       0.6      1.15     1.06       7.47e- 3      3.84
16 mu_1       0.7      1.16     1.11       1.58e- 4      4.35
17 mu_1       0.8      1.29     0.690      5.40e- 7     10.1 
18 mu_1       0.9      1.72     0.103      2.35e-11     42.0 
19 mu_0       0.1      0.596    0.0000228  0            25.6 
20 mu_0       0.2      1.32     0.00264    0            56.0 
21 mu_0       0.3      1.62     0.0338     0            43.5 
22 mu_0       0.4      1.58     0.175      0            28.5 
23 mu_0       0.5      1.41     0.572      0            14.6 
24 mu_0       0.6      1.24     0.982      0             3.98
25 mu_0       0.7      1.15     1.16       0             4.68
26 mu_0       0.8      1.15     1.07       0             4.48
27 mu_0       0.9      1.30     0.304      0            19.9 
[1] "Total run time was 57.004 seconds"
