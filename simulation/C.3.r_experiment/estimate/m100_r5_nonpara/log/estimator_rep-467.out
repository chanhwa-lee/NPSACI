
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1310"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  3  5  7  6  5  8  6  8  4  5  5  8 10  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03129 0.37420 0.64067 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
778 532 
[1] "treatment indicator table: "

  0   1 
468 842 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 669
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.925 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.576 0.201
 2 mu         0.1   0.2 0.668 0.227
 3 mu         0.1   0.3 0.757 0.262
 4 mu         0.1   0.4 0.788 0.272
 5 mu         0.1   0.5 0.849 0.286
 6 mu         0.2   0.1 0.407 0.118
 7 mu         0.2   0.2 0.481 0.124
 8 mu         0.2   0.3 0.546 0.144
 9 mu         0.2   0.4 0.575 0.137
10 mu         0.2   0.5 0.628 0.135
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.27       0.0114  0.0000000157      27.1 
 2 mu         0.2      0.954      0.205   0.0000379         10.9 
 3 mu         0.3      0.907      0.506   0.00266            4.80
 4 mu         0.4      0.977      0.868   0.0410             3.04
 5 mu         0.5      1.02       0.972   0.241              2.03
 6 mu         0.6      1.03       1.00    0.525              1.94
 7 mu         0.7      1.01       1.02    0.150              1.71
 8 mu         0.8      0.953      0.926   0.0121             2.13
 9 mu         0.9      0.924      0.653   0.0000660          5.55
10 mu_1       0.1      0.941      0.0541  0.000000106       13.9 
11 mu_1       0.2      0.825      0.420   0.000129           6.24
12 mu_1       0.3      0.924      0.758   0.00612            3.85
13 mu_1       0.4      1.01       0.913   0.0713             2.46
14 mu_1       0.5      1.03       0.992   0.336              2.16
15 mu_1       0.6      1.02       0.995   0.434              1.77
16 mu_1       0.7      0.998      0.997   0.107              1.76
17 mu_1       0.8      0.939      0.920   0.00776            2.21
18 mu_1       0.9      0.921      0.562   0.0000381          6.03
19 mu_0       0.1      1.30       0.00743 0.00000000566     30.0 
20 mu_0       0.2      0.986      0.149   0.0000150         13.5 
21 mu_0       0.3      0.900      0.380   0.00118            5.79
22 mu_0       0.4      0.955      0.784   0.0208             3.43
23 mu_0       0.5      1.01       0.924   0.146              2.29
24 mu_0       0.6      1.04       0.993   0.337              2.19
25 mu_0       0.7      1.05       1.01    0.251              1.78
26 mu_0       0.8      1.01       0.993   0.0296             1.82
27 mu_0       0.9      0.946      0.830   0.000317           2.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.40    0.0000865  1.12e-17     73.6 
 2 mu         0.2       1.61    0.00690    5.86e-12     56.6 
 3 mu         0.3       1.28    0.0637     1.30e- 8     21.9 
 4 mu         0.4       1.09    0.365      3.07e- 6     11.5 
 5 mu         0.5       1.06    0.777      2.13e- 4      3.92
 6 mu         0.6       1.06    1.02       6.81e- 3      3.21
 7 mu         0.7       1.06    1.00       7.54e- 4      3.07
 8 mu         0.8       1.16    0.626      3.38e- 6      4.35
 9 mu         0.9       1.62    0.110      2.61e-10     18.6 
10 mu_1       0.1       2.09    0.000668   1.12e-16     92.1 
11 mu_1       0.2       1.54    0.0217     2.93e-11     35.4 
12 mu_1       0.3       1.17    0.139      4.33e- 8     17.6 
13 mu_1       0.4       1.05    0.558      7.67e- 6      7.65
14 mu_1       0.5       1.05    0.949      4.26e- 4      3.43
15 mu_1       0.6       1.06    1.03       6.48e- 3      3.15
16 mu_1       0.7       1.07    0.982      1.35e- 4      3.35
17 mu_1       0.8       1.18    0.501      5.27e- 7      4.80
18 mu_1       0.9       1.67    0.0790     3.62e-11     19.7 
19 mu_0       0.1       1.32    0.0000293  0            71.6 
20 mu_0       0.2       1.63    0.00237    0            61.9 
21 mu_0       0.3       1.32    0.0294     0            26.8 
22 mu_0       0.4       1.12    0.165      0            14.0 
23 mu_0       0.5       1.07    0.541      0             5.53
24 mu_0       0.6       1.06    0.931      0             3.31
25 mu_0       0.7       1.05    1.01       0             2.75
26 mu_0       0.8       1.06    0.929      0             4.58
27 mu_0       0.9       1.18    0.139      0             9.32
[1] "Total run time was 70.688 seconds"
