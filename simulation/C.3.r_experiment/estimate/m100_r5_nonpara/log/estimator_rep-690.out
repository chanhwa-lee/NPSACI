
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1195"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  6  9  8  4  7  5  6  8  5  5  6  4  8  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03905 0.32656 0.56670 0.95047 4.00000 
[1] "event indicator table: "

  0   1 
707 488 
[1] "treatment indicator table: "

  0   1 
447 748 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 559
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 34.493 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.341 0.219
 2 mu         0.1   0.2 0.377 0.266
 3 mu         0.1   0.3 0.391 0.316
 4 mu         0.1   0.4 0.358 0.350
 5 mu         0.1   0.5 0.394 0.387
 6 mu         0.2   0.1 0.287 0.105
 7 mu         0.2   0.2 0.334 0.129
 8 mu         0.2   0.3 0.397 0.155
 9 mu         0.2   0.4 0.417 0.176
10 mu         0.2   0.5 0.457 0.193
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.897      0.00754 0.00000000451     52.5 
 2 mu         0.2      0.949      0.133   0.0000146         22.8 
 3 mu         0.3      0.960      0.418   0.00113            7.11
 4 mu         0.4      0.966      0.770   0.0196             5.84
 5 mu         0.5      0.961      0.906   0.142              3.42
 6 mu         0.6      0.961      0.955   0.544              1.70
 7 mu         0.7      0.981      0.941   0.237              3.09
 8 mu         0.8      0.978      0.869   0.0358             5.00
 9 mu         0.9      0.937      0.356   0.000417          21.4 
10 mu_1       0.1      1.14       0.0345  0.0000000296      37.5 
11 mu_1       0.2      1.01       0.297   0.0000549          8.93
12 mu_1       0.3      0.972      0.642   0.00283            7.15
13 mu_1       0.4      0.956      0.904   0.0370             4.50
14 mu_1       0.5      0.947      0.960   0.215              2.27
15 mu_1       0.6      0.956      0.974   0.425              1.72
16 mu_1       0.7      0.980      0.947   0.160              3.47
17 mu_1       0.8      0.971      0.791   0.0220             5.95
18 mu_1       0.9      0.944      0.307   0.000256          23.7 
19 mu_0       0.1      0.870      0.00422 0.00000000157     54.2 
20 mu_0       0.2      0.935      0.0831  0.00000455        26.5 
21 mu_0       0.3      0.954      0.305   0.000399           8.23
22 mu_0       0.4      0.973      0.669   0.00805            6.73
23 mu_0       0.5      0.975      0.876   0.0693             4.56
24 mu_0       0.6      0.969      0.966   0.229              2.73
25 mu_0       0.7      0.984      1.01    0.416              2.20
26 mu_0       0.8      1.01       0.977   0.0825             4.57
27 mu_0       0.9      0.872      0.741   0.00187            5.24
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      27.9     0.000249   9.64e-14   2536.  
 2 mu         0.2      13.0     0.0197     1.12e- 8    617.  
 3 mu         0.3       7.99    0.119      9.69e- 6    373.  
 4 mu         0.4       3.97    0.430      9.61e- 4    156.  
 5 mu         0.5       1.88    0.985      1.75e- 2     30.8 
 6 mu         0.6       1.36    1.16       1.51e- 1      5.54
 7 mu         0.7       2.10    1.16       4.77e- 3     32.2 
 8 mu         0.8       7.06    0.515      3.68e- 5    239.  
 9 mu         0.9      31.8     0.0905     2.17e- 9   1396.  
10 mu_1       0.1       5.15    0.00108    0           208.  
11 mu_1       0.2       7.92    0.0483     0           455.  
12 mu_1       0.3       5.68    0.262      0           310.  
13 mu_1       0.4       2.77    0.667      0            97.2 
14 mu_1       0.5       1.50    1.02       0            15.4 
15 mu_1       0.6       1.36    1.19       0             5.31
16 mu_1       0.7       2.49    1.05       0            46.0 
17 mu_1       0.8       8.43    0.410      0           298.  
18 mu_1       0.9      35.0     0.0608     0          1551.  
19 mu_0       0.1      30.4     0.0000885  0          2818.  
20 mu_0       0.2      14.2     0.00605    0           771.  
21 mu_0       0.3       8.98    0.0620     0           399.  
22 mu_0       0.4       4.78    0.265      0           194.  
23 mu_0       0.5       2.27    0.737      0            46.2 
24 mu_0       0.6       1.35    1.02       0             8.31
25 mu_0       0.7       1.19    1.06       0             5.76
26 mu_0       0.8       1.60    0.782      0            21.7 
27 mu_0       0.9       3.20    0.167      0            99.3 
[1] "Total run time was 37.845 seconds"
