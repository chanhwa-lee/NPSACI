
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1237"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  5  6 10  6  3  9  8  4  9  4  5  5  2 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0317  0.3170  0.5640  0.9935  4.0000 
[1] "event indicator table: "

  0   1 
732 505 
[1] "treatment indicator table: "

  0   1 
456 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.683 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.382 0.144
 2 mu         0.1   0.2 0.426 0.157
 3 mu         0.1   0.3 0.411 0.145
 4 mu         0.1   0.4 0.389 0.134
 5 mu         0.1   0.5 0.394 0.133
 6 mu         0.2   0.1 0.469 0.147
 7 mu         0.2   0.2 0.552 0.162
 8 mu         0.2   0.3 0.559 0.149
 9 mu         0.2   0.4 0.558 0.140
10 mu         0.2   0.5 0.580 0.138
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.519      0.0114  0.00000000483     16.7 
 2 mu         0.2      0.875      0.160   0.0000150         14.4 
 3 mu         0.3      1.10       0.496   0.00102           11.9 
 4 mu         0.4      1.21       0.821   0.0159            15.0 
 5 mu         0.5      1.18       0.955   0.105             11.3 
 6 mu         0.6      1.14       1.01    0.394              5.47
 7 mu         0.7      1.17       0.970   0.171              8.96
 8 mu         0.8      1.15       0.791   0.0194            15.7 
 9 mu         0.9      0.917      0.325   0.000226          20.1 
10 mu_1       0.1      0.891      0.0561  0.0000000317      16.7 
11 mu_1       0.2      1.07       0.359   0.0000530         13.0 
12 mu_1       0.3      1.21       0.707   0.00243           15.4 
13 mu_1       0.4      1.23       0.936   0.0286            14.7 
14 mu_1       0.5      1.16       0.996   0.154              9.10
15 mu_1       0.6      1.13       0.991   0.470              4.97
16 mu_1       0.7      1.18       0.964   0.127             10.4 
17 mu_1       0.8      1.14       0.716   0.0134            17.4 
18 mu_1       0.9      0.892      0.268   0.000144          19.8 
19 mu_0       0.1      0.477      0.00688 0.00000000185     16.7 
20 mu_0       0.2      0.825      0.117   0.00000547        14.8 
21 mu_0       0.3      1.05       0.408   0.000423          10.4 
22 mu_0       0.4      1.19       0.730   0.00748           15.2 
23 mu_0       0.5      1.20       0.932   0.0566            13.6 
24 mu_0       0.6      1.14       1.00    0.242              7.83
25 mu_0       0.7      1.15       1.03    0.271              7.17
26 mu_0       0.8      1.20       0.937   0.0431            11.7 
27 mu_0       0.9      1.14       0.744   0.000964          22.3 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.73    0.0000940  6.18e-15    310.  
 2 mu         0.2       7.98    0.00620    1.28e- 9    423.  
 3 mu         0.3       4.32    0.0781     1.45e- 6    193.  
 4 mu         0.4       2.02    0.294      1.89e- 4     49.3 
 5 mu         0.5       1.26    0.751      7.27e- 3     25.8 
 6 mu         0.6       1.16    0.976      4.17e- 2      9.74
 7 mu         0.7       1.41    0.960      4.98e- 4     10.4 
 8 mu         0.8       1.90    0.723      7.54e- 7     26.2 
 9 mu         0.9       2.61    0.0873     8.19e-12     58.3 
10 mu_1       0.1       9.13    0.000657   0           516.  
11 mu_1       0.2       6.54    0.0190     0           353.  
12 mu_1       0.3       2.84    0.162      0           107.  
13 mu_1       0.4       1.42    0.501      0            30.8 
14 mu_1       0.5       1.09    0.874      0            12.9 
15 mu_1       0.6       1.18    0.988      0             5.83
16 mu_1       0.7       1.51    1.00       0            12.9 
17 mu_1       0.8       2.02    0.603      0            28.4 
18 mu_1       0.9       2.69    0.0679     0            64.7 
19 mu_0       0.1       6.47    0.0000269  0           287.  
20 mu_0       0.2       8.34    0.00252    0           441.  
21 mu_0       0.3       4.95    0.0325     0           229.  
22 mu_0       0.4       2.41    0.145      0            62.9 
23 mu_0       0.5       1.43    0.507      0            38.7 
24 mu_0       0.6       1.15    0.848      0            18.3 
25 mu_0       0.7       1.18    0.961      0             6.89
26 mu_0       0.8       1.44    0.749      0            17.5 
27 mu_0       0.9       1.84    0.176      0            40.4 
[1] "Total run time was 66.507 seconds"
