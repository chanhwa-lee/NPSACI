
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1286"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  5  3  5  8  5 10  5  6 10  5  6  4 11  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05362 0.39130 0.63927 1.00000 5.33731 
[1] "event indicator table: "

  0   1 
773 513 
[1] "treatment indicator table: "

  0   1 
465 821 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 81.9 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.525 0.227
 2 mu         0.1   0.2 0.577 0.230
 3 mu         0.1   0.3 0.596 0.233
 4 mu         0.1   0.4 0.604 0.235
 5 mu         0.1   0.5 0.679 0.239
 6 mu         0.2   0.1 0.418 0.140
 7 mu         0.2   0.2 0.487 0.145
 8 mu         0.2   0.3 0.522 0.151
 9 mu         0.2   0.4 0.538 0.157
10 mu         0.2   0.5 0.625 0.163
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.974      0.0105  0.00000000679     29.8 
 2 mu         0.2      1.09       0.147   0.0000245         20.5 
 3 mu         0.3      1.02       0.481   0.00189            6.94
 4 mu         0.4      1.02       0.817   0.0281             3.80
 5 mu         0.5      1.03       0.995   0.160              2.68
 6 mu         0.6      1.02       0.997   0.499              1.95
 7 mu         0.7      0.994      1.03    0.417              1.94
 8 mu         0.8      0.976      0.882   0.0774             2.64
 9 mu         0.9      0.973      0.610   0.00174            5.14
10 mu_1       0.1      1.25       0.0453  0.0000000442      35.1 
11 mu_1       0.2      1.06       0.357   0.0000796         12.3 
12 mu_1       0.3      1.01       0.740   0.00411            6.26
13 mu_1       0.4      1.03       0.936   0.0462             2.95
14 mu_1       0.5      1.04       1.03    0.216              2.46
15 mu_1       0.6      1.01       0.987   0.569              1.85
16 mu_1       0.7      0.987      1.02    0.333              1.96
17 mu_1       0.8      0.971      0.835   0.0556             2.75
18 mu_1       0.9      0.971      0.562   0.00113            5.49
19 mu_0       0.1      0.943      0.00641 0.00000000264     29.3 
20 mu_0       0.2      1.09       0.0970  0.0000107         22.6 
21 mu_0       0.3      1.02       0.372   0.000940           8.28
22 mu_0       0.4      1.01       0.701   0.0160             4.46
23 mu_0       0.5      1.03       0.982   0.104              2.91
24 mu_0       0.6      1.03       1.03    0.304              2.10
25 mu_0       0.7      1.01       1.02    0.486              1.87
26 mu_0       0.8      0.992      0.997   0.165              2.24
27 mu_0       0.9      0.990      0.895   0.00727            3.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.599    0.000117   1.39e-17     31.7 
 2 mu         0.2      0.993    0.0103     7.29e-12     27.8 
 3 mu         0.3      1.15     0.0966     1.62e- 8     23.4 
 4 mu         0.4      1.18     0.433      3.82e- 6      9.78
 5 mu         0.5      1.17     1.06       2.65e- 4      4.36
 6 mu         0.6      1.11     1.01       8.47e- 3      3.13
 7 mu         0.7      1.05     1.10       4.90e- 3      2.65
 8 mu         0.8      1.12     0.698      2.18e- 5      4.97
 9 mu         0.9      1.35     0.0855     1.20e- 9     18.8 
10 mu_1       0.1      0.989    0.000804   1.39e-16     39.6 
11 mu_1       0.2      1.11     0.0310     3.64e-11     28.6 
12 mu_1       0.3      1.16     0.225      5.38e- 8     19.5 
13 mu_1       0.4      1.18     0.681      9.55e- 6      6.11
14 mu_1       0.5      1.16     0.990      5.30e- 4      4.07
15 mu_1       0.6      1.09     1.07       1.41e- 2      3.29
16 mu_1       0.7      1.06     1.12       1.75e- 3      2.59
17 mu_1       0.8      1.16     0.568      6.81e- 6      5.85
18 mu_1       0.9      1.39     0.0624     3.33e-10     20.9 
19 mu_0       0.1      0.555    0.0000394  0            30.8 
20 mu_0       0.2      0.962    0.00515    0            30.4 
21 mu_0       0.3      1.15     0.0436     0            25.1 
22 mu_0       0.4      1.18     0.264      0            12.2 
23 mu_0       0.5      1.19     0.809      0             4.65
24 mu_0       0.6      1.14     1.09       0             3.50
25 mu_0       0.7      1.04     0.992      0             3.26
26 mu_0       0.8      0.982    0.953      0             3.37
27 mu_0       0.9      1.05     0.175      0             9.63
[1] "Total run time was 86.691 seconds"
