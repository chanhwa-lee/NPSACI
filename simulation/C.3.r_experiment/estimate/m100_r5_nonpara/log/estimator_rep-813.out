
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1218"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  9  6  7  6  6  7  2  5  3  4  6  6  7 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03286 0.37975 0.60907 0.99895 6.00000 
[1] "event indicator table: "

  0   1 
704 514 
[1] "treatment indicator table: "

  0   1 
449 769 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 566
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 102.509 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.490 0.183 
 2 mu         0.1   0.2 0.518 0.195 
 3 mu         0.1   0.3 0.592 0.216 
 4 mu         0.1   0.4 0.608 0.230 
 5 mu         0.1   0.5 0.680 0.247 
 6 mu         0.2   0.1 0.328 0.0762
 7 mu         0.2   0.2 0.348 0.0807
 8 mu         0.2   0.3 0.404 0.0804
 9 mu         0.2   0.4 0.412 0.0855
10 mu         0.2   0.5 0.485 0.0897
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.12        0.0397 0.0000000158      32.1 
 2 mu         0.2      0.872       0.389  0.0000359          9.05
 3 mu         0.3      0.918       0.718  0.00238            6.00
 4 mu         0.4      0.975       0.884  0.0234             5.42
 5 mu         0.5      0.980       1.02   0.0977             2.73
 6 mu         0.6      0.959       0.960  0.230              1.95
 7 mu         0.7      0.942       0.938  0.251              1.68
 8 mu         0.8      0.965       0.927  0.0352             2.96
 9 mu         0.9      0.988       0.632  0.000465           5.69
10 mu_1       0.1      0.948       0.139  0.000000106       17.7 
11 mu_1       0.2      0.917       0.763  0.000121           6.10
12 mu_1       0.3      0.994       0.938  0.00542            6.62
13 mu_1       0.4      1.01        1.00   0.0520             4.68
14 mu_1       0.5      0.984       1.01   0.174              2.23
15 mu_1       0.6      0.953       0.953  0.255              2.03
16 mu_1       0.7      0.940       0.918  0.197              1.63
17 mu_1       0.8      0.967       0.910  0.0250             3.19
18 mu_1       0.9      0.984       0.556  0.000298           6.25
19 mu_0       0.1      1.14        0.0291 0.00000000578     34.2 
20 mu_0       0.2      0.861       0.272  0.0000145         10.4 
21 mu_0       0.3      0.885       0.577  0.000588           5.74
22 mu_0       0.4      0.953       0.811  0.00440            5.92
23 mu_0       0.5      0.976       0.967  0.0210             3.38
24 mu_0       0.6      0.968       1.00   0.0753             2.03
25 mu_0       0.7      0.947       0.945  0.221              2.01
26 mu_0       0.8      0.958       0.947  0.0760             2.00
27 mu_0       0.9      1.02        0.946  0.00197            4.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.620     0.000344  3.56e-15     18.2 
 2 mu         0.2      1.27      0.0218    7.38e-10     27.9 
 3 mu         0.3      1.59      0.126     8.35e- 7     34.0 
 4 mu         0.4      1.52      0.405     9.11e- 5     23.0 
 5 mu         0.5      1.28      0.748     2.70e- 3      9.07
 6 mu         0.6      1.13      1.03      3.99e- 2      5.50
 7 mu         0.7      1.13      0.992     1.30e- 3      5.26
 8 mu         0.8      1.12      0.677     6.54e- 6      7.70
 9 mu         0.9      0.868     0.132     3.60e-10      6.61
10 mu_1       0.1      1.08      0.00199   0            32.0 
11 mu_1       0.2      1.57      0.0625    0            36.5 
12 mu_1       0.3      1.64      0.282     0            32.4 
13 mu_1       0.4      1.44      0.663     0            16.4 
14 mu_1       0.5      1.20      0.950     0             7.02
15 mu_1       0.6      1.09      1.05      0             4.58
16 mu_1       0.7      1.12      0.924     0             5.31
17 mu_1       0.8      1.10      0.552     0             8.10
18 mu_1       0.9      0.843     0.0875    0             6.85
19 mu_0       0.1      0.569     0.000169  0            16.6 
20 mu_0       0.2      1.19      0.00746   0            28.7 
21 mu_0       0.3      1.57      0.0571    0            34.7 
22 mu_0       0.4      1.58      0.220     0            27.4 
23 mu_0       0.5      1.36      0.583     0            13.0 
24 mu_0       0.6      1.18      0.960     0             6.87
25 mu_0       0.7      1.16      1.11      0             5.16
26 mu_0       0.8      1.21      0.979     0             6.08
27 mu_0       0.9      1.10      0.331     0            10.0 
[1] "Total run time was 109.288 seconds"
