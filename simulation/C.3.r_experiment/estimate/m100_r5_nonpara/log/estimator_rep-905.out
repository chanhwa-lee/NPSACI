
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1208"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 18 19 20 
 8  3  7 11  8  8  8  4  3  4  6 11  4  8  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06689 0.44734 0.67420 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
711 497 
[1] "treatment indicator table: "

  0   1 
426 782 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.624 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.542 0.230 
 2 mu         0.1   0.2 0.636 0.258 
 3 mu         0.1   0.3 0.734 0.294 
 4 mu         0.1   0.4 0.795 0.310 
 5 mu         0.1   0.5 0.824 0.323 
 6 mu         0.2   0.1 0.338 0.0792
 7 mu         0.2   0.2 0.411 0.0846
 8 mu         0.2   0.3 0.457 0.102 
 9 mu         0.2   0.4 0.535 0.104 
10 mu         0.2   0.5 0.575 0.104 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.17        0.0508 0.0000000125      40.9 
 2 mu         0.2      0.946       0.365  0.0000172          9.95
 3 mu         0.3      0.980       0.771  0.000958           4.82
 4 mu         0.4      1.02        0.944  0.0140             2.96
 5 mu         0.5      1.03        0.968  0.0824             3.14
 6 mu         0.6      0.991       0.897  0.123              2.98
 7 mu         0.7      0.946       0.915  0.158              2.46
 8 mu         0.8      0.940       0.877  0.0430             3.17
 9 mu         0.9      0.939       0.871  0.000371           3.12
10 mu_1       0.1      0.782       0.146  0.0000000924       8.20
11 mu_1       0.2      0.931       0.622  0.0000638          6.06
12 mu_1       0.3      1.00        0.897  0.00239            3.59
13 mu_1       0.4      1.03        0.972  0.0265             3.02
14 mu_1       0.5      1.01        0.897  0.140              3.11
15 mu_1       0.6      0.971       0.902  0.112              2.98
16 mu_1       0.7      0.940       0.899  0.169              2.69
17 mu_1       0.8      0.945       0.849  0.0301             3.15
18 mu_1       0.9      0.942       0.849  0.000226           3.44
19 mu_0       0.1      1.21        0.0344 0.00000000367     45.4 
20 mu_0       0.2      0.950       0.291  0.00000555        12.4 
21 mu_0       0.3      0.970       0.641  0.000344           5.35
22 mu_0       0.4      1.02        0.867  0.00445            3.79
23 mu_0       0.5      1.04        0.975  0.0246             3.18
24 mu_0       0.6      1.02        0.932  0.0979             2.98
25 mu_0       0.7      0.962       0.853  0.0535             2.66
26 mu_0       0.8      0.921       0.882  0.00537            3.27
27 mu_0       0.9      0.916       0.804  0.0000944          3.10
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.979    0.000149   6.67e-19     58.0 
 2 mu         0.2      1.01     0.00978    6.99e-13     20.1 
 3 mu         0.3      1.22     0.119      2.32e- 9      9.90
 4 mu         0.4      1.33     0.486      7.33e- 7     13.7 
 5 mu         0.5      1.32     0.934      6.36e- 5     11.0 
 6 mu         0.6      1.31     1.12       2.44e- 3      4.14
 7 mu         0.7      1.29     1.11       2.83e- 3      4.91
 8 mu         0.8      1.20     0.745      1.89e- 5      7.43
 9 mu         0.9      1.30     0.197      2.08e- 9     27.1 
10 mu_1       0.1      0.817    0.000727   0            15.8 
11 mu_1       0.2      1.09     0.0306     0            11.6 
12 mu_1       0.3      1.29     0.226      0            11.0 
13 mu_1       0.4      1.33     0.685      0            14.5 
14 mu_1       0.5      1.30     1.06       0             9.27
15 mu_1       0.6      1.30     1.13       0             4.60
16 mu_1       0.7      1.28     0.940      0             4.95
17 mu_1       0.8      1.18     0.657      0             9.29
18 mu_1       0.9      1.32     0.135      0            30.2 
19 mu_0       0.1      0.997    0.0000418  0            64.4 
20 mu_0       0.2      0.993    0.00460    0            25.1 
21 mu_0       0.3      1.19     0.0490     0            10.2 
22 mu_0       0.4      1.33     0.282      0            13.2 
23 mu_0       0.5      1.34     0.804      0            12.8 
24 mu_0       0.6      1.31     1.07       0             5.89
25 mu_0       0.7      1.33     1.14       0             5.11
26 mu_0       0.8      1.28     0.824      0             6.06
27 mu_0       0.9      1.13     0.254      0             5.53
[1] "Total run time was 70.052 seconds"
