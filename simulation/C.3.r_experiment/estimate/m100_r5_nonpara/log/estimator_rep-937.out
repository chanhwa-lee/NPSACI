
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1292"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 11  4  2  4  8  9  4  3  5  9  7  7  7  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01358 0.26665 0.54534 0.91003 6.00000 
[1] "event indicator table: "

  0   1 
765 527 
[1] "treatment indicator table: "

  0   1 
556 736 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 63.346 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.497 0.147 
 2 mu         0.1   0.2 0.643 0.157 
 3 mu         0.1   0.3 0.672 0.180 
 4 mu         0.1   0.4 0.696 0.205 
 5 mu         0.1   0.5 0.752 0.228 
 6 mu         0.2   0.1 0.385 0.0595
 7 mu         0.2   0.2 0.487 0.0604
 8 mu         0.2   0.3 0.541 0.0698
 9 mu         0.2   0.4 0.577 0.0799
10 mu         0.2   0.5 0.624 0.0879
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.32         0.158 0.000000250     25.5 
 2 mu         0.2      1.12         0.677 0.000232         5.43
 3 mu         0.3      1.09         0.942 0.00857          3.69
 4 mu         0.4      1.04         0.860 0.0824           3.64
 5 mu         0.5      0.979        0.964 0.115            2.71
 6 mu         0.6      0.959        0.966 0.0939           2.15
 7 mu         0.7      0.976        0.984 0.0576           1.96
 8 mu         0.8      1.01         1.06  0.00295          2.47
 9 mu         0.9      0.967        0.799 0.0000106        3.91
10 mu_1       0.1      1.03         0.384 0.00000153      10.5 
11 mu_1       0.2      1.08         0.851 0.000715         4.23
12 mu_1       0.3      1.07         0.881 0.0179           4.15
13 mu_1       0.4      1.01         0.934 0.133            3.25
14 mu_1       0.5      0.964        0.939 0.0745           2.38
15 mu_1       0.6      0.960        0.952 0.0698           2.18
16 mu_1       0.7      0.985        0.996 0.0313           2.10
17 mu_1       0.8      1.02         1.03  0.00143          2.55
18 mu_1       0.9      0.956        0.735 0.00000465       4.00
19 mu_0       0.1      1.35         0.119 0.000000108     28.4 
20 mu_0       0.2      1.13         0.567 0.000112         6.39
21 mu_0       0.3      1.10         0.937 0.00459          3.63
22 mu_0       0.4      1.05         0.873 0.0489           3.90
23 mu_0       0.5      0.993        0.897 0.156            3.03
24 mu_0       0.6      0.957        0.950 0.0886           2.28
25 mu_0       0.7      0.957        0.968 0.0513           2.16
26 mu_0       0.8      0.995        1.04  0.00902          2.42
27 mu_0       0.9      1.06         1.03  0.0000642        3.09
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.71      0.00161   2.83e-17    199.  
 2 mu         0.2      1.09      0.0718    1.48e-11     26.9 
 3 mu         0.3      1.01      0.394     3.28e- 8      4.98
 4 mu         0.4      1.10      0.988     7.77e- 6      5.50
 5 mu         0.5      1.13      1.00      5.39e- 4      7.94
 6 mu         0.6      1.08      0.918     2.05e- 4      5.50
 7 mu         0.7      1.03      0.929     1.54e- 6      3.53
 8 mu         0.8      1.24      0.314     1.56e- 9      7.45
 9 mu         0.9      2.27      0.0220    1.19e-14     38.2 
10 mu_1       0.1      0.698     0.00636   0            15.2 
11 mu_1       0.2      0.834     0.139     0             5.60
12 mu_1       0.3      1.02      0.568     0             4.82
13 mu_1       0.4      1.12      0.950     0             6.87
14 mu_1       0.5      1.12      0.930     0             7.94
15 mu_1       0.6      1.05      0.905     0             4.58
16 mu_1       0.7      1.03      0.815     0             3.78
17 mu_1       0.8      1.31      0.207     0             8.94
18 mu_1       0.9      2.39      0.0135    0            42.4 
19 mu_0       0.1      2.94      0.000589  0           221.  
20 mu_0       0.2      1.16      0.0404    0            33.6 
21 mu_0       0.3      1.01      0.242     0             5.28
22 mu_0       0.4      1.09      0.706     0             4.58
23 mu_0       0.5      1.14      0.958     0             7.94
24 mu_0       0.6      1.11      1.04      0             6.87
25 mu_0       0.7      1.02      0.946     0             3.09
26 mu_0       0.8      0.980     0.473     0             4.31
27 mu_0       0.9      1.19      0.0492    0            16.7 
[1] "Total run time was 66.905 seconds"
