
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1273"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  2 10  7  6  7  8  5  6 10  8  6  5  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02868 0.33525 0.58730 1.00000 4.87442 
[1] "event indicator table: "

  0   1 
725 548 
[1] "treatment indicator table: "

  0   1 
502 771 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 64.327 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.234 0.0877
 2 mu         0.1   0.2 0.224 0.0740
 3 mu         0.1   0.3 0.236 0.0929
 4 mu         0.1   0.4 0.245 0.0869
 5 mu         0.1   0.5 0.235 0.0833
 6 mu         0.2   0.1 0.267 0.0693
 7 mu         0.2   0.2 0.290 0.0651
 8 mu         0.2   0.3 0.315 0.0805
 9 mu         0.2   0.4 0.360 0.0794
10 mu         0.2   0.5 0.358 0.0790
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.362       0.0167 0.0000000145       6.05
 2 mu         0.2      0.640       0.172  0.0000294          5.98
 3 mu         0.3      0.794       0.557  0.00174            4.64
 4 mu         0.4      0.904       0.862  0.0233             2.50
 5 mu         0.5      0.994       0.948  0.136              2.12
 6 mu         0.6      1.06        1.02   0.498              1.84
 7 mu         0.7      1.06        1.08   0.368              2.21
 8 mu         0.8      0.999       0.965  0.0550             2.87
 9 mu         0.9      0.944       0.443  0.00100            9.24
10 mu_1       0.1      0.618       0.0761 0.0000000965       7.66
11 mu_1       0.2      0.770       0.373  0.0000980          5.98
12 mu_1       0.3      0.852       0.748  0.00390            3.13
13 mu_1       0.4      0.942       0.923  0.0396             2.36
14 mu_1       0.5      1.02        0.990  0.193              1.95
15 mu_1       0.6      1.07        1.06   0.582              2.07
16 mu_1       0.7      1.06        1.07   0.269              2.15
17 mu_1       0.8      0.985       0.960  0.0358             3.07
18 mu_1       0.9      0.940       0.388  0.000587           9.71
19 mu_0       0.1      0.334       0.0108 0.00000000536      6.55
20 mu_0       0.2      0.607       0.128  0.0000122          5.97
21 mu_0       0.3      0.769       0.448  0.000821           5.29
22 mu_0       0.4      0.878       0.803  0.0124             3.24
23 mu_0       0.5      0.967       0.915  0.0800             2.30
24 mu_0       0.6      1.04        0.995  0.309              1.89
25 mu_0       0.7      1.08        1.05   0.500              2.35
26 mu_0       0.8      1.05        1.05   0.132              2.36
27 mu_0       0.9      0.986       0.750  0.00472            5.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.486    0.000105   9.96e-17     17.9 
 2 mu         0.2      1.28     0.0178     4.64e-11     34.8 
 3 mu         0.3      1.39     0.160      9.00e- 8     23.7 
 4 mu         0.4      1.13     0.577      1.83e- 5      8.82
 5 mu         0.5      0.970    0.889      1.06e- 3      3.48
 6 mu         0.6      0.948    0.983      2.70e- 2      2.80
 7 mu         0.7      1.05     0.896      1.39e- 3      4.88
 8 mu         0.8      1.41     0.422      6.21e- 6     21.1 
 9 mu         0.9      2.20     0.0346     3.41e-10     54.8 
10 mu_1       0.1      1.06     0.000784   9.46e-16     35.8 
11 mu_1       0.2      1.57     0.0495     2.20e-10     34.8 
12 mu_1       0.3      1.34     0.351      2.85e- 7     15.8 
13 mu_1       0.4      1.05     0.901      4.33e- 5      6.63
14 mu_1       0.5      0.951    0.913      2.01e- 3      3.03
15 mu_1       0.6      0.959    0.997      2.01e- 2      2.80
16 mu_1       0.7      1.09     0.927      4.98e- 4      6.50
17 mu_1       0.8      1.49     0.314      1.94e- 6     24.6 
18 mu_1       0.9      2.25     0.0231     9.48e-11     56.9 
19 mu_0       0.1      0.422    0.0000436  0            15.9 
20 mu_0       0.2      1.20     0.00886    0            34.8 
21 mu_0       0.3      1.41     0.0954     0            27.0 
22 mu_0       0.4      1.18     0.373      0            11.8 
23 mu_0       0.5      0.989    0.784      0             4.79
24 mu_0       0.6      0.932    0.955      0             2.80
25 mu_0       0.7      0.949    1.00       0             2.77
26 mu_0       0.8      1.11     0.702      0             7.03
27 mu_0       0.9      1.77     0.127      0            36.6 
[1] "Total run time was 67.782 seconds"
