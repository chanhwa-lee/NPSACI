
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1330"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  3  7  4  6 10  4  3 11  8  5  4  2 12  7 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04814 0.39232 0.65227 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
797 533 
[1] "treatment indicator table: "

  0   1 
425 905 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 693
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 89.265 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.296 0.0844
 2 mu         0.1   0.2 0.351 0.105 
 3 mu         0.1   0.3 0.363 0.106 
 4 mu         0.1   0.4 0.403 0.108 
 5 mu         0.1   0.5 0.400 0.114 
 6 mu         0.2   0.1 0.377 0.0919
 7 mu         0.2   0.2 0.473 0.116 
 8 mu         0.2   0.3 0.535 0.120 
 9 mu         0.2   0.4 0.578 0.125 
10 mu         0.2   0.5 0.591 0.135 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.605      0.00280  9.15e-10      9.43
 2 mu         0.2      1.01       0.0615   4.15e- 6     16.3 
 3 mu         0.3      1.10       0.287    4.17e- 4     16.6 
 4 mu         0.4      1.04       0.644    8.28e- 3      8.36
 5 mu         0.5      1.04       0.889    2.99e- 2      3.59
 6 mu         0.6      1.07       1.01     1.56e- 1      3.28
 7 mu         0.7      1.03       0.988    1.99e- 1      2.31
 8 mu         0.8      0.982      0.985    1.53e- 1      1.93
 9 mu         0.9      1.01       0.968    7.47e- 3      3.90
10 mu_1       0.1      0.960      0.0147   6.31e- 9     10.5 
11 mu_1       0.2      1.17       0.176    1.44e- 5     20.4 
12 mu_1       0.3      1.08       0.494    9.74e- 4     13.9 
13 mu_1       0.4      1.01       0.767    1.47e- 2      5.32
14 mu_1       0.5      1.05       0.943    3.95e- 2      3.51
15 mu_1       0.6      1.07       1.00     1.26e- 1      3.15
16 mu_1       0.7      1.02       0.985    2.47e- 1      2.22
17 mu_1       0.8      0.981      0.983    1.06e- 1      2.00
18 mu_1       0.9      1.02       0.949    4.81e- 3      4.23
19 mu_0       0.1      0.565      0.00148  3.16e-10     10.3 
20 mu_0       0.2      0.967      0.0340   1.58e- 6     15.3 
21 mu_0       0.3      1.11       0.205    1.78e- 4     17.8 
22 mu_0       0.4      1.06       0.537    4.01e- 3     10.4 
23 mu_0       0.5      1.04       0.834    2.03e- 2      4.73
24 mu_0       0.6      1.06       1.01     9.09e- 2      3.63
25 mu_0       0.7      1.04       0.993    8.68e- 2      2.79
26 mu_0       0.8      0.987      0.956    1.82e- 1      2.00
27 mu_0       0.9      0.936      0.846    3.14e- 2      2.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.619  0.00000196   9.21e-18     21.4 
 2 mu         0.2      1.68   0.00103      4.83e-12     53.0 
 3 mu         0.3      2.02   0.0176       8.68e- 9     41.3 
 4 mu         0.4      1.78   0.129        1.54e- 6     20.0 
 5 mu         0.5      1.43   0.470        8.55e- 5     13.6 
 6 mu         0.6      1.21   0.790        2.28e- 3      6.03
 7 mu         0.7      1.15   0.959        6.46e- 3      8.01
 8 mu         0.8      1.14   0.987        4.93e- 5      4.75
 9 mu         0.9      1.15   0.396        4.94e- 9     12.4 
10 mu_1       0.1      1.45   0.0000140    9.21e-17     47.5 
11 mu_1       0.2      2.16   0.00328      2.41e-11     58.8 
12 mu_1       0.3      2.01   0.0427       2.89e- 8     30.6 
13 mu_1       0.4      1.62   0.222        3.85e- 6     15.3 
14 mu_1       0.5      1.31   0.652        1.71e- 4     12.2 
15 mu_1       0.6      1.15   0.926        3.79e- 3      6.07
16 mu_1       0.7      1.14   0.901        2.74e- 3      8.01
17 mu_1       0.8      1.14   1.00         1.40e- 5      4.75
18 mu_1       0.9      1.16   0.304        1.22e- 9     13.8 
19 mu_0       0.1      0.526  0.000000532  0            18.5 
20 mu_0       0.2      1.56   0.000318     0            51.5 
21 mu_0       0.3      2.03   0.00542      0            45.9 
22 mu_0       0.4      1.89   0.0665       0            25.9 
23 mu_0       0.5      1.56   0.253        0            15.0 
24 mu_0       0.6      1.30   0.572        0             8.29
25 mu_0       0.7      1.20   0.890        0             8.01
26 mu_0       0.8      1.18   0.989        0             6.84
27 mu_0       0.9      1.08   0.549        0             6.14
[1] "Total run time was 94.839 seconds"
