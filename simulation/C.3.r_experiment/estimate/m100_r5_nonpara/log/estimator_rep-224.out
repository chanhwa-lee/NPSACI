
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1168"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  7 11  7  9  5  7  9  6  4  9  3  6  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03887 0.32381 0.59544 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
697 471 
[1] "treatment indicator table: "

  0   1 
436 732 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 547
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 116.4 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.537 0.168 
 2 mu         0.1   0.2 0.624 0.188 
 3 mu         0.1   0.3 0.673 0.206 
 4 mu         0.1   0.4 0.750 0.241 
 5 mu         0.1   0.5 0.888 0.274 
 6 mu         0.2   0.1 0.345 0.0657
 7 mu         0.2   0.2 0.409 0.0664
 8 mu         0.2   0.3 0.470 0.0677
 9 mu         0.2   0.4 0.521 0.0731
10 mu         0.2   0.5 0.600 0.0800
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.40        0.0737  3.47e-12     35.6 
 2 mu         0.2      1.03        0.475   1.43e- 7      5.76
 3 mu         0.3      0.989       0.905   5.52e- 5      4.43
 4 mu         0.4      1.02        1.03    2.99e- 3      3.78
 5 mu         0.5      1.04        1.02    5.18e- 2      2.22
 6 mu         0.6      1.05        0.991   2.27e- 1      2.42
 7 mu         0.7      1.03        0.999   2.76e- 1      2.00
 8 mu         0.8      1.00        0.963   5.48e- 2      2.83
 9 mu         0.9      0.932       0.939   2.16e- 3      4.98
10 mu_1       0.1      1.02        0.217   2.78e-11      9.44
11 mu_1       0.2      0.976       0.721   5.70e- 7      4.12
12 mu_1       0.3      0.998       0.984   1.47e- 4      4.66
13 mu_1       0.4      1.02        1.03    5.99e- 3      3.18
14 mu_1       0.5      1.04        0.976   8.31e- 2      2.34
15 mu_1       0.6      1.04        0.975   2.60e- 1      2.45
16 mu_1       0.7      1.02        1.04    2.05e- 1      1.85
17 mu_1       0.8      0.994       0.941   3.95e- 2      2.88
18 mu_1       0.9      0.925       0.969   1.43e- 3      5.22
19 mu_0       0.1      1.44        0.0526  7.70e-13     39.6 
20 mu_0       0.2      1.04        0.345   3.56e- 8      7.14
21 mu_0       0.3      0.986       0.776   1.57e- 5      4.34
22 mu_0       0.4      1.02        0.992   9.93e- 4      4.18
23 mu_0       0.5      1.05        1.04    2.06e- 2      2.63
24 mu_0       0.6      1.06        1.01    1.60e- 1      2.38
25 mu_0       0.7      1.05        1.03    3.10e- 1      2.45
26 mu_0       0.8      1.03        1.02    1.16e- 1      2.63
27 mu_0       0.9      0.988       0.908   8.74e- 3      2.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.87      0.000203  3.21e-17     70.1 
 2 mu         0.2      1.64      0.0171    8.41e-12     27.3 
 3 mu         0.3      1.33      0.114     1.24e- 8     10.4 
 4 mu         0.4      1.20      0.450     2.21e- 6     16.0 
 5 mu         0.5      1.14      0.661     1.22e- 4     16.1 
 6 mu         0.6      1.03      0.808     3.26e- 3      7.13
 7 mu         0.7      0.928     0.854     2.14e- 4      3.45
 8 mu         0.8      0.931     0.615     9.55e- 7      4.79
 9 mu         0.9      1.08      0.109     7.38e-11      8.50
10 mu_1       0.1      1.42      0.000694  0            26.1 
11 mu_1       0.2      1.30      0.0260    0            13.6 
12 mu_1       0.3      1.15      0.240     0             9.85
13 mu_1       0.4      1.15      0.622     0            18.0 
14 mu_1       0.5      1.11      0.761     0            14.5 
15 mu_1       0.6      0.999     0.915     0             5.35
16 mu_1       0.7      0.918     0.772     0             3.24
17 mu_1       0.8      0.946     0.538     0             5.29
18 mu_1       0.9      1.09      0.0757    0             9.45
19 mu_0       0.1      1.92      0.000101  0            77.9 
20 mu_0       0.2      1.73      0.00500   0            34.2 
21 mu_0       0.3      1.41      0.0584    0            13.4 
22 mu_0       0.4      1.23      0.277     0            14.7 
23 mu_0       0.5      1.17      0.645     0            17.7 
24 mu_0       0.6      1.08      0.777     0             9.80
25 mu_0       0.7      0.949     0.875     0             4.48
26 mu_0       0.8      0.871     0.705     0             3.71
27 mu_0       0.9      0.927     0.131     0             8.25
[1] "Total run time was 122.191 seconds"
