
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1240"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  8  6  4  9  2  3 12  8  6  1  3  5  8  5 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03211 0.32896 0.59635 1.00000 6.21915 
[1] "event indicator table: "

  0   1 
752 488 
[1] "treatment indicator table: "

  0   1 
482 758 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 109.228 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.332 0.135 
 2 mu         0.1   0.2 0.502 0.217 
 3 mu         0.1   0.3 0.609 0.226 
 4 mu         0.1   0.4 0.641 0.242 
 5 mu         0.1   0.5 0.882 0.245 
 6 mu         0.2   0.1 0.337 0.0926
 7 mu         0.2   0.2 0.490 0.143 
 8 mu         0.2   0.3 0.569 0.149 
 9 mu         0.2   0.4 0.618 0.157 
10 mu         0.2   0.5 0.788 0.151 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.41        0.0450 0.0000000835     25.5 
 2 mu         0.2      1.33        0.381  0.000184         14.2 
 3 mu         0.3      1.19        0.816  0.0111            8.34
 4 mu         0.4      1.11        0.960  0.108             4.11
 5 mu         0.5      1.07        1.06   0.268             2.53
 6 mu         0.6      1.05        1.02   0.245             2.04
 7 mu         0.7      1.01        0.981  0.102             1.93
 8 mu         0.8      0.936       0.898  0.0135            2.33
 9 mu         0.9      0.905       0.669  0.0000938         7.20
10 mu_1       0.1      1.31        0.160  0.000000514      17.4 
11 mu_1       0.2      1.21        0.631  0.000574         12.4 
12 mu_1       0.3      1.13        0.859  0.0228            6.43
13 mu_1       0.4      1.08        1.01   0.158             3.53
14 mu_1       0.5      1.06        1.03   0.170             2.16
15 mu_1       0.6      1.04        1.02   0.244             2.06
16 mu_1       0.7      0.990       0.979  0.0807            2.01
17 mu_1       0.8      0.926       0.832  0.00918           2.50
18 mu_1       0.9      0.905       0.628  0.0000573         7.71
19 mu_0       0.1      1.42        0.0326 0.0000000357     28.3 
20 mu_0       0.2      1.36        0.291  0.0000861        14.7 
21 mu_0       0.3      1.22        0.700  0.00586           9.15
22 mu_0       0.4      1.13        0.953  0.0741            4.75
23 mu_0       0.5      1.09        1.04   0.247             3.01
24 mu_0       0.6      1.07        1.05   0.158             2.17
25 mu_0       0.7      1.05        1.06   0.152             2.03
26 mu_0       0.8      0.977       0.951  0.0306            2.28
27 mu_0       0.9      0.912       0.778  0.000422          3.21
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.65     0.000153   5.08e-16    221.  
 2 mu         0.2      1.56     0.0168     1.18e-10     67.1 
 3 mu         0.3      1.42     0.106      1.53e- 7     15.2 
 4 mu         0.4      1.50     0.541      1.83e- 5     12.5 
 5 mu         0.5      1.42     1.11       6.77e- 4      6.06
 6 mu         0.6      1.29     1.05       3.07e- 3      5.76
 7 mu         0.7      1.14     1.06       3.59e- 5      4.39
 8 mu         0.8      1.02     0.799      6.25e- 8      5.06
 9 mu         0.9      0.925    0.0812     1.07e-12      8.48
10 mu_1       0.1      2.20     0.00101    4.81e-15    130.  
11 mu_1       0.2      1.37     0.0496     5.61e-10     19.7 
12 mu_1       0.3      1.44     0.257      4.84e- 7     15.7 
13 mu_1       0.4      1.47     0.835      4.32e- 5     10.4 
14 mu_1       0.5      1.38     1.07       1.28e- 3      5.38
15 mu_1       0.6      1.25     1.04       3.01e- 4      5.64
16 mu_1       0.7      1.12     1.09       3.02e- 6      4.05
17 mu_1       0.8      1.01     0.635      4.59e- 9      5.06
18 mu_1       0.9      0.918    0.0534     7.01e-14      8.92
19 mu_0       0.1      2.70     0.0000676  0           231.  
20 mu_0       0.2      1.61     0.00521    0            78.9 
21 mu_0       0.3      1.41     0.0433     0            16.3 
22 mu_0       0.4      1.52     0.317      0            13.9 
23 mu_0       0.5      1.47     0.865      0             7.12
24 mu_0       0.6      1.34     1.17       0             5.93
25 mu_0       0.7      1.20     1.00       0             5.16
26 mu_0       0.8      1.06     0.882      0             5.06
27 mu_0       0.9      0.988    0.132      0             5.73
[1] "Total run time was 115.121 seconds"
