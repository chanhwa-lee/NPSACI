
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1329"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  3  2  7  6  6  6  8  8  3 10  5  7  5 10  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04044 0.36694 0.62840 1.00000 4.82778 
[1] "event indicator table: "

  0   1 
774 555 
[1] "treatment indicator table: "

  0   1 
473 856 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.417 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.503 0.153
 2 mu         0.1   0.2 0.547 0.172
 3 mu         0.1   0.3 0.602 0.199
 4 mu         0.1   0.4 0.647 0.209
 5 mu         0.1   0.5 0.646 0.216
 6 mu         0.2   0.1 0.468 0.115
 7 mu         0.2   0.2 0.529 0.134
 8 mu         0.2   0.3 0.597 0.163
 9 mu         0.2   0.4 0.666 0.173
10 mu         0.2   0.5 0.675 0.178
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.02        0.0208 0.0000000232      31.4 
 2 mu         0.2      1.09        0.309  0.0000189         27.2 
 3 mu         0.3      0.980       0.557  0.000840          16.6 
 4 mu         0.4      0.929       0.913  0.0111             5.36
 5 mu         0.5      0.977       0.958  0.0728             2.52
 6 mu         0.6      1.01        0.970  0.178              2.49
 7 mu         0.7      1.02        1.04   0.236              2.13
 8 mu         0.8      1.03        1.03   0.0733             2.39
 9 mu         0.9      1.03        0.882  0.00511            3.40
10 mu_1       0.1      1.13        0.0787 0.000000193       22.3 
11 mu_1       0.2      1.07        0.545  0.0000787         27.2 
12 mu_1       0.3      0.935       0.733  0.00234           11.4 
13 mu_1       0.4      0.933       0.932  0.0232             3.34
14 mu_1       0.5      0.994       0.969  0.0818             2.62
15 mu_1       0.6      1.02        0.973  0.127              2.52
16 mu_1       0.7      1.03        1.04   0.209              2.15
17 mu_1       0.8      1.04        1.03   0.0537             2.56
18 mu_1       0.9      1.03        0.868  0.00347            3.78
19 mu_0       0.1      1.01        0.0149 0.00000000428     32.6 
20 mu_0       0.2      1.10        0.242  0.00000391        27.2 
21 mu_0       0.3      1.00        0.478  0.000198          18.8 
22 mu_0       0.4      0.927       0.817  0.00303            6.70
23 mu_0       0.5      0.959       0.988  0.0237             2.42
24 mu_0       0.6      0.999       0.947  0.119              2.48
25 mu_0       0.7      1.00        0.957  0.0521             2.26
26 mu_0       0.8      1.00        0.970  0.00445            2.27
27 mu_0       0.9      1.03        0.916  0.0000485          3.33
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.45  0.00000496   7.94e-16    275.  
 2 mu         0.2       2.24  0.00164      1.71e-10    106.  
 3 mu         0.3       1.64  0.0382       1.12e- 7     24.4 
 4 mu         0.4       1.35  0.240        1.12e- 5     11.4 
 5 mu         0.5       1.14  0.732        3.98e- 4      5.95
 6 mu         0.6       1.04  0.738        6.09e- 3      4.01
 7 mu         0.7       1.03  0.934        2.25e- 4      3.42
 8 mu         0.8       1.07  0.814        1.57e- 6      3.83
 9 mu         0.9       1.08  0.175        1.08e-10     13.2 
10 mu_1       0.1       3.03  0.0000407    7.52e-15    183.  
11 mu_1       0.2       1.77  0.00636      8.54e-10     35.2 
12 mu_1       0.3       1.44  0.0862       3.74e- 7     17.5 
13 mu_1       0.4       1.20  0.407        2.80e- 5      8.83
14 mu_1       0.5       1.05  0.648        7.96e- 4      5.12
15 mu_1       0.6       1.01  0.793        7.81e- 4      3.50
16 mu_1       0.7       1.03  0.872        2.47e- 5      3.45
17 mu_1       0.8       1.08  0.772        1.31e- 7      3.83
18 mu_1       0.9       1.08  0.130        8.01e-12     13.9 
19 mu_0       0.1       3.50  0.000000947  0           285.  
20 mu_0       0.2       2.36  0.000541     0           123.  
21 mu_0       0.3       1.73  0.0176       0            32.6 
22 mu_0       0.4       1.44  0.139        0            14.0 
23 mu_0       0.5       1.23  0.486        0             6.99
24 mu_0       0.6       1.09  0.913        0             5.01
25 mu_0       0.7       1.02  0.729        0             3.42
26 mu_0       0.8       1.03  0.831        0             3.83
27 mu_0       0.9       1.07  0.209        0             6.97
[1] "Total run time was 50.108 seconds"
