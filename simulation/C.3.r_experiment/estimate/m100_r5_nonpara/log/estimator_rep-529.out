
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1253"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  8  8  5  5  4  4  5  6  5  4  7  7  8  8  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01582 0.25314 0.54239 0.91024 4.00000 
[1] "event indicator table: "

  0   1 
748 505 
[1] "treatment indicator table: "

  0   1 
503 750 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 569
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 684
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 72.274 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.261 0.0903
 2 mu         0.1   0.2 0.312 0.0981
 3 mu         0.1   0.3 0.308 0.102 
 4 mu         0.1   0.4 0.353 0.108 
 5 mu         0.1   0.5 0.388 0.116 
 6 mu         0.2   0.1 0.296 0.0750
 7 mu         0.2   0.2 0.359 0.0882
 8 mu         0.2   0.3 0.379 0.0902
 9 mu         0.2   0.4 0.431 0.101 
10 mu         0.2   0.5 0.459 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.593       0.0276 0.0000000322      9.86
 2 mu         0.2      0.779       0.245  0.0000658        13.7 
 3 mu         0.3      0.864       0.715  0.00393           8.24
 4 mu         0.4      0.930       0.881  0.0519            2.95
 5 mu         0.5      0.975       0.980  0.282             2.09
 6 mu         0.6      1.01        1.00   0.267             1.77
 7 mu         0.7      1.05        1.05   0.306             1.89
 8 mu         0.8      1.14        1.06   0.0911            3.42
 9 mu         0.9      1.33        0.703  0.00189           9.35
10 mu_1       0.1      0.821       0.114  0.000000215      14.8 
11 mu_1       0.2      0.864       0.535  0.000220         12.8 
12 mu_1       0.3      0.905       0.852  0.00879           5.27
13 mu_1       0.4      0.957       0.947  0.0878            2.48
14 mu_1       0.5      0.991       0.989  0.331             2.07
15 mu_1       0.6      1.02        1.01   0.218             1.82
16 mu_1       0.7      1.07        1.05   0.354             2.01
17 mu_1       0.8      1.18        1.10   0.0662            3.93
18 mu_1       0.9      1.35        0.644  0.00125           9.73
19 mu_0       0.1      0.568       0.0186 0.0000000119     10.3 
20 mu_0       0.2      0.758       0.182  0.0000273        13.9 
21 mu_0       0.3      0.846       0.588  0.00185           9.51
22 mu_0       0.4      0.912       0.869  0.0280            3.80
23 mu_0       0.5      0.960       0.939  0.0962            2.29
24 mu_0       0.6      0.986       0.982  0.199             2.03
25 mu_0       0.7      1.00        0.999  0.195             1.82
26 mu_0       0.8      1.02        0.973  0.190             2.32
27 mu_0       0.9      1.08        0.833  0.00764           5.90
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01      0.000478  4.61e-14     24.5 
 2 mu         0.2      1.53      0.0245    2.68e- 9     30.2 
 3 mu         0.3      1.42      0.183     1.54e- 6     19.8 
 4 mu         0.4      1.15      0.538     1.32e- 4      9.82
 5 mu         0.5      1.03      0.932     3.90e- 3      2.92
 6 mu         0.6      1.03      1.06      2.42e- 2      3.03
 7 mu         0.7      1.10      1.06      1.04e- 3      3.13
 8 mu         0.8      1.35      0.522     1.05e- 5     12.4 
 9 mu         0.9      2.01      0.0555    1.51e- 9     57.4 
10 mu_1       0.1      1.69      0.00239   4.34e-13     40.9 
11 mu_1       0.2      1.59      0.0748    1.26e- 8     25.2 
12 mu_1       0.3      1.26      0.367     4.84e- 6     16.5 
13 mu_1       0.4      1.05      0.799     3.10e- 4      6.14
14 mu_1       0.5      1.00      0.998     7.35e- 3      3.24
15 mu_1       0.6      1.04      1.04      5.77e- 3      2.80
16 mu_1       0.7      1.13      1.00      2.13e- 4      3.73
17 mu_1       0.8      1.41      0.374     1.88e- 6     15.5 
18 mu_1       0.9      2.08      0.0369    3.73e-10     63.8 
19 mu_0       0.1      0.931     0.000230  0            22.7 
20 mu_0       0.2      1.51      0.00774   0            31.5 
21 mu_0       0.3      1.49      0.101     0            21.3 
22 mu_0       0.4      1.23      0.313     0            12.3 
23 mu_0       0.5      1.05      0.746     0             4.03
24 mu_0       0.6      1.02      1.03      0             3.37
25 mu_0       0.7      1.03      0.933     0             2.90
26 mu_0       0.8      1.09      0.824     0             5.18
27 mu_0       0.9      1.38      0.189     0            15.2 
[1] "Total run time was 75.838 seconds"
