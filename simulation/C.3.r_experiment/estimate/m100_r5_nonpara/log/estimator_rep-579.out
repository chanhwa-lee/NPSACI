
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1162"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  9  7  5  6  7  6  7  8  6  4  6  6  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01851 0.33432 0.61390 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
678 484 
[1] "treatment indicator table: "

  0   1 
455 707 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 543
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 45.745 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.296 0.0659
 2 mu         0.1   0.2 0.320 0.0665
 3 mu         0.1   0.3 0.315 0.0647
 4 mu         0.1   0.4 0.356 0.0781
 5 mu         0.1   0.5 0.353 0.0771
 6 mu         0.2   0.1 0.271 0.0477
 7 mu         0.2   0.2 0.311 0.0485
 8 mu         0.2   0.3 0.316 0.0466
 9 mu         0.2   0.4 0.352 0.0578
10 mu         0.2   0.5 0.356 0.0551
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.506       0.0271 0.0000000100       6.09
 2 mu         0.2      0.600       0.242  0.0000379          3.87
 3 mu         0.3      0.747       0.626  0.00311            3.29
 4 mu         0.4      0.886       0.768  0.0495             2.81
 5 mu         0.5      0.960       0.927  0.266              2.18
 6 mu         0.6      0.985       0.967  0.551              1.81
 7 mu         0.7      1.00        0.987  0.376              1.71
 8 mu         0.8      0.993       0.964  0.139              2.44
 9 mu         0.9      0.936       0.734  0.00577            7.15
10 mu_1       0.1      0.602       0.120  0.0000000654       5.44
11 mu_1       0.2      0.703       0.487  0.000124           3.89
12 mu_1       0.3      0.837       0.753  0.00683            3.22
13 mu_1       0.4      0.932       0.857  0.0823             2.58
14 mu_1       0.5      0.970       0.918  0.385              2.09
15 mu_1       0.6      0.987       0.966  0.505              1.66
16 mu_1       0.7      1.00        0.985  0.321              1.78
17 mu_1       0.8      0.990       0.959  0.110              2.56
18 mu_1       0.9      0.932       0.654  0.00396            7.91
19 mu_0       0.1      0.496       0.0186 0.00000000388      6.39
20 mu_0       0.2      0.574       0.181  0.0000163          4.05
21 mu_0       0.3      0.709       0.533  0.00151            3.39
22 mu_0       0.4      0.856       0.700  0.0276             3.20
23 mu_0       0.5      0.950       0.892  0.129              2.49
24 mu_0       0.6      0.981       0.954  0.352              2.13
25 mu_0       0.7      0.995       0.957  0.491              1.82
26 mu_0       0.8      1.01        0.997  0.254              1.95
27 mu_0       0.9      0.975       0.922  0.0221             3.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      57.5      0.000562  4.32e-15   4896.  
 2 mu         0.2      33.0      0.0266    4.48e-10   2351.  
 3 mu         0.3      10.4      0.209     1.96e- 7    478.  
 4 mu         0.4       3.19     0.672     1.47e- 5     53.0 
 5 mu         0.5       1.53     1.03      4.17e- 4      7.07
 6 mu         0.6       1.16     1.01      6.43e- 3      4.62
 7 mu         0.7       1.11     1.10      6.19e- 4      3.55
 8 mu         0.8       1.37     0.724     5.47e- 7      9.72
 9 mu         0.9       2.25     0.141     2.64e-12     72.0 
10 mu_1       0.1      60.8      0.00303   4.32e-14   4896.  
11 mu_1       0.2      19.6      0.0946    2.24e- 9   1175.  
12 mu_1       0.3       5.29     0.457     6.54e- 7    159.  
13 mu_1       0.4       1.98     1.05      3.67e- 5     18.2 
14 mu_1       0.5       1.29     1.08      8.34e- 4      5.51
15 mu_1       0.6       1.12     1.02      1.07e- 2      4.46
16 mu_1       0.7       1.14     1.08      8.85e- 5      3.98
17 mu_1       0.8       1.44     0.576     6.84e- 8     12.2 
18 mu_1       0.9       2.36     0.0994    2.94e-13     80.0 
19 mu_0       0.1      57.1      0.000273  0          4896.  
20 mu_0       0.2      36.4      0.0113    0          2644.  
21 mu_0       0.3      12.7      0.113     0           615.  
22 mu_0       0.4       4.01     0.409     0            79.5 
23 mu_0       0.5       1.77     0.803     0            11.5 
24 mu_0       0.6       1.22     1.05      0             5.30
25 mu_0       0.7       1.06     1.06      0             4.22
26 mu_0       0.8       1.11     0.919     0             3.98
27 mu_0       0.9       1.25     0.252     0             8.66
[1] "Total run time was 49.153 seconds"
