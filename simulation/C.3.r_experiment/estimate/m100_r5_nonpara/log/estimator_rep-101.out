
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1268"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  3  8  4  6 12  4  4  4  7  7  7  3  8  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02467 0.29458 0.55545 0.92627 5.00000 
[1] "event indicator table: "

  0   1 
751 517 
[1] "treatment indicator table: "

  0   1 
500 768 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.183 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.467 0.163
 2 mu         0.1   0.2 0.473 0.167
 3 mu         0.1   0.3 0.526 0.192
 4 mu         0.1   0.4 0.533 0.201
 5 mu         0.1   0.5 0.610 0.217
 6 mu         0.2   0.1 0.413 0.105
 7 mu         0.2   0.2 0.435 0.103
 8 mu         0.2   0.3 0.484 0.117
 9 mu         0.2   0.4 0.498 0.124
10 mu         0.2   0.5 0.571 0.137
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.924      0.0105  0.0000000475     27.7 
 2 mu         0.2      0.925      0.158   0.000109         17.8 
 3 mu         0.3      0.902      0.467   0.00707           7.90
 4 mu         0.4      0.946      0.774   0.0957            5.22
 5 mu         0.5      1.02       0.952   0.268             2.91
 6 mu         0.6      1.05       0.998   0.476             2.20
 7 mu         0.7      1.05       0.937   0.174             7.08
 8 mu         0.8      1.06       0.758   0.0153           17.9 
 9 mu         0.9      1.05       0.429   0.000128         22.7 
10 mu_1       0.1      0.991      0.0468  0.000000305      25.7 
11 mu_1       0.2      0.908      0.328   0.000354          9.74
12 mu_1       0.3      0.911      0.683   0.0155            6.14
13 mu_1       0.4      0.976      0.884   0.162             3.41
14 mu_1       0.5      1.04       0.955   0.413             2.82
15 mu_1       0.6      1.06       0.996   0.389             2.82
16 mu_1       0.7      1.05       0.906   0.114             8.45
17 mu_1       0.8      1.06       0.700   0.00915          19.4 
18 mu_1       0.9      1.04       0.364   0.0000699        22.1 
19 mu_0       0.1      0.917      0.00691 0.0000000188     27.9 
20 mu_0       0.2      0.929      0.118   0.0000473        20.0 
21 mu_0       0.3      0.898      0.380   0.00344           9.88
22 mu_0       0.4      0.926      0.674   0.0377            6.42
23 mu_0       0.5      0.993      0.931   0.122             3.93
24 mu_0       0.6      1.04       0.998   0.300             2.60
25 mu_0       0.7      1.05       1.01    0.305             3.88
26 mu_0       0.8      1.04       0.877   0.0399           12.1 
27 mu_0       0.9      1.13       0.743   0.000651         28.1 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      10.9     0.000148   5.04e-15    980.  
 2 mu         0.2      15.1     0.00869    1.76e- 9   1191.  
 3 mu         0.3       8.49    0.0849     1.01e- 6    475.  
 4 mu         0.4       3.74    0.451      8.64e- 5    120.  
 5 mu         0.5       1.81    0.912      2.56e- 3     39.4 
 6 mu         0.6       1.23    0.885      9.82e- 3      9.17
 7 mu         0.7       1.55    0.925      2.38e- 4     21.7 
 8 mu         0.8       3.72    0.454      6.46e- 7    162.  
 9 mu         0.9      10.3     0.0471     1.58e-11    757.  
10 mu_1       0.1      18.0     0.00108    4.79e-14   1548.  
11 mu_1       0.2      13.6     0.0315     8.28e- 9    941.  
12 mu_1       0.3       6.05    0.175      3.17e- 6    250.  
13 mu_1       0.4       2.64    0.666      2.03e- 4     79.9 
14 mu_1       0.5       1.44    0.903      4.82e- 3     21.0 
15 mu_1       0.6       1.18    0.958      2.05e- 3      6.11
16 mu_1       0.7       1.72    0.906      4.25e- 5     27.3 
17 mu_1       0.8       4.16    0.352      1.61e- 7    192.  
18 mu_1       0.9      10.7     0.0290     3.51e-12    799.  
19 mu_0       0.1      10.2     0.0000427  0           917.  
20 mu_0       0.2      15.5     0.00299    0          1254.  
21 mu_0       0.3       9.54    0.0395     0           571.  
22 mu_0       0.4       4.47    0.293      0           146.  
23 mu_0       0.5       2.18    0.727      0            57.7 
24 mu_0       0.6       1.30    0.935      0            13.7 
25 mu_0       0.7       1.16    0.902      0             8.50
26 mu_0       0.8       1.99    0.781      0            42.0 
27 mu_0       0.9       6.47    0.145      0           379.  
[1] "Total run time was 55.996 seconds"
