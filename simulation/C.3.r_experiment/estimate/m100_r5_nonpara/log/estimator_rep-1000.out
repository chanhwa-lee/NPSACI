
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1215"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  9  9  4  7  4  4  4  3  6  6 14  5  6  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01381 0.28136 0.52953 0.88915 4.00000 
[1] "event indicator table: "

  0   1 
701 514 
[1] "treatment indicator table: "

  0   1 
502 713 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 578
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 38.615 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.313 0.0983
 2 mu         0.1   0.2 0.333 0.124 
 3 mu         0.1   0.3 0.370 0.117 
 4 mu         0.1   0.4 0.390 0.134 
 5 mu         0.1   0.5 0.402 0.150 
 6 mu         0.2   0.1 0.397 0.0716
 7 mu         0.2   0.2 0.440 0.0843
 8 mu         0.2   0.3 0.497 0.0812
 9 mu         0.2   0.4 0.528 0.0922
10 mu         0.2   0.5 0.558 0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.831       0.114  0.00000176      16.9 
 2 mu         0.2      1.07        0.581  0.000554         6.64
 3 mu         0.3      1.10        0.990  0.0126           4.21
 4 mu         0.4      1.03        0.969  0.0954           2.33
 5 mu         0.5      0.971       0.968  0.191            1.90
 6 mu         0.6      0.936       0.945  0.231            1.91
 7 mu         0.7      0.910       0.930  0.127            1.80
 8 mu         0.8      0.930       0.872  0.0143           2.89
 9 mu         0.9      1.00        0.555  0.000152         4.91
10 mu_1       0.1      1.00        0.344  0.0000103       10.6 
11 mu_1       0.2      1.12        0.888  0.00182          6.29
12 mu_1       0.3      1.08        1.02   0.0281           2.90
13 mu_1       0.4      0.999       0.998  0.163            2.00
14 mu_1       0.5      0.954       0.939  0.159            1.85
15 mu_1       0.6      0.930       0.954  0.273            1.85
16 mu_1       0.7      0.912       0.914  0.0684           1.96
17 mu_1       0.8      0.940       0.851  0.00806          3.14
18 mu_1       0.9      1.00        0.510  0.0000890        5.03
19 mu_0       0.1      0.812       0.0829 0.000000686     17.6 
20 mu_0       0.2      1.05        0.506  0.000238         6.78
21 mu_0       0.3      1.11        0.930  0.00598          4.78
22 mu_0       0.4      1.05        0.974  0.0502           2.56
23 mu_0       0.5      0.987       0.992  0.130            1.95
24 mu_0       0.6      0.946       0.932  0.169            1.99
25 mu_0       0.7      0.908       0.885  0.210            1.59
26 mu_0       0.8      0.890       0.869  0.0343           2.26
27 mu_0       0.9      0.988       0.854  0.000717         5.06
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.76      0.000600  6.82e-18     57.3 
 2 mu         0.2      1.52      0.0226    7.15e-12     34.8 
 3 mu         0.3      1.13      0.176     2.38e- 8     11.5 
 4 mu         0.4      0.978     0.717     7.50e- 6      3.79
 5 mu         0.5      0.972     0.923     6.50e- 4      3.00
 6 mu         0.6      1.00      0.984     4.78e- 3      3.48
 7 mu         0.7      1.05      1.09      6.53e- 5      3.23
 8 mu         0.8      1.17      0.481     1.30e- 7      7.86
 9 mu         0.9      1.73      0.0564    2.51e-12     82.9 
10 mu_1       0.1      1.77      0.00280   0            63.7 
11 mu_1       0.2      1.24      0.0697    0            19.4 
12 mu_1       0.3      0.993     0.331     0             7.17
13 mu_1       0.4      0.960     0.884     0             3.37
14 mu_1       0.5      0.988     0.986     0             2.73
15 mu_1       0.6      1.02      1.00      0             3.54
16 mu_1       0.7      1.06      0.977     0             3.62
17 mu_1       0.8      1.19      0.353     0             9.83
18 mu_1       0.9      1.79      0.0301    0            92.1 
19 mu_0       0.1      1.76      0.000291  0            56.6 
20 mu_0       0.2      1.60      0.00811   0            38.7 
21 mu_0       0.3      1.19      0.103     0            13.3 
22 mu_0       0.4      0.990     0.527     0             5.24
23 mu_0       0.5      0.957     0.999     0             3.30
24 mu_0       0.6      0.982     1.03      0             3.38
25 mu_0       0.7      1.01      1.00      0             3.28
26 mu_0       0.8      1.09      0.905     0             5.50
27 mu_0       0.9      1.19      0.217     0            11.5 
[1] "Total run time was 41.771 seconds"
