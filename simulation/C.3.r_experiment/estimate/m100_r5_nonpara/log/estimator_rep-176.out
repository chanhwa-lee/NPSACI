
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  8  5  5  9  7  1 10  5  5 10  4  9  8  2  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03882 0.32865 0.61451 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
744 540 
[1] "treatment indicator table: "

  0   1 
476 808 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 682
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.943 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.322 0.121 
 2 mu         0.1   0.2 0.386 0.126 
 3 mu         0.1   0.3 0.400 0.139 
 4 mu         0.1   0.4 0.400 0.140 
 5 mu         0.1   0.5 0.575 0.201 
 6 mu         0.2   0.1 0.338 0.0861
 7 mu         0.2   0.2 0.437 0.100 
 8 mu         0.2   0.3 0.503 0.112 
 9 mu         0.2   0.4 0.518 0.117 
10 mu         0.2   0.5 0.603 0.134 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.619      0.00902 0.0000000436     23.4 
 2 mu         0.2      0.903      0.156   0.0000780        11.6 
 3 mu         0.3      0.978      0.485   0.00372           6.87
 4 mu         0.4      0.963      0.833   0.0366            3.53
 5 mu         0.5      0.965      0.961   0.179             2.65
 6 mu         0.6      0.990      0.981   0.378             1.83
 7 mu         0.7      1.04       1.03    0.146             3.08
 8 mu         0.8      1.06       0.927   0.0113            5.20
 9 mu         0.9      0.843      0.574   0.0000541         4.76
10 mu_1       0.1      0.692      0.0395  0.000000264      15.4 
11 mu_1       0.2      0.968      0.317   0.000239          8.57
12 mu_1       0.3      0.979      0.731   0.00853           5.75
13 mu_1       0.4      0.960      0.876   0.0641            2.96
14 mu_1       0.5      0.970      0.974   0.258             2.08
15 mu_1       0.6      0.996      0.982   0.321             1.78
16 mu_1       0.7      1.04       1.01    0.111             3.43
17 mu_1       0.8      1.06       0.853   0.00682           5.51
18 mu_1       0.9      0.816      0.512   0.0000297         4.50
19 mu_0       0.1      0.611      0.00550 0.0000000192     26.0 
20 mu_0       0.2      0.887      0.102   0.0000379        14.4 
21 mu_0       0.3      0.978      0.378   0.00166           7.43
22 mu_0       0.4      0.964      0.708   0.0182            4.33
23 mu_0       0.5      0.960      0.918   0.0943            3.22
24 mu_0       0.6      0.981      0.978   0.215             2.37
25 mu_0       0.7      1.02       1.04    0.209             2.26
26 mu_0       0.8      1.10       1.05    0.0293            4.43
27 mu_0       0.9      1.09       0.945   0.000274          7.15
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.21   0.0000202   5.33e-17     44.3 
 2 mu         0.2       3.14   0.00452     1.40e-11     81.5 
 3 mu         0.3       2.34   0.0582      2.06e- 8     55.4 
 4 mu         0.4       1.47   0.396       3.66e- 6     20.6 
 5 mu         0.5       1.10   0.860       2.03e- 4      4.52
 6 mu         0.6       1.11   0.988       5.41e- 3      3.61
 7 mu         0.7       1.45   1.19        1.67e- 3     20.9 
 8 mu         0.8       2.12   0.660       8.53e- 6     60.0 
 9 mu         0.9       2.23   0.101       7.41e-10     55.5 
10 mu_1       0.1       3.74   0.000142    5.33e-16     83.7 
11 mu_1       0.2       3.00   0.0157      6.98e-11     81.5 
12 mu_1       0.3       1.79   0.130       6.88e- 8     36.9 
13 mu_1       0.4       1.16   0.635       9.15e- 6     10.3 
14 mu_1       0.5       1.02   0.921       4.06e- 4      3.29
15 mu_1       0.6       1.14   1.05        9.02e- 3      5.11
16 mu_1       0.7       1.55   1.04        4.21e- 4     25.4 
17 mu_1       0.8       2.21   0.540       1.88e- 6     63.7 
18 mu_1       0.9       2.21   0.0631      1.45e-10     52.4 
19 mu_0       0.1       2.04   0.00000850  0            42.1 
20 mu_0       0.2       3.18   0.00168     0            81.5 
21 mu_0       0.3       2.58   0.0309      0            63.3 
22 mu_0       0.4       1.67   0.210       0            27.5 
23 mu_0       0.5       1.17   0.618       0             7.24
24 mu_0       0.6       1.07   1.02        0             3.91
25 mu_0       0.7       1.22   1.10        0            10.5 
26 mu_0       0.8       1.75   0.993       0            45.0 
27 mu_0       0.9       2.36   0.211       0            83.3 
[1] "Total run time was 60.519 seconds"
