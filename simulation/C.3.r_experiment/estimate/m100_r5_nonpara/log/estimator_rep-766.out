
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1312"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  5  7  3  2 10  6 12  4 10  8  6  8  8  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0114  0.2566  0.5571  0.9497  5.0000 
[1] "event indicator table: "

  0   1 
744 568 
[1] "treatment indicator table: "

  0   1 
537 775 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 93.959 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.308 0.0949
 2 mu         0.1   0.2 0.430 0.130 
 3 mu         0.1   0.3 0.417 0.124 
 4 mu         0.1   0.4 0.412 0.122 
 5 mu         0.1   0.5 0.431 0.118 
 6 mu         0.2   0.1 0.331 0.0587
 7 mu         0.2   0.2 0.443 0.0870
 8 mu         0.2   0.3 0.452 0.0775
 9 mu         0.2   0.4 0.458 0.0759
10 mu         0.2   0.5 0.502 0.0673
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.559       0.0432 0.0000000467     14.0 
 2 mu         0.2      0.792       0.335  0.0000899         4.06
 3 mu         0.3      0.958       0.821  0.00503           3.09
 4 mu         0.4      1.01        1.03   0.0618            2.18
 5 mu         0.5      1.01        0.991  0.236             1.76
 6 mu         0.6      0.997       1.03   0.166             1.66
 7 mu         0.7      0.964       0.960  0.0819            1.68
 8 mu         0.8      0.933       0.934  0.0115            2.88
 9 mu         0.9      0.913       0.460  0.000294          7.52
10 mu_1       0.1      0.735       0.164  0.000000296       4.92
11 mu_1       0.2      0.935       0.576  0.000287          3.93
12 mu_1       0.3      1.01        1.05   0.0108            2.73
13 mu_1       0.4      1.02        0.992  0.101             2.10
14 mu_1       0.5      1.01        1.03   0.331             1.64
15 mu_1       0.6      0.991       1.01   0.122             1.76
16 mu_1       0.7      0.956       0.928  0.0472            1.78
17 mu_1       0.8      0.928       0.926  0.00622           3.10
18 mu_1       0.9      0.911       0.400  0.000147          8.34
19 mu_0       0.1      0.539       0.0278 0.0000000190     15.5 
20 mu_0       0.2      0.757       0.253  0.0000406         4.09
21 mu_0       0.3      0.934       0.744  0.00256           3.44
22 mu_0       0.4      1.00        1.03   0.0358            2.29
23 mu_0       0.5      1.01        1.03   0.141             2.08
24 mu_0       0.6      1.01        0.999  0.233             1.59
25 mu_0       0.7      0.983       0.998  0.0785            1.84
26 mu_0       0.8      0.953       0.961  0.0324            2.10
27 mu_0       0.9      0.925       0.846  0.00162           3.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04      0.000272  2.85e-16     50.8 
 2 mu         0.2      0.978     0.0183    1.33e-10     34.8 
 3 mu         0.3      0.966     0.167     2.57e- 7     10.6 
 4 mu         0.4      1.06      0.593     5.22e- 5      5.50
 5 mu         0.5      1.05      0.988     3.02e- 3      2.65
 6 mu         0.6      1.01      1.08      9.54e- 3      1.96
 7 mu         0.7      1.09      0.933     1.74e- 4      4.02
 8 mu         0.8      1.44      0.290     5.18e- 7      9.13
 9 mu         0.9      2.19      0.0267    2.00e-11     42.7 
10 mu_1       0.1      1.07      0.00140   0            59.8 
11 mu_1       0.2      0.877     0.0511    0            20.4 
12 mu_1       0.3      1.00      0.316     0             7.64
13 mu_1       0.4      1.09      0.776     0             4.46
14 mu_1       0.5      1.05      1.10      0             2.35
15 mu_1       0.6      1.02      1.05      0             2.07
16 mu_1       0.7      1.13      0.774     0             4.93
17 mu_1       0.8      1.53      0.210     0            10.8 
18 mu_1       0.9      2.25      0.0148    0            45.1 
19 mu_0       0.1      1.03      0.000126  0            49.8 
20 mu_0       0.2      1.00      0.00888   0            38.3 
21 mu_0       0.3      0.950     0.0959    0            13.3 
22 mu_0       0.4      1.04      0.431     0             6.30
23 mu_0       0.5      1.06      0.921     0             3.58
24 mu_0       0.6      1.00      1.06      0             2.30
25 mu_0       0.7      0.972     1.03      0             2.50
26 mu_0       0.8      1.10      0.557     0             6.34
27 mu_0       0.9      1.68      0.0774    0            21.4 
[1] "Total run time was 98.918 seconds"
