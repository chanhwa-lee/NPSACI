
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1278"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  8  7  5  5  5  7  9  2 11  7  9  3  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01816 0.30079 0.60290 1.00000 5.75700 
[1] "event indicator table: "

  0   1 
730 548 
[1] "treatment indicator table: "

  0   1 
513 765 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 667
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 41.974 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.434 0.148 
 2 mu         0.1   0.2 0.451 0.175 
 3 mu         0.1   0.3 0.520 0.213 
 4 mu         0.1   0.4 0.544 0.239 
 5 mu         0.1   0.5 0.530 0.253 
 6 mu         0.2   0.1 0.359 0.0584
 7 mu         0.2   0.2 0.383 0.0689
 8 mu         0.2   0.3 0.460 0.0785
 9 mu         0.2   0.4 0.493 0.0877
10 mu         0.2   0.5 0.485 0.0967
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.02        0.0588 0.000000394     29.4 
 2 mu         0.2      0.933       0.399  0.000239         7.33
 3 mu         0.3      0.965       0.810  0.00779          4.24
 4 mu         0.4      0.995       0.936  0.0737           2.46
 5 mu         0.5      0.996       0.977  0.322            2.04
 6 mu         0.6      0.987       0.969  0.487            1.86
 7 mu         0.7      0.979       0.951  0.187            2.33
 8 mu         0.8      0.985       0.886  0.0222           3.93
 9 mu         0.9      1.06        0.726  0.000218         3.45
10 mu_1       0.1      0.805       0.185  0.00000264      12.5 
11 mu_1       0.2      0.926       0.651  0.000807         5.81
12 mu_1       0.3      0.984       0.988  0.0177           3.32
13 mu_1       0.4      0.996       0.966  0.128            2.28
14 mu_1       0.5      0.987       0.958  0.418            1.92
15 mu_1       0.6      0.983       0.954  0.264            2.07
16 mu_1       0.7      0.983       0.936  0.0947           2.31
17 mu_1       0.8      0.999       0.859  0.0143           4.03
18 mu_1       0.9      1.08        0.658  0.000126         3.77
19 mu_0       0.1      1.04        0.0440 0.000000145     32.5 
20 mu_0       0.2      0.935       0.332  0.0000971        8.43
21 mu_0       0.3      0.957       0.726  0.00353          4.63
22 mu_0       0.4      0.995       0.959  0.0376           2.66
23 mu_0       0.5      1.00        0.949  0.126            2.23
24 mu_0       0.6      0.993       0.998  0.306            1.94
25 mu_0       0.7      0.968       0.950  0.285            2.38
26 mu_0       0.8      0.928       0.842  0.0540           3.52
27 mu_0       0.9      0.909       0.691  0.00104          4.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.673    0.000149   1.20e-16     33.6 
 2 mu         0.2      1.05     0.00845    5.59e-11     16.5 
 3 mu         0.3      1.24     0.0997     1.08e- 7     14.7 
 4 mu         0.4      1.12     0.409      2.20e- 5      7.64
 5 mu         0.5      1.00     0.897      1.27e- 3      4.53
 6 mu         0.6      1.02     1.06       4.67e- 4      4.08
 7 mu         0.7      1.07     1.07       5.46e- 6      3.16
 8 mu         0.8      1.12     0.603      9.50e- 9      4.85
 9 mu         0.9      1.29     0.0653     1.63e-13     18.0 
10 mu_1       0.1      1.01     0.00107    1.14e-15     19.8 
11 mu_1       0.2      1.29     0.0297     2.65e-10     19.1 
12 mu_1       0.3      1.24     0.201      3.43e- 7     11.8 
13 mu_1       0.4      1.06     0.674      5.22e- 5      5.73
14 mu_1       0.5      1.00     1.01       1.63e- 3      4.83
15 mu_1       0.6      1.05     1.07       4.58e- 5      3.63
16 mu_1       0.7      1.09     0.971      4.59e- 7      3.38
17 mu_1       0.8      1.15     0.487      6.99e-10      5.39
18 mu_1       0.9      1.32     0.0456     1.07e-14     19.0 
19 mu_0       0.1      0.636    0.0000537  0            35.1 
20 mu_0       0.2      0.995    0.00241    0            15.9 
21 mu_0       0.3      1.23     0.0494     0            16.1 
22 mu_0       0.4      1.15     0.258      0             9.54
23 mu_0       0.5      1.00     0.767      0             4.22
24 mu_0       0.6      0.983    0.909      0             4.76
25 mu_0       0.7      1.02     1.04       0             2.91
26 mu_0       0.8      1.04     0.684      0             3.85
27 mu_0       0.9      1.07     0.0730     0             9.00
[1] "Total run time was 45.197 seconds"
