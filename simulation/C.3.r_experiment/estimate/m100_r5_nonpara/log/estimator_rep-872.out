
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1201"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  9  8  6  5  6  9  3  5  5  6  6  5  8  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02236 0.30425 0.57262 0.95438 5.00000 
[1] "event indicator table: "

  0   1 
696 505 
[1] "treatment indicator table: "

  0   1 
464 737 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 580
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 38.22 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.193 0.111 
 2 mu         0.1   0.2 0.191 0.112 
 3 mu         0.1   0.3 0.243 0.0912
 4 mu         0.1   0.4 0.345 0.106 
 5 mu         0.1   0.5 0.345 0.0996
 6 mu         0.2   0.1 0.260 0.0825
 7 mu         0.2   0.2 0.285 0.0875
 8 mu         0.2   0.3 0.342 0.0790
 9 mu         0.2   0.4 0.441 0.0837
10 mu         0.2   0.5 0.472 0.0836
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.456       0.0184 0.000000127      11.7 
 2 mu         0.2      0.738       0.274  0.000219         10.3 
 3 mu         0.3      0.911       0.682  0.00898           5.54
 4 mu         0.4      0.994       0.857  0.0690            3.43
 5 mu         0.5      1.02        1.03   0.161             2.43
 6 mu         0.6      1.03        1.02   0.403             2.41
 7 mu         0.7      1.04        1.03   0.195             2.88
 8 mu         0.8      1.10        0.995  0.0150            6.61
 9 mu         0.9      1.26        0.753  0.0000779        14.8 
10 mu_1       0.1      0.753       0.0773 0.000000766      15.7 
11 mu_1       0.2      0.900       0.544  0.000669          7.03
12 mu_1       0.3      0.991       0.755  0.0187            4.98
13 mu_1       0.4      1.02        0.976  0.0929            2.73
14 mu_1       0.5      1.03        1.03   0.203             2.39
15 mu_1       0.6      1.04        1.03   0.492             2.36
16 mu_1       0.7      1.05        1.06   0.135             2.90
17 mu_1       0.8      1.12        0.960  0.00925           7.60
18 mu_1       0.9      1.28        0.684  0.0000430        15.2 
19 mu_0       0.1      0.423       0.0118 0.0000000563     11.3 
20 mu_0       0.2      0.698       0.205  0.000107         11.1 
21 mu_0       0.3      0.877       0.579  0.00378           5.78
22 mu_0       0.4      0.974       0.783  0.0340            4.02
23 mu_0       0.5      1.01        0.988  0.118             2.64
24 mu_0       0.6      1.02        1.02   0.259             2.49
25 mu_0       0.7      1.02        0.995  0.335             2.84
26 mu_0       0.8      1.03        0.908  0.0383            2.68
27 mu_0       0.9      1.06        0.852  0.000393         10.7 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00     0.000296   1.27e-15     54.0 
 2 mu         0.2      1.73     0.0131     1.67e-10     73.8 
 3 mu         0.3      1.64     0.115      1.65e- 7     33.6 
 4 mu         0.4      1.36     0.425      2.19e- 5     18.9 
 5 mu         0.5      1.14     0.718      9.72e- 4      8.56
 6 mu         0.6      1.07     0.927      1.03e- 2      4.89
 7 mu         0.7      1.17     0.999      2.54e- 4      4.51
 8 mu         0.8      1.38     0.722      9.91e- 7     10.0 
 9 mu         0.9      1.75     0.0943     4.85e-11     22.2 
10 mu_1       0.1      1.85     0.00218    1.27e-14     90.0 
11 mu_1       0.2      1.94     0.0435     8.35e-10     61.5 
12 mu_1       0.3      1.55     0.244      5.49e- 7     24.8 
13 mu_1       0.4      1.23     0.571      5.47e- 5     12.9 
14 mu_1       0.5      1.06     0.763      1.94e- 3      6.39
15 mu_1       0.6      1.06     0.931      3.61e- 3      4.48
16 mu_1       0.7      1.21     1.08       7.65e- 5      5.80
17 mu_1       0.8      1.43     0.582      2.61e- 7     12.2 
18 mu_1       0.9      1.79     0.0698     1.13e-11     24.6 
19 mu_0       0.1      0.905    0.0000689  0            50.0 
20 mu_0       0.2      1.68     0.00573    0            76.9 
21 mu_0       0.3      1.68     0.0595     0            40.0 
22 mu_0       0.4      1.45     0.261      0            22.9 
23 mu_0       0.5      1.22     0.564      0            12.5 
24 mu_0       0.6      1.08     0.873      0             5.76
25 mu_0       0.7      1.08     0.986      0             4.45
26 mu_0       0.8      1.16     0.899      0             5.80
27 mu_0       0.9      1.36     0.271      0            14.4 
[1] "Total run time was 41.299 seconds"
