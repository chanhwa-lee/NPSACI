
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1207"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  5 10  4  5  8  9  5  4  9  3  5  6 10  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0616  0.3551  0.6027  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
715 492 
[1] "treatment indicator table: "

  0   1 
473 734 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 583
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 42.056 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.299 0.271 
 2 mu         0.1   0.2 0.496 0.391 
 3 mu         0.1   0.3 0.600 0.521 
 4 mu         0.1   0.4 0.698 0.608 
 5 mu         0.1   0.5 0.798 0.729 
 6 mu         0.2   0.1 0.153 0.0619
 7 mu         0.2   0.2 0.258 0.0852
 8 mu         0.2   0.3 0.281 0.108 
 9 mu         0.2   0.4 0.327 0.123 
10 mu         0.2   0.5 0.353 0.146 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.77        0.0356 0.000000424    150.  
 2 mu         0.2      0.819       0.297  0.000401        28.8 
 3 mu         0.3      0.828       0.699  0.0145           4.46
 4 mu         0.4      0.964       0.928  0.127            2.34
 5 mu         0.5      1.03        1.03   0.313            2.66
 6 mu         0.6      1.03        1.02   0.467            2.15
 7 mu         0.7      0.997       0.988  0.325            1.61
 8 mu         0.8      0.999       0.985  0.0576           2.77
 9 mu         0.9      1.10        0.728  0.00158          4.85
10 mu_1       0.1      0.466       0.134  0.00000260       3.13
11 mu_1       0.2      0.714       0.560  0.00123          4.04
12 mu_1       0.3      0.910       0.904  0.0299           2.72
13 mu_1       0.4      1.02        0.996  0.171            2.41
14 mu_1       0.5      1.05        1.03   0.357            2.68
15 mu_1       0.6      1.02        1.02   0.491            1.95
16 mu_1       0.7      0.994       1.02   0.223            1.72
17 mu_1       0.8      1.00        0.930  0.0324           2.94
18 mu_1       0.9      1.12        0.667  0.000792         5.29
19 mu_0       0.1      1.91        0.0220 0.000000182    166.  
20 mu_0       0.2      0.845       0.224  0.000192        36.0 
21 mu_0       0.3      0.793       0.601  0.00789          6.35
22 mu_0       0.4      0.925       0.884  0.0794           2.39
23 mu_0       0.5      1.02        1.00   0.269            2.64
24 mu_0       0.6      1.03        0.998  0.375            2.46
25 mu_0       0.7      1.00        1.06   0.413            1.60
26 mu_0       0.8      0.981       1.03   0.158            2.09
27 mu_0       0.9      0.977       0.894  0.00863          3.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02     0.000220   1.63e-17     52.8 
 2 mu         0.2      1.77     0.0195     8.57e-12     64.2 
 3 mu         0.3      1.58     0.139      1.90e- 8     25.6 
 4 mu         0.4      1.30     0.572      4.49e- 6      8.31
 5 mu         0.5      1.18     1.06       3.12e- 4      4.13
 6 mu         0.6      1.12     1.14       9.96e- 3      2.64
 7 mu         0.7      1.06     0.999      4.21e- 4      2.87
 8 mu         0.8      1.14     0.460      9.57e- 7      6.54
 9 mu         0.9      1.75     0.0320     2.08e-11     28.4 
10 mu_1       0.1      1.93     0.00124    1.63e-16     83.4 
11 mu_1       0.2      1.95     0.0635     4.28e-11     50.7 
12 mu_1       0.3      1.47     0.325      6.33e- 8     13.5 
13 mu_1       0.4      1.21     0.925      1.12e- 5      6.11
14 mu_1       0.5      1.13     1.17       6.23e- 4      3.23
15 mu_1       0.6      1.08     1.10       6.96e- 3      2.72
16 mu_1       0.7      1.05     0.899      9.50e- 5      3.14
17 mu_1       0.8      1.17     0.363      1.89e- 7      7.75
18 mu_1       0.9      1.82     0.0214     3.65e-12     31.6 
19 mu_0       0.1      0.914    0.0000805  0            49.4 
20 mu_0       0.2      1.73     0.00770    0            67.6 
21 mu_0       0.3      1.63     0.0718     0            30.8 
22 mu_0       0.4      1.36     0.332      0             9.77
23 mu_0       0.5      1.23     0.811      0             5.51
24 mu_0       0.6      1.16     1.19       0             4.06
25 mu_0       0.7      1.07     1.10       0             2.90
26 mu_0       0.8      1.01     0.684      0             3.79
27 mu_0       0.9      1.10     0.0877     0            14.3 
[1] "Total run time was 45.062 seconds"
