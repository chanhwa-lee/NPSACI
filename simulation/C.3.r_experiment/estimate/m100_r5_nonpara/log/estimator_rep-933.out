
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1191"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  9  7  5  5  7  6  5 12  7  5  4  5  2  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03633 0.29883 0.55846 0.92468 4.00000 
[1] "event indicator table: "

  0   1 
693 498 
[1] "treatment indicator table: "

  0   1 
458 733 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 563
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 33.584 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.343 0.138 
 2 mu         0.1   0.2 0.357 0.175 
 3 mu         0.1   0.3 0.414 0.198 
 4 mu         0.1   0.4 0.488 0.225 
 5 mu         0.1   0.5 0.596 0.255 
 6 mu         0.2   0.1 0.334 0.0848
 7 mu         0.2   0.2 0.370 0.101 
 8 mu         0.2   0.3 0.435 0.121 
 9 mu         0.2   0.4 0.508 0.132 
10 mu         0.2   0.5 0.603 0.141 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.08        0.0678 0.0000000122      41.1 
 2 mu         0.2      1.10        0.424  0.0000182         17.5 
 3 mu         0.3      1.08        0.789  0.00110            7.86
 4 mu         0.4      1.04        0.958  0.0175             3.87
 5 mu         0.5      1.01        0.975  0.127              2.19
 6 mu         0.6      0.985       0.948  0.243              1.82
 7 mu         0.7      0.964       1.01   0.142              1.75
 8 mu         0.8      0.973       0.963  0.0299             2.65
 9 mu         0.9      1.14        0.878  0.000197           4.89
10 mu_1       0.1      1.03        0.254  0.0000000960      25.8 
11 mu_1       0.2      1.10        0.780  0.0000719         12.5 
12 mu_1       0.3      1.07        0.920  0.00292            5.87
13 mu_1       0.4      1.03        0.979  0.0348             2.24
14 mu_1       0.5      1.00        0.945  0.204              2.09
15 mu_1       0.6      0.978       0.951  0.114              1.77
16 mu_1       0.7      0.959       0.953  0.112              1.80
17 mu_1       0.8      0.981       0.974  0.0197             2.79
18 mu_1       0.9      1.17        0.779  0.000114           5.33
19 mu_0       0.1      1.09        0.0477 0.00000000287     45.7 
20 mu_0       0.2      1.10        0.343  0.00000476        18.8 
21 mu_0       0.3      1.08        0.726  0.000326           9.43
22 mu_0       0.4      1.04        0.885  0.00590            4.96
23 mu_0       0.5      1.01        0.944  0.0504             2.29
24 mu_0       0.6      0.994       0.953  0.259              1.99
25 mu_0       0.7      0.977       0.982  0.0519             1.84
26 mu_0       0.8      0.944       0.958  0.00202            2.09
27 mu_0       0.9      0.889       0.791  0.00000561         3.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.69      0.000708  2.92e-15    280.  
 2 mu         0.2      1.80      0.0276    6.05e-10     86.3 
 3 mu         0.3      1.35      0.133     6.85e- 7     22.7 
 4 mu         0.4      1.28      0.406     8.92e- 5      8.00
 5 mu         0.5      1.20      0.770     3.44e- 3      6.57
 6 mu         0.6      1.15      1.08      5.86e- 2      3.58
 7 mu         0.7      1.23      1.16      4.75e- 3      5.81
 8 mu         0.8      1.33      0.711     7.21e- 5      5.46
 9 mu         0.9      1.25      0.0825    8.93e- 9     12.0 
10 mu_1       0.1      0.778     0.00245   0            39.3 
11 mu_1       0.2      0.880     0.0945    0            13.6 
12 mu_1       0.3      1.15      0.294     0            10.8 
13 mu_1       0.4      1.23      0.601     0             7.94
14 mu_1       0.5      1.17      0.953     0             5.63
15 mu_1       0.6      1.16      1.18      0             3.47
16 mu_1       0.7      1.27      1.10      0             6.12
17 mu_1       0.8      1.34      0.602     0             5.62
18 mu_1       0.9      1.25      0.0578    0            13.3 
19 mu_0       0.1      4.02      0.000326  0           311.  
20 mu_0       0.2      2.03      0.00752   0           108.  
21 mu_0       0.3      1.44      0.0483    0            32.4 
22 mu_0       0.4      1.31      0.260     0             9.17
23 mu_0       0.5      1.23      0.701     0             7.51
24 mu_0       0.6      1.14      0.906     0             4.70
25 mu_0       0.7      1.15      1.07      0             5.10
26 mu_0       0.8      1.28      1.11      0             6.53
27 mu_0       0.9      1.27      0.217     0             8.24
[1] "Total run time was 36.819 seconds"
