
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1214"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3 13  5  5  8  5  4  5 11 10  5  6  3  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02349 0.30736 0.58364 1.00000 4.89332 
[1] "event indicator table: "

  0   1 
721 493 
[1] "treatment indicator table: "

  0   1 
487 727 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 586
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 68.28 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.797 0.302
 2 mu         0.1   0.2 0.900 0.329
 3 mu         0.1   0.3 0.957 0.354
 4 mu         0.1   0.4 0.990 0.383
 5 mu         0.1   0.5 1.00  0.388
 6 mu         0.2   0.1 0.616 0.198
 7 mu         0.2   0.2 0.685 0.178
 8 mu         0.2   0.3 0.725 0.176
 9 mu         0.2   0.4 0.740 0.179
10 mu         0.2   0.5 0.760 0.178
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.37        0.0426  1.76e-10     52.0 
 2 mu         0.2      1.11        0.279   1.67e- 6     16.0 
 3 mu         0.3      1.09        0.701   2.65e- 4      9.68
 4 mu         0.4      1.11        0.816   7.42e- 3      8.02
 5 mu         0.5      1.08        1.00    7.69e- 2      5.19
 6 mu         0.6      1.02        0.978   3.64e- 1      2.74
 7 mu         0.7      0.968       0.914   1.55e- 1      3.46
 8 mu         0.8      0.954       0.823   6.71e- 3      5.34
 9 mu         0.9      1.01        0.393   1.20e- 5     13.6 
10 mu_1       0.1      1.31        0.158   1.24e- 9     27.4 
11 mu_1       0.2      1.10        0.574   5.98e- 6     12.0 
12 mu_1       0.3      1.10        0.835   6.37e- 4      9.25
13 mu_1       0.4      1.08        0.915   1.36e- 2      5.83
14 mu_1       0.5      1.04        1.02    1.15e- 1      3.16
15 mu_1       0.6      0.991       0.957   3.81e- 1      2.67
16 mu_1       0.7      0.957       0.915   9.87e- 2      3.73
17 mu_1       0.8      0.956       0.755   3.86e- 3      6.17
18 mu_1       0.9      1.01        0.360   6.26e- 6     14.1 
19 mu_0       0.1      1.38        0.0298  5.73e-11     54.8 
20 mu_0       0.2      1.11        0.204   5.99e- 7     17.8 
21 mu_0       0.3      1.08        0.590   1.05e- 4      9.89
22 mu_0       0.4      1.12        0.753   3.32e- 3      9.49
23 mu_0       0.5      1.11        0.935   3.91e- 2      7.22
24 mu_0       0.6      1.06        0.993   2.37e- 1      4.40
25 mu_0       0.7      0.994       0.967   2.87e- 1      2.85
26 mu_0       0.8      0.947       0.932   1.81e- 2      4.11
27 mu_0       0.9      0.994       0.643   6.37e- 5      9.06
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     31.9      0.0000803  3.72e-14   2609.  
 2 mu         0.2     26.2      0.0112     5.31e- 9   2257.  
 3 mu         0.3     11.1      0.117      2.04e- 6    895.  
 4 mu         0.4      3.50     0.410      1.31e- 4    214.  
 5 mu         0.5      1.33     0.638      3.09e- 3     31.3 
 6 mu         0.6      1.04     0.904      1.77e- 2      4.94
 7 mu         0.7      1.46     0.813      5.57e- 4     18.4 
 8 mu         0.8      2.37     0.600      2.48e- 6     36.8 
 9 mu         0.9      3.02     0.0792     1.36e-10     69.0 
10 mu_1       0.1     37.0      0.000351   0          3478.  
11 mu_1       0.2     16.8      0.0248     0          1505.  
12 mu_1       0.3      5.20     0.198      0           398.  
13 mu_1       0.4      1.69     0.459      0            71.5 
14 mu_1       0.5      0.992    0.863      0             8.35
15 mu_1       0.6      1.07     0.908      0             6.59
16 mu_1       0.7      1.62     0.827      0            21.1 
17 mu_1       0.8      2.53     0.460      0            42.1 
18 mu_1       0.9      3.04     0.0563     0            69.0 
19 mu_0       0.1     31.3      0.0000357  0          2512.  
20 mu_0       0.2     28.5      0.00581    0          2445.  
21 mu_0       0.3     13.6      0.0541     0          1108.  
22 mu_0       0.4      4.70     0.204      0           310.  
23 mu_0       0.5      1.67     0.497      0            54.3 
24 mu_0       0.6      1.00     0.895      0             5.37
25 mu_0       0.7      1.09     0.765      0            12.3 
26 mu_0       0.8      1.70     0.756      0            30.8 
27 mu_0       0.9      2.81     0.193      0            69.0 
[1] "Total run time was 72.691 seconds"
