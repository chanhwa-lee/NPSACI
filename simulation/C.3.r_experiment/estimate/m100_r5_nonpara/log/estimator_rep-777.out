
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1161"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 20 
 8  9  6 11  7  4  4  8  8  5  8  4  6  3  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03126 0.31162 0.60948 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
666 495 
[1] "treatment indicator table: "

  0   1 
430 731 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 562
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.648 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.426 0.175 
 2 mu         0.1   0.2 0.408 0.135 
 3 mu         0.1   0.3 0.399 0.114 
 4 mu         0.1   0.4 0.494 0.202 
 5 mu         0.1   0.5 0.530 0.178 
 6 mu         0.2   0.1 0.370 0.0929
 7 mu         0.2   0.2 0.381 0.0708
 8 mu         0.2   0.3 0.407 0.0653
 9 mu         0.2   0.4 0.460 0.0990
10 mu         0.2   0.5 0.525 0.0886
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.601       0.0432 0.0000000453      5.72
 2 mu         0.2      0.795       0.306  0.0000317         4.63
 3 mu         0.3      0.961       0.618  0.00117           7.05
 4 mu         0.4      1.01        0.844  0.0121            5.61
 5 mu         0.5      0.995       0.950  0.0686            2.82
 6 mu         0.6      0.985       1.01   0.262             2.01
 7 mu         0.7      0.998       0.978  0.237             2.21
 8 mu         0.8      0.998       0.957  0.0611            2.92
 9 mu         0.9      0.910       0.774  0.00126           4.09
10 mu_1       0.1      0.736       0.164  0.000000326       4.35
11 mu_1       0.2      0.930       0.581  0.000115          7.12
12 mu_1       0.3      1.02        0.801  0.00298           7.24
13 mu_1       0.4      1.01        0.932  0.0253            4.36
14 mu_1       0.5      0.983       0.969  0.116             1.89
15 mu_1       0.6      0.984       0.997  0.350             2.01
16 mu_1       0.7      1.00        0.968  0.256             2.41
17 mu_1       0.8      0.995       0.933  0.0440            2.91
18 mu_1       0.9      0.895       0.698  0.000835          4.39
19 mu_0       0.1      0.585       0.0287 0.0000000141      5.97
20 mu_0       0.2      0.762       0.236  0.00000842        4.41
21 mu_0       0.3      0.935       0.519  0.000288          6.97
22 mu_0       0.4      1.01        0.833  0.00336           6.44
23 mu_0       0.5      1.01        0.935  0.0214            3.75
24 mu_0       0.6      0.986       0.999  0.0923            2.00
25 mu_0       0.7      0.988       0.985  0.192             2.04
26 mu_0       0.8      1.01        0.971  0.130             2.98
27 mu_0       0.9      1.05        0.937  0.00505           2.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      44.3     0.000142   2.55e-16   4365.  
 2 mu         0.2      39.2     0.0115     2.67e-10   3776.  
 3 mu         0.3      16.7     0.0972     8.88e- 7   1497.  
 4 mu         0.4       5.24    0.400      2.80e- 4    359.  
 5 mu         0.5       1.93    0.911      1.34e- 2     52.4 
 6 mu         0.6       1.28    1.06       7.92e- 2      4.39
 7 mu         0.7       1.40    1.14       1.06e- 2     20.3 
 8 mu         0.8       4.21    0.777      1.75e- 4    293.  
 9 mu         0.9      32.2     0.163      3.43e- 8   3095.  
10 mu_1       0.1      59.3     0.000824   0          5820.  
11 mu_1       0.2      27.0     0.0245     0          2518.  
12 mu_1       0.3       8.47    0.209      0           666.  
13 mu_1       0.4       2.73    0.633      0           120.  
14 mu_1       0.5       1.43    1.07       0            14.0 
15 mu_1       0.6       1.20    1.10       0             3.45
16 mu_1       0.7       1.50    1.13       0            29.0 
17 mu_1       0.8       4.97    0.628      0           367.  
18 mu_1       0.9      35.6     0.120      0          3439.  
19 mu_0       0.1      42.7     0.0000363  0          4203.  
20 mu_0       0.2      42.2     0.00448    0          4091.  
21 mu_0       0.3      20.3     0.0361     0          1854.  
22 mu_0       0.4       6.92    0.220      0           518.  
23 mu_0       0.5       2.43    0.745      0            90.8 
24 mu_0       0.6       1.38    0.953      0             8.99
25 mu_0       0.7       1.16    1.12       0             3.25
26 mu_0       0.8       1.18    0.973      0             6.06
27 mu_0       0.9       1.29    0.235      0            22.2 
[1] "Total run time was 46.907 seconds"
