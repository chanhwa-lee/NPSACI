
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1289"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  9  5  6  3  6  8  6  6  1  6  7 10 10  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03516 0.36582 0.61752 1.00000 4.89677 
[1] "event indicator table: "

  0   1 
778 511 
[1] "treatment indicator table: "

  0   1 
444 845 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.627 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.346 0.0980
 2 mu         0.1   0.2 0.457 0.150 
 3 mu         0.1   0.3 0.480 0.144 
 4 mu         0.1   0.4 0.553 0.155 
 5 mu         0.1   0.5 0.586 0.162 
 6 mu         0.2   0.1 0.344 0.0635
 7 mu         0.2   0.2 0.458 0.0890
 8 mu         0.2   0.3 0.499 0.0914
 9 mu         0.2   0.4 0.569 0.106 
10 mu         0.2   0.5 0.613 0.110 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.726       0.0250 0.00000000566     19.1 
 2 mu         0.2      0.873       0.238  0.0000223         10.4 
 3 mu         0.3      0.944       0.671  0.00191            5.16
 4 mu         0.4      1.02        0.997  0.0231             3.56
 5 mu         0.5      1.05        0.987  0.0963             2.81
 6 mu         0.6      1.04        1.07   0.270              2.00
 7 mu         0.7      1.02        0.954  0.325              2.86
 8 mu         0.8      0.996       0.988  0.0506             2.43
 9 mu         0.9      1.03        0.808  0.00127            3.91
10 mu_1       0.1      0.899       0.0956 0.0000000370      20.1 
11 mu_1       0.2      0.913       0.493  0.0000734          6.27
12 mu_1       0.3      0.989       0.835  0.00422            4.42
13 mu_1       0.4      1.05        1.03   0.0390             3.36
14 mu_1       0.5      1.06        1.06   0.134              2.60
15 mu_1       0.6      1.04        1.00   0.337              2.23
16 mu_1       0.7      1.01        0.972  0.223              2.91
17 mu_1       0.8      0.991       0.974  0.0313             2.55
18 mu_1       0.9      1.03        0.774  0.000729           4.03
19 mu_0       0.1      0.707       0.0140 0.00000000218     19.0 
20 mu_0       0.2      0.863       0.177  0.00000953        11.6 
21 mu_0       0.3      0.925       0.601  0.000855           5.48
22 mu_0       0.4      1.00        0.909  0.00950            3.69
23 mu_0       0.5      1.04        1.00   0.0574             3.21
24 mu_0       0.6      1.04        1.07   0.170              2.10
25 mu_0       0.7      1.03        1.00   0.307              2.77
26 mu_0       0.8      1.02        0.949  0.128              2.79
27 mu_0       0.9      1.02        1.01   0.00618            3.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.807   0.00000969  7.65e-17     29.3 
 2 mu         0.2      1.20    0.00242     2.11e-11     31.7 
 3 mu         0.3      1.33    0.0399      3.12e- 8     37.7 
 4 mu         0.4      1.34    0.225       5.53e- 6     45.4 
 5 mu         0.5      1.25    0.637       3.07e- 4     27.9 
 6 mu         0.6      1.17    0.838       6.53e- 3      8.96
 7 mu         0.7      1.14    1.00        7.79e- 5      6.11
 8 mu         0.8      1.15    1.04        1.18e- 7      3.50
 9 mu         0.9      1.38    0.177       1.28e-12     12.1 
10 mu_1       0.1      1.12    0.0000727   0            44.0 
11 mu_1       0.2      1.30    0.00661     0            23.8 
12 mu_1       0.3      1.37    0.0901      0            47.1 
13 mu_1       0.4      1.32    0.374       0            42.5 
14 mu_1       0.5      1.21    0.784       0            21.0 
15 mu_1       0.6      1.16    0.942       0             5.60
16 mu_1       0.7      1.15    1.07        0             6.00
17 mu_1       0.8      1.17    0.857       0             3.75
18 mu_1       0.9      1.41    0.139       0            13.4 
19 mu_0       0.1      0.773   0.00000147  0            27.7 
20 mu_0       0.2      1.17    0.000771    0            33.7 
21 mu_0       0.3      1.31    0.0178      0            33.7 
22 mu_0       0.4      1.36    0.0978      0            47.2 
23 mu_0       0.5      1.29    0.416       0            34.9 
24 mu_0       0.6      1.18    0.784       0            14.0 
25 mu_0       0.7      1.12    0.934       0             6.37
26 mu_0       0.8      1.07    0.731       0             5.46
27 mu_0       0.9      1.07    0.236       0             6.53
[1] "Total run time was 72.413 seconds"
