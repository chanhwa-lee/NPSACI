
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1257"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  7  7  7  4  7  6  4  6  7 10  8  6  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04036 0.39791 0.62786 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
728 529 
[1] "treatment indicator table: "

  0   1 
463 794 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 87.674 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.0290 0.0611
 2 mu         0.1   0.2 0.104  0.0626
 3 mu         0.1   0.3 0.0452 0.0708
 4 mu         0.1   0.4 0.132  0.0774
 5 mu         0.1   0.5 0.127  0.0633
 6 mu         0.2   0.1 0.158  0.0563
 7 mu         0.2   0.2 0.250  0.0760
 8 mu         0.2   0.3 0.224  0.0738
 9 mu         0.2   0.4 0.299  0.0921
10 mu         0.2   0.5 0.307  0.0843
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.206      0.0101  0.0000000151       3.65
 2 mu         0.2      0.562      0.170   0.0000330          9.98
 3 mu         0.3      0.812      0.490   0.00213            7.77
 4 mu         0.4      0.954      0.848   0.0280             5.10
 5 mu         0.5      1.02       0.985   0.151              2.59
 6 mu         0.6      1.03       1.00    0.402              2.11
 7 mu         0.7      1.01       0.973   0.171              2.01
 8 mu         0.8      0.987      0.958   0.0178             3.62
 9 mu         0.9      0.975      0.715   0.000197           7.33
10 mu_1       0.1      0.474      0.0413  0.000000101        7.68
11 mu_1       0.2      0.775      0.383   0.000111          10.5 
12 mu_1       0.3      0.933      0.733   0.00477            7.78
13 mu_1       0.4      1.01       0.963   0.0473             3.87
14 mu_1       0.5      1.04       0.979   0.207              2.35
15 mu_1       0.6      1.03       1.02    0.387              2.08
16 mu_1       0.7      1.01       0.963   0.125              2.20
17 mu_1       0.8      0.984      0.900   0.0122             3.72
18 mu_1       0.9      0.974      0.689   0.000126           7.68
19 mu_0       0.1      0.177      0.00612 0.00000000552      3.20
20 mu_0       0.2      0.509      0.117   0.0000134          9.84
21 mu_0       0.3      0.760      0.385   0.000973           7.77
22 mu_0       0.4      0.914      0.806   0.0151             5.92
23 mu_0       0.5      1.00       0.951   0.0752             2.89
24 mu_0       0.6      1.03       0.980   0.240              2.14
25 mu_0       0.7      1.01       1.01    0.278              1.96
26 mu_0       0.8      0.999      0.961   0.0401             3.22
27 mu_0       0.9      0.978      0.851   0.000845           4.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.57    0.000110   9.44e-15     83.4 
 2 mu         0.2       3.36    0.0135     7.79e-10    128.  
 3 mu         0.3       3.09    0.118      3.41e- 7     66.7 
 4 mu         0.4       2.18    0.426      2.55e- 5     27.7 
 5 mu         0.5       1.60    0.875      7.26e- 4      9.03
 6 mu         0.6       1.35    1.14       1.12e- 2      3.89
 7 mu         0.7       1.35    1.17       5.98e- 3      5.12
 8 mu         0.8       2.03    0.726      3.06e- 5     37.8 
 9 mu         0.9       4.55    0.105      2.66e- 9    157.  
10 mu_1       0.1       3.22    0.000769   8.94e-14    147.  
11 mu_1       0.2       3.80    0.0425     3.90e- 9    113.  
12 mu_1       0.3       2.75    0.245      1.14e- 6     45.4 
13 mu_1       0.4       1.87    0.709      6.38e- 5     14.8 
14 mu_1       0.5       1.46    0.926      1.45e- 3      7.44
15 mu_1       0.6       1.30    1.25       1.86e- 2      4.15
16 mu_1       0.7       1.39    1.09       1.51e- 3      6.93
17 mu_1       0.8       2.20    0.621      6.74e- 6     44.7 
18 mu_1       0.9       4.81    0.0686     5.21e-10    166.  
19 mu_0       0.1       1.39    0.0000378  0            76.3 
20 mu_0       0.2       3.25    0.00529    0           132.  
21 mu_0       0.3       3.24    0.0625     0            78.5 
22 mu_0       0.4       2.39    0.274      0            36.2 
23 mu_0       0.5       1.75    0.678      0            11.4 
24 mu_0       0.6       1.42    1.04       0             5.11
25 mu_0       0.7       1.25    1.30       0             4.03
26 mu_0       0.8       1.34    0.891      0             9.94
27 mu_0       0.9       2.25    0.182      0            82.8 
[1] "Total run time was 92.508 seconds"
