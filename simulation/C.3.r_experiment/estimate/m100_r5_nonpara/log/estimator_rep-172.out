
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1271"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  3  7  9  5  6  3 11  8  9  2  8  5  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01733 0.30599 0.58537 0.98498 4.13618 
[1] "event indicator table: "

  0   1 
759 512 
[1] "treatment indicator table: "

  0   1 
515 756 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 95.277 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1  7.98  7.64
 2 mu         0.1   0.2 10.0   9.63
 3 mu         0.1   0.3 11.5  11.1 
 4 mu         0.1   0.4 12.4  11.9 
 5 mu         0.1   0.5 12.9  12.5 
 6 mu         0.2   0.1  4.43  4.12
 7 mu         0.2   0.2  5.55  5.20
 8 mu         0.2   0.3  6.39  5.98
 9 mu         0.2   0.4  6.86  6.42
10 mu         0.2   0.5  7.17  6.72
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1     25.0         0.0387 0.000000174    2433.  
 2 mu         0.2     13.9         0.338  0.000292       1314.  
 3 mu         0.3      3.90        0.711  0.0122          306.  
 4 mu         0.4      1.34        0.884  0.107            40.6 
 5 mu         0.5      1.02        0.932  0.305             3.91
 6 mu         0.6      0.988       0.992  0.349             1.70
 7 mu         0.7      0.971       0.964  0.180             1.76
 8 mu         0.8      0.960       0.866  0.0386            4.63
 9 mu         0.9      0.952       0.434  0.000507         14.7 
10 mu_1       0.1     26.3         0.110  0.00000105     2561.  
11 mu_1       0.2      7.74        0.486  0.000882        692.  
12 mu_1       0.3      2.00        0.817  0.0252          108.  
13 mu_1       0.4      1.08        0.921  0.167            11.6 
14 mu_1       0.5      0.996       0.974  0.396             1.93
15 mu_1       0.6      0.981       0.974  0.272             1.81
16 mu_1       0.7      0.967       0.949  0.198             1.88
17 mu_1       0.8      0.959       0.832  0.0274            5.29
18 mu_1       0.9      0.949       0.384  0.000325         15.3 
19 mu_0       0.1     24.8         0.0280 0.0000000771   2419.  
20 mu_0       0.2     15.4         0.261  0.000144       1470.  
21 mu_0       0.3      4.72        0.635  0.00665         391.  
22 mu_0       0.4      1.52        0.877  0.0668           60.0 
23 mu_0       0.5      1.04        0.915  0.214             6.17
24 mu_0       0.6      0.998       0.981  0.433             1.88
25 mu_0       0.7      0.980       0.983  0.140             1.92
26 mu_0       0.8      0.966       0.968  0.0833            2.28
27 mu_0       0.9      0.981       0.870  0.00215           8.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value  max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>      <dbl>
 1 mu         0.1   64011.      0.000204   1.78e-13 6400528.  
 2 mu         0.2    6079.      0.0138     1.64e- 8  606967.  
 3 mu         0.3     426.      0.124      1.08e- 5   42007.  
 4 mu         0.4      22.4     0.507      9.08e- 4    1925.  
 5 mu         0.5       2.03    0.945      2.33e- 2      50.2 
 6 mu         0.6       1.09    1.07       3.21e- 2       2.35
 7 mu         0.7       1.12    1.05       1.62e- 3       3.12
 8 mu         0.8       1.34    0.539      5.52e- 7      11.7 
 9 mu         0.9       1.63    0.0559     5.26e-13      30.3 
10 mu_1       0.1      10.3     0.00116    0            751.  
11 mu_1       0.2       8.41    0.0381     0            411.  
12 mu_1       0.3       4.52    0.249      0            142.  
13 mu_1       0.4       2.12    0.759      0             34.7 
14 mu_1       0.5       1.23    1.08       0              5.84
15 mu_1       0.6       1.05    1.07       0              2.29
16 mu_1       0.7       1.15    0.988      0              3.60
17 mu_1       0.8       1.40    0.420      0             13.6 
18 mu_1       0.9       1.66    0.0388     0             31.5 
19 mu_0       0.1   71123.      0.0000725  0        7111698.  
20 mu_0       0.2    7596.      0.00600    0         758709.  
21 mu_0       0.3     607.      0.0632     0          60011.  
22 mu_0       0.4      35.9     0.303      0           3208.  
23 mu_0       0.5       2.83    0.696      0            100.  
24 mu_0       0.6       1.15    1.18       0              4.97
25 mu_0       0.7       1.03    0.965      0              2.54
26 mu_0       0.8       1.11    0.725      0              4.43
27 mu_0       0.9       1.42    0.149      0             20.2 
[1] "Total run time was 100.455 seconds"
