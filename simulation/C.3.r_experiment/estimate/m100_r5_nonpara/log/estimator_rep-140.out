
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1307"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  6  4  7  7  7  8  4 11  5  3  6  9  6  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03415 0.34904 0.60779 1.00000 5.62188 
[1] "event indicator table: "

  0   1 
782 525 
[1] "treatment indicator table: "

  0   1 
493 814 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.307 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.460 0.161
 2 mu         0.1   0.2 0.536 0.166
 3 mu         0.1   0.3 0.538 0.168
 4 mu         0.1   0.4 0.586 0.169
 5 mu         0.1   0.5 0.597 0.173
 6 mu         0.2   0.1 0.447 0.104
 7 mu         0.2   0.2 0.565 0.113
 8 mu         0.2   0.3 0.590 0.119
 9 mu         0.2   0.4 0.650 0.124
10 mu         0.2   0.5 0.688 0.132
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.900       0.0248  4.02e-11     18.4 
 2 mu         0.2      1.17        0.280   4.69e- 7     11.7 
 3 mu         0.3      1.10        0.685   9.32e- 5      5.45
 4 mu         0.4      1.01        0.981   3.37e- 3      2.33
 5 mu         0.5      0.967       0.935   4.60e- 2      1.79
 6 mu         0.6      0.955       0.947   3.21e- 1      1.48
 7 mu         0.7      0.976       0.982   2.26e- 1      1.54
 8 mu         0.8      1.06        1.07    1.72e- 1      3.20
 9 mu         0.9      1.25        0.906   6.99e- 3      6.25
10 mu_1       0.1      1.23        0.0978  3.31e-10     15.9 
11 mu_1       0.2      1.19        0.505   1.93e- 6      9.74
12 mu_1       0.3      1.06        0.924   2.57e- 4      3.19
13 mu_1       0.4      0.986       0.940   6.98e- 3      2.17
14 mu_1       0.5      0.954       0.936   7.64e- 2      1.64
15 mu_1       0.6      0.953       0.955   3.59e- 1      1.50
16 mu_1       0.7      0.982       0.973   2.39e- 1      1.59
17 mu_1       0.8      1.07        1.11    1.29e- 1      3.43
18 mu_1       0.9      1.26        0.836   4.77e- 3      6.77
19 mu_0       0.1      0.864       0.0169  7.86e-12     18.7 
20 mu_0       0.2      1.16        0.207   1.03e- 7     12.3 
21 mu_0       0.3      1.12        0.555   2.32e- 5      6.42
22 mu_0       0.4      1.03        0.946   9.69e- 4      2.73
23 mu_0       0.5      0.981       0.869   1.56e- 2      1.94
24 mu_0       0.6      0.958       0.911   1.33e- 1      1.53
25 mu_0       0.7      0.963       0.957   1.95e- 1      1.54
26 mu_0       0.8      1.01        0.975   2.31e- 1      2.26
27 mu_0       0.9      1.11        0.964   2.70e- 2      4.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.642    0.0000452  9.77e-16     25.9 
 2 mu         0.2      1.04     0.00609    2.28e-10     31.5 
 3 mu         0.3      1.03     0.0515     2.94e- 7     12.7 
 4 mu         0.4      0.960    0.297      4.48e- 5      7.13
 5 mu         0.5      0.928    0.757      2.07e- 3      2.55
 6 mu         0.6      0.956    0.917      1.30e- 2      1.99
 7 mu         0.7      1.05     1.19       2.07e- 4      2.12
 8 mu         0.8      1.16     0.776      4.69e- 7      4.06
 9 mu         0.9      1.13     0.149      1.02e-11     16.3 
10 mu_1       0.1      1.03     0.000290   9.26e-15     40.9 
11 mu_1       0.2      1.08     0.0202     1.08e- 9     24.9 
12 mu_1       0.3      1.00     0.136      9.30e- 7     10.6 
13 mu_1       0.4      0.959    0.473      1.06e- 4      5.25
14 mu_1       0.5      0.952    0.852      3.92e- 3      2.51
15 mu_1       0.6      0.998    1.07       3.42e- 3      1.99
16 mu_1       0.7      1.09     1.19       4.66e- 5      2.41
17 mu_1       0.8      1.17     0.659      9.27e- 8      4.63
18 mu_1       0.9      1.11     0.107      1.79e-12     17.2 
19 mu_0       0.1      0.599    0.0000171  0            24.3 
20 mu_0       0.2      1.03     0.00159    0            33.2 
21 mu_0       0.3      1.04     0.0229     0            15.1 
22 mu_0       0.4      0.960    0.165      0             8.39
23 mu_0       0.5      0.904    0.512      0             3.45
24 mu_0       0.6      0.893    0.846      0             2.15
25 mu_0       0.7      0.958    0.997      0             2.07
26 mu_0       0.8      1.10     1.10       0             3.07
27 mu_0       0.9      1.30     0.443      0             8.58
[1] "Total run time was 71.635 seconds"
