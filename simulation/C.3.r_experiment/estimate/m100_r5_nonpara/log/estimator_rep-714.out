
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1293"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  5  9  4  4  6  5  3  8 12  7  6  9  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01948 0.31516 0.54177 0.91911 4.00000 
[1] "event indicator table: "

  0   1 
774 519 
[1] "treatment indicator table: "

  0   1 
483 810 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 683
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.244 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.359 0.108 
 2 mu         0.1   0.2 0.460 0.151 
 3 mu         0.1   0.3 0.450 0.141 
 4 mu         0.1   0.4 0.434 0.133 
 5 mu         0.1   0.5 0.554 0.214 
 6 mu         0.2   0.1 0.448 0.0992
 7 mu         0.2   0.2 0.555 0.122 
 8 mu         0.2   0.3 0.563 0.120 
 9 mu         0.2   0.4 0.564 0.119 
10 mu         0.2   0.5 0.671 0.160 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.622       0.0218 0.0000000150      11.2 
 2 mu         0.2      1.00        0.213  0.0000338         12.1 
 3 mu         0.3      1.00        0.584  0.00225            5.91
 4 mu         0.4      0.958       0.905  0.0337             4.28
 5 mu         0.5      0.970       0.958  0.207              2.16
 6 mu         0.6      1.00        1.00   0.372              1.58
 7 mu         0.7      0.999       1.02   0.297              1.73
 8 mu         0.8      0.938       0.877  0.0686             3.38
 9 mu         0.9      0.906       0.471  0.00108            8.58
10 mu_1       0.1      1.11        0.0896 0.000000101       16.7 
11 mu_1       0.2      1.12        0.448  0.000114           9.05
12 mu_1       0.3      0.985       0.849  0.00515            5.72
13 mu_1       0.4      0.943       0.961  0.0584             3.28
14 mu_1       0.5      0.972       0.967  0.256              1.84
15 mu_1       0.6      1.01        1.01   0.410              1.58
16 mu_1       0.7      0.991       0.976  0.217              1.89
17 mu_1       0.8      0.930       0.804  0.0435             3.76
18 mu_1       0.9      0.906       0.413  0.000705           8.92
19 mu_0       0.1      0.568       0.0128 0.00000000547     10.7 
20 mu_0       0.2      0.974       0.162  0.0000136         12.8 
21 mu_0       0.3      1.01        0.478  0.00102            6.00
22 mu_0       0.4      0.968       0.830  0.0172             4.94
23 mu_0       0.5      0.967       0.945  0.106              2.75
24 mu_0       0.6      1.00        1.02   0.230              1.66
25 mu_0       0.7      1.02        1.01   0.342              1.59
26 mu_0       0.8      0.971       0.921  0.139              2.12
27 mu_0       0.9      0.906       0.763  0.00446            5.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.12   0.0000294   2.01e-14     45.5 
 2 mu         0.2       1.89   0.00478     2.08e- 9     44.9 
 3 mu         0.3       1.77   0.0750      1.57e- 6     30.2 
 4 mu         0.4       1.34   0.352       1.54e- 4     16.0 
 5 mu         0.5       1.10   0.867       4.74e- 3      6.69
 6 mu         0.6       1.10   1.09        6.73e- 2      2.27
 7 mu         0.7       1.36   1.14        4.54e- 3      9.92
 8 mu         0.8       2.04   0.488       2.75e- 5     37.7 
 9 mu         0.9       3.62   0.0379      1.52e- 9    122.  
10 mu_1       0.1       2.05   0.000268    1.80e-13     65.0 
11 mu_1       0.2       2.02   0.0141      9.33e- 9     36.1 
12 mu_1       0.3       1.50   0.163       4.69e- 6     24.7 
13 mu_1       0.4       1.12   0.569       3.44e- 4      7.72
14 mu_1       0.5       1.01   0.976       8.48e- 3      2.68
15 mu_1       0.6       1.11   1.12        3.76e- 2      3.54
16 mu_1       0.7       1.45   1.13        1.22e- 3     14.2 
17 mu_1       0.8       2.22   0.392       8.16e- 6     47.1 
18 mu_1       0.9       3.85   0.0250      4.21e-10    136.  
19 mu_0       0.1       1.02   0.00000505  0            43.3 
20 mu_0       0.2       1.86   0.00206     0            48.1 
21 mu_0       0.3       1.88   0.0278      0            37.0 
22 mu_0       0.4       1.48   0.180       0            22.8 
23 mu_0       0.5       1.19   0.653       0            11.5 
24 mu_0       0.6       1.09   1.07        0             4.51
25 mu_0       0.7       1.13   1.17        0             3.32
26 mu_0       0.8       1.33   0.732       0            12.7 
27 mu_0       0.9       1.61   0.112       0            37.3 
[1] "Total run time was 69.651 seconds"
