
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1209"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  2 13  5  9  3  5  6  8  4  8  8  3  5  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04644 0.37811 0.66975 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
728 481 
[1] "treatment indicator table: "

  0   1 
394 815 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 577
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 42.901 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.721 0.246
 2 mu         0.1   0.2 0.873 0.316
 3 mu         0.1   0.3 0.930 0.333
 4 mu         0.1   0.4 0.974 0.350
 5 mu         0.1   0.5 1.03  0.362
 6 mu         0.2   0.1 0.607 0.161
 7 mu         0.2   0.2 0.730 0.210
 8 mu         0.2   0.3 0.782 0.223
 9 mu         0.2   0.4 0.851 0.237
10 mu         0.2   0.5 0.902 0.246
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.52       0.00727 0.0000000118      38.2 
 2 mu         0.2      1.48       0.109   0.0000282         29.2 
 3 mu         0.3      1.25       0.444   0.00199           13.5 
 4 mu         0.4      1.11       0.901   0.0309             6.08
 5 mu         0.5      1.07       1.08    0.196              2.70
 6 mu         0.6      1.04       1.03    0.316              1.85
 7 mu         0.7      0.993      1.02    0.402              1.54
 8 mu         0.8      0.974      0.976   0.247              1.67
 9 mu         0.9      0.991      0.724   0.0256             4.25
10 mu_1       0.1      1.38       0.0305  0.0000000797      47.5 
11 mu_1       0.2      1.23       0.239   0.0000964         18.9 
12 mu_1       0.3      1.09       0.638   0.00457            8.50
13 mu_1       0.4      1.05       0.894   0.0540             3.88
14 mu_1       0.5      1.05       1.05    0.152              2.37
15 mu_1       0.6      1.02       1.03    0.410              1.82
16 mu_1       0.7      0.983      1.02    0.339              1.46
17 mu_1       0.8      0.972      0.959   0.143              1.88
18 mu_1       0.9      0.991      0.685   0.0193             4.58
19 mu_0       0.1      1.54       0.00425 0.00000000427     42.5 
20 mu_0       0.2      1.55       0.0727  0.0000112         31.9 
21 mu_0       0.3      1.31       0.330   0.000879          15.7 
22 mu_0       0.4      1.15       0.784   0.0156             7.58
23 mu_0       0.5      1.09       1.04    0.115              3.56
24 mu_0       0.6      1.06       1.03    0.176              2.00
25 mu_0       0.7      1.02       1.03    0.330              1.74
26 mu_0       0.8      0.981      1.00    0.315              1.49
27 mu_0       0.9      0.997      0.974   0.0823             2.25
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.685   0.0000390   1.04e-16     20.0 
 2 mu         0.2      1.44    0.00240     2.72e-11     26.1 
 3 mu         0.3      1.80    0.0323      4.02e- 8     23.0 
 4 mu         0.4      1.56    0.201       7.13e- 6     16.0 
 5 mu         0.5      1.16    0.533       3.96e- 4      6.56
 6 mu         0.6      0.962   0.937       1.05e- 2      2.42
 7 mu         0.7      0.970   0.976       1.46e- 2      2.97
 8 mu         0.8      1.11    1.04        1.11e- 4      3.22
 9 mu         0.9      1.45    0.305       1.38e- 8     18.8 
10 mu_1       0.1      1.46    0.000297    1.04e-15     33.0 
11 mu_1       0.2      1.85    0.0103      1.36e-10     29.0 
12 mu_1       0.3      1.75    0.0804      1.34e- 7     21.5 
13 mu_1       0.4      1.32    0.343       1.78e- 5     12.5 
14 mu_1       0.5      1.00    0.770       7.92e- 4      4.10
15 mu_1       0.6      0.915   0.883       1.76e- 2      2.24
16 mu_1       0.7      0.980   1.02        6.25e- 3      3.18
17 mu_1       0.8      1.13    0.951       4.17e- 5      4.03
18 mu_1       0.9      1.49    0.224       4.59e- 9     20.9 
19 mu_0       0.1      0.599   0.00000525  0            19.0 
20 mu_0       0.2      1.33    0.000595    0            25.4 
21 mu_0       0.3      1.82    0.0138      0            25.6 
22 mu_0       0.4      1.72    0.0823      0            18.3 
23 mu_0       0.5      1.32    0.227       0             9.45
24 mu_0       0.6      1.03    0.721       0             3.57
25 mu_0       0.7      0.945   0.868       0             2.48
26 mu_0       0.8      0.997   1.00        0             3.62
27 mu_0       0.9      1.11    0.409       0             4.97
[1] "Total run time was 46.677 seconds"
