
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1173"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  8  4  8  8  4  8  6  8  4  6  7  6  4  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03254 0.35734 0.63017 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
693 480 
[1] "treatment indicator table: "

  0   1 
438 735 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 575
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 54.327 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.575 0.212
 2 mu         0.1   0.2 0.646 0.259
 3 mu         0.1   0.3 0.751 0.289
 4 mu         0.1   0.4 0.742 0.302
 5 mu         0.1   0.5 0.753 0.314
 6 mu         0.2   0.1 0.467 0.120
 7 mu         0.2   0.2 0.548 0.139
 8 mu         0.2   0.3 0.630 0.156
 9 mu         0.2   0.4 0.645 0.158
10 mu         0.2   0.5 0.662 0.163
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.11        0.0439  7.39e-10     53.0 
 2 mu         0.2      1.03        0.340   3.78e- 6     25.8 
 3 mu         0.3      0.951       0.712   4.34e- 4      7.90
 4 mu         0.4      0.950       0.902   9.94e- 3      2.76
 5 mu         0.5      0.970       0.911   8.82e- 2      2.47
 6 mu         0.6      0.981       0.951   3.34e- 1      1.68
 7 mu         0.7      0.992       0.986   3.04e- 1      1.81
 8 mu         0.8      1.01        0.896   4.60e- 2      2.39
 9 mu         0.9      1.03        0.739   5.54e- 4      6.83
10 mu_1       0.1      1.13        0.147   5.65e- 9     40.8 
11 mu_1       0.2      0.949       0.585   1.45e- 5      9.96
12 mu_1       0.3      0.937       0.894   1.11e- 3      3.71
13 mu_1       0.4      0.959       0.900   1.90e- 2      2.88
14 mu_1       0.5      0.974       0.913   1.36e- 1      2.17
15 mu_1       0.6      0.982       0.977   3.51e- 1      1.68
16 mu_1       0.7      0.993       0.976   2.43e- 1      1.98
17 mu_1       0.8      1.01        0.901   3.16e- 2      2.62
18 mu_1       0.9      1.02        0.687   3.41e- 4      7.18
19 mu_0       0.1      1.11        0.0311  1.93e-10     54.4 
20 mu_0       0.2      1.05        0.279   1.11e- 6     29.8 
21 mu_0       0.3      0.958       0.587   1.45e- 4     10.4 
22 mu_0       0.4      0.945       0.881   3.87e- 3      2.77
23 mu_0       0.5      0.965       0.937   4.06e- 2      2.76
24 mu_0       0.6      0.979       0.925   2.06e- 1      1.98
25 mu_0       0.7      0.989       0.993   4.36e- 1      1.76
26 mu_0       0.8      1.01        1.00    1.03e- 1      2.23
27 mu_0       0.9      1.09        0.922   2.48e- 3      3.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.99     0.000252   7.76e-18    131.  
 2 mu         0.2      1.38     0.0121     4.07e-12     44.7 
 3 mu         0.3      1.19     0.0998     9.02e- 9     15.1 
 4 mu         0.4      1.12     0.429      2.13e- 6     11.2 
 5 mu         0.5      1.01     0.823      1.48e- 4      5.28
 6 mu         0.6      0.967    0.921      4.10e- 3      4.28
 7 mu         0.7      1.14     0.976      6.39e- 5     18.2 
 8 mu         0.8      1.51     0.534      1.67e- 7     40.0 
 9 mu         0.9      1.77     0.0952     5.72e-12     29.3 
10 mu_1       0.1      1.76     0.00210    7.76e-17     81.8 
11 mu_1       0.2      1.20     0.0346     2.03e-11     16.7 
12 mu_1       0.3      1.17     0.230      3.01e- 8     14.5 
13 mu_1       0.4      1.10     0.616      5.33e- 6      8.58
14 mu_1       0.5      0.985    0.909      2.96e- 4      3.60
15 mu_1       0.6      0.985    0.921      4.27e- 4      5.94
16 mu_1       0.7      1.21     0.944      5.70e- 6     21.7 
17 mu_1       0.8      1.56     0.420      1.30e- 8     41.7 
18 mu_1       0.9      1.79     0.0628     3.97e-13     27.1 
19 mu_0       0.1      2.01     0.0000467  0           136.  
20 mu_0       0.2      1.42     0.00507    0            52.4 
21 mu_0       0.3      1.20     0.0429     0            19.4 
22 mu_0       0.4      1.14     0.264      0            12.9 
23 mu_0       0.5      1.04     0.617      0             7.31
24 mu_0       0.6      0.940    1.00       0             2.85
25 mu_0       0.7      0.995    0.817      0            10.1 
26 mu_0       0.8      1.30     0.731      0            33.3 
27 mu_0       0.9      1.57     0.171      0            48.8 
[1] "Total run time was 58.599 seconds"
