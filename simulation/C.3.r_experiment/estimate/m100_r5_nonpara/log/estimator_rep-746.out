
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1309"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  6  3  5  6  6  3  3  9 10 10  7 11  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06015 0.40704 0.65927 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
804 505 
[1] "treatment indicator table: "

  0   1 
415 894 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 667
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.521 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.679 0.549
 2 mu         0.1   0.2 0.904 0.719
 3 mu         0.1   0.3 0.947 0.766
 4 mu         0.1   0.4 1.00  0.809
 5 mu         0.1   0.5 1.09  0.864
 6 mu         0.2   0.1 0.372 0.158
 7 mu         0.2   0.2 0.498 0.206
 8 mu         0.2   0.3 0.529 0.222
 9 mu         0.2   0.4 0.573 0.235
10 mu         0.2   0.5 0.640 0.249
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.89       0.00442  3.15e-11    139.  
 2 mu         0.2      1.22       0.107    5.95e- 7     37.4 
 3 mu         0.3      1.06       0.513    1.40e- 4      9.07
 4 mu         0.4      1.06       0.790    5.20e- 3      6.81
 5 mu         0.5      1.06       0.913    6.52e- 2      5.14
 6 mu         0.6      1.02       0.968    2.25e- 1      3.00
 7 mu         0.7      0.987      0.940    2.80e- 1      2.06
 8 mu         0.8      0.976      0.971    3.67e- 2      1.95
 9 mu         0.9      0.975      0.850    4.51e- 4      6.24
10 mu_1       0.1      1.61       0.0211   2.37e-10     77.0 
11 mu_1       0.2      1.09       0.228    2.24e- 6     10.5 
12 mu_1       0.3      1.04       0.706    3.54e- 4      8.49
13 mu_1       0.4      1.06       0.888    9.87e- 3      5.17
14 mu_1       0.5      1.05       0.971    8.56e- 2      4.90
15 mu_1       0.6      1.01       0.976    3.16e- 1      2.42
16 mu_1       0.7      0.989      0.946    2.18e- 1      2.07
17 mu_1       0.8      0.980      0.992    2.64e- 2      1.88
18 mu_1       0.9      0.981      0.799    2.95e- 4      6.92
19 mu_0       0.1      1.92       0.00242  8.70e-12    145.  
20 mu_0       0.2      1.25       0.0738   1.83e- 7     44.2 
21 mu_0       0.3      1.06       0.428    4.90e- 5      9.32
22 mu_0       0.4      1.06       0.770    2.09e- 3      7.90
23 mu_0       0.5      1.06       0.852    2.38e- 2      5.38
24 mu_0       0.6      1.03       0.963    8.75e- 2      3.86
25 mu_0       0.7      0.981      0.978    2.50e- 1      2.04
26 mu_0       0.8      0.959      0.915    7.77e- 2      2.25
27 mu_0       0.9      0.925      0.966    1.86e- 3      2.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.426   0.00000687  2.89e-17     15.8 
 2 mu         0.2      1.11    0.00185     7.57e-12     41.3 
 3 mu         0.3      1.62    0.0318      1.12e- 8     47.9 
 4 mu         0.4      1.70    0.202       1.98e- 6     33.1 
 5 mu         0.5      1.51    0.743       1.10e- 4     15.0 
 6 mu         0.6      1.29    1.14        2.93e- 3      4.84
 7 mu         0.7      1.20    0.924       4.70e- 2      5.18
 8 mu         0.8      1.21    0.978       6.91e- 4      8.66
 9 mu         0.9      1.22    0.332       1.92e- 7     14.5 
10 mu_1       0.1      1.01    0.0000399   2.89e-16     36.1 
11 mu_1       0.2      1.58    0.00717     3.78e-11     56.3 
12 mu_1       0.3      1.76    0.0844      3.73e- 8     43.6 
13 mu_1       0.4      1.61    0.361       4.96e- 6     22.6 
14 mu_1       0.5      1.38    0.970       2.20e- 4      8.20
15 mu_1       0.6      1.22    1.07        4.89e- 3      4.29
16 mu_1       0.7      1.18    0.975       2.64e- 2      5.92
17 mu_1       0.8      1.21    0.924       3.02e- 4      8.66
18 mu_1       0.9      1.21    0.243       7.48e- 8     15.3 
19 mu_0       0.1      0.361   0.00000239  0            14.7 
20 mu_0       0.2      0.994   0.000709    0            37.6 
21 mu_0       0.3      1.56    0.0102      0            49.8 
22 mu_0       0.4      1.76    0.102       0            40.1 
23 mu_0       0.5      1.64    0.404       0            21.9 
24 mu_0       0.6      1.41    1.07        0             7.92
25 mu_0       0.7      1.24    1.09        0             5.23
26 mu_0       0.8      1.22    0.872       0             8.66
27 mu_0       0.9      1.28    0.476       0             9.00
[1] "Total run time was 69.689 seconds"
