
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1177"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10 10  3  1  4  7 11 11 11  6  7  2  4  3  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0264  0.2776  0.5476  0.9161  5.1475 
[1] "event indicator table: "

  0   1 
677 500 
[1] "treatment indicator table: "

  0   1 
475 702 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 570
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.564 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.552 0.179
 2 mu         0.1   0.2 0.730 0.248
 3 mu         0.1   0.3 0.866 0.274
 4 mu         0.1   0.4 0.914 0.281
 5 mu         0.1   0.5 0.952 0.281
 6 mu         0.2   0.1 0.531 0.132
 7 mu         0.2   0.2 0.695 0.178
 8 mu         0.2   0.3 0.833 0.216
 9 mu         0.2   0.4 0.877 0.218
10 mu         0.2   0.5 0.927 0.216
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.01        0.0377 0.000000982     16.5 
 2 mu         0.2      1.14        0.303  0.000532        16.1 
 3 mu         0.3      1.08        0.675  0.0153           7.62
 4 mu         0.4      1.02        0.905  0.127            2.78
 5 mu         0.5      1.00        1.01   0.466            1.65
 6 mu         0.6      1.02        1.04   0.622            1.50
 7 mu         0.7      1.04        1.02   0.233            2.04
 8 mu         0.8      1.01        0.887  0.0328           4.13
 9 mu         0.9      0.842       0.354  0.000347         8.21
10 mu_1       0.1      1.28        0.133  0.00000617      23.6 
11 mu_1       0.2      1.13        0.572  0.00168         11.6 
12 mu_1       0.3      1.04        0.843  0.0328           4.00
13 mu_1       0.4      1.00        0.980  0.208            2.29
14 mu_1       0.5      1.01        0.991  0.495            1.56
15 mu_1       0.6      1.04        1.03   0.405            1.65
16 mu_1       0.7      1.05        0.993  0.138            2.09
17 mu_1       0.8      1.00        0.847  0.0226           4.71
18 mu_1       0.9      0.822       0.292  0.000218         8.42
19 mu_0       0.1      0.983       0.0263 0.000000406     17.5 
20 mu_0       0.2      1.14        0.232  0.000243        17.2 
21 mu_0       0.3      1.10        0.568  0.00782          9.17
22 mu_0       0.4      1.03        0.836  0.0730           3.55
23 mu_0       0.5      0.999       0.962  0.322            2.05
24 mu_0       0.6      1.00        0.993  0.521            1.61
25 mu_0       0.7      1.03        1.04   0.366            1.93
26 mu_0       0.8      1.05        1.02   0.0734           2.40
27 mu_0       0.9      1.02        0.762  0.00151          6.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.40      0.000670  1.22e-12    171.  
 2 mu         0.2      2.44      0.0380    5.59e- 8    148.  
 3 mu         0.3      1.58      0.214     2.46e- 5     58.7 
 4 mu         0.4      1.11      0.563     1.55e- 3     14.1 
 5 mu         0.5      0.965     0.976     3.18e- 2      2.05
 6 mu         0.6      1.03      1.11      6.89e- 3      1.99
 7 mu         0.7      1.43      0.971     1.25e- 4     16.5 
 8 mu         0.8      2.90      0.392     3.74e- 7    122.  
 9 mu         0.9      9.26      0.0491    1.44e-11    715.  
10 mu_1       0.1      3.43      0.00339   1.02e-11    228.  
11 mu_1       0.2      2.08      0.122     2.35e- 7     98.6 
12 mu_1       0.3      1.28      0.439     6.91e- 5     26.1 
13 mu_1       0.4      1.00      0.849     3.26e- 3      4.69
14 mu_1       0.5      0.952     0.992     3.20e- 2      1.88
15 mu_1       0.6      1.09      1.08      1.35e- 3      2.72
16 mu_1       0.7      1.59      0.817     2.11e- 5     23.6 
17 mu_1       0.8      3.30      0.283     5.50e- 8    153.  
18 mu_1       0.9     10.1       0.0289    1.89e-12    795.  
19 mu_0       0.1      2.29      0.000358  0           165.  
20 mu_0       0.2      2.53      0.0170    0           160.  
21 mu_0       0.3      1.71      0.107     0            72.6 
22 mu_0       0.4      1.18      0.369     0            20.3 
23 mu_0       0.5      0.978     0.791     0             3.56
24 mu_0       0.6      0.946     1.03      0             2.00
25 mu_0       0.7      1.05      1.05      0             3.07
26 mu_0       0.8      1.28      0.605     0            12.1 
27 mu_0       0.9      1.43      0.138     0            31.4 
[1] "Total run time was 96.664 seconds"
