
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1265"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  5  7  5 11  2  8  3  8  4  8  8  5  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02189 0.35402 0.59588 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
768 497 
[1] "treatment indicator table: "

  0   1 
491 774 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 42.421 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.856 0.373
 2 mu         0.1   0.2 0.968 0.472
 3 mu         0.1   0.3 1.04  0.516
 4 mu         0.1   0.4 1.14  0.562
 5 mu         0.1   0.5 1.20  0.591
 6 mu         0.2   0.1 0.484 0.120
 7 mu         0.2   0.2 0.538 0.144
 8 mu         0.2   0.3 0.589 0.157
 9 mu         0.2   0.4 0.641 0.170
10 mu         0.2   0.5 0.678 0.179
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.91        0.0632 0.0000000141      91.4 
 2 mu         0.2      1.14        0.363  0.0000189         19.6 
 3 mu         0.3      0.993       0.667  0.00103            9.36
 4 mu         0.4      0.962       0.851  0.0116             4.16
 5 mu         0.5      0.965       0.914  0.0530             2.90
 6 mu         0.6      0.991       0.957  0.170              2.66
 7 mu         0.7      0.994       0.961  0.150              2.25
 8 mu         0.8      0.936       0.916  0.0298             2.51
 9 mu         0.9      0.811       0.610  0.000202           3.15
10 mu_1       0.1      0.851       0.198  0.000000104       11.6 
11 mu_1       0.2      0.884       0.621  0.0000699          5.27
12 mu_1       0.3      0.927       0.799  0.00255            3.62
13 mu_1       0.4      0.948       0.884  0.0238             3.56
14 mu_1       0.5      0.977       0.945  0.0880             2.58
15 mu_1       0.6      1.00        0.978  0.240              2.76
16 mu_1       0.7      0.994       0.945  0.128              2.21
17 mu_1       0.8      0.922       0.922  0.0202             2.62
18 mu_1       0.9      0.797       0.548  0.000123           3.27
19 mu_0       0.1      2.03        0.0453 0.00000000414    101.  
20 mu_0       0.2      1.20        0.274  0.00000616        23.6 
21 mu_0       0.3      1.02        0.606  0.000375          12.3 
22 mu_0       0.4      0.971       0.812  0.00351            6.25
23 mu_0       0.5      0.953       0.901  0.0180             3.23
24 mu_0       0.6      0.970       0.978  0.0652             2.50
25 mu_0       0.7      0.995       0.937  0.181              2.72
26 mu_0       0.8      0.992       0.974  0.0680             2.19
27 mu_0       0.9      0.932       0.859  0.000911           2.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.346    0.000114   5.95e-19     10.4 
 2 mu         0.2      0.927    0.00964    6.24e-13     16.8 
 3 mu         0.3      1.32     0.140      2.08e- 9     14.9 
 4 mu         0.4      1.35     0.550      6.54e- 7      8.99
 5 mu         0.5      1.26     1.06       5.68e- 5      8.43
 6 mu         0.6      1.21     1.16       2.18e- 3      4.86
 7 mu         0.7      1.25     1.06       9.62e- 4      5.92
 8 mu         0.8      1.35     0.710      9.69e- 6     13.1 
 9 mu         0.9      1.52     0.0940     2.75e- 9     22.4 
10 mu_1       0.1      0.767    0.000757   5.95e-18     21.3 
11 mu_1       0.2      1.28     0.0291     3.12e-12     18.7 
12 mu_1       0.3      1.44     0.324      6.92e- 9     11.1 
13 mu_1       0.4      1.35     0.802      1.64e- 6      8.58
14 mu_1       0.5      1.25     1.08       1.14e- 4      7.93
15 mu_1       0.6      1.22     1.16       3.63e- 3      3.96
16 mu_1       0.7      1.27     0.959      1.96e- 4      7.61
17 mu_1       0.8      1.38     0.601      1.73e- 6     14.8 
18 mu_1       0.9      1.54     0.0682     4.75e-10     24.9 
19 mu_0       0.1      0.299    0.0000403  0             9.94
20 mu_0       0.2      0.838    0.00540    0            16.4 
21 mu_0       0.3      1.26     0.0769     0            16.5 
22 mu_0       0.4      1.35     0.373      0            11.7 
23 mu_0       0.5      1.27     0.875      0             8.92
24 mu_0       0.6      1.20     1.05       0             6.44
25 mu_0       0.7      1.20     1.02       0             4.29
26 mu_0       0.8      1.26     0.828      0             6.56
27 mu_0       0.9      1.33     0.187      0            18.9 
[1] "Total run time was 45.519 seconds"
