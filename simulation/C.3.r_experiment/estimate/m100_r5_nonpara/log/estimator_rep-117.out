
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1258"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  9  7 11  6  4  2  5  8  4  5  7  4  9  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05489 0.39879 0.66529 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
753 505 
[1] "treatment indicator table: "

  0   1 
448 810 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.047 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.0624 0.0856
 2 mu         0.1   0.2 0.106  0.108 
 3 mu         0.1   0.3 0.0810 0.0995
 4 mu         0.1   0.4 0.118  0.0740
 5 mu         0.1   0.5 0.0995 0.0767
 6 mu         0.2   0.1 0.163  0.0708
 7 mu         0.2   0.2 0.199  0.0728
 8 mu         0.2   0.3 0.216  0.0688
 9 mu         0.2   0.4 0.256  0.0734
10 mu         0.2   0.5 0.255  0.0832
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.184      0.00815 0.0000000329      3.89
 2 mu         0.2      0.502      0.118   0.0000238         5.14
 3 mu         0.3      0.779      0.371   0.000966         10.3 
 4 mu         0.4      0.908      0.681   0.0120            8.04
 5 mu         0.5      0.961      0.907   0.0769            3.53
 6 mu         0.6      0.999      0.918   0.315             3.24
 7 mu         0.7      1.03       0.964   0.412             2.25
 8 mu         0.8      1.04       1.08    0.0470            2.38
 9 mu         0.9      1.10       0.940   0.000521          7.06
10 mu_1       0.1      0.369      0.0415  0.000000237       3.05
11 mu_1       0.2      0.712      0.260   0.0000871         8.11
12 mu_1       0.3      0.897      0.595   0.00240          10.9 
13 mu_1       0.4      0.954      0.845   0.0230            6.51
14 mu_1       0.5      0.984      0.929   0.121             3.08
15 mu_1       0.6      1.02       0.911   0.425             3.15
16 mu_1       0.7      1.04       0.977   0.321             2.35
17 mu_1       0.8      1.05       1.04    0.0323            2.43
18 mu_1       0.9      1.10       0.907   0.000331          7.45
19 mu_0       0.1      0.164      0.00502 0.0000000102      4.28
20 mu_0       0.2      0.449      0.0815  0.00000799        4.64
21 mu_0       0.3      0.729      0.287   0.000349         10.1 
22 mu_0       0.4      0.877      0.628   0.00467           9.06
23 mu_0       0.5      0.937      0.828   0.0326            4.39
24 mu_0       0.6      0.976      0.942   0.150             3.36
25 mu_0       0.7      1.00       0.913   0.418             2.74
26 mu_0       0.8      1.01       0.895   0.106             2.59
27 mu_0       0.9      1.04       1.00    0.00223           3.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.199   0.0000233   7.25e-18      5.09
 2 mu         0.2      0.716   0.00231     3.80e-12     13.7 
 3 mu         0.3      1.25    0.0278      8.43e- 9     18.0 
 4 mu         0.4      1.44    0.158       1.99e- 6     24.7 
 5 mu         0.5      1.31    0.603       1.38e- 4     15.9 
 6 mu         0.6      1.14    0.674       4.42e- 3      8.39
 7 mu         0.7      1.13    0.916       2.93e- 3      8.61
 8 mu         0.8      1.27    0.719       1.31e- 5     18.5 
 9 mu         0.9      1.49    0.127       7.18e-10     26.6 
10 mu_1       0.1      0.506   0.000165    7.25e-17     11.3 
11 mu_1       0.2      1.07    0.00942     1.90e-11     17.1 
12 mu_1       0.3      1.46    0.0650      2.81e- 8     23.3 
13 mu_1       0.4      1.45    0.262       4.98e- 6     24.0 
14 mu_1       0.5      1.25    0.551       2.77e- 4     12.3 
15 mu_1       0.6      1.10    0.801       7.37e- 3      6.36
16 mu_1       0.7      1.15    0.940       1.05e- 3      9.22
17 mu_1       0.8      1.32    0.673       4.08e- 6     19.5 
18 mu_1       0.9      1.52    0.0989      2.00e-10     27.8 
19 mu_0       0.1      0.165   0.00000465  0             4.40
20 mu_0       0.2      0.627   0.000912    0            12.8 
21 mu_0       0.3      1.16    0.0115      0            15.7 
22 mu_0       0.4      1.43    0.0756      0            25.2 
23 mu_0       0.5      1.38    0.363       0            19.4 
24 mu_0       0.6      1.19    0.562       0            11.4 
25 mu_0       0.7      1.07    0.789       0             7.17
26 mu_0       0.8      1.10    0.904       0            14.6 
27 mu_0       0.9      1.16    0.156       0            24.0 
[1] "Total run time was 43.056 seconds"
