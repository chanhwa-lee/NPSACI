
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1240"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5 10  3  6  5  4  9  4 15  3  2  5  8  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04548 0.39104 0.60835 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
756 484 
[1] "treatment indicator table: "

  0   1 
411 829 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 45.837 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.434 0.130 
 2 mu         0.1   0.2 0.472 0.150 
 3 mu         0.1   0.3 0.552 0.180 
 4 mu         0.1   0.4 0.630 0.189 
 5 mu         0.1   0.5 0.657 0.197 
 6 mu         0.2   0.1 0.384 0.0704
 7 mu         0.2   0.2 0.439 0.0788
 8 mu         0.2   0.3 0.500 0.0955
 9 mu         0.2   0.4 0.536 0.0982
10 mu         0.2   0.5 0.573 0.0974
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06        0.0186  5.61e-11     26.7 
 2 mu         0.2      0.962       0.316   5.74e- 7     12.1 
 3 mu         0.3      1.02        0.780   9.82e- 5      5.46
 4 mu         0.4      1.07        1.05    2.98e- 3      2.75
 5 mu         0.5      1.07        1.08    3.29e- 2      2.49
 6 mu         0.6      1.03        1.03    1.77e- 1      1.85
 7 mu         0.7      0.970       0.962   4.94e- 1      1.50
 8 mu         0.8      0.925       0.936   1.35e- 1      1.84
 9 mu         0.9      0.988       0.950   4.29e- 3      3.60
10 mu_1       0.1      0.651       0.0702  4.36e-10      8.54
11 mu_1       0.2      0.862       0.533   2.23e- 6      6.15
12 mu_1       0.3      0.991       0.883   2.55e- 4      4.22
13 mu_1       0.4      1.06        1.03    5.80e- 3      2.68
14 mu_1       0.5      1.05        1.04    5.12e- 2      2.31
15 mu_1       0.6      1.01        1.01    2.31e- 1      1.74
16 mu_1       0.7      0.952       0.949   3.90e- 1      1.54
17 mu_1       0.8      0.921       0.940   8.24e- 2      1.94
18 mu_1       0.9      0.999       0.938   2.94e- 3      3.91
19 mu_0       0.1      1.10        0.0105  1.38e-11     29.7 
20 mu_0       0.2      0.987       0.248   1.59e- 7     14.9 
21 mu_0       0.3      1.03        0.725   3.12e- 5      7.24
22 mu_0       0.4      1.08        0.978   1.10e- 3      3.68
23 mu_0       0.5      1.10        1.12    1.45e- 2      2.67
24 mu_0       0.6      1.06        1.05    9.58e- 2      2.01
25 mu_0       0.7      1.01        1.04    3.55e- 1      1.57
26 mu_0       0.8      0.941       0.937   3.44e- 1      1.65
27 mu_0       0.9      0.892       0.848   1.64e- 2      3.10
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.192    0.0000287  5.57e-18      6.79
 2 mu         0.2      0.546    0.00458    2.92e-12     10.6 
 3 mu         0.3      0.878    0.0786     6.48e- 9      8.18
 4 mu         0.4      1.03     0.352      1.53e- 6      5.24
 5 mu         0.5      1.06     0.903      1.06e- 4      3.64
 6 mu         0.6      1.07     1.08       3.39e- 3      3.03
 7 mu         0.7      1.05     1.11       3.20e- 2      2.37
 8 mu         0.8      1.01     0.897      9.46e- 4      3.15
 9 mu         0.9      1.10     0.181      1.27e- 6      8.53
10 mu_1       0.1      0.498    0.000182   5.57e-17     13.6 
11 mu_1       0.2      0.846    0.0153     1.46e-11     10.6 
12 mu_1       0.3      1.04     0.184      2.16e- 8      6.90
13 mu_1       0.4      1.07     0.573      3.83e- 6      4.56
14 mu_1       0.5      1.05     1.06       2.13e- 4      3.83
15 mu_1       0.6      1.06     1.13       5.66e- 3      2.65
16 mu_1       0.7      1.03     1.15       1.30e- 2      2.37
17 mu_1       0.8      0.995    0.723      3.38e- 4      3.32
18 mu_1       0.9      1.11     0.130      4.70e- 7      9.47
19 mu_0       0.1      0.158    0.0000106  0             6.03
20 mu_0       0.2      0.471    0.00195    0            10.6 
21 mu_0       0.3      0.807    0.0339     0             9.35
22 mu_0       0.4      1.01     0.190      0             6.35
23 mu_0       0.5      1.07     0.624      0             4.53
24 mu_0       0.6      1.09     1.16       0             3.58
25 mu_0       0.7      1.11     1.14       0             2.38
26 mu_0       0.8      1.08     1.10       0             2.78
27 mu_0       0.9      1.05     0.404      0             5.46
[1] "Total run time was 49.444 seconds"
