
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1230"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7 13  6  5  3  6  5  4  3  7 11  8  2  8  3  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0323  0.3500  0.6091  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
732 498 
[1] "treatment indicator table: "

  0   1 
472 758 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.732 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.376 0.139
 2 mu         0.1   0.2 0.440 0.168
 3 mu         0.1   0.3 0.543 0.219
 4 mu         0.1   0.4 0.714 0.199
 5 mu         0.1   0.5 0.753 0.216
 6 mu         0.2   0.1 0.392 0.115
 7 mu         0.2   0.2 0.507 0.137
 8 mu         0.2   0.3 0.586 0.153
 9 mu         0.2   0.4 0.672 0.154
10 mu         0.2   0.5 0.729 0.166
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.22        0.0647 0.0000000120      26.8 
 2 mu         0.2      1.30        0.428  0.0000161         17.7 
 3 mu         0.3      1.24        0.710  0.000867          10.6 
 4 mu         0.4      1.10        0.929  0.0120             6.33
 5 mu         0.5      0.992       0.944  0.0765             2.91
 6 mu         0.6      0.960       0.952  0.290              1.80
 7 mu         0.7      0.980       0.938  0.140              1.96
 8 mu         0.8      1.02        0.913  0.0143             3.34
 9 mu         0.9      1.06        0.665  0.000111           4.16
10 mu_1       0.1      1.41        0.201  0.0000000886      19.2 
11 mu_1       0.2      1.32        0.687  0.0000596         16.6 
12 mu_1       0.3      1.20        0.869  0.00215            8.77
13 mu_1       0.4      1.06        0.972  0.0225             5.21
14 mu_1       0.5      0.977       0.959  0.116              2.20
15 mu_1       0.6      0.969       0.969  0.321              1.95
16 mu_1       0.7      0.998       0.932  0.0925             2.04
17 mu_1       0.8      1.04        0.905  0.00808            3.42
18 mu_1       0.9      1.08        0.595  0.0000564          4.43
19 mu_0       0.1      1.20        0.0462 0.00000000354     28.1 
20 mu_0       0.2      1.29        0.339  0.00000526        18.0 
21 mu_0       0.3      1.26        0.614  0.000319          12.3 
22 mu_0       0.4      1.13        0.874  0.00503            7.07
23 mu_0       0.5      1.01        0.947  0.0367             3.61
24 mu_0       0.6      0.947       0.954  0.159              1.59
25 mu_0       0.7      0.937       0.939  0.250              2.12
26 mu_0       0.8      0.943       0.895  0.0394             2.99
27 mu_0       0.9      0.935       0.801  0.000600           3.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.866    0.000134   2.36e-15     27.6 
 2 mu         0.2      1.57     0.0113     4.88e-10     53.7 
 3 mu         0.3      1.59     0.122      5.52e- 7     36.5 
 4 mu         0.4      1.38     0.453      7.20e- 5     18.0 
 5 mu         0.5      1.23     0.932      2.77e- 3      6.82
 6 mu         0.6      1.12     0.994      4.73e- 2      5.64
 7 mu         0.7      1.04     0.897      1.13e- 2      3.21
 8 mu         0.8      1.09     0.455      2.05e- 4      5.77
 9 mu         0.9      1.31     0.0447     7.12e- 8     15.1 
10 mu_1       0.1      1.69     0.000797   2.12e-14     55.2 
11 mu_1       0.2      1.77     0.0344     2.20e- 9     53.7 
12 mu_1       0.3      1.45     0.246      1.66e- 6     25.4 
13 mu_1       0.4      1.23     0.734      1.62e- 4     11.3 
14 mu_1       0.5      1.15     0.988      4.99e- 3      6.47
15 mu_1       0.6      1.08     0.898      6.44e- 2      5.06
16 mu_1       0.7      1.03     0.891      4.32e- 3      3.67
17 mu_1       0.8      1.12     0.366      5.12e- 5      6.41
18 mu_1       0.9      1.34     0.0307     1.58e- 8     16.8 
19 mu_0       0.1      0.775    0.0000447  0            24.5 
20 mu_0       0.2      1.52     0.00513    0            53.7 
21 mu_0       0.3      1.65     0.0579     0            41.7 
22 mu_0       0.4      1.47     0.293      0            22.5 
23 mu_0       0.5      1.30     0.744      0            10.2 
24 mu_0       0.6      1.18     1.04       0             6.51
25 mu_0       0.7      1.05     0.928      0             4.54
26 mu_0       0.8      0.970    0.717      0             4.72
27 mu_0       0.9      1.05     0.0890     0            10.5 
[1] "Total run time was 70.64 seconds"
