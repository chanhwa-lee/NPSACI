
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1283"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  9  6  6  3  6  3  4  8  9  8  8  5  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04335 0.36040 0.61997 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
755 528 
[1] "treatment indicator table: "

  0   1 
453 830 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.89 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.404 0.133 
 2 mu         0.1   0.2 0.482 0.157 
 3 mu         0.1   0.3 0.483 0.161 
 4 mu         0.1   0.4 0.493 0.169 
 5 mu         0.1   0.5 0.549 0.190 
 6 mu         0.2   0.1 0.395 0.0907
 7 mu         0.2   0.2 0.463 0.106 
 8 mu         0.2   0.3 0.474 0.107 
 9 mu         0.2   0.4 0.491 0.112 
10 mu         0.2   0.5 0.543 0.125 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.907      0.0103   8.86e-12     17.8 
 2 mu         0.2      0.943      0.179    1.82e- 7     13.1 
 3 mu         0.3      1.05       0.548    4.68e- 5      8.91
 4 mu         0.4      1.12       0.913    1.90e- 3      7.93
 5 mu         0.5      1.08       1.03     2.61e- 2      5.89
 6 mu         0.6      1.02       1.00     1.65e- 1      2.64
 7 mu         0.7      0.982      0.962    2.51e- 1      2.32
 8 mu         0.8      0.952      0.947    4.38e- 2      3.24
 9 mu         0.9      0.938      0.645    7.39e- 4      4.96
10 mu_1       0.1      0.759      0.0346   6.69e-11     19.2 
11 mu_1       0.2      0.896      0.280    6.91e- 7      9.36
12 mu_1       0.3      1.07       0.698    1.19e- 4      9.29
13 mu_1       0.4      1.11       0.935    3.65e- 3      7.89
14 mu_1       0.5      1.05       0.974    4.05e- 2      4.85
15 mu_1       0.6      1.00       0.959    2.15e- 1      2.38
16 mu_1       0.7      0.972      0.959    1.73e- 1      2.22
17 mu_1       0.8      0.950      0.912    2.92e- 2      3.54
18 mu_1       0.9      0.936      0.599    4.48e- 4      4.89
19 mu_0       0.1      0.923      0.00643  2.41e-12     19.7 
20 mu_0       0.2      0.955      0.126    5.45e- 8     14.0 
21 mu_0       0.3      1.05       0.459    1.57e- 5      8.75
22 mu_0       0.4      1.13       0.903    7.26e- 4      7.95
23 mu_0       0.5      1.11       0.972    1.17e- 2      6.93
24 mu_0       0.6      1.05       1.02     9.07e- 2      3.64
25 mu_0       0.7      1.00       0.953    2.99e- 1      2.55
26 mu_0       0.8      0.962      0.936    1.02e- 1      2.06
27 mu_0       0.9      0.952      0.787    3.35e- 3      5.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.606    0.000101   7.94e-18     35.5 
 2 mu         0.2      0.947    0.00929    4.16e-12     34.5 
 3 mu         0.3      1.14     0.0990     9.23e- 9     15.7 
 4 mu         0.4      1.33     0.401      2.18e- 6     16.8 
 5 mu         0.5      1.32     0.804      1.51e- 4     11.2 
 6 mu         0.6      1.20     1.11       4.84e- 3      6.21
 7 mu         0.7      1.31     0.925      3.27e- 3     26.1 
 8 mu         0.8      1.91     0.671      3.29e- 5     57.2 
 9 mu         0.9      2.70     0.0949     1.02e- 8     41.9 
10 mu_1       0.1      1.10     0.000597   7.94e-17     50.7 
11 mu_1       0.2      1.10     0.0279     2.08e-11     24.7 
12 mu_1       0.3      1.24     0.225      3.08e- 8     14.2 
13 mu_1       0.4      1.38     0.644      5.46e- 6     16.8 
14 mu_1       0.5      1.30     1.04       3.03e- 4      9.39
15 mu_1       0.6      1.19     1.02       8.06e- 3      8.50
16 mu_1       0.7      1.38     0.856      6.68e- 4     31.0 
17 mu_1       0.8      2.03     0.563      5.88e- 6     59.6 
18 mu_1       0.9      2.76     0.0676     1.62e- 9     38.8 
19 mu_0       0.1      0.551    0.0000368  0            33.8 
20 mu_0       0.2      0.908    0.00477    0            37.0 
21 mu_0       0.3      1.09     0.0483     0            19.2 
22 mu_0       0.4      1.30     0.245      0            16.8 
23 mu_0       0.5      1.34     0.688      0            13.4 
24 mu_0       0.6      1.21     1.09       0             7.26
25 mu_0       0.7      1.15     0.913      0            14.5 
26 mu_0       0.8      1.45     0.753      0            47.7 
27 mu_0       0.9      2.15     0.161      0            69.8 
[1] "Total run time was 89.926 seconds"
