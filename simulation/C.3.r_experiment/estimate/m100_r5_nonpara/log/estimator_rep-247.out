
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1303"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  8  6  8  3  5  3  9  4  8  8  7  9  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04634 0.34725 0.59989 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
807 496 
[1] "treatment indicator table: "

  0   1 
457 846 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.496 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.357 0.132
 2 mu         0.1   0.2 0.420 0.160
 3 mu         0.1   0.3 0.469 0.180
 4 mu         0.1   0.4 0.495 0.192
 5 mu         0.1   0.5 0.515 0.200
 6 mu         0.2   0.1 0.599 0.299
 7 mu         0.2   0.2 0.756 0.401
 8 mu         0.2   0.3 0.867 0.476
 9 mu         0.2   0.4 0.925 0.508
10 mu         0.2   0.5 1.00  0.549
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.713     0.000880  2.02e-10     35.6 
 2 mu         0.2      1.75      0.0307    1.98e- 6    109.  
 3 mu         0.3      1.72      0.196     3.26e- 4     85.7 
 4 mu         0.4      1.25      0.493     9.58e- 3     32.0 
 5 mu         0.5      1.02      0.790     1.03e- 1      7.04
 6 mu         0.6      1.04      0.996     4.02e- 1      3.58
 7 mu         0.7      1.08      1.04      3.96e- 1      6.66
 8 mu         0.8      1.08      0.945     9.95e- 2      5.96
 9 mu         0.9      1.12      0.491     2.41e- 3     21.3 
10 mu_1       0.1      1.42      0.00469   1.49e- 9     79.0 
11 mu_1       0.2      2.02      0.0852    7.37e- 6    122.  
12 mu_1       0.3      1.55      0.394     8.14e- 4     63.7 
13 mu_1       0.4      1.12      0.715     1.81e- 2     18.3 
14 mu_1       0.5      1.01      0.912     1.57e- 1      4.28
15 mu_1       0.6      1.05      0.995     2.88e- 1      4.21
16 mu_1       0.7      1.09      1.04      3.41e- 1      6.99
17 mu_1       0.8      1.08      0.906     7.38e- 2      6.96
18 mu_1       0.9      1.13      0.443     1.62e- 3     22.4 
19 mu_0       0.1      0.634     0.000405  5.83e-11     30.7 
20 mu_0       0.2      1.68      0.0180    6.34e- 7    106.  
21 mu_0       0.3      1.79      0.124     1.17e- 4     95.1 
22 mu_0       0.4      1.33      0.347     3.92e- 3     41.1 
23 mu_0       0.5      1.04      0.694     4.91e- 2     10.3 
24 mu_0       0.6      1.01      0.946     1.55e- 1      3.07
25 mu_0       0.7      1.06      0.986     2.63e- 1      5.91
26 mu_0       0.8      1.07      0.972     2.02e- 1      7.42
27 mu_0       0.9      1.03      0.787     9.55e- 3     11.9 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.62    0.0000329   2.71e-14    159.  
 2 mu         0.2      5.89    0.00239     1.78e- 9    348.  
 3 mu         0.3      5.62    0.0360      1.17e- 6    270.  
 4 mu         0.4      3.70    0.179       1.17e- 4    117.  
 5 mu         0.5      2.03    0.531       4.03e- 3     30.9 
 6 mu         0.6      1.25    0.976       4.31e- 2      5.40
 7 mu         0.7      1.27    0.952       1.13e- 2     13.7 
 8 mu         0.8      2.07    0.781       6.63e- 5     59.7 
 9 mu         0.9      4.60    0.146       6.48e- 9    218.  
10 mu_1       0.1      5.49    0.000234    2.71e-13    340.  
11 mu_1       0.2      6.61    0.00770     8.89e- 9    373.  
12 mu_1       0.3      4.80    0.0816      3.89e- 6    193.  
13 mu_1       0.4      2.88    0.328       2.91e- 4     62.9 
14 mu_1       0.5      1.65    0.711       8.06e- 3     19.2 
15 mu_1       0.6      1.20    1.04        7.19e- 2      4.20
16 mu_1       0.7      1.39    0.961       3.60e- 3     19.6 
17 mu_1       0.8      2.32    0.665       1.84e- 5     74.6 
18 mu_1       0.9      4.95    0.112       1.60e- 9    242.  
19 mu_0       0.1      2.30    0.00000406  0           139.  
20 mu_0       0.2      5.71    0.000809    0           341.  
21 mu_0       0.3      5.98    0.0138      0           303.  
22 mu_0       0.4      4.25    0.0891      0           154.  
23 mu_0       0.5      2.42    0.288       0            48.5 
24 mu_0       0.6      1.33    0.798       0             9.00
25 mu_0       0.7      0.994   0.989       0             3.06
26 mu_0       0.8      1.07    0.843       0             9.33
27 mu_0       0.9      1.45    0.194       0            38.4 
[1] "Total run time was 54.381 seconds"
