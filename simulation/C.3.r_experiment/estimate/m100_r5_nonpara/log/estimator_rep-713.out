
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1288"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  6  4  4  7  5  9  5  4  4 10  8  9  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02819 0.32737 0.58175 0.99974 5.00000 
[1] "event indicator table: "

  0   1 
736 552 
[1] "treatment indicator table: "

  0   1 
501 787 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 79.831 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.512 0.115 
 2 mu         0.1   0.2 0.530 0.111 
 3 mu         0.1   0.3 0.585 0.124 
 4 mu         0.1   0.4 0.653 0.131 
 5 mu         0.1   0.5 0.697 0.135 
 6 mu         0.2   0.1 0.422 0.0718
 7 mu         0.2   0.2 0.460 0.0777
 8 mu         0.2   0.3 0.540 0.0829
 9 mu         0.2   0.4 0.596 0.0856
10 mu         0.2   0.5 0.642 0.0881
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.998       0.0795 0.00000000793      9.79
 2 mu         0.2      1.02        0.489  0.0000304          6.69
 3 mu         0.3      0.989       0.712  0.00252            3.96
 4 mu         0.4      0.968       0.878  0.0404             2.98
 5 mu         0.5      0.987       0.952  0.150              2.04
 6 mu         0.6      1.02        0.974  0.388              2.02
 7 mu         0.7      1.02        1.03   0.292              1.91
 8 mu         0.8      0.969       0.966  0.0857             1.97
 9 mu         0.9      0.915       0.816  0.00699            2.95
10 mu_1       0.1      0.958       0.255  0.0000000518      11.5 
11 mu_1       0.2      0.977       0.698  0.0000995          4.70
12 mu_1       0.3      0.954       0.803  0.00554            3.65
13 mu_1       0.4      0.955       0.916  0.0674             2.59
14 mu_1       0.5      0.990       0.932  0.166              2.11
15 mu_1       0.6      1.02        1.00   0.327              1.96
16 mu_1       0.7      1.02        1.04   0.199              1.97
17 mu_1       0.8      0.966       0.946  0.0488             2.04
18 mu_1       0.9      0.920       0.770  0.00372            3.16
19 mu_0       0.1      1.00        0.0551 0.00000000306      9.75
20 mu_0       0.2      1.03        0.405  0.0000131          7.38
21 mu_0       0.3      1.00        0.641  0.00122            4.19
22 mu_0       0.4      0.977       0.849  0.0224             3.25
23 mu_0       0.5      0.984       0.924  0.135              2.07
24 mu_0       0.6      1.01        0.974  0.232              2.10
25 mu_0       0.7      1.02        1.01   0.288              1.88
26 mu_0       0.8      0.980       0.989  0.233              2.03
27 mu_0       0.9      0.876       0.808  0.0319             2.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.98     0.000244   2.29e-15    160.  
 2 mu         0.2      1.51     0.0196     4.75e-10     54.6 
 3 mu         0.3      1.29     0.200      4.11e- 7     13.6 
 4 mu         0.4      1.14     0.601      4.69e- 5      5.04
 5 mu         0.5      1.03     0.888      1.73e- 3      2.89
 6 mu         0.6      0.958    0.916      5.00e- 3      3.69
 7 mu         0.7      0.963    1.01       7.80e- 5      2.96
 8 mu         0.8      1.10     0.699      2.03e- 7      4.96
 9 mu         0.9      1.15     0.0823     6.99e-12      8.57
10 mu_1       0.1      1.84     0.00151    2.06e-14     99.9 
11 mu_1       0.2      1.40     0.0585     2.14e- 9     21.4 
12 mu_1       0.3      1.23     0.387      1.29e- 6      8.48
13 mu_1       0.4      1.09     0.882      1.11e- 4      3.83
14 mu_1       0.5      1.01     0.901      3.28e- 3      3.35
15 mu_1       0.6      0.950    0.864      5.21e- 4      3.62
16 mu_1       0.7      0.985    1.02       6.96e- 6      3.12
17 mu_1       0.8      1.13     0.530      1.59e- 8      5.27
18 mu_1       0.9      1.15     0.0589     4.85e-13      8.96
19 mu_0       0.1      2.00     0.0000983  0           166.  
20 mu_0       0.2      1.53     0.00892    0            64.0 
21 mu_0       0.3      1.31     0.106      0            15.8 
22 mu_0       0.4      1.16     0.369      0             6.16
23 mu_0       0.5      1.06     0.811      0             3.31
24 mu_0       0.6      0.969    0.814      0             3.80
25 mu_0       0.7      0.914    0.730      0             3.16
26 mu_0       0.8      0.979    0.737      0             3.80
27 mu_0       0.9      1.16     0.0771     0             6.89
[1] "Total run time was 85.502 seconds"
