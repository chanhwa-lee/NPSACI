
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1166"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  3  9  6  7 10  5  9  4  5  6  5  5  7  7  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02007 0.32544 0.56735 0.96301 4.00000 
[1] "event indicator table: "

  0   1 
705 461 
[1] "treatment indicator table: "

  0   1 
420 746 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 569
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.386 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.312 0.122 
 2 mu         0.1   0.2 0.333 0.117 
 3 mu         0.1   0.3 0.318 0.117 
 4 mu         0.1   0.4 0.306 0.110 
 5 mu         0.1   0.5 0.348 0.103 
 6 mu         0.2   0.1 0.279 0.0776
 7 mu         0.2   0.2 0.326 0.0860
 8 mu         0.2   0.3 0.335 0.0967
 9 mu         0.2   0.4 0.351 0.0951
10 mu         0.2   0.5 0.405 0.0852
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.511       0.0273  4.13e-11      7.63
 2 mu         0.2      0.732       0.248   4.47e- 7      4.75
 3 mu         0.3      0.871       0.631   8.26e- 5      4.03
 4 mu         0.4      0.948       0.881   2.79e- 3      2.98
 5 mu         0.5      0.986       0.953   3.60e- 2      2.46
 6 mu         0.6      1.00        1.01    2.44e- 1      2.16
 7 mu         0.7      1.02        1.02    1.24e- 1      1.75
 8 mu         0.8      1.06        1.01    1.12e- 2      2.82
 9 mu         0.9      1.05        0.778   9.38e- 5      4.72
10 mu_1       0.1      0.688       0.108   3.22e-10      7.32
11 mu_1       0.2      0.838       0.471   1.75e- 6      4.78
12 mu_1       0.3      0.923       0.801   2.17e- 4      3.62
13 mu_1       0.4      0.971       0.922   5.55e- 3      2.54
14 mu_1       0.5      0.995       0.960   5.80e- 2      2.55
15 mu_1       0.6      1.01        1.03    3.34e- 1      1.92
16 mu_1       0.7      1.03        1.02    8.24e- 2      1.78
17 mu_1       0.8      1.06        1.04    6.69e- 3      3.07
18 mu_1       0.9      1.04        0.760   5.12e- 5      4.75
19 mu_0       0.1      0.491       0.0168  1.01e-11      8.48
20 mu_0       0.2      0.705       0.169   1.21e- 7      5.14
21 mu_0       0.3      0.848       0.505   2.50e- 5      4.23
22 mu_0       0.4      0.932       0.793   9.53e- 4      3.28
23 mu_0       0.5      0.978       0.932   1.40e- 2      2.38
24 mu_0       0.6      0.999       0.961   1.10e- 1      2.53
25 mu_0       0.7      1.01        1.03    2.22e- 1      1.80
26 mu_0       0.8      1.03        1.05    2.90e- 2      1.91
27 mu_0       0.9      1.12        1.11    4.77e- 4      4.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.856    0.0000754  3.30e-15     48.8 
 2 mu         0.2      1.28     0.00545    4.32e-10     33.4 
 3 mu         0.3      1.37     0.0660     3.73e- 7     17.4 
 4 mu         0.4      1.27     0.326      4.25e- 5      9.50
 5 mu         0.5      1.10     0.822      1.57e- 3      5.40
 6 mu         0.6      0.992    0.973      9.17e- 3      2.89
 7 mu         0.7      1.03     0.965      1.67e- 4      4.52
 8 mu         0.8      1.19     0.933      4.98e- 7      7.32
 9 mu         0.9      1.43     0.216      1.92e-11     16.9 
10 mu_1       0.1      1.40     0.000607   2.97e-14     57.5 
11 mu_1       0.2      1.49     0.0195     2.04e- 9     24.8 
12 mu_1       0.3      1.40     0.147      1.17e- 6     12.9 
13 mu_1       0.4      1.20     0.515      1.00e- 4      7.92
14 mu_1       0.5      1.03     0.825      2.97e- 3      3.60
15 mu_1       0.6      0.973    0.840      1.80e- 3      2.70
16 mu_1       0.7      1.06     1.00       2.80e- 5      4.75
17 mu_1       0.8      1.23     0.803      7.32e- 8      8.50
18 mu_1       0.9      1.45     0.165      2.51e-12     17.5 
19 mu_0       0.1      0.796    0.0000219  0            47.9 
20 mu_0       0.2      1.23     0.00186    0            36.8 
21 mu_0       0.3      1.36     0.0282     0            19.4 
22 mu_0       0.4      1.31     0.167      0            10.6 
23 mu_0       0.5      1.16     0.534      0             7.19
24 mu_0       0.6      1.02     0.939      0             3.40
25 mu_0       0.7      0.975    0.764      0             3.96
26 mu_0       0.8      1.04     0.839      0             5.07
27 mu_0       0.9      1.28     0.312      0            12.1 
[1] "Total run time was 46.568 seconds"
