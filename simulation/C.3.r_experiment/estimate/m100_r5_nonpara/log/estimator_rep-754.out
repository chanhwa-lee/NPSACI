
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1254"
[1] "cluster size dist'n: "

 6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  9  9  4  5 11  3  8  4  7  7  5  6  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04568 0.38776 0.66758 1.00000 5.13075 
[1] "event indicator table: "

  0   1 
732 522 
[1] "treatment indicator table: "

  0   1 
442 812 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.494 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.815 0.411
 2 mu         0.1   0.2 0.994 0.511
 3 mu         0.1   0.3 1.16  0.601
 4 mu         0.1   0.4 1.28  0.658
 5 mu         0.1   0.5 1.38  0.686
 6 mu         0.2   0.1 0.451 0.110
 7 mu         0.2   0.2 0.560 0.138
 8 mu         0.2   0.3 0.656 0.158
 9 mu         0.2   0.4 0.725 0.175
10 mu         0.2   0.5 0.781 0.179
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.91        0.0345 0.0000000180      96.4 
 2 mu         0.2      1.12        0.269  0.0000388         20.8 
 3 mu         0.3      0.991       0.744  0.00248            5.18
 4 mu         0.4      1.03        0.995  0.0359             3.14
 5 mu         0.5      1.05        1.03   0.219              2.90
 6 mu         0.6      1.02        1.02   0.224              1.97
 7 mu         0.7      0.991       1.02   0.221              1.72
 8 mu         0.8      0.967       0.994  0.0589             1.81
 9 mu         0.9      0.892       0.833  0.000712           3.24
10 mu_1       0.1      0.918       0.112  0.000000121       17.3 
11 mu_1       0.2      0.893       0.538  0.000131           7.54
12 mu_1       0.3      0.977       0.923  0.00563            3.73
13 mu_1       0.4      1.05        1.03   0.0618             2.80
14 mu_1       0.5      1.05        1.03   0.266              2.83
15 mu_1       0.6      1.01        1.02   0.202              1.63
16 mu_1       0.7      0.985       0.967  0.235              1.77
17 mu_1       0.8      0.960       0.961  0.0415             1.92
18 mu_1       0.9      0.883       0.788  0.000452           3.26
19 mu_0       0.1      2.02        0.0208 0.00000000662    107.  
20 mu_0       0.2      1.18        0.208  0.0000158         26.0 
21 mu_0       0.3      0.998       0.634  0.00114            5.81
22 mu_0       0.4      1.02        0.904  0.0185             3.85
23 mu_0       0.5      1.06        1.02   0.129              2.98
24 mu_0       0.6      1.04        1.05   0.258              2.49
25 mu_0       0.7      1.01        1.00   0.188              1.63
26 mu_0       0.8      0.999       0.986  0.128              1.85
27 mu_0       0.9      0.971       0.912  0.00305            3.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.41     0.0000354  6.70e-19     97.9 
 2 mu         0.2      2.19     0.00573    7.02e-13     75.3 
 3 mu         0.3      1.34     0.0752     2.34e- 9     27.1 
 4 mu         0.4      0.961    0.360      7.36e- 7      6.50
 5 mu         0.5      0.912    0.757      6.39e- 5      2.92
 6 mu         0.6      0.969    0.837      2.45e- 3      3.42
 7 mu         0.7      1.03     1.09       6.04e- 5      3.63
 8 mu         0.8      1.10     0.893      1.37e- 7      4.04
 9 mu         0.9      1.17     0.251      2.98e-12      8.14
10 mu_1       0.1      2.85     0.000239   0           122.  
11 mu_1       0.2      1.66     0.0152     0            47.1 
12 mu_1       0.3      1.06     0.156      0            12.0 
13 mu_1       0.4      0.915    0.453      0             4.03
14 mu_1       0.5      0.939    0.840      0             3.24
15 mu_1       0.6      0.994    0.877      0             3.42
16 mu_1       0.7      1.04     1.14       0             3.75
17 mu_1       0.8      1.11     0.795      0             4.25
18 mu_1       0.9      1.17     0.180      0             9.05
19 mu_0       0.1      2.37     0.0000146  0            95.2 
20 mu_0       0.2      2.32     0.00223    0            82.4 
21 mu_0       0.3      1.46     0.0390     0            33.6 
22 mu_0       0.4      0.991    0.214      0             9.38
23 mu_0       0.5      0.885    0.522      0             3.44
24 mu_0       0.6      0.932    0.806      0             3.42
25 mu_0       0.7      0.998    0.852      0             3.37
26 mu_0       0.8      1.08     1.13       0             3.77
27 mu_0       0.9      1.19     0.427      0             5.72
[1] "Total run time was 43.755 seconds"
