
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1239"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  1  6  6  8  4  7  6  9  9  7  8  8  4  7  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03133 0.33998 0.61735 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
713 526 
[1] "treatment indicator table: "

  0   1 
469 770 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 96.414 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.509 0.177 
 2 mu         0.1   0.2 0.733 0.237 
 3 mu         0.1   0.3 0.771 0.263 
 4 mu         0.1   0.4 0.773 0.268 
 5 mu         0.1   0.5 0.854 0.290 
 6 mu         0.2   0.1 0.445 0.0967
 7 mu         0.2   0.2 0.618 0.126 
 8 mu         0.2   0.3 0.663 0.138 
 9 mu         0.2   0.4 0.676 0.139 
10 mu         0.2   0.5 0.747 0.159 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.13        0.0642  4.25e-12     26.5 
 2 mu         0.2      1.08        0.390   1.00e- 7     13.0 
 3 mu         0.3      1.04        0.932   3.02e- 5      5.82
 4 mu         0.4      1.05        0.960   1.48e- 3      2.64
 5 mu         0.5      1.03        1.01    2.55e- 2      2.18
 6 mu         0.6      0.987       1.02    2.16e- 1      1.59
 7 mu         0.7      0.961       0.939   1.66e- 1      1.67
 8 mu         0.8      0.979       0.923   4.00e- 2      2.96
 9 mu         0.9      0.991       0.644   3.08e- 3      3.65
10 mu_1       0.1      1.14        0.228   3.55e-11     20.4 
11 mu_1       0.2      1.01        0.765   4.18e- 7      5.19
12 mu_1       0.3      1.03        1.00    8.43e- 5      2.74
13 mu_1       0.4      1.05        0.989   3.10e- 3      2.74
14 mu_1       0.5      1.02        1.01    4.30e- 2      1.87
15 mu_1       0.6      0.969       0.989   2.30e- 1      1.56
16 mu_1       0.7      0.954       0.967   8.46e- 2      1.77
17 mu_1       0.8      0.979       0.897   1.95e- 2      3.11
18 mu_1       0.9      0.990       0.553   1.42e- 3      4.04
19 mu_0       0.1      1.13        0.0461  7.83e-13     27.2 
20 mu_0       0.2      1.09        0.310   2.06e- 8     14.9 
21 mu_0       0.3      1.04        0.803   7.03e- 6      7.73
22 mu_0       0.4      1.05        0.987   3.97e- 4      3.84
23 mu_0       0.5      1.05        0.991   8.10e- 3      2.49
24 mu_0       0.6      1.01        0.991   8.39e- 2      1.72
25 mu_0       0.7      0.977       1.00    1.69e- 1      1.62
26 mu_0       0.8      0.980       0.944   1.21e- 1      2.35
27 mu_0       0.9      1.00        0.950   1.39e- 2      3.96
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.756     0.000357  1.05e-16     35.9 
 2 mu         0.2      1.05      0.0243    2.76e-11     44.3 
 3 mu         0.3      1.09      0.163     4.08e- 8     26.2 
 4 mu         0.4      1.11      0.622     7.24e- 6      9.97
 5 mu         0.5      1.09      1.07      4.02e- 4      4.36
 6 mu         0.6      1.03      1.05      1.07e- 2      2.44
 7 mu         0.7      0.975     0.923     2.06e- 3      3.02
 8 mu         0.8      0.985     0.484     3.10e- 5      4.43
 9 mu         0.9      1.46      0.0488    1.92e- 8     23.0 
10 mu_1       0.1      1.27      0.00192   1.05e-15     59.9 
11 mu_1       0.2      1.13      0.0806    1.38e-10     36.9 
12 mu_1       0.3      1.09      0.334     1.36e- 7     14.6 
13 mu_1       0.4      1.10      0.744     1.81e- 5      6.33
14 mu_1       0.5      1.06      1.08      8.04e- 4      3.67
15 mu_1       0.6      1.00      0.937     9.17e- 3      2.51
16 mu_1       0.7      0.944     0.895     4.52e- 4      3.05
17 mu_1       0.8      0.992     0.384     5.97e- 6      5.54
18 mu_1       0.9      1.52      0.0343    3.28e- 9     25.6 
19 mu_0       0.1      0.699     0.000184  0            33.3 
20 mu_0       0.2      1.03      0.00858   0            46.1 
21 mu_0       0.3      1.09      0.0859    0            31.2 
22 mu_0       0.4      1.12      0.385     0            13.9 
23 mu_0       0.5      1.11      0.916     0             5.08
24 mu_0       0.6      1.09      1.14      0             2.77
25 mu_0       0.7      1.05      1.08      0             2.96
26 mu_0       0.8      0.959     0.821     0             3.43
27 mu_0       0.9      0.942     0.183     0             6.97
[1] "Total run time was 100.465 seconds"
