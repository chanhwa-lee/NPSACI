
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1247"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  3  8  5  7  4  9  6 12  6  7  7  6  4  2  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04631 0.36135 0.60081 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
782 465 
[1] "treatment indicator table: "

  0   1 
441 806 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 128.741 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.0929 0.0293
 2 mu         0.1   0.2 0.199  0.0594
 3 mu         0.1   0.3 0.230  0.0702
 4 mu         0.1   0.4 0.212  0.0596
 5 mu         0.1   0.5 0.259  0.0788
 6 mu         0.2   0.1 0.142  0.0250
 7 mu         0.2   0.2 0.252  0.0470
 8 mu         0.2   0.3 0.289  0.0612
 9 mu         0.2   0.4 0.283  0.0503
10 mu         0.2   0.5 0.334  0.0677
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.371      0.00667 0.00000000631      9.01
 2 mu         0.2      0.537      0.106   0.0000158          3.99
 3 mu         0.3      0.714      0.375   0.00102            4.49
 4 mu         0.4      0.867      0.717   0.0115             4.85
 5 mu         0.5      0.975      0.968   0.0704             3.42
 6 mu         0.6      1.02       0.950   0.287              2.28
 7 mu         0.7      1.01       0.996   0.437              1.91
 8 mu         0.8      1.00       0.976   0.0937             3.09
 9 mu         0.9      0.982      0.707   0.00134            4.89
10 mu_1       0.1      0.373      0.0274  0.0000000427       4.00
11 mu_1       0.2      0.617      0.184   0.0000544          4.10
12 mu_1       0.3      0.793      0.508   0.00268            5.45
13 mu_1       0.4      0.924      0.833   0.0244             4.44
14 mu_1       0.5      1.00       0.950   0.121              2.87
15 mu_1       0.6      1.02       0.985   0.416              2.28
16 mu_1       0.7      1.01       1.04    0.341              2.01
17 mu_1       0.8      1.01       0.951   0.0687             3.40
18 mu_1       0.9      0.979      0.631   0.000889           4.97
19 mu_0       0.1      0.370      0.00400 0.00000000226     10.0 
20 mu_0       0.2      0.517      0.0764  0.00000621         4.96
21 mu_0       0.3      0.681      0.297   0.000228           4.08
22 mu_0       0.4      0.829      0.623   0.00283            5.12
23 mu_0       0.5      0.947      0.908   0.0196             4.24
24 mu_0       0.6      1.01       0.976   0.0933             2.59
25 mu_0       0.7      1.00       0.993   0.342              2.14
26 mu_0       0.8      0.986      0.986   0.194              2.39
27 mu_0       0.9      1.01       0.856   0.00540            4.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value  max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>      <dbl>
 1 mu         0.1  65199.      0.0000341   5.67e-14 6519696.  
 2 mu         0.2  13921.      0.00480     3.03e- 9 1391103.  
 3 mu         0.3   1666.      0.0753      8.84e- 7  165045.  
 4 mu         0.4    130.      0.383       4.96e- 5   11764.  
 5 mu         0.5     10.0     0.845       1.13e- 3     460.  
 6 mu         0.6      2.05    1.03        1.45e- 2      89.1 
 7 mu         0.7      1.12    0.987       2.43e- 2       8.13
 8 mu         0.8      1.23    0.662       2.02e- 5      15.6 
 9 mu         0.9      1.76    0.119       4.34e-11      32.0 
10 mu_1       0.1  32603.      0.000240    4.82e-13 3259848.  
11 mu_1       0.2   3492.      0.0142      1.51e- 8  347776.  
12 mu_1       0.3    291.      0.155       2.95e- 6   27508.  
13 mu_1       0.4     24.2     0.620       1.24e- 4    1470.  
14 mu_1       0.5      4.24    1.03        2.26e- 3     261.  
15 mu_1       0.6      1.53    0.994       2.41e- 2      46.4 
16 mu_1       0.7      1.09    0.861       2.80e- 3       6.21
17 mu_1       0.8      1.29    0.541       1.27e- 6      18.0 
18 mu_1       0.9      1.83    0.0793      2.41e-12      34.7 
19 mu_0       0.1  68820.      0.00000702  0        6881901.  
20 mu_0       0.2  16528.      0.00197     0        1651935.  
21 mu_0       0.3   2255.      0.0366      0         223990.  
22 mu_0       0.4    200.      0.239       0          18626.  
23 mu_0       0.5     15.8     0.668       0            875.  
24 mu_0       0.6      2.84    0.992       0            153.  
25 mu_0       0.7      1.18    0.954       0             18.6 
26 mu_0       0.8      0.977   0.822       0              5.99
27 mu_0       0.9      1.19    0.165       0             24.6 
[1] "Total run time was 134.212 seconds"
