
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1303"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8  7  6  4  4  5  3  7  8  7  3  7 11  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03612 0.36272 0.61065 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
769 534 
[1] "treatment indicator table: "

  0   1 
483 820 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.748 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.291 0.111 
 2 mu         0.1   0.2 0.361 0.148 
 3 mu         0.1   0.3 0.406 0.160 
 4 mu         0.1   0.4 0.412 0.162 
 5 mu         0.1   0.5 0.456 0.162 
 6 mu         0.2   0.1 0.356 0.0849
 7 mu         0.2   0.2 0.447 0.114 
 8 mu         0.2   0.3 0.498 0.125 
 9 mu         0.2   0.4 0.516 0.124 
10 mu         0.2   0.5 0.564 0.122 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.610      0.0107  0.00000000646     14.9 
 2 mu         0.2      0.844      0.180   0.0000155         11.6 
 3 mu         0.3      0.967      0.641   0.00109            6.77
 4 mu         0.4      0.999      0.930   0.0168             3.27
 5 mu         0.5      0.989      0.966   0.106              2.34
 6 mu         0.6      0.973      0.956   0.354              1.68
 7 mu         0.7      0.962      0.971   0.263              2.00
 8 mu         0.8      0.949      0.953   0.0291             2.60
 9 mu         0.9      0.964      0.762   0.000257           6.34
10 mu_1       0.1      0.781      0.0406  0.0000000458      16.0 
11 mu_1       0.2      0.935      0.366   0.0000553          7.87
12 mu_1       0.3      0.985      0.852   0.00258            3.69
13 mu_1       0.4      0.993      0.946   0.0299             2.79
14 mu_1       0.5      0.984      0.957   0.153              2.04
15 mu_1       0.6      0.975      0.962   0.359              1.59
16 mu_1       0.7      0.966      0.968   0.217              2.10
17 mu_1       0.8      0.954      0.926   0.0189             3.06
18 mu_1       0.9      0.972      0.710   0.000154           6.89
19 mu_0       0.1      0.591      0.00627 0.00000000209     16.5 
20 mu_0       0.2      0.822      0.133   0.00000560        12.6 
21 mu_0       0.3      0.960      0.525   0.000448           8.10
22 mu_0       0.4      1.00       0.928   0.00625            4.30
23 mu_0       0.5      0.995      0.880   0.0388             2.87
24 mu_0       0.6      0.969      0.955   0.160              1.96
25 mu_0       0.7      0.951      0.940   0.356              1.76
26 mu_0       0.8      0.928      0.956   0.0701             2.33
27 mu_0       0.9      0.891      0.915   0.00118            2.26
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.512    0.000125   3.58e-17     13.6 
 2 mu         0.2      0.988    0.00845    9.38e-12     18.6 
 3 mu         0.3      1.25     0.0947     1.39e- 8     21.7 
 4 mu         0.4      1.22     0.414      2.46e- 6     12.6 
 5 mu         0.5      1.11     0.902      1.37e- 4      4.97
 6 mu         0.6      1.02     0.971      3.63e- 3      2.91
 7 mu         0.7      1.00     1.01       5.83e- 3      4.48
 8 mu         0.8      1.12     0.656      3.89e- 5      7.71
 9 mu         0.9      1.81     0.115      4.28e- 9     53.7 
10 mu_1       0.1      0.925    0.000712   3.58e-16     20.0 
11 mu_1       0.2      1.20     0.0304     4.69e-11     24.8 
12 mu_1       0.3      1.27     0.206      4.62e- 8     19.3 
13 mu_1       0.4      1.18     0.666      6.15e- 6      8.40
14 mu_1       0.5      1.07     0.995      2.73e- 4      4.09
15 mu_1       0.6      1.01     1.01       6.06e- 3      3.39
16 mu_1       0.7      1.01     0.999      2.19e- 3      4.48
17 mu_1       0.8      1.14     0.529      1.28e- 5      9.64
18 mu_1       0.9      1.89     0.0757     1.25e- 9     59.7 
19 mu_0       0.1      0.467    0.0000480  0            13.3 
20 mu_0       0.2      0.934    0.00248    0            17.1 
21 mu_0       0.3      1.23     0.0494     0            22.8 
22 mu_0       0.4      1.25     0.264      0            15.4 
23 mu_0       0.5      1.14     0.655      0             6.07
24 mu_0       0.6      1.03     1.01       0             3.35
25 mu_0       0.7      0.989    0.894      0             4.48
26 mu_0       0.8      1.01     0.936      0             3.83
27 mu_0       0.9      1.10     0.250      0             9.93
[1] "Total run time was 90.262 seconds"
