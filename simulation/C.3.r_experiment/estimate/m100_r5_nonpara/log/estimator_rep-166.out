
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1255"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  3  1 12  8  4  9  8  9  8  7  8  8  2  7  2 
[1] "observed time summary: "
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.000000 0.008303 0.259987 0.569034 0.940551 5.331931 
[1] "event indicator table: "

  0   1 
727 528 
[1] "treatment indicator table: "

  0   1 
458 797 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 101.083 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.387 0.116
 2 mu         0.1   0.2 0.392 0.131
 3 mu         0.1   0.3 0.403 0.147
 4 mu         0.1   0.4 0.473 0.165
 5 mu         0.1   0.5 0.541 0.187
 6 mu         0.2   0.1 0.459 0.103
 7 mu         0.2   0.2 0.507 0.125
 8 mu         0.2   0.3 0.550 0.145
 9 mu         0.2   0.4 0.613 0.160
10 mu         0.2   0.5 0.696 0.185
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.816      0.00943 0.0000000185      18.8 
 2 mu         0.2      1.16       0.125   0.0000434         18.3 
 3 mu         0.3      1.16       0.542   0.00304           13.1 
 4 mu         0.4      1.09       0.875   0.0481             6.80
 5 mu         0.5      1.07       1.03    0.284              3.15
 6 mu         0.6      1.06       1.07    0.450              2.22
 7 mu         0.7      1.00       0.976   0.326              2.57
 8 mu         0.8      0.931      0.892   0.0806             3.31
 9 mu         0.9      0.883      0.599   0.00192            4.92
10 mu_1       0.1      1.28       0.0425  0.000000131       25.4 
11 mu_1       0.2      1.24       0.285   0.000154          16.8 
12 mu_1       0.3      1.11       0.770   0.00722           10.7 
13 mu_1       0.4      1.06       0.914   0.0865             4.60
14 mu_1       0.5      1.06       1.07    0.342              2.07
15 mu_1       0.6      1.05       1.06    0.471              2.23
16 mu_1       0.7      0.988      0.981   0.192              2.82
17 mu_1       0.8      0.922      0.853   0.0446             3.28
18 mu_1       0.9      0.878      0.557   0.00127            5.28
19 mu_0       0.1      0.765      0.00587 0.00000000602     18.1 
20 mu_0       0.2      1.13       0.0821  0.0000158         19.4 
21 mu_0       0.3      1.18       0.418   0.00124           14.7 
22 mu_0       0.4      1.11       0.795   0.0224             9.14
23 mu_0       0.5      1.08       0.978   0.173              4.82
24 mu_0       0.6      1.08       1.07    0.417              2.20
25 mu_0       0.7      1.04       1.03    0.369              2.12
26 mu_0       0.8      0.967      0.965   0.187              3.45
27 mu_0       0.9      0.922      0.878   0.00778            3.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.22    0.0000618  1.60e-15     77.3 
 2 mu         0.2       3.39    0.00529    3.72e-10    238.  
 3 mu         0.3       3.06    0.0748     4.82e- 7    186.  
 4 mu         0.4       1.84    0.359      7.32e- 5     67.8 
 5 mu         0.5       1.23    0.881      3.39e- 3     12.9 
 6 mu         0.6       1.12    1.00       7.21e- 2      4.07
 7 mu         0.7       1.21    1.18       2.73e- 3      3.82
 8 mu         0.8       1.39    0.837      1.22e- 5      7.25
 9 mu         0.9       1.66    0.154      6.69e-10     26.7 
10 mu_1       0.1       2.70    0.000388   1.51e-14    172.  
11 mu_1       0.2       3.91    0.0195     1.76e- 9    264.  
12 mu_1       0.3       2.59    0.160      1.52e- 6    137.  
13 mu_1       0.4       1.49    0.580      1.73e- 4     37.7 
14 mu_1       0.5       1.14    0.942      6.42e- 3      6.64
15 mu_1       0.6       1.12    1.09       3.94e- 2      3.19
16 mu_1       0.7       1.25    1.15       9.75e- 4      4.09
17 mu_1       0.8       1.44    0.705      3.80e- 6      8.11
18 mu_1       0.9       1.71    0.117      1.86e-10     28.1 
19 mu_0       0.1       1.05    0.0000165  0            66.8 
20 mu_0       0.2       3.26    0.00208    0           231.  
21 mu_0       0.3       3.27    0.0384     0           206.  
22 mu_0       0.4       2.07    0.199      0            87.9 
23 mu_0       0.5       1.33    0.578      0            20.0 
24 mu_0       0.6       1.11    0.890      0             5.39
25 mu_0       0.7       1.12    1.08       0             3.18
26 mu_0       0.8       1.19    1.07       0             5.12
27 mu_0       0.9       1.18    0.328      0            14.1 
[1] "Total run time was 107.523 seconds"
