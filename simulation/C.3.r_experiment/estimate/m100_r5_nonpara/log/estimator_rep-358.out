
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1276"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  6  9  2  5  5 13  7  6  6  5  8  4  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0312  0.3211  0.5816  0.9735  6.0000 
[1] "event indicator table: "

  0   1 
743 533 
[1] "treatment indicator table: "

  0   1 
512 764 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 678
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.301 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.417 0.141 
 2 mu         0.1   0.2 0.577 0.169 
 3 mu         0.1   0.3 0.629 0.184 
 4 mu         0.1   0.4 0.690 0.191 
 5 mu         0.1   0.5 0.714 0.202 
 6 mu         0.2   0.1 0.349 0.0806
 7 mu         0.2   0.2 0.497 0.0933
 8 mu         0.2   0.3 0.555 0.0977
 9 mu         0.2   0.4 0.609 0.101 
10 mu         0.2   0.5 0.631 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.985       0.0373 0.0000000918     18.4 
 2 mu         0.2      0.973       0.324  0.000108          8.84
 3 mu         0.3      1.03        0.818  0.00500           6.04
 4 mu         0.4      1.03        0.974  0.0588            3.34
 5 mu         0.5      1.01        0.983  0.310             2.35
 6 mu         0.6      0.996       0.974  0.437             1.69
 7 mu         0.7      0.987       0.953  0.443             1.82
 8 mu         0.8      1.00        0.863  0.0553            2.66
 9 mu         0.9      1.01        0.486  0.000613          5.85
10 mu_1       0.1      0.768       0.143  0.000000633      15.2 
11 mu_1       0.2      0.973       0.620  0.000372          7.96
12 mu_1       0.3      1.04        0.954  0.0116            4.79
13 mu_1       0.4      1.02        0.993  0.103             3.20
14 mu_1       0.5      0.993       0.949  0.410             1.93
15 mu_1       0.6      0.984       0.975  0.385             1.59
16 mu_1       0.7      0.985       0.978  0.332             1.98
17 mu_1       0.8      1.01        0.845  0.0364            2.80
18 mu_1       0.9      1.02        0.430  0.000360          6.32
19 mu_0       0.1      1.01        0.0262 0.0000000317     20.4 
20 mu_0       0.2      0.973       0.248  0.0000415         9.75
21 mu_0       0.3      1.03        0.665  0.00218           6.59
22 mu_0       0.4      1.05        0.939  0.0293            3.42
23 mu_0       0.5      1.03        0.975  0.179             2.86
24 mu_0       0.6      1.02        0.976  0.397             2.02
25 mu_0       0.7      0.992       0.979  0.275             1.68
26 mu_0       0.8      0.969       0.909  0.131             2.34
27 mu_0       0.9      0.972       0.753  0.00289           3.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.560     0.000219  1.47e-18     18.0 
 2 mu         0.2      1.28      0.0183    1.54e-12     31.2 
 3 mu         0.3      1.36      0.131     5.12e- 9     18.6 
 4 mu         0.4      1.19      0.476     1.62e- 6      9.02
 5 mu         0.5      1.05      0.939     1.40e- 4      3.56
 6 mu         0.6      0.981     1.08      5.37e- 3      2.06
 7 mu         0.7      0.960     0.991     5.71e- 4      2.35
 8 mu         0.8      1.14      0.462     2.92e- 6     17.4 
 9 mu         0.9      2.16      0.0479    2.54e-10    102.  
10 mu_1       0.1      1.18      0.00118   1.47e-17     33.8 
11 mu_1       0.2      1.54      0.0606    7.70e-12     29.2 
12 mu_1       0.3      1.34      0.298     1.71e- 8     12.7 
13 mu_1       0.4      1.13      0.736     4.04e- 6      6.44
14 mu_1       0.5      1.03      1.06      2.80e- 4      2.68
15 mu_1       0.6      0.969     1.07      5.93e- 3      2.17
16 mu_1       0.7      0.963     0.930     1.44e- 4      3.35
17 mu_1       0.8      1.19      0.359     6.44e- 7     21.8 
18 mu_1       0.9      2.28      0.0304    4.97e-11    113.  
19 mu_0       0.1      0.491     0.000114  0            16.3 
20 mu_0       0.2      1.22      0.00724   0            31.7 
21 mu_0       0.3      1.38      0.0639    0            21.5 
22 mu_0       0.4      1.22      0.281     0            10.7 
23 mu_0       0.5      1.08      0.771     0             5.08
24 mu_0       0.6      1.00      1.07      0             2.39
25 mu_0       0.7      0.952     0.959     0             2.17
26 mu_0       0.8      0.962     0.726     0             4.13
27 mu_0       0.9      1.01      0.0777    0             6.88
[1] "Total run time was 64.154 seconds"
