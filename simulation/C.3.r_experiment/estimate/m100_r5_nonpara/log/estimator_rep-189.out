
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1345"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  3  9  2  4  3 10  6  4 11  6  9  7  7  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03682 0.31220 0.58895 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
800 545 
[1] "treatment indicator table: "

  0   1 
469 876 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 682
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 102.469 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.419 0.158 
 2 mu         0.1   0.2 0.601 0.214 
 3 mu         0.1   0.3 0.689 0.235 
 4 mu         0.1   0.4 0.711 0.243 
 5 mu         0.1   0.5 0.733 0.247 
 6 mu         0.2   0.1 0.347 0.0822
 7 mu         0.2   0.2 0.488 0.110 
 8 mu         0.2   0.3 0.586 0.121 
 9 mu         0.2   0.4 0.618 0.125 
10 mu         0.2   0.5 0.648 0.130 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.18       0.0142  0.00000000935     29.4 
 2 mu         0.2      1.12       0.206   0.0000129         14.3 
 3 mu         0.3      1.05       0.568   0.000717           5.19
 4 mu         0.4      1.02       0.883   0.0103             2.87
 5 mu         0.5      1.01       0.961   0.0674             2.24
 6 mu         0.6      1.01       1.03    0.258              2.13
 7 mu         0.7      1.02       1.00    0.383              1.94
 8 mu         0.8      1.02       1.03    0.207              2.38
 9 mu         0.9      0.948      0.768   0.0149             3.70
10 mu_1       0.1      1.20       0.0653  0.0000000690      22.6 
11 mu_1       0.2      1.03       0.367   0.0000479          6.95
12 mu_1       0.3      1.01       0.754   0.00179            3.81
13 mu_1       0.4      1.00       0.956   0.0194             2.49
14 mu_1       0.5      1.00       0.980   0.103              2.20
15 mu_1       0.6      1.01       1.03    0.227              2.10
16 mu_1       0.7      1.02       0.991   0.389              1.99
17 mu_1       0.8      1.01       1.01    0.164              2.59
18 mu_1       0.9      0.938      0.731   0.0108             3.71
19 mu_0       0.1      1.18       0.00875 0.00000000273     30.2 
20 mu_0       0.2      1.14       0.150   0.00000416        16.5 
21 mu_0       0.3      1.06       0.463   0.000259           6.19
22 mu_0       0.4      1.03       0.806   0.00421            3.26
23 mu_0       0.5      1.01       0.941   0.0318             2.38
24 mu_0       0.6      1.01       1.00    0.142              2.18
25 mu_0       0.7      1.02       0.993   0.194              2.04
26 mu_0       0.8      1.04       1.02    0.247              2.06
27 mu_0       0.9      1.04       0.965   0.0521             3.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.45    0.0000248   7.75e-19     64.2 
 2 mu         0.2      1.64    0.00396     8.12e-13     45.3 
 3 mu         0.3      1.40    0.0463      2.70e- 9     20.6 
 4 mu         0.4      1.20    0.222       8.52e- 7     10.0 
 5 mu         0.5      1.11    0.642       7.39e- 5      6.43
 6 mu         0.6      1.07    1.01        2.83e- 3      2.92
 7 mu         0.7      1.07    1.17        4.23e- 4      2.87
 8 mu         0.8      1.05    0.910       1.10e- 6      4.04
 9 mu         0.9      0.982   0.153       2.69e-11      9.42
10 mu_1       0.1      1.35    0.000115    0            55.3 
11 mu_1       0.2      1.42    0.0105      0            37.8 
12 mu_1       0.3      1.23    0.105       0            12.6 
13 mu_1       0.4      1.13    0.372       0             9.75
14 mu_1       0.5      1.07    0.810       0             5.00
15 mu_1       0.6      1.05    0.972       0             2.82
16 mu_1       0.7      1.06    1.13        0             2.74
17 mu_1       0.8      1.03    0.904       0             4.37
18 mu_1       0.9      0.981   0.117       0            10.5 
19 mu_0       0.1      1.46    0.00000709  0            71.3 
20 mu_0       0.2      1.70    0.00132     0            47.2 
21 mu_0       0.3      1.48    0.0150      0            24.6 
22 mu_0       0.4      1.25    0.111       0            10.2 
23 mu_0       0.5      1.15    0.488       0             7.86
24 mu_0       0.6      1.10    0.932       0             3.90
25 mu_0       0.7      1.09    1.12        0             3.19
26 mu_0       0.8      1.11    1.15        0             3.11
27 mu_0       0.9      0.995   0.355       0             6.22
[1] "Total run time was 108.405 seconds"
