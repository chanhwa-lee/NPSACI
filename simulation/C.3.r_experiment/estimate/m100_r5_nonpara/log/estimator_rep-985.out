
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1366"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  3  4  5  3  4 10  2  7  4  7  9 10  7 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02263 0.35168 0.59062 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
786 580 
[1] "treatment indicator table: "

  0   1 
503 863 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 702
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 44.524 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.195 0.111 
 2 mu         0.1   0.2 0.338 0.102 
 3 mu         0.1   0.3 0.364 0.0915
 4 mu         0.1   0.4 0.345 0.0969
 5 mu         0.1   0.5 0.362 0.111 
 6 mu         0.2   0.1 0.284 0.0732
 7 mu         0.2   0.2 0.402 0.0740
 8 mu         0.2   0.3 0.441 0.0731
 9 mu         0.2   0.4 0.448 0.0744
10 mu         0.2   0.5 0.486 0.0851
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.631       0.0394 0.0000000154       9.11
 2 mu         0.2      0.814       0.321  0.0000320          6.00
 3 mu         0.3      0.891       0.778  0.00198            3.96
 4 mu         0.4      0.982       0.929  0.0280             2.99
 5 mu         0.5      1.05        1.02   0.173              3.04
 6 mu         0.6      1.03        1.04   0.330              2.18
 7 mu         0.7      0.984       0.944  0.425              1.86
 8 mu         0.8      0.998       0.961  0.100              2.89
 9 mu         0.9      1.05        0.791  0.00203            5.20
10 mu_1       0.1      0.908       0.154  0.000000103        8.54
11 mu_1       0.2      0.901       0.626  0.000107           6.04
12 mu_1       0.3      0.946       0.893  0.00446            3.32
13 mu_1       0.4      1.02        0.995  0.0483             2.85
14 mu_1       0.5      1.06        1.03   0.246              3.01
15 mu_1       0.6      1.02        1.08   0.338              1.94
16 mu_1       0.7      0.980       0.950  0.404              1.98
17 mu_1       0.8      1.00        0.933  0.0725             3.03
18 mu_1       0.9      1.06        0.733  0.00134            5.77
19 mu_0       0.1      0.600       0.0250 0.00000000570      9.45
20 mu_0       0.2      0.792       0.249  0.0000132          5.99
21 mu_0       0.3      0.867       0.679  0.000914           4.29
22 mu_0       0.4      0.954       0.881  0.0145             3.38
23 mu_0       0.5      1.03        0.987  0.100              3.07
24 mu_0       0.6      1.04        1.07   0.282              2.53
25 mu_0       0.7      0.996       1.02   0.307              1.82
26 mu_0       0.8      0.984       0.913  0.200              2.33
27 mu_0       0.9      1.02        0.870  0.00822            3.92
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.330    0.0000615  8.65e-17     17.0 
 2 mu         0.2      0.629    0.0113     2.27e-11     14.9 
 3 mu         0.3      0.845    0.151      3.35e- 8      8.77
 4 mu         0.4      1.00     0.563      5.94e- 6      7.10
 5 mu         0.5      1.04     0.867      3.30e- 4      5.47
 6 mu         0.6      0.957    0.879      8.78e- 3      3.01
 7 mu         0.7      0.949    0.928      3.30e- 3      2.48
 8 mu         0.8      1.11     0.659      2.89e- 5      6.27
 9 mu         0.9      1.34     0.0925     5.66e- 9     21.2 
10 mu_1       0.1      0.602    0.000339   8.65e-16     21.2 
11 mu_1       0.2      0.779    0.0326     1.13e-10     11.3 
12 mu_1       0.3      0.937    0.358      1.12e- 7      6.72
13 mu_1       0.4      1.06     0.835      1.49e- 5      7.31
14 mu_1       0.5      1.04     0.949      6.60e- 4      4.50
15 mu_1       0.6      0.942    0.900      1.46e- 2      2.91
16 mu_1       0.7      0.958    0.959      1.11e- 3      2.72
17 mu_1       0.8      1.12     0.530      8.51e- 6      6.97
18 mu_1       0.9      1.36     0.0669     1.48e- 9     23.5 
19 mu_0       0.1      0.300    0.0000243  0            16.5 
20 mu_0       0.2      0.592    0.00628    0            16.3 
21 mu_0       0.3      0.805    0.0782     0            11.0 
22 mu_0       0.4      0.968    0.351      0             6.96
23 mu_0       0.5      1.04     0.757      0             6.43
24 mu_0       0.6      0.978    0.852      0             3.32
25 mu_0       0.7      0.929    0.850      0             2.57
26 mu_0       0.8      1.06     0.923      0             3.48
27 mu_0       0.9      1.22     0.221      0            11.5 
[1] "Total run time was 47.737 seconds"
