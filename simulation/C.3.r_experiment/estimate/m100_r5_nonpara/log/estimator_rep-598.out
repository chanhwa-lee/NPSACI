
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1289"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  7  5  6  3  9  6  3  7  8 10  6  3 10  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02868 0.33559 0.60506 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
740 549 
[1] "treatment indicator table: "

  0   1 
484 805 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 45.364 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.231 0.140
 2 mu         0.1   0.2 0.384 0.169
 3 mu         0.1   0.3 0.517 0.215
 4 mu         0.1   0.4 0.518 0.223
 5 mu         0.1   0.5 0.512 0.230
 6 mu         0.2   0.1 0.354 0.159
 7 mu         0.2   0.2 0.537 0.194
 8 mu         0.2   0.3 0.697 0.246
 9 mu         0.2   0.4 0.730 0.265
10 mu         0.2   0.5 0.742 0.276
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.680       0.0171 0.000000262      38.1 
 2 mu         0.2      1.13        0.211  0.000163         46.9 
 3 mu         0.3      1.20        0.589  0.00551          27.8 
 4 mu         0.4      1.13        0.895  0.0548           10.6 
 5 mu         0.5      1.06        1.02   0.270             2.85
 6 mu         0.6      1.01        0.988  0.425             2.00
 7 mu         0.7      0.988       0.969  0.217             2.41
 8 mu         0.8      1.07        0.828  0.0287            9.77
 9 mu         0.9      1.50        0.324  0.000339         37.6 
10 mu_1       0.1      1.21        0.0801 0.00000176       63.5 
11 mu_1       0.2      1.26        0.442  0.000553         39.1 
12 mu_1       0.3      1.17        0.810  0.0126           15.4 
13 mu_1       0.4      1.08        0.956  0.0964            4.47
14 mu_1       0.5      1.03        1.04   0.354             2.21
15 mu_1       0.6      0.996       0.955  0.341             1.86
16 mu_1       0.7      0.989       0.958  0.168             3.11
17 mu_1       0.8      1.10        0.768  0.0201           11.7 
18 mu_1       0.9      1.55        0.277  0.000215         41.1 
19 mu_0       0.1      0.620       0.0111 0.0000000958     35.3 
20 mu_0       0.2      1.10        0.159  0.0000656        48.9 
21 mu_0       0.3      1.22        0.489  0.00245          33.1 
22 mu_0       0.4      1.16        0.810  0.0271           14.7 
23 mu_0       0.5      1.08        0.980  0.151             4.52
24 mu_0       0.6      1.03        1.04   0.405             2.20
25 mu_0       0.7      0.984       0.963  0.260             1.66
26 mu_0       0.8      0.953       0.965  0.0628            2.55
27 mu_0       0.9      1.05        0.632  0.00145          15.5 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     305.      0.0000839  9.23e-15  30177.  
 2 mu         0.2     167.      0.0113     2.15e- 9  16299.  
 3 mu         0.3      41.0     0.0872     2.78e- 6   3789.  
 4 mu         0.4       6.78    0.329      4.23e- 4    490.  
 5 mu         0.5       1.56    0.667      1.63e- 2     34.5 
 6 mu         0.6       1.06    0.967      1.45e- 1      3.37
 7 mu         0.7       1.28    0.928      1.15e- 2      9.21
 8 mu         0.8       2.30    0.528      1.52e- 5     36.9 
 9 mu         0.9       5.11    0.0770     1.47e-10    154.  
10 mu_1       0.1     321.      0.000538   8.74e-14  31766.  
11 mu_1       0.2      89.2     0.0342     1.02e- 8   8578.  
12 mu_1       0.3      15.8     0.191      8.78e- 6   1329.  
13 mu_1       0.4       2.82    0.525      1.00e- 3    129.  
14 mu_1       0.5       1.19    0.864      3.25e- 2      7.27
15 mu_1       0.6       1.06    0.942      8.41e- 2      3.16
16 mu_1       0.7       1.38    0.950      1.72e- 3     11.5 
17 mu_1       0.8       2.53    0.446      2.00e- 6     43.7 
18 mu_1       0.9       5.38    0.0580     1.71e-11    169.  
19 mu_0       0.1     303.      0.0000390  0         30001.  
20 mu_0       0.2     186.      0.00479    0         18229.  
21 mu_0       0.3      51.8     0.0428     0          4842.  
22 mu_0       0.4       9.42    0.200      0           731.  
23 mu_0       0.5       1.94    0.532      0            61.8 
24 mu_0       0.6       1.07    0.848      0             3.70
25 mu_0       0.7       1.03    0.953      0             3.84
26 mu_0       0.8       1.39    0.734      0            16.6 
27 mu_0       0.9       2.63    0.122      0            81.0 
[1] "Total run time was 48.481 seconds"
