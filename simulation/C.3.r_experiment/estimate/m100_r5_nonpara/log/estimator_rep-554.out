
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1200"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  6 10  9  9  8  1  6  8  9  3  4  6  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02335 0.30164 0.57194 0.93254 5.00000 
[1] "event indicator table: "

  0   1 
677 523 
[1] "treatment indicator table: "

  0   1 
463 737 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 576
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.551 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.387 0.156 
 2 mu         0.1   0.2 0.551 0.179 
 3 mu         0.1   0.3 0.613 0.201 
 4 mu         0.1   0.4 0.676 0.219 
 5 mu         0.1   0.5 0.695 0.227 
 6 mu         0.2   0.1 0.380 0.0886
 7 mu         0.2   0.2 0.506 0.0998
 8 mu         0.2   0.3 0.569 0.112 
 9 mu         0.2   0.4 0.653 0.121 
10 mu         0.2   0.5 0.686 0.129 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.01        0.0348 0.00000247      26.4 
 2 mu         0.2      1.07        0.294  0.000808        11.7 
 3 mu         0.3      1.00        0.699  0.0188           5.63
 4 mu         0.4      0.945       0.875  0.140            3.89
 5 mu         0.5      0.952       0.934  0.313            2.00
 6 mu         0.6      0.990       0.983  0.239            1.60
 7 mu         0.7      1.03        0.975  0.373            1.92
 8 mu         0.8      1.09        1.01   0.0762           3.29
 9 mu         0.9      1.19        0.627  0.00182          7.08
10 mu_1       0.1      0.910       0.134  0.0000171        8.07
11 mu_1       0.2      1.01        0.563  0.00281          6.14
12 mu_1       0.3      0.960       0.877  0.0436           5.33
13 mu_1       0.4      0.943       0.916  0.246            3.26
14 mu_1       0.5      0.966       0.958  0.209            1.69
15 mu_1       0.6      1.01        0.975  0.291            1.56
16 mu_1       0.7      1.05        0.952  0.309            2.03
17 mu_1       0.8      1.11        1.02   0.0566           3.53
18 mu_1       0.9      1.21        0.553  0.00122          7.62
19 mu_0       0.1      1.02        0.0221 0.000000840     29.2 
20 mu_0       0.2      1.08        0.213  0.000307        14.1 
21 mu_0       0.3      1.02        0.595  0.00810          6.97
22 mu_0       0.4      0.947       0.829  0.0699           4.32
23 mu_0       0.5      0.938       0.908  0.219            2.37
24 mu_0       0.6      0.965       0.981  0.160            1.71
25 mu_0       0.7      0.996       0.953  0.230            1.80
26 mu_0       0.8      1.02        0.927  0.155            2.33
27 mu_0       0.9      1.08        0.900  0.00725          4.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.44     0.0000692  2.38e-15     43.6 
 2 mu         0.2      1.62     0.00733    5.55e-10     30.2 
 3 mu         0.3      1.28     0.0830     7.18e- 7     20.2 
 4 mu         0.4      1.01     0.368      1.09e- 4      8.81
 5 mu         0.5      1.01     0.822      5.05e- 3      2.90
 6 mu         0.6      1.12     1.10       3.41e- 2      2.89
 7 mu         0.7      1.20     1.22       1.25e- 3      3.70
 8 mu         0.8      1.30     0.695      5.55e- 6     10.6 
 9 mu         0.9      1.45     0.0846     3.05e-10     39.8 
10 mu_1       0.1      1.79     0.000455   0            43.6 
11 mu_1       0.2      1.44     0.0231     0            27.9 
12 mu_1       0.3      1.04     0.182      0            14.5 
13 mu_1       0.4      0.928    0.598      0             4.72
14 mu_1       0.5      1.03     0.902      0             3.19
15 mu_1       0.6      1.14     1.15       0             2.66
16 mu_1       0.7      1.21     1.19       0             4.69
17 mu_1       0.8      1.31     0.579      0            11.7 
18 mu_1       0.9      1.45     0.0623     0            41.8 
19 mu_0       0.1      1.40     0.0000264  0            43.6 
20 mu_0       0.2      1.67     0.00363    0            34.0 
21 mu_0       0.3      1.39     0.0419     0            22.7 
22 mu_0       0.4      1.07     0.242      0            11.5 
23 mu_0       0.5      0.992    0.670      0             3.64
24 mu_0       0.6      1.08     0.969      0             3.26
25 mu_0       0.7      1.17     1.26       0             2.78
26 mu_0       0.8      1.25     1.12       0             6.25
27 mu_0       0.9      1.38     0.244      0            20.9 
[1] "Total run time was 62.772 seconds"
