
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1314"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  4  4  3  4  8  7  9  6  9  7  8  6  4  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03399 0.29835 0.57248 0.95426 5.00000 
[1] "event indicator table: "

  0   1 
754 560 
[1] "treatment indicator table: "

  0   1 
519 795 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 677
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.098 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.262 0.0944
 2 mu         0.1   0.2 0.307 0.118 
 3 mu         0.1   0.3 0.344 0.0989
 4 mu         0.1   0.4 0.381 0.101 
 5 mu         0.1   0.5 0.387 0.103 
 6 mu         0.2   0.1 0.309 0.0727
 7 mu         0.2   0.2 0.394 0.0898
 8 mu         0.2   0.3 0.435 0.0818
 9 mu         0.2   0.4 0.479 0.0799
10 mu         0.2   0.5 0.499 0.0852
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.500       0.0206 0.00000000754      8.72
 2 mu         0.2      0.771       0.253  0.0000271          7.26
 3 mu         0.3      0.908       0.701  0.00207            5.86
 4 mu         0.4      0.963       0.958  0.0297             3.57
 5 mu         0.5      0.966       1.00   0.154              2.38
 6 mu         0.6      0.942       0.949  0.297              1.77
 7 mu         0.7      0.916       0.894  0.134              2.35
 8 mu         0.8      0.885       0.789  0.0117             3.81
 9 mu         0.9      0.861       0.442  0.0000750          8.74
10 mu_1       0.1      0.710       0.0789 0.0000000490      10.0 
11 mu_1       0.2      0.882       0.496  0.0000880          6.35
12 mu_1       0.3      0.967       0.921  0.00449            5.33
13 mu_1       0.4      0.989       1.00   0.0484             2.83
14 mu_1       0.5      0.972       0.986  0.160              2.09
15 mu_1       0.6      0.939       0.931  0.263              1.88
16 mu_1       0.7      0.909       0.871  0.0981             2.48
17 mu_1       0.8      0.875       0.750  0.00786            4.06
18 mu_1       0.9      0.861       0.390  0.0000456          9.64
19 mu_0       0.1      0.477       0.0137 0.00000000293      9.69
20 mu_0       0.2      0.743       0.193  0.0000118          7.65
21 mu_0       0.3      0.883       0.596  0.00104            6.09
22 mu_0       0.4      0.946       0.905  0.0173             4.06
23 mu_0       0.5      0.961       0.999  0.106              2.66
24 mu_0       0.6      0.946       0.978  0.226              1.99
25 mu_0       0.7      0.931       0.916  0.217              2.04
26 mu_0       0.8      0.923       0.974  0.0272             2.85
27 mu_0       0.9      0.860       0.723  0.000340           5.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.33     0.0000427  2.65e-16     39.9 
 2 mu         0.2      1.71     0.00785    6.17e-11     30.7 
 3 mu         0.3      1.39     0.110      7.98e- 8     20.4 
 4 mu         0.4      1.04     0.486      1.21e- 5      7.62
 5 mu         0.5      0.986    0.858      5.61e- 4      3.32
 6 mu         0.6      1.37     0.992      1.20e- 2     11.3 
 7 mu         0.7      2.71     1.15       4.09e- 4     52.1 
 8 mu         0.8      7.29     0.787      1.83e- 6    386.  
 9 mu         0.9     26.5      0.103      1.41e-10   2261.  
10 mu_1       0.1      1.99     0.000257   2.51e-15     49.9 
11 mu_1       0.2      1.66     0.0284     2.92e-10     30.1 
12 mu_1       0.3      1.20     0.231      2.52e- 7     13.6 
13 mu_1       0.4      0.959    0.685      2.87e- 5      4.44
14 mu_1       0.5      1.04     0.998      1.06e- 3      4.14
15 mu_1       0.6      1.58     1.06       3.52e- 3     17.1 
16 mu_1       0.7      3.21     1.22       7.31e- 5     74.5 
17 mu_1       0.8      8.48     0.625      2.86e- 7    483.  
18 mu_1       0.9     29.0      0.0747     1.96e-11   2512.  
19 mu_0       0.1      1.25     0.0000181  0            38.8 
20 mu_0       0.2      1.73     0.00377    0            33.6 
21 mu_0       0.3      1.47     0.0527     0            23.3 
22 mu_0       0.4      1.10     0.273      0            10.2 
23 mu_0       0.5      0.936    0.671      0             3.34
24 mu_0       0.6      1.05     0.930      0             3.83
25 mu_0       0.7      1.55     0.982      0            15.7 
26 mu_0       0.8      2.56     0.968      0            45.6 
27 mu_0       0.9      3.98     0.148      0           148.  
[1] "Total run time was 55.006 seconds"
