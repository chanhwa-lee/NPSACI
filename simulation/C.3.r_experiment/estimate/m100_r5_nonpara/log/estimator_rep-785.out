
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1278"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  7  4  5 11  5  6  7  6  6  6  6  7 10  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03261 0.36580 0.62887 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
782 496 
[1] "treatment indicator table: "

  0   1 
460 818 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.581 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.160 0.122 
 2 mu         0.1   0.2 0.234 0.124 
 3 mu         0.1   0.3 0.236 0.156 
 4 mu         0.1   0.4 0.317 0.124 
 5 mu         0.1   0.5 0.324 0.150 
 6 mu         0.2   0.1 0.294 0.0933
 7 mu         0.2   0.2 0.389 0.106 
 8 mu         0.2   0.3 0.424 0.126 
 9 mu         0.2   0.4 0.475 0.118 
10 mu         0.2   0.5 0.516 0.139 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.729       0.0236 0.0000000698     17.2 
 2 mu         0.2      1.00        0.256  0.0000713        13.2 
 3 mu         0.3      1.08        0.720  0.00287           8.96
 4 mu         0.4      1.06        1.00   0.0295            3.34
 5 mu         0.5      1.01        0.987  0.144             2.58
 6 mu         0.6      0.971       0.974  0.186             1.80
 7 mu         0.7      0.982       0.987  0.191             1.82
 8 mu         0.8      1.02        0.896  0.0418            2.41
 9 mu         0.9      1.10        0.813  0.00115           5.59
10 mu_1       0.1      0.932       0.0772 0.000000452      16.0 
11 mu_1       0.2      1.05        0.491  0.000231         13.2 
12 mu_1       0.3      1.06        0.845  0.00625           5.97
13 mu_1       0.4      1.04        0.959  0.0492            2.76
14 mu_1       0.5      0.988       0.950  0.200             2.44
15 mu_1       0.6      0.965       0.984  0.174             1.60
16 mu_1       0.7      0.988       0.956  0.161             2.00
17 mu_1       0.8      1.03        0.889  0.0235            2.56
18 mu_1       0.9      1.11        0.807  0.000582          5.96
19 mu_0       0.1      0.707       0.0161 0.0000000273     19.1 
20 mu_0       0.2      0.990       0.194  0.0000313        13.2 
21 mu_0       0.3      1.08        0.644  0.00125          10.2 
22 mu_0       0.4      1.08        0.965  0.0142            4.45
23 mu_0       0.5      1.03        1.03   0.0794            2.73
24 mu_0       0.6      0.981       0.951  0.205             2.22
25 mu_0       0.7      0.968       0.959  0.167             1.53
26 mu_0       0.8      0.989       0.966  0.115             2.46
27 mu_0       0.9      0.999       0.819  0.00631           3.16
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.632    0.0000450  9.09e-17     17.5 
 2 mu         0.2      1.21     0.00533    2.38e-11     33.2 
 3 mu         0.3      1.34     0.0758     3.52e- 8     22.6 
 4 mu         0.4      1.20     0.357      6.24e- 6     12.7 
 5 mu         0.5      1.05     0.804      3.47e- 4      6.28
 6 mu         0.6      0.985    0.865      9.23e- 3      3.03
 7 mu         0.7      0.981    0.888      2.06e- 3      4.51
 8 mu         0.8      1.13     0.623      9.17e- 6      7.58
 9 mu         0.9      1.77     0.0591     5.05e-10     20.5 
10 mu_1       0.1      1.17     0.000370   9.09e-16     34.1 
11 mu_1       0.2      1.41     0.0174     1.19e-10     33.2 
12 mu_1       0.3      1.31     0.170      1.17e- 7     15.7 
13 mu_1       0.4      1.12     0.557      1.56e- 5     10.6 
14 mu_1       0.5      1.01     0.914      6.93e- 4      4.19
15 mu_1       0.6      0.969    0.866      1.54e- 2      3.28
16 mu_1       0.7      0.983    0.931      7.36e- 4      5.23
17 mu_1       0.8      1.17     0.465      2.87e- 6      7.70
18 mu_1       0.9      1.83     0.0432     1.40e-10     22.8 
19 mu_0       0.1      0.572    0.0000129  0            17.0 
20 mu_0       0.2      1.16     0.00198    0            33.2 
21 mu_0       0.3      1.35     0.0338     0            25.8 
22 mu_0       0.4      1.24     0.226      0            14.2 
23 mu_0       0.5      1.09     0.663      0             8.37
24 mu_0       0.6      1.01     0.978      0             3.00
25 mu_0       0.7      0.979    0.879      0             3.50
26 mu_0       0.8      0.978    0.816      0             7.10
27 mu_0       0.9      1.19     0.169      0             9.94
[1] "Total run time was 46.725 seconds"
