
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1181"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7 12  9  5  8  2  4  9  5  7  5  5  4  6  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04423 0.37991 0.66005 1.00000 5.98219 
[1] "event indicator table: "

  0   1 
736 445 
[1] "treatment indicator table: "

  0   1 
390 791 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 575
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 77.098 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.721 0.638
 2 mu         0.1   0.2 0.825 0.732
 3 mu         0.1   0.3 0.998 0.858
 4 mu         0.1   0.4 1.06  0.928
 5 mu         0.1   0.5 1.19  1.01 
 6 mu         0.2   0.1 0.376 0.231
 7 mu         0.2   0.2 0.439 0.265
 8 mu         0.2   0.3 0.537 0.311
 9 mu         0.2   0.4 0.557 0.331
10 mu         0.2   0.5 0.635 0.366
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.32       0.00420  2.50e- 9    209.  
 2 mu         0.2      1.18       0.0903   1.06e- 5     72.5 
 3 mu         0.3      0.906      0.315    1.01e- 3     21.8 
 4 mu         0.4      0.915      0.601    1.90e- 2      5.89
 5 mu         0.5      0.961      0.861    1.41e- 1      3.56
 6 mu         0.6      0.985      0.970    4.64e- 1      2.22
 7 mu         0.7      0.991      1.01     4.69e- 1      1.54
 8 mu         0.8      0.990      0.948    7.05e- 2      2.42
 9 mu         0.9      0.988      0.638    1.26e- 3      8.06
10 mu_1       0.1      0.499      0.0158   1.71e- 8     14.9 
11 mu_1       0.2      0.654      0.200    3.67e- 5      9.44
12 mu_1       0.3      0.814      0.516    2.33e- 3      5.71
13 mu_1       0.4      0.914      0.794    3.34e- 2      3.77
14 mu_1       0.5      0.959      0.940    2.02e- 1      2.50
15 mu_1       0.6      0.977      0.974    5.49e- 1      1.89
16 mu_1       0.7      0.984      0.989    3.57e- 1      1.64
17 mu_1       0.8      0.987      0.915    4.89e- 2      2.69
18 mu_1       0.9      0.993      0.583    7.97e- 4      8.93
19 mu_0       0.1      2.52       0.00250  8.71e-10    232.  
20 mu_0       0.2      1.31       0.0532   4.13e- 6     90.6 
21 mu_0       0.3      0.946      0.206    4.39e- 4     31.1 
22 mu_0       0.4      0.916      0.464    9.39e- 3      9.15
23 mu_0       0.5      0.963      0.708    6.89e- 2      5.24
24 mu_0       0.6      0.998      0.930    2.45e- 1      3.18
25 mu_0       0.7      1.01       0.997    5.43e- 1      2.26
26 mu_0       0.8      0.999      1.04     1.57e- 1      1.99
27 mu_0       0.9      0.947      0.903    5.42e- 3      3.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.71    0.0000895  2.18e-17    349.  
 2 mu         0.2      15.1     0.00393    1.15e-11   1073.  
 3 mu         0.3      12.0     0.0361     2.54e- 8    838.  
 4 mu         0.4       5.32    0.222      6.01e- 6    306.  
 5 mu         0.5       2.05    0.564      4.17e- 4     58.2 
 6 mu         0.6       1.19    0.926      1.33e- 2      6.14
 7 mu         0.7       1.12    1.08       1.23e- 1      2.64
 8 mu         0.8       1.40    0.850      1.02e- 3      8.67
 9 mu         0.9       2.26    0.245      1.00e- 7     39.3 
10 mu_1       0.1      12.3     0.000589   2.18e-16    775.  
11 mu_1       0.2      16.6     0.0158     5.73e-11   1192.  
12 mu_1       0.3       9.15    0.0852     8.46e- 8    620.  
13 mu_1       0.4       3.48    0.364      1.50e- 5    170.  
14 mu_1       0.5       1.51    0.767      8.33e- 4     25.8 
15 mu_1       0.6       1.08    0.935      2.22e- 2      4.26
16 mu_1       0.7       1.13    1.09       3.52e- 2      3.01
17 mu_1       0.8       1.46    0.735      2.84e- 4     10.3 
18 mu_1       0.9       2.35    0.169      2.47e- 8     43.6 
19 mu_0       0.1       4.98    0.0000189  0           301.  
20 mu_0       0.2      14.7     0.00105    0          1043.  
21 mu_0       0.3      13.2     0.0167     0           931.  
22 mu_0       0.4       6.54    0.117      0           396.  
23 mu_0       0.5       2.58    0.366      0            90.5 
24 mu_0       0.6       1.34    0.776      0            10.3 
25 mu_0       0.7       1.08    1.00       0             3.70
26 mu_0       0.8       1.15    1.07       0             3.92
27 mu_0       0.9       1.43    0.476      0            19.0 
[1] "Total run time was 81.574 seconds"
