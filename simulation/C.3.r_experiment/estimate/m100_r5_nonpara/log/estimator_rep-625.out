
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1295"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  4 11  7  5  7  4  6  7  7  2  8  3 11  4 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02925 0.37869 0.60077 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
774 521 
[1] "treatment indicator table: "

  0   1 
478 817 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 179.392 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.178 0.0707
 2 mu         0.1   0.2 0.178 0.0696
 3 mu         0.1   0.3 0.164 0.0739
 4 mu         0.1   0.4 0.170 0.0727
 5 mu         0.1   0.5 0.239 0.0989
 6 mu         0.2   0.1 0.285 0.0943
 7 mu         0.2   0.2 0.325 0.109 
 8 mu         0.2   0.3 0.346 0.125 
 9 mu         0.2   0.4 0.368 0.129 
10 mu         0.2   0.5 0.440 0.144 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.273      0.0116  0.00000000723      4.46
 2 mu         0.2      0.742      0.194   0.0000278         23.7 
 3 mu         0.3      0.998      0.555   0.00230           26.3 
 4 mu         0.4      1.02       0.854   0.0346            12.3 
 5 mu         0.5      1.02       0.951   0.149              3.15
 6 mu         0.6      1.02       1.02    0.455              1.92
 7 mu         0.7      1.00       1.02    0.219              1.82
 8 mu         0.8      0.987      0.959   0.0189             3.34
 9 mu         0.9      0.998      0.649   0.000108           6.46
10 mu_1       0.1      0.571      0.0494  0.0000000472      10.3 
11 mu_1       0.2      0.985      0.429   0.0000910         30.3 
12 mu_1       0.3      1.08       0.783   0.00505           22.8 
13 mu_1       0.4      1.04       0.899   0.0603             8.21
14 mu_1       0.5      1.03       0.985   0.235              2.44
15 mu_1       0.6      1.02       0.996   0.493              1.76
16 mu_1       0.7      0.999      0.997   0.159              1.83
17 mu_1       0.8      0.988      0.904   0.0122             3.67
18 mu_1       0.9      0.996      0.601   0.0000628          6.72
19 mu_0       0.1      0.240      0.00774 0.00000000279      4.40
20 mu_0       0.2      0.681      0.125   0.0000119         22.1 
21 mu_0       0.3      0.965      0.458   0.00112           27.8 
22 mu_0       0.4      1.01       0.774   0.0134            15.0 
23 mu_0       0.5      1.01       0.935   0.0633             4.35
24 mu_0       0.6      1.02       0.990   0.213              2.16
25 mu_0       0.7      1.01       1.01    0.358              1.89
26 mu_0       0.8      0.984      1.03    0.0456             2.02
27 mu_0       0.9      1.02       0.878   0.000517           6.13
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.79    0.0000426  4.92e-19     83.8 
 2 mu         0.2       6.09    0.00476    5.16e-13    275.  
 3 mu         0.3       6.22    0.0474     1.72e- 9    322.  
 4 mu         0.4       3.52    0.235      5.41e- 7    157.  
 5 mu         0.5       1.65    0.633      4.69e- 5     37.3 
 6 mu         0.6       1.25    0.968      1.38e- 3      8.02
 7 mu         0.7       1.63    1.17       1.06e- 5     16.5 
 8 mu         0.8       3.14    0.914      9.37e- 9    102.  
 9 mu         0.9      13.0     0.231      4.52e-14   1076.  
10 mu_1       0.1       4.42    0.000238   0           136.  
11 mu_1       0.2       7.18    0.0165     0           362.  
12 mu_1       0.3       5.43    0.110      0           283.  
13 mu_1       0.4       2.62    0.409      0           103.  
14 mu_1       0.5       1.36    0.858      0            19.6 
15 mu_1       0.6       1.28    1.02       0             9.85
16 mu_1       0.7       1.76    1.18       0            17.3 
17 mu_1       0.8       3.46    0.806      0           128.  
18 mu_1       0.9      14.2     0.176      0          1196.  
19 mu_0       0.1       2.60    0.0000115  0            83.8 
20 mu_0       0.2       5.82    0.00110    0           254.  
21 mu_0       0.3       6.56    0.0196     0           339.  
22 mu_0       0.4       4.13    0.103      0           193.  
23 mu_0       0.5       1.94    0.370      0            55.0 
24 mu_0       0.6       1.21    0.747      0            10.5 
25 mu_0       0.7       1.34    1.07       0            14.5 
26 mu_0       0.8       1.86    1.19       0            27.0 
27 mu_0       0.9       2.61    0.526      0           113.  
[1] "Total run time was 184.045 seconds"
