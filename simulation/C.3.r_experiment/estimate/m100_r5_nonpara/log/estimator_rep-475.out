
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1172"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  4  8  7 10  6  4  7  8  5  5  9  3  7  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03646 0.36756 0.62547 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
726 446 
[1] "treatment indicator table: "

  0   1 
475 697 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 577
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.82 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.443 0.0937
 2 mu         0.1   0.2 0.588 0.127 
 3 mu         0.1   0.3 0.617 0.138 
 4 mu         0.1   0.4 0.626 0.141 
 5 mu         0.1   0.5 0.647 0.146 
 6 mu         0.2   0.1 0.353 0.0627
 7 mu         0.2   0.2 0.472 0.0851
 8 mu         0.2   0.3 0.509 0.0913
 9 mu         0.2   0.4 0.525 0.0927
10 mu         0.2   0.5 0.548 0.0955
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16        0.0802  1.43e- 9     15.0 
 2 mu         0.2      1.01        0.478   6.54e- 6      9.20
 3 mu         0.3      0.890       0.773   6.63e- 4      3.72
 4 mu         0.4      0.909       0.939   1.33e- 2      2.43
 5 mu         0.5      0.966       0.907   1.04e- 1      2.29
 6 mu         0.6      1.00        0.947   2.33e- 1      2.59
 7 mu         0.7      1.00        1.02    1.40e- 1      1.92
 8 mu         0.8      1.01        0.994   8.03e- 2      2.31
 9 mu         0.9      1.07        0.881   2.61e- 3      3.28
10 mu_1       0.1      1.20        0.246   1.03e- 8     16.7 
11 mu_1       0.2      0.933       0.708   2.37e- 5      5.23
12 mu_1       0.3      0.888       0.913   1.60e- 3      2.51
13 mu_1       0.4      0.936       0.964   2.43e- 2      1.99
14 mu_1       0.5      0.983       0.905   1.54e- 1      2.55
15 mu_1       0.6      1.01        0.970   1.66e- 1      2.49
16 mu_1       0.7      1.00        1.06    1.58e- 1      1.87
17 mu_1       0.8      1.01        1.03    5.82e- 2      2.44
18 mu_1       0.9      1.08        0.823   1.79e- 3      3.55
19 mu_0       0.1      1.16        0.0589  4.41e-10     14.8 
20 mu_0       0.2      1.03        0.401   2.27e- 6     10.2 
21 mu_0       0.3      0.891       0.712   2.61e- 4      4.24
22 mu_0       0.4      0.891       0.866   6.03e- 3      3.01
23 mu_0       0.5      0.949       0.935   5.51e- 2      2.22
24 mu_0       0.6      0.993       0.937   2.64e- 1      2.73
25 mu_0       0.7      1.00        0.966   9.83e- 2      2.13
26 mu_0       0.8      0.986       1.00    5.43e- 2      2.17
27 mu_0       0.9      0.959       0.909   4.15e- 3      3.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12      0.000916  3.26e-15     38.0 
 2 mu         0.2      1.54      0.0282    3.80e-10     32.9 
 3 mu         0.3      1.47      0.146     3.27e- 7     13.0 
 4 mu         0.4      1.30      0.628     3.73e- 5     11.4 
 5 mu         0.5      1.15      0.878     1.38e- 3      7.29
 6 mu         0.6      1.04      1.02      2.45e- 2      3.62
 7 mu         0.7      1.01      0.838     9.50e- 4      3.34
 8 mu         0.8      1.03      0.711     4.23e- 6      5.45
 9 mu         0.9      1.11      0.0933    2.33e-10      7.44
10 mu_1       0.1      1.66      0.00422   0            50.7 
11 mu_1       0.2      1.59      0.0822    0            21.9 
12 mu_1       0.3      1.39      0.311     0            10.7 
13 mu_1       0.4      1.24      0.765     0            11.0 
14 mu_1       0.5      1.12      0.949     0             5.67
15 mu_1       0.6      1.03      0.865     0             3.44
16 mu_1       0.7      1.01      0.885     0             3.76
17 mu_1       0.8      1.04      0.565     0             5.53
18 mu_1       0.9      1.13      0.0575    0             8.27
19 mu_0       0.1      1.06      0.000291  0            36.6 
20 mu_0       0.2      1.53      0.00763   0            35.6 
21 mu_0       0.3      1.50      0.0732    0            16.2 
22 mu_0       0.4      1.34      0.434     0            11.6 
23 mu_0       0.5      1.19      0.637     0             8.91
24 mu_0       0.6      1.06      0.968     0             4.33
25 mu_0       0.7      1.01      0.831     0             4.04
26 mu_0       0.8      0.998     0.757     0             5.11
27 mu_0       0.9      1.01      0.142     0             5.90
[1] "Total run time was 50.231 seconds"
