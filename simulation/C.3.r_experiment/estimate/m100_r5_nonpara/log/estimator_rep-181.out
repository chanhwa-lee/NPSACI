
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1225"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  8  4 10  5  9  4  6  5  6  6  5  7  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0202  0.3521  0.5973  1.0000  6.0520 
[1] "event indicator table: "

  0   1 
732 493 
[1] "treatment indicator table: "

  0   1 
439 786 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 576
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 68.508 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.191 0.0787
 2 mu         0.1   0.2 0.205 0.0833
 3 mu         0.1   0.3 0.322 0.104 
 4 mu         0.1   0.4 0.307 0.102 
 5 mu         0.1   0.5 0.344 0.122 
 6 mu         0.2   0.1 0.265 0.0705
 7 mu         0.2   0.2 0.308 0.0877
 8 mu         0.2   0.3 0.451 0.113 
 9 mu         0.2   0.4 0.466 0.114 
10 mu         0.2   0.5 0.507 0.131 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.434      0.00362 0.00000000529     14.8 
 2 mu         0.2      0.787      0.0876  0.0000203         14.6 
 3 mu         0.3      1.03       0.329   0.00170           11.3 
 4 mu         0.4      1.12       0.710   0.0279             9.10
 5 mu         0.5      1.09       0.973   0.165              4.73
 6 mu         0.6      1.04       1.03    0.264              3.09
 7 mu         0.7      1.03       0.982   0.0464             3.54
 8 mu         0.8      1.04       0.888   0.00163           10.8 
 9 mu         0.9      0.971      0.421   0.00000296        18.4 
10 mu_1       0.1      0.800      0.0176  0.0000000345      21.1 
11 mu_1       0.2      0.971      0.233   0.0000665         10.4 
12 mu_1       0.3      1.10       0.558   0.00376           11.9 
13 mu_1       0.4      1.12       0.886   0.0474             7.35
14 mu_1       0.5      1.07       1.01    0.230              4.38
15 mu_1       0.6      1.03       1.02    0.147              2.65
16 mu_1       0.7      1.04       0.992   0.0265             4.21
17 mu_1       0.8      1.04       0.831   0.000845          11.9 
18 mu_1       0.9      0.961      0.368   0.00000141        18.3 
19 mu_0       0.1      0.393      0.00207 0.00000000205     14.1 
20 mu_0       0.2      0.741      0.0598  0.00000871        15.6 
21 mu_0       0.3      0.998      0.243   0.000822          12.0 
22 mu_0       0.4      1.12       0.588   0.0144            10.3 
23 mu_0       0.5      1.11       0.865   0.0809             5.59
24 mu_0       0.6      1.05       1.01    0.168              3.75
25 mu_0       0.7      1.03       1.01    0.0929             2.13
26 mu_0       0.8      1.05       0.982   0.00478            6.46
27 mu_0       0.9      1.07       0.701   0.0000169         19.6 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.08    0.0000300  1.20e-15     52.9 
 2 mu         0.2       4.05    0.00366    2.48e-10    130.  
 3 mu         0.3       4.15    0.0536     2.80e- 7    116.  
 4 mu         0.4       2.83    0.227      3.65e- 5     58.7 
 5 mu         0.5       1.63    0.625      1.41e- 3     22.6 
 6 mu         0.6       1.14    0.891      2.40e- 2     11.3 
 7 mu         0.7       1.22    0.972      5.14e- 3      6.58
 8 mu         0.8       2.02    0.744      4.39e- 5     45.4 
 9 mu         0.9       5.75    0.159      2.41e- 9    337.  
10 mu_1       0.1       3.94    0.000180   1.08e-14    122.  
11 mu_1       0.2       4.54    0.0135     1.12e- 9    150.  
12 mu_1       0.3       3.53    0.122      8.41e- 7     88.9 
13 mu_1       0.4       2.13    0.412      8.22e- 5     33.8 
14 mu_1       0.5       1.30    0.711      2.54e- 3     19.4 
15 mu_1       0.6       1.08    0.935      3.60e- 2      8.08
16 mu_1       0.7       1.29    1.00       1.73e- 3      6.79
17 mu_1       0.8       2.22    0.630      1.33e- 5     56.8 
18 mu_1       0.9       6.22    0.116      6.70e-10    374.  
19 mu_0       0.1       1.87    0.0000105  0            45.2 
20 mu_0       0.2       3.92    0.00147    0           125.  
21 mu_0       0.3       4.41    0.0193     0           127.  
22 mu_0       0.4       3.30    0.114      0            75.2 
23 mu_0       0.5       1.97    0.403      0            28.5 
24 mu_0       0.6       1.23    0.780      0            16.2 
25 mu_0       0.7       1.05    0.922      0             6.09
26 mu_0       0.8       1.19    0.881      0             8.87
27 mu_0       0.9       1.49    0.238      0            29.2 
[1] "Total run time was 72.866 seconds"
