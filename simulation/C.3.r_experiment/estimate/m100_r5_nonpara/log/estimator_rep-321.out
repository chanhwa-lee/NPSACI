
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  8  3  8  2  7  6  4  6 12  4  7  6 10  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02708 0.32900 0.59318 0.98452 5.00000 
[1] "event indicator table: "

  0   1 
775 509 
[1] "treatment indicator table: "

  0   1 
463 821 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 77.895 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.671 0.486
 2 mu         0.1   0.2 0.948 0.632
 3 mu         0.1   0.3 0.989 0.674
 4 mu         0.1   0.4 1.11  0.748
 5 mu         0.1   0.5 1.14  0.788
 6 mu         0.2   0.1 0.503 0.244
 7 mu         0.2   0.2 0.682 0.322
 8 mu         0.2   0.3 0.727 0.337
 9 mu         0.2   0.4 0.794 0.369
10 mu         0.2   0.5 0.831 0.387
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.44        0.0253 0.000000390    102.  
 2 mu         0.2      1.18        0.214  0.000393        49.8 
 3 mu         0.3      1.12        0.553  0.0153          22.7 
 4 mu         0.4      1.08        0.779  0.136            9.55
 5 mu         0.5      1.05        0.925  0.311            3.75
 6 mu         0.6      1.01        1.01   0.533            1.56
 7 mu         0.7      0.970       0.951  0.412            1.72
 8 mu         0.8      0.961       0.842  0.0479           3.16
 9 mu         0.9      0.996       0.528  0.000479         9.09
10 mu_1       0.1      0.696       0.0924 0.00000241      11.7 
11 mu_1       0.2      0.908       0.437  0.00122         10.7 
12 mu_1       0.3      1.03        0.765  0.0320           8.43
13 mu_1       0.4      1.05        0.863  0.175            3.49
14 mu_1       0.5      1.03        1.00   0.384            2.06
15 mu_1       0.6      0.999       1.01   0.523            1.50
16 mu_1       0.7      0.964       0.932  0.315            1.87
17 mu_1       0.8      0.967       0.816  0.0329           3.90
18 mu_1       0.9      1.00        0.458  0.000299         9.56
19 mu_0       0.1      1.52        0.0165 0.000000166    112.  
20 mu_0       0.2      1.25        0.151  0.000186        60.6 
21 mu_0       0.3      1.16        0.484  0.00812         30.7 
22 mu_0       0.4      1.10        0.778  0.0749          14.5 
23 mu_0       0.5      1.06        0.852  0.238            6.33
24 mu_0       0.6      1.03        1.03   0.454            2.59
25 mu_0       0.7      0.984       0.984  0.445            1.59
26 mu_0       0.8      0.937       0.943  0.108            1.92
27 mu_0       0.9      0.960       0.707  0.00210          4.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    437.      0.0000175   3.38e-14  43141.  
 2 mu         0.2    109.      0.00254     1.97e- 9  10356.  
 3 mu         0.3     17.4     0.0496      1.13e- 6   1404.  
 4 mu         0.4      2.88    0.264       9.67e- 5    117.  
 5 mu         0.5      1.10    0.701       2.86e- 3      6.22
 6 mu         0.6      0.967   0.957       4.23e- 2      2.48
 7 mu         0.7      1.15    1.18        7.79e- 4      3.74
 8 mu         0.8      1.37    0.827       6.03e- 7      6.46
 9 mu         0.9      1.28    0.170       2.59e-12     16.8 
10 mu_1       0.1    235.      0.000127    3.18e-13  22706.  
11 mu_1       0.2     32.0     0.00850     9.26e- 9   2725.  
12 mu_1       0.3      4.70    0.100       3.55e- 6    246.  
13 mu_1       0.4      1.36    0.427       2.27e- 4     15.4 
14 mu_1       0.5      0.918   0.854       5.39e- 3      3.41
15 mu_1       0.6      0.979   0.955       1.04e- 2      2.92
16 mu_1       0.7      1.20    1.24        5.86e- 5      3.77
17 mu_1       0.8      1.39    0.671       3.97e- 8      7.54
18 mu_1       0.9      1.26    0.134       1.51e-13     17.4 
19 mu_0       0.1    460.      0.00000507  0         45412.  
20 mu_0       0.2    129.      0.00115     0         12263.  
21 mu_0       0.3     22.9     0.0200      0          1900.  
22 mu_0       0.4      3.90    0.140       0           184.  
23 mu_0       0.5      1.29    0.465       0            10.7 
24 mu_0       0.6      0.948   0.885       0             4.19
25 mu_0       0.7      1.05    1.06        0             3.67
26 mu_0       0.8      1.29    1.22        0             4.54
27 mu_0       0.9      1.51    0.418       0            11.2 
[1] "Total run time was 82.935 seconds"
