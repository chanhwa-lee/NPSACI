
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1272"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5 11  6  7  6  4  5  3  8 11  5  6  7  9  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03496 0.34763 0.61886 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
708 564 
[1] "treatment indicator table: "

  0   1 
482 790 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.683 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.838 0.295
 2 mu         0.1   0.2 0.946 0.334
 3 mu         0.1   0.3 1.06  0.375
 4 mu         0.1   0.4 1.11  0.394
 5 mu         0.1   0.5 1.16  0.417
 6 mu         0.2   0.1 0.563 0.137
 7 mu         0.2   0.2 0.654 0.156
 8 mu         0.2   0.3 0.725 0.175
 9 mu         0.2   0.4 0.766 0.184
10 mu         0.2   0.5 0.796 0.195
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.93        0.0351 0.00000137      64.3 
 2 mu         0.2      1.42        0.323  0.000721        30.9 
 3 mu         0.3      1.13        0.780  0.0120           6.34
 4 mu         0.4      1.09        0.979  0.0752           2.94
 5 mu         0.5      1.08        1.01   0.271            2.66
 6 mu         0.6      1.04        1.02   0.360            1.96
 7 mu         0.7      0.972       0.975  0.502            1.70
 8 mu         0.8      0.963       0.968  0.0699           2.88
 9 mu         0.9      1.03        0.562  0.000747         5.65
10 mu_1       0.1      1.50        0.114  0.00000795      64.3 
11 mu_1       0.2      1.13        0.559  0.00244         15.4 
12 mu_1       0.3      1.06        0.991  0.0275           3.62
13 mu_1       0.4      1.08        0.975  0.132            2.50
14 mu_1       0.5      1.07        1.04   0.341            2.62
15 mu_1       0.6      1.02        1.01   0.384            1.70
16 mu_1       0.7      0.962       0.930  0.423            1.76
17 mu_1       0.8      0.971       0.895  0.0481           3.26
18 mu_1       0.9      1.04        0.514  0.000471         6.03
19 mu_0       0.1      1.97        0.0211 0.000000638     64.3 
20 mu_0       0.2      1.49        0.240  0.000290        34.7 
21 mu_0       0.3      1.15        0.646  0.00534          8.12
22 mu_0       0.4      1.09        1.03   0.0372           3.33
23 mu_0       0.5      1.09        0.961  0.150            2.71
24 mu_0       0.6      1.06        1.06   0.324            2.34
25 mu_0       0.7      0.996       0.990  0.368            1.71
26 mu_0       0.8      0.932       0.925  0.157            1.88
27 mu_0       0.9      0.960       0.756  0.00323          3.71
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.330    0.0000649  6.45e-15      5.68
 2 mu         0.2      0.857    0.00403    1.34e- 9      8.34
 3 mu         0.3      1.22     0.0471     1.51e- 6     12.0 
 4 mu         0.4      1.25     0.215      1.91e- 4      7.98
 5 mu         0.5      1.07     0.710      3.48e- 3      4.21
 6 mu         0.6      0.968    0.978      3.73e- 2      2.41
 7 mu         0.7      1.07     0.991      1.32e- 2      4.14
 8 mu         0.8      1.24     0.691      1.51e- 4      5.82
 9 mu         0.9      1.46     0.0793     3.73e- 8     15.2 
10 mu_1       0.1      0.837    0.000467   5.80e-14     10.3 
11 mu_1       0.2      1.21     0.0147     6.01e- 9     11.6 
12 mu_1       0.3      1.31     0.111      4.53e- 6     11.8 
13 mu_1       0.4      1.17     0.376      4.43e- 4      5.87
14 mu_1       0.5      0.970    0.803      6.97e- 3      3.98
15 mu_1       0.6      0.951    0.924      4.19e- 2      2.83
16 mu_1       0.7      1.10     1.09       3.67e- 3      4.28
17 mu_1       0.8      1.28     0.552      5.95e- 5      6.45
18 mu_1       0.9      1.50     0.0556     1.31e- 8     16.8 
19 mu_0       0.1      0.273    0.0000191  0             5.16
20 mu_0       0.2      0.768    0.00137    0             8.05
21 mu_0       0.3      1.18     0.0169     0            12.1 
22 mu_0       0.4      1.31     0.107      0             9.39
23 mu_0       0.5      1.17     0.499      0             4.95
24 mu_0       0.6      0.995    0.874      0             3.07
25 mu_0       0.7      1.00     0.906      0             3.84
26 mu_0       0.8      1.10     0.889      0             4.59
27 mu_0       0.9      1.13     0.174      0            11.9 
[1] "Total run time was 57.93 seconds"
