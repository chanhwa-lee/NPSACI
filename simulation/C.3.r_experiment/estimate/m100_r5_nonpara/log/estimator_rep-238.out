
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1265"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  1  9  6  8  4  7  5  6  9 10 11  3  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04227 0.35120 0.61865 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
767 498 
[1] "treatment indicator table: "

  0   1 
440 825 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 41.156 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.296 0.121 
 2 mu         0.1   0.2 0.390 0.145 
 3 mu         0.1   0.3 0.459 0.163 
 4 mu         0.1   0.4 0.502 0.188 
 5 mu         0.1   0.5 0.551 0.198 
 6 mu         0.2   0.1 0.313 0.0914
 7 mu         0.2   0.2 0.435 0.102 
 8 mu         0.2   0.3 0.509 0.113 
 9 mu         0.2   0.4 0.569 0.133 
10 mu         0.2   0.5 0.628 0.135 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.17        0.0916 0.000000250      28.0 
 2 mu         0.2      1.28        0.589  0.000253         16.5 
 3 mu         0.3      1.23        0.963  0.00747          13.8 
 4 mu         0.4      1.14        1.06   0.0526            7.67
 5 mu         0.5      1.04        1.03   0.153             3.19
 6 mu         0.6      0.977       0.924  0.169             1.95
 7 mu         0.7      0.954       0.929  0.241             2.32
 8 mu         0.8      0.956       0.869  0.102             3.21
 9 mu         0.9      0.916       0.797  0.00124           3.22
10 mu_1       0.1      1.33        0.302  0.00000162       24.2 
11 mu_1       0.2      1.29        0.920  0.000808         16.8 
12 mu_1       0.3      1.20        1.06   0.0161           11.7 
13 mu_1       0.4      1.10        1.02   0.102             5.62
14 mu_1       0.5      1.02        1.00   0.241             2.28
15 mu_1       0.6      0.967       0.927  0.140             1.97
16 mu_1       0.7      0.954       0.932  0.285             2.60
17 mu_1       0.8      0.956       0.855  0.0731            3.18
18 mu_1       0.9      0.911       0.768  0.000809          3.45
19 mu_0       0.1      1.15        0.0666 0.0000000980     28.5 
20 mu_0       0.2      1.28        0.482  0.000111         18.6 
21 mu_0       0.3      1.24        0.936  0.00378          14.6 
22 mu_0       0.4      1.16        1.10   0.0200            9.05
23 mu_0       0.5      1.07        1.08   0.0653            4.10
24 mu_0       0.6      0.992       0.985  0.162             1.99
25 mu_0       0.7      0.954       0.936  0.131             2.05
26 mu_0       0.8      0.958       0.930  0.146             3.30
27 mu_0       0.9      0.968       0.915  0.00509           3.06
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.52    0.0000379  5.96e-17    101.  
 2 mu         0.2       2.48    0.00545    1.56e-11    155.  
 3 mu         0.3       2.01    0.0882     2.31e- 8     80.9 
 4 mu         0.4       1.59    0.414      4.09e- 6     22.2 
 5 mu         0.5       1.46    0.971      2.27e- 4     11.9 
 6 mu         0.6       1.37    1.06       6.05e- 3     11.2 
 7 mu         0.7       1.18    1.07       7.25e- 3      6.12
 8 mu         0.8       1.15    0.788      3.71e- 5      6.34
 9 mu         0.9       1.55    0.112      3.22e- 9     14.9 
10 mu_1       0.1       2.73    0.000230   5.96e-16    178.  
11 mu_1       0.2       2.49    0.0194     7.81e-11    137.  
12 mu_1       0.3       1.76    0.206      7.69e- 8     47.6 
13 mu_1       0.4       1.49    0.651      1.02e- 5     18.1 
14 mu_1       0.5       1.43    0.988      4.54e- 4     10.4 
15 mu_1       0.6       1.33    1.12       1.01e- 2     10.8 
16 mu_1       0.7       1.14    0.978      1.83e- 3      5.06
17 mu_1       0.8       1.16    0.643      8.17e- 6      7.14
18 mu_1       0.9       1.59    0.0771     6.31e-10     15.5 
19 mu_0       0.1       1.39    0.0000164  0            92.5 
20 mu_0       0.2       2.47    0.00216    0           160.  
21 mu_0       0.3       2.11    0.0367     0            95.2 
22 mu_0       0.4       1.65    0.257      0            30.4 
23 mu_0       0.5       1.50    0.754      0            14.9 
24 mu_0       0.6       1.44    1.05       0            11.8 
25 mu_0       0.7       1.27    1.10       0             8.59
26 mu_0       0.8       1.07    0.933      0             5.36
27 mu_0       0.9       1.25    0.232      0            13.2 
[1] "Total run time was 44.426 seconds"
