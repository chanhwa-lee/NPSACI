
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1217"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  6  8  1  8  9 11  9  6  4  5  8  5  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03419 0.33385 0.58922 0.97430 5.00000 
[1] "event indicator table: "

  0   1 
742 475 
[1] "treatment indicator table: "

  0   1 
479 738 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 575
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 64.868 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.219 0.135
 2 mu         0.1   0.2 0.275 0.140
 3 mu         0.1   0.3 0.269 0.153
 4 mu         0.1   0.4 0.268 0.159
 5 mu         0.1   0.5 0.318 0.181
 6 mu         0.2   0.1 0.265 0.113
 7 mu         0.2   0.2 0.373 0.123
 8 mu         0.2   0.3 0.379 0.133
 9 mu         0.2   0.4 0.401 0.139
10 mu         0.2   0.5 0.490 0.162
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.577      0.0133  0.0000000301     26.8 
 2 mu         0.2      0.848      0.212   0.0000641        23.1 
 3 mu         0.3      0.917      0.553   0.00398           9.19
 4 mu         0.4      0.952      0.900   0.0543            3.40
 5 mu         0.5      0.967      0.946   0.221             2.56
 6 mu         0.6      0.980      0.994   0.482             1.58
 7 mu         0.7      1.01       1.00    0.234             1.74
 8 mu         0.8      1.06       0.928   0.0369            3.87
 9 mu         0.9      1.11       0.568   0.000713         12.7 
10 mu_1       0.1      0.962      0.0534  0.000000193      35.7 
11 mu_1       0.2      0.947      0.423   0.000207         15.4 
12 mu_1       0.3      0.948      0.832   0.00869           4.24
13 mu_1       0.4      0.965      0.964   0.0903            3.28
14 mu_1       0.5      0.972      0.976   0.302             2.13
15 mu_1       0.6      0.988      0.983   0.419             1.61
16 mu_1       0.7      1.02       1.03    0.177             1.97
17 mu_1       0.8      1.07       0.898   0.0252            4.17
18 mu_1       0.9      1.12       0.504   0.000439         14.0 
19 mu_0       0.1      0.534      0.00872 0.0000000121     25.8 
20 mu_0       0.2      0.823      0.154   0.0000283        25.1 
21 mu_0       0.3      0.903      0.444   0.00196          11.4 
22 mu_0       0.4      0.944      0.829   0.0290            3.73
23 mu_0       0.5      0.962      0.869   0.102             2.99
24 mu_0       0.6      0.969      0.956   0.224             1.82
25 mu_0       0.7      0.988      0.980   0.367             1.80
26 mu_0       0.8      1.03       1.04    0.0840            2.68
27 mu_0       0.9      1.07       0.984   0.00317           6.12
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.365    0.000156   2.77e-14      8.40
 2 mu         0.2      1.04     0.0118     1.61e- 9     18.1 
 3 mu         0.3      1.38     0.0964     9.27e- 7     27.4 
 4 mu         0.4      1.30     0.406      7.93e- 5     18.1 
 5 mu         0.5      1.09     0.845      2.35e- 3      6.20
 6 mu         0.6      0.979    0.913      3.47e- 2      4.30
 7 mu         0.7      0.955    0.988      1.70e- 3      3.13
 8 mu         0.8      1.10     0.464      1.31e- 5     12.8 
 9 mu         0.9      1.80     0.0485     2.27e- 9     52.5 
10 mu_1       0.1      0.875    0.000942   2.61e-13     16.8 
11 mu_1       0.2      1.41     0.0358     7.59e- 9     26.3 
12 mu_1       0.3      1.43     0.216      2.91e- 6     26.8 
13 mu_1       0.4      1.22     0.602      1.87e- 4     13.3 
14 mu_1       0.5      1.04     0.892      4.42e- 3      3.65
15 mu_1       0.6      0.968    0.965      1.41e- 2      4.38
16 mu_1       0.7      0.974    0.941      4.56e- 4      3.67
17 mu_1       0.8      1.17     0.362      3.06e- 6     16.0 
18 mu_1       0.9      1.91     0.0346     4.73e-10     58.3 
19 mu_0       0.1      0.309    0.0000643  0             7.47
20 mu_0       0.2      0.952    0.00487    0            17.0 
21 mu_0       0.3      1.36     0.0500     0            27.6 
22 mu_0       0.4      1.35     0.251      0            21.3 
23 mu_0       0.5      1.15     0.647      0             8.76
24 mu_0       0.6      0.996    0.872      0             4.18
25 mu_0       0.7      0.910    0.865      0             4.05
26 mu_0       0.8      0.834    0.661      0             4.31
27 mu_0       0.9      0.791    0.0839     0            11.4 
[1] "Total run time was 69.403 seconds"
