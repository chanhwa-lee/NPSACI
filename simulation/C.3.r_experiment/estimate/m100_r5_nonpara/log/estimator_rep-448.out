
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  7  7  8  4  4 11  6  3  5  9  7  5  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02696 0.33864 0.58809 0.98945 6.00000 
[1] "event indicator table: "

  0   1 
759 482 
[1] "treatment indicator table: "

  0   1 
501 740 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 88.073 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.318 0.0804
 2 mu         0.1   0.2 0.413 0.0866
 3 mu         0.1   0.3 0.505 0.109 
 4 mu         0.1   0.4 0.569 0.105 
 5 mu         0.1   0.5 0.598 0.111 
 6 mu         0.2   0.1 0.354 0.0495
 7 mu         0.2   0.2 0.437 0.0537
 8 mu         0.2   0.3 0.501 0.0641
 9 mu         0.2   0.4 0.553 0.0631
10 mu         0.2   0.5 0.589 0.0677
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.241  3.23e-10     10.4 
 2 mu         0.2      1.12         0.849  1.80e- 6      5.04
 3 mu         0.3      1.08         0.909  2.27e- 4      3.88
 4 mu         0.4      1.02         0.980  5.85e- 3      2.61
 5 mu         0.5      1.01         0.985  6.00e- 2      2.52
 6 mu         0.6      0.983        0.987  9.00e- 2      2.64
 7 mu         0.7      0.966        0.952  1.22e- 1      2.14
 8 mu         0.8      0.985        0.876  1.81e- 2      3.19
 9 mu         0.9      1.04         0.799  2.04e- 4      6.99
10 mu_1       0.1      1.10         0.571  2.48e- 9      6.71
11 mu_1       0.2      1.12         0.909  6.95e- 6      4.45
12 mu_1       0.3      1.03         0.955  5.89e- 4      3.51
13 mu_1       0.4      0.995        0.988  1.15e- 2      2.45
14 mu_1       0.5      0.990        0.925  9.12e- 2      2.79
15 mu_1       0.6      0.971        1.01   1.07e- 1      2.47
16 mu_1       0.7      0.965        0.934  1.06e- 1      2.31
17 mu_1       0.8      0.991        0.835  1.20e- 2      3.56
18 mu_1       0.9      1.05         0.787  1.20e- 4      7.56
19 mu_0       0.1      1.00         0.201  8.29e-11     11.2 
20 mu_0       0.2      1.12         0.802  5.09e- 7      5.71
21 mu_0       0.3      1.10         0.901  7.19e- 5      4.19
22 mu_0       0.4      1.04         0.973  2.10e- 3      3.08
23 mu_0       0.5      1.02         0.986  1.57e- 2      2.37
24 mu_0       0.6      1.00         0.979  4.68e- 2      2.90
25 mu_0       0.7      0.968        0.985  1.18e- 1      1.91
26 mu_0       0.8      0.962        0.906  1.87e- 2      2.63
27 mu_0       0.9      0.975        0.900  4.39e- 4      3.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.680     0.000687  1.85e-16     18.1 
 2 mu         0.2      1.16      0.0311    8.61e-11     14.7 
 3 mu         0.3      1.30      0.252     1.67e- 7      9.80
 4 mu         0.4      1.29      0.791     3.39e- 5      6.53
 5 mu         0.5      1.20      0.850     1.01e- 3      5.50
 6 mu         0.6      1.12      0.970     3.03e- 3      5.49
 7 mu         0.7      1.12      0.961     3.61e- 5      3.50
 8 mu         0.8      1.36      0.623     5.47e- 8      6.56
 9 mu         0.9      2.11      0.0502    5.94e-13     27.7 
10 mu_1       0.1      1.20      0.00387   1.76e-15     20.4 
11 mu_1       0.2      1.36      0.0995    4.09e-10     14.4 
12 mu_1       0.3      1.34      0.475     5.29e- 7      7.80
13 mu_1       0.4      1.26      0.943     8.02e- 5      6.53
14 mu_1       0.5      1.17      0.943     1.90e- 3      6.05
15 mu_1       0.6      1.11      0.992     7.56e- 4      5.03
16 mu_1       0.7      1.15      0.891     7.74e- 6      3.50
17 mu_1       0.8      1.43      0.467     1.03e- 8      7.38
18 mu_1       0.9      2.17      0.0322    9.91e-14     30.2 
19 mu_0       0.1      0.622     0.000268  0            18.1 
20 mu_0       0.2      1.11      0.0120    0            15.6 
21 mu_0       0.3      1.29      0.150     0            11.2 
22 mu_0       0.4      1.31      0.574     0             6.63
23 mu_0       0.5      1.23      0.958     0             5.79
24 mu_0       0.6      1.13      0.903     0             6.17
25 mu_0       0.7      1.05      0.921     0             3.59
26 mu_0       0.8      1.10      0.800     0             3.92
27 mu_0       0.9      1.58      0.158     0            13.9 
[1] "Total run time was 93.334 seconds"
