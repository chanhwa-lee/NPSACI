
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1277"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  3  7  4  8  6  3  2  6 11  6  9  9  4  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06032 0.39272 0.64104 1.00000 4.89041 
[1] "event indicator table: "

  0   1 
763 514 
[1] "treatment indicator table: "

  0   1 
450 827 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 41.882 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.252 0.200
 2 mu         0.1   0.2 0.213 0.209
 3 mu         0.1   0.3 0.415 0.221
 4 mu         0.1   0.4 0.386 0.221
 5 mu         0.1   0.5 0.343 0.219
 6 mu         0.2   0.1 0.269 0.155
 7 mu         0.2   0.2 0.257 0.167
 8 mu         0.2   0.3 0.432 0.168
 9 mu         0.2   0.4 0.424 0.171
10 mu         0.2   0.5 0.397 0.171
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.551      0.00382 0.000000174      26.5 
 2 mu         0.2      0.675      0.0769  0.000294         18.9 
 3 mu         0.3      0.765      0.343   0.0112            9.88
 4 mu         0.4      0.866      0.749   0.0976            3.06
 5 mu         0.5      0.953      0.901   0.256             2.33
 6 mu         0.6      1.01       0.994   0.499             2.07
 7 mu         0.7      1.02       1.00    0.260             1.64
 8 mu         0.8      1.00       0.911   0.0352            2.29
 9 mu         0.9      1.00       0.594   0.000760         11.0 
10 mu_1       0.1      0.555      0.0170  0.00000105       21.7 
11 mu_1       0.2      0.706      0.184   0.000889         16.7 
12 mu_1       0.3      0.816      0.530   0.0225            5.86
13 mu_1       0.4      0.916      0.846   0.149             2.87
14 mu_1       0.5      0.984      0.946   0.296             2.25
15 mu_1       0.6      1.02       1.01    0.503             1.94
16 mu_1       0.7      1.02       0.994   0.193             1.79
17 mu_1       0.8      1.00       0.918   0.0251            2.40
18 mu_1       0.9      1.00       0.530   0.000510         12.2 
19 mu_0       0.1      0.551      0.00207 0.0000000770     29.4 
20 mu_0       0.2      0.667      0.0524  0.000145         19.5 
21 mu_0       0.3      0.743      0.270   0.00638          11.6 
22 mu_0       0.4      0.832      0.625   0.0554            3.85
23 mu_0       0.5      0.921      0.870   0.135             2.62
24 mu_0       0.6      0.987      0.991   0.280             2.27
25 mu_0       0.7      1.01       0.991   0.401             1.83
26 mu_0       0.8      1.00       0.968   0.0756            1.95
27 mu_0       0.9      0.972      0.875   0.00301           3.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.523    0.0000973  2.36e-15     36.6 
 2 mu         0.2      0.802    0.0121     3.09e-10     32.1 
 3 mu         0.3      0.922    0.0971     3.05e- 7     24.0 
 4 mu         0.4      1.03     0.377      4.05e- 5     12.2 
 5 mu         0.5      1.10     0.844      1.80e- 3      4.41
 6 mu         0.6      1.06     1.02       3.99e- 2      3.31
 7 mu         0.7      0.994    0.879      6.37e- 2      2.39
 8 mu         0.8      1.07     0.592      1.65e- 3      5.50
 9 mu         0.9      1.60     0.0873     2.29e- 6     39.3 
10 mu_1       0.1      0.862    0.000569   2.36e-14     45.7 
11 mu_1       0.2      0.901    0.0358     1.55e- 9     31.1 
12 mu_1       0.3      0.965    0.211      1.02e- 6     18.4 
13 mu_1       0.4      1.08     0.618      1.01e- 4      7.02
14 mu_1       0.5      1.11     1.01       3.60e- 3      4.41
15 mu_1       0.6      1.04     1.04       6.60e- 2      2.86
16 mu_1       0.7      0.990    0.867      2.09e- 2      2.96
17 mu_1       0.8      1.10     0.492      4.75e- 4      6.88
18 mu_1       0.9      1.67     0.0624     5.87e- 7     43.7 
19 mu_0       0.1      0.485    0.0000356  0            35.6 
20 mu_0       0.2      0.777    0.00462    0            35.1 
21 mu_0       0.3      0.903    0.0490     0            26.3 
22 mu_0       0.4      0.999    0.233      0            15.6 
23 mu_0       0.5      1.08     0.640      0             5.90
24 mu_0       0.6      1.08     1.06       0             4.14
25 mu_0       0.7      1.00     0.977      0             3.04
26 mu_0       0.8      0.961    0.780      0             3.05
27 mu_0       0.9      1.00     0.228      0             6.93
[1] "Total run time was 45.146 seconds"
