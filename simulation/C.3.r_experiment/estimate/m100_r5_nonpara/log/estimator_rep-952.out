
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1291"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  5  7 10  5  9  6  5  7  5  3  5 10  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01248 0.27626 0.57191 1.00000 5.73972 
[1] "event indicator table: "

  0   1 
764 527 
[1] "treatment indicator table: "

  0   1 
495 796 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 74.377 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.199 0.170
 2 mu         0.1   0.2 0.239 0.185
 3 mu         0.1   0.3 0.273 0.156
 4 mu         0.1   0.4 0.273 0.143
 5 mu         0.1   0.5 0.310 0.124
 6 mu         0.2   0.1 0.294 0.139
 7 mu         0.2   0.2 0.348 0.152
 8 mu         0.2   0.3 0.390 0.131
 9 mu         0.2   0.4 0.414 0.122
10 mu         0.2   0.5 0.458 0.109
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.372      0.0126  0.0000000111       8.50
 2 mu         0.2      0.678      0.150   0.0000447          7.49
 3 mu         0.3      0.894      0.491   0.00333            5.59
 4 mu         0.4      0.967      0.731   0.0323             4.79
 5 mu         0.5      0.981      0.893   0.140              2.49
 6 mu         0.6      1.01       0.997   0.370              1.69
 7 mu         0.7      1.06       1.03    0.277              2.16
 8 mu         0.8      1.11       1.04    0.0262             4.03
 9 mu         0.9      1.13       0.805   0.000147           8.35
10 mu_1       0.1      0.622      0.0512  0.0000000756      10.6 
11 mu_1       0.2      0.839      0.351   0.000153           5.38
12 mu_1       0.3      0.961      0.638   0.00721            5.82
13 mu_1       0.4      0.983      0.876   0.0529             4.24
14 mu_1       0.5      0.991      0.949   0.188              1.88
15 mu_1       0.6      1.03       1.02    0.441              1.59
16 mu_1       0.7      1.08       1.01    0.208              2.68
17 mu_1       0.8      1.11       1.04    0.0173             4.47
18 mu_1       0.9      1.13       0.743   0.0000884          8.63
19 mu_0       0.1      0.344      0.00756 0.00000000388      8.26
20 mu_0       0.2      0.637      0.113   0.0000176          8.17
21 mu_0       0.3      0.866      0.401   0.00167            5.58
22 mu_0       0.4      0.956      0.665   0.0186             5.16
23 mu_0       0.5      0.970      0.896   0.0916             3.11
24 mu_0       0.6      0.983      0.934   0.262              2.08
25 mu_0       0.7      1.03       1.02    0.327              1.81
26 mu_0       0.8      1.09       1.04    0.0616             2.52
27 mu_0       0.9      1.15       0.989   0.000676           5.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.43   0.0000314   1.23e-18     99.3 
 2 mu         0.2       4.44   0.00471     1.29e-12    136.  
 3 mu         0.3       3.45   0.0680      4.30e- 9     61.8 
 4 mu         0.4       1.97   0.354       1.36e- 6     22.6 
 5 mu         0.5       1.26   0.796       1.18e- 4      8.54
 6 mu         0.6       1.11   1.02        4.51e- 3      2.95
 7 mu         0.7       1.19   1.10        8.87e- 4      7.04
 8 mu         0.8       1.44   0.735       4.17e- 6     10.5 
 9 mu         0.9       2.41   0.0884      1.02e-10     78.0 
10 mu_1       0.1       4.39   0.000233    1.23e-17    165.  
11 mu_1       0.2       4.58   0.0142      6.47e-12    113.  
12 mu_1       0.3       2.80   0.163       1.43e- 8     43.2 
13 mu_1       0.4       1.56   0.588       3.39e- 6     14.1 
14 mu_1       0.5       1.13   0.887       2.35e- 4      4.27
15 mu_1       0.6       1.10   0.997       4.90e- 3      3.67
16 mu_1       0.7       1.23   1.04        1.81e- 4      7.54
17 mu_1       0.8       1.51   0.634       1.04e- 6     13.2 
18 mu_1       0.9       2.53   0.0658      2.27e-11     86.7 
19 mu_0       0.1       2.22   0.00000991  0            91.9 
20 mu_0       0.2       4.40   0.00221     0           141.  
21 mu_0       0.3       3.73   0.0326      0            73.6 
22 mu_0       0.4       2.25   0.200       0            28.2 
23 mu_0       0.5       1.40   0.707       0            12.8 
24 mu_0       0.6       1.12   0.926       0             4.60
25 mu_0       0.7       1.10   0.871       0             5.86
26 mu_0       0.8       1.13   0.842       0             8.58
27 mu_0       0.9       1.34   0.204       0            16.1 
[1] "Total run time was 79 seconds"
