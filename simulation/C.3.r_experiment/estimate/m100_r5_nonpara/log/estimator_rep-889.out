
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1271"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  5  3  6  7 11  3  9  6  7  7  5  6  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01421 0.28418 0.55429 0.89152 5.00000 
[1] "event indicator table: "

  0   1 
734 537 
[1] "treatment indicator table: "

  0   1 
500 771 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 141.825 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.319 0.117 
 2 mu         0.1   0.2 0.292 0.0986
 3 mu         0.1   0.3 0.273 0.0867
 4 mu         0.1   0.4 0.309 0.0834
 5 mu         0.1   0.5 0.308 0.0843
 6 mu         0.2   0.1 0.349 0.0779
 7 mu         0.2   0.2 0.363 0.0738
 8 mu         0.2   0.3 0.372 0.0697
 9 mu         0.2   0.4 0.428 0.0720
10 mu         0.2   0.5 0.442 0.0734
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.546       0.0263  9.93e-10     10.1 
 2 mu         0.2      0.830       0.247   8.05e- 6      6.53
 3 mu         0.3      0.945       0.592   1.06e- 3      4.01
 4 mu         0.4      0.984       0.876   2.40e- 2      3.73
 5 mu         0.5      0.977       0.947   1.90e- 1      2.81
 6 mu         0.6      0.971       0.963   3.84e- 1      1.82
 7 mu         0.7      0.987       0.991   2.66e- 1      1.81
 8 mu         0.8      1.01        1.01    1.32e- 1      2.63
 9 mu         0.9      1.03        0.659   3.33e- 3      4.23
10 mu_1       0.1      0.923       0.104   6.95e- 9     11.3 
11 mu_1       0.2      0.962       0.551   2.82e- 5      4.12
12 mu_1       0.3      0.987       0.807   2.48e- 3      4.44
13 mu_1       0.4      0.987       0.947   4.22e- 2      3.22
14 mu_1       0.5      0.973       0.963   2.68e- 1      2.58
15 mu_1       0.6      0.973       0.996   3.22e- 1      1.52
16 mu_1       0.7      0.992       1.01    2.35e- 1      1.89
17 mu_1       0.8      1.01        0.990   8.40e- 2      2.67
18 mu_1       0.9      1.04        0.612   2.24e- 3      4.63
19 mu_0       0.1      0.505       0.0167  3.31e-10      9.95
20 mu_0       0.2      0.797       0.185   3.02e- 6      7.14
21 mu_0       0.3      0.928       0.527   4.54e- 4      3.82
22 mu_0       0.4      0.982       0.857   1.19e- 2      4.06
23 mu_0       0.5      0.982       0.897   1.11e- 1      3.04
24 mu_0       0.6      0.968       0.972   3.16e- 1      2.30
25 mu_0       0.7      0.976       1.00    2.35e- 1      1.61
26 mu_0       0.8      0.995       0.981   1.45e- 1      2.47
27 mu_0       0.9      0.998       0.966   1.32e- 2      2.92
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.583    0.000138   2.53e-15     16.3 
 2 mu         0.2      1.16     0.00902    5.25e-10     17.6 
 3 mu         0.3      1.39     0.111      5.94e- 7     15.8 
 4 mu         0.4      1.30     0.444      7.74e- 5      7.87
 5 mu         0.5      1.11     0.839      2.98e- 3      6.87
 6 mu         0.6      0.993    0.844      3.63e- 3      3.97
 7 mu         0.7      0.999    0.939      4.33e- 5      2.97
 8 mu         0.8      1.14     0.643      6.56e- 8      7.41
 9 mu         0.9      1.53     0.120      7.12e-13     43.4 
10 mu_1       0.1      1.11     0.000938   2.28e-14     24.4 
11 mu_1       0.2      1.40     0.0290     2.36e- 9     19.4 
12 mu_1       0.3      1.40     0.222      1.78e- 6     13.2 
13 mu_1       0.4      1.22     0.597      1.74e- 4      7.00
14 mu_1       0.5      1.05     0.752      5.37e- 3      6.47
15 mu_1       0.6      0.975    0.872      9.06e- 4      3.55
16 mu_1       0.7      1.01     0.907      9.27e- 6      3.18
17 mu_1       0.8      1.17     0.488      1.23e- 8      9.27
18 mu_1       0.9      1.57     0.0923     1.19e-13     48.2 
19 mu_0       0.1      0.525    0.0000467  0            15.4 
20 mu_0       0.2      1.10     0.00349    0            18.7 
21 mu_0       0.3      1.38     0.0564     0            17.0 
22 mu_0       0.4      1.35     0.280      0            10.5 
23 mu_0       0.5      1.17     0.670      0             7.28
24 mu_0       0.6      1.02     0.731      0             5.25
25 mu_0       0.7      0.970    0.859      0             3.26
26 mu_0       0.8      1.01     0.949      0             4.62
27 mu_0       0.9      1.17     0.320      0             8.55
[1] "Total run time was 146.762 seconds"
