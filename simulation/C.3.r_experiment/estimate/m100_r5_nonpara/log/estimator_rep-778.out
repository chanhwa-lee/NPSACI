
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1298"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  8  2  8  8  4  7  5  5  5  3  7  4  9  9 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05861 0.38189 0.65175 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
804 494 
[1] "treatment indicator table: "

  0   1 
462 836 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.786 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.348 0.100 
 2 mu         0.1   0.2 0.528 0.152 
 3 mu         0.1   0.3 0.532 0.144 
 4 mu         0.1   0.4 0.523 0.140 
 5 mu         0.1   0.5 0.559 0.146 
 6 mu         0.2   0.1 0.360 0.0757
 7 mu         0.2   0.2 0.539 0.122 
 8 mu         0.2   0.3 0.567 0.114 
 9 mu         0.2   0.4 0.568 0.111 
10 mu         0.2   0.5 0.618 0.118 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.652      0.0157  0.0000000997     17.9 
 2 mu         0.2      0.866      0.251   0.000159         14.0 
 3 mu         0.3      0.937      0.733   0.00609           7.24
 4 mu         0.4      0.966      0.911   0.0579            2.93
 5 mu         0.5      0.976      0.923   0.229             2.11
 6 mu         0.6      0.990      0.964   0.328             1.65
 7 mu         0.7      1.01       0.985   0.153             1.64
 8 mu         0.8      1.02       0.984   0.217             2.29
 9 mu         0.9      1.01       0.917   0.0106            3.61
10 mu_1       0.1      0.962      0.0817  0.000000630      19.9 
11 mu_1       0.2      0.916      0.534   0.000507          7.78
12 mu_1       0.3      0.939      0.811   0.0127            3.04
13 mu_1       0.4      0.965      0.887   0.0926            2.62
14 mu_1       0.5      0.980      0.925   0.313             2.02
15 mu_1       0.6      0.999      0.994   0.281             1.67
16 mu_1       0.7      1.02       1.02    0.138             1.71
17 mu_1       0.8      1.02       0.968   0.174             2.46
18 mu_1       0.9      1.01       0.848   0.00794           3.65
19 mu_0       0.1      0.617      0.00983 0.0000000408     17.7 
20 mu_0       0.2      0.853      0.193   0.0000681        15.5 
21 mu_0       0.3      0.936      0.618   0.00326           9.16
22 mu_0       0.4      0.966      0.883   0.0347            4.22
23 mu_0       0.5      0.971      0.935   0.146             2.22
24 mu_0       0.6      0.978      0.919   0.304             1.74
25 mu_0       0.7      0.997      0.982   0.187             1.61
26 mu_0       0.8      1.01       0.984   0.0834            1.95
27 mu_0       0.9      1.00       0.942   0.00242           3.25
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     19.5     0.0000119   3.49e-19   1035.  
 2 mu         0.2     11.5     0.00197     3.66e-13    629.  
 3 mu         0.3      3.90    0.0312      1.22e- 9    167.  
 4 mu         0.4      1.60    0.252       3.84e- 7     35.2 
 5 mu         0.5      1.09    0.770       3.33e- 5     10.5 
 6 mu         0.6      1.01    0.959       1.28e- 3      3.11
 7 mu         0.7      1.02    0.936       1.09e- 4      3.08
 8 mu         0.8      1.01    0.771       9.62e- 8      3.30
 9 mu         0.9      1.01    0.0995      4.64e-13     10.7 
10 mu_1       0.1     21.1     0.0000893   3.49e-18   1150.  
11 mu_1       0.2      6.92    0.00802     1.83e-12    349.  
12 mu_1       0.3      2.28    0.0765      4.06e- 9     61.9 
13 mu_1       0.4      1.26    0.421       9.60e- 7     26.4 
14 mu_1       0.5      1.03    0.876       6.66e- 5      6.27
15 mu_1       0.6      1.00    0.842       2.13e- 3      3.37
16 mu_1       0.7      1.03    0.976       1.55e- 5      3.24
17 mu_1       0.8      1.03    0.652       1.20e- 8      4.12
18 mu_1       0.9      1.04    0.0722      5.16e-14     11.9 
19 mu_0       0.1     19.3     0.00000207  0          1023.  
20 mu_0       0.2     12.7     0.000573    0           699.  
21 mu_0       0.3      4.59    0.0126      0           212.  
22 mu_0       0.4      1.82    0.139       0            41.0 
23 mu_0       0.5      1.16    0.562       0            14.6 
24 mu_0       0.6      1.02    0.938       0             2.73
25 mu_0       0.7      0.990   0.896       0             3.59
26 mu_0       0.8      0.943   0.796       0             3.71
27 mu_0       0.9      0.750   0.134       0             4.80
[1] "Total run time was 64.811 seconds"
