
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1262"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  9  5  2  5  5  8 13  6  5 11  5  6  5  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03125 0.35133 0.62899 1.00000 4.76504 
[1] "event indicator table: "

  0   1 
727 535 
[1] "treatment indicator table: "

  0   1 
493 769 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.09 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.299 0.113 
 2 mu         0.1   0.2 0.390 0.138 
 3 mu         0.1   0.3 0.382 0.134 
 4 mu         0.1   0.4 0.402 0.138 
 5 mu         0.1   0.5 0.398 0.143 
 6 mu         0.2   0.1 0.301 0.0792
 7 mu         0.2   0.2 0.401 0.113 
 8 mu         0.2   0.3 0.415 0.114 
 9 mu         0.2   0.4 0.433 0.115 
10 mu         0.2   0.5 0.446 0.124 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.652      0.00492  1.86e- 9     16.9 
 2 mu         0.2      0.838      0.102    8.20e- 6     13.9 
 3 mu         0.3      0.824      0.383    8.05e- 4      7.38
 4 mu         0.4      0.859      0.698    1.58e- 2      3.54
 5 mu         0.5      0.954      0.862    1.22e- 1      2.24
 6 mu         0.6      1.01       0.985    3.81e- 1      1.85
 7 mu         0.7      1.01       1.00     1.34e- 1      1.62
 8 mu         0.8      0.969      0.905    1.71e- 2      2.45
 9 mu         0.9      0.817      0.396    3.73e- 4      4.08
10 mu_1       0.1      0.792      0.0243   1.28e- 8     15.9 
11 mu_1       0.2      0.836      0.245    2.84e- 5     12.3 
12 mu_1       0.3      0.811      0.596    1.88e- 3      4.51
13 mu_1       0.4      0.883      0.794    2.80e- 2      2.88
14 mu_1       0.5      0.979      0.932    1.76e- 1      2.19
15 mu_1       0.6      1.02       1.02     2.88e- 1      1.78
16 mu_1       0.7      1.00       1.01     6.95e- 2      1.75
17 mu_1       0.8      0.963      0.831    8.03e- 3      2.62
18 mu_1       0.9      0.801      0.359    1.61e- 4      4.32
19 mu_0       0.1      0.637      0.00306  6.46e-10     18.7 
20 mu_0       0.2      0.839      0.0662   3.15e- 6     14.3 
21 mu_0       0.3      0.830      0.271    3.46e- 4      8.60
22 mu_0       0.4      0.843      0.568    7.68e- 3      4.72
23 mu_0       0.5      0.928      0.830    6.79e- 2      3.01
24 mu_0       0.6      1.00       0.986    3.13e- 1      1.95
25 mu_0       0.7      1.01       1.01     2.41e- 1      1.68
26 mu_0       0.8      0.991      1.02     5.33e- 2      2.13
27 mu_0       0.9      0.961      0.728    2.28e- 3      3.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.78    0.000121   8.18e-14    228.  
 2 mu         0.2       4.05    0.00954    4.77e- 9    277.  
 3 mu         0.3       2.60    0.0991     2.36e- 6    110.  
 4 mu         0.4       1.54    0.435      1.41e- 4     22.2 
 5 mu         0.5       1.14    0.856      3.22e- 3      5.60
 6 mu         0.6       1.07    1.08       1.05e- 2      2.80
 7 mu         0.7       1.20    1.02       1.67e- 4      4.67
 8 mu         0.8       1.45    0.541      3.80e- 7     20.1 
 9 mu         0.9       2.11    0.0608     8.26e-12     92.9 
10 mu_1       0.1       4.67    0.000826   7.70e-13    359.  
11 mu_1       0.2       3.83    0.0339     2.24e- 8    218.  
12 mu_1       0.3       2.10    0.217      7.39e- 6     58.0 
13 mu_1       0.4       1.32    0.687      3.54e- 4      8.75
14 mu_1       0.5       1.07    0.937      6.43e- 3      3.98
15 mu_1       0.6       1.08    1.12       2.77e- 3      3.63
16 mu_1       0.7       1.24    0.942      3.77e- 5      5.26
17 mu_1       0.8       1.51    0.407      7.51e- 8     25.1 
18 mu_1       0.9       2.21    0.0406     1.45e-12    103.  
19 mu_0       0.1       2.57    0.0000397  0           213.  
20 mu_0       0.2       4.11    0.00411    0           291.  
21 mu_0       0.3       2.82    0.0493     0           133.  
22 mu_0       0.4       1.69    0.264      0            31.1 
23 mu_0       0.5       1.20    0.672      0             7.46
24 mu_0       0.6       1.05    0.992      0             3.24
25 mu_0       0.7       1.10    0.976      0             3.43
26 mu_0       0.8       1.22    0.848      0             7.19
27 mu_0       0.9       1.16    0.192      0            14.9 
[1] "Total run time was 43.29 seconds"
