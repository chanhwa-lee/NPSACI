
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1218"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  7  7  5  9  4 10  6  7  9  6  6  6  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03924 0.35771 0.61846 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
731 487 
[1] "treatment indicator table: "

  0   1 
475 743 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 42.993 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.214 0.0588
 2 mu         0.1   0.2 0.241 0.0608
 3 mu         0.1   0.3 0.258 0.0597
 4 mu         0.1   0.4 0.250 0.0572
 5 mu         0.1   0.5 0.284 0.0626
 6 mu         0.2   0.1 0.225 0.0411
 7 mu         0.2   0.2 0.276 0.0448
 8 mu         0.2   0.3 0.304 0.0413
 9 mu         0.2   0.4 0.306 0.0395
10 mu         0.2   0.5 0.355 0.0442
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.448       0.0693 0.00000000421      6.40
 2 mu         0.2      0.669       0.460  0.0000168          3.29
 3 mu         0.3      0.890       0.778  0.00147            3.34
 4 mu         0.4      0.996       0.905  0.0254             3.02
 5 mu         0.5      0.994       0.981  0.168              1.90
 6 mu         0.6      0.981       0.994  0.476              2.00
 7 mu         0.7      1.00        0.963  0.327              1.89
 8 mu         0.8      1.01        0.850  0.199              2.52
 9 mu         0.9      0.963       0.686  0.00969            4.46
10 mu_1       0.1      0.563       0.190  0.0000000275       3.70
11 mu_1       0.2      0.845       0.608  0.0000554          3.98
12 mu_1       0.3      0.998       0.847  0.00327            3.43
13 mu_1       0.4      1.02        1.02   0.0430             2.69
14 mu_1       0.5      0.990       1.00   0.233              1.92
15 mu_1       0.6      0.982       0.990  0.457              2.01
16 mu_1       0.7      1.01        0.951  0.309              2.06
17 mu_1       0.8      1.01        0.845  0.103              2.77
18 mu_1       0.9      0.961       0.640  0.00704            4.54
19 mu_0       0.1      0.436       0.0520 0.00000000162      7.11
20 mu_0       0.2      0.624       0.375  0.00000715         3.21
21 mu_0       0.3      0.844       0.746  0.000701           3.52
22 mu_0       0.4      0.979       0.910  0.0137             3.25
23 mu_0       0.5      0.998       0.989  0.104              2.07
24 mu_0       0.6      0.979       0.991  0.368              1.99
25 mu_0       0.7      0.993       1.01   0.364              2.04
26 mu_0       0.8      1.02        0.935  0.309              2.63
27 mu_0       0.9      0.976       0.851  0.0335             3.82
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.01    0.000162   1.36e-15    452.  
 2 mu         0.2       3.26    0.0132     3.57e-10    217.  
 3 mu         0.3       1.85    0.135      5.28e- 7     44.1 
 4 mu         0.4       1.44    0.607      9.36e- 5      8.92
 5 mu         0.5       1.22    1.14       4.84e- 3      5.13
 6 mu         0.6       1.12    0.975      7.45e- 3      3.90
 7 mu         0.7       1.15    1.17       5.71e- 5      3.24
 8 mu         0.8       1.53    0.765      5.05e- 8     24.5 
 9 mu         0.9       3.56    0.0798     2.44e-13    205.  
10 mu_1       0.1       5.62    0.00107    1.36e-14    452.  
11 mu_1       0.2       2.52    0.0382     1.79e- 9    108.  
12 mu_1       0.3       1.61    0.261      1.76e- 6     14.7 
13 mu_1       0.4       1.32    0.894      2.34e- 4      6.60
14 mu_1       0.5       1.15    1.02       8.71e- 3      5.13
15 mu_1       0.6       1.10    0.974      1.24e- 3      4.06
16 mu_1       0.7       1.18    1.10       8.16e- 6      3.69
17 mu_1       0.8       1.63    0.584      6.31e- 9     30.7 
18 mu_1       0.9       3.80    0.0515     2.71e-14    227.  
19 mu_0       0.1       4.94    0.0000615  0           452.  
20 mu_0       0.2       3.45    0.00679    0           244.  
21 mu_0       0.3       1.96    0.0757     0            56.7 
22 mu_0       0.4       1.52    0.406      0            11.6 
23 mu_0       0.5       1.30    0.969      0             6.05
24 mu_0       0.6       1.14    0.953      0             4.63
25 mu_0       0.7       1.08    0.959      0             4.05
26 mu_0       0.8       1.11    0.823      0             4.00
27 mu_0       0.9       1.39    0.180      0            13.8 
[1] "Total run time was 45.975 seconds"
