
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  7  7  4  4  3  3  7 16  7  8  3  2  5 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02418 0.30719 0.61603 1.00000 5.28491 
[1] "event indicator table: "

  0   1 
730 554 
[1] "treatment indicator table: "

  0   1 
458 826 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 69.786 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.370 0.183 
 2 mu         0.1   0.2 0.387 0.190 
 3 mu         0.1   0.3 0.388 0.212 
 4 mu         0.1   0.4 0.398 0.225 
 5 mu         0.1   0.5 0.417 0.241 
 6 mu         0.2   0.1 0.317 0.0955
 7 mu         0.2   0.2 0.325 0.0863
 8 mu         0.2   0.3 0.323 0.0872
 9 mu         0.2   0.4 0.337 0.0916
10 mu         0.2   0.5 0.354 0.0991
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.637      0.00597 0.0000000434     27.7 
 2 mu         0.2      0.590      0.0906  0.0000320         9.47
 3 mu         0.3      0.722      0.383   0.00128           3.66
 4 mu         0.4      0.878      0.726   0.0151            2.50
 5 mu         0.5      0.969      0.943   0.0877            2.61
 6 mu         0.6      0.987      0.959   0.315             1.98
 7 mu         0.7      0.985      1.01    0.312             1.57
 8 mu         0.8      0.955      1.01    0.0344            1.91
 9 mu         0.9      0.761      0.658   0.000354          2.61
10 mu_1       0.1      0.540      0.0215  0.000000334      17.3 
11 mu_1       0.2      0.629      0.207   0.000124          3.30
12 mu_1       0.3      0.796      0.586   0.00332           2.66
13 mu_1       0.4      0.927      0.834   0.0294            2.45
14 mu_1       0.5      0.986      0.966   0.138             2.60
15 mu_1       0.6      0.990      0.972   0.419             1.78
16 mu_1       0.7      0.985      1.01    0.235             1.70
17 mu_1       0.8      0.941      0.984   0.0235            1.95
18 mu_1       0.9      0.735      0.601   0.000223          2.64
19 mu_0       0.1      0.647      0.00346 0.0000000110     28.8 
20 mu_0       0.2      0.581      0.0535  0.00000909       11.2 
21 mu_0       0.3      0.690      0.298   0.000410          5.09
22 mu_0       0.4      0.846      0.645   0.00552           2.54
23 mu_0       0.5      0.953      0.914   0.0373            2.62
24 mu_0       0.6      0.982      0.982   0.158             2.28
25 mu_0       0.7      0.985      0.996   0.283             1.70
26 mu_0       0.8      1.01       1.00    0.0779            2.04
27 mu_0       0.9      0.987      1.08    0.00154           2.33
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.20    0.0000341  1.13e-14    193.  
 2 mu         0.2       2.85    0.00468    2.34e- 9    211.  
 3 mu         0.3       2.12    0.0589     7.65e- 7    109.  
 4 mu         0.4       1.54    0.319      4.29e- 5     35.6 
 5 mu         0.5       1.29    0.795      9.76e- 4      7.49
 6 mu         0.6       1.18    1.00       1.25e- 2      3.52
 7 mu         0.7       1.23    1.04       5.77e- 4     11.1 
 8 mu         0.8       1.73    0.593      1.50e- 6     42.0 
 9 mu         0.9       2.96    0.0600     3.66e-11     97.1 
10 mu_1       0.1       3.63    0.000254   1.02e-13    296.  
11 mu_1       0.2       2.65    0.0150     1.05e- 8    162.  
12 mu_1       0.3       1.72    0.125      2.55e- 6     56.0 
13 mu_1       0.4       1.35    0.555      1.07e- 4     13.7 
14 mu_1       0.5       1.21    0.910      1.95e- 3      4.85
15 mu_1       0.6       1.15    1.07       1.04e- 2      3.40
16 mu_1       0.7       1.28    0.951      1.65e- 4     14.7 
17 mu_1       0.8       1.87    0.489      3.74e- 7     48.7 
18 mu_1       0.9       3.08    0.0429     8.13e-12    100.  
19 mu_0       0.1       2.05    0.0000111  0           181.  
20 mu_0       0.2       2.91    0.00178    0           223.  
21 mu_0       0.3       2.29    0.0301     0           132.  
22 mu_0       0.4       1.66    0.191      0            50.2 
23 mu_0       0.5       1.38    0.608      0            12.7 
24 mu_0       0.6       1.22    0.962      0             4.05
25 mu_0       0.7       1.11    1.04       0             3.08
26 mu_0       0.8       1.16    0.745      0            15.0 
27 mu_0       0.9       1.79    0.157      0            69.3 
[1] "Total run time was 73.974 seconds"
