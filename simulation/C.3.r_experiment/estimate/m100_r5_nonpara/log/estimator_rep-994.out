
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1300"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  6  2  3  4 13  8  4  6  6  5  6 10  4 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02616 0.29696 0.61399 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
768 532 
[1] "treatment indicator table: "

  0   1 
470 830 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 703
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 42.334 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est    se
   <chr>    <dbl> <dbl>  <dbl> <dbl>
 1 mu         0.1   0.1 0.103  0.124
 2 mu         0.1   0.2 0.0832 0.135
 3 mu         0.1   0.3 0.0720 0.158
 4 mu         0.1   0.4 0.175  0.137
 5 mu         0.1   0.5 0.171  0.153
 6 mu         0.2   0.1 0.231  0.102
 7 mu         0.2   0.2 0.251  0.110
 8 mu         0.2   0.3 0.271  0.131
 9 mu         0.2   0.4 0.380  0.130
10 mu         0.2   0.5 0.398  0.145
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.394      0.0125  0.00000000560      8.81
 2 mu         0.2      0.756      0.175   0.0000143          5.79
 3 mu         0.3      0.982      0.471   0.000858           6.91
 4 mu         0.4      1.03       0.892   0.0134             4.49
 5 mu         0.5      1.03       1.04    0.0987             2.09
 6 mu         0.6      1.01       0.995   0.291              1.61
 7 mu         0.7      0.986      0.991   0.180              1.76
 8 mu         0.8      0.998      0.902   0.0106             3.72
 9 mu         0.9      1.01       0.679   0.0000316          8.65
10 mu_1       0.1      0.612      0.0578  0.0000000420       8.12
11 mu_1       0.2      0.922      0.361   0.0000538          6.27
12 mu_1       0.3      1.03       0.695   0.00226            6.91
13 mu_1       0.4      1.04       0.963   0.0267             3.37
14 mu_1       0.5      1.04       1.02    0.160              1.84
15 mu_1       0.6      1.01       0.965   0.247              1.64
16 mu_1       0.7      0.984      0.967   0.125              1.79
17 mu_1       0.8      0.998      0.899   0.00655            4.15
18 mu_1       0.9      1.00       0.613   0.0000175          9.08
19 mu_0       0.1      0.370      0.00724 0.00000000155      9.79
20 mu_0       0.2      0.714      0.124   0.00000385         6.37
21 mu_0       0.3      0.960      0.381   0.000257           6.91
22 mu_0       0.4      1.03       0.793   0.00454            5.24
23 mu_0       0.5      1.03       1.01    0.0379             2.36
24 mu_0       0.6      1.02       1.01    0.193              1.73
25 mu_0       0.7      0.991      0.980   0.309              1.73
26 mu_0       0.8      0.996      0.996   0.0269             2.00
27 mu_0       0.9      1.08       0.941   0.000159           5.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.603    0.0000529  2.64e-18     28.1 
 2 mu         0.2      1.18     0.00800    2.76e-12     43.2 
 3 mu         0.3      1.23     0.0858     9.19e- 9     22.5 
 4 mu         0.4      1.23     0.340      2.90e- 6     17.2 
 5 mu         0.5      1.21     0.801      2.51e- 4     11.5 
 6 mu         0.6      1.15     1.08       7.09e- 3      3.90
 7 mu         0.7      1.09     1.16       5.88e- 4      2.80
 8 mu         0.8      1.10     0.654      1.53e- 6      6.14
 9 mu         0.9      1.68     0.0870     3.73e-11     32.0 
10 mu_1       0.1      1.15     0.000327   2.64e-17     49.6 
11 mu_1       0.2      1.33     0.0287     1.38e-11     38.1 
12 mu_1       0.3      1.25     0.183      3.06e- 8     14.6 
13 mu_1       0.4      1.24     0.585      7.25e- 6     17.2 
14 mu_1       0.5      1.20     1.02       5.03e- 4      9.22
15 mu_1       0.6      1.14     1.08       1.05e- 2      3.25
16 mu_1       0.7      1.08     1.07       1.68e- 4      3.00
17 mu_1       0.8      1.11     0.517      3.82e- 7      7.19
18 mu_1       0.9      1.76     0.0552     8.29e-12     35.6 
19 mu_0       0.1      0.542    0.0000244  0            25.7 
20 mu_0       0.2      1.14     0.00246    0            44.5 
21 mu_0       0.3      1.22     0.0318     0            26.5 
22 mu_0       0.4      1.22     0.198      0            17.2 
23 mu_0       0.5      1.21     0.609      0            13.8 
24 mu_0       0.6      1.17     0.981      0             5.11
25 mu_0       0.7      1.12     1.12       0             2.92
26 mu_0       0.8      1.03     0.923      0             3.41
27 mu_0       0.9      0.991    0.183      0            11.2 
[1] "Total run time was 45.718 seconds"
