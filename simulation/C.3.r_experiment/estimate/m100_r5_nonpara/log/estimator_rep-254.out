
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1205"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  6  7  8  7  6  3  7  8  3 10  4  5  3  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02475 0.29789 0.57071 0.98060 4.00000 
[1] "event indicator table: "

  0   1 
692 513 
[1] "treatment indicator table: "

  0   1 
463 742 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 588
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.689 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.257 0.107 
 2 mu         0.1   0.2 0.361 0.163 
 3 mu         0.1   0.3 0.346 0.142 
 4 mu         0.1   0.4 0.369 0.145 
 5 mu         0.1   0.5 0.379 0.157 
 6 mu         0.2   0.1 0.262 0.0714
 7 mu         0.2   0.2 0.372 0.133 
 8 mu         0.2   0.3 0.393 0.0993
 9 mu         0.2   0.4 0.422 0.0967
10 mu         0.2   0.5 0.442 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.607       0.0545 0.00000000501     16.9 
 2 mu         0.2      0.806       0.369  0.0000207          9.58
 3 mu         0.3      0.975       0.773  0.00187           12.0 
 4 mu         0.4      1.07        0.911  0.0328             9.34
 5 mu         0.5      1.09        0.983  0.213              4.73
 6 mu         0.6      1.06        1.03   0.491              2.04
 7 mu         0.7      1.00        0.986  0.420              1.83
 8 mu         0.8      0.945       0.898  0.0912             2.11
 9 mu         0.9      0.987       0.634  0.00323            6.94
10 mu_1       0.1      0.699       0.187  0.0000000343       4.75
11 mu_1       0.2      0.911       0.643  0.0000710         12.2 
12 mu_1       0.3      1.04        0.867  0.00429           12.0 
13 mu_1       0.4      1.08        0.955  0.0567             7.41
14 mu_1       0.5      1.08        1.01   0.271              3.27
15 mu_1       0.6      1.04        1.02   0.471              1.95
16 mu_1       0.7      0.986       0.958  0.298              1.91
17 mu_1       0.8      0.941       0.886  0.0612             2.31
18 mu_1       0.9      0.989       0.578  0.00193            7.31
19 mu_0       0.1      0.596       0.0401 0.00000000175     18.8 
20 mu_0       0.2      0.779       0.280  0.00000811        11.9 
21 mu_0       0.3      0.949       0.703  0.000831          12.0 
22 mu_0       0.4      1.06        0.874  0.0168            10.6 
23 mu_0       0.5      1.09        0.964  0.131              6.20
24 mu_0       0.6      1.08        1.06   0.392              2.53
25 mu_0       0.7      1.03        0.989  0.592              1.82
26 mu_0       0.8      0.960       0.922  0.185              2.14
27 mu_0       0.9      0.972       0.922  0.0119             3.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      12.6     0.0000960  8.44e-17    827.  
 2 mu         0.2      16.6     0.0117     3.93e-11   1005.  
 3 mu         0.3       8.28    0.127      7.63e- 8    401.  
 4 mu         0.4       3.08    0.490      1.55e- 5     80.6 
 5 mu         0.5       1.57    1.03       8.94e- 4     10.1 
 6 mu         0.6       1.24    1.11       2.29e- 2      4.29
 7 mu         0.7       1.22    1.20       6.59e- 3      3.59
 8 mu         0.8       1.43    0.590      1.50e- 5     15.5 
 9 mu         0.9       1.98    0.0773     3.25e-10     64.4 
10 mu_1       0.1      20.8     0.000520   8.02e-16   1306.  
11 mu_1       0.2      14.1     0.0334     1.87e-10    794.  
12 mu_1       0.3       5.16    0.286      2.42e- 7    211.  
13 mu_1       0.4       1.97    0.831      3.67e- 5     31.8 
14 mu_1       0.5       1.29    1.03       1.70e- 3      5.91
15 mu_1       0.6       1.18    1.17       3.62e- 2      4.21
16 mu_1       0.7       1.23    1.02       1.49e- 3      3.78
17 mu_1       0.8       1.47    0.444      2.96e- 6     18.3 
18 mu_1       0.9       2.02    0.0483     5.71e-11     67.8 
19 mu_0       0.1      11.7     0.0000363  0           774.  
20 mu_0       0.2      17.2     0.00583    0          1058.  
21 mu_0       0.3       9.61    0.0593     0           482.  
22 mu_0       0.4       3.81    0.281      0           113.  
23 mu_0       0.5       1.84    0.838      0            16.6 
24 mu_0       0.6       1.34    1.13       0             6.24
25 mu_0       0.7       1.20    1.12       0             3.67
26 mu_0       0.8       1.26    0.912      0             4.24
27 mu_0       0.9       1.63    0.195      0            33.9 
[1] "Total run time was 57.846 seconds"
