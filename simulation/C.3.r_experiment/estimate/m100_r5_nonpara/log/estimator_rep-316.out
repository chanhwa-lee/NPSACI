
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1313"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  3  6  5  6  4 11  7  5 10  9  6 10  8  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03864 0.34595 0.60066 0.96940 6.00000 
[1] "event indicator table: "

  0   1 
791 522 
[1] "treatment indicator table: "

  0   1 
491 822 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 94.397 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.394 0.100 
 2 mu         0.1   0.2 0.428 0.0998
 3 mu         0.1   0.3 0.550 0.151 
 4 mu         0.1   0.4 0.591 0.147 
 5 mu         0.1   0.5 0.588 0.144 
 6 mu         0.2   0.1 0.407 0.0719
 7 mu         0.2   0.2 0.468 0.0759
 8 mu         0.2   0.3 0.578 0.107 
 9 mu         0.2   0.4 0.617 0.106 
10 mu         0.2   0.5 0.630 0.104 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.863       0.0397 0.00000156      13.5 
 2 mu         0.2      1.12        0.435  0.000711         8.15
 3 mu         0.3      1.15        0.997  0.0168           4.81
 4 mu         0.4      1.12        1.07   0.112            3.04
 5 mu         0.5      1.06        1.06   0.268            2.14
 6 mu         0.6      0.993       0.930  0.286            1.63
 7 mu         0.7      0.940       0.963  0.209            1.62
 8 mu         0.8      0.941       0.881  0.0230           2.14
 9 mu         0.9      1.01        0.773  0.000320         5.40
10 mu_1       0.1      1.19        0.139  0.00000916      11.5 
11 mu_1       0.2      1.17        0.782  0.00210          6.06
12 mu_1       0.3      1.13        0.992  0.0334           3.47
13 mu_1       0.4      1.10        1.06   0.170            3.03
14 mu_1       0.5      1.04        1.01   0.220            1.76
15 mu_1       0.6      0.976       0.952  0.323            1.59
16 mu_1       0.7      0.934       0.936  0.134            1.69
17 mu_1       0.8      0.946       0.866  0.0135           2.25
18 mu_1       0.9      1.02        0.751  0.000173         5.80
19 mu_0       0.1      0.827       0.0296 0.000000711     13.7 
20 mu_0       0.2      1.11        0.349  0.000364         9.06
21 mu_0       0.3      1.16        0.938  0.00969          5.38
22 mu_0       0.4      1.14        1.07   0.0729           3.43
23 mu_0       0.5      1.08        1.07   0.252            2.53
24 mu_0       0.6      1.02        1.04   0.231            1.69
25 mu_0       0.7      0.954       0.941  0.269            1.68
26 mu_0       0.8      0.924       0.907  0.0611           1.80
27 mu_0       0.9      0.941       0.843  0.00159          2.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.661    0.0000604  3.76e-17     16.9 
 2 mu         0.2      0.993    0.00997    9.86e-12     14.6 
 3 mu         0.3      1.01     0.105      1.46e- 8      9.79
 4 mu         0.4      0.994    0.385      2.59e- 6      5.68
 5 mu         0.5      1.01     0.779      1.44e- 4      3.34
 6 mu         0.6      1.04     1.03       3.82e- 3      3.22
 7 mu         0.7      1.08     1.02       3.41e- 4      3.86
 8 mu         0.8      1.18     0.654      2.29e- 6      7.23
 9 mu         0.9      1.44     0.0586     3.53e-10     23.6 
10 mu_1       0.1      1.13     0.000398   3.76e-16     22.5 
11 mu_1       0.2      1.09     0.0285     4.93e-11     11.9 
12 mu_1       0.3      0.994    0.246      4.86e- 8      8.70
13 mu_1       0.4      0.980    0.571      6.47e- 6      3.78
14 mu_1       0.5      1.00     0.946      2.87e- 4      3.34
15 mu_1       0.6      1.03     1.00       2.34e- 3      3.16
16 mu_1       0.7      1.08     0.951      6.49e- 5      4.29
17 mu_1       0.8      1.19     0.497      3.81e- 7      8.42
18 mu_1       0.9      1.46     0.0426     5.23e-11     24.6 
19 mu_0       0.1      0.608    0.0000245  0            16.3 
20 mu_0       0.2      0.969    0.00422    0            15.8 
21 mu_0       0.3      1.02     0.0466     0            10.3 
22 mu_0       0.4      1.00     0.245      0             6.94
23 mu_0       0.5      1.02     0.629      0             3.70
24 mu_0       0.6      1.04     1.01       0             3.32
25 mu_0       0.7      1.07     0.984      0             2.86
26 mu_0       0.8      1.12     0.748      0             5.49
27 mu_0       0.9      1.26     0.0998     0            15.1 
[1] "Total run time was 101.799 seconds"
