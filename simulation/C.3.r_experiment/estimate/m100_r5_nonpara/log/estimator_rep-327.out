
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7 10  3 10  5  9  6  2  3  6  9  6  5  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03048 0.30169 0.59858 0.99937 6.00000 
[1] "event indicator table: "

  0   1 
732 520 
[1] "treatment indicator table: "

  0   1 
493 759 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 590
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 41.328 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.504 0.110 
 2 mu         0.1   0.2 0.551 0.133 
 3 mu         0.1   0.3 0.614 0.152 
 4 mu         0.1   0.4 0.676 0.163 
 5 mu         0.1   0.5 0.736 0.173 
 6 mu         0.2   0.1 0.484 0.0545
 7 mu         0.2   0.2 0.551 0.0626
 8 mu         0.2   0.3 0.613 0.0703
 9 mu         0.2   0.4 0.686 0.0756
10 mu         0.2   0.5 0.733 0.0811
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.22         0.303 0.00000183      18.8 
 2 mu         0.2      1.26         0.778 0.000909         6.09
 3 mu         0.3      1.22         1.27  0.0239           4.15
 4 mu         0.4      1.14         1.09  0.155            2.28
 5 mu         0.5      1.07         1.07  0.302            1.83
 6 mu         0.6      1.02         1.02  0.241            1.81
 7 mu         0.7      0.951        0.915 0.362            1.78
 8 mu         0.8      0.867        0.809 0.0606           1.83
 9 mu         0.9      0.793        0.595 0.00134          4.17
10 mu_1       0.1      1.23         0.719 0.0000109       11.1 
11 mu_1       0.2      1.25         1.10  0.00273          5.28
12 mu_1       0.3      1.18         1.14  0.0487           3.36
13 mu_1       0.4      1.10         1.09  0.244            2.21
14 mu_1       0.5      1.06         1.06  0.188            1.82
15 mu_1       0.6      1.01         1.02  0.300            1.76
16 mu_1       0.7      0.935        0.911 0.284            1.77
17 mu_1       0.8      0.855        0.803 0.0431           1.95
18 mu_1       0.9      0.783        0.541 0.000871         4.40
19 mu_0       0.1      1.22         0.244 0.000000831     19.7 
20 mu_0       0.2      1.26         0.677 0.000455         7.02
21 mu_0       0.3      1.24         1.25  0.0128           4.49
22 mu_0       0.4      1.17         1.10  0.0955           2.58
23 mu_0       0.5      1.09         1.11  0.304            2.09
24 mu_0       0.6      1.05         1.04  0.154            1.89
25 mu_0       0.7      0.989        0.964 0.409            1.80
26 mu_0       0.8      0.911        0.902 0.131            1.79
27 mu_0       0.9      0.881        0.790 0.00558          2.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.236    0.000152   4.71e-16      4.63
 2 mu         0.2      0.762    0.0137     1.10e-10     11.2 
 3 mu         0.3      1.02     0.121      1.42e- 7      6.72
 4 mu         0.4      0.996    0.453      2.16e- 5      4.46
 5 mu         0.5      0.939    0.844      9.98e- 4      2.67
 6 mu         0.6      0.968    0.890      1.39e- 2      2.70
 7 mu         0.7      1.04     1.10       2.58e- 4      2.30
 8 mu         0.8      1.10     0.843      6.70e- 7      3.90
 9 mu         0.9      1.23     0.111      1.64e-11     13.6 
10 mu_1       0.1      0.565    0.000965   4.46e-15      9.56
11 mu_1       0.2      1.03     0.0415     5.20e-10     11.2 
12 mu_1       0.3      1.09     0.271      4.48e- 7      5.60
13 mu_1       0.4      0.988    0.741      5.11e- 5      4.11
14 mu_1       0.5      0.951    0.926      1.89e- 3      2.81
15 mu_1       0.6      1.00     1.09       4.63e- 3      2.53
16 mu_1       0.7      1.07     1.15       7.37e- 5      2.46
17 mu_1       0.8      1.13     0.693      1.68e- 7      4.20
18 mu_1       0.9      1.25     0.0786     3.64e-12     14.3 
19 mu_0       0.1      0.200    0.0000591  0             4.11
20 mu_0       0.2      0.693    0.00623    0            11.2 
21 mu_0       0.3      0.995    0.0538     0             7.68
22 mu_0       0.4      1.00     0.264      0             5.22
23 mu_0       0.5      0.927    0.696      0             3.34
24 mu_0       0.6      0.919    0.968      0             2.95
25 mu_0       0.7      0.975    1.00       0             2.29
26 mu_0       0.8      1.02     0.960      0             3.44
27 mu_0       0.9      1.03     0.203      0             7.15
[1] "Total run time was 44.64 seconds"
