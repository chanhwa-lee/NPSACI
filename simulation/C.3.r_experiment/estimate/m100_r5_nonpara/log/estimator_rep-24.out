
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1263"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  6  6  9  6  9  7  5  7  6  6  4  5  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0402  0.3759  0.6357  1.0000  8.0000 
[1] "event indicator table: "

  0   1 
747 516 
[1] "treatment indicator table: "

  0   1 
445 818 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 47.755 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.735 0.246
 2 mu         0.1   0.2 0.846 0.251
 3 mu         0.1   0.3 0.943 0.268
 4 mu         0.1   0.4 0.980 0.275
 5 mu         0.1   0.5 0.984 0.279
 6 mu         0.2   0.1 0.487 0.121
 7 mu         0.2   0.2 0.575 0.123
 8 mu         0.2   0.3 0.658 0.134
 9 mu         0.2   0.4 0.724 0.138
10 mu         0.2   0.5 0.737 0.141
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.39        0.0415  5.80e-10     27.4 
 2 mu         0.2      1.15        0.338   5.34e- 6     11.0 
 3 mu         0.3      1.07        0.659   8.15e- 4      5.67
 4 mu         0.4      1.02        0.882   2.18e- 2      3.96
 5 mu         0.5      0.995       0.973   1.74e- 1      2.47
 6 mu         0.6      1.01        0.979   4.13e- 1      1.69
 7 mu         0.7      1.04        1.07    3.68e- 1      2.12
 8 mu         0.8      1.04        1.01    1.07e- 1      2.27
 9 mu         0.9      0.992       0.946   6.54e- 3      2.67
10 mu_1       0.1      1.17        0.139   4.09e- 9     14.1 
11 mu_1       0.2      1.04        0.592   1.90e- 5      7.59
12 mu_1       0.3      1.02        0.781   1.95e- 3      4.67
13 mu_1       0.4      1.00        0.934   3.94e- 2      3.47
14 mu_1       0.5      0.991       0.990   2.52e- 1      2.28
15 mu_1       0.6      1.01        1.02    3.51e- 1      1.87
16 mu_1       0.7      1.04        1.06    3.02e- 1      2.27
17 mu_1       0.8      1.04        1.02    7.99e- 2      2.18
18 mu_1       0.9      0.988       0.920   4.12e- 3      2.81
19 mu_0       0.1      1.41        0.0290  1.90e-10     30.4 
20 mu_0       0.2      1.18        0.257   1.93e- 6     13.6 
21 mu_0       0.3      1.08        0.550   3.29e- 4      6.97
22 mu_0       0.4      1.04        0.779   1.00e- 2      4.29
23 mu_0       0.5      0.998       0.944   7.73e- 2      2.97
24 mu_0       0.6      0.996       1.01    2.29e- 1      1.91
25 mu_0       0.7      1.02        1.05    2.69e- 1      2.08
26 mu_0       0.8      1.05        1.05    2.10e- 1      2.59
27 mu_0       0.9      1.02        1.03    5.87e- 3      2.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.764    0.0000781  1.40e-14     27.4 
 2 mu         0.2      1.36     0.00566    4.59e-10     33.3 
 3 mu         0.3      1.43     0.0514     2.01e- 7     26.5 
 4 mu         0.4      1.19     0.268      1.50e- 5     15.1 
 5 mu         0.5      0.989    0.684      4.27e- 4      4.85
 6 mu         0.6      0.944    0.732      6.58e- 3      3.80
 7 mu         0.7      0.983    0.994      2.18e- 4      2.65
 8 mu         0.8      1.06     1.03       4.96e- 7      3.15
 9 mu         0.9      1.25     0.275      1.08e-11     10.4 
10 mu_1       0.1      0.998    0.000440   0            43.2 
11 mu_1       0.2      1.49     0.0181     0            27.5 
12 mu_1       0.3      1.38     0.107      0            24.5 
13 mu_1       0.4      1.12     0.491      0            10.5 
14 mu_1       0.5      0.980    0.695      0             4.50
15 mu_1       0.6      0.963    0.722      0             3.69
16 mu_1       0.7      1.00     1.04       0             2.65
17 mu_1       0.8      1.09     0.861      0             3.47
18 mu_1       0.9      1.27     0.193      0            11.6 
19 mu_0       0.1      0.738    0.0000235  0            28.3 
20 mu_0       0.2      1.33     0.00174    0            35.0 
21 mu_0       0.3      1.45     0.0186     0            27.3 
22 mu_0       0.4      1.23     0.140      0            18.1 
23 mu_0       0.5      0.997    0.480      0             6.20
24 mu_0       0.6      0.916    0.529      0             4.59
25 mu_0       0.7      0.938    0.753      0             3.68
26 mu_0       0.8      0.969    1.08       0             3.03
27 mu_0       0.9      1.03     0.329      0             5.42
[1] "Total run time was 52.039 seconds"
