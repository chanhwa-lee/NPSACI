
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1263"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  9  5  4  9  8  7  4  5 10  5  6 10  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01269 0.28142 0.56619 0.96515 5.00000 
[1] "event indicator table: "

  0   1 
745 518 
[1] "treatment indicator table: "

  0   1 
500 763 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.28 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.174 0.0479
 2 mu         0.1   0.2 0.175 0.0416
 3 mu         0.1   0.3 0.216 0.0693
 4 mu         0.1   0.4 0.227 0.0789
 5 mu         0.1   0.5 0.284 0.0937
 6 mu         0.2   0.1 0.287 0.0487
 7 mu         0.2   0.2 0.325 0.0504
 8 mu         0.2   0.3 0.381 0.0647
 9 mu         0.2   0.4 0.410 0.0726
10 mu         0.2   0.5 0.455 0.0823
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.472       0.0391 0.00000000608      4.88
 2 mu         0.2      0.878       0.322  0.0000247          8.88
 3 mu         0.3      0.969       0.752  0.00219            6.39
 4 mu         0.4      0.974       0.959  0.0378             3.05
 5 mu         0.5      0.998       0.963  0.247              2.03
 6 mu         0.6      1.02        1.02   0.264              2.18
 7 mu         0.7      1.02        1.04   0.334              1.78
 8 mu         0.8      1.03        1.00   0.0466             2.77
 9 mu         0.9      0.931       0.674  0.000777           4.36
10 mu_1       0.1      0.889       0.146  0.0000000416       8.88
11 mu_1       0.2      1.03        0.612  0.0000847          8.84
12 mu_1       0.3      0.994       0.944  0.00502            4.85
13 mu_1       0.4      0.988       0.922  0.0652             2.21
14 mu_1       0.5      1.01        0.974  0.228              2.13
15 mu_1       0.6      1.02        1.01   0.290              2.14
16 mu_1       0.7      1.02        0.994  0.224              2.00
17 mu_1       0.8      1.03        0.976  0.0299             3.04
18 mu_1       0.9      0.915       0.613  0.000451           4.37
19 mu_0       0.1      0.426       0.0273 0.00000000213      4.44
20 mu_0       0.2      0.841       0.237  0.00000973         8.89
21 mu_0       0.3      0.958       0.653  0.000982           7.05
22 mu_0       0.4      0.965       0.890  0.0195             3.64
23 mu_0       0.5      0.986       0.927  0.149              2.17
24 mu_0       0.6      1.01        0.989  0.225              2.25
25 mu_0       0.7      1.01        1.03   0.248              2.02
26 mu_0       0.8      1.03        1.00   0.113              2.47
27 mu_0       0.9      1.08        0.975  0.00371            4.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.609     0.000357  6.27e-15     17.6 
 2 mu         0.2      1.36      0.0231    8.81e-10     24.1 
 3 mu         0.3      1.50      0.195     6.07e- 7     16.2 
 4 mu         0.4      1.33      0.583     5.19e- 5     10.4 
 5 mu         0.5      1.14      0.966     1.54e- 3      4.41
 6 mu         0.6      1.03      0.994     1.98e- 2      3.33
 7 mu         0.7      1.00      0.931     4.21e- 4      3.73
 8 mu         0.8      1.09      0.437     1.43e- 6      6.41
 9 mu         0.9      1.32      0.0501    6.23e-11     18.8 
10 mu_1       0.1      1.26      0.00225   5.64e-14     29.3 
11 mu_1       0.2      1.65      0.0784    4.16e- 9     23.1 
12 mu_1       0.3      1.49      0.384     1.90e- 6     15.4 
13 mu_1       0.4      1.25      0.868     1.22e- 4      7.66
14 mu_1       0.5      1.08      0.974     2.89e- 3      3.94
15 mu_1       0.6      0.996     1.01      5.51e- 3      2.96
16 mu_1       0.7      1.00      0.834     1.00e- 4      4.18
17 mu_1       0.8      1.11      0.322     2.99e- 7      7.51
18 mu_1       0.9      1.33      0.0323    1.15e-11     19.5 
19 mu_0       0.1      0.536     0.000175  0            16.3 
20 mu_0       0.2      1.28      0.0115    0            25.1 
21 mu_0       0.3      1.50      0.102     0            18.0 
22 mu_0       0.4      1.38      0.384     0            12.3 
23 mu_0       0.5      1.20      0.783     0             5.87
24 mu_0       0.6      1.07      0.975     0             3.88
25 mu_0       0.7      1.01      0.898     0             3.37
26 mu_0       0.8      1.02      0.765     0             5.14
27 mu_0       0.9      1.27      0.123     0            11.7 
[1] "Total run time was 43.575 seconds"
