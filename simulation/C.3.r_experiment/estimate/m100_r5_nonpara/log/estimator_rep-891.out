
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1249"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  6  5  7  9  5  3  9  5  6  4 10  6  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0248  0.3190  0.5890  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
735 514 
[1] "treatment indicator table: "

  0   1 
464 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 63.857 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.539 0.115 
 2 mu         0.1   0.2 0.636 0.136 
 3 mu         0.1   0.3 0.717 0.149 
 4 mu         0.1   0.4 0.761 0.160 
 5 mu         0.1   0.5 0.812 0.168 
 6 mu         0.2   0.1 0.492 0.0776
 7 mu         0.2   0.2 0.582 0.0951
 8 mu         0.2   0.3 0.676 0.104 
 9 mu         0.2   0.4 0.727 0.115 
10 mu         0.2   0.5 0.777 0.119 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.18        0.0254 0.0000000968     14.0 
 2 mu         0.2      1.20        0.296  0.000105         10.6 
 3 mu         0.3      1.08        0.846  0.00339           5.69
 4 mu         0.4      0.996       1.01   0.0316            2.51
 5 mu         0.5      0.976       0.961  0.142             2.06
 6 mu         0.6      0.987       0.955  0.390             1.93
 7 mu         0.7      1.00        0.991  0.109             2.27
 8 mu         0.8      1.02        1.02   0.00550           2.40
 9 mu         0.9      1.05        0.826  0.0000135         4.61
10 mu_1       0.1      1.23        0.0767 0.000000584      16.5 
11 mu_1       0.2      1.06        0.463  0.000354          6.59
12 mu_1       0.3      0.972       0.856  0.00770           2.93
13 mu_1       0.4      0.955       0.965  0.0545            2.13
14 mu_1       0.5      0.970       0.947  0.201             2.09
15 mu_1       0.6      0.990       0.970  0.403             2.06
16 mu_1       0.7      1.01        1.01   0.0734            2.43
17 mu_1       0.8      1.02        1.01   0.00329           2.42
18 mu_1       0.9      1.05        0.796  0.00000731        4.78
19 mu_0       0.1      1.17        0.0172 0.0000000427     13.7 
20 mu_0       0.2      1.23        0.203  0.0000426        11.5 
21 mu_0       0.3      1.12        0.718  0.00154           6.96
22 mu_0       0.4      1.02        0.977  0.0163            3.38
23 mu_0       0.5      0.983       1.01   0.0840            2.14
24 mu_0       0.6      0.981       0.981  0.265             2.07
25 mu_0       0.7      0.992       0.955  0.193             2.29
26 mu_0       0.8      0.997       0.970  0.0143            2.72
27 mu_0       0.9      0.983       0.894  0.0000690         3.14
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.968   0.0000370   5.72e-16     45.6 
 2 mu         0.2      1.11    0.00503     7.49e-11     31.1 
 3 mu         0.3      0.961   0.0483      7.38e- 8     14.7 
 4 mu         0.4      0.900   0.308       9.82e- 6      7.45
 5 mu         0.5      0.914   0.628       4.36e- 4      3.61
 6 mu         0.6      0.958   0.902       8.55e- 3      3.12
 7 mu         0.7      1.00    1.04        1.56e- 4      4.35
 8 mu         0.8      1.10    0.777       4.64e- 7      4.87
 9 mu         0.9      1.41    0.105       1.79e-11     17.2 
10 mu_1       0.1      1.44    0.000257    5.72e-15     53.6 
11 mu_1       0.2      1.09    0.0175      3.75e-10     19.1 
12 mu_1       0.3      0.917   0.111       2.46e- 7     11.3 
13 mu_1       0.4      0.894   0.460       2.46e- 5      6.06
14 mu_1       0.5      0.930   0.714       8.72e- 4      3.82
15 mu_1       0.6      0.979   0.939       1.68e- 3      3.02
16 mu_1       0.7      1.03    1.06        2.61e- 5      4.75
17 mu_1       0.8      1.13    0.612       6.82e- 8      4.66
18 mu_1       0.9      1.44    0.0720      2.34e-12     19.2 
19 mu_0       0.1      0.916   0.00000996  0            44.7 
20 mu_0       0.2      1.12    0.00142     0            34.3 
21 mu_0       0.3      0.980   0.0204      0            16.1 
22 mu_0       0.4      0.905   0.160       0             9.55
23 mu_0       0.5      0.899   0.501       0             4.44
24 mu_0       0.6      0.927   0.817       0             3.67
25 mu_0       0.7      0.952   0.851       0             3.41
26 mu_0       0.8      0.974   0.865       0             5.73
27 mu_0       0.9      1.08    0.161       0             7.80
[1] "Total run time was 68.352 seconds"
