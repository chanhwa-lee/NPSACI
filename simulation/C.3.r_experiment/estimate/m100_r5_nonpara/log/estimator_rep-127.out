
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1250"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  8 11  3  3  8  6  5  8  7  4 12  4  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02591 0.34319 0.57405 0.98878 5.00000 
[1] "event indicator table: "

  0   1 
745 505 
[1] "treatment indicator table: "

  0   1 
485 765 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.933 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.390 0.0900
 2 mu         0.1   0.2 0.431 0.107 
 3 mu         0.1   0.3 0.534 0.132 
 4 mu         0.1   0.4 0.563 0.148 
 5 mu         0.1   0.5 0.678 0.178 
 6 mu         0.2   0.1 0.391 0.0657
 7 mu         0.2   0.2 0.467 0.0758
 8 mu         0.2   0.3 0.567 0.0981
 9 mu         0.2   0.4 0.605 0.111 
10 mu         0.2   0.5 0.694 0.134 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.923       0.0832 0.0000000129      12.3 
 2 mu         0.2      1.11        0.426  0.0000296          9.11
 3 mu         0.3      1.08        0.811  0.00201            6.24
 4 mu         0.4      1.03        0.993  0.0305             2.76
 5 mu         0.5      1.00        1.01   0.193              1.89
 6 mu         0.6      0.991       1.00   0.348              1.70
 7 mu         0.7      0.980       0.970  0.0874             1.71
 8 mu         0.8      0.957       0.867  0.00764            2.48
 9 mu         0.9      0.914       0.536  0.0000610          4.58
10 mu_1       0.1      1.14        0.264  0.0000000914      11.7 
11 mu_1       0.2      1.16        0.767  0.000105           9.35
12 mu_1       0.3      1.07        0.954  0.00475            4.67
13 mu_1       0.4      1.02        1.02   0.0544             2.62
14 mu_1       0.5      0.994       0.999  0.278              1.60
15 mu_1       0.6      0.981       0.989  0.253              1.77
16 mu_1       0.7      0.971       0.934  0.0558             1.69
17 mu_1       0.8      0.951       0.912  0.00434            2.61
18 mu_1       0.9      0.906       0.464  0.0000312          4.70
19 mu_0       0.1      0.898       0.0551 0.00000000422     12.4 
20 mu_0       0.2      1.09        0.342  0.0000109          9.05
21 mu_0       0.3      1.08        0.752  0.000835           6.91
22 mu_0       0.4      1.04        0.929  0.0146             3.03
23 mu_0       0.5      1.01        0.990  0.107              2.17
24 mu_0       0.6      1.00        1.02   0.433              1.59
25 mu_0       0.7      0.999       1.01   0.161              1.79
26 mu_0       0.8      0.979       0.960  0.0209             1.98
27 mu_0       0.9      0.994       0.876  0.000329           3.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.582    0.000122   1.01e-17     33.5 
 2 mu         0.2      0.798    0.0104     5.28e-12     17.9 
 3 mu         0.3      0.899    0.130      1.17e- 8     12.2 
 4 mu         0.4      0.955    0.562      2.77e- 6      4.54
 5 mu         0.5      1.02     1.13       1.92e- 4      2.63
 6 mu         0.6      1.03     1.13       2.36e- 3      2.06
 7 mu         0.7      0.999    1.04       4.91e- 5      2.38
 8 mu         0.8      1.04     0.511      1.92e- 7      4.69
 9 mu         0.9      1.30     0.0440     1.32e-11     14.0 
10 mu_1       0.1      0.833    0.000947   1.01e-16     22.4 
11 mu_1       0.2      0.969    0.0361     2.64e-11     17.9 
12 mu_1       0.3      0.977    0.268      3.90e- 8      8.11
13 mu_1       0.4      0.990    0.845      6.92e- 6      3.55
14 mu_1       0.5      1.03     1.14       3.84e- 4      2.63
15 mu_1       0.6      1.02     1.09       2.62e- 4      2.09
16 mu_1       0.7      0.988    0.964      4.68e- 6      2.65
17 mu_1       0.8      1.05     0.393      1.60e- 8      5.28
18 mu_1       0.9      1.33     0.0287     9.78e-13     15.1 
19 mu_0       0.1      0.554    0.0000456  0            34.8 
20 mu_0       0.2      0.755    0.00482    0            17.9 
21 mu_0       0.3      0.866    0.0760     0            13.9 
22 mu_0       0.4      0.932    0.374      0             6.05
23 mu_0       0.5      1.00     0.917      0             2.91
24 mu_0       0.6      1.05     1.11       0             2.44
25 mu_0       0.7      1.02     1.13       0             2.18
26 mu_0       0.8      0.996    0.786      0             3.41
27 mu_0       0.9      1.06     0.128      0             9.78
[1] "Total run time was 44.277 seconds"
