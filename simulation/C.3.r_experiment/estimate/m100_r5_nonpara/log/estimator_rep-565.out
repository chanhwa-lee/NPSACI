
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1246"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  8  5  5  5  7 10  5  8  6  6  4  5  7  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03314 0.30179 0.60538 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
719 527 
[1] "treatment indicator table: "

  0   1 
448 798 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 116.138 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.470 0.236 
 2 mu         0.1   0.2 0.594 0.305 
 3 mu         0.1   0.3 0.582 0.326 
 4 mu         0.1   0.4 0.636 0.350 
 5 mu         0.1   0.5 0.663 0.361 
 6 mu         0.2   0.1 0.378 0.0925
 7 mu         0.2   0.2 0.472 0.124 
 8 mu         0.2   0.3 0.462 0.133 
 9 mu         0.2   0.4 0.525 0.136 
10 mu         0.2   0.5 0.550 0.143 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.05       0.0126  0.000000108      55.8 
 2 mu         0.2      0.952      0.138   0.000126         17.3 
 3 mu         0.3      0.971      0.447   0.00574           5.99
 4 mu         0.4      0.985      0.790   0.0651            4.80
 5 mu         0.5      0.994      0.927   0.226             2.57
 6 mu         0.6      1.01       0.959   0.245             2.03
 7 mu         0.7      1.01       1.01    0.360             1.83
 8 mu         0.8      0.965      0.921   0.0874            2.56
 9 mu         0.9      0.881      0.695   0.00289          10.1 
10 mu_1       0.1      0.730      0.0438  0.000000746      13.4 
11 mu_1       0.2      0.916      0.287   0.000434          7.21
12 mu_1       0.3      0.980      0.664   0.0132            6.08
13 mu_1       0.4      0.994      0.840   0.113             4.12
14 mu_1       0.5      1.00       0.940   0.288             2.25
15 mu_1       0.6      1.01       0.989   0.203             1.77
16 mu_1       0.7      0.999      0.999   0.304             1.86
17 mu_1       0.8      0.955      0.907   0.0599            3.15
18 mu_1       0.9      0.874      0.659   0.00180          11.2 
19 mu_0       0.1      1.08       0.00817 0.0000000375     62.0 
20 mu_0       0.2      0.961      0.102   0.0000488        21.5 
21 mu_0       0.3      0.967      0.364   0.00253           6.76
22 mu_0       0.4      0.979      0.674   0.0331            5.25
23 mu_0       0.5      0.987      0.872   0.101             3.10
24 mu_0       0.6      1.01       0.957   0.251             2.54
25 mu_0       0.7      1.02       0.985   0.232             2.22
26 mu_0       0.8      1.01       1.04    0.197             2.17
27 mu_0       0.9      0.945      0.957   0.0127            2.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.457    0.0000799  1.04e-15     31.1 
 2 mu         0.2      1.08     0.00823    1.36e-10     60.5 
 3 mu         0.3      1.35     0.0933     1.34e- 7     41.1 
 4 mu         0.4      1.42     0.370      1.78e- 5     15.3 
 5 mu         0.5      1.45     0.997      7.92e- 4      9.75
 6 mu         0.6      1.44     1.07       1.38e- 2      7.57
 7 mu         0.7      1.33     0.979      8.92e- 3      6.61
 8 mu         0.8      1.16     0.852      6.80e- 5      6.45
 9 mu         0.9      1.20     0.143      8.42e- 9     17.3 
10 mu_1       0.1      0.972    0.000604   1.04e-14     62.2 
11 mu_1       0.2      1.36     0.0268     6.81e-10     60.5 
12 mu_1       0.3      1.43     0.238      4.47e- 7     27.4 
13 mu_1       0.4      1.45     0.641      4.46e- 5     12.8 
14 mu_1       0.5      1.46     1.05       1.58e- 3      8.36
15 mu_1       0.6      1.43     1.09       2.31e- 2      7.72
16 mu_1       0.7      1.30     1.05       3.82e- 3      7.08
17 mu_1       0.8      1.16     0.701      2.55e- 5      6.75
18 mu_1       0.9      1.23     0.106      2.81e- 9     19.2 
19 mu_0       0.1      0.399    0.0000293  0            27.6 
20 mu_0       0.2      1.01     0.00295    0            60.5 
21 mu_0       0.3      1.31     0.0438     0            47.0 
22 mu_0       0.4      1.40     0.208      0            20.4 
23 mu_0       0.5      1.44     0.667      0            11.3 
24 mu_0       0.6      1.46     1.15       0             8.52
25 mu_0       0.7      1.39     0.927      0             7.14
26 mu_0       0.8      1.19     0.993      0             8.06
27 mu_0       0.9      1.00     0.279      0             9.25
[1] "Total run time was 122.183 seconds"
