
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1243"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  8  6  7  7  9  3 10  3  6  4  7  3  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03126 0.37101 0.62504 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
759 484 
[1] "treatment indicator table: "

  0   1 
426 817 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.343 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.232 0.152
 2 mu         0.1   0.2 0.323 0.170
 3 mu         0.1   0.3 0.328 0.190
 4 mu         0.1   0.4 0.339 0.209
 5 mu         0.1   0.5 0.457 0.228
 6 mu         0.2   0.1 0.311 0.106
 7 mu         0.2   0.2 0.422 0.128
 8 mu         0.2   0.3 0.465 0.137
 9 mu         0.2   0.4 0.501 0.146
10 mu         0.2   0.5 0.598 0.163
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.752      0.0115  0.00000000728     38.9 
 2 mu         0.2      1.14       0.141   0.0000306         21.9 
 3 mu         0.3      1.27       0.485   0.00170           21.7 
 4 mu         0.4      1.16       0.832   0.0147            11.8 
 5 mu         0.5      1.07       1.03    0.0707             5.06
 6 mu         0.6      1.02       1.03    0.179              2.46
 7 mu         0.7      0.983      0.975   0.235              1.77
 8 mu         0.8      0.972      0.978   0.0817             2.03
 9 mu         0.9      0.994      0.975   0.0120             3.47
10 mu_1       0.1      0.723      0.0437  0.0000000500      18.0 
11 mu_1       0.2      1.25       0.290   0.000105          24.0 
12 mu_1       0.3      1.25       0.740   0.00446           19.3 
13 mu_1       0.4      1.13       0.997   0.0320             8.73
14 mu_1       0.5      1.06       1.02    0.101              4.03
15 mu_1       0.6      1.02       1.01    0.221              2.07
16 mu_1       0.7      0.980      0.978   0.136              1.74
17 mu_1       0.8      0.974      0.983   0.0452             2.13
18 mu_1       0.9      0.993      0.935   0.00629            3.68
19 mu_0       0.1      0.755      0.00636 0.00000000254     43.2 
20 mu_0       0.2      1.12       0.0986  0.0000104         21.9 
21 mu_0       0.3      1.27       0.359   0.000266          22.7 
22 mu_0       0.4      1.18       0.674   0.00265           13.9 
23 mu_0       0.5      1.08       1.03    0.0158             6.09
24 mu_0       0.6      1.03       0.997   0.0680             3.06
25 mu_0       0.7      0.990      0.995   0.232              1.85
26 mu_0       0.8      0.964      0.928   0.228              1.87
27 mu_0       0.9      1.01       0.967   0.0459             2.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     10.0     0.0000225   8.23e-19    640.  
 2 mu         0.2      5.03    0.00309     8.63e-13    246.  
 3 mu         0.3      2.14    0.0397      2.87e- 9     57.0 
 4 mu         0.4      1.23    0.227       9.05e- 7     18.0 
 5 mu         0.5      1.06    0.600       7.85e- 5      8.19
 6 mu         0.6      1.08    1.06        3.01e- 3      3.69
 7 mu         0.7      1.11    1.08        9.37e- 4      4.00
 8 mu         0.8      1.11    0.879       3.67e- 6      7.72
 9 mu         0.9      1.12    0.229       2.52e-10     11.9 
10 mu_1       0.1      7.73    0.000150    8.23e-18    427.  
11 mu_1       0.2      2.63    0.0102      4.32e-12     82.1 
12 mu_1       0.3      1.32    0.0994      9.57e- 9     23.7 
13 mu_1       0.4      1.06    0.401       2.26e- 6     12.3 
14 mu_1       0.5      1.06    0.725       1.57e- 4      4.47
15 mu_1       0.6      1.10    1.13        4.36e- 3      3.58
16 mu_1       0.7      1.13    1.09        8.93e- 5      4.83
17 mu_1       0.8      1.11    0.779       3.06e- 7      8.16
18 mu_1       0.9      1.13    0.170       1.87e-11     13.2 
19 mu_0       0.1     10.3     0.00000485  0           664.  
20 mu_0       0.2      5.63    0.00115     0           287.  
21 mu_0       0.3      2.49    0.0142      0            76.0 
22 mu_0       0.4      1.35    0.0927      0            21.9 
23 mu_0       0.5      1.06    0.350       0            11.9 
24 mu_0       0.6      1.04    0.742       0             4.32
25 mu_0       0.7      1.07    1.10        0             3.58
26 mu_0       0.8      1.09    1.09        0             5.94
27 mu_0       0.9      0.992   0.344       0            10.8 
[1] "Total run time was 62.004 seconds"
