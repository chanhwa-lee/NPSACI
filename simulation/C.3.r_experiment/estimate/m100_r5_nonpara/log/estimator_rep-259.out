
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1196"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  8  6 10  4  7  8  6  3 10  9  2  8  3  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02823 0.32401 0.59859 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
704 492 
[1] "treatment indicator table: "

  0   1 
457 739 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 566
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.799 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.333 0.109 
 2 mu         0.1   0.2 0.463 0.126 
 3 mu         0.1   0.3 0.553 0.122 
 4 mu         0.1   0.4 0.667 0.145 
 5 mu         0.1   0.5 0.703 0.172 
 6 mu         0.2   0.1 0.355 0.0773
 7 mu         0.2   0.2 0.459 0.0950
 8 mu         0.2   0.3 0.547 0.0909
 9 mu         0.2   0.4 0.644 0.0927
10 mu         0.2   0.5 0.675 0.103 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.11         0.225 0.0000000990     10.4 
 2 mu         0.2      1.15         0.920 0.000108          7.16
 3 mu         0.3      1.07         0.967 0.00463           3.09
 4 mu         0.4      1.01         0.955 0.0502            2.19
 5 mu         0.5      0.989        0.964 0.0734            1.69
 6 mu         0.6      1.01         0.994 0.210             1.94
 7 mu         0.7      1.02         1.02  0.245             2.03
 8 mu         0.8      1.01         1.02  0.112             2.38
 9 mu         0.9      0.971        0.962 0.00402           2.98
10 mu_1       0.1      1.30         0.546 0.000000644      12.3 
11 mu_1       0.2      1.12         1.01  0.000353          4.28
12 mu_1       0.3      1.03         0.945 0.0102            2.81
13 mu_1       0.4      0.994        0.986 0.0687            1.85
14 mu_1       0.5      0.993        0.989 0.0825            1.78
15 mu_1       0.6      1.02         0.996 0.270             1.93
16 mu_1       0.7      1.02         1.02  0.196             2.02
17 mu_1       0.8      1.00         0.992 0.119             2.53
18 mu_1       0.9      0.968        0.900 0.00263           3.22
19 mu_0       0.1      1.09         0.175 0.0000000385     10.2 
20 mu_0       0.2      1.16         0.803 0.0000465         7.88
21 mu_0       0.3      1.08         1.02  0.00224           3.27
22 mu_0       0.4      1.01         0.897 0.0275            2.42
23 mu_0       0.5      0.986        0.960 0.0643            1.97
24 mu_0       0.6      0.999        0.992 0.120             1.97
25 mu_0       0.7      1.03         0.998 0.359             2.07
26 mu_0       0.8      1.02         1.03  0.0718            2.04
27 mu_0       0.9      0.995        0.999 0.00185           3.25
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.17     0.000178   5.57e-16    182.  
 2 mu         0.2      1.72     0.0146     7.30e-11     52.4 
 3 mu         0.3      1.14     0.142      7.20e- 8     12.8 
 4 mu         0.4      1.15     0.515      9.57e- 6     11.3 
 5 mu         0.5      1.18     0.906      4.25e- 4      5.81
 6 mu         0.6      1.17     1.09       2.22e- 4      4.65
 7 mu         0.7      1.17     1.04       1.09e- 6      4.98
 8 mu         0.8      1.15     0.787      5.64e-10      6.04
 9 mu         0.9      1.22     0.114      1.21e-15     12.1 
10 mu_1       0.1      2.80     0.00112    5.57e-15    102.  
11 mu_1       0.2      1.14     0.0443     3.65e-10     15.4 
12 mu_1       0.3      1.10     0.315      2.40e- 7     12.9 
13 mu_1       0.4      1.17     0.628      2.39e- 5      9.98
14 mu_1       0.5      1.18     1.02       8.50e- 4      4.62
15 mu_1       0.6      1.17     1.04       1.85e- 5      4.65
16 mu_1       0.7      1.17     0.973      7.82e- 8      5.44
17 mu_1       0.8      1.16     0.666      3.53e-11      6.55
18 mu_1       0.9      1.24     0.0764     6.73e-17     13.5 
19 mu_0       0.1      4.33     0.0000616  0           192.  
20 mu_0       0.2      1.86     0.00677    0            61.7 
21 mu_0       0.3      1.16     0.0681     0            16.3 
22 mu_0       0.4      1.14     0.319      0            12.2 
23 mu_0       0.5      1.17     0.618      0             7.52
24 mu_0       0.6      1.17     1.03       0             4.65
25 mu_0       0.7      1.17     1.06       0             4.42
26 mu_0       0.8      1.13     0.909      0             6.56
27 mu_0       0.9      0.993    0.217      0             9.32
[1] "Total run time was 56.046 seconds"
