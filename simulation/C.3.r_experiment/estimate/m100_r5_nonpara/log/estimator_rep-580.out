
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1247"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3 10  8  4  8  7  7  4  4  3  5 11  8 10  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0167  0.3338  0.6049  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
756 491 
[1] "treatment indicator table: "

  0   1 
475 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 87.273 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.125 0.0577
 2 mu         0.1   0.2 0.126 0.0879
 3 mu         0.1   0.3 0.106 0.118 
 4 mu         0.1   0.4 0.160 0.102 
 5 mu         0.1   0.5 0.201 0.0873
 6 mu         0.2   0.1 0.219 0.0523
 7 mu         0.2   0.2 0.239 0.0712
 8 mu         0.2   0.3 0.246 0.0934
 9 mu         0.2   0.4 0.298 0.0814
10 mu         0.2   0.5 0.342 0.0738
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.444       0.0323 0.000000435      8.88
 2 mu         0.2      0.739       0.303  0.000410         7.61
 3 mu         0.3      0.932       0.710  0.0145           4.97
 4 mu         0.4      0.987       0.889  0.107            2.72
 5 mu         0.5      0.972       0.967  0.377            1.79
 6 mu         0.6      0.970       0.985  0.473            1.39
 7 mu         0.7      1.00        1.02   0.273            1.73
 8 mu         0.8      1.03        0.958  0.0393           2.40
 9 mu         0.9      1.06        0.626  0.000805        10.6 
10 mu_1       0.1      0.732       0.127  0.00000267       8.18
11 mu_1       0.2      0.904       0.572  0.00126          7.24
12 mu_1       0.3      0.997       0.882  0.0294           3.62
13 mu_1       0.4      0.995       0.977  0.166            2.35
14 mu_1       0.5      0.971       0.976  0.457            1.58
15 mu_1       0.6      0.977       0.994  0.473            1.40
16 mu_1       0.7      1.01        1.03   0.202            1.84
17 mu_1       0.8      1.04        0.916  0.0274           2.48
18 mu_1       0.9      1.05        0.574  0.000520        11.8 
19 mu_0       0.1      0.412       0.0223 0.000000187      9.16
20 mu_0       0.2      0.698       0.223  0.000197         7.70
21 mu_0       0.3      0.904       0.573  0.00811          5.57
22 mu_0       0.4      0.982       0.858  0.0671           3.19
23 mu_0       0.5      0.973       0.927  0.269            2.06
24 mu_0       0.6      0.960       1.00   0.473            1.50
25 mu_0       0.7      0.983       0.988  0.418            1.45
26 mu_0       0.8      1.03        1.06   0.0867           2.23
27 mu_0       0.9      1.09        1.00   0.00337          3.15
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.519    0.000263   2.94e-16     44.0 
 2 mu         0.2      0.676    0.0176     1.37e-10     30.1 
 3 mu         0.3      0.856    0.163      2.66e- 7      9.17
 4 mu         0.4      1.04     0.612      5.38e- 5      7.24
 5 mu         0.5      1.07     1.01       2.20e- 3      3.99
 6 mu         0.6      0.978    1.02       8.25e- 3      2.45
 7 mu         0.7      0.935    0.863      1.50e- 4      2.27
 8 mu         0.8      1.18     0.422      4.48e- 7      9.41
 9 mu         0.9      2.13     0.0579     1.73e-11     44.1 
10 mu_1       0.1      0.788    0.00190    2.79e-15     51.7 
11 mu_1       0.2      0.843    0.0570     6.50e-10     17.7 
12 mu_1       0.3      1.02     0.325      8.41e- 7      9.41
13 mu_1       0.4      1.11     0.846      1.28e- 4      5.57
14 mu_1       0.5      1.05     1.05       4.40e- 3      3.75
15 mu_1       0.6      0.943    1.03       1.62e- 3      2.55
16 mu_1       0.7      0.934    0.732      2.52e- 5      2.60
17 mu_1       0.8      1.24     0.288      6.59e- 8     11.2 
18 mu_1       0.9      2.20     0.0331     2.26e-12     46.6 
19 mu_0       0.1      0.490    0.0000990  0            43.1 
20 mu_0       0.2      0.635    0.00913    0            33.1 
21 mu_0       0.3      0.787    0.103      0            11.5 
22 mu_0       0.4      0.995    0.441      0             8.35
23 mu_0       0.5      1.09     0.886      0             4.74
24 mu_0       0.6      1.03     1.10       0             3.05
25 mu_0       0.7      0.939    1.05       0             2.54
26 mu_0       0.8      0.960    0.811      0             3.80
27 mu_0       0.9      1.46     0.199      0            22.1 
[1] "Total run time was 92.309 seconds"
