
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  9  5  4  6  9  4  6  4  9  6  4  7  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01944 0.32342 0.61379 0.99610 5.00000 
[1] "event indicator table: "

  0   1 
726 480 
[1] "treatment indicator table: "

  0   1 
442 764 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.151 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.466 0.195
 2 mu         0.1   0.2 0.507 0.220
 3 mu         0.1   0.3 0.515 0.230
 4 mu         0.1   0.4 0.520 0.240
 5 mu         0.1   0.5 0.537 0.261
 6 mu         0.2   0.1 0.467 0.127
 7 mu         0.2   0.2 0.497 0.139
 8 mu         0.2   0.3 0.516 0.144
 9 mu         0.2   0.4 0.558 0.149
10 mu         0.2   0.5 0.580 0.160
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.904      0.0132   1.05e- 9     30.5 
 2 mu         0.2      1.00       0.132    6.85e- 6     20.5 
 3 mu         0.3      0.992      0.494    6.53e- 4      6.47
 4 mu         0.4      0.975      0.818    1.24e- 2      4.77
 5 mu         0.5      0.960      0.946    9.38e- 2      2.65
 6 mu         0.6      0.974      1.00     1.86e- 1      1.75
 7 mu         0.7      1.02       1.01     4.94e- 1      1.80
 8 mu         0.8      1.09       1.01     1.89e- 1      3.48
 9 mu         0.9      1.16       0.665    1.02e- 2     19.0 
10 mu_1       0.1      1.14       0.0549   7.32e- 9     35.2 
11 mu_1       0.2      1.06       0.339    2.36e- 5     12.7 
12 mu_1       0.3      1.01       0.635    1.51e- 3      6.05
13 mu_1       0.4      0.970      0.925    2.19e- 2      3.50
14 mu_1       0.5      0.956      0.960    8.26e- 2      2.26
15 mu_1       0.6      0.980      0.986    2.32e- 1      1.61
16 mu_1       0.7      1.03       1.00     4.31e- 1      1.83
17 mu_1       0.8      1.10       0.988    1.41e- 1      4.24
18 mu_1       0.9      1.17       0.613    7.31e- 3     21.1 
19 mu_0       0.1      0.878      0.00710  3.48e-10     29.9 
20 mu_0       0.2      0.988      0.0957   2.65e- 6     22.4 
21 mu_0       0.3      0.985      0.369    2.84e- 4      7.40
22 mu_0       0.4      0.978      0.749    6.12e- 3      5.61
23 mu_0       0.5      0.963      0.906    5.24e- 2      3.41
24 mu_0       0.6      0.964      0.964    1.17e- 1      1.95
25 mu_0       0.7      0.999      1.03     3.54e- 1      1.76
26 mu_0       0.8      1.06       1.07     3.41e- 1      1.95
27 mu_0       0.9      1.10       0.976    3.63e- 2      4.21
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      10.4     0.000125   1.11e-16    790.  
 2 mu         0.2      14.5     0.0141     5.20e-11   1080.  
 3 mu         0.3       8.30    0.0976     1.01e- 7    492.  
 4 mu         0.4       3.33    0.366      2.04e- 5    115.  
 5 mu         0.5       1.51    0.837      1.18e- 3     14.7 
 6 mu         0.6       1.09    1.05       3.02e- 2      3.12
 7 mu         0.7       1.05    0.979      1.79e- 2      3.02
 8 mu         0.8       1.31    0.707      6.44e- 5     11.0 
 9 mu         0.9       1.94    0.164      2.80e- 9     29.9 
10 mu_1       0.1      16.0     0.000617   0          1317.  
11 mu_1       0.2      12.6     0.0372     0           900.  
12 mu_1       0.3       5.41    0.206      0           273.  
13 mu_1       0.4       2.12    0.573      0            48.1 
14 mu_1       0.5       1.22    1.04       0             8.16
15 mu_1       0.6       1.04    0.994      0             3.05
16 mu_1       0.7       1.07    1.02       0             3.40
17 mu_1       0.8       1.37    0.580      0            12.9 
18 mu_1       0.9       1.97    0.128      0            33.2 
19 mu_0       0.1       9.76    0.0000572  0           732.  
20 mu_0       0.2      15.0     0.00478    0          1125.  
21 mu_0       0.3       9.54    0.0422     0           586.  
22 mu_0       0.4       4.14    0.204      0           160.  
23 mu_0       0.5       1.81    0.626      0            24.4 
24 mu_0       0.6       1.16    0.982      0             4.14
25 mu_0       0.7       1.00    0.992      0             2.72
26 mu_0       0.8       1.08    0.937      0             3.93
27 mu_0       0.9       1.62    0.250      0            19.1 
[1] "Total run time was 89.224 seconds"
