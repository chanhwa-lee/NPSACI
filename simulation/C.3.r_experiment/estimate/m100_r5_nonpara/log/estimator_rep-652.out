
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1190"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  9 10  6  8  5  9  1 13  6  5  5  4  6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03415 0.36220 0.61562 1.00000 5.50793 
[1] "event indicator table: "

  0   1 
690 500 
[1] "treatment indicator table: "

  0   1 
436 754 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 568
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.687 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.357 0.176
 2 mu         0.1   0.2 0.383 0.204
 3 mu         0.1   0.3 0.397 0.221
 4 mu         0.1   0.4 0.452 0.245
 5 mu         0.1   0.5 0.546 0.252
 6 mu         0.2   0.1 0.375 0.107
 7 mu         0.2   0.2 0.423 0.121
 8 mu         0.2   0.3 0.448 0.136
 9 mu         0.2   0.4 0.503 0.155
10 mu         0.2   0.5 0.635 0.163
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.716      0.0168  0.0000000417     29.0 
 2 mu         0.2      1.05       0.157   0.0000766        14.1 
 3 mu         0.3      1.17       0.470   0.00411          14.0 
 4 mu         0.4      1.10       0.817   0.0370            7.04
 5 mu         0.5      1.06       0.980   0.162             2.86
 6 mu         0.6      1.05       1.03    0.295             1.73
 7 mu         0.7      1.06       1.04    0.316             3.96
 8 mu         0.8      1.17       0.968   0.0707           14.1 
 9 mu         0.9      1.40       0.627   0.00420          50.2 
10 mu_1       0.1      0.798      0.0846  0.000000264      16.8 
11 mu_1       0.2      1.18       0.354   0.000243         15.7 
12 mu_1       0.3      1.18       0.697   0.00876          12.3 
13 mu_1       0.4      1.10       0.982   0.0632            4.82
14 mu_1       0.5      1.07       1.01    0.228             2.46
15 mu_1       0.6      1.05       1.06    0.315             1.91
16 mu_1       0.7      1.08       1.01    0.222             5.23
17 mu_1       0.8      1.20       0.930   0.0482           17.5 
18 mu_1       0.9      1.44       0.580   0.00269          55.8 
19 mu_0       0.1      0.707      0.00970 0.0000000171     31.8 
20 mu_0       0.2      1.02       0.105   0.0000350        17.2 
21 mu_0       0.3      1.16       0.363   0.00197          14.7 
22 mu_0       0.4      1.11       0.698   0.0196            8.53
23 mu_0       0.5      1.06       0.937   0.0767            3.76
24 mu_0       0.6      1.04       1.05    0.213             2.09
25 mu_0       0.7      1.02       1.03    0.360             1.56
26 mu_0       0.8      1.04       1.03    0.161             3.44
27 mu_0       0.9      1.07       0.884   0.0178            7.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.09    0.000164   2.85e-15    146.  
 2 mu         0.2       3.72    0.0145     7.46e-10    202.  
 3 mu         0.3       2.87    0.110      1.10e- 6    137.  
 4 mu         0.4       1.95    0.410      8.38e- 5     60.7 
 5 mu         0.5       1.39    0.887      1.91e- 3     18.4 
 6 mu         0.6       1.14    1.02       2.45e- 2      3.55
 7 mu         0.7       1.45    0.968      8.06e- 3     21.1 
 8 mu         0.8       4.47    0.687      1.60e- 4    205.  
 9 mu         0.9      23.3     0.106      6.10e- 8   1515.  
10 mu_1       0.1       4.76    0.000936   2.85e-14    265.  
11 mu_1       0.2       3.37    0.0419     3.73e- 9    184.  
12 mu_1       0.3       2.15    0.282      3.68e- 6     82.9 
13 mu_1       0.4       1.52    0.619      2.09e- 4     27.6 
14 mu_1       0.5       1.21    0.968      3.81e- 3      6.68
15 mu_1       0.6       1.12    1.06       1.86e- 2      2.88
16 mu_1       0.7       1.63    0.958      1.05e- 3     30.2 
17 mu_1       0.8       5.26    0.552      1.81e- 5    256.  
18 mu_1       0.9      25.5     0.0830     1.77e- 8   1683.  
19 mu_0       0.1       2.90    0.0000619  0           133.  
20 mu_0       0.2       3.81    0.00530    0           207.  
21 mu_0       0.3       3.17    0.0399     0           160.  
22 mu_0       0.4       2.25    0.212      0            82.8 
23 mu_0       0.5       1.58    0.634      0            30.1 
24 mu_0       0.6       1.18    0.993      0             7.27
25 mu_0       0.7       1.03    1.07       0             2.77
26 mu_0       0.8       1.31    0.862      0            16.6 
27 mu_0       0.9       2.82    0.211      0           139.  
[1] "Total run time was 71.853 seconds"
