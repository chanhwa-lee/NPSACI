
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1270"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  3  8  7  3  7  7 10  7  6  4  5  7  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0320  0.3073  0.5970  0.9848  5.5788 
[1] "event indicator table: "

  0   1 
773 497 
[1] "treatment indicator table: "

  0   1 
483 787 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.422 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.545 0.177
 2 mu         0.1   0.2 0.652 0.221
 3 mu         0.1   0.3 0.648 0.201
 4 mu         0.1   0.4 0.661 0.201
 5 mu         0.1   0.5 0.667 0.198
 6 mu         0.2   0.1 0.459 0.110
 7 mu         0.2   0.2 0.561 0.131
 8 mu         0.2   0.3 0.599 0.125
 9 mu         0.2   0.4 0.622 0.130
10 mu         0.2   0.5 0.640 0.131
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.912       0.0186 0.0000000582     16.9 
 2 mu         0.2      1.06        0.213  0.000102         10.5 
 3 mu         0.3      1.13        0.626  0.00285           8.71
 4 mu         0.4      1.10        0.883  0.0268            4.56
 5 mu         0.5      1.06        0.989  0.136             2.49
 6 mu         0.6      1.02        0.980  0.440             2.34
 7 mu         0.7      0.980       0.958  0.0799            2.40
 8 mu         0.8      0.957       0.899  0.00482           4.30
 9 mu         0.9      0.914       0.745  0.0000197         9.33
10 mu_1       0.1      0.898       0.0730 0.000000389      14.1 
11 mu_1       0.2      1.10        0.408  0.000386         11.5 
12 mu_1       0.3      1.12        0.784  0.00728           7.12
13 mu_1       0.4      1.08        0.964  0.0521            3.16
14 mu_1       0.5      1.04        1.04   0.216             2.24
15 mu_1       0.6      1.00        0.959  0.305             2.31
16 mu_1       0.7      0.974       0.960  0.0517            2.64
17 mu_1       0.8      0.957       0.918  0.00283           5.11
18 mu_1       0.9      0.910       0.688  0.0000106        10.3 
19 mu_0       0.1      0.914       0.0116 0.0000000215     18.8 
20 mu_0       0.2      1.06        0.154  0.0000306        10.9 
21 mu_0       0.3      1.13        0.519  0.000948          9.45
22 mu_0       0.4      1.11        0.795  0.00995           5.49
23 mu_0       0.5      1.08        0.978  0.0569            2.74
24 mu_0       0.6      1.04        1.02   0.218             2.38
25 mu_0       0.7      0.994       0.946  0.146             2.36
26 mu_0       0.8      0.956       0.913  0.0128            2.29
27 mu_0       0.9      0.952       0.804  0.000102          3.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.50     0.000362  1.14e-14    146.  
 2 mu         0.2       2.87     0.0171    1.19e- 9     90.0 
 3 mu         0.3       2.43     0.119     6.82e- 7     53.7 
 4 mu         0.4       1.71     0.439     5.83e- 5     30.5 
 5 mu         0.5       1.26     0.969     1.73e- 3     10.7 
 6 mu         0.6       1.17     1.15      2.34e- 3      3.10
 7 mu         0.7       1.46     1.27      3.20e- 5     12.4 
 8 mu         0.8       2.63     0.830     6.36e- 8     60.8 
 9 mu         0.9       4.95     0.0962    1.23e-12    127.  
10 mu_1       0.1       3.11     0.00241   1.02e-13    133.  
11 mu_1       0.2       2.71     0.0615    5.59e- 9     55.8 
12 mu_1       0.3       2.08     0.279     2.14e- 6     49.8 
13 mu_1       0.4       1.48     0.680     1.37e- 4     21.2 
14 mu_1       0.5       1.20     1.08      3.25e- 3      6.10
15 mu_1       0.6       1.20     1.21      4.34e- 4      3.38
16 mu_1       0.7       1.58     1.10      5.08e- 6     15.9 
17 mu_1       0.8       2.86     0.630     8.83e- 9     68.4 
18 mu_1       0.9       5.13     0.0691    1.52e-13    134.  
19 mu_0       0.1       2.43     0.000141  0           148.  
20 mu_0       0.2       2.91     0.00669   0           102.  
21 mu_0       0.3       2.57     0.0570    0            55.5 
22 mu_0       0.4       1.86     0.244     0            36.7 
23 mu_0       0.5       1.32     0.682     0            15.2 
24 mu_0       0.6       1.12     1.06      0             4.24
25 mu_0       0.7       1.17     1.17      0             4.12
26 mu_0       0.8       1.68     0.877     0            30.4 
27 mu_0       0.9       3.31     0.231     0           127.  
[1] "Total run time was 43.396 seconds"
