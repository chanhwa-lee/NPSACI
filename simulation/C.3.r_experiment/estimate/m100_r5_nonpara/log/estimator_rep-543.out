
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1250"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  7  7  4  8  4  6  6  5  1  8  5  9  8  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05592 0.42172 0.63940 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
733 517 
[1] "treatment indicator table: "

  0   1 
446 804 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.164 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.304 0.114 
 2 mu         0.1   0.2 0.333 0.145 
 3 mu         0.1   0.3 0.334 0.166 
 4 mu         0.1   0.4 0.346 0.182 
 5 mu         0.1   0.5 0.332 0.194 
 6 mu         0.2   0.1 0.249 0.0524
 7 mu         0.2   0.2 0.282 0.0631
 8 mu         0.2   0.3 0.281 0.0727
 9 mu         0.2   0.4 0.294 0.0851
10 mu         0.2   0.5 0.284 0.0971
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.901       0.0151 0.00000000737     23.5 
 2 mu         0.2      0.776       0.163  0.0000172          8.53
 3 mu         0.3      0.814       0.522  0.00121            6.24
 4 mu         0.4      0.880       0.854  0.0194             4.47
 5 mu         0.5      0.946       0.906  0.133              2.59
 6 mu         0.6      0.987       0.977  0.282              2.11
 7 mu         0.7      0.977       0.979  0.114              1.70
 8 mu         0.8      0.938       0.901  0.0634             3.05
 9 mu         0.9      0.893       0.546  0.00123            6.01
10 mu_1       0.1      0.822       0.0494 0.0000000496      16.3 
11 mu_1       0.2      0.805       0.338  0.0000585          7.53
12 mu_1       0.3      0.861       0.743  0.00279            5.28
13 mu_1       0.4      0.916       0.895  0.0343             3.12
14 mu_1       0.5      0.971       0.913  0.192              2.21
15 mu_1       0.6      0.994       0.995  0.209              2.10
16 mu_1       0.7      0.973       0.979  0.127              1.67
17 mu_1       0.8      0.935       0.861  0.0431             3.28
18 mu_1       0.9      0.894       0.497  0.000760           6.63
19 mu_0       0.1      0.910       0.0102 0.00000000268     24.3 
20 mu_0       0.2      0.769       0.113  0.00000685         9.63
21 mu_0       0.3      0.794       0.422  0.000532           6.65
22 mu_0       0.4      0.856       0.765  0.00955            5.37
23 mu_0       0.5      0.922       0.887  0.0740             3.48
24 mu_0       0.6      0.976       0.902  0.314              2.50
25 mu_0       0.7      0.988       0.996  0.0833             1.97
26 mu_0       0.8      0.947       0.939  0.144              2.13
27 mu_0       0.9      0.884       0.796  0.00547            4.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      66.3    0.0000483   6.20e-15   6138.  
 2 mu         0.2      34.0    0.00395     1.28e- 9   2392.  
 3 mu         0.3      18.0    0.0500      1.45e- 6    822.  
 4 mu         0.4       8.97   0.306       1.89e- 4    239.  
 5 mu         0.5       4.01   0.727       7.30e- 3    122.  
 6 mu         0.6       1.77   1.10        1.24e- 1     37.7 
 7 mu         0.7       1.21   1.23        8.53e- 3      4.68
 8 mu         0.8       1.40   0.810       2.22e- 5      8.82
 9 mu         0.9       1.67   0.126       5.42e-10     32.7 
10 mu_1       0.1       6.53   0.000212    0           306.  
11 mu_1       0.2      10.8    0.0140      0           372.  
12 mu_1       0.3       8.67   0.0936      0           258.  
13 mu_1       0.4       5.27   0.438       0           185.  
14 mu_1       0.5       2.66   0.859       0            95.2 
15 mu_1       0.6       1.42   1.15        0            24.4 
16 mu_1       0.7       1.19   1.13        0             3.37
17 mu_1       0.8       1.45   0.689       0            10.4 
18 mu_1       0.9       1.68   0.0864      0            34.3 
19 mu_0       0.1      72.9    0.00000895  0          6820.  
20 mu_0       0.2      39.7    0.00138     0          2990.  
21 mu_0       0.3      22.0    0.0241      0          1174.  
22 mu_0       0.4      11.4    0.127       0           399.  
23 mu_0       0.5       5.36   0.480       0           150.  
24 mu_0       0.6       2.29   0.894       0            57.6 
25 mu_0       0.7       1.24   1.13        0             9.54
26 mu_0       0.8       1.19   1.03        0             4.32
27 mu_0       0.9       1.64   0.287       0            18.1 
[1] "Total run time was 46.234 seconds"
