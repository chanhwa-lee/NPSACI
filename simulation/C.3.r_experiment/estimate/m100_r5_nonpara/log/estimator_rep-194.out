
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1311"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  5  5  6  3  2  9  8  6 10  5  8  7  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03066 0.32955 0.58762 0.99898 4.00000 
[1] "event indicator table: "

  0   1 
761 550 
[1] "treatment indicator table: "

  0   1 
516 795 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.25 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.300 0.0863
 2 mu         0.1   0.2 0.288 0.0749
 3 mu         0.1   0.3 0.273 0.0683
 4 mu         0.1   0.4 0.274 0.0715
 5 mu         0.1   0.5 0.275 0.0736
 6 mu         0.2   0.1 0.312 0.0629
 7 mu         0.2   0.2 0.335 0.0569
 8 mu         0.2   0.3 0.356 0.0563
 9 mu         0.2   0.4 0.377 0.0601
10 mu         0.2   0.5 0.392 0.0641
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.509       0.0407 0.000000152       5.74
 2 mu         0.2      0.777       0.335  0.000274          7.92
 3 mu         0.3      0.883       0.731  0.00489           8.15
 4 mu         0.4      0.921       0.850  0.0262            3.57
 5 mu         0.5      0.976       0.957  0.0949            2.39
 6 mu         0.6      1.03        1.03   0.268             2.15
 7 mu         0.7      1.06        1.05   0.210             1.96
 8 mu         0.8      1.06        1.02   0.0249            2.87
 9 mu         0.9      1.07        0.776  0.000364          6.46
10 mu_1       0.1      0.720       0.143  0.000000959       6.75
11 mu_1       0.2      0.877       0.611  0.000865          9.90
12 mu_1       0.3      0.917       0.862  0.0144            6.83
13 mu_1       0.4      0.947       0.904  0.0587            2.85
14 mu_1       0.5      1.00        0.941  0.173             2.18
15 mu_1       0.6      1.05        1.05   0.349             2.14
16 mu_1       0.7      1.06        1.03   0.139             2.20
17 mu_1       0.8      1.07        0.986  0.0148            3.04
18 mu_1       0.9      1.07        0.720  0.000197          6.95
19 mu_0       0.1      0.485       0.0304 0.0000000621      5.63
20 mu_0       0.2      0.751       0.262  0.0000700         7.42
21 mu_0       0.3      0.868       0.720  0.000798          8.72
22 mu_0       0.4      0.903       0.775  0.00448           4.38
23 mu_0       0.5      0.951       0.928  0.0171            2.63
24 mu_0       0.6      1.01        0.978  0.0511            2.15
25 mu_0       0.7      1.05        1.05   0.129             2.11
26 mu_0       0.8      1.05        1.01   0.0652            2.56
27 mu_0       0.9      1.05        0.872  0.00186           4.12
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.33    0.000146   1.48e-16    255.  
 2 mu         0.2       4.60    0.0108     3.87e-11    248.  
 3 mu         0.3       3.43    0.147      5.72e- 8    112.  
 4 mu         0.4       2.43    0.631      1.01e- 5     31.4 
 5 mu         0.5       1.71    1.11       5.63e- 4     12.8 
 6 mu         0.6       1.28    1.25       1.50e- 2      5.59
 7 mu         0.7       1.16    0.941      1.58e- 3      4.28
 8 mu         0.8       1.37    0.408      1.06e- 5      5.81
 9 mu         0.9       1.73    0.0461     1.64e- 9     22.2 
10 mu_1       0.1       5.89    0.00108    1.48e-15    364.  
11 mu_1       0.2       3.93    0.0425     1.93e-10    177.  
12 mu_1       0.3       2.81    0.279      1.91e- 7     53.5 
13 mu_1       0.4       2.08    0.871      2.54e- 5     25.1 
14 mu_1       0.5       1.52    1.17       1.13e- 3      8.93
15 mu_1       0.6       1.21    1.14       6.82e- 3      4.30
16 mu_1       0.7       1.17    0.877      2.88e- 4      4.50
17 mu_1       0.8       1.43    0.292      1.77e- 6      6.53
18 mu_1       0.9       1.76    0.0240     2.43e-10     24.6 
19 mu_0       0.1       4.15    0.0000543  0           243.  
20 mu_0       0.2       4.77    0.00455    0           266.  
21 mu_0       0.3       3.70    0.0897     0           138.  
22 mu_0       0.4       2.66    0.388      0            44.9 
23 mu_0       0.5       1.89    0.902      0            16.6 
24 mu_0       0.6       1.39    1.15       0             7.78
25 mu_0       0.7       1.12    1.05       0             3.75
26 mu_0       0.8       1.14    0.575      0             4.81
27 mu_0       0.9       1.44    0.0278     0            12.1 
[1] "Total run time was 65.721 seconds"
