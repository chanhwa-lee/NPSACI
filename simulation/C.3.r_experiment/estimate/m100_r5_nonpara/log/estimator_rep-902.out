
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1305"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  5  3  5  6  7  7  3  9 10  4  7  8  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0187  0.3100  0.5808  1.0000  4.6938 
[1] "event indicator table: "

  0   1 
782 523 
[1] "treatment indicator table: "

  0   1 
527 778 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.218 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.237 0.0909
 2 mu         0.1   0.2 0.296 0.117 
 3 mu         0.1   0.3 0.357 0.139 
 4 mu         0.1   0.4 0.421 0.158 
 5 mu         0.1   0.5 0.446 0.170 
 6 mu         0.2   0.1 0.332 0.0822
 7 mu         0.2   0.2 0.427 0.0917
 8 mu         0.2   0.3 0.509 0.108 
 9 mu         0.2   0.4 0.589 0.121 
10 mu         0.2   0.5 0.637 0.128 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.889       0.0335 0.0000000798     19.7 
 2 mu         0.2      1.17        0.324  0.0000967        12.0 
 3 mu         0.3      1.10        0.786  0.00464           6.18
 4 mu         0.4      1.01        0.943  0.0562            2.87
 5 mu         0.5      0.957       0.924  0.291             2.44
 6 mu         0.6      0.957       0.944  0.402             1.50
 7 mu         0.7      0.982       1.02   0.0594            1.78
 8 mu         0.8      0.993       0.982  0.00233           2.65
 9 mu         0.9      1.00        0.607  0.00000453        6.87
10 mu_1       0.1      1.36        0.141  0.000000524      21.9 
11 mu_1       0.2      1.23        0.594  0.000322          8.49
12 mu_1       0.3      1.08        0.924  0.0105            4.87
13 mu_1       0.4      0.987       0.957  0.0964            2.64
14 mu_1       0.5      0.952       0.943  0.407             2.24
15 mu_1       0.6      0.963       0.949  0.272             1.45
16 mu_1       0.7      0.988       1.01   0.0352            1.94
17 mu_1       0.8      0.996       0.972  0.00123           2.90
18 mu_1       0.9      1.00        0.549  0.00000217        7.63
19 mu_0       0.1      0.837       0.0242 0.0000000305     19.4 
20 mu_0       0.2      1.16        0.249  0.0000404        13.3 
21 mu_0       0.3      1.12        0.685  0.00215           6.74
22 mu_0       0.4      1.02        0.930  0.0294            3.40
23 mu_0       0.5      0.961       0.923  0.132             2.63
24 mu_0       0.6      0.946       0.915  0.280             1.80
25 mu_0       0.7      0.968       0.974  0.116             1.46
26 mu_0       0.8      0.982       0.933  0.00673           2.36
27 mu_0       0.9      0.963       0.939  0.0000258         3.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.41     0.000135   3.51e-13     37.4 
 2 mu         0.2      1.98     0.0177     1.24e- 8     41.2 
 3 mu         0.3      1.64     0.159      3.63e- 6     21.4 
 4 mu         0.4      1.22     0.542      2.04e- 4      5.87
 5 mu         0.5      1.05     0.889      4.64e- 3      3.73
 6 mu         0.6      1.00     0.955      5.95e- 2      3.47
 7 mu         0.7      1.02     0.990      1.92e- 3      3.46
 8 mu         0.8      1.15     0.442      9.81e- 6      9.47
 9 mu         0.9      1.50     0.0451     8.53e-10     38.9 
10 mu_1       0.1      1.88     0.000844   0            47.2 
11 mu_1       0.2      1.88     0.0442     0            36.3 
12 mu_1       0.3      1.38     0.258      0            12.6 
13 mu_1       0.4      1.09     0.766      0             4.53
14 mu_1       0.5      1.01     0.862      0             3.83
15 mu_1       0.6      0.988    0.939      0             3.18
16 mu_1       0.7      1.03     0.868      0             3.78
17 mu_1       0.8      1.18     0.309      0            11.8 
18 mu_1       0.9      1.55     0.0299     0            43.3 
19 mu_0       0.1      1.35     0.0000626  0            37.4 
20 mu_0       0.2      2.01     0.00630    0            42.4 
21 mu_0       0.3      1.75     0.0853     0            25.2 
22 mu_0       0.4      1.31     0.374      0             8.05
23 mu_0       0.5      1.09     0.798      0             4.32
24 mu_0       0.6      1.02     0.919      0             3.90
25 mu_0       0.7      0.995    1.01       0             2.71
26 mu_0       0.8      1.02     0.752      0             4.56
27 mu_0       0.9      1.12     0.121      0            13.3 
[1] "Total run time was 72.092 seconds"
