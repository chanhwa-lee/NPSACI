
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1276"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  9  5  7  2  4  6  8  8  8  8  8  5  6  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02362 0.30624 0.56816 0.97420 5.00000 
[1] "event indicator table: "

  0   1 
756 520 
[1] "treatment indicator table: "

  0   1 
461 815 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 74.811 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.527 0.224
 2 mu         0.1   0.2 0.584 0.279
 3 mu         0.1   0.3 0.619 0.324
 4 mu         0.1   0.4 0.696 0.369
 5 mu         0.1   0.5 0.860 0.404
 6 mu         0.2   0.1 0.537 0.225
 7 mu         0.2   0.2 0.607 0.286
 8 mu         0.2   0.3 0.659 0.329
 9 mu         0.2   0.4 0.771 0.376
10 mu         0.2   0.5 0.916 0.416
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.37        0.0222  6.34e-10     69.9 
 2 mu         0.2      1.51        0.207   5.13e- 6     75.5 
 3 mu         0.3      1.18        0.577   6.72e- 4     26.3 
 4 mu         0.4      1.05        0.841   1.50e- 2      7.11
 5 mu         0.5      1.02        0.954   1.15e- 1      3.59
 6 mu         0.6      1.01        0.926   2.10e- 1      2.30
 7 mu         0.7      0.993       0.959   1.69e- 1      2.01
 8 mu         0.8      0.990       0.928   1.35e- 1      2.45
 9 mu         0.9      1.03        0.890   5.21e- 3      5.06
10 mu_1       0.1      1.76        0.0799  4.44e- 9    105.  
11 mu_1       0.2      1.42        0.390   1.79e- 5     56.6 
12 mu_1       0.3      1.12        0.803   1.57e- 3     13.2 
13 mu_1       0.4      1.04        0.930   2.62e- 2      6.34
14 mu_1       0.5      1.02        0.932   1.61e- 1      2.73
15 mu_1       0.6      1.01        0.922   1.72e- 1      2.31
16 mu_1       0.7      0.989       0.967   1.97e- 1      2.04
17 mu_1       0.8      0.996       0.938   9.03e- 2      2.85
18 mu_1       0.9      1.04        0.871   3.43e- 3      5.56
19 mu_0       0.1      1.33        0.0138  2.11e-10     66.0 
20 mu_0       0.2      1.53        0.160   1.92e- 6     80.2 
21 mu_0       0.3      1.21        0.455   2.88e- 4     32.0 
22 mu_0       0.4      1.06        0.775   7.48e- 3      7.62
23 mu_0       0.5      1.03        0.918   4.93e- 2      4.45
24 mu_0       0.6      1.02        0.955   1.84e- 1      2.41
25 mu_0       0.7      1.00        0.903   1.06e- 1      2.23
26 mu_0       0.8      0.970       0.908   1.70e- 1      2.19
27 mu_0       0.9      0.950       0.874   2.12e- 2      3.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      21.8     0.0000611  2.92e-19   1846.  
 2 mu         0.2      17.0     0.00604    3.06e-13   1011.  
 3 mu         0.3       8.26    0.0602     1.02e- 9    349.  
 4 mu         0.4       3.10    0.358      3.21e- 7     85.4 
 5 mu         0.5       1.48    0.814      2.78e- 5     14.4 
 6 mu         0.6       1.17    0.863      1.07e- 3      8.41
 7 mu         0.7       1.12    0.889      1.29e- 3      5.14
 8 mu         0.8       1.17    0.750      9.91e- 6      7.68
 9 mu         0.9       1.42    0.120      5.55e-10     32.5 
10 mu_1       0.1      21.9     0.000402   2.92e-18   1539.  
11 mu_1       0.2      11.2     0.0213     1.53e-12    421.  
12 mu_1       0.3       4.48    0.149      3.39e- 9    152.  
13 mu_1       0.4       1.81    0.655      8.01e- 7     30.6 
14 mu_1       0.5       1.20    0.954      5.56e- 5      8.52
15 mu_1       0.6       1.12    0.809      1.78e- 3      8.01
16 mu_1       0.7       1.12    0.960      3.46e- 4      4.73
17 mu_1       0.8       1.19    0.584      2.32e- 6      8.78
18 mu_1       0.9       1.45    0.0650     1.23e-10     36.1 
19 mu_0       0.1      21.8     0.0000215  0          1880.  
20 mu_0       0.2      18.5     0.00200    0          1158.  
21 mu_0       0.3       9.88    0.0308     0           457.  
22 mu_0       0.4       3.96    0.205      0           130.  
23 mu_0       0.5       1.76    0.672      0            26.3 
24 mu_0       0.6       1.26    0.983      0             9.01
25 mu_0       0.7       1.14    0.805      0             7.34
26 mu_0       0.8       1.07    0.755      0             4.80
27 mu_0       0.9       1.13    0.160      0            12.5 
[1] "Total run time was 80.81 seconds"
