
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1322"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  6  6  3  7  4 11  5  3  8  9  9 12  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04404 0.45692 0.65718 1.00000 6.59342 
[1] "event indicator table: "

  0   1 
784 538 
[1] "treatment indicator table: "

  0   1 
453 869 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 699
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 82.915 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.766 0.396
 2 mu         0.1   0.2 0.855 0.443
 3 mu         0.1   0.3 0.866 0.458
 4 mu         0.1   0.4 0.946 0.487
 5 mu         0.1   0.5 1.00  0.533
 6 mu         0.2   0.1 0.381 0.130
 7 mu         0.2   0.2 0.447 0.135
 8 mu         0.2   0.3 0.464 0.139
 9 mu         0.2   0.4 0.503 0.145
10 mu         0.2   0.5 0.517 0.158
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.63       0.0136   7.42e-11     73.5 
 2 mu         0.2      0.939      0.178    4.42e- 7     20.4 
 3 mu         0.3      0.977      0.595    6.04e- 5      4.50
 4 mu         0.4      1.08       0.869    1.71e- 3      4.06
 5 mu         0.5      1.05       1.01     1.97e- 2      2.54
 6 mu         0.6      0.973      0.990    1.24e- 1      1.89
 7 mu         0.7      0.946      0.900    3.22e- 1      2.16
 8 mu         0.8      0.982      0.961    3.26e- 1      2.98
 9 mu         0.9      0.996      0.773    5.61e- 2      3.64
10 mu_1       0.1      1.08       0.0434   6.04e-10     40.9 
11 mu_1       0.2      0.904      0.374    1.81e- 6      6.48
12 mu_1       0.3      1.06       0.845    1.65e- 4      4.48
13 mu_1       0.4      1.09       0.955    3.51e- 3      3.74
14 mu_1       0.5      1.02       0.993    3.26e- 2      2.11
15 mu_1       0.6      0.947      0.953    1.73e- 1      2.04
16 mu_1       0.7      0.941      0.898    2.80e- 1      2.29
17 mu_1       0.8      0.984      0.956    2.27e- 1      3.10
18 mu_1       0.9      0.992      0.731    3.39e- 2      3.69
19 mu_0       0.1      1.69       0.00861  1.53e-11     77.1 
20 mu_0       0.2      0.948      0.133    1.01e- 7     23.9 
21 mu_0       0.3      0.943      0.487    1.56e- 5      5.47
22 mu_0       0.4      1.08       0.853    5.01e- 4      4.35
23 mu_0       0.5      1.09       0.949    6.70e- 3      3.39
24 mu_0       0.6      1.01       0.983    5.00e- 2      2.42
25 mu_0       0.7      0.957      0.929    2.40e- 1      2.15
26 mu_0       0.8      0.973      0.917    1.85e- 1      2.60
27 mu_0       0.9      1.03       0.904    1.34e- 2      3.12
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.65   0.00000690  2.15e-15     65.8 
 2 mu         0.2       1.85   0.00129     2.51e-10     36.4 
 3 mu         0.3       1.62   0.0404      2.16e- 7     34.1 
 4 mu         0.4       1.28   0.217       2.47e- 5     17.0 
 5 mu         0.5       1.12   0.481       9.12e- 4      9.39
 6 mu         0.6       1.08   0.815       1.62e- 2      7.06
 7 mu         0.7       1.09   1.00        1.46e- 3      5.14
 8 mu         0.8       1.15   0.916       8.51e- 6      5.14
 9 mu         0.9       1.11   0.212       8.32e-10      9.26
10 mu_1       0.1       1.44   0.0000183   0            39.4 
11 mu_1       0.2       1.69   0.00345     0            41.9 
12 mu_1       0.3       1.37   0.0687      0            28.5 
13 mu_1       0.4       1.12   0.327       0            10.6 
14 mu_1       0.5       1.06   0.623       0             9.39
15 mu_1       0.6       1.05   0.870       0             5.88
16 mu_1       0.7       1.10   1.03        0             5.04
17 mu_1       0.8       1.16   0.831       0             5.35
18 mu_1       0.9       1.10   0.149       0             9.88
19 mu_0       0.1       1.68   0.00000136  0            73.1 
20 mu_0       0.2       1.89   0.000628    0            37.0 
21 mu_0       0.3       1.73   0.0167      0            36.6 
22 mu_0       0.4       1.39   0.104       0            21.2 
23 mu_0       0.5       1.19   0.304       0            10.9 
24 mu_0       0.6       1.11   0.569       0             8.82
25 mu_0       0.7       1.06   0.883       0             5.35
26 mu_0       0.8       1.09   0.954       0             4.59
27 mu_0       0.9       1.18   0.379       0             6.95
[1] "Total run time was 87.911 seconds"
