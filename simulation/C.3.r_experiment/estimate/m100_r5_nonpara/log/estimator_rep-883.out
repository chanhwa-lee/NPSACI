
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1245"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  4 17  5  4  7  6  2  6  5  6  9  8  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02905 0.33093 0.59084 1.00000 4.40794 
[1] "event indicator table: "

  0   1 
740 505 
[1] "treatment indicator table: "

  0   1 
492 753 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 116.301 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.198 0.0566
 2 mu         0.1   0.2 0.273 0.0974
 3 mu         0.1   0.3 0.309 0.138 
 4 mu         0.1   0.4 0.344 0.172 
 5 mu         0.1   0.5 0.345 0.172 
 6 mu         0.2   0.1 0.248 0.0479
 7 mu         0.2   0.2 0.349 0.0753
 8 mu         0.2   0.3 0.393 0.101 
 9 mu         0.2   0.4 0.446 0.124 
10 mu         0.2   0.5 0.456 0.121 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.603       0.0445 0.00000000569      8.13
 2 mu         0.2      0.764       0.308  0.0000244         11.1 
 3 mu         0.3      0.877       0.634  0.00229            5.07
 4 mu         0.4      0.952       0.868  0.0350             3.46
 5 mu         0.5      0.972       0.952  0.216              2.12
 6 mu         0.6      0.988       0.955  0.255              1.75
 7 mu         0.7      1.03        1.01   0.175              2.71
 8 mu         0.8      1.06        0.994  0.00943            3.36
 9 mu         0.9      1.10        0.796  0.0000252          6.69
10 mu_1       0.1      0.746       0.153  0.0000000391      13.5 
11 mu_1       0.2      0.845       0.601  0.0000840          9.26
12 mu_1       0.3      0.934       0.848  0.00529            4.57
13 mu_1       0.4      0.968       0.895  0.0607             2.79
14 mu_1       0.5      0.968       0.989  0.216              2.07
15 mu_1       0.6      0.993       0.983  0.269              1.86
16 mu_1       0.7      1.04        0.990  0.116              2.98
17 mu_1       0.8      1.07        0.954  0.00552            3.30
18 mu_1       0.9      1.11        0.773  0.0000132          6.94
19 mu_0       0.1      0.587       0.0311 0.00000000198      7.53
20 mu_0       0.2      0.743       0.227  0.00000945        11.6 
21 mu_0       0.3      0.852       0.580  0.00100            6.03
22 mu_0       0.4      0.941       0.803  0.0178             3.90
23 mu_0       0.5      0.975       0.905  0.128              2.17
24 mu_0       0.6      0.980       0.981  0.200              1.76
25 mu_0       0.7      0.999       0.988  0.247              2.09
26 mu_0       0.8      1.02        0.948  0.0250             3.60
27 mu_0       0.9      1.05        0.942  0.000133           4.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.49     0.000191   1.96e-18    121.  
 2 mu         0.2      1.48     0.0124     2.06e-12     92.9 
 3 mu         0.3      1.19     0.142      6.84e- 9     32.2 
 4 mu         0.4      1.11     0.587      2.16e- 6      6.62
 5 mu         0.5      1.08     0.891      1.87e- 4      3.79
 6 mu         0.6      1.03     0.946      1.25e- 3      2.87
 7 mu         0.7      1.00     1.02       1.70e- 5      2.55
 8 mu         0.8      1.05     0.559      3.38e- 8      3.99
 9 mu         0.9      1.20     0.0597     6.53e-13     23.9 
10 mu_1       0.1      2.01     0.00114    1.96e-17    151.  
11 mu_1       0.2      1.35     0.0421     1.03e-11     58.1 
12 mu_1       0.3      1.16     0.277      2.28e- 8     13.4 
13 mu_1       0.4      1.12     0.828      5.40e- 6      5.82
14 mu_1       0.5      1.08     0.984      3.74e- 4      3.79
15 mu_1       0.6      1.03     1.05       2.31e- 4      2.73
16 mu_1       0.7      1.01     0.886      2.70e- 6      2.94
17 mu_1       0.8      1.05     0.436      4.70e- 9      4.36
18 mu_1       0.9      1.20     0.0425     8.07e-14     26.5 
19 mu_0       0.1      1.43     0.0000682  0           118.  
20 mu_0       0.2      1.51     0.00579    0           102.  
21 mu_0       0.3      1.21     0.0760     0            40.3 
22 mu_0       0.4      1.11     0.391      0             9.66
23 mu_0       0.5      1.08     0.771      0             4.38
24 mu_0       0.6      1.03     0.922      0             3.42
25 mu_0       0.7      0.985    1.00       0             2.96
26 mu_0       0.8      1.01     0.770      0             3.16
27 mu_0       0.9      1.18     0.193      0             7.32
[1] "Total run time was 122.33 seconds"
