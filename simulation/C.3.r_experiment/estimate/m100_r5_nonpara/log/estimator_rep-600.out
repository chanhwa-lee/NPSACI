
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1215"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  9  4  4  4  8  2  7  7  7  7  7  7  8  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0339  0.3693  0.5979  1.0000  4.0000 
[1] "event indicator table: "

  0   1 
730 485 
[1] "treatment indicator table: "

  0   1 
457 758 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 566
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.933 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.254 0.0856
 2 mu         0.1   0.2 0.326 0.106 
 3 mu         0.1   0.3 0.317 0.105 
 4 mu         0.1   0.4 0.316 0.105 
 5 mu         0.1   0.5 0.309 0.110 
 6 mu         0.2   0.1 0.269 0.0712
 7 mu         0.2   0.2 0.378 0.0961
 8 mu         0.2   0.3 0.394 0.0966
 9 mu         0.2   0.4 0.409 0.100 
10 mu         0.2   0.5 0.416 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.543       0.0206 0.00000000844     11.6 
 2 mu         0.2      0.800       0.235  0.0000118         19.1 
 3 mu         0.3      0.957       0.638  0.000667          19.6 
 4 mu         0.4      1.02        0.891  0.00972           10.3 
 5 mu         0.5      1.05        1.02   0.0645             3.81
 6 mu         0.6      1.04        1.05   0.248              2.02
 7 mu         0.7      1.03        1.00   0.289              1.99
 8 mu         0.8      1.02        0.926  0.0535             2.59
 9 mu         0.9      1.13        0.541  0.00127           11.9 
10 mu_1       0.1      0.617       0.0774 0.0000000623      12.2 
11 mu_1       0.2      0.880       0.436  0.0000440         23.9 
12 mu_1       0.3      0.983       0.797  0.00167           16.5 
13 mu_1       0.4      1.03        0.974  0.0184             6.94
14 mu_1       0.5      1.06        1.02   0.0987             2.84
15 mu_1       0.6      1.05        1.04   0.322              1.83
16 mu_1       0.7      1.03        0.972  0.229              2.07
17 mu_1       0.8      1.02        0.880  0.0386             2.78
18 mu_1       0.9      1.15        0.492  0.000827          13.1 
19 mu_0       0.1      0.535       0.0140 0.00000000245     12.8 
20 mu_0       0.2      0.780       0.177  0.00000379        17.9 
21 mu_0       0.3      0.945       0.539  0.000239          20.9 
22 mu_0       0.4      1.01        0.794  0.00394           12.6 
23 mu_0       0.5      1.04        1.01   0.0302             5.04
24 mu_0       0.6      1.04        1.05   0.137              2.41
25 mu_0       0.7      1.03        1.02   0.405              1.80
26 mu_0       0.8      1.02        0.985  0.113              2.35
27 mu_0       0.9      0.983       0.931  0.00525            3.01
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      13.8     0.0000451  3.77e-16   1034.  
 2 mu         0.2      12.8     0.00715    9.87e-11    795.  
 3 mu         0.3       6.21    0.0789     1.46e- 7    276.  
 4 mu         0.4       2.45    0.301      2.59e- 5     60.9 
 5 mu         0.5       1.25    0.756      1.44e- 3     11.1 
 6 mu         0.6       1.06    1.08       4.22e- 4      4.24
 7 mu         0.7       1.11    1.08       3.24e- 6      3.07
 8 mu         0.8       1.19    0.857      2.86e- 9      6.78
 9 mu         0.9       1.42    0.191      1.38e-14     56.5 
10 mu_1       0.1      17.5     0.000252   0          1293.  
11 mu_1       0.2       9.34    0.0128     0           497.  
12 mu_1       0.3       3.65    0.142      0           119.  
13 mu_1       0.4       1.56    0.413      0            28.5 
14 mu_1       0.5       1.07    0.931      0             4.53
15 mu_1       0.6       1.05    1.06       0             3.92
16 mu_1       0.7       1.13    1.05       0             3.27
17 mu_1       0.8       1.18    0.708      0             8.48
18 mu_1       0.9       1.45    0.154      0            62.8 
19 mu_0       0.1      13.4     0.0000174  0          1005.  
20 mu_0       0.2      13.6     0.00213    0           870.  
21 mu_0       0.3       7.30    0.0359     0           345.  
22 mu_0       0.4       3.04    0.186      0            82.7 
23 mu_0       0.5       1.44    0.515      0            18.1 
24 mu_0       0.6       1.08    0.952      0             4.71
25 mu_0       0.7       1.09    1.12       0             3.01
26 mu_0       0.8       1.19    1.24       0             4.71
27 mu_0       0.9       1.20    0.470      0             6.12
[1] "Total run time was 66.139 seconds"
