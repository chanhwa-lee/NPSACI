
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1283"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  7  6  5  5  4  8  9  4  5 11  4  9  3  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03445 0.36210 0.62377 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
788 495 
[1] "treatment indicator table: "

  0   1 
467 816 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 74.393 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.409 0.183 
 2 mu         0.1   0.2 0.423 0.173 
 3 mu         0.1   0.3 0.443 0.176 
 4 mu         0.1   0.4 0.453 0.173 
 5 mu         0.1   0.5 0.447 0.171 
 6 mu         0.2   0.1 0.364 0.0947
 7 mu         0.2   0.2 0.407 0.103 
 8 mu         0.2   0.3 0.446 0.115 
 9 mu         0.2   0.4 0.459 0.115 
10 mu         0.2   0.5 0.458 0.117 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.552      0.00707 0.000000296     13.2 
 2 mu         0.2      0.796      0.143   0.000486        11.4 
 3 mu         0.3      0.878      0.509   0.0142           4.73
 4 mu         0.4      0.947      0.807   0.0825           2.44
 5 mu         0.5      1.02       0.959   0.291            2.13
 6 mu         0.6      1.05       1.06    0.575            1.67
 7 mu         0.7      1.03       0.978   0.391            1.67
 8 mu         0.8      0.980      0.921   0.126            2.32
 9 mu         0.9      0.919      0.541   0.00394          5.68
10 mu_1       0.1      0.753      0.0327  0.00000178      17.6 
11 mu_1       0.2      0.858      0.311   0.00147          7.68
12 mu_1       0.3      0.893      0.705   0.0317           2.91
13 mu_1       0.4      0.966      0.889   0.155            2.41
14 mu_1       0.5      1.03       1.02    0.424            2.13
15 mu_1       0.6      1.05       1.06    0.480            1.73
16 mu_1       0.7      1.02       1.00    0.213            1.60
17 mu_1       0.8      0.970      0.872   0.0663           2.48
18 mu_1       0.9      0.909      0.501   0.00266          6.23
19 mu_0       0.1      0.530      0.00467 0.000000131     12.7 
20 mu_0       0.2      0.780      0.102   0.000241        12.4 
21 mu_0       0.3      0.872      0.414   0.00529          5.76
22 mu_0       0.4      0.934      0.747   0.0339           2.91
23 mu_0       0.5      1.00       0.928   0.135            2.22
24 mu_0       0.6      1.05       1.07    0.393            1.96
25 mu_0       0.7      1.05       1.02    0.478            1.84
26 mu_0       0.8      1.02       1.01    0.282            1.84
27 mu_0       0.9      1.00       0.816   0.0155           3.20
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.368   0.0000173   7.26e-15     15.6 
 2 mu         0.2      1.09    0.00400     4.76e-10     42.8 
 3 mu         0.3      1.30    0.0550      3.12e- 7     29.2 
 4 mu         0.4      1.15    0.299       3.12e- 5      9.14
 5 mu         0.5      1.00    0.818       1.11e- 3      3.96
 6 mu         0.6      0.982   0.989       2.05e- 2      2.32
 7 mu         0.7      1.03    1.06        2.62e- 3      2.59
 8 mu         0.8      1.11    0.692       1.02e- 5      4.57
 9 mu         0.9      1.23    0.106       4.98e-10     16.4 
10 mu_1       0.1      0.867   0.000125    7.26e-14     32.9 
11 mu_1       0.2      1.41    0.0131      2.38e- 9     45.0 
12 mu_1       0.3      1.32    0.132       1.04e- 6     20.5 
13 mu_1       0.4      1.09    0.516       7.79e- 5      5.51
14 mu_1       0.5      0.976   0.905       2.21e- 3      3.30
15 mu_1       0.6      0.984   1.04        3.41e- 2      2.46
16 mu_1       0.7      1.04    1.10        7.87e- 4      2.71
17 mu_1       0.8      1.12    0.570       2.68e- 6      4.99
18 mu_1       0.9      1.24    0.0736      1.17e-10     18.2 
19 mu_0       0.1      0.313   0.00000629  0            13.7 
20 mu_0       0.2      1.01    0.00159     0            42.2 
21 mu_0       0.3      1.29    0.0267      0            32.9 
22 mu_0       0.4      1.18    0.151       0            12.0 
23 mu_0       0.5      1.03    0.566       0             4.62
24 mu_0       0.6      0.978   0.962       0             3.01
25 mu_0       0.7      1.01    1.15        0             2.62
26 mu_0       0.8      1.08    1.12        0             3.81
27 mu_0       0.9      1.20    0.337       0             7.70
[1] "Total run time was 78.803 seconds"
