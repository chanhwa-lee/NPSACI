
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1291"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  5  8  6  9  7  7  4  4  6  7  9  7  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02928 0.41209 0.64777 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
789 502 
[1] "treatment indicator table: "

  0   1 
444 847 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.648 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.158 0.109 
 2 mu         0.1   0.2 0.134 0.107 
 3 mu         0.1   0.3 0.169 0.0582
 4 mu         0.1   0.4 0.174 0.0518
 5 mu         0.1   0.5 0.297 0.105 
 6 mu         0.2   0.1 0.254 0.0877
 7 mu         0.2   0.2 0.251 0.0862
 8 mu         0.2   0.3 0.292 0.0608
 9 mu         0.2   0.4 0.321 0.0633
10 mu         0.2   0.5 0.427 0.0965
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.277      0.00774 0.0000000116       4.69
 2 mu         0.2      0.597      0.147   0.0000272          7.44
 3 mu         0.3      0.784      0.491   0.00190            6.00
 4 mu         0.4      0.876      0.858   0.0299             3.44
 5 mu         0.5      0.929      0.892   0.196              2.72
 6 mu         0.6      0.974      0.993   0.445              1.83
 7 mu         0.7      1.01       1.00    0.436              1.78
 8 mu         0.8      1.05       0.987   0.229              2.63
 9 mu         0.9      1.10       0.764   0.0230             6.77
10 mu_1       0.1      0.567      0.0296  0.0000000818       9.42
11 mu_1       0.2      0.769      0.339   0.0000966          7.60
12 mu_1       0.3      0.854      0.727   0.00452            4.26
13 mu_1       0.4      0.908      0.871   0.0537             3.23
14 mu_1       0.5      0.951      0.943   0.286              2.44
15 mu_1       0.6      0.991      0.994   0.509              1.67
16 mu_1       0.7      1.03       0.995   0.427              1.87
17 mu_1       0.8      1.06       0.996   0.191              2.86
18 mu_1       0.9      1.10       0.728   0.0179             7.50
19 mu_0       0.1      0.245      0.00521 0.00000000376      4.17
20 mu_0       0.2      0.554      0.106   0.00000987         7.40
21 mu_0       0.3      0.754      0.402   0.000780           6.74
22 mu_0       0.4      0.855      0.776   0.0140             4.37
23 mu_0       0.5      0.907      0.852   0.107              3.00
24 mu_0       0.6      0.949      0.943   0.297              2.08
25 mu_0       0.7      0.987      0.955   0.457              1.61
26 mu_0       0.8      1.02       1.00    0.350              2.14
27 mu_0       0.9      1.04       0.990   0.0696             3.82
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.32   0.0000301   1.14e-15     56.6 
 2 mu         0.2       1.50   0.00359     2.36e-10     46.7 
 3 mu         0.3       1.32   0.0566      2.67e- 7     31.4 
 4 mu         0.4       1.22   0.253       3.48e- 5     16.6 
 5 mu         0.5       1.20   0.767       1.34e- 3      6.95
 6 mu         0.6       1.18   1.05        2.28e- 2      6.15
 7 mu         0.7       1.19   1.14        4.21e- 3      5.22
 8 mu         0.8       1.33   0.740       3.23e- 5      6.65
 9 mu         0.9       1.59   0.0987      5.61e- 9     17.2 
10 mu_1       0.1       1.84   0.000184    1.02e-14     67.6 
11 mu_1       0.2       1.35   0.0112      1.06e- 9     33.3 
12 mu_1       0.3       1.15   0.137       8.00e- 7     15.0 
13 mu_1       0.4       1.15   0.454       7.82e- 5      8.09
14 mu_1       0.5       1.17   0.967       2.41e- 3      4.76
15 mu_1       0.6       1.18   1.03        3.42e- 2      6.47
16 mu_1       0.7       1.20   1.15        1.13e- 3      4.71
17 mu_1       0.8       1.36   0.654       7.57e- 6      7.43
18 mu_1       0.9       1.59   0.0750      1.17e- 9     18.0 
19 mu_0       0.1       1.26   0.00000685  0            56.6 
20 mu_0       0.2       1.54   0.00161     0            50.0 
21 mu_0       0.3       1.39   0.0238      0            38.5 
22 mu_0       0.4       1.27   0.137       0            23.7 
23 mu_0       0.5       1.22   0.490       0            11.9 
24 mu_0       0.6       1.20   1.00        0             5.66
25 mu_0       0.7       1.17   1.04        0             6.41
26 mu_0       0.8       1.20   1.00        0             5.13
27 mu_0       0.9       1.52   0.269       0            13.0 
[1] "Total run time was 61.848 seconds"
