
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1258"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  2  8  8  7  5 11  9  4  6  3  7  7  5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02784 0.33786 0.61623 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
752 506 
[1] "treatment indicator table: "

  0   1 
501 757 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.157 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.268 0.131 
 2 mu         0.1   0.2 0.314 0.137 
 3 mu         0.1   0.3 0.364 0.141 
 4 mu         0.1   0.4 0.421 0.116 
 5 mu         0.1   0.5 0.443 0.128 
 6 mu         0.2   0.1 0.226 0.107 
 7 mu         0.2   0.2 0.285 0.113 
 8 mu         0.2   0.3 0.335 0.113 
 9 mu         0.2   0.4 0.397 0.0777
10 mu         0.2   0.5 0.412 0.0890
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.728       0.0518 0.00000000681      9.08
 2 mu         0.2      0.766       0.369  0.0000155          4.59
 3 mu         0.3      0.856       0.707  0.00104            3.07
 4 mu         0.4      0.904       0.899  0.0154             2.28
 5 mu         0.5      0.945       0.970  0.0935             2.09
 6 mu         0.6      0.984       1.03   0.0280             2.00
 7 mu         0.7      0.997       0.975  0.00144            2.95
 8 mu         0.8      0.971       0.976  0.0000149          4.89
 9 mu         0.9      0.939       0.571  0.00000000341     11.2 
10 mu_1       0.1      0.638       0.128  0.0000000481       5.46
11 mu_1       0.2      0.808       0.516  0.0000548          3.86
12 mu_1       0.3      0.880       0.794  0.00245            2.75
13 mu_1       0.4      0.917       0.905  0.0274             2.07
14 mu_1       0.5      0.958       0.955  0.125              2.05
15 mu_1       0.6      0.992       1.01   0.0143             2.06
16 mu_1       0.7      0.995       0.985  0.000665           3.52
17 mu_1       0.8      0.962       0.931  0.00000622         5.32
18 mu_1       0.9      0.940       0.526  0.00000000129     12.4 
19 mu_0       0.1      0.738       0.0365 0.00000000223      9.94
20 mu_0       0.2      0.756       0.297  0.00000570         5.62
21 mu_0       0.3      0.846       0.672  0.000435           3.42
22 mu_0       0.4      0.896       0.802  0.00748            2.53
23 mu_0       0.5      0.932       0.889  0.0464             2.13
24 mu_0       0.6      0.972       1.00   0.0486             2.11
25 mu_0       0.7      1.00        1.02   0.00326            1.81
26 mu_0       0.8      1.01        0.973  0.0000498          3.15
27 mu_0       0.9      0.934       0.803  0.0000000225       6.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     492.      0.0000801  3.62e-16  49077.  
 2 mu         0.2     150.      0.00728    4.74e-11  14910.  
 3 mu         0.3      27.6     0.110      4.67e- 8   2640.  
 4 mu         0.4       4.17    0.457      6.21e- 6    299.  
 5 mu         0.5       1.35    0.794      2.76e- 4     23.8 
 6 mu         0.6       1.22    1.05       6.12e- 3      9.16
 7 mu         0.7       1.97    1.06       1.86e- 4     71.6 
 8 mu         0.8       7.41    0.601      1.09e- 6    603.  
 9 mu         0.9      30.0     0.0771     1.50e-10   2828.  
10 mu_1       0.1     290.      0.000539   3.62e-15  28869.  
11 mu_1       0.2      45.1     0.0234     2.37e-10   4385.  
12 mu_1       0.3       6.35    0.223      1.56e- 7    518.  
13 mu_1       0.4       1.60    0.656      1.55e- 5     44.0 
14 mu_1       0.5       1.17    0.847      5.52e- 4     19.6 
15 mu_1       0.6       1.26    1.09       7.99e- 4      8.08
16 mu_1       0.7       2.25    0.981      1.90e- 5     97.2 
17 mu_1       0.8       8.57    0.460      9.75e- 8    717.  
18 mu_1       0.9      31.6     0.0491     1.19e-11   2985.  
19 mu_0       0.1     514.      0.0000243  0         51322.  
20 mu_0       0.2     177.      0.00321    0         17541.  
21 mu_0       0.3      36.7     0.0516     0          3550.  
22 mu_0       0.4       5.88    0.267      0           469.  
23 mu_0       0.5       1.53    0.665      0            38.0 
24 mu_0       0.6       1.15    0.849      0            13.5 
25 mu_0       0.7       1.30    1.01       0            11.9 
26 mu_0       0.8       2.74    0.849      0           151.  
27 mu_0       0.9      15.3     0.161      0          1414.  
[1] "Total run time was 61.23 seconds"
