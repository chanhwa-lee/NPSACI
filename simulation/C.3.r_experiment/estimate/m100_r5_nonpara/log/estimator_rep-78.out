
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1295"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10  7  5  5  3  6  4  4  6  5 11  3  8 10  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04505 0.36841 0.63204 1.00000 5.40714 
[1] "event indicator table: "

  0   1 
774 521 
[1] "treatment indicator table: "

  0   1 
492 803 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.2 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.161 0.114 
 2 mu         0.1   0.2 0.260 0.126 
 3 mu         0.1   0.3 0.301 0.128 
 4 mu         0.1   0.4 0.394 0.153 
 5 mu         0.1   0.5 0.391 0.156 
 6 mu         0.2   0.1 0.203 0.0655
 7 mu         0.2   0.2 0.297 0.0650
 8 mu         0.2   0.3 0.341 0.0687
 9 mu         0.2   0.4 0.438 0.0848
10 mu         0.2   0.5 0.442 0.0873
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.704       0.0282 0.00000000297     21.7 
 2 mu         0.2      0.855       0.256  0.0000121          7.17
 3 mu         0.3      0.933       0.649  0.00108            4.94
 4 mu         0.4      0.982       0.888  0.0187             2.52
 5 mu         0.5      1.02        0.956  0.125              2.59
 6 mu         0.6      1.03        1.02   0.238              2.77
 7 mu         0.7      1.01        0.990  0.181              1.89
 8 mu         0.8      1.02        0.964  0.0158             3.15
 9 mu         0.9      1.12        0.543  0.000131           5.84
10 mu_1       0.1      0.898       0.111  0.0000000203      12.1 
11 mu_1       0.2      0.936       0.525  0.0000414          7.56
12 mu_1       0.3      0.964       0.850  0.00246            3.52
13 mu_1       0.4      0.997       0.880  0.0324             2.62
14 mu_1       0.5      1.02        0.999  0.176              2.86
15 mu_1       0.6      1.02        0.999  0.189              2.60
16 mu_1       0.7      1.01        1.01   0.119              1.94
17 mu_1       0.8      1.03        0.947  0.00944            3.43
18 mu_1       0.9      1.13        0.488  0.0000716          6.47
19 mu_0       0.1      0.683       0.0211 0.00000000104     22.8 
20 mu_0       0.2      0.834       0.177  0.00000476         7.11
21 mu_0       0.3      0.920       0.577  0.000481           5.55
22 mu_0       0.4      0.972       0.862  0.00961            3.02
23 mu_0       0.5      1.01        0.909  0.0745             2.40
24 mu_0       0.6      1.03        1.02   0.249              3.01
25 mu_0       0.7      1.01        1.01   0.155              1.97
26 mu_0       0.8      0.977       0.947  0.0413             2.05
27 mu_0       0.9      0.987       0.702  0.000667           4.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.782    0.0000690  1.22e-16     55.1 
 2 mu         0.2      1.99     0.00978    5.68e-11    107.  
 3 mu         0.3      2.42     0.106      1.10e- 7     72.9 
 4 mu         0.4      1.93     0.363      2.23e- 5     44.4 
 5 mu         0.5      1.35     0.863      1.29e- 3     13.2 
 6 mu         0.6      1.08     1.10       3.30e- 2      3.00
 7 mu         0.7      1.01     1.06       2.43e- 2      2.45
 8 mu         0.8      1.11     0.464      1.85e- 4      5.18
 9 mu         0.9      1.46     0.0615     2.30e- 8     18.3 
10 mu_1       0.1      1.58     0.000345   1.16e-15    110.  
11 mu_1       0.2      2.44     0.0301     2.70e-10    107.  
12 mu_1       0.3      2.37     0.217      3.49e- 7     68.4 
13 mu_1       0.4      1.73     0.642      5.31e- 5     33.3 
14 mu_1       0.5      1.25     1.04       2.46e- 3      7.92
15 mu_1       0.6      1.06     1.01       4.16e- 2      2.52
16 mu_1       0.7      1.02     1.00       5.55e- 3      2.80
17 mu_1       0.8      1.15     0.388      6.96e- 5      6.11
18 mu_1       0.9      1.50     0.0384     7.65e- 9     19.3 
19 mu_0       0.1      0.694    0.0000261  0            49.0 
20 mu_0       0.2      1.88     0.00446    0           107.  
21 mu_0       0.3      2.44     0.0456     0            83.3 
22 mu_0       0.4      2.07     0.204      0            51.8 
23 mu_0       0.5      1.45     0.645      0            18.5 
24 mu_0       0.6      1.11     1.07       0             3.98
25 mu_0       0.7      0.992    0.989      0             2.25
26 mu_0       0.8      0.967    0.803      0             3.26
27 mu_0       0.9      1.12     0.0956     0             9.15
[1] "Total run time was 46.397 seconds"
