
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1232"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  9  9  4  7  9  4  3  6  3 10  3  6 11  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04847 0.35466 0.61627 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
734 498 
[1] "treatment indicator table: "

  0   1 
440 792 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 94.092 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.259 0.0692
 2 mu         0.1   0.2 0.312 0.0925
 3 mu         0.1   0.3 0.356 0.103 
 4 mu         0.1   0.4 0.393 0.121 
 5 mu         0.1   0.5 0.418 0.132 
 6 mu         0.2   0.1 0.243 0.0396
 7 mu         0.2   0.2 0.338 0.0497
 8 mu         0.2   0.3 0.393 0.0571
 9 mu         0.2   0.4 0.440 0.0644
10 mu         0.2   0.5 0.473 0.0727
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.852       0.112   1.91e- 9     13.8 
 2 mu         0.2      1.00        0.628   7.79e- 6      7.14
 3 mu         0.3      1.10        1.09    6.96e- 4      4.58
 4 mu         0.4      1.11        1.03    1.22e- 2      3.12
 5 mu         0.5      1.05        1.06    8.41e- 2      1.97
 6 mu         0.6      0.972       0.956   3.10e- 1      2.00
 7 mu         0.7      0.953       0.910   1.43e- 1      2.22
 8 mu         0.8      0.975       0.898   3.97e- 2      3.19
 9 mu         0.9      0.917       0.829   7.17e- 4      4.37
10 mu_1       0.1      0.887       0.255   1.31e- 8      8.05
11 mu_1       0.2      1.10        0.862   2.67e- 5      6.63
12 mu_1       0.3      1.13        1.04    1.60e- 3      3.62
13 mu_1       0.4      1.09        1.04    2.12e- 2      2.88
14 mu_1       0.5      1.02        1.04    1.19e- 1      2.03
15 mu_1       0.6      0.953       0.946   3.12e- 1      2.11
16 mu_1       0.7      0.952       0.902   1.27e- 1      2.40
17 mu_1       0.8      0.975       0.911   2.67e- 2      3.44
18 mu_1       0.9      0.910       0.797   3.95e- 4      4.34
19 mu_0       0.1      0.848       0.0828  6.70e-10     14.5 
20 mu_0       0.2      0.976       0.541   3.06e- 6      7.27
21 mu_0       0.3      1.09        1.03    3.10e- 4      5.18
22 mu_0       0.4      1.12        1.07    6.24e- 3      3.28
23 mu_0       0.5      1.08        1.02    4.92e- 2      2.48
24 mu_0       0.6      1.00        1.00    2.06e- 1      2.06
25 mu_0       0.7      0.954       0.901   1.80e- 1      2.23
26 mu_0       0.8      0.976       0.908   8.95e- 2      2.93
27 mu_0       0.9      0.975       0.852   3.16e- 3      4.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.72    0.0000369   5.17e-14    519.  
 2 mu         0.2      1.89    0.00327     3.01e- 9    111.  
 3 mu         0.3      1.24    0.0404      1.73e- 6     22.0 
 4 mu         0.4      1.16    0.211       1.48e- 4     14.3 
 5 mu         0.5      1.01    0.545       4.35e- 3      4.24
 6 mu         0.6      0.942   0.868       6.33e- 4      2.89
 7 mu         0.7      1.07    1.00        3.12e- 6      3.66
 8 mu         0.8      1.27    1.13        1.61e- 9      4.99
 9 mu         0.9      1.24    0.288       3.46e-15     10.6 
10 mu_1       0.1      3.09    0.000194    0           259.  
11 mu_1       0.2      1.20    0.0100      0            27.7 
12 mu_1       0.3      1.20    0.0948      0            22.0 
13 mu_1       0.4      1.11    0.318       0            10.7 
14 mu_1       0.5      0.966   0.663       0             3.14
15 mu_1       0.6      0.956   0.853       0             3.10
16 mu_1       0.7      1.11    1.12        0             3.86
17 mu_1       0.8      1.30    0.984       0             5.01
18 mu_1       0.9      1.23    0.206       0            11.1 
19 mu_0       0.1      6.02    0.00000691  0           548.  
20 mu_0       0.2      2.07    0.00120     0           131.  
21 mu_0       0.3      1.26    0.0154      0            22.0 
22 mu_0       0.4      1.19    0.104       0            16.6 
23 mu_0       0.5      1.05    0.370       0             5.93
24 mu_0       0.6      0.921   0.687       0             3.20
25 mu_0       0.7      0.957   0.716       0             3.27
26 mu_0       0.8      1.15    0.945       0             5.26
27 mu_0       0.9      1.29    0.408       0             6.83
[1] "Total run time was 98.968 seconds"
