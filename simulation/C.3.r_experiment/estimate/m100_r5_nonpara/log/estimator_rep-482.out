
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1281"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  9  5  9  4  5  3  8  4  7  6  9  8  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04115 0.36673 0.61612 1.00000 4.46205 
[1] "event indicator table: "

  0   1 
801 480 
[1] "treatment indicator table: "

  0   1 
469 812 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 40.272 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.117 0.0934
 2 mu         0.1   0.2 0.228 0.112 
 3 mu         0.1   0.3 0.416 0.196 
 4 mu         0.1   0.4 0.359 0.190 
 5 mu         0.1   0.5 0.344 0.179 
 6 mu         0.2   0.1 0.180 0.0667
 7 mu         0.2   0.2 0.282 0.0798
 8 mu         0.2   0.3 0.437 0.144 
 9 mu         0.2   0.4 0.409 0.138 
10 mu         0.2   0.5 0.438 0.132 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.495      0.00953 0.000000101      12.4 
 2 mu         0.2      0.712      0.161   0.000186          6.40
 3 mu         0.3      0.851      0.478   0.00899           4.35
 4 mu         0.4      0.956      0.868   0.0793            3.98
 5 mu         0.5      1.03       1.03    0.195             2.79
 6 mu         0.6      1.05       1.06    0.374             1.76
 7 mu         0.7      1.02       1.01    0.331             1.54
 8 mu         0.8      0.999      0.952   0.0267            2.12
 9 mu         0.9      1.02       0.708   0.000149          6.40
10 mu_1       0.1      0.658      0.0412  0.000000611       7.85
11 mu_1       0.2      0.801      0.340   0.000568          5.52
12 mu_1       0.3      0.908      0.734   0.0189            4.13
13 mu_1       0.4      1.00       0.985   0.117             3.80
14 mu_1       0.5      1.05       1.04    0.246             2.40
15 mu_1       0.6      1.04       1.05    0.400             1.76
16 mu_1       0.7      1.01       0.995   0.236             1.60
17 mu_1       0.8      0.990      0.938   0.0171            2.18
18 mu_1       0.9      1.02       0.625   0.0000863         7.02
19 mu_0       0.1      0.476      0.00631 0.0000000441     13.8 
20 mu_0       0.2      0.690      0.106   0.0000900         7.82
21 mu_0       0.3      0.827      0.361   0.00474           4.84
22 mu_0       0.4      0.926      0.754   0.0525            4.10
23 mu_0       0.5      1.01       0.986   0.144             3.18
24 mu_0       0.6      1.05       1.05    0.277             1.75
25 mu_0       0.7      1.05       1.04    0.440             1.73
26 mu_0       0.8      1.03       1.03    0.0650            1.86
27 mu_0       0.9      1.04       0.972   0.000712          3.27
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.33     0.000112   8.97e-16     84.0 
 2 mu         0.2      1.48     0.00767    2.09e-10     58.2 
 3 mu         0.3      1.38     0.0845     2.70e- 7     26.3 
 4 mu         0.4      1.20     0.311      4.11e- 5      8.74
 5 mu         0.5      1.01     0.719      1.90e- 3      3.86
 6 mu         0.6      0.921    0.924      4.05e- 2      2.58
 7 mu         0.7      0.978    1.02       9.13e- 3      3.12
 8 mu         0.8      1.17     0.830      1.38e- 4      4.48
 9 mu         0.9      1.45     0.120      8.52e- 8     15.9 
10 mu_1       0.1      1.75     0.000799   8.50e-15     84.0 
11 mu_1       0.2      1.39     0.0257     9.90e-10     29.1 
12 mu_1       0.3      1.27     0.201      8.53e- 7     10.6 
13 mu_1       0.4      1.11     0.560      9.73e- 5      4.77
14 mu_1       0.5      0.962    0.898      3.60e- 3      3.66
15 mu_1       0.6      0.922    0.919      4.07e- 2      2.76
16 mu_1       0.7      1.01     1.06       2.01e- 3      3.15
17 mu_1       0.8      1.21     0.691      2.65e- 5      5.25
18 mu_1       0.9      1.46     0.0836     1.46e- 8     16.7 
19 mu_0       0.1      1.28     0.0000406  0            84.0 
20 mu_0       0.2      1.51     0.00315    0            65.5 
21 mu_0       0.3      1.43     0.0396     0            33.8 
22 mu_0       0.4      1.26     0.148      0            13.1 
23 mu_0       0.5      1.06     0.504      0             4.12
24 mu_0       0.6      0.919    0.771      0             2.85
25 mu_0       0.7      0.911    0.867      0             3.06
26 mu_0       0.8      1.03     1.07       0             3.06
27 mu_0       0.9      1.42     0.374      0             8.37
[1] "Total run time was 43.553 seconds"
