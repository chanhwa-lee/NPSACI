
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1265"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  6  8  7  6  7  8  6  5  4 12  4  7  2  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04495 0.37012 0.62720 1.00000 4.60005 
[1] "event indicator table: "

  0   1 
759 506 
[1] "treatment indicator table: "

  0   1 
484 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.039 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.460 0.171
 2 mu         0.1   0.2 0.588 0.217
 3 mu         0.1   0.3 0.603 0.239
 4 mu         0.1   0.4 0.756 0.281
 5 mu         0.1   0.5 0.828 0.309
 6 mu         0.2   0.1 0.398 0.106
 7 mu         0.2   0.2 0.498 0.123
 8 mu         0.2   0.3 0.537 0.145
 9 mu         0.2   0.4 0.666 0.166
10 mu         0.2   0.5 0.714 0.178
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.33       0.0162  0.0000000168      46.9 
 2 mu         0.2      1.27       0.199   0.0000369         25.7 
 3 mu         0.3      1.28       0.558   0.00239           26.3 
 4 mu         0.4      1.15       0.801   0.0343            11.2 
 5 mu         0.5      1.05       0.971   0.201              3.17
 6 mu         0.6      1.01       1.02    0.331              1.75
 7 mu         0.7      1.00       0.993   0.195              2.03
 8 mu         0.8      0.982      0.897   0.0442             2.70
 9 mu         0.9      0.918      0.545   0.00148            3.94
10 mu_1       0.1      1.18       0.0753  0.000000113       13.8 
11 mu_1       0.2      1.36       0.422   0.000125          32.1 
12 mu_1       0.3      1.28       0.763   0.00542           22.0 
13 mu_1       0.4      1.11       0.924   0.0590             7.10
14 mu_1       0.5      1.03       0.990   0.223              2.16
15 mu_1       0.6      1.01       1.03    0.275              1.97
16 mu_1       0.7      1.00       0.977   0.0954             2.05
17 mu_1       0.8      0.977      0.849   0.0207             2.97
18 mu_1       0.9      0.908      0.494   0.000988           3.96
19 mu_0       0.1      1.35       0.00978 0.00000000616     51.3 
20 mu_0       0.2      1.24       0.145   0.0000150         24.1 
21 mu_0       0.3      1.28       0.469   0.00109           28.2 
22 mu_0       0.4      1.18       0.679   0.0179            13.9 
23 mu_0       0.5      1.07       0.935   0.122              4.19
24 mu_0       0.6      1.02       0.977   0.242              2.00
25 mu_0       0.7      1.00       0.997   0.334              1.99
26 mu_0       0.8      1.00       0.988   0.0869             2.39
27 mu_0       0.9      1.01       0.775   0.00181            3.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       8.65    0.000140   5.44e-15    716.  
 2 mu         0.2      14.4     0.0127     3.57e-10   1238.  
 3 mu         0.3       9.05    0.151      2.34e- 7    736.  
 4 mu         0.4       3.70    0.492      2.34e- 5    235.  
 5 mu         0.5       1.61    0.841      8.31e- 4     43.0 
 6 mu         0.6       1.15    1.05       1.54e- 2      4.93
 7 mu         0.7       1.24    0.970      1.31e- 2     11.9 
 8 mu         0.8       2.00    0.613      3.88e- 4     67.4 
 9 mu         0.9       4.75    0.0875     2.05e- 7    312.  
10 mu_1       0.1      16.0     0.000991   5.44e-14   1342.  
11 mu_1       0.2      13.6     0.0434     1.78e- 9   1161.  
12 mu_1       0.3       6.02    0.312      7.81e- 7    460.  
13 mu_1       0.4       2.31    0.724      5.85e- 5    110.  
14 mu_1       0.5       1.28    0.960      1.66e- 3     16.1 
15 mu_1       0.6       1.12    1.06       2.56e- 2      5.23
16 mu_1       0.7       1.31    0.943      5.35e- 3     17.0 
17 mu_1       0.8       2.21    0.470      1.39e- 4     84.2 
18 mu_1       0.9       5.11    0.0633     4.28e- 8    346.  
19 mu_0       0.1       7.84    0.0000457  0           646.  
20 mu_0       0.2      14.6     0.00534    0          1257.  
21 mu_0       0.3      10.4     0.0744     0           855.  
22 mu_0       0.4       4.63    0.318      0           319.  
23 mu_0       0.5       1.93    0.732      0            69.8 
24 mu_0       0.6       1.20    0.920      0             8.29
25 mu_0       0.7       1.08    1.05       0             5.57
26 mu_0       0.8       1.17    0.898      0             7.00
27 mu_0       0.9       1.56    0.199      0            25.6 
[1] "Total run time was 46.265 seconds"
