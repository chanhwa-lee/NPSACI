
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1221"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  5  7  4  5  6  3 12 10  6  6  4  5  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03025 0.33576 0.59612 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
725 496 
[1] "treatment indicator table: "

  0   1 
417 804 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 39.01 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.195 0.0963
 2 mu         0.1   0.2 0.281 0.175 
 3 mu         0.1   0.3 0.361 0.198 
 4 mu         0.1   0.4 0.403 0.186 
 5 mu         0.1   0.5 0.391 0.176 
 6 mu         0.2   0.1 0.240 0.0792
 7 mu         0.2   0.2 0.341 0.152 
 8 mu         0.2   0.3 0.415 0.172 
 9 mu         0.2   0.4 0.457 0.162 
10 mu         0.2   0.5 0.462 0.154 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.389      0.00396 0.0000000183      22.4 
 2 mu         0.2      0.588      0.0672  0.0000234         12.5 
 3 mu         0.3      0.726      0.249   0.00119            7.47
 4 mu         0.4      0.788      0.557   0.0152             3.99
 5 mu         0.5      0.859      0.776   0.0859             3.28
 6 mu         0.6      0.948      0.907   0.267              3.78
 7 mu         0.7      1.05       0.968   0.392              6.35
 8 mu         0.8      1.22       0.917   0.104             22.1 
 9 mu         0.9      1.32       0.766   0.00217           36.2 
10 mu_1       0.1      0.308      0.0198  0.000000131       10.3 
11 mu_1       0.2      0.629      0.179   0.0000859         12.5 
12 mu_1       0.3      0.761      0.422   0.00290            4.99
13 mu_1       0.4      0.823      0.659   0.0279             3.76
14 mu_1       0.5      0.901      0.817   0.126              3.68
15 mu_1       0.6      0.985      0.933   0.329              3.63
16 mu_1       0.7      1.08       0.980   0.375              7.86
17 mu_1       0.8      1.25       0.918   0.0774            24.5 
18 mu_1       0.9      1.31       0.706   0.00147           35.8 
19 mu_0       0.1      0.398      0.00227 0.00000000543     24.9 
20 mu_0       0.2      0.577      0.0391  0.00000781        15.6 
21 mu_0       0.3      0.711      0.171   0.000452           9.21
22 mu_0       0.4      0.765      0.447   0.00675            5.13
23 mu_0       0.5      0.816      0.694   0.0455             3.13
24 mu_0       0.6      0.894      0.827   0.142              4.01
25 mu_0       0.7      0.973      0.917   0.302              2.88
26 mu_0       0.8      1.10       0.911   0.210             12.5 
27 mu_0       0.9      1.37       0.916   0.00845           40.3 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.08    0.0000881  1.52e-18    115.  
 2 mu         0.2       3.86    0.00479    7.95e-13    177.  
 3 mu         0.3       3.49    0.0546     1.76e- 9     92.0 
 4 mu         0.4       2.43    0.225      4.17e- 7     45.8 
 5 mu         0.5       1.69    0.658      2.89e- 5     17.9 
 6 mu         0.6       1.38    0.929      9.24e- 4     12.9 
 7 mu         0.7       1.29    1.00       2.36e- 3      5.89
 8 mu         0.8       1.33    0.927      1.05e- 5      9.51
 9 mu         0.9       2.01    0.221      5.78e-10     79.2 
10 mu_1       0.1       4.09    0.000564   1.52e-17    203.  
11 mu_1       0.2       4.24    0.0180     3.97e-12    156.  
12 mu_1       0.3       3.04    0.122      5.87e- 9     63.7 
13 mu_1       0.4       2.00    0.408      1.04e- 6     36.2 
14 mu_1       0.5       1.48    0.853      5.78e- 5     15.2 
15 mu_1       0.6       1.31    1.02       1.54e- 3     11.4 
16 mu_1       0.7       1.28    1.09       8.43e- 4      5.60
17 mu_1       0.8       1.36    0.857      3.28e- 6     11.9 
18 mu_1       0.9       2.11    0.169      1.61e-10     88.0 
19 mu_0       0.1       1.86    0.0000183  0           105.  
20 mu_0       0.2       3.77    0.00150    0           182.  
21 mu_0       0.3       3.68    0.0165     0           108.  
22 mu_0       0.4       2.72    0.0902     0            53.2 
23 mu_0       0.5       1.90    0.448      0            27.8 
24 mu_0       0.6       1.49    0.688      0            15.0 
25 mu_0       0.7       1.32    0.937      0             9.16
26 mu_0       0.8       1.22    0.922      0             6.92
27 mu_0       0.9       1.11    0.404      0             9.44
[1] "Total run time was 42.156 seconds"
