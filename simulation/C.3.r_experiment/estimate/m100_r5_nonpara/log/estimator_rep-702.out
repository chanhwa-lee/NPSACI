
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1202"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  9 13  4  1  8 10  3  8  4  7  4  5  4  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03527 0.40924 0.64945 1.00000 5.34179 
[1] "event indicator table: "

  0   1 
720 482 
[1] "treatment indicator table: "

  0   1 
411 791 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 556
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 47.091 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.405 0.135 
 2 mu         0.1   0.2 0.432 0.133 
 3 mu         0.1   0.3 0.501 0.173 
 4 mu         0.1   0.4 0.489 0.177 
 5 mu         0.1   0.5 0.504 0.181 
 6 mu         0.2   0.1 0.351 0.0740
 7 mu         0.2   0.2 0.435 0.0825
 8 mu         0.2   0.3 0.505 0.107 
 9 mu         0.2   0.4 0.534 0.108 
10 mu         0.2   0.5 0.561 0.113 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.848       0.0447 0.00000174      21.9 
 2 mu         0.2      1.01        0.319  0.000843        11.3 
 3 mu         0.3      1.04        0.668  0.0177           5.90
 4 mu         0.4      1.03        0.926  0.0904           3.09
 5 mu         0.5      1.04        0.998  0.283            3.24
 6 mu         0.6      1.04        0.995  0.344            3.18
 7 mu         0.7      1.02        0.990  0.352            2.33
 8 mu         0.8      1.00        0.989  0.115            2.36
 9 mu         0.9      0.986       1.04   0.00402          2.65
10 mu_1       0.1      0.978       0.194  0.0000103       15.9 
11 mu_1       0.2      1.06        0.590  0.00252          8.73
12 mu_1       0.3      1.04        0.884  0.0420           3.21
13 mu_1       0.4      1.04        1.01   0.164            2.75
14 mu_1       0.5      1.05        1.00   0.418            3.35
15 mu_1       0.6      1.04        0.993  0.334            3.08
16 mu_1       0.7      1.02        0.997  0.336            2.15
17 mu_1       0.8      0.999       1.03   0.0715           2.42
18 mu_1       0.9      0.982       0.976  0.00290          2.87
19 mu_0       0.1      0.834       0.0280 0.000000789     23.9 
20 mu_0       0.2      1.00        0.245  0.000425        12.6 
21 mu_0       0.3      1.04        0.555  0.00723          7.11
22 mu_0       0.4      1.03        0.832  0.0315           4.08
23 mu_0       0.5      1.03        0.947  0.0962           3.12
24 mu_0       0.6      1.04        1.00   0.239            3.33
25 mu_0       0.7      1.02        0.942  0.317            2.75
26 mu_0       0.8      1.00        1.01   0.215            2.23
27 mu_0       0.9      1.01        0.994  0.0141           2.96
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.01    0.0000278   1.94e-19    182.  
 2 mu         0.2      2.57    0.00222     2.03e-13     77.1 
 3 mu         0.3      1.94    0.0339      6.75e-10     45.6 
 4 mu         0.4      1.40    0.206       2.13e- 7     19.1 
 5 mu         0.5      1.11    0.512       1.85e- 5      9.45
 6 mu         0.6      0.986   0.763       7.08e- 4      5.68
 7 mu         0.7      0.985   0.855       6.07e- 4      4.57
 8 mu         0.8      1.06    0.950       3.10e- 6      4.46
 9 mu         0.9      1.15    0.284       2.70e-10      6.39
10 mu_1       0.1      1.97    0.000120    0           104.  
11 mu_1       0.2      1.95    0.00678     0            64.2 
12 mu_1       0.3      1.51    0.0563      0            31.1 
13 mu_1       0.4      1.19    0.305       0            13.2 
14 mu_1       0.5      1.03    0.630       0             8.82
15 mu_1       0.6      0.958   0.797       0             4.42
16 mu_1       0.7      0.995   0.924       0             4.90
17 mu_1       0.8      1.08    0.848       0             4.18
18 mu_1       0.9      1.17    0.221       0             7.10
19 mu_0       0.1      3.12    0.00000524  0           203.  
20 mu_0       0.2      2.73    0.000692    0            88.8 
21 mu_0       0.3      2.13    0.0126      0            54.3 
22 mu_0       0.4      1.54    0.113       0            24.1 
23 mu_0       0.5      1.19    0.376       0            10.1 
24 mu_0       0.6      1.03    0.736       0             7.58
25 mu_0       0.7      0.963   0.813       0             3.81
26 mu_0       0.8      0.983   0.846       0             5.58
27 mu_0       0.9      0.985   0.234       0             4.32
[1] "Total run time was 51.32 seconds"
