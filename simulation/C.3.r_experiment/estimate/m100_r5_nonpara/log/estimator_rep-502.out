
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1192"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
12  7 10  9  3  1  7  5  7  4  6  2  5  7  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02835 0.36792 0.63084 1.00000 5.32995 
[1] "event indicator table: "

  0   1 
747 445 
[1] "treatment indicator table: "

  0   1 
434 758 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 589
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 127.66 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.391 0.0817
 2 mu         0.1   0.2 0.480 0.105 
 3 mu         0.1   0.3 0.591 0.121 
 4 mu         0.1   0.4 0.610 0.131 
 5 mu         0.1   0.5 0.677 0.142 
 6 mu         0.2   0.1 0.429 0.0707
 7 mu         0.2   0.2 0.525 0.0874
 8 mu         0.2   0.3 0.665 0.105 
 9 mu         0.2   0.4 0.703 0.113 
10 mu         0.2   0.5 0.772 0.123 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.08        0.0947 0.00000304     18.4 
 2 mu         0.2      1.33        0.461  0.000711       11.3 
 3 mu         0.3      1.24        0.798  0.00935         6.06
 4 mu         0.4      1.11        0.957  0.0531          2.62
 5 mu         0.5      1.03        0.926  0.189           2.35
 6 mu         0.6      0.987       0.949  0.141           1.98
 7 mu         0.7      0.975       0.949  0.147           2.90
 8 mu         0.8      0.989       0.942  0.0218          3.85
 9 mu         0.9      1.02        0.718  0.000578        5.80
10 mu_1       0.1      1.36        0.259  0.0000179      16.7 
11 mu_1       0.2      1.27        0.710  0.00256         9.67
12 mu_1       0.3      1.11        0.901  0.0229          4.32
13 mu_1       0.4      1.04        0.936  0.0998          2.48
14 mu_1       0.5      0.999       0.955  0.0842          2.45
15 mu_1       0.6      0.974       0.948  0.173           2.13
16 mu_1       0.7      0.974       0.947  0.0877          3.07
17 mu_1       0.8      0.990       0.929  0.0120          3.90
18 mu_1       0.9      1.03        0.663  0.000290        6.25
19 mu_0       0.1      1.05        0.0674 0.00000138     18.6 
20 mu_0       0.2      1.34        0.356  0.000250       12.9 
21 mu_0       0.3      1.29        0.756  0.00356         6.81
22 mu_0       0.4      1.16        0.913  0.0220          3.37
23 mu_0       0.5      1.07        0.909  0.0850          2.35
24 mu_0       0.6      1.01        0.957  0.0945          2.28
25 mu_0       0.7      0.976       0.958  0.0963          2.51
26 mu_0       0.8      0.982       0.944  0.0611          3.66
27 mu_0       0.9      0.969       0.907  0.00317         4.15
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.464    0.000154   5.44e-19     22.4 
 2 mu         0.2      0.955    0.00695    5.71e-13     34.4 
 3 mu         0.3      1.09     0.0749     1.90e- 9     17.9 
 4 mu         0.4      1.07     0.286      5.98e- 7      7.61
 5 mu         0.5      1.02     0.736      5.19e- 5      4.78
 6 mu         0.6      1.03     0.924      1.99e- 3      3.71
 7 mu         0.7      1.09     1.06       1.60e- 3      3.84
 8 mu         0.8      1.08     0.864      8.20e- 6      5.49
 9 mu         0.9      0.957    0.144      7.12e-10     16.6 
10 mu_1       0.1      1.03     0.00116    5.44e-18     39.4 
11 mu_1       0.2      1.22     0.0268     2.85e-12     30.3 
12 mu_1       0.3      1.14     0.175      6.33e- 9     10.5 
13 mu_1       0.4      1.05     0.495      1.50e- 6      5.43
14 mu_1       0.5      0.995    0.834      1.04e- 4      3.13
15 mu_1       0.6      1.03     1.05       3.32e- 3      4.01
16 mu_1       0.7      1.11     1.04       4.04e- 4      3.75
17 mu_1       0.8      1.06     0.757      1.81e- 6      5.49
18 mu_1       0.9      0.947    0.114      1.40e-10     18.5 
19 mu_0       0.1      0.401    0.0000406  0            20.5 
20 mu_0       0.2      0.890    0.00257    0            35.4 
21 mu_0       0.3      1.07     0.0244     0            21.0 
22 mu_0       0.4      1.09     0.151      0             9.05
23 mu_0       0.5      1.05     0.519      0             6.82
24 mu_0       0.6      1.02     0.942      0             4.02
25 mu_0       0.7      1.07     0.918      0             4.28
26 mu_0       0.8      1.15     1.03       0             5.49
27 mu_0       0.9      1.05     0.345      0             6.75
[1] "Total run time was 133.995 seconds"
