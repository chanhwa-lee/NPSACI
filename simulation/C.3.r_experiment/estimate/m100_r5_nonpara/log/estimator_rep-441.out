
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1219"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  8  5  6  8  3  5  5  5  7  6  5  6  4 11  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04881 0.36092 0.60941 1.00000 5.92813 
[1] "event indicator table: "

  0   1 
737 482 
[1] "treatment indicator table: "

  0   1 
465 754 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.699 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.146 0.0605
 2 mu         0.1   0.2 0.262 0.112 
 3 mu         0.1   0.3 0.244 0.0999
 4 mu         0.1   0.4 0.292 0.121 
 5 mu         0.1   0.5 0.345 0.156 
 6 mu         0.2   0.1 0.187 0.0528
 7 mu         0.2   0.2 0.318 0.0954
 8 mu         0.2   0.3 0.316 0.0849
 9 mu         0.2   0.4 0.371 0.103 
10 mu         0.2   0.5 0.433 0.133 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.530      0.0121  0.0000000844     12.5 
 2 mu         0.2      0.715      0.195   0.000161         11.0 
 3 mu         0.3      0.841      0.453   0.00888           9.03
 4 mu         0.4      0.925      0.733   0.0990            4.55
 5 mu         0.5      0.981      0.916   0.417             2.28
 6 mu         0.6      1.04       1.03    0.352             2.23
 7 mu         0.7      1.12       1.03    0.0819            5.46
 8 mu         0.8      1.15       0.945   0.00729          10.6 
 9 mu         0.9      1.04       0.461   0.0000748        11.1 
10 mu_1       0.1      0.623      0.0463  0.000000512      15.7 
11 mu_1       0.2      0.786      0.370   0.000494         12.0 
12 mu_1       0.3      0.886      0.602   0.0185            6.86
13 mu_1       0.4      0.962      0.869   0.153             3.18
14 mu_1       0.5      1.01       1.01    0.444             1.86
15 mu_1       0.6      1.07       1.03    0.230             2.79
16 mu_1       0.7      1.14       1.02    0.0470            6.36
17 mu_1       0.8      1.16       0.912   0.00376          11.3 
18 mu_1       0.9      1.04       0.403   0.0000356        11.6 
19 mu_0       0.1      0.520      0.00731 0.0000000369     12.2 
20 mu_0       0.2      0.697      0.144   0.0000772        12.0 
21 mu_0       0.3      0.822      0.356   0.00476           9.96
22 mu_0       0.4      0.900      0.632   0.0628            5.66
23 mu_0       0.5      0.948      0.783   0.288             2.74
24 mu_0       0.6      0.991      0.962   0.437             1.97
25 mu_0       0.7      1.06       1.02    0.163             3.39
26 mu_0       0.8      1.14       1.02    0.0214            8.00
27 mu_0       0.9      1.09       0.800   0.000428         15.2 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      10.9      0.000403  1.10e-16   1006.  
 2 mu         0.2      10.9      0.0244    1.15e-10    870.  
 3 mu         0.3       5.65     0.243     1.76e- 7    345.  
 4 mu         0.4       2.50     0.771     2.68e- 5     82.7 
 5 mu         0.5       1.46     0.980     1.24e- 3     12.1 
 6 mu         0.6       1.25     1.08      2.64e- 2      5.90
 7 mu         0.7       1.76     0.943     1.76e- 2     19.9 
 8 mu         0.8       5.05     0.445     1.56e- 4    147.  
 9 mu         0.9      22.5      0.0508    1.53e- 8   1336.  
10 mu_1       0.1      15.1      0.00220   0          1342.  
11 mu_1       0.2       8.41     0.0657    0           580.  
12 mu_1       0.3       3.58     0.464     0           153.  
13 mu_1       0.4       1.80     0.905     0            27.6 
14 mu_1       0.5       1.29     1.05      0             6.58
15 mu_1       0.6       1.25     1.11      0             5.36
16 mu_1       0.7       1.97     0.819     0            26.9 
17 mu_1       0.8       5.77     0.317     0           174.  
18 mu_1       0.9      24.3      0.0297    0          1484.  
19 mu_0       0.1      10.4      0.000168  0           969.  
20 mu_0       0.2      11.5      0.0115    0           943.  
21 mu_0       0.3       6.53     0.147     0           427.  
22 mu_0       0.4       2.97     0.525     0           119.  
23 mu_0       0.5       1.62     0.867     0            20.9 
24 mu_0       0.6       1.24     1.12      0             6.70
25 mu_0       0.7       1.28     1.13      0             6.22
26 mu_0       0.8       2.17     0.723     0            38.6 
27 mu_0       0.9       6.08     0.151     0           322.  
[1] "Total run time was 71.968 seconds"
