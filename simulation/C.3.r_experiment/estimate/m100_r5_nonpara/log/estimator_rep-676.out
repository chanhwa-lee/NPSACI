
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1297"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  9  3  3  5  7  4  5  4  9  8 10  5  6  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01983 0.32168 0.60269 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
781 516 
[1] "treatment indicator table: "

  0   1 
517 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.086 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.268 0.0880
 2 mu         0.1   0.2 0.272 0.0763
 3 mu         0.1   0.3 0.258 0.0779
 4 mu         0.1   0.4 0.290 0.109 
 5 mu         0.1   0.5 0.310 0.141 
 6 mu         0.2   0.1 0.312 0.0760
 7 mu         0.2   0.2 0.364 0.0773
 8 mu         0.2   0.3 0.394 0.0861
 9 mu         0.2   0.4 0.440 0.101 
10 mu         0.2   0.5 0.490 0.121 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.709       0.111  0.0000000152       7.40
 2 mu         0.2      1.05        0.606  0.0000440         18.0 
 3 mu         0.3      1.08        0.844  0.00214           10.9 
 4 mu         0.4      1.01        0.908  0.0259             4.72
 5 mu         0.5      0.989       1.00   0.143              1.93
 6 mu         0.6      1.02        1.01   0.316              2.07
 7 mu         0.7      1.05        1.01   0.297              1.85
 8 mu         0.8      1.03        0.970  0.0265             2.45
 9 mu         0.9      0.988       0.569  0.000161           8.72
10 mu_1       0.1      0.986       0.366  0.0000000987      14.8 
11 mu_1       0.2      1.15        0.776  0.000149          18.0 
12 mu_1       0.3      1.05        0.950  0.00497            7.70
13 mu_1       0.4      0.988       0.966  0.0458             2.58
14 mu_1       0.5      0.992       0.981  0.206              1.89
15 mu_1       0.6      1.03        1.01   0.313              2.08
16 mu_1       0.7      1.05        1.04   0.216              1.93
17 mu_1       0.8      1.02        0.972  0.0172             2.61
18 mu_1       0.9      0.983       0.519  0.0000937          9.62
19 mu_0       0.1      0.678       0.0852 0.00000000590      7.24
20 mu_0       0.2      1.03        0.525  0.0000172         18.0 
21 mu_0       0.3      1.08        0.767  0.000921          12.4 
22 mu_0       0.4      1.02        0.836  0.0127             6.15
23 mu_0       0.5      0.985       0.987  0.0800             2.08
24 mu_0       0.6      1.00        1.02   0.295              2.06
25 mu_0       0.7      1.04        1.01   0.385              1.99
26 mu_0       0.8      1.06        1.05   0.0635             2.27
27 mu_0       0.9      1.03        0.884  0.000763           3.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.95    0.000237   9.04e-17    654.  
 2 mu         0.2       3.63    0.0189     4.21e-11    199.  
 3 mu         0.3       1.80    0.231      8.17e- 8     35.2 
 4 mu         0.4       1.23    0.614      1.66e- 5      8.90
 5 mu         0.5       1.07    1.03       9.58e- 4      5.26
 6 mu         0.6       1.06    1.07       9.09e- 3      2.56
 7 mu         0.7       1.07    0.956      1.06e- 4      3.69
 8 mu         0.8       1.08    0.669      1.85e- 7      5.61
 9 mu         0.9       1.28    0.0512     3.17e-12     15.9 
10 mu_1       0.1       5.70    0.00172    8.59e-16    385.  
11 mu_1       0.2       2.22    0.0520     2.00e-10     58.4 
12 mu_1       0.3       1.39    0.453      2.59e- 7     11.7 
13 mu_1       0.4       1.11    0.750      3.94e- 5      7.95
14 mu_1       0.5       1.03    1.04       1.82e- 3      3.76
15 mu_1       0.6       1.04    1.04       8.91e- 4      2.80
16 mu_1       0.7       1.05    0.947      8.93e- 6      3.69
17 mu_1       0.8       1.09    0.512      1.36e- 8      6.31
18 mu_1       0.9       1.29    0.0344     2.08e-13     16.7 
19 mu_0       0.1       8.20    0.0000723  0           684.  
20 mu_0       0.2       3.98    0.0111     0           234.  
21 mu_0       0.3       1.97    0.120      0            47.3 
22 mu_0       0.4       1.31    0.369      0             9.54
23 mu_0       0.5       1.11    0.813      0             6.77
24 mu_0       0.6       1.08    1.13       0             3.14
25 mu_0       0.7       1.10    1.04       0             3.69
26 mu_0       0.8       1.08    0.911      0             4.34
27 mu_0       0.9       1.18    0.170      0            11.7 
[1] "Total run time was 64.303 seconds"
