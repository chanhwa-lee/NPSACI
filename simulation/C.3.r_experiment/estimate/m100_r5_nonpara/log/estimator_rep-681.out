
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1237"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  8  8  2  7  9  8  7  9  4  7  7  4  8  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02042 0.32422 0.58154 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
725 512 
[1] "treatment indicator table: "

  0   1 
470 767 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 74.37 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.245 0.0904
 2 mu         0.1   0.2 0.261 0.129 
 3 mu         0.1   0.3 0.255 0.136 
 4 mu         0.1   0.4 0.291 0.116 
 5 mu         0.1   0.5 0.264 0.131 
 6 mu         0.2   0.1 0.346 0.104 
 7 mu         0.2   0.2 0.377 0.132 
 8 mu         0.2   0.3 0.393 0.147 
 9 mu         0.2   0.4 0.437 0.135 
10 mu         0.2   0.5 0.433 0.149 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.453      0.00997 0.0000000585     12.0 
 2 mu         0.2      0.788      0.142   0.0000468        18.4 
 3 mu         0.3      0.865      0.444   0.00191          14.0 
 4 mu         0.4      0.872      0.678   0.0231            7.16
 5 mu         0.5      0.914      0.875   0.138             2.70
 6 mu         0.6      0.998      0.972   0.270             1.65
 7 mu         0.7      1.06       1.06    0.322             2.00
 8 mu         0.8      1.05       1.06    0.0960            2.90
 9 mu         0.9      0.995      0.795   0.00199           5.61
10 mu_1       0.1      0.804      0.0429  0.000000372      22.7 
11 mu_1       0.2      0.921      0.285   0.000181         18.2 
12 mu_1       0.3      0.882      0.649   0.00497           9.61
13 mu_1       0.4      0.878      0.797   0.0453            3.90
14 mu_1       0.5      0.935      0.929   0.219             1.96
15 mu_1       0.6      1.02       1.01    0.294             1.74
16 mu_1       0.7      1.07       1.06    0.285             2.36
17 mu_1       0.8      1.05       1.05    0.0695            3.19
18 mu_1       0.9      0.995      0.713   0.00132           6.18
19 mu_0       0.1      0.413      0.00617 0.0000000158     10.8 
20 mu_0       0.2      0.755      0.106   0.0000131        18.4 
21 mu_0       0.3      0.858      0.385   0.000602         15.8 
22 mu_0       0.4      0.868      0.647   0.00825           9.34
23 mu_0       0.5      0.894      0.794   0.0571            4.03
24 mu_0       0.6      0.965      0.925   0.234             1.97
25 mu_0       0.7      1.04       1.03    0.359             1.97
26 mu_0       0.8      1.05       1.06    0.157             1.77
27 mu_0       0.9      1.00       1.02    0.00801           3.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.42     0.0000731  2.38e-15    213.  
 2 mu         0.2      4.69     0.00572    3.12e-10    233.  
 3 mu         0.3      3.36     0.0803     3.07e- 7    121.  
 4 mu         0.4      1.95     0.309      4.08e- 5     39.4 
 5 mu         0.5      1.24     0.786      1.81e- 3      8.28
 6 mu         0.6      1.01     0.933      4.02e- 2      2.64
 7 mu         0.7      1.09     0.978      3.87e- 3      4.35
 8 mu         0.8      1.38     0.672      2.97e- 5     11.6 
 9 mu         0.9      1.90     0.0997     5.15e- 9     39.6 
10 mu_1       0.1      5.74     0.000603   2.38e-14    328.  
11 mu_1       0.2      4.38     0.0172     1.56e- 9    179.  
12 mu_1       0.3      2.47     0.175      1.02e- 6     61.9 
13 mu_1       0.4      1.44     0.536      1.02e- 4     15.1 
14 mu_1       0.5      1.05     0.842      3.63e- 3      3.70
15 mu_1       0.6      0.984    0.894      3.20e- 2      3.00
16 mu_1       0.7      1.14     0.974      1.04e- 3      4.97
17 mu_1       0.8      1.44     0.570      6.95e- 6     13.4 
18 mu_1       0.9      1.95     0.0749     1.07e- 9     44.0 
19 mu_0       0.1      3.16     0.0000217  0           200.  
20 mu_0       0.2      4.77     0.00276    0           247.  
21 mu_0       0.3      3.74     0.0363     0           146.  
22 mu_0       0.4      2.29     0.183      0            55.5 
23 mu_0       0.5      1.43     0.534      0            14.0 
24 mu_0       0.6      1.05     0.858      0             3.96
25 mu_0       0.7      0.970    0.990      0             3.15
26 mu_0       0.8      1.11     0.938      0             5.63
27 mu_0       0.9      1.45     0.248      0            19.1 
[1] "Total run time was 78.865 seconds"
