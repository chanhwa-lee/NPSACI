
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1289"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  5  3 10  6  6  2  6  6  5  5 13  7  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0310  0.3523  0.6082  1.0000  5.2950 
[1] "event indicator table: "

  0   1 
756 533 
[1] "treatment indicator table: "

  0   1 
484 805 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 682
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 92.338 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.417 0.187
 2 mu         0.1   0.2 0.486 0.168
 3 mu         0.1   0.3 0.492 0.160
 4 mu         0.1   0.4 0.504 0.164
 5 mu         0.1   0.5 0.515 0.165
 6 mu         0.2   0.1 0.407 0.165
 7 mu         0.2   0.2 0.464 0.140
 8 mu         0.2   0.3 0.485 0.125
 9 mu         0.2   0.4 0.501 0.114
10 mu         0.2   0.5 0.517 0.107
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.756       0.0423 0.00000000398     14.3 
 2 mu         0.2      0.802       0.323  0.0000162          5.05
 3 mu         0.3      0.930       0.655  0.00143            4.31
 4 mu         0.4      0.969       0.839  0.0238             3.77
 5 mu         0.5      0.931       0.911  0.0774             2.73
 6 mu         0.6      0.910       0.935  0.248              1.96
 7 mu         0.7      0.951       0.951  0.220              2.30
 8 mu         0.8      1.05        0.892  0.0362             5.45
 9 mu         0.9      1.32        0.774  0.000375          22.1 
10 mu_1       0.1      0.831       0.121  0.00000000861      9.38
11 mu_1       0.2      0.890       0.593  0.0000213          4.45
12 mu_1       0.3      0.970       0.773  0.00158            4.28
13 mu_1       0.4      0.959       0.916  0.0261             3.46
14 mu_1       0.5      0.921       0.928  0.105              2.34
15 mu_1       0.6      0.921       0.940  0.242              1.89
16 mu_1       0.7      0.975       0.974  0.200              2.54
17 mu_1       0.8      1.08        0.878  0.0235             6.49
18 mu_1       0.9      1.36        0.742  0.000219          24.4 
19 mu_0       0.1      0.748       0.0301 0.00000000140     15.9 
20 mu_0       0.2      0.780       0.255  0.00000636         5.81
21 mu_0       0.3      0.913       0.583  0.000640           4.32
22 mu_0       0.4      0.975       0.765  0.00956            3.98
23 mu_0       0.5      0.942       0.882  0.0498             3.12
24 mu_0       0.6      0.895       0.878  0.158              2.07
25 mu_0       0.7      0.896       0.924  0.191              1.76
26 mu_0       0.8      0.943       0.916  0.0469             3.11
27 mu_0       0.9      1.00        0.719  0.00178            8.26
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     526.      0.0000535  3.16e-15  51954.  
 2 mu         0.2     128.      0.00615    1.47e- 9  12471.  
 3 mu         0.3      19.1     0.0729     2.85e- 6   1691.  
 4 mu         0.4       2.94    0.395      5.16e- 4    141.  
 5 mu         0.5       1.28    0.837      9.81e- 3      6.60
 6 mu         0.6       1.22    1.07       5.60e- 3      4.17
 7 mu         0.7       1.80    1.21       1.02e- 4     12.0 
 8 mu         0.8       5.06    0.883      3.04e- 7    101.  
 9 mu         0.9      19.7     0.104      3.12e-12    685.  
10 mu_1       0.1     275.      0.000334   0         27344.  
11 mu_1       0.2      34.5     0.0174     0          3282.  
12 mu_1       0.3       4.46    0.157      0           297.  
13 mu_1       0.4       1.42    0.556      0            18.5 
14 mu_1       0.5       1.15    0.961      0             5.71
15 mu_1       0.6       1.26    1.25       0             3.91
16 mu_1       0.7       2.04    1.23       0            16.3 
17 mu_1       0.8       5.86    0.669      0           120.  
18 mu_1       0.9      21.3     0.0718     0           761.  
19 mu_0       0.1     553.      0.0000176  0         54688.  
20 mu_0       0.2     152.      0.00237    0         14768.  
21 mu_0       0.3      25.4     0.0396     0          2289.  
22 mu_0       0.4       3.94    0.243      0           222.  
23 mu_0       0.5       1.42    0.576      0            12.5 
24 mu_0       0.6       1.16    0.994      0             4.56
25 mu_0       0.7       1.24    1.14       0             3.96
26 mu_0       0.8       1.83    0.787      0            25.3 
27 mu_0       0.9       5.32    0.109      0           237.  
[1] "Total run time was 97.143 seconds"
