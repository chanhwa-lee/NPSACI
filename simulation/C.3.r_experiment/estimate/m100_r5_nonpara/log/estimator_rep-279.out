
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1280"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  5  5  6  9  4  5  9  5  5 13  5  5  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0331  0.3519  0.6245  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
752 528 
[1] "treatment indicator table: "

  0   1 
454 826 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.273 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.491 0.343
 2 mu         0.1   0.2 0.673 0.401
 3 mu         0.1   0.3 0.962 0.456
 4 mu         0.1   0.4 0.973 0.487
 5 mu         0.1   0.5 0.963 0.506
 6 mu         0.2   0.1 0.274 0.120
 7 mu         0.2   0.2 0.413 0.144
 8 mu         0.2   0.3 0.571 0.162
 9 mu         0.2   0.4 0.575 0.171
10 mu         0.2   0.5 0.576 0.177
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.59       0.0149  0.0000000111      78.6 
 2 mu         0.2      1.05       0.185   0.0000384         27.2 
 3 mu         0.3      1.00       0.478   0.00154            7.24
 4 mu         0.4      1.07       0.899   0.0181             4.96
 5 mu         0.5      1.08       0.988   0.0968             2.57
 6 mu         0.6      1.06       1.07    0.356              1.97
 7 mu         0.7      1.01       1.04    0.272              1.69
 8 mu         0.8      0.922      0.941   0.0322             2.01
 9 mu         0.9      0.784      0.486   0.000496           5.97
10 mu_1       0.1      1.19       0.0633  0.0000000726      49.1 
11 mu_1       0.2      0.951      0.394   0.000141           9.04
12 mu_1       0.3      1.06       0.713   0.00381            7.12
13 mu_1       0.4      1.11       0.997   0.0344             3.79
14 mu_1       0.5      1.09       1.06    0.164              2.16
15 mu_1       0.6      1.05       1.08    0.312              1.87
16 mu_1       0.7      0.993      1.02    0.185              1.77
17 mu_1       0.8      0.901      0.928   0.0201             2.23
18 mu_1       0.9      0.766      0.429   0.000287           6.25
19 mu_0       0.1      1.63       0.00903 0.00000000426     81.8 
20 mu_0       0.2      1.07       0.125   0.0000129         31.7 
21 mu_0       0.3      0.980      0.351   0.000429           8.33
22 mu_0       0.4      1.05       0.758   0.00430            5.74
23 mu_0       0.5      1.08       0.949   0.0257             2.97
24 mu_0       0.6      1.07       1.08    0.111              2.12
25 mu_0       0.7      1.05       1.06    0.265              1.72
26 mu_0       0.8      1.00       1.09    0.0805             1.82
27 mu_0       0.9      0.945      0.864   0.00238            3.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.637   0.0000122   5.17e-16     34.7 
 2 mu         0.2      1.11    0.00363     1.20e-10     34.2 
 3 mu         0.3      1.63    0.0542      1.56e- 7     23.0 
 4 mu         0.4      1.68    0.250       2.37e- 5     23.5 
 5 mu         0.5      1.35    0.709       1.10e- 3     12.1 
 6 mu         0.6      1.11    1.06        2.33e- 2      3.10
 7 mu         0.7      1.08    1.07        1.58e- 2      2.35
 8 mu         0.8      1.13    0.838       1.81e- 4      4.27
 9 mu         0.9      1.10    0.177       4.48e- 8      9.44
10 mu_1       0.1      1.08    0.0000844   4.90e-15     49.5 
11 mu_1       0.2      1.37    0.0121      5.70e-10     24.4 
12 mu_1       0.3      1.71    0.123       4.92e- 7     26.9 
13 mu_1       0.4      1.55    0.454       5.61e- 5     20.8 
14 mu_1       0.5      1.23    0.918       2.08e- 3      8.53
15 mu_1       0.6      1.08    1.07        3.68e- 2      3.09
16 mu_1       0.7      1.09    1.13        7.14e- 3      2.60
17 mu_1       0.8      1.15    0.679       7.15e- 5      4.58
18 mu_1       0.9      1.10    0.131       1.57e- 8      9.79
19 mu_0       0.1      0.588   0.00000466  0            33.0 
20 mu_0       0.2      1.05    0.00134     0            36.7 
21 mu_0       0.3      1.60    0.0236      0            28.2 
22 mu_0       0.4      1.77    0.109       0            25.4 
23 mu_0       0.5      1.48    0.470       0            15.6 
24 mu_0       0.6      1.16    0.916       0             5.02
25 mu_0       0.7      1.04    1.09        0             2.93
26 mu_0       0.8      1.07    1.07        0             3.81
27 mu_0       0.9      1.16    0.311       0             6.29
[1] "Total run time was 60.821 seconds"
