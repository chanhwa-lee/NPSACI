
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1247"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4 10  6  6  5  7 12  2  7  2  6  4 11  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01409 0.33789 0.58366 1.00000 5.56866 
[1] "event indicator table: "

  0   1 
739 508 
[1] "treatment indicator table: "

  0   1 
460 787 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 62.151 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.425 0.129 
 2 mu         0.1   0.2 0.431 0.123 
 3 mu         0.1   0.3 0.433 0.124 
 4 mu         0.1   0.4 0.494 0.121 
 5 mu         0.1   0.5 0.506 0.126 
 6 mu         0.2   0.1 0.448 0.0991
 7 mu         0.2   0.2 0.484 0.0970
 8 mu         0.2   0.3 0.503 0.0990
 9 mu         0.2   0.4 0.578 0.0939
10 mu         0.2   0.5 0.607 0.0990
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.742       0.0576 0.0000000810     12.5 
 2 mu         0.2      0.998       0.340  0.0000944        10.8 
 3 mu         0.3      1.08        0.925  0.00429           6.48
 4 mu         0.4      1.08        1.04   0.0483            3.47
 5 mu         0.5      1.05        1.04   0.233             2.09
 6 mu         0.6      1.02        1.01   0.410             1.85
 7 mu         0.7      0.960       0.935  0.154             1.88
 8 mu         0.8      0.944       0.940  0.0183            2.17
 9 mu         0.9      1.03        0.834  0.000280          5.93
10 mu_1       0.1      0.889       0.191  0.000000530      11.7 
11 mu_1       0.2      1.11        0.720  0.000312         10.1 
12 mu_1       0.3      1.12        1.04   0.00956           4.13
13 mu_1       0.4      1.08        1.04   0.0814            3.09
14 mu_1       0.5      1.05        1.04   0.319             1.94
15 mu_1       0.6      1.00        0.997  0.369             1.93
16 mu_1       0.7      0.951       0.908  0.101             1.88
17 mu_1       0.8      0.948       0.910  0.0109            2.23
18 mu_1       0.9      1.04        0.776  0.000153          6.51
19 mu_0       0.1      0.725       0.0419 0.0000000311     13.5 
20 mu_0       0.2      0.971       0.266  0.0000400        11.0 
21 mu_0       0.3      1.07        0.781  0.00204           7.49
22 mu_0       0.4      1.08        1.01   0.0262            3.73
23 mu_0       0.5      1.06        1.04   0.148             2.37
24 mu_0       0.6      1.04        1.05   0.338             1.94
25 mu_0       0.7      0.982       0.947  0.278             2.02
26 mu_0       0.8      0.924       0.874  0.0476            2.12
27 mu_0       0.9      0.964       0.860  0.00142           2.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.44     0.0000992  5.48e-17     74.1 
 2 mu         0.2      1.38     0.0112     1.44e-11     45.6 
 3 mu         0.3      1.09     0.108      2.12e- 8     18.0 
 4 mu         0.4      0.993    0.460      3.76e- 6      5.14
 5 mu         0.5      1.05     0.984      2.09e- 4      3.99
 6 mu         0.6      1.10     1.06       5.56e- 3      3.54
 7 mu         0.7      1.06     1.15       1.60e- 3      3.16
 8 mu         0.8      1.04     0.841      1.06e- 5      2.98
 9 mu         0.9      1.23     0.128      1.04e- 9      9.39
10 mu_1       0.1      1.73     0.000702   5.48e-16     67.3 
11 mu_1       0.2      1.16     0.0402     7.18e-11     20.7 
12 mu_1       0.3      0.945    0.241      7.07e- 8      7.10
13 mu_1       0.4      0.990    0.702      9.41e- 6      4.47
14 mu_1       0.5      1.09     1.09       4.18e- 4      3.59
15 mu_1       0.6      1.11     1.11       8.85e- 3      3.60
16 mu_1       0.7      1.06     1.08       3.27e- 4      3.01
17 mu_1       0.8      1.05     0.689      2.88e- 6      3.36
18 mu_1       0.9      1.25     0.0941     2.56e-10     10.1 
19 mu_0       0.1      1.41     0.0000345  0            74.8 
20 mu_0       0.2      1.44     0.00457    0            51.8 
21 mu_0       0.3      1.15     0.0490     0            23.4 
22 mu_0       0.4      0.995    0.249      0             7.78
23 mu_0       0.5      1.01     0.700      0             4.38
24 mu_0       0.6      1.07     1.05       0             3.44
25 mu_0       0.7      1.07     1.10       0             3.51
26 mu_0       0.8      1.01     0.932      0             3.06
27 mu_0       0.9      1.06     0.250      0             5.64
[1] "Total run time was 66.208 seconds"
