
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1230"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  8  7  3 10  8  5  6  7 11  5  5  5  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03671 0.32645 0.59948 0.99239 6.00000 
[1] "event indicator table: "

  0   1 
721 509 
[1] "treatment indicator table: "

  0   1 
469 761 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 77.28 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.220 0.0689
 2 mu         0.1   0.2 0.209 0.0854
 3 mu         0.1   0.3 0.229 0.100 
 4 mu         0.1   0.4 0.393 0.103 
 5 mu         0.1   0.5 0.442 0.109 
 6 mu         0.2   0.1 0.386 0.0901
 7 mu         0.2   0.2 0.430 0.102 
 8 mu         0.2   0.3 0.496 0.125 
 9 mu         0.2   0.4 0.628 0.135 
10 mu         0.2   0.5 0.686 0.143 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.604       0.0196 0.0000000384      9.34
 2 mu         0.2      1.12        0.176  0.0000797        14.7 
 3 mu         0.3      1.10        0.541  0.00486          10.0 
 4 mu         0.4      0.973       0.840  0.0654            4.98
 5 mu         0.5      0.955       0.948  0.200             2.31
 6 mu         0.6      0.989       0.973  0.378             1.71
 7 mu         0.7      1.00        1.02   0.111             2.22
 8 mu         0.8      1.00        0.933  0.0102            4.02
 9 mu         0.9      1.06        0.560  0.0000878        17.1 
10 mu_1       0.1      1.07        0.0850 0.000000245      15.5 
11 mu_1       0.2      1.25        0.385  0.000257         14.2 
12 mu_1       0.3      1.04        0.740  0.0106            7.37
13 mu_1       0.4      0.945       0.935  0.109             3.59
14 mu_1       0.5      0.962       0.978  0.260             1.76
15 mu_1       0.6      0.998       1.01   0.318             1.88
16 mu_1       0.7      1.01        1.02   0.0712            2.37
17 mu_1       0.8      1.00        0.907  0.00586           4.79
18 mu_1       0.9      1.07        0.520  0.0000454        18.9 
19 mu_0       0.1      0.551       0.0124 0.0000000155     10.0 
20 mu_0       0.2      1.09        0.130  0.0000354        14.8 
21 mu_0       0.3      1.12        0.416  0.00240          11.2 
22 mu_0       0.4      0.992       0.787  0.0366            5.91
23 mu_0       0.5      0.948       0.898  0.141             2.90
24 mu_0       0.6      0.975       0.986  0.284             1.80
25 mu_0       0.7      1.00        1.00   0.203             1.87
26 mu_0       0.8      0.998       0.996  0.0274            2.63
27 mu_0       0.9      0.979       0.858  0.000469          4.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.85    0.000108   2.25e-14     83.2 
 2 mu         0.2       3.50    0.00799    2.33e- 9    202.  
 3 mu         0.3       2.82    0.0771     1.76e- 6    121.  
 4 mu         0.4       1.82    0.316      1.72e- 4     32.4 
 5 mu         0.5       1.37    0.872      5.31e- 3      8.78
 6 mu         0.6       1.19    0.982      6.72e- 2      7.29
 7 mu         0.7       1.21    1.02       4.64e- 3      5.71
 8 mu         0.8       1.40    0.608      1.21e- 5     11.0 
 9 mu         0.9       1.59    0.0753     2.95e-10     23.3 
10 mu_1       0.1       2.87    0.000689   0           166.  
11 mu_1       0.2       3.59    0.0233     0           202.  
12 mu_1       0.3       2.29    0.157      0            80.6 
13 mu_1       0.4       1.49    0.500      0            16.2 
14 mu_1       0.5       1.21    0.973      0             9.24
15 mu_1       0.6       1.14    0.938      0             6.40
16 mu_1       0.7       1.25    0.987      0             7.33
17 mu_1       0.8       1.47    0.497      0            13.7 
18 mu_1       0.9       1.64    0.0571     0            25.9 
19 mu_0       0.1       1.73    0.0000242  0            73.9 
20 mu_0       0.2       3.48    0.00271    0           202.  
21 mu_0       0.3       3.05    0.0404     0           138.  
22 mu_0       0.4       2.05    0.190      0            43.2 
23 mu_0       0.5       1.53    0.616      0             8.46
24 mu_0       0.6       1.26    0.984      0             8.64
25 mu_0       0.7       1.11    1.01       0             4.04
26 mu_0       0.8       1.12    0.642      0             8.99
27 mu_0       0.9       1.15    0.107      0            13.2 
[1] "Total run time was 82.902 seconds"
