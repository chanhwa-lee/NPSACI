
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1208"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10  6  9  3  4  8  6  8 10  6  5  5  5  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02402 0.33041 0.60003 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
727 481 
[1] "treatment indicator table: "

  0   1 
447 761 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 39.201 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.112  0.0464
 2 mu         0.1   0.2 0.0884 0.0571
 3 mu         0.1   0.3 0.0437 0.0826
 4 mu         0.1   0.4 0.0944 0.0573
 5 mu         0.1   0.5 0.0888 0.0672
 6 mu         0.2   0.1 0.213  0.0430
 7 mu         0.2   0.2 0.239  0.0569
 8 mu         0.2   0.3 0.224  0.0799
 9 mu         0.2   0.4 0.313  0.0680
10 mu         0.2   0.5 0.332  0.0806
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.297      0.0152  0.0000000116       3.08
 2 mu         0.2      0.672      0.217   0.0000267         10.7 
 3 mu         0.3      0.912      0.612   0.00181           12.5 
 4 mu         0.4      0.971      0.921   0.0270             6.10
 5 mu         0.5      0.973      0.963   0.151              1.90
 6 mu         0.6      0.991      0.980   0.345              1.49
 7 mu         0.7      1.00       0.955   0.134              1.85
 8 mu         0.8      0.961      0.904   0.00642            3.15
 9 mu         0.9      0.898      0.526   0.0000155          5.98
10 mu_1       0.1      0.622      0.0712  0.0000000819       5.13
11 mu_1       0.2      0.898      0.446   0.0000944         14.0 
12 mu_1       0.3      0.994      0.858   0.00427           10.9 
13 mu_1       0.4      0.982      1.02    0.0480             4.04
14 mu_1       0.5      0.971      0.973   0.203              1.78
15 mu_1       0.6      0.993      1.01    0.417              1.61
16 mu_1       0.7      0.999      0.937   0.0865             2.14
17 mu_1       0.8      0.954      0.887   0.00369            3.42
18 mu_1       0.9      0.897      0.479   0.00000804         6.56
19 mu_0       0.1      0.261      0.00989 0.00000000378      2.92
20 mu_0       0.2      0.616      0.162   0.00000977         9.81
21 mu_0       0.3      0.877      0.510   0.000753          13.1 
22 mu_0       0.4      0.964      0.849   0.0131             7.47
23 mu_0       0.5      0.974      1.01    0.0942             2.27
24 mu_0       0.6      0.988      1.01    0.237              1.79
25 mu_0       0.7      1.01       1.00    0.246              1.85
26 mu_0       0.8      0.990      0.965   0.0174             2.06
27 mu_0       0.9      0.910      0.828   0.0000826          3.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.38    0.000238   8.42e-16     65.0 
 2 mu         0.2       4.91    0.0200     1.96e-10    279.  
 3 mu         0.3       6.45    0.162      2.54e- 7    426.  
 4 mu         0.4       4.60    0.549      3.86e- 5    283.  
 5 mu         0.5       2.32    0.983      1.78e- 3     96.7 
 6 mu         0.6       1.23    0.989      3.80e- 2     16.5 
 7 mu         0.7       1.00    1.04       6.35e- 3      2.92
 8 mu         0.8       1.18    0.644      8.35e- 5      7.32
 9 mu         0.9       1.51    0.116      3.26e- 8     14.0 
10 mu_1       0.1       3.11    0.00127    7.98e-15    139.  
11 mu_1       0.2       6.55    0.0553     9.29e-10    410.  
12 mu_1       0.3       6.21    0.336      8.01e- 7    418.  
13 mu_1       0.4       3.65    0.841      9.13e- 5    208.  
14 mu_1       0.5       1.80    0.899      3.38e- 3     56.9 
15 mu_1       0.6       1.09    1.01       4.51e- 2      8.11
16 mu_1       0.7       1.01    0.900      2.27e- 3      3.51
17 mu_1       0.8       1.22    0.524      2.61e- 5      7.70
18 mu_1       0.9       1.53    0.0795     9.07e- 9     14.8 
19 mu_0       0.1       1.19    0.0000892  0            56.7 
20 mu_0       0.2       4.50    0.00994    0           246.  
21 mu_0       0.3       6.55    0.0906     0           430.  
22 mu_0       0.4       5.23    0.324      0           332.  
23 mu_0       0.5       2.85    0.741      0           137.  
24 mu_0       0.6       1.44    0.944      0            29.2 
25 mu_0       0.7       1.00    0.915      0             2.66
26 mu_0       0.8       1.02    0.840      0             5.78
27 mu_0       0.9       1.32    0.179      0            13.7 
[1] "Total run time was 42.953 seconds"
