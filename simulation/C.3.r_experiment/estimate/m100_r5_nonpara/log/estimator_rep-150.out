
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1220"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  8  8  6 11  6  3  8  5  3  4  7  6  4  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02489 0.33305 0.57961 0.97577 4.03135 
[1] "event indicator table: "

  0   1 
729 491 
[1] "treatment indicator table: "

  0   1 
496 724 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.68 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.384 0.111 
 2 mu         0.1   0.2 0.392 0.105 
 3 mu         0.1   0.3 0.460 0.0943
 4 mu         0.1   0.4 0.520 0.116 
 5 mu         0.1   0.5 0.533 0.118 
 6 mu         0.2   0.1 0.351 0.0715
 7 mu         0.2   0.2 0.386 0.0747
 8 mu         0.2   0.3 0.481 0.0663
 9 mu         0.2   0.4 0.525 0.0795
10 mu         0.2   0.5 0.553 0.0811
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.858       0.0585 0.00000228      8.67
 2 mu         0.2      1.01        0.332  0.00119         6.27
 3 mu         0.3      0.978       0.761  0.0322          3.40
 4 mu         0.4      0.964       0.929  0.195           2.53
 5 mu         0.5      0.998       0.954  0.304           2.00
 6 mu         0.6      1.03        0.995  0.260           2.02
 7 mu         0.7      1.02        0.996  0.348           2.13
 8 mu         0.8      1.01        0.939  0.0677          4.72
 9 mu         0.9      0.990       0.766  0.000876        5.51
10 mu_1       0.1      0.974       0.151  0.0000136      10.2 
11 mu_1       0.2      0.999       0.548  0.00359         4.72
12 mu_1       0.3      0.952       0.879  0.0658          3.22
13 mu_1       0.4      0.967       0.970  0.187           2.14
14 mu_1       0.5      1.01        0.988  0.350           1.78
15 mu_1       0.6      1.03        0.990  0.227           2.02
16 mu_1       0.7      1.02        0.984  0.365           2.46
17 mu_1       0.8      1.01        0.928  0.0481          4.94
18 mu_1       0.9      0.989       0.755  0.000560        5.64
19 mu_0       0.1      0.845       0.0398 0.00000103      8.50
20 mu_0       0.2      1.01        0.248  0.000589        6.65
21 mu_0       0.3      0.989       0.671  0.0178          3.51
22 mu_0       0.4      0.962       0.898  0.152           2.78
23 mu_0       0.5      0.985       0.947  0.258           2.28
24 mu_0       0.6      1.02        1.03   0.291           2.02
25 mu_0       0.7      1.03        0.982  0.239           2.10
26 mu_0       0.8      1.00        0.938  0.146           3.87
27 mu_0       0.9      0.997       0.782  0.00372         5.89
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.702     0.000586  1.03e-14     19.8 
 2 mu         0.2      0.951     0.0301    2.14e- 9     15.0 
 3 mu         0.3      0.993     0.236     2.42e- 6      8.85
 4 mu         0.4      1.08      0.744     3.16e- 4      6.76
 5 mu         0.5      1.16      0.996     1.22e- 2      6.77
 6 mu         0.6      1.12      1.04      4.83e- 2      5.64
 7 mu         0.7      1.07      1.01      1.60e- 3      3.93
 8 mu         0.8      1.23      0.457     9.33e- 6      9.20
 9 mu         0.9      1.51      0.0393    9.12e-10     20.6 
10 mu_1       0.1      1.08      0.00334   9.31e-14     20.7 
11 mu_1       0.2      0.997     0.0916    9.64e- 9     12.5 
12 mu_1       0.3      1.02      0.461     7.27e- 6      5.66
13 mu_1       0.4      1.13      0.967     7.11e- 4      7.60
14 mu_1       0.5      1.17      1.07      2.19e- 2      6.10
15 mu_1       0.6      1.11      1.03      1.34e- 2      5.44
16 mu_1       0.7      1.09      0.820     5.07e- 4      4.14
17 mu_1       0.8      1.28      0.317     2.59e- 6     10.4 
18 mu_1       0.9      1.52      0.0267    2.25e-10     22.9 
19 mu_0       0.1      0.660     0.000288  0            19.8 
20 mu_0       0.2      0.940     0.0147    0            15.6 
21 mu_0       0.3      0.984     0.131     0            10.5 
22 mu_0       0.4      1.05      0.523     0             6.19
23 mu_0       0.5      1.14      1.01      0             7.45
24 mu_0       0.6      1.13      0.992     0             5.94
25 mu_0       0.7      1.03      0.976     0             4.32
26 mu_0       0.8      1.04      0.801     0             4.60
27 mu_0       0.9      1.45      0.0875    0            19.2 
[1] "Total run time was 70.202 seconds"
