
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1278"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3 10  6  5  2 10  5  5  6  6  7  7  5  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03329 0.34923 0.61641 1.00000 4.74437 
[1] "event indicator table: "

  0   1 
770 508 
[1] "treatment indicator table: "

  0   1 
458 820 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 39.317 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.417 0.213 
 2 mu         0.1   0.2 0.554 0.269 
 3 mu         0.1   0.3 0.676 0.302 
 4 mu         0.1   0.4 0.743 0.334 
 5 mu         0.1   0.5 0.768 0.361 
 6 mu         0.2   0.1 0.332 0.0937
 7 mu         0.2   0.2 0.435 0.119 
 8 mu         0.2   0.3 0.546 0.140 
 9 mu         0.2   0.4 0.605 0.161 
10 mu         0.2   0.5 0.623 0.168 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.43        0.0611 0.000000641     56.8 
 2 mu         0.2      1.24        0.441  0.000456        22.4 
 3 mu         0.3      1.20        0.789  0.00756         12.8 
 4 mu         0.4      1.15        0.932  0.0373           9.21
 5 mu         0.5      1.04        0.945  0.122            5.10
 6 mu         0.6      0.972       0.972  0.306            2.34
 7 mu         0.7      0.964       0.950  0.173            2.46
 8 mu         0.8      0.969       1.03   0.0148           2.09
 9 mu         0.9      0.929       0.854  0.000122         5.92
10 mu_1       0.1      0.903       0.202  0.00000394      16.0 
11 mu_1       0.2      1.07        0.601  0.00144         15.9 
12 mu_1       0.3      1.14        0.884  0.0217          10.8 
13 mu_1       0.4      1.08        0.923  0.0807           5.95
14 mu_1       0.5      0.995       0.972  0.213            2.86
15 mu_1       0.6      0.964       0.959  0.378            2.24
16 mu_1       0.7      0.973       0.962  0.113            2.43
17 mu_1       0.8      0.970       0.997  0.00882          2.18
18 mu_1       0.9      0.920       0.822  0.0000668        6.22
19 mu_0       0.1      1.49        0.0438 0.000000274     63.1 
20 mu_0       0.2      1.28        0.326  0.000130        27.8 
21 mu_0       0.3      1.23        0.712  0.00148         13.7 
22 mu_0       0.4      1.19        0.880  0.00830         11.4 
23 mu_0       0.5      1.09        0.973  0.0316           7.33
24 mu_0       0.6      0.985       0.915  0.0945           3.79
25 mu_0       0.7      0.944       0.919  0.238            2.54
26 mu_0       0.8      0.964       0.959  0.0388           2.33
27 mu_0       0.9      1.01        0.985  0.000623         3.19
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     10.2     0.0000327   2.47e-17    934.  
 2 mu         0.2      5.04    0.00348     1.15e-11    404.  
 3 mu         0.3      2.15    0.0490      2.23e- 8    107.  
 4 mu         0.4      1.36    0.297       4.52e- 6     20.9 
 5 mu         0.5      1.19    0.672       2.62e- 4     12.9 
 6 mu         0.6      1.11    0.957       6.69e- 3      4.16
 7 mu         0.7      1.01    0.944       3.71e- 4      3.98
 8 mu         0.8      0.996   0.704       1.66e- 6      4.78
 9 mu         0.9      1.26    0.111       1.28e-10     12.3 
10 mu_1       0.1      7.93    0.000234    2.35e-16    667.  
11 mu_1       0.2      2.48    0.0128      5.47e-11    144.  
12 mu_1       0.3      1.36    0.107       7.07e- 8     25.4 
13 mu_1       0.4      1.21    0.451       1.07e- 5     19.6 
14 mu_1       0.5      1.15    0.838       4.97e- 4      9.66
15 mu_1       0.6      1.08    0.994       3.19e- 3      3.48
16 mu_1       0.7      0.994   0.930       6.63e- 5      4.10
17 mu_1       0.8      1.01    0.551       2.60e- 7      5.38
18 mu_1       0.9      1.28    0.0749      1.78e-11     13.7 
19 mu_0       0.1     10.4     0.00000730  0           964.  
20 mu_0       0.2      5.69    0.00109     0           469.  
21 mu_0       0.3      2.48    0.0260      0           142.  
22 mu_0       0.4      1.46    0.158       0            29.7 
23 mu_0       0.5      1.24    0.460       0            16.1 
24 mu_0       0.6      1.15    0.764       0             6.45
25 mu_0       0.7      1.04    0.888       0             3.99
26 mu_0       0.8      0.920   0.708       0             4.13
27 mu_0       0.9      1.01    0.190       0             9.95
[1] "Total run time was 42.584 seconds"
