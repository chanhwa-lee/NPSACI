
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1274"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  6  3  8  5  8  2  8  9  9  5  7  4  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04373 0.38416 0.63710 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
775 499 
[1] "treatment indicator table: "

  0   1 
432 842 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.619 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.428 0.134 
 2 mu         0.1   0.2 0.434 0.149 
 3 mu         0.1   0.3 0.530 0.163 
 4 mu         0.1   0.4 0.531 0.170 
 5 mu         0.1   0.5 0.535 0.178 
 6 mu         0.2   0.1 0.422 0.0893
 7 mu         0.2   0.2 0.457 0.110 
 8 mu         0.2   0.3 0.573 0.116 
 9 mu         0.2   0.4 0.586 0.121 
10 mu         0.2   0.5 0.596 0.125 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.974      0.0149  0.00000000379     23.3 
 2 mu         0.2      1.12       0.186   0.0000157         18.2 
 3 mu         0.3      1.09       0.525   0.00144            9.68
 4 mu         0.4      1.04       0.833   0.0189             4.45
 5 mu         0.5      1.04       0.879   0.0965             3.42
 6 mu         0.6      1.06       1.04    0.332              2.20
 7 mu         0.7      1.03       1.03    0.317              1.71
 8 mu         0.8      0.919      0.910   0.138              2.14
 9 mu         0.9      0.816      0.596   0.00741            5.37
10 mu_1       0.1      1.03       0.0510  0.0000000260      25.9 
11 mu_1       0.2      1.09       0.338   0.0000540         10.3 
12 mu_1       0.3      1.04       0.667   0.00331            5.95
13 mu_1       0.4      1.02       0.892   0.0367             4.05
14 mu_1       0.5      1.04       0.960   0.153              2.72
15 mu_1       0.6      1.06       1.05    0.330              2.20
16 mu_1       0.7      1.01       1.03    0.323              1.72
17 mu_1       0.8      0.897      0.896   0.101              2.25
18 mu_1       0.9      0.811      0.528   0.00555            5.85
19 mu_0       0.1      0.968      0.00803 0.00000000133     23.0 
20 mu_0       0.2      1.12       0.128   0.00000615        20.2 
21 mu_0       0.3      1.11       0.435   0.000635          12.1 
22 mu_0       0.4      1.05       0.803   0.00700            5.93
23 mu_0       0.5      1.04       0.896   0.0399             4.13
24 mu_0       0.6      1.07       0.959   0.153              2.94
25 mu_0       0.7      1.08       1.07    0.263              2.02
26 mu_0       0.8      1.01       1.03    0.179              1.78
27 mu_0       0.9      0.860      0.786   0.0155             2.97
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      63.9    0.00000748  1.86e-16   5552.  
 2 mu         0.2     156.     0.00184     8.65e-11  15181.  
 3 mu         0.3     107.     0.0346      1.68e- 7  10370.  
 4 mu         0.4      35.2    0.191       3.40e- 5   3246.  
 5 mu         0.5       6.90   0.606       1.97e- 3    514.  
 6 mu         0.6       1.53   1.02        3.03e- 2     37.5 
 7 mu         0.7       1.05   0.986       3.95e- 2      3.69
 8 mu         0.8       1.23   0.802       8.19e- 4      5.94
 9 mu         0.9       1.61   0.216       1.77e- 7     27.9 
10 mu_1       0.1     118.     0.0000388   0         11689.  
11 mu_1       0.2     163.     0.00435     0         15980.  
12 mu_1       0.3      75.7    0.0705      0          7277.  
13 mu_1       0.4      19.3    0.336       0          1708.  
14 mu_1       0.5       3.56   0.732       0           217.  
15 mu_1       0.6       1.17   1.08        0            13.2 
16 mu_1       0.7       1.05   0.994       0             4.05
17 mu_1       0.8       1.27   0.672       0             7.06
18 mu_1       0.9       1.63   0.151       0            29.4 
19 mu_0       0.1      57.9    0.00000266  0          4870.  
20 mu_0       0.2     155.     0.000734    0         14982.  
21 mu_0       0.3     121.     0.0119      0         11696.  
22 mu_0       0.4      45.8    0.0956      0          4271.  
23 mu_0       0.5      10.2    0.349       0           812.  
24 mu_0       0.6       2.09   0.798       0            74.1 
25 mu_0       0.7       1.06   1.06        0             3.22
26 mu_0       0.8       1.09   0.953       0             4.80
27 mu_0       0.9       1.36   0.280       0            13.9 
[1] "Total run time was 62.65 seconds"
