
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1179"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  8  7  7  7 12  5 10  5  4  4  9  3  7  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04506 0.33657 0.59568 0.93508 7.00000 
[1] "event indicator table: "

  0   1 
657 522 
[1] "treatment indicator table: "

  0   1 
526 653 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 113.695 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.212 0.0870
 2 mu         0.1   0.2 0.374 0.0764
 3 mu         0.1   0.3 0.560 0.158 
 4 mu         0.1   0.4 0.604 0.140 
 5 mu         0.1   0.5 0.605 0.130 
 6 mu         0.2   0.1 0.242 0.0529
 7 mu         0.2   0.2 0.373 0.0466
 8 mu         0.2   0.3 0.511 0.0892
 9 mu         0.2   0.4 0.561 0.0812
10 mu         0.2   0.5 0.581 0.0778
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.853       0.121  0.00000717      8.43
 2 mu         0.2      0.903       0.551  0.00310         5.81
 3 mu         0.3      0.947       0.925  0.0571          3.66
 4 mu         0.4      1.00        0.973  0.252           2.13
 5 mu         0.5      1.03        1.04   0.267           1.86
 6 mu         0.6      1.02        1.01   0.332           1.94
 7 mu         0.7      1.01        0.985  0.164           2.10
 8 mu         0.8      1.05        1.05   0.00961         4.29
 9 mu         0.9      1.18        0.668  0.0000260       7.52
10 mu_1       0.1      0.946       0.335  0.0000401       8.51
11 mu_1       0.2      0.930       0.855  0.00848         4.73
12 mu_1       0.3      0.975       0.953  0.101           2.93
13 mu_1       0.4      1.02        1.00   0.177           2.01
14 mu_1       0.5      1.04        1.02   0.318           1.74
15 mu_1       0.6      1.02        0.988  0.325           2.08
16 mu_1       0.7      1.01        1.01   0.117           2.05
17 mu_1       0.8      1.06        1.01   0.00565         4.80
18 mu_1       0.9      1.19        0.590  0.0000137       7.77
19 mu_0       0.1      0.843       0.0815 0.00000351      8.80
20 mu_0       0.2      0.897       0.457  0.00169         6.22
21 mu_0       0.3      0.936       0.876  0.0328          3.97
22 mu_0       0.4      0.985       0.962  0.141           2.49
23 mu_0       0.5      1.02        0.977  0.210           1.97
24 mu_0       0.6      1.02        1.02   0.281           1.74
25 mu_0       0.7      1.00        0.996  0.226           2.22
26 mu_0       0.8      1.01        0.978  0.0255          2.28
27 mu_0       0.9      1.10        0.988  0.000138        6.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.69     0.00114   1.07e-15    185.  
 2 mu         0.2       1.54     0.0508    2.49e-10     44.5 
 3 mu         0.3       1.21     0.320     3.22e- 7      6.37
 4 mu         0.4       1.14     0.909     4.89e- 5      5.18
 5 mu         0.5       1.11     0.956     2.26e- 3      3.39
 6 mu         0.6       1.09     1.04      5.09e- 4      4.45
 7 mu         0.7       1.12     1.03      3.35e- 6      8.18
 8 mu         0.8       1.32     0.294     2.59e- 9     13.7 
 9 mu         0.9       1.85     0.0169    1.11e-14     29.4 
10 mu_1       0.1       2.22     0.00626   1.01e-14     97.6 
11 mu_1       0.2       1.30     0.138     1.18e- 9     11.7 
12 mu_1       0.3       1.15     0.585     1.02e- 6      6.13
13 mu_1       0.4       1.11     0.994     1.16e- 4      4.32
14 mu_1       0.5       1.10     1.05      2.48e- 3      3.88
15 mu_1       0.6       1.10     1.13      4.47e- 5      4.56
16 mu_1       0.7       1.16     0.872     2.52e- 7      9.49
17 mu_1       0.8       1.39     0.202     1.70e-10     14.0 
18 mu_1       0.9       1.93     0.00907   6.50e-16     32.6 
19 mu_0       0.1       2.74     0.000495  0           195.  
20 mu_0       0.2       1.60     0.0252    0            52.7 
21 mu_0       0.3       1.23     0.209     0             8.19
22 mu_0       0.4       1.15     0.678     0             5.76
23 mu_0       0.5       1.12     1.11      0             4.52
24 mu_0       0.6       1.09     0.972     0             4.28
25 mu_0       0.7       1.04     0.885     0             5.11
26 mu_0       0.8       1.06     0.513     0            12.9 
27 mu_0       0.9       1.20     0.0326    0            14.9 
[1] "Total run time was 119.81 seconds"
