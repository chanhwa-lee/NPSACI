
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 5"
[1] "m: 100"
[1] "N_total: 1167"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 12  8 10 10  5  4  1  8  6  4  3  7  4  9  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0155  0.2571  0.5434  0.9379  4.0000 
[1] "event indicator table: "

  0   1 
710 457 
[1] "treatment indicator table: "

  0   1 
472 695 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 589
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 578
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.135 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.555 0.129 
 2 mu         0.1   0.2 0.638 0.153 
 3 mu         0.1   0.3 0.693 0.176 
 4 mu         0.1   0.4 0.709 0.194 
 5 mu         0.1   0.5 0.717 0.204 
 6 mu         0.2   0.1 0.440 0.0652
 7 mu         0.2   0.2 0.513 0.0711
 8 mu         0.2   0.3 0.551 0.0814
 9 mu         0.2   0.4 0.562 0.0843
10 mu         0.2   0.5 0.572 0.0865
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.15        0.133  0.0000000102      30.1 
 2 mu         0.2      0.966       0.420  0.0000256          8.26
 3 mu         0.3      0.898       0.735  0.00192            2.98
 4 mu         0.4      0.927       0.921  0.0326             2.04
 5 mu         0.5      0.980       1.00   0.232              2.22
 6 mu         0.6      1.02        0.994  0.380              1.93
 7 mu         0.7      1.06        0.997  0.200              2.20
 8 mu         0.8      1.10        0.953  0.0324             5.06
 9 mu         0.9      1.14        0.611  0.000271           7.39
10 mu_1       0.1      1.10        0.366  0.0000000723      15.8 
11 mu_1       0.2      0.951       0.739  0.0000916          6.21
12 mu_1       0.3      0.923       0.912  0.00463            2.84
13 mu_1       0.4      0.959       0.993  0.0596             2.28
14 mu_1       0.5      1.00        0.975  0.342              2.08
15 mu_1       0.6      1.03        1.02   0.269              2.15
16 mu_1       0.7      1.07        1.03   0.182              2.40
17 mu_1       0.8      1.11        0.889  0.0209             5.52
18 mu_1       0.9      1.15        0.574  0.000161           7.37
19 mu_0       0.1      1.16        0.0990 0.00000000327     31.7 
20 mu_0       0.2      0.970       0.322  0.00000907         8.78
21 mu_0       0.3      0.887       0.674  0.000762           3.57
22 mu_0       0.4      0.905       0.876  0.0147             2.23
23 mu_0       0.5      0.958       0.977  0.114              2.35
24 mu_0       0.6      1.00        1.02   0.293              1.85
25 mu_0       0.7      1.04        1.05   0.242              2.30
26 mu_0       0.8      1.05        0.992  0.0400             3.23
27 mu_0       0.9      1.07        0.864  0.00112            8.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.84     0.000936  1.55e-13     57.7 
 2 mu         0.2       1.94     0.0302    9.05e- 9     45.0 
 3 mu         0.3       1.42     0.263     5.20e- 6     23.2 
 4 mu         0.4       1.14     0.719     4.45e- 4      9.00
 5 mu         0.5       1.08     0.957     1.32e- 2      3.15
 6 mu         0.6       1.13     1.11      3.06e- 3      2.76
 7 mu         0.7       1.32     1.16      4.86e- 5      7.35
 8 mu         0.8       1.64     0.507     1.11e- 7     18.4 
 9 mu         0.9       1.72     0.0693    2.40e-12     32.0 
10 mu_1       0.1       2.50     0.00481   1.46e-12     64.1 
11 mu_1       0.2       1.73     0.111     4.26e- 8     34.5 
12 mu_1       0.3       1.22     0.505     1.63e- 5      9.16
13 mu_1       0.4       1.07     0.893     1.05e- 3      3.81
14 mu_1       0.5       1.06     0.880     1.98e- 2      3.04
15 mu_1       0.6       1.15     1.08      8.04e- 4      3.03
16 mu_1       0.7       1.38     1.16      1.10e- 5      8.81
17 mu_1       0.8       1.68     0.378     2.18e- 8     19.4 
18 mu_1       0.9       1.70     0.0414    4.21e-13     33.4 
19 mu_0       0.1       1.76     0.000390  0            57.0 
20 mu_0       0.2       1.99     0.0155    0            50.0 
21 mu_0       0.3       1.51     0.150     0            29.4 
22 mu_0       0.4       1.19     0.464     0            13.3 
23 mu_0       0.5       1.09     0.813     0             4.72
24 mu_0       0.6       1.10     1.01      0             2.98
25 mu_0       0.7       1.20     1.06      0             5.16
26 mu_0       0.8       1.47     1.02      0            14.5 
27 mu_0       0.9       1.90     0.226     0            23.9 
[1] "Total run time was 50.643 seconds"
