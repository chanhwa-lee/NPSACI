
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1270"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4 10  8  3  5  6  9  4  5  4  9  9  8  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03621 0.35082 0.60479 0.99967 6.51089 
[1] "event indicator table: "

  0   1 
771 499 
[1] "treatment indicator table: "

  0   1 
490 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.228 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.102 0.0676
 2 mu         0.1   0.2 0.132 0.0725
 3 mu         0.1   0.3 0.136 0.0866
 4 mu         0.1   0.4 0.226 0.0915
 5 mu         0.1   0.5 0.225 0.0949
 6 mu         0.2   0.1 0.156 0.0722
 7 mu         0.2   0.2 0.217 0.0676
 8 mu         0.2   0.3 0.230 0.0884
 9 mu         0.2   0.4 0.322 0.0904
10 mu         0.2   0.5 0.342 0.0942
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.431       0.0406 0.0000000926     13.3 
 2 mu         0.2      0.688       0.319  0.0000979        15.5 
 3 mu         0.3      0.873       0.684  0.00404          12.8 
 4 mu         0.4      0.975       0.909  0.0415            8.69
 5 mu         0.5      1.01        0.970  0.187             5.11
 6 mu         0.6      1.02        0.968  0.472             2.68
 7 mu         0.7      1.01        1.02   0.470             1.78
 8 mu         0.8      0.982       0.917  0.201             2.88
 9 mu         0.9      0.940       0.627  0.0238            4.85
10 mu_1       0.1      0.717       0.131  0.000000601      23.1 
11 mu_1       0.2      0.823       0.573  0.000319         14.1 
12 mu_1       0.3      0.923       0.851  0.00884           8.28
13 mu_1       0.4      0.978       0.969  0.0688            4.68
14 mu_1       0.5      0.999       0.997  0.252             2.58
15 mu_1       0.6      1.01        0.990  0.512             1.67
16 mu_1       0.7      1.00        1.01   0.316             1.78
17 mu_1       0.8      0.976       0.873  0.156             3.10
18 mu_1       0.9      0.936       0.588  0.0179            4.90
19 mu_0       0.1      0.399       0.0305 0.0000000361     12.3 
20 mu_0       0.2      0.654       0.249  0.0000426        15.9 
21 mu_0       0.3      0.852       0.592  0.00199          14.7 
22 mu_0       0.4      0.973       0.861  0.0234           11.4 
23 mu_0       0.5      1.02        0.936  0.122             7.65
24 mu_0       0.6      1.03        1.01   0.356             4.52
25 mu_0       0.7      1.03        1.01   0.614             2.36
26 mu_0       0.8      1.01        0.988  0.372             1.99
27 mu_0       0.9      0.980       0.809  0.0767            4.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.52     0.0000518  1.73e-14     67.2 
 2 mu         0.2      3.28     0.00704    1.13e- 9    184.  
 3 mu         0.3      2.72     0.0691     7.44e- 7    126.  
 4 mu         0.4      1.70     0.324      7.42e- 5     39.3 
 5 mu         0.5      1.28     0.835      2.64e- 3     17.3 
 6 mu         0.6      1.27     1.01       2.00e- 2      7.67
 7 mu         0.7      1.34     1.21       9.86e- 4      4.27
 8 mu         0.8      1.26     0.679      1.30e- 5     10.9 
 9 mu         0.9      0.983    0.0811     2.14e- 9     32.0 
10 mu_1       0.1      2.88     0.000342   1.73e-13    142.  
11 mu_1       0.2      3.55     0.0237     5.66e- 9    194.  
12 mu_1       0.3      2.26     0.168      2.48e- 6     88.1 
13 mu_1       0.4      1.44     0.538      1.85e- 4     20.7 
14 mu_1       0.5      1.24     0.994      5.27e- 3     15.6 
15 mu_1       0.6      1.28     1.10       2.78e- 3      5.75
16 mu_1       0.7      1.34     1.15       1.17e- 4      4.74
17 mu_1       0.8      1.22     0.573      1.36e- 6     11.6 
18 mu_1       0.9      0.962    0.0581     5.01e-10     35.6 
19 mu_0       0.1      1.37     0.0000215  0            59.0 
20 mu_0       0.2      3.21     0.00288    0           181.  
21 mu_0       0.3      2.92     0.0339     0           142.  
22 mu_0       0.4      1.87     0.167      0            51.7 
23 mu_0       0.5      1.33     0.604      0            19.0 
24 mu_0       0.6      1.24     0.943      0            10.5 
25 mu_0       0.7      1.35     1.21       0             4.13
26 mu_0       0.8      1.42     1.09       0             8.16
27 mu_0       0.9      1.17     0.251      0            15.1 
[1] "Total run time was 49.496 seconds"
