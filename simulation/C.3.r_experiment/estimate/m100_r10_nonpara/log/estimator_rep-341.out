
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1243"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  3  4  7  5  7  8 15  6  6  7  4  6  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04977 0.37487 0.62799 0.99734 5.00000 
[1] "event indicator table: "

  0   1 
749 494 
[1] "treatment indicator table: "

  0   1 
439 804 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.722 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.837 0.532
 2 mu         0.1   0.2 1.02  0.722
 3 mu         0.1   0.3 1.11  0.748
 4 mu         0.1   0.4 1.23  0.778
 5 mu         0.1   0.5 1.28  0.828
 6 mu         0.2   0.1 0.594 0.300
 7 mu         0.2   0.2 0.734 0.408
 8 mu         0.2   0.3 0.811 0.423
 9 mu         0.2   0.4 0.926 0.444
10 mu         0.2   0.5 0.969 0.471
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1       1.98        0.151 0.000000298    133.  
 2 mu         0.2       1.54        0.601 0.000287        75.8 
 3 mu         0.3       1.18        0.805 0.0105          28.8 
 4 mu         0.4       1.06        0.948 0.0914           8.76
 5 mu         0.5       1.03        0.981 0.330            2.52
 6 mu         0.6       1.01        1.02  0.487            1.48
 7 mu         0.7       1.01        1.02  0.427            1.65
 8 mu         0.8       1.04        0.971 0.103            2.35
 9 mu         0.9       1.11        0.977 0.00607         10.2 
10 mu_1       0.1       1.88        0.361 0.00000175     113.  
11 mu_1       0.2       1.23        0.724 0.000854        34.6 
12 mu_1       0.3       1.06        0.885 0.0210          10.3 
13 mu_1       0.4       1.03        0.959 0.140            3.25
14 mu_1       0.5       1.01        0.966 0.386            1.96
15 mu_1       0.6       1.00        1.03  0.445            1.42
16 mu_1       0.7       1.01        0.999 0.321            1.71
17 mu_1       0.8       1.05        0.973 0.0732           2.67
18 mu_1       0.9       1.11        0.939 0.00404         11.3 
19 mu_0       0.1       1.99        0.115 0.000000137    136.  
20 mu_0       0.2       1.61        0.510 0.000145        86.1 
21 mu_0       0.3       1.23        0.747 0.00593         36.7 
22 mu_0       0.4       1.08        0.909 0.0592          12.4 
23 mu_0       0.5       1.04        0.976 0.249            3.74
24 mu_0       0.6       1.02        1.02  0.486            1.82
25 mu_0       0.7       1.00        0.995 0.406            1.55
26 mu_0       0.8       1.01        0.982 0.222            1.88
27 mu_0       0.9       1.05        0.915 0.0244           3.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      53.5     0.0000722  8.39e-16   4702.  
 2 mu         0.2      35.0     0.00454    1.95e-10   2857.  
 3 mu         0.3      12.5     0.0517     2.53e- 7    759.  
 4 mu         0.4       4.19    0.244      3.84e- 5    115.  
 5 mu         0.5       1.94    0.606      1.78e- 3     38.6 
 6 mu         0.6       1.34    0.970      3.78e- 2     11.7 
 7 mu         0.7       1.28    1.20       5.35e- 3      4.06
 8 mu         0.8       1.62    0.910      1.06e- 5     23.0 
 9 mu         0.9       3.16    0.207      2.06e-10    151.  
10 mu_1       0.1      60.1     0.000483   7.94e-15   5224.  
11 mu_1       0.2      21.2     0.0173     9.26e-10   1587.  
12 mu_1       0.3       6.33    0.125      7.98e- 7    281.  
13 mu_1       0.4       2.45    0.453      9.10e- 5     58.0 
14 mu_1       0.5       1.47    0.800      3.37e- 3     21.1 
15 mu_1       0.6       1.23    1.04       5.98e- 2      9.75
16 mu_1       0.7       1.29    1.10       8.50e- 4      5.07
17 mu_1       0.8       1.70    0.784      1.48e- 6     28.7 
18 mu_1       0.9       3.35    0.149      2.54e-11    168.  
19 mu_0       0.1      52.8     0.0000252  0          4644.  
20 mu_0       0.2      38.5     0.00140    0          3174.  
21 mu_0       0.3      15.1     0.0189     0           964.  
22 mu_0       0.4       5.35    0.107      0           170.  
23 mu_0       0.5       2.41    0.384      0            56.2 
24 mu_0       0.6       1.50    0.883      0            20.4 
25 mu_0       0.7       1.24    1.00       0             6.48
26 mu_0       0.8       1.29    1.10       0             7.30
27 mu_0       0.9       1.39    0.550      0            19.0 
[1] "Total run time was 72.218 seconds"
