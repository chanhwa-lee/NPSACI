
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1218"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  6  7  7  7  7  5  5  5  7  2  7  7  6  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04446 0.34112 0.58584 0.98170 6.00000 
[1] "event indicator table: "

  0   1 
735 483 
[1] "treatment indicator table: "

  0   1 
456 762 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 48.33 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.476 0.112 
 2 mu         0.1   0.2 0.573 0.128 
 3 mu         0.1   0.3 0.577 0.122 
 4 mu         0.1   0.4 0.621 0.116 
 5 mu         0.1   0.5 0.663 0.116 
 6 mu         0.2   0.1 0.416 0.0634
 7 mu         0.2   0.2 0.495 0.0795
 8 mu         0.2   0.3 0.512 0.0829
 9 mu         0.2   0.4 0.578 0.0826
10 mu         0.2   0.5 0.618 0.0886
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.862        0.187 0.0000000739      5.63
 2 mu         0.2      0.990        0.595 0.000128          5.70
 3 mu         0.3      0.989        0.847 0.00644           3.29
 4 mu         0.4      0.979        0.941 0.0706            2.06
 5 mu         0.5      0.982        0.995 0.314             1.79
 6 mu         0.6      0.981        1.01  0.273             1.97
 7 mu         0.7      0.956        0.957 0.144             2.98
 8 mu         0.8      0.934        0.807 0.0139            6.57
 9 mu         0.9      0.986        0.707 0.0000885        14.2 
10 mu_1       0.1      1.02         0.427 0.000000446       7.02
11 mu_1       0.2      1.04         0.783 0.000390          4.80
12 mu_1       0.3      0.999        0.945 0.0132            2.87
13 mu_1       0.4      0.986        0.984 0.110             1.98
14 mu_1       0.5      0.986        1.00  0.365             1.70
15 mu_1       0.6      0.979        0.988 0.246             2.01
16 mu_1       0.7      0.951        0.894 0.109             3.52
17 mu_1       0.8      0.940        0.793 0.00937           7.52
18 mu_1       0.9      1.00         0.683 0.0000536        15.6 
19 mu_0       0.1      0.844        0.147 0.0000000326      5.96
20 mu_0       0.2      0.978        0.526 0.0000629         5.92
21 mu_0       0.3      0.985        0.806 0.00354           3.73
22 mu_0       0.4      0.973        0.906 0.0440            2.26
23 mu_0       0.5      0.977        0.991 0.203             1.88
24 mu_0       0.6      0.984        0.990 0.314             1.91
25 mu_0       0.7      0.967        0.956 0.225             1.97
26 mu_0       0.8      0.907        0.917 0.0320            4.67
27 mu_0       0.9      0.861        0.715 0.000402          9.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.60    0.000112   1.27e-15    288.  
 2 mu         0.2       3.24    0.0103     1.48e-10     99.6 
 3 mu         0.3       2.00    0.100      1.28e- 7     50.6 
 4 mu         0.4       1.35    0.470      1.46e- 5     13.9 
 5 mu         0.5       1.22    0.989      5.40e- 4      5.38
 6 mu         0.6       1.35    1.14       9.58e- 3      4.62
 7 mu         0.7       2.02    1.21       4.29e- 3     26.3 
 8 mu         0.8       4.38    0.628      2.32e- 5     86.5 
 9 mu         0.9      10.6     0.0764     2.01e- 9    309.  
10 mu_1       0.1       2.64    0.000643   0           111.  
11 mu_1       0.2       2.08    0.0304     0            85.7 
12 mu_1       0.3       1.41    0.203      0            29.7 
13 mu_1       0.4       1.17    0.748      0             6.11
14 mu_1       0.5       1.21    1.02       0             4.97
15 mu_1       0.6       1.44    1.18       0             6.80
16 mu_1       0.7       2.30    1.02       0            33.1 
17 mu_1       0.8       4.95    0.494      0            95.4 
18 mu_1       0.9      11.2     0.0545     0           343.  
19 mu_0       0.1       4.82    0.0000316  0           319.  
20 mu_0       0.2       3.52    0.00408    0           125.  
21 mu_0       0.3       2.26    0.0521     0            59.5 
22 mu_0       0.4       1.48    0.287      0            19.0 
23 mu_0       0.5       1.23    0.830      0             5.80
24 mu_0       0.6       1.22    1.02       0             4.84
25 mu_0       0.7       1.35    1.22       0            10.3 
26 mu_0       0.8       2.12    0.768      0            50.9 
27 mu_0       0.9       4.59    0.133      0           149.  
[1] "Total run time was 51.531 seconds"
