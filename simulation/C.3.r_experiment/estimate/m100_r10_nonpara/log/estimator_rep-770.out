
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1287"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  8  1  6  6  3  8  7  9  6  6  6  6 12  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03153 0.35351 0.61151 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
782 505 
[1] "treatment indicator table: "

  0   1 
484 803 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 72.384 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.207 0.0612
 2 mu         0.1   0.2 0.328 0.0891
 3 mu         0.1   0.3 0.389 0.0968
 4 mu         0.1   0.4 0.422 0.110 
 5 mu         0.1   0.5 0.459 0.117 
 6 mu         0.2   0.1 0.210 0.0396
 7 mu         0.2   0.2 0.329 0.0639
 8 mu         0.2   0.3 0.395 0.0691
 9 mu         0.2   0.4 0.449 0.0747
10 mu         0.2   0.5 0.500 0.0765
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.757       0.0699 0.00000423     10.5 
 2 mu         0.2      0.887       0.484  0.00150         5.51
 3 mu         0.3      0.972       0.872  0.0280          3.87
 4 mu         0.4      1.01        0.991  0.145           2.38
 5 mu         0.5      1.01        0.995  0.344           1.72
 6 mu         0.6      0.985       0.983  0.560           1.62
 7 mu         0.7      0.956       0.980  0.405           1.54
 8 mu         0.8      0.958       0.948  0.114           2.17
 9 mu         0.9      1.02        0.865  0.00360         4.06
10 mu_1       0.1      0.885       0.199  0.0000236       7.60
11 mu_1       0.2      0.928       0.756  0.00456         4.20
12 mu_1       0.3      0.984       0.914  0.0571          2.40
13 mu_1       0.4      1.01        0.991  0.140           1.84
14 mu_1       0.5      1.00        0.997  0.432           1.65
15 mu_1       0.6      0.980       0.992  0.505           1.70
16 mu_1       0.7      0.954       0.974  0.350           1.54
17 mu_1       0.8      0.964       0.942  0.0901          2.34
18 mu_1       0.9      1.02        0.856  0.00259         4.25
19 mu_0       0.1      0.743       0.0547 0.00000208     11.7 
20 mu_0       0.2      0.877       0.415  0.000740        5.83
21 mu_0       0.3      0.967       0.839  0.0155          4.51
22 mu_0       0.4      1.01        0.927  0.104           2.98
23 mu_0       0.5      1.01        0.978  0.254           1.86
24 mu_0       0.6      0.991       0.971  0.373           1.52
25 mu_0       0.7      0.962       0.986  0.389           1.76
26 mu_0       0.8      0.935       0.970  0.207           1.63
27 mu_0       0.9      0.992       0.903  0.0128          3.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.836    0.0000808  3.72e-14     31.6 
 2 mu         0.2      1.55     0.00661    4.33e- 9     43.9 
 3 mu         0.3      1.53     0.0946     3.74e- 6     29.7 
 4 mu         0.4      1.29     0.292      2.06e- 4     13.2 
 5 mu         0.5      1.13     0.802      3.90e- 3      6.05
 6 mu         0.6      1.07     0.976      9.48e- 3      4.18
 7 mu         0.7      1.20     1.24       2.01e- 4      4.38
 8 mu         0.8      1.70     0.937      6.86e- 7     18.6 
 9 mu         0.9      2.66     0.163      2.98e-11     68.9 
10 mu_1       0.1      1.62     0.000586   3.51e-13     57.5 
11 mu_1       0.2      1.70     0.0230     2.05e- 8     39.9 
12 mu_1       0.3      1.39     0.201      1.18e- 5     18.0 
13 mu_1       0.4      1.20     0.527      4.80e- 4      7.72
14 mu_1       0.5      1.11     0.899      7.27e- 3      5.73
15 mu_1       0.6      1.10     1.05       2.63e- 3      4.10
16 mu_1       0.7      1.27     1.25       4.79e- 5      5.56
17 mu_1       0.8      1.82     0.756      1.43e- 7     22.0 
18 mu_1       0.9      2.73     0.128      5.52e-12     72.3 
19 mu_0       0.1      0.749    0.0000210  0            28.8 
20 mu_0       0.2      1.51     0.00260    0            44.8 
21 mu_0       0.3      1.59     0.0299     0            34.7 
22 mu_0       0.4      1.36     0.180      0            18.0 
23 mu_0       0.5      1.15     0.534      0             6.53
24 mu_0       0.6      1.04     0.865      0             4.41
25 mu_0       0.7      1.03     0.985      0             3.58
26 mu_0       0.8      1.25     1.08       0             9.16
27 mu_0       0.9      1.96     0.331      0            38.3 
[1] "Total run time was 76.753 seconds"
