
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5 11  7  9  8  6  5  8  5  8  8  2  5  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01958 0.29138 0.57847 0.99611 5.00000 
[1] "event indicator table: "

  0   1 
698 508 
[1] "treatment indicator table: "

  0   1 
466 740 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.012 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.184 0.103
 2 mu         0.1   0.2 0.194 0.130
 3 mu         0.1   0.3 0.269 0.124
 4 mu         0.1   0.4 0.270 0.151
 5 mu         0.1   0.5 0.258 0.170
 6 mu         0.2   0.1 0.322 0.104
 7 mu         0.2   0.2 0.364 0.126
 8 mu         0.2   0.3 0.423 0.129
 9 mu         0.2   0.4 0.447 0.152
10 mu         0.2   0.5 0.465 0.172
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.542       0.0188 0.000000382     12.6 
 2 mu         0.2      0.858       0.182  0.000222        20.9 
 3 mu         0.3      0.934       0.536  0.00661         12.6 
 4 mu         0.4      0.948       0.833  0.0551           4.49
 5 mu         0.5      0.969       0.984  0.220            2.20
 6 mu         0.6      0.996       1.01   0.495            1.29
 7 mu         0.7      1.02        1.01   0.489            2.16
 8 mu         0.8      1.06        0.987  0.115            4.28
 9 mu         0.9      1.10        0.667  0.00422         10.8 
10 mu_1       0.1      0.901       0.0743 0.00000230      22.6 
11 mu_1       0.2      0.983       0.368  0.000680        19.6 
12 mu_1       0.3      0.963       0.757  0.0138           7.98
13 mu_1       0.4      0.964       0.935  0.0881           3.32
14 mu_1       0.5      0.984       0.987  0.291            1.74
15 mu_1       0.6      1.00        1.02   0.541            1.51
16 mu_1       0.7      1.02        1.01   0.392            2.51
17 mu_1       0.8      1.06        0.959  0.0837           4.73
18 mu_1       0.9      1.10        0.619  0.00291         11.2 
19 mu_0       0.1      0.502       0.0123 0.000000169     12.8 
20 mu_0       0.2      0.827       0.119  0.000107        21.2 
21 mu_0       0.3      0.922       0.431  0.00355         14.5 
22 mu_0       0.4      0.937       0.765  0.0331           5.69
23 mu_0       0.5      0.954       0.953  0.102            2.77
24 mu_0       0.6      0.982       1.01   0.240            1.43
25 mu_0       0.7      1.01        1.00   0.489            1.63
26 mu_0       0.8      1.03        1.03   0.240            2.50
27 mu_0       0.9      1.12        0.969  0.0160           6.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.68     0.0000477  5.62e-15    346.  
 2 mu         0.2      6.24     0.00575    7.37e-10    266.  
 3 mu         0.3      4.71     0.0679     7.26e- 7    201.  
 4 mu         0.4      2.65     0.303      9.66e- 5     99.7 
 5 mu         0.5      1.44     0.728      4.29e- 3     27.3 
 6 mu         0.6      1.04     1.01       8.62e- 2      4.14
 7 mu         0.7      1.06     0.951      2.85e- 3      4.18
 8 mu         0.8      1.22     0.599      1.58e- 5     12.7 
 9 mu         0.9      1.84     0.109      1.22e- 9     93.7 
10 mu_1       0.1      7.11     0.000311   5.62e-14    432.  
11 mu_1       0.2      6.10     0.0198     3.68e- 9    246.  
12 mu_1       0.3      3.72     0.139      2.42e- 6    167.  
13 mu_1       0.4      1.94     0.486      2.41e- 4     62.3 
14 mu_1       0.5      1.18     0.872      8.58e- 3     13.7 
15 mu_1       0.6      1.02     0.989      3.04e- 2      2.76
16 mu_1       0.7      1.10     0.946      6.32e- 4      4.48
17 mu_1       0.8      1.25     0.531      2.47e- 6     15.8 
18 mu_1       0.9      1.92     0.0851     1.70e-10    104.  
19 mu_0       0.1      4.41     0.0000197  0           336.  
20 mu_0       0.2      6.27     0.00226    0           291.  
21 mu_0       0.3      5.14     0.0339     0           215.  
22 mu_0       0.4      3.13     0.158      0           125.  
23 mu_0       0.5      1.69     0.485      0            41.0 
24 mu_0       0.6      1.08     0.850      0             7.30
25 mu_0       0.7      0.973    0.939      0             3.49
26 mu_0       0.8      1.09     0.886      0             5.13
27 mu_0       0.9      1.20     0.251      0             8.55
[1] "Total run time was 71.818 seconds"
