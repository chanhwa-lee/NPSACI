
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1339"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  4  4  3  6  6  4  9  5  5 11  7 10  5  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06058 0.41020 0.66459 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
809 530 
[1] "treatment indicator table: "

  0   1 
466 873 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 676
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 88.139 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.315 0.141 
 2 mu         0.1   0.2 0.329 0.154 
 3 mu         0.1   0.3 0.340 0.142 
 4 mu         0.1   0.4 0.373 0.141 
 5 mu         0.1   0.5 0.360 0.137 
 6 mu         0.2   0.1 0.279 0.0832
 7 mu         0.2   0.2 0.303 0.0839
 8 mu         0.2   0.3 0.322 0.0721
 9 mu         0.2   0.4 0.357 0.0757
10 mu         0.2   0.5 0.354 0.0758
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.708       0.0568 0.0000000842     19.6 
 2 mu         0.2      0.766       0.438  0.0000957         3.53
 3 mu         0.3      0.890       0.756  0.00425           3.55
 4 mu         0.4      0.953       0.923  0.0466            3.37
 5 mu         0.5      0.986       0.988  0.221             2.81
 6 mu         0.6      1.01        1.00   0.383             2.24
 7 mu         0.7      1.03        1.03   0.441             1.49
 8 mu         0.8      1.04        1.06   0.110             1.83
 9 mu         0.9      1.02        0.965  0.00411           2.88
10 mu_1       0.1      0.727       0.164  0.000000579       5.25
11 mu_1       0.2      0.861       0.616  0.000329          3.24
12 mu_1       0.3      0.940       0.896  0.00973           3.92
13 mu_1       0.4      0.969       0.937  0.0802            3.03
14 mu_1       0.5      0.994       0.994  0.282             2.86
15 mu_1       0.6      1.02        1.00   0.387             2.00
16 mu_1       0.7      1.03        1.06   0.408             1.56
17 mu_1       0.8      1.04        1.06   0.0829            1.87
18 mu_1       0.9      1.02        0.962  0.00286           3.04
19 mu_0       0.1      0.706       0.0435 0.0000000292     21.8 
20 mu_0       0.2      0.743       0.367  0.0000374         4.20
21 mu_0       0.3      0.869       0.705  0.00189           3.39
22 mu_0       0.4      0.942       0.859  0.0242            3.60
23 mu_0       0.5      0.977       0.955  0.136             2.76
24 mu_0       0.6      1.00        0.988  0.378             2.60
25 mu_0       0.7      1.02        1.01   0.394             1.58
26 mu_0       0.8      1.03        1.09   0.219             1.74
27 mu_0       0.9      1.04        1.03   0.0153            2.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.847    0.0000655  2.37e-19     40.2 
 2 mu         0.2      1.05     0.00687    2.49e-13     34.7 
 3 mu         0.3      1.09     0.0593     8.27e-10     13.8 
 4 mu         0.4      1.25     0.259      2.61e- 7     15.2 
 5 mu         0.5      1.26     0.675      2.26e- 5     11.7 
 6 mu         0.6      1.13     1.00       8.67e- 4      4.81
 7 mu         0.7      1.02     1.03       1.23e- 3      2.83
 8 mu         0.8      0.987    0.785      8.28e- 6      3.76
 9 mu         0.9      1.05     0.225      1.28e- 9     10.2 
10 mu_1       0.1      1.34     0.000428   2.37e-18     53.5 
11 mu_1       0.2      1.06     0.0286     1.24e-12     23.2 
12 mu_1       0.3      1.12     0.137      2.76e- 9     13.0 
13 mu_1       0.4      1.27     0.479      6.52e- 7     15.7 
14 mu_1       0.5      1.24     0.794      4.52e- 5      9.65
15 mu_1       0.6      1.10     0.888      1.45e- 3      4.41
16 mu_1       0.7      1.01     1.04       2.35e- 4      3.17
17 mu_1       0.8      0.991    0.752      1.38e- 6      3.94
18 mu_1       0.9      1.07     0.163      1.90e-10     11.3 
19 mu_0       0.1      0.792    0.0000260  0            38.7 
20 mu_0       0.2      1.05     0.00164    0            37.6 
21 mu_0       0.3      1.08     0.0173     0            17.1 
22 mu_0       0.4      1.23     0.133      0            14.9 
23 mu_0       0.5      1.29     0.446      0            13.8 
24 mu_0       0.6      1.17     0.823      0             6.63
25 mu_0       0.7      1.02     0.814      0             3.29
26 mu_0       0.8      0.969    0.810      0             3.90
27 mu_0       0.9      0.943    0.222      0             5.14
[1] "Total run time was 93.261 seconds"
