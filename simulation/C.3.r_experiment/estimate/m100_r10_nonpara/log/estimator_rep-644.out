
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1249"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  5  9  5  2  9  9  6  6  6  3  7  7  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02838 0.32233 0.62550 1.00000 8.00000 
[1] "event indicator table: "

  0   1 
738 511 
[1] "treatment indicator table: "

  0   1 
458 791 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 590
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.801 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.386 0.0898
 2 mu         0.1   0.2 0.437 0.109 
 3 mu         0.1   0.3 0.499 0.111 
 4 mu         0.1   0.4 0.516 0.112 
 5 mu         0.1   0.5 0.559 0.125 
 6 mu         0.2   0.1 0.437 0.0759
 7 mu         0.2   0.2 0.513 0.101 
 8 mu         0.2   0.3 0.609 0.101 
 9 mu         0.2   0.4 0.650 0.105 
10 mu         0.2   0.5 0.687 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.653       0.0868 0.000000184       8.98
 2 mu         0.2      0.987       0.463  0.000313         10.9 
 3 mu         0.3      1.07        0.870  0.0119            4.56
 4 mu         0.4      1.03        0.964  0.110             2.76
 5 mu         0.5      1.00        0.957  0.424             2.09
 6 mu         0.6      1.01        0.988  0.629             1.62
 7 mu         0.7      1.02        1.01   0.457             1.62
 8 mu         0.8      0.967       0.997  0.224             2.23
 9 mu         0.9      0.930       0.758  0.0110            5.24
10 mu_1       0.1      0.886       0.283  0.00000111       14.2 
11 mu_1       0.2      1.09        0.740  0.000956          8.66
12 mu_1       0.3      1.06        0.938  0.0249            3.38
13 mu_1       0.4      1.01        0.966  0.174             2.38
14 mu_1       0.5      0.997       0.977  0.518             1.95
15 mu_1       0.6      1.02        1.00   0.624             1.42
16 mu_1       0.7      1.02        1.04   0.401             1.69
17 mu_1       0.8      0.960       1.00   0.181             2.33
18 mu_1       0.9      0.933       0.721  0.00820           5.77
19 mu_0       0.1      0.628       0.0630 0.0000000811      9.72
20 mu_0       0.2      0.962       0.369  0.000149         11.5 
21 mu_0       0.3      1.08        0.833  0.00638           5.38
22 mu_0       0.4      1.05        0.976  0.0676            3.01
23 mu_0       0.5      1.01        0.965  0.308             2.29
24 mu_0       0.6      1.00        0.994  0.486             1.99
25 mu_0       0.7      1.02        1.00   0.543             1.58
26 mu_0       0.8      0.991       1.02   0.273             1.86
27 mu_0       0.9      0.902       0.914  0.0366            2.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.696    0.000103   8.74e-17     25.3 
 2 mu         0.2      1.65     0.00762    4.07e-11     87.5 
 3 mu         0.3      1.69     0.100      7.90e- 8     78.1 
 4 mu         0.4      1.26     0.482      1.60e- 5     33.3 
 5 mu         0.5      1.02     0.890      9.26e- 4      7.59
 6 mu         0.6      0.969    0.970      2.37e- 2      2.50
 7 mu         0.7      0.960    0.960      4.77e- 3      3.06
 8 mu         0.8      1.04     0.612      3.19e- 5      6.57
 9 mu         0.9      1.59     0.0797     3.51e- 9     24.0 
10 mu_1       0.1      1.40     0.000696   8.30e-16     59.5 
11 mu_1       0.2      1.95     0.0291     1.93e-10    103.  
12 mu_1       0.3      1.55     0.203      2.50e- 7     61.3 
13 mu_1       0.4      1.12     0.730      3.80e- 5     19.6 
14 mu_1       0.5      0.982    0.893      1.76e- 3      3.57
15 mu_1       0.6      0.960    0.961      3.75e- 2      2.34
16 mu_1       0.7      0.960    0.971      1.79e- 3      3.06
17 mu_1       0.8      1.07     0.478      1.05e- 5      8.21
18 mu_1       0.9      1.66     0.0534     1.03e- 9     26.7 
19 mu_0       0.1      0.617    0.0000409  0            21.5 
20 mu_0       0.2      1.57     0.00360    0            83.7 
21 mu_0       0.3      1.75     0.0561     0            85.3 
22 mu_0       0.4      1.35     0.310      0            42.4 
23 mu_0       0.5      1.05     0.702      0            11.6 
24 mu_0       0.6      0.982    0.989      0             3.91
25 mu_0       0.7      0.960    1.02       0             3.06
26 mu_0       0.8      0.898    0.809      0             2.86
27 mu_0       0.9      0.896    0.166      0             8.56
[1] "Total run time was 50.112 seconds"
