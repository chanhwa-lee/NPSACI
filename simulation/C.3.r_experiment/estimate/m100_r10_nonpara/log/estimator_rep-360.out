
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1295"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  1  8  4  4  5  4  8  4  7 11 15  6  9  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02548 0.31055 0.60164 0.99088 5.12706 
[1] "event indicator table: "

  0   1 
748 547 
[1] "treatment indicator table: "

  0   1 
472 823 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 667
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 92.382 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.179 0.111 
 2 mu         0.1   0.2 0.283 0.141 
 3 mu         0.1   0.3 0.272 0.134 
 4 mu         0.1   0.4 0.252 0.138 
 5 mu         0.1   0.5 0.239 0.135 
 6 mu         0.2   0.1 0.270 0.102 
 7 mu         0.2   0.2 0.391 0.0997
 8 mu         0.2   0.3 0.412 0.114 
 9 mu         0.2   0.4 0.414 0.126 
10 mu         0.2   0.5 0.416 0.127 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.412       0.0623 0.00000000529      5.36
 2 mu         0.2      0.778       0.398  0.00000717         8.37
 3 mu         0.3      0.914       0.775  0.000398           5.50
 4 mu         0.4      0.937       0.931  0.00586            2.89
 5 mu         0.5      0.947       0.982  0.0410             1.52
 6 mu         0.6      0.965       0.960  0.177              1.67
 7 mu         0.7      0.990       0.997  0.364              1.53
 8 mu         0.8      1.03        1.00   0.0824             2.91
 9 mu         0.9      1.15        1.01   0.00314            8.13
10 mu_1       0.1      0.747       0.210  0.0000000390       9.10
11 mu_1       0.2      0.945       0.678  0.0000266          7.79
12 mu_1       0.3      0.970       0.895  0.000994           4.23
13 mu_1       0.4      0.958       0.962  0.0112             2.26
14 mu_1       0.5      0.959       0.970  0.0639             1.55
15 mu_1       0.6      0.972       0.955  0.237              1.68
16 mu_1       0.7      0.996       0.981  0.289              1.64
17 mu_1       0.8      1.04        1.01   0.0595             3.19
18 mu_1       0.9      1.16        1.00   0.00206            8.93
19 mu_0       0.1      0.375       0.0478 0.00000000155      4.94
20 mu_0       0.2      0.737       0.324  0.00000232         8.51
21 mu_0       0.3      0.890       0.682  0.000143           6.04
22 mu_0       0.4      0.924       0.871  0.00233            3.32
23 mu_0       0.5      0.936       0.949  0.0181             1.79
24 mu_0       0.6      0.956       0.941  0.0872             1.65
25 mu_0       0.7      0.978       0.959  0.298              1.65
26 mu_0       0.8      0.994       0.978  0.174              1.78
27 mu_0       0.9      1.02        0.976  0.0128             5.13
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.695    0.0000406  6.59e-15     28.2 
 2 mu         0.2      1.18     0.00771    7.67e-10     24.5 
 3 mu         0.3      1.33     0.0978     6.61e- 7     17.1 
 4 mu         0.4      1.25     0.341      7.54e- 5      7.42
 5 mu         0.5      1.17     0.795      2.79e- 3      5.68
 6 mu         0.6      1.11     1.00       4.95e- 2      4.29
 7 mu         0.7      1.13     0.915      2.03e- 3      7.00
 8 mu         0.8      1.29     0.657      9.04e- 6     10.3 
 9 mu         0.9      1.44     0.111      4.97e-10     14.1 
10 mu_1       0.1      0.885    0.000228   0            26.5 
11 mu_1       0.2      1.31     0.0238     0            23.5 
12 mu_1       0.3      1.30     0.192      0            12.2 
13 mu_1       0.4      1.20     0.581      0             6.86
14 mu_1       0.5      1.13     0.942      0             5.43
15 mu_1       0.6      1.10     1.01       0             4.16
16 mu_1       0.7      1.15     0.863      0             8.00
17 mu_1       0.8      1.33     0.526      0            10.3 
18 mu_1       0.9      1.44     0.0782     0            14.6 
19 mu_0       0.1      0.674    0.0000183  0            31.4 
20 mu_0       0.2      1.15     0.00387    0            24.8 
21 mu_0       0.3      1.34     0.0367     0            19.1 
22 mu_0       0.4      1.29     0.200      0             9.71
23 mu_0       0.5      1.21     0.652      0             6.65
24 mu_0       0.6      1.13     0.864      0             5.08
25 mu_0       0.7      1.07     1.02       0             4.66
26 mu_0       0.8      1.13     0.845      0            10.3 
27 mu_0       0.9      1.42     0.287      0            10.6 
[1] "Total run time was 98.41 seconds"
