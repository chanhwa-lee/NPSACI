
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1286"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  5  4  5  6  5  8 10  6  3  8  5  6  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02973 0.33180 0.60874 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
755 531 
[1] "treatment indicator table: "

  0   1 
494 792 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 151.208 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.452 0.114 
 2 mu         0.1   0.2 0.524 0.111 
 3 mu         0.1   0.3 0.560 0.115 
 4 mu         0.1   0.4 0.611 0.120 
 5 mu         0.1   0.5 0.615 0.126 
 6 mu         0.2   0.1 0.428 0.0644
 7 mu         0.2   0.2 0.533 0.0638
 8 mu         0.2   0.3 0.577 0.0660
 9 mu         0.2   0.4 0.634 0.0634
10 mu         0.2   0.5 0.639 0.0640
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.911        0.200 0.0000332     16.0 
 2 mu         0.2      0.996        0.713 0.00572        5.51
 3 mu         0.3      0.971        0.906 0.0715         2.99
 4 mu         0.4      0.970        0.878 0.243          2.23
 5 mu         0.5      0.992        0.991 0.322          1.60
 6 mu         0.6      1.02         0.985 0.629          2.06
 7 mu         0.7      1.04         1.02  0.530          2.31
 8 mu         0.8      1.05         1.01  0.200          2.23
 9 mu         0.9      1.08         0.941 0.00984        4.04
10 mu_1       0.1      1.08         0.522 0.000158       8.52
11 mu_1       0.2      1.01         0.852 0.0139         4.53
12 mu_1       0.3      0.966        0.887 0.121          2.74
13 mu_1       0.4      0.974        0.918 0.216          2.04
14 mu_1       0.5      1.00         0.983 0.391          1.63
15 mu_1       0.6      1.03         0.973 0.646          2.15
16 mu_1       0.7      1.05         1.03  0.462          2.32
17 mu_1       0.8      1.05         1.02  0.164          2.41
18 mu_1       0.9      1.08         0.947 0.00744        4.27
19 mu_0       0.1      0.892        0.161 0.0000193     16.9 
20 mu_0       0.2      0.991        0.623 0.00368        5.75
21 mu_0       0.3      0.973        0.919 0.0461         3.11
22 mu_0       0.4      0.968        0.879 0.189          2.36
23 mu_0       0.5      0.983        0.951 0.253          1.80
24 mu_0       0.6      1.00         0.977 0.433          1.93
25 mu_0       0.7      1.02         0.949 0.558          2.27
26 mu_0       0.8      1.02         1.01  0.314          2.39
27 mu_0       0.9      1.02         0.908 0.0314         3.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.657    0.000130   4.11e-15     20.6 
 2 mu         0.2      0.891    0.00998    2.69e-10     17.0 
 3 mu         0.3      1.01     0.104      1.77e- 7      9.05
 4 mu         0.4      1.15     0.340      1.76e- 5      9.84
 5 mu         0.5      1.18     0.828      6.27e- 4      9.84
 6 mu         0.6      1.12     0.916      1.16e- 2      6.42
 7 mu         0.7      1.08     1.06       8.15e- 4      2.63
 8 mu         0.8      1.06     0.576      1.08e- 5      3.91
 9 mu         0.9      0.963    0.0706     5.91e- 9      8.23
10 mu_1       0.1      1.02     0.000835   4.11e-14     23.9 
11 mu_1       0.2      0.977    0.0295     1.35e- 9     13.1 
12 mu_1       0.3      1.07     0.224      5.89e- 7      8.73
13 mu_1       0.4      1.19     0.550      4.41e- 5     10.9 
14 mu_1       0.5      1.17     0.884      1.25e- 3      8.95
15 mu_1       0.6      1.11     1.02       2.30e- 3      4.86
16 mu_1       0.7      1.09     1.06       9.70e- 5      2.68
17 mu_1       0.8      1.07     0.444      1.12e- 6      4.51
18 mu_1       0.9      0.963    0.0478     5.47e-10      9.14
19 mu_0       0.1      0.616    0.0000376  0            21.0 
20 mu_0       0.2      0.869    0.00418    0            18.0 
21 mu_0       0.3      0.986    0.0364     0            10.8 
22 mu_0       0.4      1.12     0.190      0             9.84
23 mu_0       0.5      1.19     0.691      0            10.7 
24 mu_0       0.6      1.14     0.882      0             8.75
25 mu_0       0.7      1.08     0.996      0             4.49
26 mu_0       0.8      1.05     1.03       0             3.30
27 mu_0       0.9      0.959    0.160      0             6.35
[1] "Total run time was 155.746 seconds"
