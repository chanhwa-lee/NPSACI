
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8  4  3  6  5  6 14  6 10  9  7  5  5  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02522 0.32002 0.59239 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
731 510 
[1] "treatment indicator table: "

  0   1 
493 748 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.113 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 1.04  0.466
 2 mu         0.1   0.2 1.16  0.522
 3 mu         0.1   0.3 1.18  0.533
 4 mu         0.1   0.4 1.22  0.553
 5 mu         0.1   0.5 1.29  0.587
 6 mu         0.2   0.1 0.610 0.152
 7 mu         0.2   0.2 0.695 0.158
 8 mu         0.2   0.3 0.727 0.159
 9 mu         0.2   0.4 0.776 0.162
10 mu         0.2   0.5 0.825 0.174
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.68         0.302 0.000000321     76.4 
 2 mu         0.2      1.27         0.700 0.000310        20.0 
 3 mu         0.3      1.12         0.936 0.0116          12.5 
 4 mu         0.4      1.03         0.973 0.107            4.13
 5 mu         0.5      0.993        0.983 0.422            1.43
 6 mu         0.6      0.981        0.986 0.604            1.34
 7 mu         0.7      0.993        1.00  0.388            1.71
 8 mu         0.8      1.02         0.985 0.101            2.26
 9 mu         0.9      1.12         0.872 0.00629          8.18
10 mu_1       0.1      1.13         0.583 0.00000197      19.2 
11 mu_1       0.2      1.16         0.844 0.000959        19.5 
12 mu_1       0.3      1.07         0.979 0.0241           8.47
13 mu_1       0.4      1.01         0.993 0.169            2.27
14 mu_1       0.5      0.983        0.992 0.544            1.36
15 mu_1       0.6      0.981        1.00  0.574            1.38
16 mu_1       0.7      0.998        1.01  0.292            1.80
17 mu_1       0.8      1.03         0.992 0.0708           2.48
18 mu_1       0.9      1.14         0.816 0.00402          8.90
19 mu_0       0.1      1.74         0.253 0.000000138     84.8 
20 mu_0       0.2      1.30         0.649 0.000148        20.1 
21 mu_0       0.3      1.14         0.890 0.00623         14.2 
22 mu_0       0.4      1.05         0.982 0.0654           5.36
23 mu_0       0.5      1.00         0.990 0.300            1.68
24 mu_0       0.6      0.982        0.977 0.648            1.38
25 mu_0       0.7      0.981        0.990 0.504            1.51
26 mu_0       0.8      0.995        1.00  0.224            2.07
27 mu_0       0.9      0.992        0.952 0.0267           3.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.90     0.000104   6.23e-15    218.  
 2 mu         0.2      2.28     0.00963    4.09e-10    119.  
 3 mu         0.3      1.49     0.129      2.68e- 7     41.2 
 4 mu         0.4      1.18     0.554      2.68e- 5     10.1 
 5 mu         0.5      1.05     0.959      9.51e- 4      3.81
 6 mu         0.6      1.00     0.981      1.06e- 2      2.38
 7 mu         0.7      1.12     0.970      1.26e- 4      6.12
 8 mu         0.8      1.49     0.391      1.91e- 7     26.5 
 9 mu         0.9      2.28     0.0343     2.07e-12     68.9 
10 mu_1       0.1      3.02     0.000916   6.23e-14    182.  
11 mu_1       0.2      1.69     0.0359     2.04e- 9     49.7 
12 mu_1       0.3      1.24     0.246      8.95e- 7     12.2 
13 mu_1       0.4      1.10     0.726      6.69e- 5      6.68
14 mu_1       0.5      1.01     0.974      1.90e- 3      2.81
15 mu_1       0.6      1.02     1.02       2.64e- 3      2.34
16 mu_1       0.7      1.18     0.938      2.70e- 5      8.17
17 mu_1       0.8      1.59     0.294      3.58e- 8     30.9 
18 mu_1       0.9      2.35     0.0199     3.45e-13     71.4 
19 mu_0       0.1      2.89     0.0000525  0           222.  
20 mu_0       0.2      2.42     0.00408    0           137.  
21 mu_0       0.3      1.60     0.0724     0            54.0 
22 mu_0       0.4      1.24     0.308      0            15.4 
23 mu_0       0.5      1.08     0.852      0             4.90
24 mu_0       0.6      0.978    1.07       0             2.45
25 mu_0       0.7      0.971    0.932      0             2.81
26 mu_0       0.8      1.13     0.631      0             8.83
27 mu_0       0.9      1.67     0.0716     0            45.9 
[1] "Total run time was 65.708 seconds"
