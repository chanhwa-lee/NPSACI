
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1261"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 10  6  4  5 10  6  7  7  5  3  2  7  9  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06565 0.42331 0.67929 1.00000 5.49940 
[1] "event indicator table: "

  0   1 
733 528 
[1] "treatment indicator table: "

  0   1 
441 820 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 679
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 73.022 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 1.13  0.884
 2 mu         0.1   0.2 1.25  0.970
 3 mu         0.1   0.3 1.30  1.05 
 4 mu         0.1   0.4 1.30  1.07 
 5 mu         0.1   0.5 1.35  1.08 
 6 mu         0.2   0.1 0.478 0.248
 7 mu         0.2   0.2 0.562 0.281
 8 mu         0.2   0.3 0.562 0.297
 9 mu         0.2   0.4 0.558 0.301
10 mu         0.2   0.5 0.607 0.319
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.97       0.0123  0.0000000388    159.  
 2 mu         0.2      0.979      0.153   0.0000780        43.6 
 3 mu         0.3      0.876      0.528   0.00454          10.1 
 4 mu         0.4      0.924      0.800   0.0559            3.95
 5 mu         0.5      0.958      0.953   0.239             2.48
 6 mu         0.6      0.990      0.988   0.449             2.00
 7 mu         0.7      1.01       1.01    0.489             1.79
 8 mu         0.8      1.00       0.960   0.197             2.86
 9 mu         0.9      0.954      0.708   0.0166            4.49
10 mu_1       0.1      0.371      0.0503  0.000000247       4.44
11 mu_1       0.2      0.646      0.321   0.000250          3.32
12 mu_1       0.3      0.854      0.699   0.00981           4.76
13 mu_1       0.4      0.931      0.879   0.0872            3.41
14 mu_1       0.5      0.964      0.978   0.316             2.23
15 mu_1       0.6      0.998      0.981   0.548             1.87
16 mu_1       0.7      1.02       1.01    0.445             2.07
17 mu_1       0.8      1.00       0.967   0.159             3.12
18 mu_1       0.9      0.945      0.670   0.0121            4.90
19 mu_0       0.1      2.15       0.00692 0.0000000157    177.  
20 mu_0       0.2      1.06       0.107   0.0000349        54.5 
21 mu_0       0.3      0.885      0.421   0.00228          14.4 
22 mu_0       0.4      0.920      0.723   0.0330            4.30
23 mu_0       0.5      0.951      0.941   0.143             2.72
24 mu_0       0.6      0.978      0.967   0.299             2.18
25 mu_0       0.7      1.00       1.01    0.413             1.88
26 mu_0       0.8      1.02       1.01    0.353             1.93
27 mu_0       0.9      1.03       0.961   0.0566            3.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      32.7    0.0000287   6.93e-18   2541.  
 2 mu         0.2      23.9    0.00229     7.27e-12   1220.  
 3 mu         0.3      12.3    0.0288      2.42e- 8    498.  
 4 mu         0.4       5.76   0.194       7.62e- 6    212.  
 5 mu         0.5       2.85   0.703       6.61e- 4     71.9 
 6 mu         0.6       1.80   0.880       2.53e- 2     31.9 
 7 mu         0.7       1.33   1.07        3.21e- 4     17.4 
 8 mu         0.8       1.27   0.789       2.84e- 7      9.42
 9 mu         0.9       2.16   0.0884      1.37e-12     84.3 
10 mu_1       0.1      37.6    0.000186    6.93e-17   2541.  
11 mu_1       0.2      17.6    0.0106      3.63e-11    657.  
12 mu_1       0.3       7.88   0.0686      8.06e- 8    391.  
13 mu_1       0.4       3.49   0.352       1.91e- 5    125.  
14 mu_1       0.5       1.98   0.826       1.32e- 3     29.6 
15 mu_1       0.6       1.51   0.923       6.98e- 3     30.8 
16 mu_1       0.7       1.25   1.09        4.59e- 5     14.4 
17 mu_1       0.8       1.31   0.666       3.55e- 8     10.5 
18 mu_1       0.9       2.28   0.0619      1.52e-13     93.6 
19 mu_0       0.1      32.2    0.00000356  0          2541.  
20 mu_0       0.2      25.4    0.000758    0          1372.  
21 mu_0       0.3      14.2    0.0131      0           544.  
22 mu_0       0.4       7.27   0.0942      0           270.  
23 mu_0       0.5       3.72   0.406       0           123.  
24 mu_0       0.6       2.23   0.907       0            48.5 
25 mu_0       0.7       1.49   0.983       0            24.4 
26 mu_0       0.8       1.09   0.957       0             6.21
27 mu_0       0.9       1.11   0.221       0            17.2 
[1] "Total run time was 76.473 seconds"
