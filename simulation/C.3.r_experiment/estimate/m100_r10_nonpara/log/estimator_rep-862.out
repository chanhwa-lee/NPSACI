
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1280"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  6  8  7  6  6  8  6  4  7 10  4  8  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01791 0.30418 0.57309 0.98630 5.71917 
[1] "event indicator table: "

  0   1 
765 515 
[1] "treatment indicator table: "

  0   1 
499 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 73.432 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.502 0.100 
 2 mu         0.1   0.2 0.621 0.133 
 3 mu         0.1   0.3 0.695 0.143 
 4 mu         0.1   0.4 0.716 0.148 
 5 mu         0.1   0.5 0.791 0.161 
 6 mu         0.2   0.1 0.447 0.0678
 7 mu         0.2   0.2 0.577 0.112 
 8 mu         0.2   0.3 0.653 0.107 
 9 mu         0.2   0.4 0.675 0.105 
10 mu         0.2   0.5 0.738 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.17         0.136 0.00000133      14.2 
 2 mu         0.2      1.17         0.639 0.000840         7.96
 3 mu         0.3      1.10         0.902 0.0252           5.35
 4 mu         0.4      1.02         1.02  0.197            3.23
 5 mu         0.5      0.993        0.992 0.334            2.34
 6 mu         0.6      1.01         1.02  0.396            1.82
 7 mu         0.7      1.02         1.00  0.581            1.92
 8 mu         0.8      1.01         0.964 0.337            2.48
 9 mu         0.9      1.01         0.935 0.0492           3.98
10 mu_1       0.1      1.09         0.352 0.00000771      11.9 
11 mu_1       0.2      1.10         0.818 0.00249          8.22
12 mu_1       0.3      1.05         0.969 0.0507           3.77
13 mu_1       0.4      0.999        0.978 0.277            3.01
14 mu_1       0.5      0.995        1.00  0.342            1.96
15 mu_1       0.6      1.01         1.00  0.436            1.95
16 mu_1       0.7      1.02         1.01  0.561            1.89
17 mu_1       0.8      1.01         0.965 0.282            2.73
18 mu_1       0.9      1.02         0.877 0.0383           4.25
19 mu_0       0.1      1.17         0.108 0.000000618     14.5 
20 mu_0       0.2      1.19         0.601 0.000427         9.05
21 mu_0       0.3      1.12         0.900 0.0143           6.02
22 mu_0       0.4      1.03         0.981 0.128            3.38
23 mu_0       0.5      0.991        1.00  0.308            2.73
24 mu_0       0.6      1.00         1.03  0.337            1.71
25 mu_0       0.7      1.02         0.992 0.560            2.09
26 mu_0       0.8      1.02         0.989 0.350            1.89
27 mu_0       0.9      0.966        0.926 0.0545           2.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.99     0.0000677  8.05e-15     97.7 
 2 mu         0.2      2.35     0.00598    9.37e-10     78.9 
 3 mu         0.3      1.56     0.0973     8.08e- 7     46.7 
 4 mu         0.4      1.20     0.449      9.22e- 5     17.8 
 5 mu         0.5      1.14     0.937      2.63e- 3      9.36
 6 mu         0.6      1.12     0.967      1.19e- 4      5.10
 7 mu         0.7      1.07     1.04       5.88e- 7      3.33
 8 mu         0.8      1.16     0.697      3.03e-10      4.72
 9 mu         0.9      1.39     0.0558     6.51e-16     14.9 
10 mu_1       0.1      3.34     0.000481   7.60e-14    110.  
11 mu_1       0.2      1.89     0.0205     4.43e- 9     65.7 
12 mu_1       0.3      1.25     0.187      2.54e- 6     25.9 
13 mu_1       0.4      1.10     0.697      2.18e- 4     10.8 
14 mu_1       0.5      1.13     0.945      6.90e- 4      8.32
15 mu_1       0.6      1.13     0.927      9.94e- 6      4.48
16 mu_1       0.7      1.09     1.10       4.20e- 8      3.81
17 mu_1       0.8      1.20     0.563      1.90e-11      5.45
18 mu_1       0.9      1.41     0.0302     3.62e-17     15.6 
19 mu_0       0.1      2.95     0.0000157  0           103.  
20 mu_0       0.2      2.46     0.00252    0            82.2 
21 mu_0       0.3      1.70     0.0478     0            55.6 
22 mu_0       0.4      1.26     0.277      0            24.7 
23 mu_0       0.5      1.14     0.775      0            10.4 
24 mu_0       0.6      1.11     1.02       0             6.04
25 mu_0       0.7      1.02     0.843      0             3.54
26 mu_0       0.8      0.970    0.802      0             4.09
27 mu_0       0.9      1.26     0.103      0             8.28
[1] "Total run time was 78.104 seconds"
