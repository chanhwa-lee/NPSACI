
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1313"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  3  4  2  5  8  6  7  7  4  7  3  7 13  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02438 0.32777 0.59835 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
791 522 
[1] "treatment indicator table: "

  0   1 
491 822 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 85.859 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.244 0.0911
 2 mu         0.1   0.2 0.242 0.102 
 3 mu         0.1   0.3 0.277 0.0873
 4 mu         0.1   0.4 0.307 0.121 
 5 mu         0.1   0.5 0.396 0.114 
 6 mu         0.2   0.1 0.256 0.100 
 7 mu         0.2   0.2 0.286 0.125 
 8 mu         0.2   0.3 0.352 0.100 
 9 mu         0.2   0.4 0.385 0.125 
10 mu         0.2   0.5 0.448 0.121 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.633       0.102  0.0000000308     13.6 
 2 mu         0.2      0.933       0.586  0.0000566        15.0 
 3 mu         0.3      1.18        0.844  0.00306          19.3 
 4 mu         0.4      1.18        0.989  0.0370           14.7 
 5 mu         0.5      1.06        0.997  0.190             5.55
 6 mu         0.6      0.989       1.00   0.541             2.08
 7 mu         0.7      0.966       0.976  0.243             1.94
 8 mu         0.8      0.965       0.908  0.0354            2.62
 9 mu         0.9      0.900       0.836  0.000633          2.80
10 mu_1       0.1      0.767       0.288  0.000000194      20.9 
11 mu_1       0.2      1.07        0.744  0.000180         15.2 
12 mu_1       0.3      1.23        0.936  0.00653          20.3 
13 mu_1       0.4      1.16        1.03   0.0604           11.7 
14 mu_1       0.5      1.04        0.989  0.255             3.70
15 mu_1       0.6      0.981       0.979  0.500             1.79
16 mu_1       0.7      0.962       0.959  0.176             2.15
17 mu_1       0.8      0.958       0.900  0.0230            2.72
18 mu_1       0.9      0.883       0.813  0.000371          2.72
19 mu_0       0.1      0.618       0.0767 0.0000000126     12.7 
20 mu_0       0.2      0.898       0.465  0.0000258        15.8 
21 mu_0       0.3      1.15        0.802  0.00157          18.9 
22 mu_0       0.4      1.19        0.959  0.0214           16.7 
23 mu_0       0.5      1.09        1.01   0.124             7.39
24 mu_0       0.6      1.00        1.01   0.397             2.53
25 mu_0       0.7      0.977       0.970  0.398             1.62
26 mu_0       0.8      0.991       0.987  0.0850            2.44
27 mu_0       0.9      1.05        0.990  0.00299           3.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.43    0.000118   6.84e-17    279.  
 2 mu         0.2       9.98    0.00551    1.79e-11    543.  
 3 mu         0.3       7.47    0.0672     2.65e- 8    369.  
 4 mu         0.4       4.29    0.341      4.70e- 6    138.  
 5 mu         0.5       2.14    0.780      2.61e- 4     32.8 
 6 mu         0.6       1.24    1.06       6.95e- 3     10.1 
 7 mu         0.7       1.28    1.06       3.11e- 4      7.18
 8 mu         0.8       1.77    0.815      2.74e- 6     25.1 
 9 mu         0.9       2.42    0.175      7.53e-10     91.7 
10 mu_1       0.1      11.4     0.00102    6.84e-16    558.  
11 mu_1       0.2       9.34    0.0202     8.96e-11    543.  
12 mu_1       0.3       5.63    0.151      8.83e- 8    246.  
13 mu_1       0.4       3.09    0.517      1.17e- 5     68.9 
14 mu_1       0.5       1.64    0.856      5.22e- 4     25.5 
15 mu_1       0.6       1.15    1.11       1.08e- 3      6.55
16 mu_1       0.7       1.34    0.989      3.42e- 5      8.71
17 mu_1       0.8       1.85    0.691      2.64e- 7     31.4 
18 mu_1       0.9       2.49    0.135      6.43e-11    102.  
19 mu_0       0.1       6.99    0.0000262  0           250.  
20 mu_0       0.2      10.1     0.00195    0           543.  
21 mu_0       0.3       8.26    0.0311     0           422.  
22 mu_0       0.4       5.09    0.190      0           184.  
23 mu_0       0.5       2.64    0.504      0            48.3 
24 mu_0       0.6       1.37    0.881      0            15.4 
25 mu_0       0.7       1.14    0.955      0             4.50
26 mu_0       0.8       1.45    1.00       0            15.4 
27 mu_0       0.9       1.74    0.381      0            28.6 
[1] "Total run time was 90.733 seconds"
