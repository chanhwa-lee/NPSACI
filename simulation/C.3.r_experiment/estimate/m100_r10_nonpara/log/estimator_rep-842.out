
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1213"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  7  6  8  6  2 13  2  7  7  4  8  5  9  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02137 0.29680 0.54706 0.95808 5.14402 
[1] "event indicator table: "

  0   1 
708 505 
[1] "treatment indicator table: "

  0   1 
445 768 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 75.821 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.422 0.174
 2 mu         0.1   0.2 0.533 0.209
 3 mu         0.1   0.3 0.537 0.218
 4 mu         0.1   0.4 0.622 0.246
 5 mu         0.1   0.5 0.624 0.257
 6 mu         0.2   0.1 0.429 0.118
 7 mu         0.2   0.2 0.546 0.158
 8 mu         0.2   0.3 0.567 0.159
 9 mu         0.2   0.4 0.666 0.184
10 mu         0.2   0.5 0.675 0.186
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.06        0.125  0.000000676     37.5 
 2 mu         0.2      1.14        0.514  0.000585        25.7 
 3 mu         0.3      1.02        0.825  0.0190           8.21
 4 mu         0.4      0.992       0.961  0.148            2.41
 5 mu         0.5      0.996       0.986  0.495            1.50
 6 mu         0.6      0.996       1.01   0.609            1.26
 7 mu         0.7      1.00        1.01   0.594            1.74
 8 mu         0.8      1.01        1.00   0.181            2.63
 9 mu         0.9      0.924       0.766  0.00851          3.09
10 mu_1       0.1      1.37        0.373  0.00000378      44.1 
11 mu_1       0.2      1.13        0.791  0.00166         15.2 
12 mu_1       0.3      1.01        0.950  0.0364           3.71
13 mu_1       0.4      0.996       0.986  0.217            1.85
14 mu_1       0.5      0.997       0.996  0.534            1.39
15 mu_1       0.6      0.996       1.00   0.644            1.27
16 mu_1       0.7      1.01        0.999  0.515            1.95
17 mu_1       0.8      1.00        0.985  0.144            2.70
18 mu_1       0.9      0.912       0.714  0.00628          3.31
19 mu_0       0.1      1.02        0.0924 0.000000332     36.7 
20 mu_0       0.2      1.14        0.416  0.000317        28.3 
21 mu_0       0.3      1.03        0.773  0.0115          10.1 
22 mu_0       0.4      0.990       0.907  0.101            2.93
23 mu_0       0.5      0.995       0.986  0.354            1.61
24 mu_0       0.6      0.995       0.989  0.551            1.40
25 mu_0       0.7      1.00        1.01   0.682            1.33
26 mu_0       0.8      1.03        1.02   0.332            2.33
27 mu_0       0.9      1.03        1.00   0.0285           3.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.74    0.0000689   6.58e-15     43.4 
 2 mu         0.2      1.91    0.00400     4.31e-10     33.2 
 3 mu         0.3      1.51    0.0859      2.83e- 7     27.9 
 4 mu         0.4      1.09    0.312       2.82e- 5     11.9 
 5 mu         0.5      0.904   0.721       1.00e- 3      2.71
 6 mu         0.6      0.897   0.857       1.21e- 2      2.38
 7 mu         0.7      1.07    1.15        1.92e- 4      2.78
 8 mu         0.8      1.50    0.735       4.37e- 7     13.7 
 9 mu         0.9      2.03    0.112       9.50e-12     44.3 
10 mu_1       0.1      1.61    0.000260    0            44.9 
11 mu_1       0.2      1.59    0.0111      0            36.8 
12 mu_1       0.3      1.17    0.0959      0            21.9 
13 mu_1       0.4      0.914   0.460       0             6.99
14 mu_1       0.5      0.850   0.806       0             2.53
15 mu_1       0.6      0.912   0.931       0             2.27
16 mu_1       0.7      1.13    1.13        0             3.58
17 mu_1       0.8      1.58    0.594       0            15.4 
18 mu_1       0.9      2.08    0.0775      0            49.3 
19 mu_0       0.1      1.76    0.00000666  0            48.2 
20 mu_0       0.2      1.99    0.00224     0            34.5 
21 mu_0       0.3      1.65    0.0282      0            30.5 
22 mu_0       0.4      1.21    0.171       0            15.1 
23 mu_0       0.5      0.959   0.497       0             4.15
24 mu_0       0.6      0.875   0.857       0             2.55
25 mu_0       0.7      0.922   0.930       0             2.08
26 mu_0       0.8      1.18    0.858       0             6.84
27 mu_0       0.9      1.63    0.154       0            28.5 
[1] "Total run time was 80.796 seconds"
