
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1219"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  2  9 10 10  2 11  7  5  6  6  3  8  7  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03641 0.34644 0.61821 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
720 499 
[1] "treatment indicator table: "

  0   1 
466 753 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 580
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 48.187 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1  1.18 0.502
 2 mu         0.1   0.2  1.36 0.599
 3 mu         0.1   0.3  1.42 0.650
 4 mu         0.1   0.4  1.51 0.687
 5 mu         0.1   0.5  1.56 0.723
 6 mu         0.2   0.1  1.22 0.584
 7 mu         0.2   0.2  1.43 0.704
 8 mu         0.2   0.3  1.53 0.781
 9 mu         0.2   0.4  1.63 0.816
10 mu         0.2   0.5  1.70 0.869
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      2.48        0.0937 0.0000000212     118.  
 2 mu         0.2      3.01        0.440  0.0000464        161.  
 3 mu         0.3      1.95        0.760  0.00295           73.4 
 4 mu         0.4      1.20        0.876  0.0409            17.4 
 5 mu         0.5      0.999       0.959  0.228              2.76
 6 mu         0.6      1.00        0.977  0.644              1.62
 7 mu         0.7      1.02        1.00   0.353              1.91
 8 mu         0.8      1.01        0.964  0.0515             2.64
 9 mu         0.9      1.08        0.732  0.000638           9.17
10 mu_1       0.1      3.51        0.324  0.000000136      196.  
11 mu_1       0.2      2.71        0.714  0.000150         134.  
12 mu_1       0.3      1.52        0.916  0.00646           40.8 
13 mu_1       0.4      1.05        0.948  0.0683             7.47
14 mu_1       0.5      0.986       0.963  0.309              1.53
15 mu_1       0.6      1.01        0.997  0.644              1.61
16 mu_1       0.7      1.02        0.986  0.286              1.94
17 mu_1       0.8      1.01        0.949  0.0373             2.81
18 mu_1       0.9      1.10        0.678  0.000417          10.1 
19 mu_0       0.1      2.36        0.0681 0.00000000849    109.  
20 mu_0       0.2      3.08        0.345  0.0000203        168.  
21 mu_0       0.3      2.13        0.674  0.00144           87.3 
22 mu_0       0.4      1.29        0.829  0.0227            24.1 
23 mu_0       0.5      1.01        0.940  0.147              4.08
24 mu_0       0.6      0.994       0.957  0.494              1.99
25 mu_0       0.7      1.01        0.997  0.508              1.84
26 mu_0       0.8      0.985       0.967  0.109              2.34
27 mu_0       0.9      0.924       0.824  0.00263            3.21
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       9.93    0.0000512  2.79e-12    923.  
 2 mu         0.2      13.7     0.00548    5.02e- 8   1262.  
 3 mu         0.3       7.23    0.0813     1.28e- 5    574.  
 4 mu         0.4       2.72    0.276      6.17e- 4    135.  
 5 mu         0.5       1.31    0.795      1.17e- 2     17.1 
 6 mu         0.6       1.19    1.07       9.28e- 2      6.87
 7 mu         0.7       1.47    1.05       4.17e- 3     16.1 
 8 mu         0.8       1.85    0.588      3.18e- 5     24.0 
 9 mu         0.9       2.25    0.0746     3.27e- 9     69.4 
10 mu_1       0.1      16.1     0.000196   0          1538.  
11 mu_1       0.2      11.8     0.0172     0          1051.  
12 mu_1       0.3       4.71    0.153      0           319.  
13 mu_1       0.4       1.84    0.443      0            56.2 
14 mu_1       0.5       1.18    0.829      0            11.1 
15 mu_1       0.6       1.25    1.12       0             8.76
16 mu_1       0.7       1.57    1.06       0            17.6 
17 mu_1       0.8       1.95    0.476      0            30.1 
18 mu_1       0.9       2.33    0.0535     0            77.1 
19 mu_0       0.1       9.24    0.0000149  0           854.  
20 mu_0       0.2      14.2     0.00209    0          1314.  
21 mu_0       0.3       8.31    0.0357     0           684.  
22 mu_0       0.4       3.31    0.170      0           187.  
23 mu_0       0.5       1.45    0.602      0            28.5 
24 mu_0       0.6       1.10    0.886      0             5.70
25 mu_0       0.7       1.23    1.09       0            12.7 
26 mu_0       0.8       1.46    0.891      0            21.3 
27 mu_0       0.9       1.48    0.219      0            20.0 
[1] "Total run time was 51.405 seconds"
