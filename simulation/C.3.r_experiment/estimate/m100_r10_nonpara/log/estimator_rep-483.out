
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1259"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  7  4  9  5  7  5  5  6  4  5  8 10  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03029 0.28312 0.58091 0.99415 5.00000 
[1] "event indicator table: "

  0   1 
758 501 
[1] "treatment indicator table: "

  0   1 
480 779 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 49.091 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.429 0.102 
 2 mu         0.1   0.2 0.523 0.125 
 3 mu         0.1   0.3 0.633 0.141 
 4 mu         0.1   0.4 0.651 0.148 
 5 mu         0.1   0.5 0.755 0.155 
 6 mu         0.2   0.1 0.370 0.0450
 7 mu         0.2   0.2 0.452 0.0515
 8 mu         0.2   0.3 0.553 0.0595
 9 mu         0.2   0.4 0.574 0.0654
10 mu         0.2   0.5 0.651 0.0623
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.19         0.281 0.0000582     19.9 
 2 mu         0.2      1.07         0.804 0.00977        4.54
 3 mu         0.3      1.08         1.01  0.116          2.95
 4 mu         0.4      1.05         1.06  0.265          2.21
 5 mu         0.5      1.00         1.01  0.368          1.77
 6 mu         0.6      0.966        0.980 0.345          1.56
 7 mu         0.7      0.966        0.979 0.455          1.55
 8 mu         0.8      0.999        1.00  0.0700         1.83
 9 mu         0.9      1.03         0.980 0.000968       3.15
10 mu_1       0.1      1.06         0.625 0.000276       9.97
11 mu_1       0.2      1.09         0.963 0.0236         3.64
12 mu_1       0.3      1.09         1.09  0.183          2.75
13 mu_1       0.4      1.03         1.02  0.316          1.96
14 mu_1       0.5      0.983        0.992 0.342          1.78
15 mu_1       0.6      0.961        0.961 0.382          1.50
16 mu_1       0.7      0.972        0.970 0.365          1.64
17 mu_1       0.8      1.01         0.982 0.0503         1.88
18 mu_1       0.9      1.04         0.964 0.000622       3.34
19 mu_0       0.1      1.20         0.232 0.0000339     21.0 
20 mu_0       0.2      1.06         0.738 0.00633        5.05
21 mu_0       0.3      1.08         0.977 0.0830         3.03
22 mu_0       0.4      1.06         1.08  0.230          2.37
23 mu_0       0.5      1.02         1.03  0.321          1.79
24 mu_0       0.6      0.973        0.994 0.289          1.81
25 mu_0       0.7      0.951        0.963 0.451          1.45
26 mu_0       0.8      0.967        0.949 0.149          1.82
27 mu_0       0.9      0.993        0.986 0.00408        2.20
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04     0.000101   8.73e-17     41.1 
 2 mu         0.2      1.23     0.00677    2.29e-11     14.6 
 3 mu         0.3      1.15     0.109      3.38e- 8      8.77
 4 mu         0.4      1.06     0.453      6.00e- 6      4.43
 5 mu         0.5      1.00     1.00       3.33e- 4      3.57
 6 mu         0.6      1.01     0.913      1.29e- 3      2.58
 7 mu         0.7      1.07     0.933      2.00e- 5      2.70
 8 mu         0.8      1.19     0.834      5.23e- 8      4.87
 9 mu         0.9      1.49     0.119      1.80e-12     13.6 
10 mu_1       0.1      1.41     0.000784   8.73e-16     25.7 
11 mu_1       0.2      1.28     0.0260     1.14e-10     13.1 
12 mu_1       0.3      1.12     0.231      1.13e- 7      6.55
13 mu_1       0.4      1.02     0.678      1.50e- 5      4.22
14 mu_1       0.5      0.980    0.812      6.66e- 4      3.18
15 mu_1       0.6      1.00     0.973      1.34e- 4      2.69
16 mu_1       0.7      1.08     0.991      1.79e- 6      2.88
17 mu_1       0.8      1.22     0.655      4.09e- 9      5.65
18 mu_1       0.9      1.53     0.0821     1.25e-13     15.1 
19 mu_0       0.1      0.996    0.0000349  0            42.8 
20 mu_0       0.2      1.21     0.00303    0            16.5 
21 mu_0       0.3      1.17     0.0495     0            10.2 
22 mu_0       0.4      1.08     0.287      0             5.31
23 mu_0       0.5      1.03     0.727      0             4.03
24 mu_0       0.6      1.01     0.987      0             3.03
25 mu_0       0.7      1.04     0.960      0             2.68
26 mu_0       0.8      1.07     0.816      0             4.00
27 mu_0       0.9      1.12     0.154      0             8.04
[1] "Total run time was 52.462 seconds"
