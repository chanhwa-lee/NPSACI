
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1297"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  5  4  6  7  4  8  4  4 10  3  8  3  6 14 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03666 0.37997 0.61901 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
770 527 
[1] "treatment indicator table: "

  0   1 
484 813 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.547 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.389 0.109 
 2 mu         0.1   0.2 0.492 0.131 
 3 mu         0.1   0.3 0.488 0.122 
 4 mu         0.1   0.4 0.497 0.123 
 5 mu         0.1   0.5 0.568 0.143 
 6 mu         0.2   0.1 0.318 0.0738
 7 mu         0.2   0.2 0.440 0.0888
 8 mu         0.2   0.3 0.460 0.0816
 9 mu         0.2   0.4 0.477 0.0816
10 mu         0.2   0.5 0.540 0.0926
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.822       0.0886 0.0000000926     13.6 
 2 mu         0.2      0.882       0.472  0.000162          6.24
 3 mu         0.3      0.875       0.782  0.00818           3.28
 4 mu         0.4      0.896       0.894  0.0707            2.11
 5 mu         0.5      0.934       0.921  0.289             2.00
 6 mu         0.6      0.968       0.970  0.508             1.55
 7 mu         0.7      1.00        1.03   0.479             1.56
 8 mu         0.8      1.04        1.01   0.147             2.20
 9 mu         0.9      1.16        0.822  0.00996           4.11
10 mu_1       0.1      1.02        0.280  0.000000559       8.34
11 mu_1       0.2      0.918       0.705  0.000493          5.10
12 mu_1       0.3      0.902       0.858  0.0168            3.23
13 mu_1       0.4      0.922       0.905  0.122             2.02
14 mu_1       0.5      0.951       0.961  0.406             1.94
15 mu_1       0.6      0.978       0.990  0.560             1.41
16 mu_1       0.7      1.01        1.02   0.400             1.67
17 mu_1       0.8      1.04        1.01   0.121             2.23
18 mu_1       0.9      1.18        0.802  0.00767           4.47
19 mu_0       0.1      0.801       0.0618 0.0000000408     14.3 
20 mu_0       0.2      0.873       0.384  0.0000793         6.52
21 mu_0       0.3      0.864       0.697  0.00400           3.67
22 mu_0       0.4      0.878       0.845  0.0363            2.45
23 mu_0       0.5      0.916       0.894  0.171             2.06
24 mu_0       0.6      0.953       0.947  0.409             1.75
25 mu_0       0.7      0.988       1.01   0.544             1.47
26 mu_0       0.8      1.02        1.06   0.252             2.08
27 mu_0       0.9      1.02        0.978  0.0306            2.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.265    0.000106   1.81e-17     11.0 
 2 mu         0.2      0.736    0.00607    9.51e-12     19.1 
 3 mu         0.3      1.19     0.0860     2.11e- 8     25.4 
 4 mu         0.4      1.34     0.396      4.98e- 6     17.2 
 5 mu         0.5      1.21     0.861      3.46e- 4      6.78
 6 mu         0.6      1.05     1.11       1.10e- 2      2.61
 7 mu         0.7      1.06     0.998      9.66e- 3      2.48
 8 mu         0.8      1.27     0.570      7.37e- 5      6.32
 9 mu         0.9      1.63     0.0844     9.12e- 9     24.5 
10 mu_1       0.1      0.597    0.000688   1.81e-16     18.3 
11 mu_1       0.2      1.05     0.0237     4.75e-11     27.2 
12 mu_1       0.3      1.32     0.180      7.03e- 8     24.2 
13 mu_1       0.4      1.32     0.639      1.25e- 5     12.3 
14 mu_1       0.5      1.16     1.00       6.92e- 4      5.30
15 mu_1       0.6      1.04     1.04       1.84e- 2      2.28
16 mu_1       0.7      1.10     0.954      4.14e- 3      2.62
17 mu_1       0.8      1.32     0.429      2.76e- 5      7.04
18 mu_1       0.9      1.66     0.0628     3.04e- 9     27.2 
19 mu_0       0.1      0.228    0.0000338  0            10.1 
20 mu_0       0.2      0.658    0.00234    0            17.0 
21 mu_0       0.3      1.13     0.0424     0            25.9 
22 mu_0       0.4      1.35     0.251      0            20.5 
23 mu_0       0.5      1.27     0.729      0             9.68
24 mu_0       0.6      1.08     0.979      0             3.59
25 mu_0       0.7      0.986    1.03       0             2.18
26 mu_0       0.8      1.10     0.688      0             3.72
27 mu_0       0.9      1.37     0.123      0            10.9 
[1] "Total run time was 49.655 seconds"
