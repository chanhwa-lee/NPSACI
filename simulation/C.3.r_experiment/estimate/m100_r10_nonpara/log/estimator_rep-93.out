
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1244"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  4  8  8  6  3  5  6  2  3  4  8 11 12  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02205 0.31688 0.59762 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
776 468 
[1] "treatment indicator table: "

  0   1 
436 808 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 550
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 694
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 49.541 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.190 0.0599
 2 mu         0.1   0.2 0.310 0.0944
 3 mu         0.1   0.3 0.303 0.0975
 4 mu         0.1   0.4 0.287 0.107 
 5 mu         0.1   0.5 0.284 0.109 
 6 mu         0.2   0.1 0.193 0.0333
 7 mu         0.2   0.2 0.312 0.0634
 8 mu         0.2   0.3 0.314 0.0622
 9 mu         0.2   0.4 0.312 0.0653
10 mu         0.2   0.5 0.317 0.0666
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.449      0.0108  0.00000138      11.2 
 2 mu         0.2      0.550      0.119   0.000664         7.16
 3 mu         0.3      0.709      0.452   0.0166           3.88
 4 mu         0.4      0.870      0.760   0.116            3.11
 5 mu         0.5      0.973      0.975   0.330            2.09
 6 mu         0.6      1.01       1.01    0.586            1.43
 7 mu         0.7      1.01       0.985   0.506            1.64
 8 mu         0.8      0.950      0.944   0.155            2.25
 9 mu         0.9      0.837      0.800   0.00827          5.39
10 mu_1       0.1      0.588      0.0400  0.00000815      11.3 
11 mu_1       0.2      0.671      0.278   0.00198          4.78
12 mu_1       0.3      0.814      0.611   0.0333           3.98
13 mu_1       0.4      0.936      0.889   0.178            2.79
14 mu_1       0.5      1.00       1.01    0.444            1.83
15 mu_1       0.6      1.02       0.996   0.665            1.38
16 mu_1       0.7      1.00       0.953   0.436            1.72
17 mu_1       0.8      0.937      0.943   0.123            2.35
18 mu_1       0.9      0.828      0.789   0.00593          5.83
19 mu_0       0.1      0.433      0.00630 0.000000625     11.8 
20 mu_0       0.2      0.520      0.0855  0.000335         7.76
21 mu_0       0.3      0.664      0.336   0.00941          3.83
22 mu_0       0.4      0.826      0.678   0.0746           3.44
23 mu_0       0.5      0.946      0.918   0.216            2.42
24 mu_0       0.6      1.00       1.01    0.420            1.87
25 mu_0       0.7      1.02       0.996   0.616            1.51
26 mu_0       0.8      1.00       0.973   0.282            2.00
27 mu_0       0.9      0.913      0.946   0.0293           3.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.83   0.0000427   3.53e-15    420.  
 2 mu         0.2      11.8    0.00387     4.11e-10   1020.  
 3 mu         0.3       8.45   0.0587      3.55e- 7    610.  
 4 mu         0.4       3.78   0.321       4.04e- 5    164.  
 5 mu         0.5       1.79   0.901       1.50e- 3     21.6 
 6 mu         0.6       1.38   1.21        2.66e- 2      6.68
 7 mu         0.7       1.96   1.12        2.15e- 2     15.4 
 8 mu         0.8       4.67   0.623       6.08e- 5     91.6 
 9 mu         0.9      11.6    0.0812      1.49e- 9    339.  
10 mu_1       0.1       9.68   0.000339    3.33e-14    840.  
11 mu_1       0.2      12.3    0.0141      1.94e- 9   1020.  
12 mu_1       0.3       6.52   0.131       1.12e- 6    407.  
13 mu_1       0.4       2.73   0.577       9.55e- 5     81.8 
14 mu_1       0.5       1.48   1.09        2.83e- 3     11.9 
15 mu_1       0.6       1.35   1.12        4.18e- 2      9.10
16 mu_1       0.7       2.18   1.02        6.69e- 3     19.5 
17 mu_1       0.8       5.19   0.495       1.52e- 5    108.  
18 mu_1       0.9      12.1    0.0463      3.30e-10    356.  
19 mu_0       0.1       4.29   0.00000924  0           373.  
20 mu_0       0.2      11.6    0.00131     0          1020.  
21 mu_0       0.3       9.27   0.0261      0           697.  
22 mu_0       0.4       4.48   0.162       0           218.  
23 mu_0       0.5       2.11   0.580       0            34.6 
24 mu_0       0.6       1.42   1.04        0             5.29
25 mu_0       0.7       1.47   1.24        0             9.11
26 mu_0       0.8       2.59   0.956       0            32.1 
27 mu_0       0.9       6.88   0.235       0           188.  
[1] "Total run time was 52.675 seconds"
