
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1275"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  6  6  9  2  6  5  9 10  3  4  4  6  9  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02684 0.32441 0.60729 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
764 511 
[1] "treatment indicator table: "

  0   1 
471 804 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 101.509 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.443 0.167 
 2 mu         0.1   0.2 0.501 0.160 
 3 mu         0.1   0.3 0.498 0.155 
 4 mu         0.1   0.4 0.558 0.164 
 5 mu         0.1   0.5 0.562 0.164 
 6 mu         0.2   0.1 0.383 0.0968
 7 mu         0.2   0.2 0.441 0.0924
 8 mu         0.2   0.3 0.477 0.0919
 9 mu         0.2   0.4 0.555 0.0980
10 mu         0.2   0.5 0.562 0.0973
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.666       0.0424 0.000000507     21.7 
 2 mu         0.2      0.796       0.322  0.000435        11.0 
 3 mu         0.3      0.831       0.718  0.0102           4.11
 4 mu         0.4      0.858       0.858  0.0754           2.08
 5 mu         0.5      0.903       0.877  0.262            1.56
 6 mu         0.6      0.951       0.959  0.527            1.34
 7 mu         0.7      0.982       0.985  0.373            1.45
 8 mu         0.8      0.990       0.986  0.114            2.13
 9 mu         0.9      0.942       0.809  0.00804          5.28
10 mu_1       0.1      0.890       0.167  0.00000295      16.9 
11 mu_1       0.2      0.861       0.552  0.00128          4.88
12 mu_1       0.3      0.842       0.768  0.0237           2.49
13 mu_1       0.4      0.866       0.883  0.132            1.62
14 mu_1       0.5      0.917       0.931  0.361            1.53
15 mu_1       0.6      0.963       0.977  0.528            1.43
16 mu_1       0.7      0.988       0.987  0.302            1.51
17 mu_1       0.8      0.987       1.00   0.0844           2.36
18 mu_1       0.9      0.932       0.775  0.00545          5.48
19 mu_0       0.1      0.641       0.0285 0.000000235     22.2 
20 mu_0       0.2      0.779       0.264  0.000170        12.6 
21 mu_0       0.3      0.826       0.633  0.00443          5.06
22 mu_0       0.4      0.853       0.805  0.0379           2.55
23 mu_0       0.5      0.889       0.903  0.163            1.74
24 mu_0       0.6      0.932       0.935  0.382            1.51
25 mu_0       0.7      0.970       0.986  0.441            1.57
26 mu_0       0.8      1.00        1.01   0.230            1.67
27 mu_0       0.9      1.03        0.969  0.0314           3.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     113.     0.0000386   9.48e-15  10230.  
 2 mu         0.2      58.3    0.00451     1.96e- 9   2763.  
 3 mu         0.3      29.3    0.0567      2.22e- 6   1941.  
 4 mu         0.4      11.0    0.293       2.90e- 4    709.  
 5 mu         0.5       3.20   0.761       8.69e- 3    135.  
 6 mu         0.6       1.31   1.01        6.32e- 2     12.3 
 7 mu         0.7       1.16   1.05        5.55e- 4      9.68
 8 mu         0.8       1.71   0.842       6.43e- 7     54.9 
 9 mu         0.9       3.75   0.184       5.52e-12    254.  
10 mu_1       0.1      79.8    0.000226    8.53e-14   5684.  
11 mu_1       0.2      42.1    0.0148      8.84e- 9   2763.  
12 mu_1       0.3      19.9    0.116       6.67e- 6   1438.  
13 mu_1       0.4       6.57   0.485       6.51e- 4    394.  
14 mu_1       0.5       2.07   1.02        1.63e- 2     59.9 
15 mu_1       0.6       1.17   1.08        5.85e- 3      4.55
16 mu_1       0.7       1.21   1.08        4.40e- 5     13.8 
17 mu_1       0.8       1.87   0.702       4.47e- 8     68.7 
18 mu_1       0.9       4.01   0.135       3.41e-13    282.  
19 mu_0       0.1     116.     0.00000840  0         10736.  
20 mu_0       0.2      62.3    0.00147     0          3262.  
21 mu_0       0.3      33.3    0.0227      0          2157.  
22 mu_0       0.4      13.9    0.140       0           919.  
23 mu_0       0.5       4.34   0.467       0           210.  
24 mu_0       0.6       1.53   0.858       0            23.9 
25 mu_0       0.7       1.04   0.965       0             3.10
26 mu_0       0.8       1.09   1.01        0             4.30
27 mu_0       0.9       1.40   0.417       0            17.6 
[1] "Total run time was 107.327 seconds"
