
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1235"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  2  9  8  9  9  2 11  8  3  8  4  5  2  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04457 0.35241 0.64187 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
737 498 
[1] "treatment indicator table: "

  0   1 
476 759 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 78.444 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.257 0.0830
 2 mu         0.1   0.2 0.327 0.0804
 3 mu         0.1   0.3 0.346 0.0852
 4 mu         0.1   0.4 0.380 0.100 
 5 mu         0.1   0.5 0.442 0.113 
 6 mu         0.2   0.1 0.256 0.0548
 7 mu         0.2   0.2 0.354 0.0646
 8 mu         0.2   0.3 0.394 0.0768
 9 mu         0.2   0.4 0.449 0.0927
10 mu         0.2   0.5 0.485 0.0936
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.507       0.0391 0.00000120       8.30
 2 mu         0.2      0.740       0.328  0.000497         8.02
 3 mu         0.3      0.889       0.738  0.0113           6.84
 4 mu         0.4      0.968       0.951  0.0799           3.46
 5 mu         0.5      1.03        1.02   0.327            2.41
 6 mu         0.6      1.06        1.03   0.226            5.80
 7 mu         0.7      1.07        0.973  0.0478          13.8 
 8 mu         0.8      1.15        0.830  0.00365         30.3 
 9 mu         0.9      1.34        0.425  0.0000123       61.2 
10 mu_1       0.1      0.620       0.131  0.00000637       8.67
11 mu_1       0.2      0.853       0.578  0.00135          7.66
12 mu_1       0.3      0.951       0.922  0.0213           6.03
13 mu_1       0.4      1.01        0.965  0.120            2.47
14 mu_1       0.5      1.06        1.01   0.437            4.07
15 mu_1       0.6      1.08        1.01   0.157            9.25
16 mu_1       0.7      1.11        0.956  0.0303          19.5 
17 mu_1       0.8      1.21        0.810  0.00211         37.8 
18 mu_1       0.9      1.39        0.380  0.00000678      68.0 
19 mu_0       0.1      0.495       0.0260 0.000000623      9.13
20 mu_0       0.2      0.711       0.252  0.000284         8.13
21 mu_0       0.3      0.863       0.648  0.00704          7.19
22 mu_0       0.4      0.942       0.884  0.0529           4.13
23 mu_0       0.5      1.00        0.950  0.217            2.09
24 mu_0       0.6      1.03        1.02   0.329            2.55
25 mu_0       0.7      0.989       1.01   0.0887           2.23
26 mu_0       0.8      0.920       0.911  0.00981          6.53
27 mu_0       0.9      0.896       0.761  0.0000617       12.2 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.820     0.000328  4.56e-18      15.9
 2 mu         0.2      2.61      0.0206    4.78e-12      53.3
 3 mu         0.3      3.40      0.112     1.59e- 8      81.1
 4 mu         0.4      2.91      0.433     5.02e- 6      64.0
 5 mu         0.5      2.06      0.871     4.35e- 4      37.1
 6 mu         0.6      2.16      1.14      8.08e- 3      23.9
 7 mu         0.7      6.66      0.973     3.48e- 4     236. 
 8 mu         0.8     32.3       0.549     3.51e- 6    1987. 
 9 mu         0.9    122.        0.103     1.08e- 9    9311. 
10 mu_1       0.1      1.90      0.00239   4.56e-17      35.3
11 mu_1       0.2      3.50      0.0644    2.39e-11      81.9
12 mu_1       0.3      3.43      0.296     5.30e- 8      83.1
13 mu_1       0.4      2.56      0.615     1.25e- 5      55.5
14 mu_1       0.5      1.85      1.02      8.70e- 4      29.7
15 mu_1       0.6      2.45      1.12      1.92e- 3      32.8
16 mu_1       0.7      8.26      0.912     7.11e- 5     320. 
17 mu_1       0.8     37.4       0.432     6.26e- 7    2359. 
18 mu_1       0.9    128.        0.0721    1.72e-10    9828. 
19 mu_0       0.1      0.701     0.000132  0             14.6
20 mu_0       0.2      2.39      0.00629   0             47.5
21 mu_0       0.3      3.38      0.0380    0             80.2
22 mu_0       0.4      3.15      0.274     0             73.8
23 mu_0       0.5      2.28      0.612     0             44.5
24 mu_0       0.6      1.72      1.00      0             16.4
25 mu_0       0.7      2.94      0.993     0             51.3
26 mu_0       0.8     12.1       0.794     0            497. 
27 mu_0       0.9     69.0       0.232     0           4655. 
[1] "Total run time was 83.007 seconds"
