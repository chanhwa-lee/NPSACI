
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1207"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  6  3  9 10  4  6  8  5  9  8  6  3  6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04806 0.35301 0.63071 1.00000 4.72536 
[1] "event indicator table: "

  0   1 
721 486 
[1] "treatment indicator table: "

  0   1 
434 773 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 572
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.352 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.416 0.101 
 2 mu         0.1   0.2 0.449 0.0999
 3 mu         0.1   0.3 0.577 0.132 
 4 mu         0.1   0.4 0.599 0.128 
 5 mu         0.1   0.5 0.604 0.128 
 6 mu         0.2   0.1 0.338 0.0494
 7 mu         0.2   0.2 0.393 0.0546
 8 mu         0.2   0.3 0.462 0.0642
 9 mu         0.2   0.4 0.501 0.0703
10 mu         0.2   0.5 0.509 0.0721
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.926        0.145 0.00000657     11.2 
 2 mu         0.2      0.904        0.537 0.00210         5.46
 3 mu         0.3      0.926        0.785 0.0340          3.69
 4 mu         0.4      0.954        0.900 0.162           2.52
 5 mu         0.5      0.961        0.918 0.389           1.99
 6 mu         0.6      0.971        0.918 0.444           1.84
 7 mu         0.7      0.998        1.01  0.349           1.69
 8 mu         0.8      1.01         0.996 0.407           1.66
 9 mu         0.9      1.00         0.978 0.204           2.93
10 mu_1       0.1      0.988        0.453 0.0000328       6.82
11 mu_1       0.2      0.941        0.827 0.00527         4.78
12 mu_1       0.3      0.956        0.923 0.0581          3.11
13 mu_1       0.4      0.967        0.957 0.220           2.28
14 mu_1       0.5      0.966        0.913 0.377           1.84
15 mu_1       0.6      0.978        0.945 0.359           1.89
16 mu_1       0.7      1.00         1.01  0.350           1.72
17 mu_1       0.8      1.01         1.01  0.402           1.78
18 mu_1       0.9      1.00         0.967 0.175           3.02
19 mu_0       0.1      0.919        0.106 0.00000365     12.4 
20 mu_0       0.2      0.895        0.467 0.00131         5.63
21 mu_0       0.3      0.913        0.739 0.0237          3.99
22 mu_0       0.4      0.946        0.875 0.123           2.78
23 mu_0       0.5      0.957        0.900 0.346           2.14
24 mu_0       0.6      0.960        0.878 0.391           1.76
25 mu_0       0.7      0.986        0.979 0.290           1.92
26 mu_0       0.8      1.01         1.01  0.346           1.93
27 mu_0       0.9      1.01         0.970 0.145           2.09
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.726    0.000150   3.72e-17     57.4 
 2 mu         0.2      0.868    0.0149     1.74e-11     27.6 
 3 mu         0.3      1.15     0.112      3.37e- 8     10.2 
 4 mu         0.4      1.30     0.372      6.83e- 6      9.25
 5 mu         0.5      1.22     1.00       3.95e- 4      5.40
 6 mu         0.6      1.11     0.952      9.46e- 4      3.50
 7 mu         0.7      1.10     0.989      7.26e- 6      5.86
 8 mu         0.8      1.14     0.999      6.42e- 9      5.72
 9 mu         0.9      1.21     0.144      3.10e-14      6.32
10 mu_1       0.1      0.941    0.000915   3.54e-16     57.4 
11 mu_1       0.2      1.06     0.0436     8.25e-11     13.8 
12 mu_1       0.3      1.33     0.288      1.07e- 7     11.2 
13 mu_1       0.4      1.35     0.626      1.62e- 5      7.71
14 mu_1       0.5      1.21     1.01       7.50e- 4      5.11
15 mu_1       0.6      1.10     0.912      1.58e- 4      3.24
16 mu_1       0.7      1.11     0.956      1.04e- 6      6.28
17 mu_1       0.8      1.16     0.871      8.02e-10      5.36
18 mu_1       0.9      1.22     0.102      3.44e-15      6.58
19 mu_0       0.1      0.702    0.0000652  0            57.4 
20 mu_0       0.2      0.820    0.00530    0            31.0 
21 mu_0       0.3      1.07     0.0332     0            11.0 
22 mu_0       0.4      1.26     0.188      0            10.3 
23 mu_0       0.5      1.24     0.666      0             7.00
24 mu_0       0.6      1.13     0.958      0             4.37
25 mu_0       0.7      1.08     0.859      0             4.88
26 mu_0       0.8      1.09     0.942      0             7.15
27 mu_0       0.9      1.08     0.181      0             5.47
[1] "Total run time was 64.095 seconds"
