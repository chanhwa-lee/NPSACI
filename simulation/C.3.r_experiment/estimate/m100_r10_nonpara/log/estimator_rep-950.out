
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1220"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  3 12  7 10  2  7  7  4  6  8  6  8  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04109 0.35098 0.63022 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
722 498 
[1] "treatment indicator table: "

  0   1 
408 812 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 79.474 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.531 0.145
 2 mu         0.1   0.2 0.616 0.160
 3 mu         0.1   0.3 0.646 0.155
 4 mu         0.1   0.4 0.642 0.148
 5 mu         0.1   0.5 0.634 0.145
 6 mu         0.2   0.1 0.531 0.105
 7 mu         0.2   0.2 0.617 0.107
 8 mu         0.2   0.3 0.673 0.110
 9 mu         0.2   0.4 0.688 0.106
10 mu         0.2   0.5 0.690 0.105
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.793       0.104  0.0000000185       8.69
 2 mu         0.2      1.05        0.475  0.0000390          9.52
 3 mu         0.3      1.06        0.851  0.00241            4.84
 4 mu         0.4      1.01        1.02   0.0329             2.57
 5 mu         0.5      0.971       0.986  0.145              2.17
 6 mu         0.6      0.970       0.965  0.269              1.76
 7 mu         0.7      0.985       0.991  0.326              1.82
 8 mu         0.8      0.989       0.981  0.343              1.63
 9 mu         0.9      0.961       0.906  0.0380             2.78
10 mu_1       0.1      1.08        0.277  0.000000124       12.8 
11 mu_1       0.2      1.10        0.793  0.000131           7.55
12 mu_1       0.3      1.03        0.929  0.00542            3.34
13 mu_1       0.4      0.978       0.941  0.0560             2.36
14 mu_1       0.5      0.962       0.991  0.200              2.04
15 mu_1       0.6      0.973       0.993  0.309              1.78
16 mu_1       0.7      0.987       0.993  0.343              1.80
17 mu_1       0.8      0.987       0.977  0.344              1.67
18 mu_1       0.9      0.958       0.915  0.0302             3.00
19 mu_0       0.1      0.762       0.0766 0.00000000682      8.23
20 mu_0       0.2      1.03        0.369  0.0000160         10.0 
21 mu_0       0.3      1.07        0.790  0.00112            5.73
22 mu_0       0.4      1.03        1.01   0.0175             2.84
23 mu_0       0.5      0.980       0.979  0.0901             2.30
24 mu_0       0.6      0.967       0.953  0.209              1.99
25 mu_0       0.7      0.981       0.991  0.286              1.86
26 mu_0       0.8      1.00        0.991  0.337              1.99
27 mu_0       0.9      0.980       0.970  0.108              1.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.44   0.0000312   4.39e-17     80.4 
 2 mu         0.2       1.39   0.00386     1.15e-11     44.0 
 3 mu         0.3       1.29   0.0446      1.70e- 8     18.9 
 4 mu         0.4       1.19   0.228       3.02e- 6     15.2 
 5 mu         0.5       1.15   0.643       1.68e- 4      9.00
 6 mu         0.6       1.19   0.929       4.46e- 3      5.98
 7 mu         0.7       1.21   1.04        3.18e- 3      4.60
 8 mu         0.8       1.10   1.06        4.20e- 5      4.55
 9 mu         0.9       1.03   0.267       2.30e- 8      6.59
10 mu_1       0.1       1.70   0.000187    4.39e-16     67.0 
11 mu_1       0.2       1.25   0.0133      5.76e-11     21.4 
12 mu_1       0.3       1.17   0.107       5.67e- 8     18.9 
13 mu_1       0.4       1.12   0.407       7.54e- 6     11.4 
14 mu_1       0.5       1.15   0.825       3.35e- 4      9.00
15 mu_1       0.6       1.22   1.07        7.43e- 3      4.98
16 mu_1       0.7       1.21   1.11        3.78e- 4      4.74
17 mu_1       0.8       1.09   1.02        4.37e- 6      5.06
18 mu_1       0.9       1.03   0.215       2.13e- 9      7.32
19 mu_0       0.1       1.41   0.00000775  0            81.9 
20 mu_0       0.2       1.43   0.00115     0            50.4 
21 mu_0       0.3       1.35   0.0160      0            19.9 
22 mu_0       0.4       1.24   0.0912      0            17.8 
23 mu_0       0.5       1.14   0.370       0            11.6 
24 mu_0       0.6       1.15   0.733       0             7.48
25 mu_0       0.7       1.19   1.04        0             5.07
26 mu_0       0.8       1.16   0.991       0             4.77
27 mu_0       0.9       1.07   0.330       0             6.49
[1] "Total run time was 84.063 seconds"
