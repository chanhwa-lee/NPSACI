
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1258"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  5  8 10  4  1  7  6  8  6  9  6  6  8  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04369 0.40296 0.66620 1.00000 6.94359 
[1] "event indicator table: "

  0   1 
722 536 
[1] "treatment indicator table: "

  0   1 
423 835 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 80.418 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.279 0.119 
 2 mu         0.1   0.2 0.277 0.0935
 3 mu         0.1   0.3 0.287 0.0935
 4 mu         0.1   0.4 0.301 0.0962
 5 mu         0.1   0.5 0.323 0.101 
 6 mu         0.2   0.1 0.287 0.105 
 7 mu         0.2   0.2 0.289 0.0773
 8 mu         0.2   0.3 0.309 0.0739
 9 mu         0.2   0.4 0.330 0.0712
10 mu         0.2   0.5 0.352 0.0724
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.533      0.0108  0.0000000147      10.2 
 2 mu         0.2      0.602      0.138   0.0000325          6.06
 3 mu         0.3      0.744      0.450   0.00206            3.50
 4 mu         0.4      0.890      0.775   0.0282             2.41
 5 mu         0.5      0.981      0.949   0.155              2.36
 6 mu         0.6      1.02       1.01    0.418              1.83
 7 mu         0.7      1.03       1.01    0.464              1.52
 8 mu         0.8      1.02       0.976   0.299              2.40
 9 mu         0.9      0.955      0.878   0.0433             3.43
10 mu_1       0.1      0.523      0.0425  0.0000000943       7.76
11 mu_1       0.2      0.652      0.273   0.000105           3.35
12 mu_1       0.3      0.817      0.628   0.00450            2.82
13 mu_1       0.4      0.939      0.895   0.0469             2.56
14 mu_1       0.5      0.999      0.977   0.209              2.21
15 mu_1       0.6      1.03       1.00    0.492              1.79
16 mu_1       0.7      1.04       1.02    0.407              1.57
17 mu_1       0.8      1.02       0.993   0.277              2.52
18 mu_1       0.9      0.948      0.853   0.0332             3.64
19 mu_0       0.1      0.534      0.00693 0.00000000587     11.2 
20 mu_0       0.2      0.590      0.104   0.0000142          7.36
21 mu_0       0.3      0.713      0.350   0.00101            4.66
22 mu_0       0.4      0.858      0.711   0.0157             2.87
23 mu_0       0.5      0.962      0.904   0.0991             2.51
24 mu_0       0.6      1.01       0.978   0.307              1.88
25 mu_0       0.7      1.03       1.04    0.594              1.69
26 mu_0       0.8      1.03       1.00    0.348              1.95
27 mu_0       0.9      1.02       0.962   0.135              3.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.836   0.0000186   4.66e-18     77.9 
 2 mu         0.2      2.30    0.00441     4.88e-12    192.  
 3 mu         0.3      2.64    0.0675      1.62e- 8    170.  
 4 mu         0.4      2.35    0.343       5.12e- 6     86.5 
 5 mu         0.5      1.97    0.775       4.44e- 4     27.3 
 6 mu         0.6      1.57    1.14        1.70e- 2     15.2 
 7 mu         0.7      1.29    1.16        8.01e- 2      5.33
 8 mu         0.8      1.32    0.855       4.64e- 3     10.3 
 9 mu         0.9      2.08    0.201       1.63e- 5     56.6 
10 mu_1       0.1      2.00    0.000112    4.66e-17    180.  
11 mu_1       0.2      2.92    0.0140      2.44e-11    221.  
12 mu_1       0.3      2.59    0.131       5.41e- 8    131.  
13 mu_1       0.4      2.18    0.545       1.28e- 5     49.9 
14 mu_1       0.5      1.84    0.984       8.88e- 4     19.2 
15 mu_1       0.6      1.48    1.12        2.84e- 2     13.3 
16 mu_1       0.7      1.26    1.11        4.58e- 2      4.72
17 mu_1       0.8      1.34    0.775       2.31e- 3     12.1 
18 mu_1       0.9      2.16    0.151       4.18e- 6     62.9 
19 mu_0       0.1      0.707   0.00000806  0            66.6 
20 mu_0       0.2      2.14    0.00219     0           185.  
21 mu_0       0.3      2.67    0.0335      0           187.  
22 mu_0       0.4      2.47    0.192       0           111.  
23 mu_0       0.5      2.11    0.517       0            42.0 
24 mu_0       0.6      1.71    1.00        0            18.0 
25 mu_0       0.7      1.36    1.20        0             8.41
26 mu_0       0.8      1.21    0.995       0             4.67
27 mu_0       0.9      1.32    0.365       0            18.9 
[1] "Total run time was 85.367 seconds"
