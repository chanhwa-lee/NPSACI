
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1212"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  2  9  7 12  5  5  5  8 11  7  6  6  7  4  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01973 0.35881 0.61890 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
748 464 
[1] "treatment indicator table: "

  0   1 
436 776 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 586
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.739 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.258 0.102 
 2 mu         0.1   0.2 0.267 0.0982
 3 mu         0.1   0.3 0.251 0.106 
 4 mu         0.1   0.4 0.244 0.118 
 5 mu         0.1   0.5 0.226 0.146 
 6 mu         0.2   0.1 0.250 0.0737
 7 mu         0.2   0.2 0.279 0.0865
 8 mu         0.2   0.3 0.284 0.106 
 9 mu         0.2   0.4 0.290 0.128 
10 mu         0.2   0.5 0.295 0.174 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.687       0.104  0.000000989      9.01
 2 mu         0.2      0.885       0.524  0.000285         5.23
 3 mu         0.3      1.08        0.897  0.00582          7.95
 4 mu         0.4      1.13        0.962  0.0386           7.55
 5 mu         0.5      1.09        1.01   0.136            5.11
 6 mu         0.6      1.03        0.990  0.317            2.61
 7 mu         0.7      1.01        0.997  0.494            1.63
 8 mu         0.8      1.02        1.00   0.295            2.60
 9 mu         0.9      1.10        0.981  0.0663           5.29
10 mu_1       0.1      0.861       0.320  0.00000636       6.71
11 mu_1       0.2      1.03        0.850  0.000919         8.73
12 mu_1       0.3      1.14        0.937  0.0126           8.87
13 mu_1       0.4      1.11        0.985  0.0639           6.38
14 mu_1       0.5      1.05        0.997  0.185            3.58
15 mu_1       0.6      1.01        0.994  0.380            1.70
16 mu_1       0.7      1.00        0.988  0.463            1.70
17 mu_1       0.8      1.02        0.999  0.242            2.88
18 mu_1       0.9      1.11        0.975  0.0502           5.70
19 mu_0       0.1      0.668       0.0790 0.000000392      9.82
20 mu_0       0.2      0.848       0.467  0.000126         5.14
21 mu_0       0.3      1.05        0.827  0.00290          7.56
22 mu_0       0.4      1.15        0.961  0.0218           8.33
23 mu_0       0.5      1.13        0.991  0.0578           6.65
24 mu_0       0.6      1.06        1.00   0.120            3.98
25 mu_0       0.7      1.01        0.996  0.222            1.83
26 mu_0       0.8      1.00        1.03   0.372            1.57
27 mu_0       0.9      1.00        0.986  0.0541           2.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.10      0.000240  2.38e-16    160.  
 2 mu         0.2      4.92      0.0191    5.54e-11    280.  
 3 mu         0.3      4.01      0.138     7.17e- 8    247.  
 4 mu         0.4      2.79      0.454     1.09e- 5    149.  
 5 mu         0.5      1.87      0.742     5.04e- 4     65.2 
 6 mu         0.6      1.28      0.813     7.69e- 3     19.7 
 7 mu         0.7      0.953     0.785     2.13e- 4      3.81
 8 mu         0.8      0.872     0.837     1.25e- 6      3.21
 9 mu         0.9      1.09      0.127     1.72e-10     13.2 
10 mu_1       0.1      6.39      0.00119   2.25e-15    355.  
11 mu_1       0.2      4.68      0.0644    2.63e-10    311.  
12 mu_1       0.3      3.03      0.318     2.26e- 7    183.  
13 mu_1       0.4      2.02      0.662     2.58e- 5     83.0 
14 mu_1       0.5      1.46      0.772     9.55e- 4     29.0 
15 mu_1       0.6      1.10      0.760     9.15e- 4      7.29
16 mu_1       0.7      0.892     0.756     2.17e- 5      3.63
17 mu_1       0.8      0.871     0.722     1.12e- 7      3.57
18 mu_1       0.9      1.11      0.0864    1.36e-11     14.7 
19 mu_0       0.1      3.85      0.000116  0           152.  
20 mu_0       0.2      4.97      0.00769   0           272.  
21 mu_0       0.3      4.42      0.0605    0           275.  
22 mu_0       0.4      3.30      0.248     0           194.  
23 mu_0       0.5      2.28      0.636     0           101.  
24 mu_0       0.6      1.55      0.723     0            38.3 
25 mu_0       0.7      1.10      0.835     0             9.27
26 mu_0       0.8      0.876     0.645     0             3.94
27 mu_0       0.9      0.862     0.215     0             5.87
[1] "Total run time was 63.471 seconds"
