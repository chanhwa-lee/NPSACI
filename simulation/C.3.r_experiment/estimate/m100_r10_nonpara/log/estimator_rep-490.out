
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1274"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  5 10  7  4  4  5 11  8  8  9  3  9  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04871 0.37552 0.62457 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
797 477 
[1] "treatment indicator table: "

  0   1 
417 857 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.686 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.432 0.147 
 2 mu         0.1   0.2 0.627 0.214 
 3 mu         0.1   0.3 0.735 0.249 
 4 mu         0.1   0.4 0.799 0.270 
 5 mu         0.1   0.5 0.898 0.301 
 6 mu         0.2   0.1 0.402 0.0924
 7 mu         0.2   0.2 0.555 0.131 
 8 mu         0.2   0.3 0.661 0.156 
 9 mu         0.2   0.4 0.736 0.172 
10 mu         0.2   0.5 0.827 0.194 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.31        0.0352 0.00000000595     47.8 
 2 mu         0.2      1.26        0.326  0.0000218         26.3 
 3 mu         0.3      1.10        0.639  0.00172           10.4 
 4 mu         0.4      1.02        0.845  0.0264             4.94
 5 mu         0.5      0.996       0.911  0.154              2.44
 6 mu         0.6      0.993       0.961  0.410              1.78
 7 mu         0.7      0.984       0.972  0.474              1.72
 8 mu         0.8      0.980       1.01   0.185              1.76
 9 mu         0.9      0.998       1.03   0.00930            2.24
10 mu_1       0.1      1.35        0.0971 0.0000000387      39.9 
11 mu_1       0.2      1.12        0.501  0.0000711         14.1 
12 mu_1       0.3      1.02        0.746  0.00376            6.69
13 mu_1       0.4      0.986       0.924  0.0436             3.23
14 mu_1       0.5      0.989       0.977  0.209              2.15
15 mu_1       0.6      0.990       0.938  0.474              1.69
16 mu_1       0.7      0.983       0.989  0.439              1.76
17 mu_1       0.8      0.982       1.01   0.149              1.79
18 mu_1       0.9      1.00        1.02   0.00696            2.41
19 mu_0       0.1      1.30        0.0260 0.00000000231     48.7 
20 mu_0       0.2      1.29        0.247  0.00000948        30.0 
21 mu_0       0.3      1.14        0.546  0.000850          12.1 
22 mu_0       0.4      1.04        0.799  0.0149             6.14
23 mu_0       0.5      1.00        0.912  0.100              3.00
24 mu_0       0.6      0.997       0.970  0.284              2.37
25 mu_0       0.7      0.989       0.958  0.441              1.73
26 mu_0       0.8      0.972       0.948  0.331              1.83
27 mu_0       0.9      0.951       0.953  0.0304             2.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     127.    0.00000562   3.58e-15  12436.  
 2 mu         0.2      31.6   0.00120      7.42e-10   2985.  
 3 mu         0.3       5.39  0.0244       8.40e- 7    405.  
 4 mu         0.4       1.49  0.155        1.05e- 4     33.7 
 5 mu         0.5       1.08  0.525        2.49e- 3     10.2 
 6 mu         0.6       1.14  0.944        2.23e- 2      4.62
 7 mu         0.7       1.31  1.04         2.25e- 4      5.59
 8 mu         0.8       1.46  1.17         1.74e- 7     11.8 
 9 mu         0.9       1.39  0.363        7.46e-13     19.4 
10 mu_1       0.1      66.8   0.0000412    0          6545.  
11 mu_1       0.2       9.03  0.00493      0           786.  
12 mu_1       0.3       1.82  0.0531       0            71.0 
13 mu_1       0.4       1.12  0.260        0            15.3 
14 mu_1       0.5       1.07  0.696        0             8.60
15 mu_1       0.6       1.19  1.05         0             5.13
16 mu_1       0.7       1.36  1.11         0             5.59
17 mu_1       0.8       1.48  1.17         0            13.1 
18 mu_1       0.9       1.36  0.267        0            19.2 
19 mu_0       0.1     133.    0.000000898  0         13091.  
20 mu_0       0.2      37.2   0.000340     0          3535.  
21 mu_0       0.3       6.93  0.00858      0           548.  
22 mu_0       0.4       1.74  0.0701       0            53.1 
23 mu_0       0.5       1.09  0.288        0            11.8 
24 mu_0       0.6       1.06  0.612        0             5.46
25 mu_0       0.7       1.20  1.00         0             5.59
26 mu_0       0.8       1.37  1.03         0             6.55
27 mu_0       0.9       1.64  0.911        0            21.6 
[1] "Total run time was 55.184 seconds"
