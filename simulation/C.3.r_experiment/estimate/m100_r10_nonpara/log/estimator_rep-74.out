
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1235"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  7  8  6  4  7  6 12 10  1  6 11  2  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02557 0.31273 0.60005 1.00000 6.73147 
[1] "event indicator table: "

  0   1 
722 513 
[1] "treatment indicator table: "

  0   1 
463 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 105.118 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.819 0.310
 2 mu         0.1   0.2 0.964 0.382
 3 mu         0.1   0.3 1.17  0.455
 4 mu         0.1   0.4 1.29  0.496
 5 mu         0.1   0.5 1.36  0.513
 6 mu         0.2   0.1 0.592 0.145
 7 mu         0.2   0.2 0.726 0.177
 8 mu         0.2   0.3 0.881 0.209
 9 mu         0.2   0.4 0.956 0.225
10 mu         0.2   0.5 1.01  0.234
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.74        0.0624 0.000000832     63.6 
 2 mu         0.2      1.41        0.412  0.000608        28.8 
 3 mu         0.3      1.14        0.815  0.0171          11.5 
 4 mu         0.4      1.02        0.958  0.119            3.86
 5 mu         0.5      1.01        1.00   0.375            1.91
 6 mu         0.6      1.01        1.02   0.712            1.23
 7 mu         0.7      1.00        1.01   0.469            1.59
 8 mu         0.8      1.01        0.960  0.169            1.94
 9 mu         0.9      1.13        0.871  0.0160          10.1 
10 mu_1       0.1      1.37        0.199  0.00000458      37.5 
11 mu_1       0.2      1.22        0.696  0.00168         22.8 
12 mu_1       0.3      1.04        0.945  0.0319           6.06
13 mu_1       0.4      1.00        0.976  0.172            2.63
14 mu_1       0.5      1.01        1.03   0.455            1.49
15 mu_1       0.6      1.01        1.02   0.712            1.43
16 mu_1       0.7      1.00        0.988  0.382            1.72
17 mu_1       0.8      1.02        0.954  0.130            2.10
18 mu_1       0.9      1.14        0.869  0.0121          11.2 
19 mu_0       0.1      1.79        0.0422 0.000000415     70.7 
20 mu_0       0.2      1.46        0.328  0.000339        30.4 
21 mu_0       0.3      1.18        0.798  0.0107          13.8 
22 mu_0       0.4      1.04        0.943  0.0837           4.69
23 mu_0       0.5      1.01        0.973  0.294            2.51
24 mu_0       0.6      1.01        1.02   0.542            1.42
25 mu_0       0.7      1.00        1.00   0.655            1.30
26 mu_0       0.8      0.989       1.00   0.204            1.91
27 mu_0       0.9      1.03        0.956  0.0130           2.96
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.937    0.0000529  6.29e-15     36.3 
 2 mu         0.2      1.53     0.00707    1.30e- 9     44.8 
 3 mu         0.3      1.44     0.0853     1.47e- 6     28.6 
 4 mu         0.4      1.12     0.331      1.92e- 4     12.2 
 5 mu         0.5      0.967    0.785      5.30e- 3      2.92
 6 mu         0.6      0.973    1.05       5.67e- 2      1.98
 7 mu         0.7      1.05     1.09       1.40e- 2      3.37
 8 mu         0.8      1.10     0.609      1.22e- 4      5.69
 9 mu         0.9      1.05     0.112      2.39e- 8     11.7 
10 mu_1       0.1      1.68     0.000348   5.66e-14     60.6 
11 mu_1       0.2      1.61     0.0217     5.87e- 9     37.8 
12 mu_1       0.3      1.24     0.178      4.42e- 6     22.5 
13 mu_1       0.4      0.983    0.580      4.32e- 4      7.18
14 mu_1       0.5      0.936    0.941      1.06e- 2      2.51
15 mu_1       0.6      0.990    1.12       4.04e- 2      1.94
16 mu_1       0.7      1.07     1.01       4.70e- 3      4.01
17 mu_1       0.8      1.11     0.471      3.60e- 5      6.91
18 mu_1       0.9      1.05     0.0802     6.26e- 9     12.4 
19 mu_0       0.1      0.854    0.0000242  0            33.6 
20 mu_0       0.2      1.50     0.00287    0            46.6 
21 mu_0       0.3      1.52     0.0425     0            31.5 
22 mu_0       0.4      1.22     0.205      0            15.6 
23 mu_0       0.5      0.999    0.586      0             4.28
24 mu_0       0.6      0.947    1.00       0             2.35
25 mu_0       0.7      0.996    1.09       0             2.07
26 mu_0       0.8      1.07     0.964      0             4.74
27 mu_0       0.9      1.02     0.299      0            11.7 
[1] "Total run time was 110.594 seconds"
