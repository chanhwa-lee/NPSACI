
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1175"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  7  6 11  4  7 10  7  7  7  4  6  2  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01501 0.26708 0.56177 0.91522 5.00000 
[1] "event indicator table: "

  0   1 
677 498 
[1] "treatment indicator table: "

  0   1 
476 699 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 572
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 47.898 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.409 0.135 
 2 mu         0.1   0.2 0.477 0.161 
 3 mu         0.1   0.3 0.519 0.175 
 4 mu         0.1   0.4 0.555 0.178 
 5 mu         0.1   0.5 0.581 0.190 
 6 mu         0.2   0.1 0.369 0.0608
 7 mu         0.2   0.2 0.435 0.0680
 8 mu         0.2   0.3 0.495 0.0754
 9 mu         0.2   0.4 0.539 0.0755
10 mu         0.2   0.5 0.569 0.0818
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.929        0.180 0.00000442     26.5 
 2 mu         0.2      0.945        0.657 0.00183         5.56
 3 mu         0.3      1.00         0.956 0.0390          3.55
 4 mu         0.4      1.02         0.981 0.155           2.61
 5 mu         0.5      1.03         1.02  0.367           2.13
 6 mu         0.6      1.04         1.01  0.319           2.01
 7 mu         0.7      1.03         1.01  0.105           2.51
 8 mu         0.8      1.02         0.878 0.0156          7.03
 9 mu         0.9      0.923        0.562 0.000367       12.9 
10 mu_1       0.1      0.815        0.481 0.0000236       5.13
11 mu_1       0.2      0.989        0.888 0.00495         4.02
12 mu_1       0.3      1.02         1.02  0.0721          3.25
13 mu_1       0.4      1.03         1.01  0.231           2.15
14 mu_1       0.5      1.03         1.02  0.466           2.18
15 mu_1       0.6      1.03         0.991 0.236           2.19
16 mu_1       0.7      1.02         0.983 0.0706          2.59
17 mu_1       0.8      1.01         0.840 0.00953         7.83
18 mu_1       0.9      0.908        0.510 0.000207       12.8 
19 mu_0       0.1      0.942        0.140 0.00000230     29.4 
20 mu_0       0.2      0.934        0.609 0.00105         6.75
21 mu_0       0.3      0.993        0.905 0.0249          3.68
22 mu_0       0.4      1.02         0.967 0.105           2.93
23 mu_0       0.5      1.03         0.997 0.268           2.08
24 mu_0       0.6      1.05         1.05  0.443           2.05
25 mu_0       0.7      1.05         1.03  0.186           2.47
26 mu_0       0.8      1.07         1.01  0.0399          3.85
27 mu_0       0.9      1.06         0.806 0.00180        13.5 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.846     0.000430  2.70e-13     19.3 
 2 mu         0.2      1.21      0.0172    2.49e- 8     26.4 
 3 mu         0.3      1.14      0.110     1.51e- 5     12.0 
 4 mu         0.4      0.993     0.393     8.32e- 4      5.50
 5 mu         0.5      0.945     0.796     1.64e- 2      3.35
 6 mu         0.6      1.09      0.931     2.18e- 2      5.19
 7 mu         0.7      1.58      0.985     4.62e- 4     18.6 
 8 mu         0.8      2.57      0.546     1.58e- 6     54.8 
 9 mu         0.9      3.73      0.0798    6.85e-11    180.  
10 mu_1       0.1      1.42      0.00279   2.30e-12     32.2 
11 mu_1       0.2      1.25      0.0562    1.06e- 7     22.0 
12 mu_1       0.3      1.03      0.254     4.45e- 5      7.81
13 mu_1       0.4      0.925     0.642     1.83e- 3      4.04
14 mu_1       0.5      0.955     0.855     2.90e- 2      3.30
15 mu_1       0.6      1.18      1.00      6.05e- 3      7.42
16 mu_1       0.7      1.74      0.937     1.10e- 4     22.7 
17 mu_1       0.8      2.73      0.413     3.28e- 7     64.5 
18 mu_1       0.9      3.76      0.0577    1.27e-11    189.  
19 mu_0       0.1      0.783     0.000162  0            17.9 
20 mu_0       0.2      1.21      0.00612   0            27.5 
21 mu_0       0.3      1.18      0.0514    0            14.3 
22 mu_0       0.4      1.04      0.242     0             7.12
23 mu_0       0.5      0.935     0.601     0             3.83
24 mu_0       0.6      0.954     0.902     0             3.15
25 mu_0       0.7      1.22      0.860     0             8.85
26 mu_0       0.8      1.93      0.885     0            29.3 
27 mu_0       0.9      3.43      0.224     0           106.  
[1] "Total run time was 51.209 seconds"
