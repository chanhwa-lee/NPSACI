
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1198"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 16 17 18 19 20 
 5  2  6  9 11  8  6 10 10 11  2  6  6  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03528 0.33787 0.58819 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
706 492 
[1] "treatment indicator table: "

  0   1 
419 779 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 93.445 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.434 0.0809
 2 mu         0.1   0.2 0.502 0.100 
 3 mu         0.1   0.3 0.588 0.128 
 4 mu         0.1   0.4 0.793 0.136 
 5 mu         0.1   0.5 0.836 0.142 
 6 mu         0.2   0.1 0.355 0.0491
 7 mu         0.2   0.2 0.442 0.0607
 8 mu         0.2   0.3 0.536 0.0764
 9 mu         0.2   0.4 0.679 0.0825
10 mu         0.2   0.5 0.722 0.0840
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.24         0.352 0.0000000579     13.5 
 2 mu         0.2      1.14         0.959 0.0000947         5.52
 3 mu         0.3      1.12         1.06  0.00450           3.96
 4 mu         0.4      1.06         1.04  0.0478            2.44
 5 mu         0.5      1.01         1.02  0.220             1.67
 6 mu         0.6      0.987        0.973 0.308             1.65
 7 mu         0.7      0.978        0.963 0.273             1.78
 8 mu         0.8      0.978        0.970 0.321             1.91
 9 mu         0.9      0.989        1.02  0.0280            2.39
10 mu_1       0.1      1.00         0.635 0.000000348       6.89
11 mu_1       0.2      1.11         0.988 0.000286          5.17
12 mu_1       0.3      1.08         1.01  0.00914           2.93
13 mu_1       0.4      1.02         1.02  0.0746            2.09
14 mu_1       0.5      0.990        0.958 0.289             1.62
15 mu_1       0.6      0.979        0.969 0.244             1.75
16 mu_1       0.7      0.976        0.955 0.310             1.72
17 mu_1       0.8      0.980        0.969 0.265             1.95
18 mu_1       0.9      0.992        1.01  0.0214            2.48
19 mu_0       0.1      1.26         0.283 0.0000000257     15.0 
20 mu_0       0.2      1.15         0.831 0.0000470         5.61
21 mu_0       0.3      1.13         1.06  0.00251           4.48
22 mu_0       0.4      1.08         1.05  0.0299            2.78
23 mu_0       0.5      1.03         1.02  0.152             1.85
24 mu_0       0.6      1.00         1.00  0.404             1.66
25 mu_0       0.7      0.982        0.963 0.186             1.91
26 mu_0       0.8      0.972        0.961 0.349             1.76
27 mu_0       0.9      0.957        0.981 0.0870            2.22
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.455    0.0000737  1.76e-15     14.5 
 2 mu         0.2      0.846    0.00532    3.31e-10     15.6 
 3 mu         0.3      1.03     0.0717     2.26e- 7      8.17
 4 mu         0.4      1.13     0.363      2.25e- 5      6.44
 5 mu         0.5      1.12     0.669      8.00e- 4      3.81
 6 mu         0.6      1.02     0.882      3.22e- 3      2.78
 7 mu         0.7      0.999    0.950      3.84e- 5      3.23
 8 mu         0.8      1.12     0.850      5.82e- 8      4.39
 9 mu         0.9      1.23     0.150      6.33e-13      9.71
10 mu_1       0.1      0.955    0.000518   1.58e-14     21.7 
11 mu_1       0.2      1.08     0.0192     1.56e- 9     11.7 
12 mu_1       0.3      1.11     0.155      7.52e- 7      7.29
13 mu_1       0.4      1.11     0.474      5.63e- 5      5.75
14 mu_1       0.5      1.05     0.759      1.60e- 3      3.60
15 mu_1       0.6      0.981    0.751      8.05e- 4      2.83
16 mu_1       0.7      1.00     1.08       8.24e- 6      3.63
17 mu_1       0.8      1.14     0.748      1.09e- 8      4.91
18 mu_1       0.9      1.23     0.107      1.05e-13     10.8 
19 mu_0       0.1      0.400    0.0000242  0            13.7 
20 mu_0       0.2      0.787    0.00190    0            16.6 
21 mu_0       0.3      1.00     0.0356     0             9.34
22 mu_0       0.4      1.15     0.180      0             7.84
23 mu_0       0.5      1.18     0.441      0             5.67
24 mu_0       0.6      1.09     0.775      0             3.49
25 mu_0       0.7      0.987    0.864      0             2.70
26 mu_0       0.8      1.01     0.909      0             4.46
27 mu_0       0.9      1.19     0.246      0             8.56
[1] "Total run time was 98.983 seconds"
