
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  6  7  4 10  6  5  7  6  7  6  8  5  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0368  0.3393  0.6219  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
727 542 
[1] "treatment indicator table: "

  0   1 
440 829 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 48.124 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.317 0.0806
 2 mu         0.1   0.2 0.430 0.102 
 3 mu         0.1   0.3 0.440 0.113 
 4 mu         0.1   0.4 0.480 0.129 
 5 mu         0.1   0.5 0.441 0.132 
 6 mu         0.2   0.1 0.307 0.0595
 7 mu         0.2   0.2 0.397 0.0724
 8 mu         0.2   0.3 0.429 0.0849
 9 mu         0.2   0.4 0.487 0.104 
10 mu         0.2   0.5 0.464 0.101 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.566       0.0157 0.000000113       7.88
 2 mu         0.2      0.635       0.177  0.000105          5.86
 3 mu         0.3      0.704       0.495  0.00339           4.92
 4 mu         0.4      0.793       0.788  0.0321            3.46
 5 mu         0.5      0.880       0.874  0.150             2.44
 6 mu         0.6      0.950       0.948  0.435             1.71
 7 mu         0.7      0.985       0.969  0.247             2.12
 8 mu         0.8      0.965       0.980  0.0462            2.36
 9 mu         0.9      0.901       0.706  0.00187           6.11
10 mu_1       0.1      0.683       0.0599 0.000000677       8.68
11 mu_1       0.2      0.685       0.336  0.000353          5.46
12 mu_1       0.3      0.748       0.669  0.00772           3.32
13 mu_1       0.4      0.832       0.821  0.0557            2.41
14 mu_1       0.5      0.910       0.916  0.215             2.35
15 mu_1       0.6      0.965       0.954  0.404             1.73
16 mu_1       0.7      0.984       0.989  0.162             2.24
17 mu_1       0.8      0.955       0.945  0.0278            2.37
18 mu_1       0.9      0.896       0.670  0.00106           6.71
19 mu_0       0.1      0.553       0.0108 0.0000000501      8.26
20 mu_0       0.2      0.622       0.124  0.0000426         5.97
21 mu_0       0.3      0.685       0.411  0.00154           5.60
22 mu_0       0.4      0.767       0.696  0.0163            4.42
23 mu_0       0.5      0.851       0.822  0.0859            3.07
24 mu_0       0.6      0.928       0.923  0.284             1.95
25 mu_0       0.7      0.987       0.972  0.373             1.84
26 mu_0       0.8      1.00        1.00   0.120             2.53
27 mu_0       0.9      0.951       0.941  0.00920           2.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     129.      0.0000435  8.27e-16   7741.  
 2 mu         0.2     147.      0.00630    1.71e-10   7534.  
 3 mu         0.3      81.7     0.0644     1.94e- 7   3414.  
 4 mu         0.4      31.6     0.303      2.53e- 5   1000.  
 5 mu         0.5       9.37    0.692      9.74e- 4    252.  
 6 mu         0.6       2.55    0.978      1.66e- 2     39.0 
 7 mu         0.7       1.34    0.966      7.33e- 2      6.52
 8 mu         0.8       1.55    0.730      1.45e- 3     13.5 
 9 mu         0.9       2.26    0.134      3.81e- 7     46.4 
10 mu_1       0.1     199.      0.000249   7.45e-15  11058.  
11 mu_1       0.2     117.      0.0195     7.71e-10   5381.  
12 mu_1       0.3      47.5     0.153      5.82e- 7   1626.  
13 mu_1       0.4      16.4     0.496      5.69e- 5    417.  
14 mu_1       0.5       5.05    0.829      1.75e- 3    133.  
15 mu_1       0.6       1.79    0.958      2.49e- 2     25.0 
16 mu_1       0.7       1.30    1.01       2.07e- 2      6.63
17 mu_1       0.8       1.61    0.600      5.14e- 4     14.6 
18 mu_1       0.9       2.32    0.103      7.94e- 8     51.6 
19 mu_0       0.1     122.      0.0000161  0          7372.  
20 mu_0       0.2     154.      0.00227    0          8072.  
21 mu_0       0.3      96.4     0.0317     0          4181.  
22 mu_0       0.4      41.7     0.164      0          1389.  
23 mu_0       0.5      13.7     0.448      0           421.  
24 mu_0       0.6       3.69    0.822      0            81.3 
25 mu_0       0.7       1.41    0.978      0             9.75
26 mu_0       0.8       1.32    0.952      0             9.00
27 mu_0       0.9       1.73    0.374      0            20.8 
[1] "Total run time was 51.185 seconds"
