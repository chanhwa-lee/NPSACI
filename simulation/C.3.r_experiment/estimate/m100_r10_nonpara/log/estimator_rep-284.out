
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1283"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4  4  7  8  9  2  8  4  1 11  9  4  8  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03314 0.35915 0.58916 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
771 512 
[1] "treatment indicator table: "

  0   1 
468 815 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.044 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.245 0.141 
 2 mu         0.1   0.2 0.357 0.135 
 3 mu         0.1   0.3 0.389 0.124 
 4 mu         0.1   0.4 0.415 0.124 
 5 mu         0.1   0.5 0.415 0.136 
 6 mu         0.2   0.1 0.279 0.103 
 7 mu         0.2   0.2 0.384 0.0966
 8 mu         0.2   0.3 0.418 0.0879
 9 mu         0.2   0.4 0.468 0.0889
10 mu         0.2   0.5 0.479 0.0994
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.788       0.0726 0.000000290      9.78
 2 mu         0.2      0.947       0.386  0.000169         6.03
 3 mu         0.3      0.999       0.801  0.00522          4.46
 4 mu         0.4      0.969       0.952  0.0463           3.04
 5 mu         0.5      0.927       0.957  0.199            1.89
 6 mu         0.6      0.941       0.928  0.455            1.82
 7 mu         0.7      0.991       0.961  0.465            1.90
 8 mu         0.8      1.00        0.989  0.113            2.78
 9 mu         0.9      0.941       0.937  0.00476          3.93
10 mu_1       0.1      0.857       0.245  0.00000194      10.9 
11 mu_1       0.2      0.985       0.708  0.000566         5.56
12 mu_1       0.3      1.00        0.954  0.0117           4.07
13 mu_1       0.4      0.954       0.954  0.0790           2.74
14 mu_1       0.5      0.926       0.931  0.277            1.69
15 mu_1       0.6      0.956       0.939  0.426            1.88
16 mu_1       0.7      1.00        0.964  0.391            2.06
17 mu_1       0.8      1.00        1.00   0.0875           2.83
18 mu_1       0.9      0.936       0.895  0.00344          4.24
19 mu_0       0.1      0.780       0.0535 0.000000107     10.2 
20 mu_0       0.2      0.937       0.295  0.0000697        6.67
21 mu_0       0.3      0.998       0.761  0.00243          4.76
22 mu_0       0.4      0.979       0.948  0.0245           3.24
23 mu_0       0.5      0.929       0.923  0.120            2.36
24 mu_0       0.6      0.918       0.917  0.362            1.74
25 mu_0       0.7      0.962       0.936  0.454            1.99
26 mu_0       0.8      1.00        0.965  0.213            2.62
27 mu_0       0.9      0.986       1.00   0.0166           3.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.452    0.0000522  1.99e-16     18.1 
 2 mu         0.2      0.925    0.00500    9.28e-11     31.4 
 3 mu         0.3      1.10     0.0974     1.80e- 7     18.7 
 4 mu         0.4      1.25     0.401      2.55e- 5      9.25
 5 mu         0.5      1.32     1.05       9.07e- 4      8.69
 6 mu         0.6      1.29     1.09       8.46e- 3      7.22
 7 mu         0.7      1.21     1.21       1.35e- 4      6.08
 8 mu         0.8      1.38     0.927      3.06e- 7      7.15
 9 mu         0.9      2.37     0.111      6.65e-12     29.9 
10 mu_1       0.1      0.897    0.000365   1.89e-15     34.0 
11 mu_1       0.2      1.14     0.0177     4.41e-10     29.4 
12 mu_1       0.3      1.22     0.195      5.70e- 7     11.7 
13 mu_1       0.4      1.32     0.669      6.38e- 5      9.25
14 mu_1       0.5      1.34     1.04       1.81e- 3      9.15
15 mu_1       0.6      1.27     1.12       2.23e- 3      6.34
16 mu_1       0.7      1.21     1.24       3.04e- 5      6.08
17 mu_1       0.8      1.45     0.715      6.04e- 8      8.46
18 mu_1       0.9      2.47     0.0779     1.17e-12     31.6 
19 mu_0       0.1      0.403    0.0000156  0            16.4 
20 mu_0       0.2      0.872    0.00224    0            31.9 
21 mu_0       0.3      1.05     0.0380     0            21.7 
22 mu_0       0.4      1.20     0.221      0             9.25
23 mu_0       0.5      1.31     0.862      0             8.23
24 mu_0       0.6      1.31     0.948      0             8.55
25 mu_0       0.7      1.21     0.989      0             6.08
26 mu_0       0.8      1.12     1.04       0             5.20
27 mu_0       0.9      1.51     0.222      0            15.7 
[1] "Total run time was 54.253 seconds"
