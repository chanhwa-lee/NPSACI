
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1202"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  6  6 10  5  7  7  6  9  9  2  5  6  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05555 0.41382 0.64081 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
721 481 
[1] "treatment indicator table: "

  0   1 
421 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 588
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 88.635 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.839 0.555
 2 mu         0.1   0.2 0.931 0.652
 3 mu         0.1   0.3 1.14  0.787
 4 mu         0.1   0.4 1.30  0.923
 5 mu         0.1   0.5 1.35  0.978
 6 mu         0.2   0.1 0.485 0.228
 7 mu         0.2   0.2 0.521 0.263
 8 mu         0.2   0.3 0.644 0.316
 9 mu         0.2   0.4 0.732 0.367
10 mu         0.2   0.5 0.751 0.391
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      2.35        0.0790 0.00000000273    160.  
 2 mu         0.2      1.41        0.415  0.0000109         62.4 
 3 mu         0.3      1.04        0.756  0.000965          21.5 
 4 mu         0.4      0.951       0.863  0.0169             6.42
 5 mu         0.5      0.959       0.959  0.114              2.32
 6 mu         0.6      0.991       0.980  0.388              1.55
 7 mu         0.7      1.02        0.996  0.367              1.57
 8 mu         0.8      1.00        0.988  0.0672             1.97
 9 mu         0.9      0.958       0.813  0.00222            5.68
10 mu_1       0.1      0.860       0.214  0.0000000179       5.73
11 mu_1       0.2      0.833       0.635  0.0000360          2.73
12 mu_1       0.3      0.869       0.821  0.00215            2.98
13 mu_1       0.4      0.917       0.922  0.0287             2.89
14 mu_1       0.5      0.960       0.954  0.158              2.08
15 mu_1       0.6      0.999       0.999  0.460              1.60
16 mu_1       0.7      1.02        1.01   0.275              1.57
17 mu_1       0.8      0.999       0.975  0.0469             2.06
18 mu_1       0.9      0.956       0.775  0.00145            6.10
19 mu_0       0.1      2.51        0.0553 0.00000000105    178.  
20 mu_0       0.2      1.55        0.331  0.00000464        78.0 
21 mu_0       0.3      1.11        0.709  0.000458          30.7 
22 mu_0       0.4      0.973       0.814  0.00905           10.5 
23 mu_0       0.5      0.957       0.906  0.0702             3.13
24 mu_0       0.6      0.979       0.982  0.281              1.87
25 mu_0       0.7      1.01        1.01   0.550              1.66
26 mu_0       0.8      1.02        1.02   0.148              1.86
27 mu_0       0.9      0.985       0.941  0.00921            2.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      16.6     0.0000454  1.63e-15   1011.  
 2 mu         0.2      24.2     0.00528    2.14e-10   1382.  
 3 mu         0.3      13.2     0.0554     2.11e- 7    629.  
 4 mu         0.4       4.96    0.282      2.81e- 5    148.  
 5 mu         0.5       2.08    0.846      9.33e- 4     30.3 
 6 mu         0.6       1.37    1.01       1.44e- 2      7.98
 7 mu         0.7       1.25    1.14       6.00e- 3      5.01
 8 mu         0.8       1.20    1.10       2.34e- 5      5.48
 9 mu         0.9       1.39    0.211      1.14e- 9     27.2 
10 mu_1       0.1      28.8     0.000275   1.63e-14   1685.  
11 mu_1       0.2      21.4     0.0175     1.07e- 9   1152.  
12 mu_1       0.3       8.38    0.137      7.03e- 7    350.  
13 mu_1       0.4       3.01    0.501      7.02e- 5     61.6 
14 mu_1       0.5       1.59    0.981      1.87e- 3     14.0 
15 mu_1       0.6       1.28    1.03       2.40e- 2      5.16
16 mu_1       0.7       1.24    1.22       1.81e- 3      4.77
17 mu_1       0.8       1.21    0.967      6.16e- 6      5.87
18 mu_1       0.9       1.43    0.166      2.67e-10     30.3 
19 mu_0       0.1      15.3     0.0000133  0           936.  
20 mu_0       0.2      24.9     0.00188    0          1440.  
21 mu_0       0.3      15.3     0.0205     0           749.  
22 mu_0       0.4       6.26    0.135      0           205.  
23 mu_0       0.5       2.58    0.560      0            49.7 
24 mu_0       0.6       1.51    0.993      0            14.0 
25 mu_0       0.7       1.27    1.17       0             5.56
26 mu_0       0.8       1.19    1.14       0             3.91
27 mu_0       0.9       1.02    0.378      0             8.04
[1] "Total run time was 93.844 seconds"
