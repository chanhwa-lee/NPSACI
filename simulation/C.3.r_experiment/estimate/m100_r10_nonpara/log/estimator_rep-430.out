
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1230"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  8  6  5  7 10  9  8  4  2 12  8  7  5  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03735 0.32546 0.60145 1.00000 5.23854 
[1] "event indicator table: "

  0   1 
728 502 
[1] "treatment indicator table: "

  0   1 
468 762 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 45.868 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.319 0.0848
 2 mu         0.1   0.2 0.456 0.126 
 3 mu         0.1   0.3 0.488 0.128 
 4 mu         0.1   0.4 0.515 0.134 
 5 mu         0.1   0.5 0.639 0.177 
 6 mu         0.2   0.1 0.349 0.0846
 7 mu         0.2   0.2 0.481 0.114 
 8 mu         0.2   0.3 0.542 0.125 
 9 mu         0.2   0.4 0.560 0.128 
10 mu         0.2   0.5 0.696 0.168 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.632       0.0428 0.000000825     10.8 
 2 mu         0.2      0.885       0.299  0.000694        17.9 
 3 mu         0.3      0.937       0.704  0.0222          11.1 
 4 mu         0.4      0.963       0.947  0.172            4.34
 5 mu         0.5      0.999       0.984  0.461            1.72
 6 mu         0.6      1.02        1.00   0.751            1.31
 7 mu         0.7      1.00        0.972  0.582            1.61
 8 mu         0.8      0.966       0.901  0.172            2.31
 9 mu         0.9      0.912       0.611  0.0115           4.52
10 mu_1       0.1      0.948       0.153  0.00000479      19.2 
11 mu_1       0.2      0.975       0.567  0.00203         16.8 
12 mu_1       0.3      0.964       0.899  0.0437           7.70
13 mu_1       0.4      0.983       0.973  0.257            2.65
14 mu_1       0.5      1.01        0.995  0.503            1.54
15 mu_1       0.6      1.02        1.01   0.705            1.42
16 mu_1       0.7      0.995       0.942  0.483            1.71
17 mu_1       0.8      0.963       0.850  0.126            2.51
18 mu_1       0.9      0.908       0.546  0.00775          4.85
19 mu_0       0.1      0.597       0.0298 0.000000384     11.2 
20 mu_0       0.2      0.862       0.244  0.000361        18.1 
21 mu_0       0.3      0.925       0.603  0.0131          12.6 
22 mu_0       0.4      0.950       0.934  0.116            5.47
23 mu_0       0.5      0.988       0.986  0.418            1.90
24 mu_0       0.6      1.02        0.998  0.651            1.46
25 mu_0       0.7      1.01        1.01   0.609            1.48
26 mu_0       0.8      0.978       0.941  0.357            1.73
27 mu_0       0.9      0.954       0.780  0.0453           3.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      11.2     0.000257   2.31e-13    870.  
 2 mu         0.2       8.82    0.0110     1.35e- 8    669.  
 3 mu         0.3       3.93    0.108      7.73e- 6    232.  
 4 mu         0.4       1.79    0.419      6.61e- 4     47.7 
 5 mu         0.5       1.20    0.907      1.96e- 2      7.49
 6 mu         0.6       1.08    1.04       2.47e- 1      3.09
 7 mu         0.7       1.17    1.05       8.91e- 3      3.71
 8 mu         0.8       1.47    0.507      3.99e- 5     14.4 
 9 mu         0.9       1.88    0.0676     3.08e- 9     47.5 
10 mu_1       0.1      13.6     0.00147    2.17e-12   1087.  
11 mu_1       0.2       5.79    0.0384     6.33e- 8    418.  
12 mu_1       0.3       2.26    0.205      2.43e- 5     96.7 
13 mu_1       0.4       1.32    0.656      1.56e- 3     14.9 
14 mu_1       0.5       1.11    1.04       3.68e- 2      4.08
15 mu_1       0.6       1.09    1.04       7.66e- 2      3.09
16 mu_1       0.7       1.23    0.970      1.59e- 3      4.33
17 mu_1       0.8       1.54    0.375      6.23e- 6     17.0 
18 mu_1       0.9       1.92    0.0461     4.28e-10     49.7 
19 mu_0       0.1      10.9     0.0000606  0           846.  
20 mu_0       0.2       9.58    0.00482    0           732.  
21 mu_0       0.3       4.65    0.0586     0           290.  
22 mu_0       0.4       2.10    0.275      0            69.5 
23 mu_0       0.5       1.29    0.689      0            10.9 
24 mu_0       0.6       1.07    1.01       0             3.95
25 mu_0       0.7       1.05    1.05       0             2.94
26 mu_0       0.8       1.18    0.881      0             4.98
27 mu_0       0.9       1.52    0.179      0            28.0 
[1] "Total run time was 48.994 seconds"
