
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1253"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  7  4 11  4  6  3  5  6  6  7  6  4 10  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03281 0.31937 0.60716 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
736 517 
[1] "treatment indicator table: "

  0   1 
472 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.095 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.170 0.0419
 2 mu         0.1   0.2 0.236 0.0701
 3 mu         0.1   0.3 0.321 0.0807
 4 mu         0.1   0.4 0.347 0.0947
 5 mu         0.1   0.5 0.362 0.0941
 6 mu         0.2   0.1 0.255 0.0512
 7 mu         0.2   0.2 0.367 0.0893
 8 mu         0.2   0.3 0.457 0.106 
 9 mu         0.2   0.4 0.485 0.109 
10 mu         0.2   0.5 0.513 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.405       0.0305 0.0000000125       6.77
 2 mu         0.2      0.720       0.263  0.0000280         10.4 
 3 mu         0.3      0.872       0.610  0.00188            7.10
 4 mu         0.4      0.899       0.835  0.0283             4.81
 5 mu         0.5      0.923       0.936  0.178              2.73
 6 mu         0.6      0.979       0.990  0.599              1.44
 7 mu         0.7      1.03        1.02   0.538              1.51
 8 mu         0.8      1.03        1.01   0.246              2.09
 9 mu         0.9      1.04        0.734  0.0143             6.30
10 mu_1       0.1      0.662       0.122  0.0000000836      10.7 
11 mu_1       0.2      0.873       0.518  0.0000949         10.4 
12 mu_1       0.3      0.921       0.744  0.00428            5.91
13 mu_1       0.4      0.918       0.922  0.0491             4.19
14 mu_1       0.5      0.945       0.953  0.252              2.26
15 mu_1       0.6      0.998       1.00   0.640              1.35
16 mu_1       0.7      1.03        1.03   0.497              1.59
17 mu_1       0.8      1.03        1.02   0.188              2.15
18 mu_1       0.9      1.05        0.665  0.00999            6.81
19 mu_0       0.1      0.377       0.0222 0.00000000455      6.99
20 mu_0       0.2      0.682       0.206  0.0000113         10.4 
21 mu_0       0.3      0.851       0.544  0.000844           8.10
22 mu_0       0.4      0.886       0.789  0.0144             5.23
23 mu_0       0.5      0.902       0.906  0.104              3.21
24 mu_0       0.6      0.952       0.952  0.404              1.70
25 mu_0       0.7      1.01        1.02   0.551              1.47
26 mu_0       0.8      1.04        1.03   0.451              1.86
27 mu_0       0.9      0.996       0.963  0.0529             2.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.11     0.0000787  6.32e-15    113.  
 2 mu         0.2      2.85     0.00546    7.37e-10     95.3 
 3 mu         0.3      1.82     0.0714     6.35e- 7     64.8 
 4 mu         0.4      1.30     0.349      7.24e- 5     24.2 
 5 mu         0.5      1.14     0.717      2.68e- 3      6.72
 6 mu         0.6      1.07     0.980      9.42e- 3      3.35
 7 mu         0.7      1.04     0.998      1.29e- 4      3.00
 8 mu         0.8      1.11     0.688      2.56e- 7      7.44
 9 mu         0.9      1.35     0.0821     4.94e-12     17.2 
10 mu_1       0.1      3.23     0.000586   0           125.  
11 mu_1       0.2      2.09     0.0172     0            95.3 
12 mu_1       0.3      1.32     0.129      0            43.2 
13 mu_1       0.4      1.13     0.530      0            12.1 
14 mu_1       0.5      1.10     0.859      0             5.97
15 mu_1       0.6      1.07     1.00       0             2.89
16 mu_1       0.7      1.06     0.943      0             3.57
17 mu_1       0.8      1.15     0.548      0             8.64
18 mu_1       0.9      1.38     0.0575     0            17.8 
19 mu_0       0.1      3.10     0.0000215  0           112.  
20 mu_0       0.2      3.04     0.00179    0            95.3 
21 mu_0       0.3      2.03     0.0352     0            74.1 
22 mu_0       0.4      1.41     0.198      0            32.2 
23 mu_0       0.5      1.18     0.478      0             8.78
24 mu_0       0.6      1.07     0.884      0             4.47
25 mu_0       0.7      0.980    0.950      0             3.06
26 mu_0       0.8      0.947    0.895      0             3.25
27 mu_0       0.9      1.08     0.142      0            12.3 
[1] "Total run time was 49.412 seconds"
