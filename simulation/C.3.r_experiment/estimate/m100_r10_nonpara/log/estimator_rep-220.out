
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1335"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  1  7  4  3  7  9  6  5  7  9 14  9  5  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04733 0.35842 0.63705 1.00000 5.85267 
[1] "event indicator table: "

  0   1 
805 530 
[1] "treatment indicator table: "

  0   1 
434 901 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 692
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.666 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.336 0.0911
 2 mu         0.1   0.2 0.460 0.144 
 3 mu         0.1   0.3 0.475 0.145 
 4 mu         0.1   0.4 0.505 0.137 
 5 mu         0.1   0.5 0.508 0.139 
 6 mu         0.2   0.1 0.374 0.0912
 7 mu         0.2   0.2 0.502 0.144 
 8 mu         0.2   0.3 0.527 0.142 
 9 mu         0.2   0.4 0.558 0.134 
10 mu         0.2   0.5 0.574 0.134 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.717      0.0111  0.0000000272      12.4 
 2 mu         0.2      0.896      0.183   0.0000357         16.1 
 3 mu         0.3      0.985      0.596   0.00188            8.39
 4 mu         0.4      1.03       0.859   0.0252             4.76
 5 mu         0.5      1.05       0.963   0.152              2.69
 6 mu         0.6      1.06       1.03    0.431              2.03
 7 mu         0.7      1.04       1.01    0.335              1.65
 8 mu         0.8      1.00       0.983   0.337              1.72
 9 mu         0.9      0.995      0.974   0.0561             2.31
10 mu_1       0.1      0.923      0.0425  0.000000200       18.5 
11 mu_1       0.2      0.979      0.336   0.000132          14.2 
12 mu_1       0.3      1.02       0.742   0.00463            5.48
13 mu_1       0.4      1.04       0.926   0.0468             4.18
14 mu_1       0.5      1.05       1.01    0.214              2.55
15 mu_1       0.6      1.06       1.03    0.513              1.89
16 mu_1       0.7      1.03       1.02    0.309              1.74
17 mu_1       0.8      0.998      0.962   0.292              1.70
18 mu_1       0.9      0.994      0.966   0.0457             2.34
19 mu_0       0.1      0.695      0.00763 0.00000000801     12.6 
20 mu_0       0.2      0.875      0.120   0.0000118         16.6 
21 mu_0       0.3      0.970      0.489   0.000700           9.87
22 mu_0       0.4      1.02       0.800   0.0108             5.15
23 mu_0       0.5      1.05       0.911   0.0767             3.11
24 mu_0       0.6      1.07       0.997   0.262              2.27
25 mu_0       0.7      1.06       1.04    0.394              1.79
26 mu_0       0.8      1.01       1.01    0.234              1.90
27 mu_0       0.9      1.00       0.936   0.149              2.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       8.52  0.00000207   2.44e-16    417.  
 2 mu         0.2       9.38  0.000436     5.68e-11    371.  
 3 mu         0.3       5.79  0.00734      7.34e- 8    192.  
 4 mu         0.4       3.02  0.0701       1.12e- 5     62.7 
 5 mu         0.5       1.72  0.350        5.16e- 4     13.2 
 6 mu         0.6       1.30  0.800        1.10e- 2     10.9 
 7 mu         0.7       1.23  1.04         1.43e- 3      9.22
 8 mu         0.8       1.21  1.12         4.25e- 6      3.98
 9 mu         0.9       1.14  0.557        1.64e-10     11.6 
10 mu_1       0.1      12.3   0.0000144    2.31e-15    522.  
11 mu_1       0.2       7.97  0.00174      2.69e-10    286.  
12 mu_1       0.3       4.16  0.0229       2.32e- 7     98.6 
13 mu_1       0.4       2.23  0.126        2.64e- 5     24.1 
14 mu_1       0.5       1.46  0.517        9.78e- 4     10.4 
15 mu_1       0.6       1.25  0.869        1.54e- 2     11.4 
16 mu_1       0.7       1.23  1.02         2.40e- 4      8.32
17 mu_1       0.8       1.21  1.18         6.25e- 7      4.39
18 mu_1       0.9       1.13  0.427        2.15e-11     12.2 
19 mu_0       0.1       8.10  0.000000364  0           409.  
20 mu_0       0.2       9.73  0.0000819    0           393.  
21 mu_0       0.3       6.49  0.00222      0           232.  
22 mu_0       0.4       3.54  0.0253       0            88.5 
23 mu_0       0.5       1.98  0.153        0            22.3 
24 mu_0       0.6       1.39  0.569        0            10.8 
25 mu_0       0.7       1.22  0.920        0            11.3 
26 mu_0       0.8       1.19  0.971        0             4.93
27 mu_0       0.9       1.21  0.468        0             6.86
[1] "Total run time was 58.983 seconds"
