
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1251"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  9  5  4  6  6  7 10  6  7  6  4  4  8  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02273 0.36532 0.63134 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
770 481 
[1] "treatment indicator table: "

  0   1 
414 837 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 95.815 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.270 0.198
 2 mu         0.1   0.2 0.532 0.264
 3 mu         0.1   0.3 0.604 0.310
 4 mu         0.1   0.4 0.668 0.346
 5 mu         0.1   0.5 0.680 0.352
 6 mu         0.2   0.1 0.352 0.188
 7 mu         0.2   0.2 0.566 0.247
 8 mu         0.2   0.3 0.659 0.295
 9 mu         0.2   0.4 0.712 0.324
10 mu         0.2   0.5 0.720 0.332
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.926      0.00960 0.0000000325     55.2 
 2 mu         0.2      1.13       0.117   0.0000698        54.4 
 3 mu         0.3      1.11       0.317   0.00401          36.7 
 4 mu         0.4      1.04       0.660   0.0448           19.5 
 5 mu         0.5      0.998      0.938   0.201             8.39
 6 mu         0.6      0.999      0.983   0.453             3.07
 7 mu         0.7      0.995      0.995   0.300             1.42
 8 mu         0.8      0.947      0.979   0.0555            1.84
 9 mu         0.9      0.865      0.870   0.00157           3.48
10 mu_1       0.1      1.17       0.0448  0.000000208      78.8 
11 mu_1       0.2      1.07       0.299   0.000226         38.9 
12 mu_1       0.3      0.992      0.559   0.00835          17.5 
13 mu_1       0.4      0.959      0.814   0.0740            7.14
14 mu_1       0.5      0.972      0.977   0.294             2.74
15 mu_1       0.6      0.996      0.976   0.547             1.60
16 mu_1       0.7      0.992      0.993   0.229             1.40
17 mu_1       0.8      0.940      0.966   0.0383            1.89
18 mu_1       0.9      0.860      0.858   0.000996          3.71
19 mu_0       0.1      0.898      0.00621 0.0000000130     52.5 
20 mu_0       0.2      1.14       0.0751  0.0000308        58.3 
21 mu_0       0.3      1.17       0.243   0.00192          44.9 
22 mu_0       0.4      1.09       0.557   0.0242           27.7 
23 mu_0       0.5      1.02       0.867   0.108            14.0 
24 mu_0       0.6      1.00       0.981   0.245             5.75
25 mu_0       0.7      1.00       0.976   0.453             2.02
26 mu_0       0.8      0.975      0.961   0.124             1.61
27 mu_0       0.9      0.911      0.930   0.00675           2.24
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.467   0.0000209   5.71e-16     39.6 
 2 mu         0.2      1.09    0.00435     1.33e-10     48.7 
 3 mu         0.3      1.77    0.0474      1.72e- 7     33.5 
 4 mu         0.4      2.09    0.206       2.62e- 5     47.1 
 5 mu         0.5      1.83    0.589       1.21e- 3     34.8 
 6 mu         0.6      1.33    0.804       2.58e- 2     13.9 
 7 mu         0.7      1.08    0.960       1.95e- 2      3.33
 8 mu         0.8      1.32    0.734       1.95e- 4     10.7 
 9 mu         0.9      1.83    0.220       4.30e- 8     19.8 
10 mu_1       0.1      0.910   0.000158    5.41e-15     65.9 
11 mu_1       0.2      1.49    0.0138      6.31e-10     40.6 
12 mu_1       0.3      2.06    0.110       5.44e- 7     44.7 
13 mu_1       0.4      2.12    0.388       6.20e- 5     47.1 
14 mu_1       0.5      1.69    0.682       2.29e- 3     27.8 
15 mu_1       0.6      1.22    0.873       4.07e- 2      9.30
16 mu_1       0.7      1.08    0.853       7.74e- 3      3.60
17 mu_1       0.8      1.38    0.636       6.79e- 5     11.9 
18 mu_1       0.9      1.87    0.161       1.33e- 8     19.6 
19 mu_0       0.1      0.418   0.00000784  0            36.6 
20 mu_0       0.2      0.992   0.00164     0            50.8 
21 mu_0       0.3      1.65    0.0169      0            34.3 
22 mu_0       0.4      2.07    0.105       0            47.1 
23 mu_0       0.5      1.98    0.415       0            41.8 
24 mu_0       0.6      1.50    0.721       0            20.9 
25 mu_0       0.7      1.09    0.849       0             5.55
26 mu_0       0.8      1.06    0.929       0             5.62
27 mu_0       0.9      1.48    0.408       0            20.8 
[1] "Total run time was 101.202 seconds"
