
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1273"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  6  7  4  7  9  6 14  5  4  5  6  7  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05472 0.38989 0.63784 1.00000 4.32061 
[1] "event indicator table: "

  0   1 
731 542 
[1] "treatment indicator table: "

  0   1 
512 761 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 92.511 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.148 0.146 
 2 mu         0.1   0.2 0.371 0.121 
 3 mu         0.1   0.3 0.430 0.145 
 4 mu         0.1   0.4 0.451 0.164 
 5 mu         0.1   0.5 0.465 0.181 
 6 mu         0.2   0.1 0.151 0.128 
 7 mu         0.2   0.2 0.364 0.0665
 8 mu         0.2   0.3 0.413 0.0770
 9 mu         0.2   0.4 0.441 0.0882
10 mu         0.2   0.5 0.473 0.101 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.978       0.0923 0.0000000102      24.1 
 2 mu         0.2      1.01        0.420  0.0000394          9.16
 3 mu         0.3      0.970       0.823  0.00330            3.28
 4 mu         0.4      0.965       0.953  0.0535             2.07
 5 mu         0.5      0.975       0.984  0.325              1.76
 6 mu         0.6      0.982       0.981  0.546              1.49
 7 mu         0.7      0.993       0.998  0.220              1.68
 8 mu         0.8      1.00        0.992  0.0279             2.45
 9 mu         0.9      0.954       0.654  0.000319           4.98
10 mu_1       0.1      1.06        0.297  0.0000000668      13.9 
11 mu_1       0.2      1.02        0.744  0.000129           4.59
12 mu_1       0.3      0.975       0.946  0.00727            2.75
13 mu_1       0.4      0.973       0.980  0.0893             1.77
14 mu_1       0.5      0.980       0.983  0.440              1.71
15 mu_1       0.6      0.986       1.01   0.520              1.42
16 mu_1       0.7      1.00        1.02   0.168              1.87
17 mu_1       0.8      1.01        0.953  0.0190             2.65
18 mu_1       0.9      0.952       0.596  0.000196           5.14
19 mu_0       0.1      0.969       0.0696 0.00000000395     26.7 
20 mu_0       0.2      1.00        0.351  0.0000169         10.5 
21 mu_0       0.3      0.967       0.743  0.00160            4.23
22 mu_0       0.4      0.959       0.917  0.0296             2.45
23 mu_0       0.5      0.970       0.977  0.210              1.80
24 mu_0       0.6      0.974       0.981  0.415              1.62
25 mu_0       0.7      0.976       0.983  0.344              1.41
26 mu_0       0.8      0.984       0.987  0.0635             2.16
27 mu_0       0.9      0.975       0.910  0.00143            3.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     287.      0.000104   2.62e-17  28202.  
 2 mu         0.2     126.      0.00948    1.37e-11  12199.  
 3 mu         0.3      34.5     0.0907     3.05e- 8   3225.  
 4 mu         0.4       7.20    0.421      7.20e- 6    580.  
 5 mu         0.5       1.74    0.864      5.00e- 4     67.7 
 6 mu         0.6       1.27    0.992      1.60e- 2     14.2 
 7 mu         0.7       3.46    0.907      3.15e- 3    146.  
 8 mu         0.8      16.6     0.321      1.23e- 5    941.  
 9 mu         0.9      59.4     0.0225     5.99e-10   3486.  
10 mu_1       0.1     206.      0.000693   2.62e-16  20144.  
11 mu_1       0.2      46.2     0.0292     6.87e-11   4357.  
12 mu_1       0.3       9.31    0.197      1.02e- 7    768.  
13 mu_1       0.4       2.18    0.635      1.80e- 5    104.  
14 mu_1       0.5       1.11    0.969      9.99e- 4      9.67
15 mu_1       0.6       1.39    0.951      1.64e- 2     22.3 
16 mu_1       0.7       4.35    0.719      5.20e- 4    197.  
17 mu_1       0.8      19.4     0.237      3.23e- 6   1111.  
18 mu_1       0.9      62.4     0.0154     1.40e-10   3658.  
19 mu_0       0.1     296.      0.0000368  0         29097.  
20 mu_0       0.2     145.      0.00438    0         14160.  
21 mu_0       0.3      45.3     0.0460     0          4278.  
22 mu_0       0.4      10.6     0.268      0           897.  
23 mu_0       0.5       2.37    0.715      0           126.  
24 mu_0       0.6       1.09    0.935      0            10.4 
25 mu_0       0.7       1.41    0.933      0            27.0 
26 mu_0       0.8       5.37    0.495      0           261.  
27 mu_0       0.9      33.0     0.0523     0          1937.  
[1] "Total run time was 97 seconds"
