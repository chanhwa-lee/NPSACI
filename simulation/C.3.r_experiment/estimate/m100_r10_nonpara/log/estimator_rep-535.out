
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1286"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10  2  4  5  7  5  8  7  6  9  6  4  9  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04262 0.33995 0.60551 0.97330 6.00000 
[1] "event indicator table: "

  0   1 
770 516 
[1] "treatment indicator table: "

  0   1 
446 840 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 672
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 44.354 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.192 0.111 
 2 mu         0.1   0.2 0.155 0.0920
 3 mu         0.1   0.3 0.154 0.0789
 4 mu         0.1   0.4 0.188 0.117 
 5 mu         0.1   0.5 0.183 0.112 
 6 mu         0.2   0.1 0.256 0.0750
 7 mu         0.2   0.2 0.262 0.0736
 8 mu         0.2   0.3 0.277 0.0709
 9 mu         0.2   0.4 0.319 0.0922
10 mu         0.2   0.5 0.342 0.0969
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.273       0.0161 0.000000182       4.64
 2 mu         0.2      0.622       0.196  0.000189          6.60
 3 mu         0.3      0.844       0.541  0.00774           5.14
 4 mu         0.4      0.936       0.867  0.0641            3.20
 5 mu         0.5      0.977       0.996  0.249             2.02
 6 mu         0.6      1.01        1.01   0.443             1.56
 7 mu         0.7      1.02        1.01   0.459             1.82
 8 mu         0.8      0.978       0.961  0.123             3.07
 9 mu         0.9      0.828       0.814  0.00430           3.46
10 mu_1       0.1      0.573       0.0616 0.00000113        6.64
11 mu_1       0.2      0.819       0.389  0.000593          7.21
12 mu_1       0.3      0.929       0.759  0.0164            4.18
13 mu_1       0.4      0.966       0.986  0.109             2.72
14 mu_1       0.5      0.994       0.978  0.307             1.80
15 mu_1       0.6      1.02        1.01   0.504             1.53
16 mu_1       0.7      1.02        1.01   0.384             1.95
17 mu_1       0.8      0.967       0.923  0.0933            3.29
18 mu_1       0.9      0.816       0.790  0.00309           3.33
19 mu_0       0.1      0.239       0.0105 0.0000000775      4.42
20 mu_0       0.2      0.573       0.142  0.0000887         6.44
21 mu_0       0.3      0.807       0.450  0.00403           5.65
22 mu_0       0.4      0.915       0.777  0.0341            3.52
23 mu_0       0.5      0.961       0.991  0.151             2.33
24 mu_0       0.6      0.999       1.01   0.347             1.62
25 mu_0       0.7      1.03        1.02   0.509             1.64
26 mu_0       0.8      1.02        0.981  0.240             2.50
27 mu_0       0.9      0.936       0.902  0.0152            4.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.05   0.0000260   3.88e-16     84.9 
 2 mu         0.2       1.10   0.00393     1.81e-10     46.5 
 3 mu         0.3       1.09   0.0528      3.51e- 7     16.1 
 4 mu         0.4       1.06   0.241       7.11e- 5      9.83
 5 mu         0.5       1.05   0.659       4.11e- 3      7.89
 6 mu         0.6       1.21   1.04        4.39e- 2      3.40
 7 mu         0.7       2.22   1.28        3.36e- 3     63.7 
 8 mu         0.8      10.8    0.957       4.43e- 5    805.  
 9 mu         0.9      80.5    0.254       5.24e- 9   7545.  
10 mu_1       0.1       1.16   0.000162    3.68e-15     70.8 
11 mu_1       0.2       1.06   0.0134      8.58e-10     20.9 
12 mu_1       0.3       1.06   0.116       1.11e- 6     12.8 
13 mu_1       0.4       1.05   0.454       1.69e- 4     10.3 
14 mu_1       0.5       1.09   0.806       7.81e- 3      6.64
15 mu_1       0.6       1.32   1.12        9.46e- 3      5.67
16 mu_1       0.7       2.67   1.29        3.99e- 4     91.0 
17 mu_1       0.8      13.1    0.812       4.62e- 6   1006.  
18 mu_1       0.9      89.1    0.198       1.53e- 9   8383.  
19 mu_0       0.1       1.04   0.00000963  0            86.5 
20 mu_0       0.2       1.11   0.00148     0            53.3 
21 mu_0       0.3       1.11   0.0246      0            21.0 
22 mu_0       0.4       1.06   0.115       0            10.3 
23 mu_0       0.5       1.02   0.390       0             9.13
24 mu_0       0.6       1.03   0.808       0             4.22
25 mu_0       0.7       1.17   1.10        0             5.50
26 mu_0       0.8       1.58   0.914       0            12.4 
27 mu_0       0.9       2.92   0.236       0            64.7 
[1] "Total run time was 47.646 seconds"
