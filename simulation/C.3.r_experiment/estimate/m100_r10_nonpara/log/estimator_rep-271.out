
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1272"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 10  8  4  5  5  5  7  9  5  4  5  6  4 11  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0235  0.3243  0.5931  1.0000  4.0000 
[1] "event indicator table: "

  0   1 
751 521 
[1] "treatment indicator table: "

  0   1 
483 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.298 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.428 0.175 
 2 mu         0.1   0.2 0.573 0.171 
 3 mu         0.1   0.3 0.626 0.185 
 4 mu         0.1   0.4 0.654 0.194 
 5 mu         0.1   0.5 0.668 0.200 
 6 mu         0.2   0.1 0.379 0.0720
 7 mu         0.2   0.2 0.470 0.0753
 8 mu         0.2   0.3 0.525 0.0781
 9 mu         0.2   0.4 0.548 0.0750
10 mu         0.2   0.5 0.564 0.0730
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.08        0.130  0.00000944     19.0 
 2 mu         0.2      0.907       0.550  0.00328         3.70
 3 mu         0.3      0.964       0.839  0.0582          3.99
 4 mu         0.4      1.01        0.954  0.249           2.66
 5 mu         0.5      1.04        1.02   0.411           1.77
 6 mu         0.6      1.04        1.02   0.453           1.57
 7 mu         0.7      1.03        1.01   0.588           1.61
 8 mu         0.8      1.01        1.02   0.318           1.95
 9 mu         0.9      0.958       0.955  0.0360          2.71
10 mu_1       0.1      0.739       0.341  0.0000475       4.23
11 mu_1       0.2      0.917       0.803  0.00835         4.22
12 mu_1       0.3      0.995       0.952  0.101           3.74
13 mu_1       0.4      1.03        1.01   0.205           2.13
14 mu_1       0.5      1.04        1.05   0.420           1.78
15 mu_1       0.6      1.04        1.03   0.495           1.58
16 mu_1       0.7      1.03        1.02   0.493           1.67
17 mu_1       0.8      1.01        0.983  0.249           1.98
18 mu_1       0.9      0.954       0.931  0.0266          2.99
19 mu_0       0.1      1.12        0.0992 0.00000521     21.1 
20 mu_0       0.2      0.905       0.450  0.00201         4.58
21 mu_0       0.3      0.950       0.783  0.0398          4.10
22 mu_0       0.4      0.997       0.911  0.222           3.01
23 mu_0       0.5      1.03        1.02   0.289           1.89
24 mu_0       0.6      1.04        1.06   0.389           1.75
25 mu_0       0.7      1.04        1.05   0.606           1.54
26 mu_0       0.8      1.02        1.02   0.325           1.83
27 mu_0       0.9      0.992       0.999  0.121           2.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.950   0.0000534   2.15e-14     41.7 
 2 mu         0.2      1.08    0.00540     1.58e- 9     20.3 
 3 mu         0.3      1.08    0.0576      9.10e- 7      7.90
 4 mu         0.4      0.997   0.291       7.78e- 5      5.14
 5 mu         0.5      0.958   0.780       2.30e- 3      2.80
 6 mu         0.6      1.03    0.983       1.48e- 2      2.49
 7 mu         0.7      1.11    1.18        5.49e- 4      3.04
 8 mu         0.8      1.15    0.834       2.15e- 6      5.69
 9 mu         0.9      1.13    0.0967      1.05e-10      8.98
10 mu_1       0.1      1.22    0.000363    1.93e-13     32.0 
11 mu_1       0.2      1.08    0.0171      7.45e- 9     11.7 
12 mu_1       0.3      1.03    0.143       2.85e- 6      7.06
13 mu_1       0.4      0.956   0.484       1.83e- 4      4.54
14 mu_1       0.5      0.967   0.940       4.34e- 3      2.80
15 mu_1       0.6      1.06    1.12        1.90e- 3      2.64
16 mu_1       0.7      1.13    1.23        6.03e- 5      3.10
17 mu_1       0.8      1.16    0.699       4.65e- 7      6.05
18 mu_1       0.9      1.14    0.0700      2.46e-11      9.98
19 mu_0       0.1      0.920   0.00000870  0            42.7 
20 mu_0       0.2      1.08    0.00180     0            23.4 
21 mu_0       0.3      1.10    0.0253      0             9.55
22 mu_0       0.4      1.02    0.156       0             5.84
23 mu_0       0.5      0.948   0.532       0             3.42
24 mu_0       0.6      0.974   0.974       0             2.80
25 mu_0       0.7      1.05    1.15        0             2.90
26 mu_0       0.8      1.09    0.934       0             4.27
27 mu_0       0.9      1.08    0.192       0             8.62
[1] "Total run time was 46.724 seconds"
