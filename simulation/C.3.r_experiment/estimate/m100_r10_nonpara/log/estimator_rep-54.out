
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1267"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8  4  7  7  5  6  4  7  7  8  4 10  7  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04241 0.36918 0.65236 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
747 520 
[1] "treatment indicator table: "

  0   1 
471 796 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 187.311 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.318 0.171
 2 mu         0.1   0.2 0.352 0.163
 3 mu         0.1   0.3 0.380 0.155
 4 mu         0.1   0.4 0.423 0.147
 5 mu         0.1   0.5 0.468 0.139
 6 mu         0.2   0.1 0.303 0.117
 7 mu         0.2   0.2 0.356 0.122
 8 mu         0.2   0.3 0.397 0.125
 9 mu         0.2   0.4 0.460 0.126
10 mu         0.2   0.5 0.510 0.128
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.713       0.0756 0.000000814     16.0 
 2 mu         0.2      0.807       0.401  0.000708        17.6 
 3 mu         0.3      0.861       0.649  0.0231           9.27
 4 mu         0.4      0.952       0.822  0.178            5.23
 5 mu         0.5      1.01        0.933  0.394            3.31
 6 mu         0.6      1.02        0.996  0.510            1.79
 7 mu         0.7      1.02        1.03   0.565            1.77
 8 mu         0.8      1.03        1.05   0.327            1.93
 9 mu         0.9      1.08        1.03   0.0266           3.52
10 mu_1       0.1      0.906       0.215  0.00000455      24.7 
11 mu_1       0.2      0.858       0.626  0.00201         13.6 
12 mu_1       0.3      0.913       0.770  0.0443           5.20
13 mu_1       0.4      0.990       0.904  0.261            4.97
14 mu_1       0.5      1.02        0.969  0.448            2.72
15 mu_1       0.6      1.02        1.02   0.479            1.68
16 mu_1       0.7      1.02        1.04   0.542            1.81
17 mu_1       0.8      1.03        1.04   0.269            2.05
18 mu_1       0.9      1.09        0.985  0.0202           3.61
19 mu_0       0.1      0.691       0.0588 0.000000399     15.1 
20 mu_0       0.2      0.794       0.322  0.000383        18.6 
21 mu_0       0.3      0.838       0.607  0.0140          11.1 
22 mu_0       0.4      0.927       0.757  0.123            5.40
23 mu_0       0.5      0.997       0.899  0.278            3.90
24 mu_0       0.6      1.02        0.976  0.451            1.94
25 mu_0       0.7      1.02        0.980  0.433            1.70
26 mu_0       0.8      1.01        1.02   0.421            1.83
27 mu_0       0.9      1.00        0.976  0.0838           2.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      8.17     0.0000640  4.55e-17    577.  
 2 mu         0.2     12.1      0.00711    1.19e-11    562.  
 3 mu         0.3      8.53     0.0980     1.76e- 8    381.  
 4 mu         0.4      4.06     0.410      3.13e- 6    139.  
 5 mu         0.5      1.80     0.962      1.74e- 4     26.4 
 6 mu         0.6      1.12     1.02       4.62e- 3      3.84
 7 mu         0.7      0.993    0.958      3.56e- 2      3.72
 8 mu         0.8      1.11     0.641      4.65e- 4      9.35
 9 mu         0.9      1.72     0.119      4.55e- 8     61.6 
10 mu_1       0.1     13.3      0.000354   4.55e-16    825.  
11 mu_1       0.2     11.5      0.0251     5.97e-11    542.  
12 mu_1       0.3      6.19     0.213      5.88e- 8    282.  
13 mu_1       0.4      2.73     0.676      7.82e- 6     77.2 
14 mu_1       0.5      1.38     1.12       3.47e- 4     11.7 
15 mu_1       0.6      1.02     0.951      7.71e- 3      4.14
16 mu_1       0.7      0.982    0.925      1.09e- 2      3.44
17 mu_1       0.8      1.14     0.491      9.57e- 5     11.7 
18 mu_1       0.9      1.79     0.0838     1.12e- 8     68.4 
19 mu_0       0.1      7.60     0.0000271  0           550.  
20 mu_0       0.2     12.3      0.00331    0           602.  
21 mu_0       0.3      9.53     0.0410     0           423.  
22 mu_0       0.4      4.94     0.247      0           180.  
23 mu_0       0.5      2.23     0.698      0            41.1 
24 mu_0       0.6      1.27     1.05       0             4.69
25 mu_0       0.7      1.02     0.961      0             4.38
26 mu_0       0.8      0.994    0.982      0             3.71
27 mu_0       0.9      1.05     0.191      0             7.32
[1] "Total run time was 193.343 seconds"
