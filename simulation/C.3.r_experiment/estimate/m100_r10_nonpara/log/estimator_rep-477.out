
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1308"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  3  4  8  6  8  5  6  6  5  6  7  8  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04411 0.38936 0.63035 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
749 559 
[1] "treatment indicator table: "

  0   1 
475 833 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 88.466 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.675 0.190 
 2 mu         0.1   0.2 0.912 0.243 
 3 mu         0.1   0.3 0.953 0.256 
 4 mu         0.1   0.4 1.06  0.287 
 5 mu         0.1   0.5 1.16  0.319 
 6 mu         0.2   0.1 0.479 0.0911
 7 mu         0.2   0.2 0.645 0.121 
 8 mu         0.2   0.3 0.682 0.121 
 9 mu         0.2   0.4 0.761 0.144 
10 mu         0.2   0.5 0.812 0.162 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.85        0.0965 0.0000397     36.6 
 2 mu         0.2      1.37        0.501  0.00730       16.3 
 3 mu         0.3      1.12        0.822  0.0853         9.69
 4 mu         0.4      1.02        0.950  0.272          3.14
 5 mu         0.5      1.00        0.997  0.293          1.68
 6 mu         0.6      1.00        0.975  0.546          1.75
 7 mu         0.7      1.01        1.02   0.503          1.77
 8 mu         0.8      1.01        1.00   0.295          1.70
 9 mu         0.9      0.963       0.900  0.0349         2.74
10 mu_1       0.1      1.39        0.325  0.000199      17.7 
11 mu_1       0.2      1.15        0.768  0.0184        15.3 
12 mu_1       0.3      1.03        0.912  0.142          6.06
13 mu_1       0.4      0.996       0.997  0.380          1.82
14 mu_1       0.5      0.997       0.972  0.298          1.78
15 mu_1       0.6      1.00        0.978  0.506          1.77
16 mu_1       0.7      1.01        1.00   0.499          1.72
17 mu_1       0.8      1.01        1.02   0.235          1.70
18 mu_1       0.9      0.957       0.883  0.0279         2.87
19 mu_0       0.1      1.90        0.0750 0.0000220     40.6 
20 mu_0       0.2      1.43        0.392  0.00452       16.7 
21 mu_0       0.3      1.16        0.765  0.0453        11.2 
22 mu_0       0.4      1.03        0.910  0.160          4.21
23 mu_0       0.5      1.00        0.983  0.287          1.91
24 mu_0       0.6      1.01        0.993  0.426          1.81
25 mu_0       0.7      1.01        1.02   0.471          1.89
26 mu_0       0.8      1.03        1.04   0.462          1.78
27 mu_0       0.9      1.02        1.00   0.0982         1.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.64    0.0000483  5.24e-17     84.0 
 2 mu         0.2       2.17    0.00625    2.44e-11     59.1 
 3 mu         0.3       1.90    0.0855     4.74e- 8     49.1 
 4 mu         0.4       1.51    0.334      9.61e- 6     28.5 
 5 mu         0.5       1.27    0.744      5.56e- 4     12.1 
 6 mu         0.6       1.18    0.926      1.42e- 2      5.38
 7 mu         0.7       1.16    1.04       1.03e- 3      4.54
 8 mu         0.8       1.27    0.786      3.52e- 6     11.2 
 9 mu         0.9       1.41    0.101      1.53e-10     23.4 
10 mu_1       0.1       2.33    0.000324   4.98e-16     84.0 
11 mu_1       0.2       2.12    0.0201     1.16e-10     56.2 
12 mu_1       0.3       1.70    0.184      1.50e- 7     43.7 
13 mu_1       0.4       1.38    0.570      2.28e- 5     19.0 
14 mu_1       0.5       1.22    0.888      1.06e- 3     10.9 
15 mu_1       0.6       1.17    0.969      7.62e- 3      4.42
16 mu_1       0.7       1.17    1.07       2.46e- 4      4.96
17 mu_1       0.8       1.30    0.636      7.34e- 7     12.7 
18 mu_1       0.9       1.41    0.0720     2.83e-11     23.4 
19 mu_0       0.1       1.57    0.0000165  0            84.0 
20 mu_0       0.2       2.18    0.00239    0            65.5 
21 mu_0       0.3       1.99    0.0379     0            51.5 
22 mu_0       0.4       1.60    0.182      0            34.8 
23 mu_0       0.5       1.33    0.523      0            13.7 
24 mu_0       0.6       1.20    0.861      0             7.40
25 mu_0       0.7       1.14    0.988      0             4.71
26 mu_0       0.8       1.15    0.974      0             5.98
27 mu_0       0.9       1.38    0.289      0            23.4 
[1] "Total run time was 94.091 seconds"
