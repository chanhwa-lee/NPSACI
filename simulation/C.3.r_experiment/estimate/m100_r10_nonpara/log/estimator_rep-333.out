
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1244"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9 10  5  8  3  2  7  4  4  8  7  3  8  7 11  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02803 0.33247 0.59362 0.97645 5.00000 
[1] "event indicator table: "

  0   1 
745 499 
[1] "treatment indicator table: "

  0   1 
500 744 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.806 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.390 0.0824
 2 mu         0.1   0.2 0.479 0.107 
 3 mu         0.1   0.3 0.513 0.103 
 4 mu         0.1   0.4 0.570 0.120 
 5 mu         0.1   0.5 0.611 0.128 
 6 mu         0.2   0.1 0.321 0.0421
 7 mu         0.2   0.2 0.413 0.0539
 8 mu         0.2   0.3 0.456 0.0500
 9 mu         0.2   0.4 0.502 0.0571
10 mu         0.2   0.5 0.531 0.0606
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.931        0.301 0.0000978     14.2 
 2 mu         0.2      0.960        0.817 0.0157         5.04
 3 mu         0.3      0.981        0.979 0.116          2.44
 4 mu         0.4      0.988        0.991 0.302          1.69
 5 mu         0.5      1.01         1.00  0.435          1.69
 6 mu         0.6      1.02         1.02  0.563          1.60
 7 mu         0.7      1.02         0.979 0.524          1.70
 8 mu         0.8      0.976        1.00  0.125          1.91
 9 mu         0.9      0.938        0.878 0.00315        2.64
10 mu_1       0.1      0.965        0.701 0.000464       8.20
11 mu_1       0.2      1.00         0.944 0.0364         3.39
12 mu_1       0.3      0.998        1.01  0.175          1.88
13 mu_1       0.4      0.995        0.972 0.371          1.64
14 mu_1       0.5      1.01         0.994 0.471          1.66
15 mu_1       0.6      1.02         0.998 0.533          1.61
16 mu_1       0.7      1.01         0.988 0.444          1.75
17 mu_1       0.8      0.970        1.01  0.0948         1.92
18 mu_1       0.9      0.938        0.895 0.00218        2.77
19 mu_0       0.1      0.927        0.249 0.0000571     15.7 
20 mu_0       0.2      0.950        0.771 0.0103         5.48
21 mu_0       0.3      0.974        0.930 0.0899         2.68
22 mu_0       0.4      0.984        0.989 0.256          1.72
23 mu_0       0.5      1.00         0.972 0.399          1.72
24 mu_0       0.6      1.02         0.982 0.595          1.58
25 mu_0       0.7      1.03         0.985 0.509          1.64
26 mu_0       0.8      1.00         0.965 0.246          1.86
27 mu_0       0.9      0.940        0.932 0.0119         1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.27    0.000214   7.74e-16     67.3 
 2 mu         0.2       1.37    0.0227     1.01e-10     29.1 
 3 mu         0.3       1.24    0.134      1.00e- 7     10.6 
 4 mu         0.4       1.11    0.606      1.33e- 5      5.81
 5 mu         0.5       1.08    0.866      5.91e- 4      3.59
 6 mu         0.6       1.10    1.08       2.56e- 3      3.11
 7 mu         0.7       1.14    1.02       3.50e- 5      3.45
 8 mu         0.8       1.17    0.864      6.95e- 8      4.05
 9 mu         0.9       1.25    0.138      1.34e-12     12.9 
10 mu_1       0.1       1.51    0.00132    7.74e-15     48.1 
11 mu_1       0.2       1.40    0.0759     5.07e-10     16.3 
12 mu_1       0.3       1.24    0.344      3.33e- 7      8.59
13 mu_1       0.4       1.12    0.769      3.32e- 5      4.27
14 mu_1       0.5       1.10    1.10       1.18e- 3      3.80
15 mu_1       0.6       1.12    1.06       4.75e- 4      2.89
16 mu_1       0.7       1.15    1.11       5.55e- 6      3.45
17 mu_1       0.8       1.18    0.701      9.65e- 9      4.49
18 mu_1       0.9       1.26    0.0920     1.66e-13     14.3 
19 mu_0       0.1       1.25    0.0000874  0            69.4 
20 mu_0       0.2       1.36    0.00729    0            33.8 
21 mu_0       0.3       1.24    0.0721     0            11.9 
22 mu_0       0.4       1.11    0.406      0             6.83
23 mu_0       0.5       1.06    0.802      0             4.00
24 mu_0       0.6       1.06    0.942      0             3.66
25 mu_0       0.7       1.10    1.08       0             3.45
26 mu_0       0.8       1.13    0.805      0             3.74
27 mu_0       0.9       1.11    0.186      0             7.71
[1] "Total run time was 54.987 seconds"
