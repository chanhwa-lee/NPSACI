
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1323"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  2  5  5  6  6  4  8  9  6  4  3  5 11 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04423 0.38354 0.62404 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
751 572 
[1] "treatment indicator table: "

  0   1 
501 822 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 711
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.606 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.329 0.144 
 2 mu         0.1   0.2 0.340 0.109 
 3 mu         0.1   0.3 0.362 0.0974
 4 mu         0.1   0.4 0.340 0.100 
 5 mu         0.1   0.5 0.328 0.106 
 6 mu         0.2   0.1 0.381 0.120 
 7 mu         0.2   0.2 0.428 0.0950
 8 mu         0.2   0.3 0.482 0.0918
 9 mu         0.2   0.4 0.484 0.0962
10 mu         0.2   0.5 0.488 0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.580       0.0437 0.00000509     12.8 
 2 mu         0.2      0.925       0.307  0.00141        11.6 
 3 mu         0.3      1.00        0.674  0.0276          6.56
 4 mu         0.4      1.02        0.919  0.147           3.01
 5 mu         0.5      1.02        1.00   0.406           2.23
 6 mu         0.6      1.00        0.984  0.506           1.66
 7 mu         0.7      0.969       0.960  0.350           1.77
 8 mu         0.8      0.941       0.962  0.0499          2.37
 9 mu         0.9      0.883       0.763  0.000651        3.29
10 mu_1       0.1      0.916       0.167  0.0000300      13.8 
11 mu_1       0.2      1.04        0.557  0.00432        10.3 
12 mu_1       0.3      1.04        0.861  0.0571          4.54
13 mu_1       0.4      1.03        0.993  0.237           2.77
14 mu_1       0.5      1.03        1.03   0.445           2.06
15 mu_1       0.6      0.998       1.01   0.438           1.45
16 mu_1       0.7      0.963       0.942  0.276           1.90
17 mu_1       0.8      0.938       0.958  0.0355          2.40
18 mu_1       0.9      0.880       0.741  0.000417        3.58
19 mu_0       0.1      0.543       0.0315 0.00000224     12.7 
20 mu_0       0.2      0.896       0.236  0.000687       11.9 
21 mu_0       0.3      0.990       0.593  0.0150          7.42
22 mu_0       0.4      1.01        0.870  0.0856          3.30
23 mu_0       0.5      1.02        0.974  0.270           2.40
24 mu_0       0.6      1.01        1.01   0.474           1.99
25 mu_0       0.7      0.981       0.963  0.393           1.46
26 mu_0       0.8      0.953       0.922  0.108           2.27
27 mu_0       0.9      0.913       0.885  0.00276         2.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.522    0.000100   2.14e-14     19.2 
 2 mu         0.2      1.08     0.00766    2.49e- 9     23.3 
 3 mu         0.3      1.36     0.0746     2.15e- 6     16.0 
 4 mu         0.4      1.35     0.361      2.45e- 4     16.0 
 5 mu         0.5      1.16     0.944      4.50e- 3      7.11
 6 mu         0.6      1.02     1.05       9.60e- 3      2.50
 7 mu         0.7      1.03     1.00       1.53e- 4      3.62
 8 mu         0.8      1.18     0.719      3.47e- 7     10.7 
 9 mu         0.9      1.50     0.150      7.55e-12     39.6 
10 mu_1       0.1      1.04     0.000594   2.02e-13     30.3 
11 mu_1       0.2      1.32     0.0293     1.18e- 8     20.2 
12 mu_1       0.3      1.42     0.185      6.76e- 6     18.4 
13 mu_1       0.4      1.30     0.597      5.78e- 4     14.0 
14 mu_1       0.5      1.10     1.01       8.99e- 3      4.98
15 mu_1       0.6      1.01     0.988      2.53e- 3      2.92
16 mu_1       0.7      1.05     0.968      3.45e- 5      3.77
17 mu_1       0.8      1.22     0.582      6.86e- 8     12.6 
18 mu_1       0.9      1.53     0.110      1.32e-12     41.6 
19 mu_0       0.1      0.465    0.0000354  0            17.9 
20 mu_0       0.2      1.02     0.00193    0            24.5 
21 mu_0       0.3      1.34     0.0347     0            17.8 
22 mu_0       0.4      1.38     0.215      0            17.3 
23 mu_0       0.5      1.21     0.685      0             9.25
24 mu_0       0.6      1.04     1.05       0             3.10
25 mu_0       0.7      0.981    0.883      0             3.60
26 mu_0       0.8      1.03     0.994      0             3.89
27 mu_0       0.9      1.24     0.264      0            22.0 
[1] "Total run time was 70.283 seconds"
