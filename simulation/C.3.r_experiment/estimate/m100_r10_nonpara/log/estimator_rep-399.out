
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1239"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  3  6 10  9  9  5  5  4  6  6  7  6  7  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02353 0.31111 0.56619 0.92971 5.17763 
[1] "event indicator table: "

  0   1 
709 530 
[1] "treatment indicator table: "

  0   1 
492 747 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.291 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.729 0.358
 2 mu         0.1   0.2 0.886 0.428
 3 mu         0.1   0.3 0.934 0.460
 4 mu         0.1   0.4 1.09  0.520
 5 mu         0.1   0.5 1.11  0.544
 6 mu         0.2   0.1 0.452 0.142
 7 mu         0.2   0.2 0.555 0.174
 8 mu         0.2   0.3 0.598 0.184
 9 mu         0.2   0.4 0.689 0.209
10 mu         0.2   0.5 0.699 0.218
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.55        0.0818 0.00000804     82.3 
 2 mu         0.2      1.07        0.418  0.00306        32.1 
 3 mu         0.3      0.983       0.764  0.0626         11.2 
 4 mu         0.4      0.981       0.934  0.268           3.57
 5 mu         0.5      0.995       0.954  0.398           2.02
 6 mu         0.6      1.01        0.974  0.354           1.97
 7 mu         0.7      1.03        1.04   0.407           2.00
 8 mu         0.8      1.04        1.05   0.147           2.88
 9 mu         0.9      1.07        0.752  0.00754        12.2 
10 mu_1       0.1      0.661       0.204  0.0000407       6.71
11 mu_1       0.2      0.827       0.646  0.00796         4.63
12 mu_1       0.3      0.937       0.852  0.112           3.65
13 mu_1       0.4      0.982       0.938  0.341           2.05
14 mu_1       0.5      1.00        0.973  0.345           2.07
15 mu_1       0.6      1.02        0.982  0.389           1.88
16 mu_1       0.7      1.03        1.03   0.320           2.04
17 mu_1       0.8      1.04        1.05   0.118           3.01
18 mu_1       0.9      1.06        0.703  0.00565        13.6 
19 mu_0       0.1      1.64        0.0626 0.00000441     91.5 
20 mu_0       0.2      1.13        0.337  0.00184        40.1 
21 mu_0       0.3      1.00        0.721  0.0414         15.9 
22 mu_0       0.4      0.981       0.913  0.156           5.60
23 mu_0       0.5      0.987       0.927  0.265           2.04
24 mu_0       0.6      0.999       0.961  0.303           2.11
25 mu_0       0.7      1.01        0.958  0.521           1.91
26 mu_0       0.8      1.03        1.03   0.263           2.35
27 mu_0       0.9      1.08        1.02   0.0245          3.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.89     0.000152   6.67e-15    287.  
 2 mu         0.2      3.81     0.0118     4.37e-10    174.  
 3 mu         0.3      2.49     0.107      2.87e- 7     60.0 
 4 mu         0.4      1.69     0.453      2.87e- 5     31.7 
 5 mu         0.5      1.28     0.862      1.02e- 3     16.3 
 6 mu         0.6      1.07     0.932      1.88e- 2      6.60
 7 mu         0.7      0.994    0.987      3.26e- 4      3.09
 8 mu         0.8      1.02     0.631      6.49e- 7      5.94
 9 mu         0.9      1.14     0.0763     1.25e-11     15.7 
10 mu_1       0.1      5.11     0.00105    6.67e-14    319.  
11 mu_1       0.2      3.24     0.0379     2.19e- 9    100.  
12 mu_1       0.3      2.02     0.235      9.58e- 7     40.0 
13 mu_1       0.4      1.45     0.780      7.17e- 5     27.9 
14 mu_1       0.5      1.17     0.898      2.04e- 3     11.5 
15 mu_1       0.6      1.03     0.924      4.43e- 3      5.83
16 mu_1       0.7      0.980    0.977      5.18e- 5      3.33
17 mu_1       0.8      1.03     0.509      9.02e- 8      6.32
18 mu_1       0.9      1.16     0.0551     1.55e-12     17.4 
19 mu_0       0.1      3.76     0.0000612  0           283.  
20 mu_0       0.2      3.96     0.00518    0           194.  
21 mu_0       0.3      2.69     0.0544     0            68.5 
22 mu_0       0.4      1.84     0.303      0            34.1 
23 mu_0       0.5      1.39     0.763      0            21.0 
24 mu_0       0.6      1.14     0.842      0             7.77
25 mu_0       0.7      1.02     0.972      0             4.15
26 mu_0       0.8      1.00     0.823      0             4.54
27 mu_0       0.9      1.04     0.217      0             8.25
[1] "Total run time was 65.081 seconds"
