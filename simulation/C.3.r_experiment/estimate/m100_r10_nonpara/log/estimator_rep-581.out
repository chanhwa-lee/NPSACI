
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1220"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6 12  2  7  7  6  5  3 13  5  4  8  5  6  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02924 0.32490 0.61262 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
729 491 
[1] "treatment indicator table: "

  0   1 
452 768 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 108.589 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.405 0.0905
 2 mu         0.1   0.2 0.421 0.0719
 3 mu         0.1   0.3 0.421 0.0761
 4 mu         0.1   0.4 0.505 0.0821
 5 mu         0.1   0.5 0.493 0.0773
 6 mu         0.2   0.1 0.457 0.0700
 7 mu         0.2   0.2 0.528 0.0627
 8 mu         0.2   0.3 0.567 0.0643
 9 mu         0.2   0.4 0.641 0.0756
10 mu         0.2   0.5 0.646 0.0734
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.701        0.187 0.000000967      6.02
 2 mu         0.2      1.02         0.622 0.000779         7.40
 3 mu         0.3      1.04         0.952 0.0196           3.31
 4 mu         0.4      0.996        1.00  0.143            1.96
 5 mu         0.5      0.989        0.983 0.409            1.65
 6 mu         0.6      0.998        1.00  0.518            1.55
 7 mu         0.7      1.00         1.00  0.483            1.57
 8 mu         0.8      1.01         1.02  0.282            1.97
 9 mu         0.9      0.967        0.819 0.0282           2.95
10 mu_1       0.1      1.03         0.498 0.00000538       9.51
11 mu_1       0.2      1.09         0.863 0.00219          5.95
12 mu_1       0.3      1.02         0.985 0.0436           2.32
13 mu_1       0.4      0.989        1.02  0.241            1.85
14 mu_1       0.5      0.996        1.02  0.464            1.53
15 mu_1       0.6      1.00         1.01  0.560            1.51
16 mu_1       0.7      1.01         0.991 0.458            1.63
17 mu_1       0.8      1.01         1.03  0.218            2.13
18 mu_1       0.9      0.958        0.792 0.0204           3.12
19 mu_0       0.1      0.665        0.152 0.000000475      5.63
20 mu_0       0.2      1.00         0.569 0.000368         7.77
21 mu_0       0.3      1.04         0.968 0.00937          3.84
22 mu_0       0.4      1.00         0.994 0.0777           2.16
23 mu_0       0.5      0.982        0.972 0.332            1.79
24 mu_0       0.6      0.989        1.01  0.453            1.62
25 mu_0       0.7      0.998        1.00  0.492            1.49
26 mu_0       0.8      1.01         1.01  0.467            1.70
27 mu_0       0.9      1.05         1.08  0.0979           2.24
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.585   0.0000215   9.76e-16     26.4 
 2 mu         0.2      0.882   0.00319     1.28e-10     23.1 
 3 mu         0.3      0.988   0.0534      1.26e- 7     13.6 
 4 mu         0.4      1.00    0.295       1.68e- 5      9.77
 5 mu         0.5      1.01    0.772       7.45e- 4      4.18
 6 mu         0.6      1.03    0.915       1.65e- 2      2.90
 7 mu         0.7      1.06    1.06        1.82e- 3      2.87
 8 mu         0.8      1.05    0.861       1.07e- 5      3.25
 9 mu         0.9      1.15    0.120       1.04e- 9     16.3 
10 mu_1       0.1      0.992   0.000124    9.76e-15     33.0 
11 mu_1       0.2      0.965   0.0116      6.40e-10     14.5 
12 mu_1       0.3      0.960   0.130       4.20e- 7     12.3 
13 mu_1       0.4      0.970   0.528       4.19e- 5      8.15
14 mu_1       0.5      1.00    0.935       1.49e- 3      3.35
15 mu_1       0.6      1.05    0.976       2.05e- 2      2.93
16 mu_1       0.7      1.08    1.13        5.79e- 4      2.99
17 mu_1       0.8      1.08    0.705       2.96e- 6      3.43
18 mu_1       0.9      1.18    0.0858      2.57e-10     18.1 
19 mu_0       0.1      0.540   0.00000429  0            25.7 
20 mu_0       0.2      0.861   0.00144     0            25.3 
21 mu_0       0.3      1.00    0.0216      0            17.0 
22 mu_0       0.4      1.02    0.164       0            10.9 
23 mu_0       0.5      1.01    0.557       0             5.58
24 mu_0       0.6      1.01    1.05        0             3.02
25 mu_0       0.7      1.01    0.943       0             2.75
26 mu_0       0.8      0.964   0.815       0             3.44
27 mu_0       0.9      0.863   0.114       0             5.25
[1] "Total run time was 116.685 seconds"
