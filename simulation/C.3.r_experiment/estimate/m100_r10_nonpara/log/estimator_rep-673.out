
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1203"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  8  4 10  5  3  8  5  6  5  6  9  4  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0341  0.3560  0.6145  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
700 503 
[1] "treatment indicator table: "

  0   1 
438 765 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 83.429 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.224 0.0553
 2 mu         0.1   0.2 0.227 0.0613
 3 mu         0.1   0.3 0.265 0.0766
 4 mu         0.1   0.4 0.293 0.0849
 5 mu         0.1   0.5 0.299 0.0850
 6 mu         0.2   0.1 0.285 0.0467
 7 mu         0.2   0.2 0.304 0.0508
 8 mu         0.2   0.3 0.357 0.0615
 9 mu         0.2   0.4 0.405 0.0693
10 mu         0.2   0.5 0.419 0.0688
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.534       0.0594 0.000000143      10.0 
 2 mu         0.2      0.764       0.395  0.000158          5.19
 3 mu         0.3      0.872       0.695  0.00688           3.59
 4 mu         0.4      0.940       0.901  0.0748            2.34
 5 mu         0.5      0.978       1.00   0.339             1.60
 6 mu         0.6      0.997       0.987  0.663             1.32
 7 mu         0.7      1.00        1.02   0.471             1.53
 8 mu         0.8      0.976       0.992  0.163             1.77
 9 mu         0.9      0.864       0.749  0.00725           2.99
10 mu_1       0.1      0.778       0.197  0.000000888       7.72
11 mu_1       0.2      0.864       0.702  0.000499          4.97
12 mu_1       0.3      0.923       0.835  0.0147            2.77
13 mu_1       0.4      0.968       0.956  0.123             1.91
14 mu_1       0.5      0.991       1.02   0.421             1.49
15 mu_1       0.6      1.00        1.01   0.672             1.32
16 mu_1       0.7      1.00        1.01   0.375             1.55
17 mu_1       0.8      0.969       0.952  0.125             1.99
18 mu_1       0.9      0.848       0.693  0.00510           3.31
19 mu_0       0.1      0.507       0.0418 0.0000000603     10.3 
20 mu_0       0.2      0.739       0.324  0.0000729         5.64
21 mu_0       0.3      0.851       0.618  0.00351           3.93
22 mu_0       0.4      0.922       0.858  0.0429            2.63
23 mu_0       0.5      0.965       0.953  0.234             1.84
24 mu_0       0.6      0.987       0.998  0.508             1.49
25 mu_0       0.7      1.00        1.01   0.605             1.50
26 mu_0       0.8      1.01        0.998  0.315             1.65
27 mu_0       0.9      1.01        1.01   0.0266            2.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.368    0.0000883  7.93e-15     13.6 
 2 mu         0.2      0.988    0.00622    9.24e-10     26.5 
 3 mu         0.3      1.23     0.0932     7.97e- 7     21.8 
 4 mu         0.4      1.17     0.366      9.09e- 5     12.6 
 5 mu         0.5      1.04     0.862      3.36e- 3      4.94
 6 mu         0.6      0.972    1.00       5.97e- 2      2.27
 7 mu         0.7      0.983    1.01       8.77e- 3      2.82
 8 mu         0.8      1.12     0.572      1.01e- 4      4.39
 9 mu         0.9      1.37     0.0652     3.51e- 8     14.7 
10 mu_1       0.1      0.903    0.000573   7.49e-14     27.2 
11 mu_1       0.2      1.34     0.0181     4.36e- 9     26.5 
12 mu_1       0.3      1.29     0.237      2.51e- 6     19.3 
13 mu_1       0.4      1.12     0.604      2.15e- 4      8.41
14 mu_1       0.5      0.996    0.966      6.35e- 3      3.29
15 mu_1       0.6      0.955    0.946      5.81e- 2      2.16
16 mu_1       0.7      1.00     1.03       2.51e- 3      3.08
17 mu_1       0.8      1.17     0.465      2.52e- 5      5.14
18 mu_1       0.9      1.39     0.0398     7.80e- 9     15.4 
19 mu_0       0.1      0.308    0.0000221  0            12.1 
20 mu_0       0.2      0.899    0.00344    0            26.5 
21 mu_0       0.3      1.21     0.0356     0            22.8 
22 mu_0       0.4      1.20     0.219      0            15.4 
23 mu_0       0.5      1.09     0.619      0             6.59
24 mu_0       0.6      0.997    0.962      0             2.86
25 mu_0       0.7      0.942    0.961      0             2.33
26 mu_0       0.8      0.956    0.835      0             3.72
27 mu_0       0.9      1.13     0.196      0             8.17
[1] "Total run time was 88.424 seconds"
