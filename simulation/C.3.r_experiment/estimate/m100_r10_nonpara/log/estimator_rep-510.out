
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1239"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  9  6  5  9  5  4  5  5  6  5 13  7  3  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03282 0.36681 0.62818 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
740 499 
[1] "treatment indicator table: "

  0   1 
431 808 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 109.383 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.0989 0.0622
 2 mu         0.1   0.2 0.171  0.0479
 3 mu         0.1   0.3 0.144  0.0534
 4 mu         0.1   0.4 0.340  0.168 
 5 mu         0.1   0.5 0.400  0.212 
 6 mu         0.2   0.1 0.177  0.0557
 7 mu         0.2   0.2 0.263  0.0524
 8 mu         0.2   0.3 0.256  0.0596
 9 mu         0.2   0.4 0.410  0.138 
10 mu         0.2   0.5 0.482  0.173 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.331       0.0203 0.0000000899      5.52
 2 mu         0.2      0.547       0.173  0.0000990         9.09
 3 mu         0.3      0.711       0.439  0.00430           9.39
 4 mu         0.4      0.836       0.759  0.0469            6.97
 5 mu         0.5      0.932       0.895  0.226             4.12
 6 mu         0.6      0.997       0.989  0.440             2.11
 7 mu         0.7      1.03        1.02   0.607             1.89
 8 mu         0.8      1.04        0.995  0.205             2.60
 9 mu         0.9      0.967       0.866  0.0151            3.32
10 mu_1       0.1      0.581       0.0727 0.000000585      11.4 
11 mu_1       0.2      0.705       0.381  0.000325         11.5 
12 mu_1       0.3      0.807       0.704  0.00949           8.10
13 mu_1       0.4      0.890       0.855  0.0787            4.76
14 mu_1       0.5      0.961       0.939  0.309             2.53
15 mu_1       0.6      1.01        1.00   0.519             1.43
16 mu_1       0.7      1.04        1.01   0.531             1.94
17 mu_1       0.8      1.04        0.995  0.162             2.75
18 mu_1       0.9      0.960       0.798  0.0112            3.50
19 mu_0       0.1      0.303       0.0130 0.0000000348      5.49
20 mu_0       0.2      0.507       0.112  0.0000425         8.49
21 mu_0       0.3      0.670       0.325  0.00207           9.94
22 mu_0       0.4      0.799       0.635  0.0256            8.45
23 mu_0       0.5      0.903       0.861  0.142             5.71
24 mu_0       0.6      0.975       0.938  0.321             3.21
25 mu_0       0.7      1.02        1.00   0.518             1.77
26 mu_0       0.8      1.03        0.978  0.378             2.24
27 mu_0       0.9      1.03        0.946  0.0501            3.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     188.     0.0000117   1.00e-16  10661.  
 2 mu         0.2     165.     0.00205     4.66e-11   6478.  
 3 mu         0.3      78.1    0.0327      9.04e- 8   4387.  
 4 mu         0.4      25.3    0.218       1.83e- 5   1602.  
 5 mu         0.5       6.31   0.641       1.06e- 3    305.  
 6 mu         0.6       1.83   1.00        2.71e- 2     42.1 
 7 mu         0.7       1.23   1.16        1.21e- 2      4.49
 8 mu         0.8       1.37   0.919       2.41e- 5      8.77
 9 mu         0.9       1.83   0.192       4.66e-10     27.1 
10 mu_1       0.1     233.     0.000103    9.50e-16  11846.  
11 mu_1       0.2     126.     0.00724     2.21e-10   6243.  
12 mu_1       0.3      48.7    0.0801      2.86e- 7   3249.  
13 mu_1       0.4      14.3    0.347       4.35e- 5    890.  
14 mu_1       0.5       3.78   0.848       2.01e- 3    135.  
15 mu_1       0.6       1.48   1.04        4.29e- 2     24.8 
16 mu_1       0.7       1.23   1.15        1.93e- 3      4.84
17 mu_1       0.8       1.41   0.784       3.35e- 6     10.1 
18 mu_1       0.9       1.89   0.149       5.75e-11     30.1 
19 mu_0       0.1     183.     0.00000327  0         10529.  
20 mu_0       0.2     175.     0.000625    0          7197.  
21 mu_0       0.3      90.7    0.0145      0          4874.  
22 mu_0       0.4      32.6    0.0960      0          2077.  
23 mu_0       0.5       8.83   0.388       0           474.  
24 mu_0       0.6       2.36   0.852       0            68.1 
25 mu_0       0.7       1.22   1.06        0             9.68
26 mu_0       0.8       1.20   1.02        0             5.95
27 mu_0       0.9       1.30   0.316       0            13.4 
[1] "Total run time was 115.075 seconds"
