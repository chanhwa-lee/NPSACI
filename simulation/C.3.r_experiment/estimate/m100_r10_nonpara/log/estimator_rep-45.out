
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1289"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  2  4 10  9  7  5 11  3  8  4  8  4  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02684 0.36543 0.61341 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
771 518 
[1] "treatment indicator table: "

  0   1 
452 837 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 694
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 75.228 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.392 0.125 
 2 mu         0.1   0.2 0.408 0.131 
 3 mu         0.1   0.3 0.407 0.134 
 4 mu         0.1   0.4 0.429 0.141 
 5 mu         0.1   0.5 0.488 0.133 
 6 mu         0.2   0.1 0.369 0.0741
 7 mu         0.2   0.2 0.423 0.0774
 8 mu         0.2   0.3 0.427 0.0785
 9 mu         0.2   0.4 0.466 0.0820
10 mu         0.2   0.5 0.511 0.0810
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.901       0.102  0.0000000584     14.4 
 2 mu         0.2      0.994       0.497  0.0000965         7.03
 3 mu         0.3      0.973       0.938  0.00468           3.06
 4 mu         0.4      0.984       0.953  0.0513            1.92
 5 mu         0.5      1.01        1.00   0.246             1.72
 6 mu         0.6      1.03        1.04   0.544             1.54
 7 mu         0.7      1.03        0.998  0.452             1.68
 8 mu         0.8      1.00        0.999  0.306             1.79
 9 mu         0.9      0.936       0.823  0.0347            2.30
10 mu_1       0.1      1.11        0.350  0.000000351      10.8 
11 mu_1       0.2      1.00        0.819  0.000292          4.10
12 mu_1       0.3      0.970       0.916  0.00955           2.31
13 mu_1       0.4      0.992       0.966  0.0808            1.83
14 mu_1       0.5      1.02        1.00   0.324             1.65
15 mu_1       0.6      1.03        1.04   0.554             1.62
16 mu_1       0.7      1.03        1.03   0.366             1.66
17 mu_1       0.8      0.994       0.987  0.269             1.82
18 mu_1       0.9      0.929       0.792  0.0282            2.37
19 mu_0       0.1      0.878       0.0745 0.0000000259     14.8 
20 mu_0       0.2      0.993       0.425  0.0000477         7.88
21 mu_0       0.3      0.974       0.939  0.00259           3.38
22 mu_0       0.4      0.978       0.947  0.0317            2.24
23 mu_0       0.5      1.00        0.971  0.168             1.83
24 mu_0       0.6      1.03        1.04   0.512             1.61
25 mu_0       0.7      1.04        1.03   0.585             1.71
26 mu_0       0.8      1.04        1.05   0.209             1.72
27 mu_0       0.9      1.00        0.939  0.0197            2.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.736   0.00000897  2.95e-15     20.5 
 2 mu         0.2      1.21    0.00149     3.44e-10     23.7 
 3 mu         0.3      1.25    0.0232      2.97e- 7     18.4 
 4 mu         0.4      1.03    0.154       3.38e- 5      8.09
 5 mu         0.5      0.876   0.554       1.25e- 3      2.95
 6 mu         0.6      1.00    0.892       4.56e- 3      2.65
 7 mu         0.7      1.26    1.38        5.44e- 5      3.33
 8 mu         0.8      1.34    1.42        8.25e- 8      5.18
 9 mu         0.9      1.10    0.271       8.96e-13      7.10
10 mu_1       0.1      1.24    0.0000778   2.79e-14     30.7 
11 mu_1       0.2      1.35    0.00535     1.62e- 9     25.4 
12 mu_1       0.3      1.18    0.0592      9.34e- 7     13.2 
13 mu_1       0.4      0.927   0.276       7.99e- 5      5.95
14 mu_1       0.5      0.874   0.777       2.36e- 3      2.95
15 mu_1       0.6      1.07    1.05        1.14e- 3      2.84
16 mu_1       0.7      1.31    1.53        1.17e- 5      3.50
17 mu_1       0.8      1.34    1.26        1.55e- 8      5.40
18 mu_1       0.9      1.08    0.195       1.49e-13      7.28
19 mu_0       0.1      0.680   0.00000149  0            19.6 
20 mu_0       0.2      1.18    0.000460    0            23.5 
21 mu_0       0.3      1.28    0.00857     0            20.7 
22 mu_0       0.4      1.09    0.0659      0            10.5 
23 mu_0       0.5      0.878   0.333       0             4.02
24 mu_0       0.6      0.899   0.677       0             2.76
25 mu_0       0.7      1.13    1.06        0             3.13
26 mu_0       0.8      1.33    1.40        0             4.32
27 mu_0       0.9      1.24    0.510       0             6.70
[1] "Total run time was 79.931 seconds"
