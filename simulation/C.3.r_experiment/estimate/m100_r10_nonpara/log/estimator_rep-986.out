
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1272"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  7  6  7  4  5  5  5  7 10 12  8  7  6  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05649 0.42148 0.67578 1.00000 4.75279 
[1] "event indicator table: "

  0   1 
749 523 
[1] "treatment indicator table: "

  0   1 
425 847 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 79.008 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.486 0.240
 2 mu         0.1   0.2 0.567 0.291
 3 mu         0.1   0.3 0.764 0.284
 4 mu         0.1   0.4 0.794 0.320
 5 mu         0.1   0.5 0.813 0.343
 6 mu         0.2   0.1 0.368 0.122
 7 mu         0.2   0.2 0.472 0.152
 8 mu         0.2   0.3 0.605 0.144
 9 mu         0.2   0.4 0.640 0.165
10 mu         0.2   0.5 0.672 0.174
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.49        0.0319 0.00000136      66.1 
 2 mu         0.2      1.32        0.285  0.000417        25.9 
 3 mu         0.3      1.19        0.695  0.00775         13.2 
 4 mu         0.4      1.10        0.928  0.0457           4.37
 5 mu         0.5      1.04        0.978  0.168            2.74
 6 mu         0.6      1.01        0.993  0.448            1.59
 7 mu         0.7      0.998       0.986  0.496            1.36
 8 mu         0.8      0.956       0.917  0.279            1.83
 9 mu         0.9      0.878       0.686  0.0326           4.28
10 mu_1       0.1      1.05        0.136  0.00000831      24.0 
11 mu_1       0.2      1.12        0.505  0.00130         20.8 
12 mu_1       0.3      1.09        0.842  0.0192           8.29
13 mu_1       0.4      1.05        0.937  0.0869           3.65
14 mu_1       0.5      1.02        0.986  0.262            2.33
15 mu_1       0.6      1.01        0.991  0.600            1.53
16 mu_1       0.7      0.992       0.982  0.453            1.36
17 mu_1       0.8      0.946       0.915  0.242            1.98
18 mu_1       0.9      0.872       0.641  0.0264           4.44
19 mu_0       0.1      1.54        0.0229 0.000000591     73.4 
20 mu_0       0.2      1.37        0.226  0.000194        32.3 
21 mu_0       0.3      1.23        0.618  0.00286         15.3 
22 mu_0       0.4      1.12        0.928  0.0183           5.81
23 mu_0       0.5      1.05        0.945  0.0735           3.16
24 mu_0       0.6      1.02        1.02   0.220            1.81
25 mu_0       0.7      1.01        0.994  0.532            1.60
26 mu_0       0.8      0.997       0.989  0.372            1.56
27 mu_0       0.9      0.932       0.940  0.0886           2.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.702   0.0000436   7.45e-15     41.7 
 2 mu         0.2      1.35    0.00341     8.68e-10     43.4 
 3 mu         0.3      1.48    0.0391      7.49e- 7     38.7 
 4 mu         0.4      1.26    0.202       6.54e- 5     16.5 
 5 mu         0.5      1.06    0.688       1.86e- 3      6.14
 6 mu         0.6      0.969   0.930       2.86e- 2      5.28
 7 mu         0.7      1.05    0.965       8.07e- 3      3.91
 8 mu         0.8      1.39    0.896       7.08e- 5      8.58
 9 mu         0.9      1.72    0.268       1.38e- 8     16.1 
10 mu_1       0.1      1.21    0.000342    7.04e-14     52.1 
11 mu_1       0.2      1.54    0.0121      4.10e- 9     51.1 
12 mu_1       0.3      1.40    0.0959      2.36e- 6     30.4 
13 mu_1       0.4      1.15    0.352       1.63e- 4      9.78
14 mu_1       0.5      1.01    0.815       3.72e- 3      4.79
15 mu_1       0.6      0.967   0.914       4.77e- 2      5.18
16 mu_1       0.7      1.09    1.03        2.71e- 3      4.65
17 mu_1       0.8      1.45    0.748       2.08e- 5      8.94
18 mu_1       0.9      1.74    0.216       3.62e- 9     16.5 
19 mu_0       0.1      0.646   0.00000897  0            40.5 
20 mu_0       0.2      1.30    0.00114     0            41.5 
21 mu_0       0.3      1.52    0.0168      0            42.3 
22 mu_0       0.4      1.33    0.116       0            21.0 
23 mu_0       0.5      1.11    0.487       0             7.67
24 mu_0       0.6      0.973   0.825       0             5.44
25 mu_0       0.7      0.941   0.875       0             4.52
26 mu_0       0.8      1.14    0.966       0             7.15
27 mu_0       0.9      1.59    0.344       0            16.1 
[1] "Total run time was 83.252 seconds"
