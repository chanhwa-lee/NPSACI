
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1322"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  5  5  7  3  6  7  7  7  4  9  6  8 10  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03595 0.33001 0.63612 1.00000 4.48966 
[1] "event indicator table: "

  0   1 
807 515 
[1] "treatment indicator table: "

  0   1 
450 872 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 677
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 173.695 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.291 0.121 
 2 mu         0.1   0.2 0.317 0.149 
 3 mu         0.1   0.3 0.330 0.157 
 4 mu         0.1   0.4 0.356 0.170 
 5 mu         0.1   0.5 0.383 0.177 
 6 mu         0.2   0.1 0.298 0.0806
 7 mu         0.2   0.2 0.360 0.0953
 8 mu         0.2   0.3 0.394 0.0986
 9 mu         0.2   0.4 0.434 0.107 
10 mu         0.2   0.5 0.457 0.111 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.803       0.113  0.0000000337      7.71
 2 mu         0.2      0.868       0.509  0.0000609         5.19
 3 mu         0.3      0.911       0.854  0.00316           2.61
 4 mu         0.4      0.950       0.943  0.0355            2.52
 5 mu         0.5      0.956       0.929  0.162             2.18
 6 mu         0.6      0.957       0.941  0.409             1.89
 7 mu         0.7      0.991       0.982  0.510             1.69
 8 mu         0.8      1.04        1.03   0.369             1.66
 9 mu         0.9      1.05        1.02   0.142             2.20
10 mu_1       0.1      0.807       0.303  0.000000213       8.69
11 mu_1       0.2      0.872       0.818  0.000193          3.38
12 mu_1       0.3      0.927       0.954  0.00668           2.55
13 mu_1       0.4      0.962       0.889  0.0568            2.44
14 mu_1       0.5      0.963       0.926  0.212             2.20
15 mu_1       0.6      0.968       0.963  0.409             1.77
16 mu_1       0.7      1.00        0.967  0.464             1.68
17 mu_1       0.8      1.05        1.06   0.389             1.63
18 mu_1       0.9      1.05        1.01   0.120             2.28
19 mu_0       0.1      0.803       0.0837 0.0000000138      8.54
20 mu_0       0.2      0.867       0.427  0.0000280         5.64
21 mu_0       0.3      0.904       0.824  0.00165           2.91
22 mu_0       0.4      0.942       0.916  0.0213            2.58
23 mu_0       0.5      0.950       0.908  0.112             2.17
24 mu_0       0.6      0.941       0.945  0.255             2.06
25 mu_0       0.7      0.959       0.945  0.460             1.71
26 mu_0       0.8      1.00        0.977  0.289             1.78
27 mu_0       0.9      1.04        1.04   0.339             1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.801  0.00000772   1.47e-18     26.8 
 2 mu         0.2      1.24   0.00136      7.73e-13     32.6 
 3 mu         0.3      1.28   0.0247       1.71e- 9     13.0 
 4 mu         0.4      1.27   0.159        4.05e- 7      9.13
 5 mu         0.5      1.18   0.504        2.81e- 5      7.32
 6 mu         0.6      1.09   0.996        8.98e- 4      4.58
 7 mu         0.7      1.08   0.970        2.14e- 4      3.06
 8 mu         0.8      1.07   1.19         4.86e- 7      3.77
 9 mu         0.9      1.02   0.344        1.06e-11      5.00
10 mu_1       0.1      1.40   0.0000683    1.47e-17     42.4 
11 mu_1       0.2      1.36   0.00606      3.86e-12     25.7 
12 mu_1       0.3      1.29   0.0579       5.71e- 9      7.04
13 mu_1       0.4      1.24   0.288        1.01e- 6      9.61
14 mu_1       0.5      1.13   0.665        5.62e- 5      6.16
15 mu_1       0.6      1.08   1.07         1.50e- 3      4.11
16 mu_1       0.7      1.09   1.09         4.82e- 5      3.08
17 mu_1       0.8      1.08   1.20         9.59e- 8      3.93
18 mu_1       0.9      1.02   0.278        1.85e-12      5.26
19 mu_0       0.1      0.735  0.000000791  0            25.1 
20 mu_0       0.2      1.21   0.000390     0            34.3 
21 mu_0       0.3      1.27   0.00804      0            15.6 
22 mu_0       0.4      1.30   0.0725       0             8.80
23 mu_0       0.5      1.23   0.292        0             8.48
24 mu_0       0.6      1.11   0.746        0             5.43
25 mu_0       0.7      1.05   0.886        0             3.69
26 mu_0       0.8      1.04   0.748        0             3.14
27 mu_0       0.9      1.02   0.311        0             5.10
[1] "Total run time was 178.774 seconds"
