
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1231"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  3  8  4  8  5  8  5  3  6 11  8  6  6  1  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03771 0.34423 0.60722 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
707 524 
[1] "treatment indicator table: "

  0   1 
488 743 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 105.304 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.360 0.148 
 2 mu         0.1   0.2 0.386 0.121 
 3 mu         0.1   0.3 0.395 0.114 
 4 mu         0.1   0.4 0.385 0.0994
 5 mu         0.1   0.5 0.406 0.0918
 6 mu         0.2   0.1 0.366 0.0927
 7 mu         0.2   0.2 0.426 0.0828
 8 mu         0.2   0.3 0.453 0.0805
 9 mu         0.2   0.4 0.473 0.0743
10 mu         0.2   0.5 0.501 0.0717
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.530       0.135  0.00000179       6.78
 2 mu         0.2      0.796       0.578  0.000851         7.47
 3 mu         0.3      0.942       0.863  0.0211           3.44
 4 mu         0.4      0.994       0.983  0.149            1.98
 5 mu         0.5      0.992       0.989  0.395            1.46
 6 mu         0.6      0.984       0.992  0.434            1.26
 7 mu         0.7      0.991       0.995  0.506            1.50
 8 mu         0.8      0.991       0.989  0.121            2.11
 9 mu         0.9      0.896       0.744  0.00451          4.37
10 mu_1       0.1      0.785       0.388  0.0000106       10.2 
11 mu_1       0.2      0.938       0.862  0.00253          5.75
12 mu_1       0.3      1.00        0.954  0.0425           2.77
13 mu_1       0.4      1.01        1.02   0.230            1.62
14 mu_1       0.5      0.988       0.990  0.512            1.43
15 mu_1       0.6      0.981       1.00   0.401            1.33
16 mu_1       0.7      0.989       1.01   0.429            1.53
17 mu_1       0.8      0.983       0.969  0.0869           2.31
18 mu_1       0.9      0.880       0.698  0.00296          4.46
19 mu_0       0.1      0.502       0.0984 0.000000817      6.40
20 mu_0       0.2      0.761       0.489  0.000431         7.89
21 mu_0       0.3      0.916       0.836  0.0120           3.73
22 mu_0       0.4      0.986       0.939  0.0953           2.28
23 mu_0       0.5      0.996       0.984  0.278            1.55
24 mu_0       0.6      0.989       0.990  0.484            1.40
25 mu_0       0.7      0.997       0.996  0.441            1.43
26 mu_0       0.8      1.02        1.04   0.256            1.60
27 mu_0       0.9      1.04        0.974  0.0185           3.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.18      0.000483  6.83e-15     55.7 
 2 mu         0.2      1.87      0.0203    7.95e-10     61.0 
 3 mu         0.3      1.69      0.118     6.86e- 7     31.6 
 4 mu         0.4      1.39      0.491     7.82e- 5     10.3 
 5 mu         0.5      1.14      1.03      2.89e- 3      6.29
 6 mu         0.6      0.970     0.938     5.14e- 2      2.11
 7 mu         0.7      0.978     0.983     2.60e- 3      2.73
 8 mu         0.8      1.18      0.582     1.33e- 5      5.23
 9 mu         0.9      1.41      0.0625    1.15e- 9     16.3 
10 mu_1       0.1      2.10      0.00286   6.45e-14     85.7 
11 mu_1       0.2      1.96      0.0701    3.76e- 9     49.2 
12 mu_1       0.3      1.55      0.264     2.16e- 6     17.1 
13 mu_1       0.4      1.28      0.792     1.85e- 4      9.41
14 mu_1       0.5      1.06      0.987     5.47e- 3      5.03
15 mu_1       0.6      0.953     0.861     2.70e- 2      2.42
16 mu_1       0.7      1.01      0.990     6.55e- 4      2.84
17 mu_1       0.8      1.21      0.453     2.93e- 6      6.27
18 mu_1       0.9      1.42      0.0430    2.26e-10     18.1 
19 mu_0       0.1      1.08      0.000163  0            52.4 
20 mu_0       0.2      1.85      0.00547   0            64.5 
21 mu_0       0.3      1.75      0.0581    0            38.2 
22 mu_0       0.4      1.47      0.302     0            14.5 
23 mu_0       0.5      1.21      0.899     0             7.55
24 mu_0       0.6      0.996     1.03      0             2.79
25 mu_0       0.7      0.912     0.831     0             2.85
26 mu_0       0.8      1.04      0.799     0             3.60
27 mu_0       0.9      1.33      0.188     0             9.07
[1] "Total run time was 110.645 seconds"
