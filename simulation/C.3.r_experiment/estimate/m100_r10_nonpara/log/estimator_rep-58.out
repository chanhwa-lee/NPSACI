
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1345"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  7  6  4  7  4  4  3  3  4  8  8 12 11  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0386  0.3711  0.6380  1.0000  4.5437 
[1] "event indicator table: "

  0   1 
818 527 
[1] "treatment indicator table: "

  0   1 
445 900 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 97.904 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.569 0.182
 2 mu         0.1   0.2 0.658 0.209
 3 mu         0.1   0.3 0.777 0.240
 4 mu         0.1   0.4 0.804 0.255
 5 mu         0.1   0.5 0.853 0.274
 6 mu         0.2   0.1 0.561 0.179
 7 mu         0.2   0.2 0.665 0.209
 8 mu         0.2   0.3 0.804 0.249
 9 mu         0.2   0.4 0.836 0.267
10 mu         0.2   0.5 0.903 0.291
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.34        0.0244 0.000000357     34.8 
 2 mu         0.2      1.54        0.246  0.000221        47.6 
 3 mu         0.3      1.27        0.641  0.00731         21.8 
 4 mu         0.4      1.08        0.909  0.0700           5.40
 5 mu         0.5      1.02        1.01   0.323            2.71
 6 mu         0.6      1.00        0.987  0.635            1.51
 7 mu         0.7      1.00        1.00   0.626            1.52
 8 mu         0.8      0.993       0.975  0.333            2.09
 9 mu         0.9      0.973       0.811  0.0313           3.35
10 mu_1       0.1      1.45        0.0964 0.00000227      58.0 
11 mu_1       0.2      1.35        0.478  0.000714        39.7 
12 mu_1       0.3      1.11        0.771  0.0161          12.2 
13 mu_1       0.4      1.03        0.937  0.118            3.14
14 mu_1       0.5      1.01        0.993  0.449            2.44
15 mu_1       0.6      1.00        0.998  0.648            1.35
16 mu_1       0.7      1.00        0.980  0.623            1.61
17 mu_1       0.8      0.991       0.979  0.280            2.15
18 mu_1       0.9      0.974       0.801  0.0240           3.68
19 mu_0       0.1      1.33        0.0157 0.000000145     32.2 
20 mu_0       0.2      1.59        0.174  0.0000972       49.6 
21 mu_0       0.3      1.34        0.527  0.00354         25.9 
22 mu_0       0.4      1.12        0.862  0.0377           7.33
23 mu_0       0.5      1.03        0.986  0.197            2.97
24 mu_0       0.6      1.01        1.01   0.515            1.85
25 mu_0       0.7      1.00        0.982  0.631            1.40
26 mu_0       0.8      1.00        0.991  0.497            1.86
27 mu_0       0.9      0.966       0.959  0.0969           2.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.416   0.00000485  5.73e-17     17.0 
 2 mu         0.2      1.55    0.00166     2.67e-11     58.7 
 3 mu         0.3      1.83    0.0220      5.18e- 8     52.3 
 4 mu         0.4      1.40    0.156       1.05e- 5     22.3 
 5 mu         0.5      1.05    0.569       6.08e- 4      7.12
 6 mu         0.6      0.956   0.978       1.55e- 2      4.11
 7 mu         0.7      0.978   1.04        1.97e- 2      2.73
 8 mu         0.8      1.06    0.787       2.24e- 4      5.57
 9 mu         0.9      1.40    0.125       4.38e- 8     17.3 
10 mu_1       0.1      1.05    0.0000346   5.45e-16     39.9 
11 mu_1       0.2      2.04    0.00660     1.27e-10     69.0 
12 mu_1       0.3      1.77    0.0538      1.64e- 7     41.0 
13 mu_1       0.4      1.24    0.273       2.50e- 5     13.1 
14 mu_1       0.5      0.987   0.774       1.15e- 3      6.70
15 mu_1       0.6      0.949   0.963       2.46e- 2      3.22
16 mu_1       0.7      0.979   1.02        7.02e- 3      2.67
17 mu_1       0.8      1.08    0.682       6.58e- 5      5.86
18 mu_1       0.9      1.42    0.0866      1.14e- 8     18.2 
19 mu_0       0.1      0.346   0.00000138  0            14.4 
20 mu_0       0.2      1.42    0.000332    0            56.1 
21 mu_0       0.3      1.86    0.00899     0            57.2 
22 mu_0       0.4      1.51    0.0718      0            28.4 
23 mu_0       0.5      1.11    0.356       0             9.07
24 mu_0       0.6      0.965   0.841       0             5.44
25 mu_0       0.7      0.974   1.04        0             3.03
26 mu_0       0.8      0.993   1.02        0             4.39
27 mu_0       0.9      1.17    0.376       0             9.61
[1] "Total run time was 103.645 seconds"
