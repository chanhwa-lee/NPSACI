
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1257"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  3  6  6  5 10  7  7  4  7 10  7  2  9  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04435 0.39597 0.63126 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
753 504 
[1] "treatment indicator table: "

  0   1 
396 861 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.792 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.259 0.235
 2 mu         0.1   0.2 0.348 0.290
 3 mu         0.1   0.3 0.359 0.335
 4 mu         0.1   0.4 0.409 0.365
 5 mu         0.1   0.5 0.448 0.416
 6 mu         0.2   0.1 0.191 0.121
 7 mu         0.2   0.2 0.277 0.147
 8 mu         0.2   0.3 0.282 0.170
 9 mu         0.2   0.4 0.316 0.188
10 mu         0.2   0.5 0.360 0.209
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.936      0.00477  4.65e-10     70.5 
 2 mu         0.2      0.765      0.0856   3.77e- 6     34.0 
 3 mu         0.3      0.672      0.364    5.00e- 4      7.43
 4 mu         0.4      0.769      0.664    1.15e- 2      2.38
 5 mu         0.5      0.879      0.876    9.34e- 2      1.77
 6 mu         0.6      0.958      0.972    3.28e- 1      1.54
 7 mu         0.7      1.02       1.02     5.52e- 1      1.46
 8 mu         0.8      1.05       1.06     2.96e- 1      2.36
 9 mu         0.9      1.06       0.939    3.94e- 2      2.83
10 mu_1       0.1      1.12       0.0253   3.25e- 9     70.5 
11 mu_1       0.2      0.722      0.208    1.32e- 5     17.2 
12 mu_1       0.3      0.724      0.564    1.17e- 3      2.97
13 mu_1       0.4      0.832      0.818    2.02e- 2      2.35
14 mu_1       0.5      0.919      0.937    1.33e- 1      1.64
15 mu_1       0.6      0.981      1.00     4.12e- 1      1.55
16 mu_1       0.7      1.03       1.01     4.15e- 1      1.59
17 mu_1       0.8      1.06       1.05     2.18e- 1      2.47
18 mu_1       0.9      1.06       0.926    3.16e- 2      3.10
19 mu_0       0.1      0.915      0.00265  1.55e-10     70.5 
20 mu_0       0.2      0.776      0.0621   1.41e- 6     38.2 
21 mu_0       0.3      0.650      0.272    2.13e- 4      9.34
22 mu_0       0.4      0.728      0.554    5.63e- 3      2.41
23 mu_0       0.5      0.839      0.809    5.36e- 2      1.97
24 mu_0       0.6      0.924      0.937    2.02e- 1      1.71
25 mu_0       0.7      0.988      0.997    4.20e- 1      1.56
26 mu_0       0.8      1.04       1.01     6.10e- 1      1.93
27 mu_0       0.9      1.08       1.09     1.10e- 1      3.12
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0808   0.00000930  3.07e-17      1.74
 2 mu         0.2     0.450    0.00191     1.43e-11     15.2 
 3 mu         0.3     0.889    0.0345      2.78e- 8     26.6 
 4 mu         0.4     1.08     0.179       5.63e- 6     20.6 
 5 mu         0.5     1.08     0.537       3.26e- 4      8.44
 6 mu         0.6     1.03     0.898       8.32e- 3      3.83
 7 mu         0.7     0.996    0.959       4.51e- 2      2.85
 8 mu         0.8     1.08     0.926       1.02e- 3      4.69
 9 mu         0.9     1.54     0.241       8.95e- 7     34.7 
10 mu_1       0.1     0.270    0.0000649   2.92e-16      5.43
11 mu_1       0.2     0.775    0.00742     6.80e-11     23.8 
12 mu_1       0.3     1.09     0.0792      8.79e- 8     27.7 
13 mu_1       0.4     1.13     0.310       1.34e- 5     16.1 
14 mu_1       0.5     1.07     0.743       6.19e- 4      5.28
15 mu_1       0.6     1.01     0.941       1.32e- 2      3.59
16 mu_1       0.7     0.999    0.970       2.01e- 2      2.69
17 mu_1       0.8     1.10     0.761       3.97e- 4      5.86
18 mu_1       0.9     1.60     0.182       3.11e- 7     38.6 
19 mu_0       0.1     0.0598   0.00000333  0             1.33
20 mu_0       0.2     0.369    0.000642    0            13.1 
21 mu_0       0.3     0.803    0.0126      0            26.1 
22 mu_0       0.4     1.05     0.0856      0            23.6 
23 mu_0       0.5     1.10     0.341       0            11.6 
24 mu_0       0.6     1.05     0.771       0             4.55
25 mu_0       0.7     0.987    0.896       0             3.51
26 mu_0       0.8     0.967    0.930       0             3.44
27 mu_0       0.9     1.02     0.318       0             8.76
[1] "Total run time was 59.549 seconds"
