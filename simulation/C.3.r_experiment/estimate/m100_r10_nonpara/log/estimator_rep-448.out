
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1265"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  7  5  3 10  5 13  8  1  7  5  3 11  8  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02522 0.33885 0.58623 0.96650 5.00000 
[1] "event indicator table: "

  0   1 
724 541 
[1] "treatment indicator table: "

  0   1 
511 754 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 113.457 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.359 0.0619
 2 mu         0.1   0.2 0.419 0.0840
 3 mu         0.1   0.3 0.469 0.0795
 4 mu         0.1   0.4 0.488 0.0868
 5 mu         0.1   0.5 0.517 0.0931
 6 mu         0.2   0.1 0.332 0.0433
 7 mu         0.2   0.2 0.410 0.0611
 8 mu         0.2   0.3 0.458 0.0564
 9 mu         0.2   0.4 0.481 0.0587
10 mu         0.2   0.5 0.536 0.0587
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.966        0.243 0.000000439      7.82
 2 mu         0.2      0.982        0.773 0.000242         4.22
 3 mu         0.3      0.973        0.942 0.00726          2.60
 4 mu         0.4      0.980        0.968 0.0648           2.28
 5 mu         0.5      0.996        0.991 0.292            1.55
 6 mu         0.6      1.00         0.976 0.483            1.79
 7 mu         0.7      0.987        0.966 0.394            1.58
 8 mu         0.8      0.966        0.980 0.0933           2.02
 9 mu         0.9      0.986        0.926 0.00267          3.31
10 mu_1       0.1      1.06         0.584 0.00000276       6.17
11 mu_1       0.2      0.980        0.917 0.000770         3.27
12 mu_1       0.3      0.980        0.955 0.0157           2.52
13 mu_1       0.4      0.990        1.01  0.108            2.09
14 mu_1       0.5      1.00         0.995 0.407            1.63
15 mu_1       0.6      1.00         0.974 0.489            1.78
16 mu_1       0.7      0.981        0.945 0.336            1.71
17 mu_1       0.8      0.965        0.966 0.0723           2.03
18 mu_1       0.9      0.989        0.919 0.00186          3.48
19 mu_0       0.1      0.955        0.200 0.000000181      8.00
20 mu_0       0.2      0.983        0.681 0.000110         4.72
21 mu_0       0.3      0.970        0.868 0.00363          2.76
22 mu_0       0.4      0.974        0.960 0.0357           2.40
23 mu_0       0.5      0.991        1.01  0.178            1.67
24 mu_0       0.6      1.01         0.999 0.474            1.80
25 mu_0       0.7      1.00         0.968 0.412            1.65
26 mu_0       0.8      0.967        0.918 0.177            1.99
27 mu_0       0.9      0.959        0.979 0.00996          2.10
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.92      0.000516  8.18e-17     86.1 
 2 mu         0.2      1.80      0.0346    2.15e-11     41.3 
 3 mu         0.3      1.25      0.262     3.17e- 8     12.5 
 4 mu         0.4      1.12      0.855     5.62e- 6      5.18
 5 mu         0.5      1.14      1.10      3.12e- 4      4.08
 6 mu         0.6      1.09      1.12      1.42e- 3      2.80
 7 mu         0.7      1.02      0.972     1.09e- 5      2.79
 8 mu         0.8      1.01      0.512     9.62e- 9      4.57
 9 mu         0.9      1.18      0.0550    4.64e-14     16.0 
10 mu_1       0.1      2.52      0.00289   8.18e-16     86.1 
11 mu_1       0.2      1.56      0.100     1.07e-10     24.3 
12 mu_1       0.3      1.15      0.518     1.06e- 7      8.94
13 mu_1       0.4      1.14      0.996     1.41e- 5      5.04
14 mu_1       0.5      1.14      1.24      6.24e- 4      3.63
15 mu_1       0.6      1.06      1.03      2.36e- 4      2.74
16 mu_1       0.7      1.00      0.827     1.56e- 6      2.66
17 mu_1       0.8      1.01      0.373     1.20e- 9      5.03
18 mu_1       0.9      1.21      0.0378    5.16e-15     17.7 
19 mu_0       0.1      1.86      0.000266  0            86.1 
20 mu_0       0.2      1.86      0.0197    0            46.5 
21 mu_0       0.3      1.30      0.161     0            15.0 
22 mu_0       0.4      1.11      0.583     0             6.80
23 mu_0       0.5      1.14      0.960     0             4.54
24 mu_0       0.6      1.13      1.17      0             3.50
25 mu_0       0.7      1.06      1.15      0             3.10
26 mu_0       0.8      1.00      0.661     0             3.43
27 mu_0       0.9      0.861     0.112     0             6.35
[1] "Total run time was 121.34 seconds"
