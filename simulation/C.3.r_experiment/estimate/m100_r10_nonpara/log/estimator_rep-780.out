
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1291"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  2  6 11  8  6  2  6  7  7  7  6  3  9  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04616 0.39261 0.64588 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
773 518 
[1] "treatment indicator table: "

  0   1 
453 838 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.001 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.275 0.215
 2 mu         0.1   0.2 0.335 0.253
 3 mu         0.1   0.3 0.418 0.285
 4 mu         0.1   0.4 0.443 0.292
 5 mu         0.1   0.5 0.463 0.297
 6 mu         0.2   0.1 0.316 0.121
 7 mu         0.2   0.2 0.393 0.142
 8 mu         0.2   0.3 0.469 0.163
 9 mu         0.2   0.4 0.502 0.166
10 mu         0.2   0.5 0.531 0.168
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.27        0.0888 0.00000720     15.5 
 2 mu         0.2      1.21        0.403  0.00239        14.0 
 3 mu         0.3      1.13        0.745  0.0259          7.80
 4 mu         0.4      1.07        0.979  0.110           6.00
 5 mu         0.5      0.991       0.951  0.309           3.87
 6 mu         0.6      0.959       0.928  0.456           2.06
 7 mu         0.7      0.978       0.968  0.317           2.02
 8 mu         0.8      1.04        1.00   0.383           2.83
 9 mu         0.9      1.14        1.02   0.100           4.99
10 mu_1       0.1      1.18        0.243  0.0000379      18.9 
11 mu_1       0.2      1.11        0.612  0.00642        10.8 
12 mu_1       0.3      1.09        0.889  0.0475          7.92
13 mu_1       0.4      1.04        0.913  0.162           5.31
14 mu_1       0.5      0.973       0.920  0.335           3.07
15 mu_1       0.6      0.958       0.930  0.420           2.13
16 mu_1       0.7      0.985       0.994  0.306           1.95
17 mu_1       0.8      1.05        0.975  0.325           3.08
18 mu_1       0.9      1.14        1.02   0.0841          5.18
19 mu_0       0.1      1.28        0.0713 0.00000379     17.0 
20 mu_0       0.2      1.23        0.344  0.00138        14.7 
21 mu_0       0.3      1.15        0.660  0.0166          7.75
22 mu_0       0.4      1.09        0.946  0.0753          6.71
23 mu_0       0.5      1.01        0.939  0.215           4.68
24 mu_0       0.6      0.961       0.885  0.391           2.57
25 mu_0       0.7      0.962       0.938  0.318           2.21
26 mu_0       0.8      0.995       0.976  0.218           2.04
27 mu_0       0.9      1.05        1.01   0.100           4.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.805   0.0000483   7.33e-17     43.3 
 2 mu         0.2      1.51    0.00463     3.42e-11     38.0 
 3 mu         0.3      1.72    0.0818      6.62e- 8     56.4 
 4 mu         0.4      1.57    0.453       1.34e- 5     42.7 
 5 mu         0.5      1.45    1.00        7.77e- 4     15.2 
 6 mu         0.6      1.48    0.973       1.16e- 2     10.9 
 7 mu         0.7      1.45    1.02        5.47e- 4     12.3 
 8 mu         0.8      1.35    1.04        1.42e- 6     11.0 
 9 mu         0.9      1.52    0.237       3.47e-11     25.4 
10 mu_1       0.1      1.34    0.000365    6.96e-16     54.1 
11 mu_1       0.2      1.69    0.0147      1.62e-10     44.4 
12 mu_1       0.3      1.68    0.170       2.10e- 7     59.4 
13 mu_1       0.4      1.51    0.720       3.19e- 5     33.7 
14 mu_1       0.5      1.46    1.08        1.48e- 3      9.62
15 mu_1       0.6      1.50    1.08        9.82e- 3     12.1 
16 mu_1       0.7      1.45    1.08        1.56e- 4     11.8 
17 mu_1       0.8      1.35    0.878       3.55e- 7     11.7 
18 mu_1       0.9      1.55    0.174       7.72e-12     28.2 
19 mu_0       0.1      0.746   0.00000722  0            42.1 
20 mu_0       0.2      1.46    0.00169     0            41.5 
21 mu_0       0.3      1.74    0.0436      0            55.1 
22 mu_0       0.4      1.61    0.260       0            48.7 
23 mu_0       0.5      1.44    0.717       0            20.8 
24 mu_0       0.6      1.44    0.968       0             9.06
25 mu_0       0.7      1.47    0.932       0            13.7 
26 mu_0       0.8      1.35    1.02        0             9.48
27 mu_0       0.9      1.24    0.332       0            15.3 
[1] "Total run time was 89.051 seconds"
