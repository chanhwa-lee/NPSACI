
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1331"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  3  7  2  4  4  7  8  6  8 11  5 11  5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03042 0.35711 0.62854 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
801 530 
[1] "treatment indicator table: "

  0   1 
514 817 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 713
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.773 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.273 0.0877
 2 mu         0.1   0.2 0.317 0.115 
 3 mu         0.1   0.3 0.339 0.115 
 4 mu         0.1   0.4 0.364 0.117 
 5 mu         0.1   0.5 0.410 0.104 
 6 mu         0.2   0.1 0.342 0.0804
 7 mu         0.2   0.2 0.417 0.110 
 8 mu         0.2   0.3 0.459 0.106 
 9 mu         0.2   0.4 0.489 0.105 
10 mu         0.2   0.5 0.546 0.0940
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.554       0.0394 0.00000162      10.5 
 2 mu         0.2      0.846       0.364  0.00120          9.09
 3 mu         0.3      0.969       0.690  0.0330           6.16
 4 mu         0.4      0.982       0.821  0.139            3.69
 5 mu         0.5      0.977       0.970  0.341            2.43
 6 mu         0.6      0.972       0.974  0.561            1.48
 7 mu         0.7      0.951       0.943  0.376            1.69
 8 mu         0.8      0.903       0.848  0.0677           4.06
 9 mu         0.9      0.838       0.553  0.00163         10.5 
10 mu_1       0.1      0.753       0.135  0.00000895       9.45
11 mu_1       0.2      0.937       0.678  0.00331          8.87
12 mu_1       0.3      0.977       0.831  0.0614           4.39
13 mu_1       0.4      0.971       0.896  0.200            3.42
14 mu_1       0.5      0.971       0.992  0.426            2.05
15 mu_1       0.6      0.966       0.956  0.515            1.56
16 mu_1       0.7      0.942       0.925  0.308            2.06
17 mu_1       0.8      0.894       0.795  0.0517           4.84
18 mu_1       0.9      0.837       0.492  0.00115         11.5 
19 mu_0       0.1      0.532       0.0300 0.000000810     11.5 
20 mu_0       0.2      0.823       0.290  0.000667         9.14
21 mu_0       0.3      0.965       0.609  0.0208           6.91
22 mu_0       0.4      0.989       0.819  0.0983           3.87
23 mu_0       0.5      0.984       0.913  0.257            2.82
24 mu_0       0.6      0.981       0.981  0.501            1.58
25 mu_0       0.7      0.971       0.977  0.465            1.63
26 mu_0       0.8      0.938       0.941  0.132            1.79
27 mu_0       0.9      0.850       0.785  0.00595          2.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.247    0.000139   4.74e-15      8.01
 2 mu         0.2      0.895    0.00966    2.21e- 9     24.6 
 3 mu         0.3      1.26     0.111      2.14e- 6     22.4 
 4 mu         0.4      1.30     0.508      1.80e- 4     11.2 
 5 mu         0.5      1.21     0.925      2.81e- 3      6.22
 6 mu         0.6      1.16     0.993      2.50e- 2      4.35
 7 mu         0.7      1.62     0.848      4.02e- 3     21.2 
 8 mu         0.8      4.07     0.335      2.35e- 5    152.  
 9 mu         0.9     10.9      0.0325     2.30e- 9    711.  
10 mu_1       0.1      0.640    0.00112    4.50e-14     17.8 
11 mu_1       0.2      1.25     0.0284     1.05e- 8     27.5 
12 mu_1       0.3      1.37     0.252      6.07e- 6     18.7 
13 mu_1       0.4      1.30     0.787      3.81e- 4      8.16
14 mu_1       0.5      1.19     1.01       5.62e- 3      5.24
15 mu_1       0.6      1.20     0.934      4.17e- 2      4.58
16 mu_1       0.7      1.83     0.674      1.28e- 3     27.1 
17 mu_1       0.8      4.57     0.251      6.53e- 6    180.  
18 mu_1       0.9     11.4      0.0162     5.67e-10    750.  
19 mu_0       0.1      0.203    0.0000361  0             6.92
20 mu_0       0.2      0.807    0.00399    0            24.0 
21 mu_0       0.3      1.21     0.0629     0            24.0 
22 mu_0       0.4      1.31     0.323      0            13.9 
23 mu_0       0.5      1.22     0.747      0             7.20
24 mu_0       0.6      1.10     0.968      0             4.01
25 mu_0       0.7      1.15     0.847      0             7.43
26 mu_0       0.8      2.09     0.461      0            47.9 
27 mu_0       0.9      7.03     0.0592     0           355.  
[1] "Total run time was 60.979 seconds"
