
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1248"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  6 10  5  3  8  4  7  7  4  7  4  6 12  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02405 0.31040 0.60701 0.99205 5.00000 
[1] "event indicator table: "

  0   1 
697 551 
[1] "treatment indicator table: "

  0   1 
535 713 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.81 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.477 0.0975
 2 mu         0.1   0.2 0.595 0.150 
 3 mu         0.1   0.3 0.668 0.124 
 4 mu         0.1   0.4 0.686 0.132 
 5 mu         0.1   0.5 0.773 0.153 
 6 mu         0.2   0.1 0.403 0.0502
 7 mu         0.2   0.2 0.490 0.0687
 8 mu         0.2   0.3 0.553 0.0621
 9 mu         0.2   0.4 0.595 0.0699
10 mu         0.2   0.5 0.654 0.0791
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.14         0.525 0.0000174      14.2 
 2 mu         0.2      1.07         0.875 0.00335         4.22
 3 mu         0.3      1.03         0.983 0.0470          2.52
 4 mu         0.4      1.01         1.06  0.225           1.67
 5 mu         0.5      1.03         1.00  0.473           1.73
 6 mu         0.6      1.03         1.00  0.471           1.84
 7 mu         0.7      0.996        0.997 0.284           1.72
 8 mu         0.8      0.947        0.942 0.0723          1.84
 9 mu         0.9      0.933        0.821 0.00153         3.74
10 mu_1       0.1      1.17         0.788 0.0000873       7.85
11 mu_1       0.2      1.05         0.984 0.00857         3.78
12 mu_1       0.3      1.02         1.05  0.0832          2.09
13 mu_1       0.4      1.02         1.00  0.316           1.69
14 mu_1       0.5      1.03         1.01  0.485           1.85
15 mu_1       0.6      1.03         1.02  0.427           1.77
16 mu_1       0.7      0.989        0.984 0.271           1.77
17 mu_1       0.8      0.943        0.911 0.0501          1.91
18 mu_1       0.9      0.935        0.824 0.000950        4.03
19 mu_0       0.1      1.13         0.456 0.00000961     14.9 
20 mu_0       0.2      1.07         0.872 0.00205         4.64
21 mu_0       0.3      1.03         0.993 0.0315          2.85
22 mu_0       0.4      1.01         1.03  0.164           1.84
23 mu_0       0.5      1.02         1.02  0.460           1.69
24 mu_0       0.6      1.03         1.01  0.499           1.94
25 mu_0       0.7      1.01         0.995 0.314           1.60
26 mu_0       0.8      0.964        0.984 0.161           1.90
27 mu_0       0.9      0.921        0.966 0.00673         2.25
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.87      0.000727  9.99e-16     79.4 
 2 mu         0.2      1.35      0.0285    2.33e-10     27.1 
 3 mu         0.3      1.11      0.222     3.01e- 7      6.86
 4 mu         0.4      1.04      0.720     4.57e- 5      3.78
 5 mu         0.5      1.01      0.855     9.54e- 4      3.29
 6 mu         0.6      1.00      0.960     1.65e- 5      3.71
 7 mu         0.7      1.09      0.936     8.14e- 8      2.94
 8 mu         0.8      1.22      0.591     4.20e-11      4.84
 9 mu         0.9      1.37      0.0847    9.00e-17     16.7 
10 mu_1       0.1      1.83      0.00380   9.46e-15     49.6 
11 mu_1       0.2      1.17      0.114     1.10e- 9     11.3 
12 mu_1       0.3      1.06      0.425     9.50e- 7      4.90
13 mu_1       0.4      1.02      0.844     1.08e- 4      3.80
14 mu_1       0.5      0.999     0.887     9.54e- 5      3.06
15 mu_1       0.6      1.02      1.01      1.37e- 6      3.71
16 mu_1       0.7      1.12      0.975     5.81e- 9      3.27
17 mu_1       0.8      1.25      0.429     2.62e-12      5.38
18 mu_1       0.9      1.38      0.0517    5.00e-18     17.5 
19 mu_0       0.1      1.88      0.000353  0            82.7 
20 mu_0       0.2      1.40      0.0114    0            31.8 
21 mu_0       0.3      1.13      0.137     0             7.83
22 mu_0       0.4      1.06      0.481     0             4.52
23 mu_0       0.5      1.02      0.861     0             3.66
24 mu_0       0.6      0.972     0.840     0             3.71
25 mu_0       0.7      0.995     0.735     0             3.15
26 mu_0       0.8      1.10      0.760     0             4.19
27 mu_0       0.9      1.26      0.0650    0             8.85
[1] "Total run time was 64.087 seconds"
