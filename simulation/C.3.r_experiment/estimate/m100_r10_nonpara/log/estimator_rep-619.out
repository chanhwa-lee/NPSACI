
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1310"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5  5  6  4  2  4  6 12  5  5  4  9  5  8 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03362 0.39853 0.62750 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
772 538 
[1] "treatment indicator table: "

  0   1 
469 841 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 79.426 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.314 0.125 
 2 mu         0.1   0.2 0.403 0.168 
 3 mu         0.1   0.3 0.473 0.192 
 4 mu         0.1   0.4 0.492 0.210 
 5 mu         0.1   0.5 0.520 0.223 
 6 mu         0.2   0.1 0.317 0.0630
 7 mu         0.2   0.2 0.420 0.0813
 8 mu         0.2   0.3 0.492 0.0926
 9 mu         0.2   0.4 0.510 0.101 
10 mu         0.2   0.5 0.541 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.23         0.155 0.0000000903     20.8 
 2 mu         0.2      1.13         0.562 0.000153         11.5 
 3 mu         0.3      1.03         0.876 0.00748           4.43
 4 mu         0.4      1.02         0.945 0.0804            3.03
 5 mu         0.5      1.02         1.02  0.355             2.12
 6 mu         0.6      1.02         1.00  0.525             1.64
 7 mu         0.7      1.01         1.01  0.550             1.64
 8 mu         0.8      0.989        0.983 0.321             2.02
 9 mu         0.9      0.976        0.907 0.0472            3.64
10 mu_1       0.1      1.25         0.422 0.000000544      19.4 
11 mu_1       0.2      1.05         0.857 0.000462          5.18
12 mu_1       0.3      1.02         0.896 0.0153            4.01
13 mu_1       0.4      1.02         0.991 0.126             2.56
14 mu_1       0.5      1.02         0.995 0.377             2.01
15 mu_1       0.6      1.02         1.01  0.574             1.56
16 mu_1       0.7      1.01         1.00  0.509             1.66
17 mu_1       0.8      0.986        0.978 0.279             2.15
18 mu_1       0.9      0.978        0.888 0.0379            3.80
19 mu_0       0.1      1.23         0.114 0.0000000399     21.2 
20 mu_0       0.2      1.15         0.494 0.0000752        13.2 
21 mu_0       0.3      1.04         0.854 0.00414           5.54
22 mu_0       0.4      1.02         0.891 0.0504            3.34
23 mu_0       0.5      1.01         0.999 0.254             2.32
24 mu_0       0.6      1.01         1.01  0.437             1.80
25 mu_0       0.7      1.01         0.954 0.482             1.62
26 mu_0       0.8      0.998        1.00  0.463             1.75
27 mu_0       0.9      0.954        0.937 0.130             2.22
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       8.89   0.0000378   3.82e-16    565.  
 2 mu         0.2       4.21   0.00374     5.00e-11    193.  
 3 mu         0.3       1.75   0.0496      4.93e- 8     39.1 
 4 mu         0.4       1.16   0.315       6.56e- 6     12.8 
 5 mu         0.5       1.06   0.623       2.91e- 4      6.82
 6 mu         0.6       1.04   0.890       6.46e- 3      3.60
 7 mu         0.7       1.05   1.03        8.28e- 5      3.23
 8 mu         0.8       1.06   0.827       1.10e- 7      4.98
 9 mu         0.9       1.05   0.128       1.06e-12     11.5 
10 mu_1       0.1       6.93   0.000186    0           353.  
11 mu_1       0.2       2.14   0.00803     0            62.0 
12 mu_1       0.3       1.14   0.101       0            13.3 
13 mu_1       0.4       1.04   0.536       0            11.7 
14 mu_1       0.5       1.04   0.624       0             5.02
15 mu_1       0.6       1.04   0.881       0             3.70
16 mu_1       0.7       1.05   1.02        0             3.25
17 mu_1       0.8       1.06   0.680       0             5.78
18 mu_1       0.9       1.06   0.0871      0            11.9 
19 mu_0       0.1       9.11   0.00000550  0           588.  
20 mu_0       0.2       4.73   0.00115     0           226.  
21 mu_0       0.3       2.02   0.0275      0            52.3 
22 mu_0       0.4       1.24   0.144       0            13.4 
23 mu_0       0.5       1.08   0.444       0             8.61
24 mu_0       0.6       1.05   0.716       0             4.30
25 mu_0       0.7       1.05   0.950       0             3.76
26 mu_0       0.8       1.06   0.948       0             3.31
27 mu_0       0.9       1.03   0.302       0             8.70
[1] "Total run time was 83.972 seconds"
