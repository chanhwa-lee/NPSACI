
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1354"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4  7  4  5  1  2  6 10 10  3  5  6 10 12  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02931 0.32475 0.57809 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
784 570 
[1] "treatment indicator table: "

  0   1 
489 865 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 700
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 49.376 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.199 0.106 
 2 mu         0.1   0.2 0.271 0.0907
 3 mu         0.1   0.3 0.314 0.114 
 4 mu         0.1   0.4 0.317 0.125 
 5 mu         0.1   0.5 0.315 0.133 
 6 mu         0.2   0.1 0.246 0.0675
 7 mu         0.2   0.2 0.322 0.0683
 8 mu         0.2   0.3 0.376 0.0873
 9 mu         0.2   0.4 0.411 0.103 
10 mu         0.2   0.5 0.423 0.112 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.524       0.0308 0.0000000472      9.25
 2 mu         0.2      0.746       0.291  0.0000922         4.29
 3 mu         0.3      0.875       0.720  0.00525           3.44
 4 mu         0.4      0.971       0.957  0.0655            2.34
 5 mu         0.5      1.02        1.03   0.264             1.99
 6 mu         0.6      1.01        1.01   0.455             1.66
 7 mu         0.7      0.966       0.981  0.282             1.62
 8 mu         0.8      0.918       0.919  0.0582            1.82
 9 mu         0.9      0.886       0.724  0.00253           5.32
10 mu_1       0.1      0.672       0.123  0.000000287       5.79
11 mu_1       0.2      0.825       0.546  0.000285          4.11
12 mu_1       0.3      0.924       0.861  0.0110            3.05
13 mu_1       0.4      1.00        1.04   0.105             2.08
14 mu_1       0.5      1.03        1.03   0.341             1.99
15 mu_1       0.6      1.00        0.998  0.498             1.58
16 mu_1       0.7      0.959       0.974  0.200             1.66
17 mu_1       0.8      0.909       0.902  0.0378            1.98
18 mu_1       0.9      0.887       0.677  0.00153           5.77
19 mu_0       0.1      0.507       0.0201 0.0000000205     10.3 
20 mu_0       0.2      0.726       0.219  0.0000440         5.20
21 mu_0       0.3      0.854       0.606  0.00279           3.60
22 mu_0       0.4      0.949       0.901  0.0392            2.52
23 mu_0       0.5      1.01        1.03   0.188             1.99
24 mu_0       0.6      1.01        1.02   0.360             1.79
25 mu_0       0.7      0.982       1.01   0.439             1.52
26 mu_0       0.8      0.954       0.952  0.140             1.71
27 mu_0       0.9      0.876       0.877  0.0115            2.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.507   0.0000193   2.53e-15     20.3 
 2 mu         0.2      1.35    0.00258     5.25e-10     24.5 
 3 mu         0.3      2.05    0.0502      5.94e- 7     43.0 
 4 mu         0.4      1.94    0.257       7.73e- 5     27.9 
 5 mu         0.5      1.44    0.640       2.98e- 3      9.70
 6 mu         0.6      1.06    0.935       5.08e- 2      4.05
 7 mu         0.7      0.995   0.981       1.97e- 2      3.01
 8 mu         0.8      1.21    0.832       3.74e- 4      7.43
 9 mu         0.9      1.49    0.114       4.63e- 8     26.5 
10 mu_1       0.1      1.08    0.000123    2.28e-14     28.9 
11 mu_1       0.2      1.87    0.00954     2.36e- 9     36.8 
12 mu_1       0.3      2.15    0.106       1.78e- 6     43.0 
13 mu_1       0.4      1.74    0.449       1.74e- 4     21.0 
14 mu_1       0.5      1.24    0.858       5.37e- 3      7.46
15 mu_1       0.6      0.977   0.895       7.62e- 2      3.05
16 mu_1       0.7      1.00    1.01        6.48e- 3      3.39
17 mu_1       0.8      1.25    0.677       1.40e- 4      8.35
18 mu_1       0.9      1.50    0.0857      1.54e- 8     29.5 
19 mu_0       0.1      0.443   0.00000644  0            19.3 
20 mu_0       0.2      1.22    0.00108     0            21.4 
21 mu_0       0.3      2.00    0.0249      0            43.0 
22 mu_0       0.4      2.08    0.111       0            32.6 
23 mu_0       0.5      1.64    0.415       0            11.9 
24 mu_0       0.6      1.19    0.996       0             6.23
25 mu_0       0.7      0.976   0.922       0             2.64
26 mu_0       0.8      1.07    1.06        0             4.60
27 mu_0       0.9      1.42    0.301       0            15.5 
[1] "Total run time was 52.362 seconds"
