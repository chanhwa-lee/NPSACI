
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1328"
[1] "cluster size dist'n: "

 5  6  7  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4 10  1  9  6  1  4 11 10  9  5  6 11  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01545 0.29291 0.56029 0.91060 4.48021 
[1] "event indicator table: "

  0   1 
777 551 
[1] "treatment indicator table: "

  0   1 
508 820 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 728
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 68.767 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.526 0.205 
 2 mu         0.1   0.2 0.527 0.155 
 3 mu         0.1   0.3 0.612 0.143 
 4 mu         0.1   0.4 0.727 0.192 
 5 mu         0.1   0.5 0.824 0.277 
 6 mu         0.2   0.1 0.520 0.111 
 7 mu         0.2   0.2 0.603 0.105 
 8 mu         0.2   0.3 0.684 0.0998
 9 mu         0.2   0.4 0.749 0.116 
10 mu         0.2   0.5 0.794 0.148 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.912        0.151 0.0000146      20.8 
 2 mu         0.2      1.11         0.609 0.00469        11.2 
 3 mu         0.3      1.07         0.878 0.0583          5.07
 4 mu         0.4      1.01         0.954 0.216           2.43
 5 mu         0.5      0.993        0.991 0.358           1.64
 6 mu         0.6      1.00         0.994 0.499           1.48
 7 mu         0.7      1.02         1.01  0.516           1.60
 8 mu         0.8      1.03         1.01  0.181           2.82
 9 mu         0.9      1.08         0.895 0.00813         8.27
10 mu_1       0.1      1.21         0.421 0.0000732      21.9 
11 mu_1       0.2      1.14         0.898 0.0118          7.13
12 mu_1       0.3      1.04         0.959 0.0989          3.52
13 mu_1       0.4      0.993        0.941 0.274           2.07
14 mu_1       0.5      0.992        1.00  0.400           1.48
15 mu_1       0.6      1.01         1.00  0.487           1.53
16 mu_1       0.7      1.02         1.01  0.484           1.61
17 mu_1       0.8      1.04         1.01  0.146           3.05
18 mu_1       0.9      1.08         0.868 0.00598         9.04
19 mu_0       0.1      0.879        0.118 0.00000812     20.7 
20 mu_0       0.2      1.11         0.516 0.00292        12.6 
21 mu_0       0.3      1.08         0.838 0.0409          5.82
22 mu_0       0.4      1.02         0.955 0.165           2.84
23 mu_0       0.5      0.993        0.960 0.317           1.80
24 mu_0       0.6      0.994        0.989 0.498           1.46
25 mu_0       0.7      1.01         1.00  0.492           1.56
26 mu_0       0.8      1.03         1.04  0.325           1.93
27 mu_0       0.9      1.04         0.985 0.0275          4.24
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.37     0.0000543  5.13e-15     68.4 
 2 mu         0.2      1.44     0.00574    5.98e-10     46.8 
 3 mu         0.3      1.33     0.0535     5.16e- 7     20.2 
 4 mu         0.4      1.16     0.301      5.88e- 5     15.6 
 5 mu         0.5      0.969    0.719      2.18e- 3      6.42
 6 mu         0.6      0.910    0.820      1.29e- 2      3.85
 7 mu         0.7      1.03     0.936      2.34e- 4      6.34
 8 mu         0.8      1.22     0.661      6.97e- 7      5.66
 9 mu         0.9      1.22     0.0696     2.69e-11      9.51
10 mu_1       0.1      1.45     0.000358   0            80.5 
11 mu_1       0.2      1.36     0.0164     0            27.5 
12 mu_1       0.3      1.25     0.122      0            21.0 
13 mu_1       0.4      1.06     0.476      0            12.2 
14 mu_1       0.5      0.914    0.840      0             4.01
15 mu_1       0.6      0.920    0.897      0             4.17
16 mu_1       0.7      1.07     1.02       0             6.67
17 mu_1       0.8      1.25     0.549      0             6.20
18 mu_1       0.9      1.20     0.0515     0             9.98
19 mu_0       0.1      1.36     0.0000167  0            67.1 
20 mu_0       0.2      1.46     0.00174    0            51.6 
21 mu_0       0.3      1.37     0.0246     0            19.8 
22 mu_0       0.4      1.22     0.158      0            17.9 
23 mu_0       0.5      1.02     0.524      0             8.82
24 mu_0       0.6      0.895    0.870      0             3.37
25 mu_0       0.7      0.925    0.816      0             5.56
26 mu_0       0.8      1.10     0.872      0             7.12
27 mu_0       0.9      1.36     0.204      0             9.21
[1] "Total run time was 72.449 seconds"
