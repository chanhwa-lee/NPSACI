
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1227"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  8  5  6  9  5  6  1  5 10  5  3  8  8  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02643 0.34239 0.62440 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
728 499 
[1] "treatment indicator table: "

  0   1 
467 760 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 48.933 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.179 0.0410
 2 mu         0.1   0.2 0.169 0.0449
 3 mu         0.1   0.3 0.186 0.0479
 4 mu         0.1   0.4 0.225 0.0576
 5 mu         0.1   0.5 0.256 0.0607
 6 mu         0.2   0.1 0.260 0.0356
 7 mu         0.2   0.2 0.276 0.0399
 8 mu         0.2   0.3 0.309 0.0441
 9 mu         0.2   0.4 0.361 0.0576
10 mu         0.2   0.5 0.404 0.0596
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.454       0.0682 0.0000503      4.83
 2 mu         0.2      0.761       0.474  0.0101         3.51
 3 mu         0.3      0.919       0.820  0.0816         3.32
 4 mu         0.4      0.997       0.968  0.242          2.60
 5 mu         0.5      1.01        1.00   0.453          1.86
 6 mu         0.6      1.00        1.00   0.578          1.33
 7 mu         0.7      1.00        1.01   0.476          1.64
 8 mu         0.8      0.978       0.949  0.115          2.10
 9 mu         0.9      0.917       0.898  0.00736        2.67
10 mu_1       0.1      0.774       0.235  0.000244       5.68
11 mu_1       0.2      0.911       0.751  0.0239         3.98
12 mu_1       0.3      0.989       0.938  0.131          3.01
13 mu_1       0.4      1.02        0.994  0.310          2.53
14 mu_1       0.5      1.01        0.993  0.492          1.60
15 mu_1       0.6      1.00        1.01   0.550          1.40
16 mu_1       0.7      1.00        1.01   0.378          1.67
17 mu_1       0.8      0.972       0.934  0.0867         2.17
18 mu_1       0.9      0.912       0.861  0.00530        2.83
19 mu_0       0.1      0.418       0.0527 0.0000288      4.73
20 mu_0       0.2      0.723       0.364  0.00636        3.66
21 mu_0       0.3      0.889       0.715  0.0605         3.45
22 mu_0       0.4      0.981       0.967  0.197          2.75
23 mu_0       0.5      1.01        1.01   0.386          2.12
24 mu_0       0.6      0.998       1.00   0.562          1.40
25 mu_0       0.7      1.00        1.00   0.534          1.56
26 mu_0       0.8      1.00        0.986  0.230          1.82
27 mu_0       0.9      0.962       0.934  0.0258         2.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.554    0.000196   9.78e-16     24.2 
 2 mu         0.2      0.927    0.0122     2.28e-10     22.5 
 3 mu         0.3      0.989    0.126      2.95e- 7     16.4 
 4 mu         0.4      0.985    0.509      4.48e- 5      9.50
 5 mu         0.5      0.971    0.958      2.07e- 3      3.25
 6 mu         0.6      0.963    1.00       9.27e- 3      2.01
 7 mu         0.7      0.995    1.01       1.48e- 4      3.13
 8 mu         0.8      1.15     0.671      3.35e- 7      6.87
 9 mu         0.9      1.53     0.0908     7.28e-12     17.5 
10 mu_1       0.1      0.973    0.00114    9.27e-15     30.3 
11 mu_1       0.2      1.11     0.0382     1.08e- 9     18.7 
12 mu_1       0.3      1.06     0.255      9.31e- 7     14.6 
13 mu_1       0.4      1.01     0.703      1.06e- 4      6.33
14 mu_1       0.5      0.978    1.04       3.93e- 3      2.61
15 mu_1       0.6      0.970    1.01       2.13e- 3      2.17
16 mu_1       0.7      1.01     0.923      3.33e- 5      3.72
17 mu_1       0.8      1.19     0.519      6.62e- 8      7.84
18 mu_1       0.9      1.55     0.0640     1.28e-12     18.1 
19 mu_0       0.1      0.507    0.0000507  0            23.5 
20 mu_0       0.2      0.882    0.00618    0            23.7 
21 mu_0       0.3      0.958    0.0664     0            17.2 
22 mu_0       0.4      0.969    0.312      0            11.6 
23 mu_0       0.5      0.965    0.680      0             4.58
24 mu_0       0.6      0.954    1.03       0             2.26
25 mu_0       0.7      0.953    1.00       0             2.44
26 mu_0       0.8      1.01     0.880      0             5.72
27 mu_0       0.9      1.31     0.216      0            11.6 
[1] "Total run time was 52.274 seconds"
