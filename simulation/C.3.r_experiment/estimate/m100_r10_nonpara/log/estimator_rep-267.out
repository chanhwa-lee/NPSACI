
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1303"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  6  9  4  5  7  5  7 10  7  4  6  8  4 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04194 0.37372 0.63450 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
771 532 
[1] "treatment indicator table: "

  0   1 
464 839 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.078 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.375 0.157
 2 mu         0.1   0.2 0.446 0.140
 3 mu         0.1   0.3 0.464 0.110
 4 mu         0.1   0.4 0.457 0.109
 5 mu         0.1   0.5 0.459 0.112
 6 mu         0.2   0.1 0.463 0.147
 7 mu         0.2   0.2 0.513 0.126
 8 mu         0.2   0.3 0.535 0.106
 9 mu         0.2   0.4 0.547 0.103
10 mu         0.2   0.5 0.559 0.104
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.784       0.0384 0.00000000383     11.1 
 2 mu         0.2      0.998       0.360  0.0000158         13.4 
 3 mu         0.3      1.16        0.777  0.00142           12.1 
 4 mu         0.4      1.19        1.02   0.0250             5.60
 5 mu         0.5      1.12        1.08   0.168              2.62
 6 mu         0.6      1.05        1.06   0.481              1.95
 7 mu         0.7      1.01        0.998  0.326              1.87
 8 mu         0.8      0.966       0.950  0.254              1.87
 9 mu         0.9      0.886       0.670  0.0519             3.73
10 mu_1       0.1      0.859       0.149  0.0000000251      11.9 
11 mu_1       0.2      1.10        0.642  0.0000523         15.8 
12 mu_1       0.3      1.19        0.987  0.00318            9.58
13 mu_1       0.4      1.17        1.05   0.0424             3.69
14 mu_1       0.5      1.09        1.11   0.231              2.50
15 mu_1       0.6      1.03        1.01   0.424              1.68
16 mu_1       0.7      0.995       0.970  0.327              1.89
17 mu_1       0.8      0.957       0.948  0.225              1.90
18 mu_1       0.9      0.880       0.668  0.0436             3.83
19 mu_0       0.1      0.776       0.0258 0.00000000147     12.2 
20 mu_0       0.2      0.973       0.279  0.00000668        12.8 
21 mu_0       0.3      1.15        0.705  0.000673          13.1 
22 mu_0       0.4      1.20        0.992  0.0134             6.87
23 mu_0       0.5      1.16        1.08   0.104              2.74
24 mu_0       0.6      1.08        1.09   0.342              2.37
25 mu_0       0.7      1.03        1.03   0.324              1.82
26 mu_0       0.8      1.00        0.974  0.312              1.95
27 mu_0       0.9      0.944       0.909  0.0806             2.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.30    0.0000334   2.20e-15     78.5 
 2 mu         0.2      2.78    0.00487     4.56e-10    172.  
 3 mu         0.3      2.92    0.0502      5.16e- 7    134.  
 4 mu         0.4      2.20    0.269       4.87e- 5     58.1 
 5 mu         0.5      1.45    0.662       1.11e- 3     15.3 
 6 mu         0.6      1.06    0.879       1.42e- 2      3.67
 7 mu         0.7      1.01    0.938       1.88e- 3      3.72
 8 mu         0.8      1.18    0.955       1.26e- 5     11.4 
 9 mu         0.9      1.52    0.208       1.33e- 9     47.5 
10 mu_1       0.1      2.55    0.000227    1.98e-14    168.  
11 mu_1       0.2      3.21    0.0167      2.05e- 9    184.  
12 mu_1       0.3      2.66    0.125       1.55e- 6     95.4 
13 mu_1       0.4      1.84    0.456       1.22e- 4     31.1 
14 mu_1       0.5      1.25    0.828       2.21e- 3      7.03
15 mu_1       0.6      1.00    0.828       1.56e- 2      3.69
16 mu_1       0.7      1.03    1.08        7.07e- 4      3.98
17 mu_1       0.8      1.21    0.822       3.77e- 6     13.5 
18 mu_1       0.9      1.55    0.159       3.28e-10     50.0 
19 mu_0       0.1      1.16    0.00000751  0            68.5 
20 mu_0       0.2      2.68    0.00180     0           169.  
21 mu_0       0.3      3.03    0.0196      0           150.  
22 mu_0       0.4      2.44    0.116       0            76.0 
23 mu_0       0.5      1.65    0.522       0            24.0 
24 mu_0       0.6      1.15    0.902       0             6.12
25 mu_0       0.7      0.983   0.862       0             3.91
26 mu_0       0.8      1.05    1.03        0             4.54
27 mu_0       0.9      1.28    0.262       0            25.0 
[1] "Total run time was 63.86 seconds"
