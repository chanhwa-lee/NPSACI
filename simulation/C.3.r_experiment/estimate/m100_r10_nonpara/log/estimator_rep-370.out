
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1280"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  8  8  6  5  5  4  6  7  2 11  7  9  5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03409 0.35502 0.61067 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
764 516 
[1] "treatment indicator table: "

  0   1 
472 808 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 104.479 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est    se
   <chr>    <dbl> <dbl>  <dbl> <dbl>
 1 mu         0.1   0.1 0.0591 0.222
 2 mu         0.1   0.2 0.0615 0.311
 3 mu         0.1   0.3 0.0470 0.342
 4 mu         0.1   0.4 0.0501 0.358
 5 mu         0.1   0.5 0.0602 0.370
 6 mu         0.2   0.1 0.129  0.173
 7 mu         0.2   0.2 0.149  0.244
 8 mu         0.2   0.3 0.152  0.269
 9 mu         0.2   0.4 0.168  0.281
10 mu         0.2   0.5 0.187  0.290
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.747       0.0690 0.000000232      12.7 
 2 mu         0.2      0.880       0.403  0.000217          5.23
 3 mu         0.3      0.938       0.728  0.00789           3.44
 4 mu         0.4      0.967       0.905  0.0605            2.82
 5 mu         0.5      0.982       0.993  0.202             1.93
 6 mu         0.6      0.998       0.989  0.433             1.72
 7 mu         0.7      1.01        0.999  0.221             1.66
 8 mu         0.8      1.02        0.968  0.0735            2.10
 9 mu         0.9      0.988       0.848  0.00225           3.40
10 mu_1       0.1      0.998       0.235  0.00000142        9.72
11 mu_1       0.2      0.963       0.700  0.000669          4.32
12 mu_1       0.3      0.980       0.948  0.0163            3.22
13 mu_1       0.4      0.984       1.00   0.101             2.58
14 mu_1       0.5      0.992       1.03   0.281             1.63
15 mu_1       0.6      1.00        0.984  0.363             1.73
16 mu_1       0.7      1.02        1.01   0.215             1.68
17 mu_1       0.8      1.02        0.968  0.0525            2.26
18 mu_1       0.9      0.981       0.842  0.00150           3.43
19 mu_0       0.1      0.719       0.0531 0.0000000996     13.2 
20 mu_0       0.2      0.859       0.326  0.000104          5.80
21 mu_0       0.3      0.921       0.655  0.00427           3.53
22 mu_0       0.4      0.956       0.906  0.0337            2.98
23 mu_0       0.5      0.972       0.997  0.124             2.23
24 mu_0       0.6      0.987       0.989  0.317             1.72
25 mu_0       0.7      1.01        1.00   0.234             1.63
26 mu_0       0.8      1.04        1.03   0.157             1.72
27 mu_0       0.9      1.06        1.02   0.00904           3.14
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.43     0.000107   5.76e-15    226.  
 2 mu         0.2      1.67     0.0126     6.72e-10     99.2 
 3 mu         0.3      1.46     0.101      5.79e- 7     39.0 
 4 mu         0.4      1.37     0.405      6.60e- 5     13.2 
 5 mu         0.5      1.25     0.890      2.44e- 3      6.45
 6 mu         0.6      1.10     1.01       4.34e- 2      3.71
 7 mu         0.7      1.09     0.987      3.22e- 3      4.46
 8 mu         0.8      1.48     0.652      2.15e- 5     16.0 
 9 mu         0.9      2.47     0.0846     2.37e- 9     74.2 
10 mu_1       0.1      0.424    0.000698   0            15.9 
11 mu_1       0.2      0.983    0.0324     0            17.4 
12 mu_1       0.3      1.24     0.226      0            13.5 
13 mu_1       0.4      1.30     0.618      0             8.87
14 mu_1       0.5      1.20     0.978      0             5.65
15 mu_1       0.6      1.07     1.10       0             3.78
16 mu_1       0.7      1.13     0.934      0             5.09
17 mu_1       0.8      1.58     0.503      0            20.1 
18 mu_1       0.9      2.57     0.0529     0            82.4 
19 mu_0       0.1      2.65     0.0000403  0           252.  
20 mu_0       0.2      1.85     0.00586    0           124.  
21 mu_0       0.3      1.56     0.0461     0            55.7 
22 mu_0       0.4      1.41     0.235      0            22.1 
23 mu_0       0.5      1.30     0.651      0             7.39
24 mu_0       0.6      1.14     0.940      0             4.90
25 mu_0       0.7      1.01     0.991      0             3.50
26 mu_0       0.8      1.08     0.900      0             7.45
27 mu_0       0.9      1.54     0.171      0            16.6 
[1] "Total run time was 111.088 seconds"
