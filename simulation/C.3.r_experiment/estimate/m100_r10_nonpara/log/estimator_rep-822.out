
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1324"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  3  6  4  5  6  3  4  7 13  8  8  8  7  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04199 0.37112 0.61993 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
778 546 
[1] "treatment indicator table: "

  0   1 
471 853 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.086 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.305 0.206
 2 mu         0.1   0.2 0.574 0.261
 3 mu         0.1   0.3 0.676 0.253
 4 mu         0.1   0.4 0.763 0.255
 5 mu         0.1   0.5 0.834 0.275
 6 mu         0.2   0.1 0.343 0.150
 7 mu         0.2   0.2 0.540 0.173
 8 mu         0.2   0.3 0.657 0.169
 9 mu         0.2   0.4 0.745 0.176
10 mu         0.2   0.5 0.829 0.192
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.29         0.155 0.00000557     30.3 
 2 mu         0.2      1.38         0.732 0.00144        27.0 
 3 mu         0.3      1.28         0.969 0.0267         12.6 
 4 mu         0.4      1.16         1.04  0.161           4.18
 5 mu         0.5      1.09         1.08  0.428           2.27
 6 mu         0.6      1.04         1.02  0.602           1.68
 7 mu         0.7      0.980        0.985 0.403           1.82
 8 mu         0.8      0.913        0.857 0.214           1.57
 9 mu         0.9      0.852        0.760 0.0209          2.65
10 mu_1       0.1      1.28         0.318 0.0000317      39.5 
11 mu_1       0.2      1.32         0.860 0.00418        19.4 
12 mu_1       0.3      1.20         1.00  0.0528          6.40
13 mu_1       0.4      1.11         1.06  0.246           3.27
14 mu_1       0.5      1.06         1.04  0.488           1.78
15 mu_1       0.6      1.02         1.02  0.577           1.79
16 mu_1       0.7      0.962        0.977 0.342           1.78
17 mu_1       0.8      0.901        0.855 0.203           1.65
18 mu_1       0.9      0.847        0.730 0.0156          2.90
19 mu_0       0.1      1.29         0.123 0.00000259     33.6 
20 mu_0       0.2      1.40         0.652 0.000758       28.9 
21 mu_0       0.3      1.32         0.952 0.0155         15.3 
22 mu_0       0.4      1.19         1.04  0.104           5.55
23 mu_0       0.5      1.12         1.10  0.362           2.76
24 mu_0       0.6      1.07         1.06  0.540           2.08
25 mu_0       0.7      1.02         0.994 0.520           1.91
26 mu_0       0.8      0.963        0.964 0.198           1.65
27 mu_0       0.9      0.896        0.851 0.0197          2.13
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      38.8    0.00000775  1.44e-16   3675.  
 2 mu         0.2      12.0    0.00165     3.77e-11    992.  
 3 mu         0.3       3.39   0.0276      5.57e- 8    154.  
 4 mu         0.4       1.66   0.204       9.88e- 6     16.3 
 5 mu         0.5       1.20   0.650       5.48e- 4      7.38
 6 mu         0.6       1.06   0.999       1.46e- 2      4.19
 7 mu         0.7       1.09   1.11        1.99e- 4      2.70
 8 mu         0.8       1.16   0.929       2.31e- 7      4.60
 9 mu         0.9       1.27   0.198       1.98e-12     21.6 
10 mu_1       0.1      22.8    0.0000636   1.44e-15   2042.  
11 mu_1       0.2       4.65   0.00696     1.88e-10    276.  
12 mu_1       0.3       1.93   0.0617      1.86e- 7     28.5 
13 mu_1       0.4       1.37   0.355       2.47e- 5     11.1 
14 mu_1       0.5       1.11   0.778       1.10e- 3      5.89
15 mu_1       0.6       1.05   0.973       2.10e- 3      3.84
16 mu_1       0.7       1.11   1.10        1.58e- 5      2.78
17 mu_1       0.8       1.17   0.750       1.60e- 8      5.41
18 mu_1       0.9       1.29   0.144       1.22e-13     24.0 
19 mu_0       0.1      40.6    0.00000160  0          3856.  
20 mu_0       0.2      13.9    0.000433    0          1172.  
21 mu_0       0.3       4.02   0.0125      0           207.  
22 mu_0       0.4       1.85   0.0950      0            23.5 
23 mu_0       0.5       1.28   0.412       0             9.49
24 mu_0       0.6       1.07   0.914       0             4.72
25 mu_0       0.7       1.07   0.954       0             2.57
26 mu_0       0.8       1.12   1.18        0             3.18
27 mu_0       0.9       1.15   0.424       0             8.91
[1] "Total run time was 53.923 seconds"
