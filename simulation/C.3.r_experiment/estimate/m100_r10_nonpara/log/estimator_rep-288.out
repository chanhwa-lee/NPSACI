
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1294"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  5  5 10  3  4  9  6  6  5  5  9  9  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03918 0.33395 0.60080 1.00000 6.42339 
[1] "event indicator table: "

  0   1 
771 523 
[1] "treatment indicator table: "

  0   1 
481 813 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 677
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.324 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau      est    se
   <chr>    <dbl> <dbl>    <dbl> <dbl>
 1 mu         0.1   0.1 -0.00104 0.134
 2 mu         0.1   0.2  0.0756  0.149
 3 mu         0.1   0.3  0.0559  0.183
 4 mu         0.1   0.4  0.101   0.204
 5 mu         0.1   0.5  0.104   0.219
 6 mu         0.2   0.1  0.0895  0.114
 7 mu         0.2   0.2  0.186   0.127
 8 mu         0.2   0.3  0.188   0.156
 9 mu         0.2   0.4  0.238   0.173
10 mu         0.2   0.5  0.260   0.185
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.556      0.00724 0.000000122      32.5 
 2 mu         0.2      0.830      0.124   0.000142         26.4 
 3 mu         0.3      0.955      0.423   0.00631          14.4 
 4 mu         0.4      0.967      0.761   0.0678            6.16
 5 mu         0.5      0.966      0.941   0.309             2.32
 6 mu         0.6      0.986      0.997   0.569             1.60
 7 mu         0.7      1.01       1.00    0.443             1.74
 8 mu         0.8      1.04       1.01    0.119             2.39
 9 mu         0.9      1.14       0.688   0.00250          11.2 
10 mu_1       0.1      0.828      0.0302  0.000000763      37.3 
11 mu_1       0.2      0.923      0.259   0.000451         15.8 
12 mu_1       0.3      0.965      0.659   0.0135            6.92
13 mu_1       0.4      0.957      0.899   0.111             3.18
14 mu_1       0.5      0.966      0.974   0.411             1.79
15 mu_1       0.6      0.992      0.984   0.565             1.51
16 mu_1       0.7      1.02       1.01    0.374             1.83
17 mu_1       0.8      1.04       0.994   0.0884            2.77
18 mu_1       0.9      1.15       0.630   0.00170          12.3 
19 mu_0       0.1      0.526      0.00482 0.0000000510     32.0 
20 mu_0       0.2      0.806      0.0923  0.0000651        29.1 
21 mu_0       0.3      0.951      0.330   0.00322          17.9 
22 mu_0       0.4      0.974      0.678   0.0393            8.74
23 mu_0       0.5      0.965      0.868   0.208             3.56
24 mu_0       0.6      0.977      0.966   0.519             1.77
25 mu_0       0.7      0.997      0.993   0.447             1.56
26 mu_0       0.8      1.01       1.03    0.242             2.14
27 mu_0       0.9      1.02       0.974   0.00968           2.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.60    0.0000736  6.30e-15    200.  
 2 mu         0.2       6.38    0.00544    1.47e- 9    390.  
 3 mu         0.3       5.27    0.0645     1.90e- 6    265.  
 4 mu         0.4       3.02    0.262      2.67e- 4     98.9 
 5 mu         0.5       1.67    0.703      9.49e- 3     21.7 
 6 mu         0.6       1.25    1.03       1.55e- 1      5.08
 7 mu         0.7       1.32    1.11       6.96e- 3      4.53
 8 mu         0.8       1.99    0.746      5.32e- 5     25.2 
 9 mu         0.9       4.58    0.0812     6.58e- 9    115.  
10 mu_1       0.1       6.49    0.000533   5.97e-14    401.  
11 mu_1       0.2       6.51    0.0227     6.95e- 9    390.  
12 mu_1       0.3       4.04    0.151      5.99e- 6    177.  
13 mu_1       0.4       2.16    0.477      6.68e- 4     49.4 
14 mu_1       0.5       1.38    0.976      1.90e- 2      8.67
15 mu_1       0.6       1.23    1.04       7.75e- 2      4.84
16 mu_1       0.7       1.40    1.22       2.98e- 3      5.47
17 mu_1       0.8       2.19    0.577      1.99e- 5     29.9 
18 mu_1       0.9       4.89    0.0608     2.19e- 9    128.  
19 mu_0       0.1       3.27    0.0000295  0           178.  
20 mu_0       0.2       6.35    0.00201    0           390.  
21 mu_0       0.3       5.79    0.0295     0           303.  
22 mu_0       0.4       3.59    0.123      0           132.  
23 mu_0       0.5       1.96    0.475      0            34.7 
24 mu_0       0.6       1.27    0.949      0             5.44
25 mu_0       0.7       1.12    0.937      0             4.76
26 mu_0       0.8       1.19    0.928      0             6.63
27 mu_0       0.9       1.86    0.119      0            55.3 
[1] "Total run time was 55.432 seconds"
