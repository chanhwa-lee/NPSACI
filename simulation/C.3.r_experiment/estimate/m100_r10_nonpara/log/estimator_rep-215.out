
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1320"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  4  7  4  5  6  7  3  7  8  5 11  9  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02748 0.32319 0.58111 1.00000 4.14707 
[1] "event indicator table: "

  0   1 
796 524 
[1] "treatment indicator table: "

  0   1 
477 843 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 669
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.261 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.592 0.162 
 2 mu         0.1   0.2 0.736 0.210 
 3 mu         0.1   0.3 0.802 0.219 
 4 mu         0.1   0.4 0.853 0.229 
 5 mu         0.1   0.5 0.862 0.234 
 6 mu         0.2   0.1 0.520 0.0978
 7 mu         0.2   0.2 0.635 0.124 
 8 mu         0.2   0.3 0.703 0.126 
 9 mu         0.2   0.4 0.750 0.130 
10 mu         0.2   0.5 0.766 0.132 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.22        0.0643 0.000000261     24.7 
 2 mu         0.2      1.19        0.413  0.000245        14.2 
 3 mu         0.3      1.10        0.754  0.00889          6.18
 4 mu         0.4      1.03        0.860  0.0792           2.89
 5 mu         0.5      1.00        0.959  0.310            1.79
 6 mu         0.6      1.01        1.00   0.605            1.48
 7 mu         0.7      1.00        1.02   0.459            1.53
 8 mu         0.8      1.00        0.978  0.298            2.10
 9 mu         0.9      0.974       0.859  0.0275           2.75
10 mu_1       0.1      1.09        0.198  0.00000160      20.9 
11 mu_1       0.2      1.07        0.647  0.000755         7.37
12 mu_1       0.3      1.03        0.837  0.0184           3.69
13 mu_1       0.4      1.00        0.929  0.125            2.17
14 mu_1       0.5      1.00        1.01   0.400            1.80
15 mu_1       0.6      1.01        1.02   0.565            1.44
16 mu_1       0.7      1.01        1.00   0.416            1.61
17 mu_1       0.8      1.00        0.961  0.287            2.21
18 mu_1       0.9      0.968       0.823  0.0207           2.97
19 mu_0       0.1      1.24        0.0468 0.000000112     25.2 
20 mu_0       0.2      1.21        0.342  0.000118        16.1 
21 mu_0       0.3      1.12        0.704  0.00482          7.48
22 mu_0       0.4      1.04        0.839  0.0490           3.52
23 mu_0       0.5      1.00        0.937  0.219            2.13
24 mu_0       0.6      1.00        0.992  0.553            1.68
25 mu_0       0.7      1.00        1.00   0.490            1.50
26 mu_0       0.8      0.999       1.02   0.341            1.89
27 mu_0       0.9      1.03        0.947  0.0881           2.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.55     0.0000510  3.89e-16    117.  
 2 mu         0.2      2.34     0.00493    8.35e-11    127.  
 3 mu         0.3      1.73     0.0457     8.23e- 8     44.2 
 4 mu         0.4      1.23     0.211      1.09e- 5     10.8 
 5 mu         0.5      0.963    0.636      4.86e- 4      5.35
 6 mu         0.6      0.852    0.894      1.08e- 2      2.59
 7 mu         0.7      0.950    0.870      3.12e- 4      3.03
 8 mu         0.8      1.16     0.984      4.73e- 7      6.29
 9 mu         0.9      1.26     0.197      5.13e-12     10.8 
10 mu_1       0.1      2.63     0.000431   3.68e-15    176.  
11 mu_1       0.2      2.32     0.0154     4.17e-10     95.2 
12 mu_1       0.3      1.52     0.126      2.74e- 7     22.1 
13 mu_1       0.4      1.13     0.358      2.74e- 5      9.04
14 mu_1       0.5      0.912    0.756      9.72e- 4      4.57
15 mu_1       0.6      0.856    0.896      6.53e- 3      2.30
16 mu_1       0.7      0.988    0.859      6.68e- 5      3.41
17 mu_1       0.8      1.18     0.841      8.86e- 8      6.55
18 mu_1       0.9      1.26     0.142      8.56e-13     11.8 
19 mu_0       0.1      1.43     0.0000159  0           111.  
20 mu_0       0.2      2.35     0.00144    0           135.  
21 mu_0       0.3      1.82     0.0178     0            53.7 
22 mu_0       0.4      1.31     0.105      0            12.1 
23 mu_0       0.5      1.01     0.380      0             7.13
24 mu_0       0.6      0.846    0.737      0             3.30
25 mu_0       0.7      0.861    0.838      0             2.66
26 mu_0       0.8      1.06     0.945      0             5.24
27 mu_0       0.9      1.26     0.357      0             8.32
[1] "Total run time was 71.12 seconds"
