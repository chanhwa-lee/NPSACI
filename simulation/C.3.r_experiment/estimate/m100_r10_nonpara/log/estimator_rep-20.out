
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1248"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5 10  7  7  2  6 10  3  8  6  4  5  4  9  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02825 0.33709 0.58069 1.00000 5.03058 
[1] "event indicator table: "

  0   1 
732 516 
[1] "treatment indicator table: "

  0   1 
441 807 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.627 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.547 0.167
 2 mu         0.1   0.2 0.633 0.210
 3 mu         0.1   0.3 0.687 0.219
 4 mu         0.1   0.4 0.692 0.220
 5 mu         0.1   0.5 0.707 0.223
 6 mu         0.2   0.1 0.516 0.117
 7 mu         0.2   0.2 0.588 0.136
 8 mu         0.2   0.3 0.600 0.124
 9 mu         0.2   0.4 0.612 0.120
10 mu         0.2   0.5 0.636 0.131
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.764       0.0624 0.00000180      18.2 
 2 mu         0.2      0.833       0.339  0.00130          8.25
 3 mu         0.3      0.894       0.771  0.0266           4.05
 4 mu         0.4      0.943       0.900  0.125            2.53
 5 mu         0.5      0.976       0.960  0.310            1.95
 6 mu         0.6      0.981       0.998  0.348            1.51
 7 mu         0.7      0.973       0.951  0.582            1.46
 8 mu         0.8      0.987       0.997  0.395            1.53
 9 mu         0.9      0.974       0.883  0.0795           3.23
10 mu_1       0.1      0.790       0.184  0.00000992      13.8 
11 mu_1       0.2      0.891       0.582  0.00360          5.32
12 mu_1       0.3      0.936       0.886  0.0485           3.24
13 mu_1       0.4      0.970       0.936  0.177            2.25
14 mu_1       0.5      0.987       0.995  0.284            1.87
15 mu_1       0.6      0.980       1.01   0.400            1.47
16 mu_1       0.7      0.973       0.945  0.588            1.54
17 mu_1       0.8      0.988       1.01   0.353            1.64
18 mu_1       0.9      0.968       0.847  0.0655           3.52
19 mu_0       0.1      0.761       0.0458 0.000000900     20.3 
20 mu_0       0.2      0.819       0.270  0.000729         9.22
21 mu_0       0.3      0.875       0.709  0.0173           4.40
22 mu_0       0.4      0.924       0.878  0.0773           2.71
23 mu_0       0.5      0.965       0.948  0.227            2.02
24 mu_0       0.6      0.982       0.992  0.270            1.67
25 mu_0       0.7      0.975       1.01   0.481            1.37
26 mu_0       0.8      0.983       0.964  0.562            1.73
27 mu_0       0.9      1.02        1.02   0.206            2.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01     0.000123   8.47e-15     59.9 
 2 mu         0.2      1.23     0.0121     9.87e-10     44.9 
 3 mu         0.3      1.20     0.100      8.51e- 7     26.7 
 4 mu         0.4      1.13     0.324      4.97e- 5     11.3 
 5 mu         0.5      1.15     0.783      1.13e- 3      5.82
 6 mu         0.6      1.14     1.11       1.45e- 2      6.52
 7 mu         0.7      1.09     1.07       4.67e- 3      3.69
 8 mu         0.8      1.19     0.775      2.08e- 5      6.01
 9 mu         0.9      1.63     0.107      1.14e- 9     19.2 
10 mu_1       0.1      0.799    0.000637   0            48.7 
11 mu_1       0.2      1.11     0.0267     0            42.1 
12 mu_1       0.3      1.11     0.228      0            18.6 
13 mu_1       0.4      1.12     0.535      0            10.0 
14 mu_1       0.5      1.18     0.940      0             6.06
15 mu_1       0.6      1.15     1.12       0             6.29
16 mu_1       0.7      1.10     1.04       0             4.16
17 mu_1       0.8      1.22     0.617      0             6.97
18 mu_1       0.9      1.67     0.0820     0            21.3 
19 mu_0       0.1      1.04     0.0000399  0            66.6 
20 mu_0       0.2      1.27     0.00493    0            45.6 
21 mu_0       0.3      1.24     0.0379     0            31.0 
22 mu_0       0.4      1.13     0.186      0            12.2 
23 mu_0       0.5      1.12     0.539      0             7.53
24 mu_0       0.6      1.12     0.965      0             6.87
25 mu_0       0.7      1.07     1.03       0             5.00
26 mu_0       0.8      1.05     1.00       0             5.69
27 mu_0       0.9      1.29     0.352      0             9.92
[1] "Total run time was 46.904 seconds"
