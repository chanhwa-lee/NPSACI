
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1183"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  9  8 12  3  5  9  3  8  8  6  6  3  6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0518  0.4409  0.6274  1.0000  4.3701 
[1] "event indicator table: "

  0   1 
712 471 
[1] "treatment indicator table: "

  0   1 
424 759 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 78.872 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.346 0.200 
 2 mu         0.1   0.2 0.477 0.245 
 3 mu         0.1   0.3 0.572 0.301 
 4 mu         0.1   0.4 0.616 0.325 
 5 mu         0.1   0.5 0.656 0.362 
 6 mu         0.2   0.1 0.248 0.0705
 7 mu         0.2   0.2 0.343 0.0742
 8 mu         0.2   0.3 0.418 0.108 
 9 mu         0.2   0.4 0.449 0.109 
10 mu         0.2   0.5 0.477 0.125 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.21        0.0552 0.0000103      58.9 
 2 mu         0.2      0.941       0.325  0.00245        12.8 
 3 mu         0.3      0.950       0.666  0.0393          4.50
 4 mu         0.4      0.991       0.970  0.199           2.47
 5 mu         0.5      1.02        0.990  0.521           1.76
 6 mu         0.6      1.01        1.02   0.719           1.34
 7 mu         0.7      0.975       0.990  0.399           1.33
 8 mu         0.8      0.955       0.955  0.0484          1.68
 9 mu         0.9      0.957       0.785  0.000527        4.68
10 mu_1       0.1      0.733       0.173  0.0000544       9.37
11 mu_1       0.2      0.900       0.596  0.00695         5.74
12 mu_1       0.3      0.971       0.873  0.0751          2.99
13 mu_1       0.4      1.01        0.988  0.291           1.97
14 mu_1       0.5      1.02        1.01   0.587           1.63
15 mu_1       0.6      0.998       1.01   0.621           1.26
16 mu_1       0.7      0.967       0.960  0.311           1.34
17 mu_1       0.8      0.953       0.942  0.0342          1.88
18 mu_1       0.9      0.958       0.766  0.000342        5.04
19 mu_0       0.1      1.26        0.0368 0.00000509     65.5 
20 mu_0       0.2      0.951       0.256  0.00133        16.0 
21 mu_0       0.3      0.941       0.575  0.0240          6.17
22 mu_0       0.4      0.980       0.877  0.137           2.87
23 mu_0       0.5      1.02        0.996  0.402           1.89
24 mu_0       0.6      1.02        1.03   0.675           1.51
25 mu_0       0.7      0.994       1.02   0.544           1.35
26 mu_0       0.8      0.963       0.948  0.105           1.46
27 mu_0       0.9      0.952       0.917  0.00219         2.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      61.4     0.000110   6.07e-15   6112.  
 2 mu         0.2      15.4     0.00788    3.98e-10   1467.  
 3 mu         0.3       2.91    0.0827     2.61e- 7    199.  
 4 mu         0.4       1.17    0.337      2.61e- 5     16.5 
 5 mu         0.5       1.06    0.817      9.26e- 4      4.12
 6 mu         0.6       1.06    1.03       1.68e- 2      2.37
 7 mu         0.7       1.12    1.13       1.10e- 4      2.58
 8 mu         0.8       1.43    0.670      8.54e- 8     20.0 
 9 mu         0.9       2.63    0.115      3.66e-13    132.  
10 mu_1       0.1      32.9     0.000782   6.07e-14   3217.  
11 mu_1       0.2       4.84    0.0295     1.99e- 9    386.  
12 mu_1       0.3       1.36    0.170      8.71e- 7     34.9 
13 mu_1       0.4       1.06    0.582      6.52e- 5      5.26
14 mu_1       0.5       1.06    1.02       1.85e- 3      3.53
15 mu_1       0.6       1.06    1.14       1.47e- 3      2.56
16 mu_1       0.7       1.14    1.01       8.30e- 6      3.37
17 mu_1       0.8       1.50    0.524      5.62e- 9     25.0 
18 mu_1       0.9       2.77    0.0778     2.14e-14    146.  
19 mu_0       0.1      64.6     0.0000404  0          6433.  
20 mu_0       0.2      18.0     0.00343    0          1737.  
21 mu_0       0.3       3.57    0.0431     0           269.  
22 mu_0       0.4       1.24    0.191      0            26.1 
23 mu_0       0.5       1.05    0.643      0             4.70
24 mu_0       0.6       1.06    1.08       0             2.95
25 mu_0       0.7       1.07    1.05       0             2.73
26 mu_0       0.8       1.14    1.09       0             4.93
27 mu_0       0.9       1.39    0.242      0            16.4 
[1] "Total run time was 83.626 seconds"
