
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1192"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  3  8  6  4  8  8  6 10  3  8  7  4  5  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05792 0.38723 0.64901 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
721 471 
[1] "treatment indicator table: "

  0   1 
376 816 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 45.913 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.307 0.0896
 2 mu         0.1   0.2 0.273 0.0829
 3 mu         0.1   0.3 0.282 0.0936
 4 mu         0.1   0.4 0.321 0.107 
 5 mu         0.1   0.5 0.423 0.131 
 6 mu         0.2   0.1 0.326 0.0795
 7 mu         0.2   0.2 0.313 0.0671
 8 mu         0.2   0.3 0.334 0.0778
 9 mu         0.2   0.4 0.384 0.0891
10 mu         0.2   0.5 0.487 0.112 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.755       0.0601  9.10e-10      8.44
 2 mu         0.2      0.948       0.361   2.88e- 6      8.86
 3 mu         0.3      1.00        0.749   2.75e- 4      9.24
 4 mu         0.4      0.994       0.942   6.02e- 3      6.00
 5 mu         0.5      0.978       0.989   5.64e- 2      3.00
 6 mu         0.6      0.978       0.999   2.93e- 1      1.81
 7 mu         0.7      1.00        1.01    4.48e- 1      1.76
 8 mu         0.8      1.02        0.965   4.35e- 1      2.07
 9 mu         0.9      1.00        0.974   3.54e- 2      3.02
10 mu_1       0.1      0.974       0.216   6.93e- 9     11.6 
11 mu_1       0.2      1.04        0.618   1.11e- 5      9.39
12 mu_1       0.3      1.01        0.889   7.15e- 4      8.74
13 mu_1       0.4      0.986       0.989   1.19e- 2      4.70
14 mu_1       0.5      0.974       0.966   9.02e- 2      2.46
15 mu_1       0.6      0.982       1.02    2.91e- 1      1.73
16 mu_1       0.7      1.01        0.990   4.74e- 1      1.89
17 mu_1       0.8      1.02        0.963   3.57e- 1      2.03
18 mu_1       0.9      1.00        0.958   2.69e- 2      3.10
19 mu_0       0.1      0.730       0.0453  2.41e-10      8.86
20 mu_0       0.2      0.925       0.288   8.20e- 7      9.05
21 mu_0       0.3      0.999       0.689   8.58e- 5      9.45
22 mu_0       0.4      0.999       0.895   2.10e- 3      6.87
23 mu_0       0.5      0.982       0.953   2.26e- 2      3.55
24 mu_0       0.6      0.972       0.963   1.40e- 1      1.99
25 mu_0       0.7      0.985       1.00    2.59e- 1      1.57
26 mu_0       0.8      1.01        0.998   3.73e- 1      2.23
27 mu_0       0.9      1.01        0.999   1.12e- 1      2.49
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      34.8     0.0000569  1.97e-15   3460.  
 2 mu         0.2      12.4     0.00527    3.17e-10   1183.  
 3 mu         0.3       3.35    0.0710     2.08e- 7    239.  
 4 mu         0.4       1.47    0.249      2.07e- 5     31.6 
 5 mu         0.5       1.24    0.677      7.37e- 4     11.5 
 6 mu         0.6       1.18    0.949      1.31e- 2      5.25
 7 mu         0.7       1.13    1.01       1.69e- 3      4.88
 8 mu         0.8       1.10    1.00       4.41e- 6      4.31
 9 mu         0.9       1.07    0.329      1.51e-10      8.95
10 mu_1       0.1      22.3     0.000356   1.77e-14   2162.  
11 mu_1       0.2       4.65    0.0198     1.58e- 9    370.  
12 mu_1       0.3       1.63    0.149      6.93e- 7     49.9 
13 mu_1       0.4       1.25    0.439      5.19e- 5     15.4 
14 mu_1       0.5       1.19    0.834      1.47e- 3      8.37
15 mu_1       0.6       1.14    0.980      1.13e- 2      5.56
16 mu_1       0.7       1.10    0.887      1.51e- 4      4.44
17 mu_1       0.8       1.07    0.968      3.44e- 7      4.19
18 mu_1       0.9       1.07    0.235      1.05e-11      9.95
19 mu_0       0.1      36.2     0.0000218  0          3604.  
20 mu_0       0.2      14.4     0.00184    0          1386.  
21 mu_0       0.3       4.08    0.0229     0           321.  
22 mu_0       0.4       1.62    0.121      0            49.4 
23 mu_0       0.5       1.29    0.428      0            14.7 
24 mu_0       0.6       1.25    0.703      0             7.96
25 mu_0       0.7       1.21    1.08       0             5.92
26 mu_0       0.8       1.20    1.11       0             4.79
27 mu_0       0.9       1.08    0.489      0             5.49
[1] "Total run time was 49.239 seconds"
