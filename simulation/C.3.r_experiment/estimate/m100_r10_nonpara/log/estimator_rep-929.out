
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  7  5  8  4  6  2  8  3  6  8  3  6  9  6 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04537 0.38967 0.63205 1.00000 6.66207 
[1] "event indicator table: "

  0   1 
804 480 
[1] "treatment indicator table: "

  0   1 
416 868 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 672
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 62.35 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.287 0.166
 2 mu         0.1   0.2 0.309 0.188
 3 mu         0.1   0.3 0.313 0.206
 4 mu         0.1   0.4 0.307 0.211
 5 mu         0.1   0.5 0.302 0.222
 6 mu         0.2   0.1 0.346 0.123
 7 mu         0.2   0.2 0.409 0.142
 8 mu         0.2   0.3 0.438 0.152
 9 mu         0.2   0.4 0.448 0.157
10 mu         0.2   0.5 0.456 0.164
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.600      0.0128  0.00000000688     24.5 
 2 mu         0.2      0.956      0.191   0.0000208         17.8 
 3 mu         0.3      1.06       0.534   0.00131            8.50
 4 mu         0.4      1.07       0.878   0.0186             4.79
 5 mu         0.5      1.02       1.02    0.112              3.05
 6 mu         0.6      0.966      0.944   0.374              1.46
 7 mu         0.7      0.985      0.974   0.516              1.53
 8 mu         0.8      1.11       1.04    0.113              3.13
 9 mu         0.9      1.33       0.938   0.00447           12.1 
10 mu_1       0.1      1.02       0.0510  0.0000000449      25.4 
11 mu_1       0.2      1.09       0.421   0.0000700         10.5 
12 mu_1       0.3      1.08       0.787   0.00296            6.27
13 mu_1       0.4      1.06       0.991   0.0320             4.28
14 mu_1       0.5      1.00       0.974   0.157              2.53
15 mu_1       0.6      0.958      0.951   0.455              1.37
16 mu_1       0.7      0.998      1.00    0.428              1.68
17 mu_1       0.8      1.14       1.02    0.0865             3.81
18 mu_1       0.9      1.36       0.907   0.00322           13.4 
19 mu_0       0.1      0.554      0.00872 0.00000000266     24.4 
20 mu_0       0.2      0.923      0.142   0.00000853        19.6 
21 mu_0       0.3      1.05       0.409   0.000603          10.5 
22 mu_0       0.4      1.08       0.758   0.00968            5.68
23 mu_0       0.5      1.04       1.00    0.0661             3.57
24 mu_0       0.6      0.978      0.967   0.213              2.04
25 mu_0       0.7      0.953      0.969   0.427              1.55
26 mu_0       0.8      1.01       0.997   0.218              2.18
27 mu_0       0.9      1.14       1.03    0.0157             4.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.33    0.0000217   1.04e-15     89.7 
 2 mu         0.2      1.26    0.00196     2.43e-10     49.8 
 3 mu         0.3      1.40    0.0406      3.14e- 7     25.5 
 4 mu         0.4      1.44    0.210       4.77e- 5     15.6 
 5 mu         0.5      1.23    0.533       1.91e- 3      6.99
 6 mu         0.6      1.03    0.894       2.94e- 2      4.37
 7 mu         0.7      0.968   0.884       8.70e- 2      2.99
 8 mu         0.8      1.02    0.859       1.88e- 3      4.17
 9 mu         0.9      1.18    0.210       9.29e- 7     17.4 
10 mu_1       0.1      0.838   0.000111    0            35.1 
11 mu_1       0.2      0.982   0.00632     0            19.5 
12 mu_1       0.3      1.25    0.0740      0            19.6 
13 mu_1       0.4      1.27    0.347       0            13.0 
14 mu_1       0.5      1.09    0.705       0             5.44
15 mu_1       0.6      0.964   0.928       0             4.05
16 mu_1       0.7      0.953   0.898       0             2.80
17 mu_1       0.8      1.02    0.797       0             4.93
18 mu_1       0.9      1.18    0.164       0            18.3 
19 mu_0       0.1      1.38    0.00000501  0            99.6 
20 mu_0       0.2      1.33    0.000833    0            62.2 
21 mu_0       0.3      1.47    0.0191      0            36.5 
22 mu_0       0.4      1.55    0.0929      0            19.7 
23 mu_0       0.5      1.37    0.340       0             9.49
24 mu_0       0.6      1.12    0.759       0             4.86
25 mu_0       0.7      1.00    0.924       0             4.43
26 mu_0       0.8      1.01    1.06        0             3.22
27 mu_0       0.9      1.15    0.579       0             9.14
[1] "Total run time was 66.187 seconds"
