
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1221"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  8  7  8  4  4  5  5  9  5  5  4  8  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03005 0.35240 0.58229 0.95570 5.18036 
[1] "event indicator table: "

  0   1 
712 509 
[1] "treatment indicator table: "

  0   1 
465 756 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 45.69 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.165 0.0817
 2 mu         0.1   0.2 0.218 0.0939
 3 mu         0.1   0.3 0.247 0.0968
 4 mu         0.1   0.4 0.273 0.121 
 5 mu         0.1   0.5 0.342 0.124 
 6 mu         0.2   0.1 0.249 0.0752
 7 mu         0.2   0.2 0.317 0.0857
 8 mu         0.2   0.3 0.347 0.0990
 9 mu         0.2   0.4 0.373 0.127 
10 mu         0.2   0.5 0.464 0.129 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.567       0.0693 0.00000377      7.84
 2 mu         0.2      0.823       0.389  0.00160         6.52
 3 mu         0.3      0.911       0.731  0.0349          3.42
 4 mu         0.4      0.951       0.910  0.182           2.03
 5 mu         0.5      0.989       0.926  0.482           1.72
 6 mu         0.6      1.00        0.986  0.609           1.58
 7 mu         0.7      0.962       0.964  0.327           1.71
 8 mu         0.8      0.890       0.865  0.0832          2.20
 9 mu         0.9      0.776       0.605  0.00475         3.70
10 mu_1       0.1      0.855       0.221  0.0000210       9.95
11 mu_1       0.2      0.928       0.630  0.00450         4.79
12 mu_1       0.3      0.945       0.878  0.0663          2.35
13 mu_1       0.4      0.971       0.966  0.283           2.00
14 mu_1       0.5      1.00        0.968  0.623           1.67
15 mu_1       0.6      0.996       0.992  0.566           1.75
16 mu_1       0.7      0.946       0.934  0.253           1.70
17 mu_1       0.8      0.872       0.851  0.0593          2.40
18 mu_1       0.9      0.759       0.574  0.00313         3.67
19 mu_0       0.1      0.535       0.0511 0.00000185      7.60
20 mu_0       0.2      0.797       0.325  0.000876        7.01
21 mu_0       0.3      0.896       0.672  0.0215          3.92
22 mu_0       0.4      0.937       0.879  0.115           2.28
23 mu_0       0.5      0.978       0.954  0.340           1.86
24 mu_0       0.6      1.01        0.968  0.546           1.50
25 mu_0       0.7      1.00        1.00   0.498           1.73
26 mu_0       0.8      0.961       0.972  0.179           2.03
27 mu_0       0.9      0.927       0.889  0.0193          3.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.598    0.000119   5.91e-15      9.48
 2 mu         0.2      1.32     0.00968    1.55e- 9     25.4 
 3 mu         0.3      1.67     0.104      2.29e- 6     29.6 
 4 mu         0.4      1.48     0.459      4.06e- 4     17.2 
 5 mu         0.5      1.24     0.927      1.36e- 2      5.64
 6 mu         0.6      1.28     1.10       1.12e- 1      5.20
 7 mu         0.7      1.97     1.12       4.30e- 3     27.7 
 8 mu         0.8      5.25     0.637      2.87e- 5    205.  
 9 mu         0.9     22.9      0.113      3.16e- 9   1202.  
10 mu_1       0.1      1.23     0.000729   5.91e-14     15.8 
11 mu_1       0.2      1.68     0.0363     7.75e- 9     33.8 
12 mu_1       0.3      1.64     0.246      7.64e- 6     26.3 
13 mu_1       0.4      1.31     0.656      1.02e- 3     11.4 
14 mu_1       0.5      1.16     1.06       2.53e- 2      3.18
15 mu_1       0.6      1.35     1.09       4.90e- 2      6.12
16 mu_1       0.7      2.24     0.973      1.62e- 3     39.6 
17 mu_1       0.8      6.10     0.489      9.45e- 6    257.  
18 mu_1       0.9     25.2      0.0762     9.23e-10   1336.  
19 mu_0       0.1      0.528    0.0000411  0             8.78
20 mu_0       0.2      1.23     0.00376    0            23.3 
21 mu_0       0.3      1.69     0.0467     0            31.0 
22 mu_0       0.4      1.60     0.230      0            21.0 
23 mu_0       0.5      1.31     0.615      0             8.27
24 mu_0       0.6      1.18     1.12       0             3.82
25 mu_0       0.7      1.32     1.09       0             7.69
26 mu_0       0.8      1.85     0.925      0            27.7 
27 mu_0       0.9      2.47     0.252      0            49.4 
[1] "Total run time was 48.801 seconds"
