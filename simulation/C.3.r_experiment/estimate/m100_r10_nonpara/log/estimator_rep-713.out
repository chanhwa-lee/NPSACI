
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  4 10  5  7  5  9  3  4  5 10  4  8  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03305 0.32869 0.57935 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
762 507 
[1] "treatment indicator table: "

  0   1 
441 828 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 77.771 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.168  0.0638
 2 mu         0.1   0.2 0.178  0.118 
 3 mu         0.1   0.3 0.108  0.116 
 4 mu         0.1   0.4 0.0903 0.134 
 5 mu         0.1   0.5 0.418  0.253 
 6 mu         0.2   0.1 0.229  0.0594
 7 mu         0.2   0.2 0.239  0.0918
 8 mu         0.2   0.3 0.203  0.0985
 9 mu         0.2   0.4 0.199  0.115 
10 mu         0.2   0.5 0.521  0.231 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.270      0.0105   1.66e-10      8.00
 2 mu         0.2      0.522      0.153    1.56e- 6      7.07
 3 mu         0.3      0.752      0.471    2.42e- 4      4.33
 4 mu         0.4      0.907      0.829    6.54e- 3      2.69
 5 mu         0.5      0.974      0.974    6.33e- 2      2.44
 6 mu         0.6      0.991      0.990    2.91e- 1      1.76
 7 mu         0.7      0.986      0.957    2.70e- 1      1.90
 8 mu         0.8      0.947      0.937    8.75e- 2      2.20
 9 mu         0.9      0.835      0.660    6.40e- 3      3.88
10 mu_1       0.1      0.553      0.0395   1.18e- 9     10.0 
11 mu_1       0.2      0.711      0.302    5.56e- 6      4.53
12 mu_1       0.3      0.853      0.684    5.79e- 4      3.22
13 mu_1       0.4      0.937      0.942    1.19e- 2      2.70
14 mu_1       0.5      0.970      0.973    9.29e- 2      2.28
15 mu_1       0.6      0.983      0.974    3.61e- 1      1.83
16 mu_1       0.7      0.980      0.953    2.32e- 1      1.89
17 mu_1       0.8      0.941      0.911    7.44e- 2      2.31
18 mu_1       0.9      0.822      0.612    4.97e- 3      3.99
19 mu_0       0.1      0.238      0.00659  5.43e-11      7.78
20 mu_0       0.2      0.475      0.114    5.60e- 7      7.70
21 mu_0       0.3      0.708      0.386    9.70e- 5      5.29
22 mu_0       0.4      0.888      0.730    2.99e- 3      3.03
23 mu_0       0.5      0.979      0.970    3.37e- 2      2.59
24 mu_0       0.6      1.00       1.01     1.86e- 1      2.07
25 mu_0       0.7      0.999      0.953    3.60e- 1      2.00
26 mu_0       0.8      0.975      0.977    1.40e- 1      1.90
27 mu_0       0.9      0.946      0.871    1.93e- 2      2.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.70   0.0000178   1.04e-15    143.  
 2 mu         0.2       3.24   0.00271     4.83e-10    141.  
 3 mu         0.3       2.70   0.0486      9.36e- 7     95.2 
 4 mu         0.4       2.15   0.213       1.89e- 4     50.4 
 5 mu         0.5       1.79   0.730       7.29e- 3     21.1 
 6 mu         0.6       1.51   0.992       8.35e- 2     11.4 
 7 mu         0.7       1.43   1.05        2.41e- 3      7.43
 8 mu         0.8       1.94   0.674       1.07e- 5     33.2 
 9 mu         0.9       3.59   0.102       5.91e-10    155.  
10 mu_1       0.1       4.23   0.000129    9.84e-15    205.  
11 mu_1       0.2       2.99   0.00959     2.29e- 9    101.  
12 mu_1       0.3       2.15   0.106       2.96e- 6     45.3 
13 mu_1       0.4       1.77   0.393       4.25e- 4     19.4 
14 mu_1       0.5       1.56   0.871       1.31e- 2     15.9 
15 mu_1       0.6       1.40   1.10        3.48e- 2      8.63
16 mu_1       0.7       1.46   1.09        8.62e- 4      8.49
17 mu_1       0.8       2.06   0.515       3.36e- 6     39.4 
18 mu_1       0.9       3.73   0.0627      1.64e-10    164.  
19 mu_0       0.1       2.52   0.00000592  0           137.  
20 mu_0       0.2       3.30   0.00104     0           152.  
21 mu_0       0.3       2.93   0.0199      0           117.  
22 mu_0       0.4       2.41   0.0970      0            71.9 
23 mu_0       0.5       2.01   0.414       0            36.1 
24 mu_0       0.6       1.66   0.920       0            15.5 
25 mu_0       0.7       1.39   1.07        0             7.96
26 mu_0       0.8       1.43   0.917       0            12.4 
27 mu_0       0.9       2.39   0.223       0            77.7 
[1] "Total run time was 82.697 seconds"
