
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1301"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  5  7  1  5  2 10  2  9 11  8 10  5  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04066 0.34981 0.61749 1.00000 5.90050 
[1] "event indicator table: "

  0   1 
764 537 
[1] "treatment indicator table: "

  0   1 
476 825 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.067 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.0974 0.0723
 2 mu         0.1   0.2 0.124  0.0797
 3 mu         0.1   0.3 0.191  0.110 
 4 mu         0.1   0.4 0.180  0.117 
 5 mu         0.1   0.5 0.214  0.136 
 6 mu         0.2   0.1 0.199  0.0657
 7 mu         0.2   0.2 0.278  0.0672
 8 mu         0.2   0.3 0.385  0.0844
 9 mu         0.2   0.4 0.400  0.0864
10 mu         0.2   0.5 0.488  0.117 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.417       0.0269 0.0000000804      9.52
 2 mu         0.2      0.734       0.243  0.0000843         6.73
 3 mu         0.3      0.903       0.583  0.00345           7.94
 4 mu         0.4      0.935       0.782  0.0351            4.13
 5 mu         0.5      0.967       0.921  0.158             2.07
 6 mu         0.6      1.02        1.02   0.407             1.55
 7 mu         0.7      1.05        1.04   0.560             1.83
 8 mu         0.8      1.09        0.957  0.198             6.02
 9 mu         0.9      1.36        0.741  0.0148           34.1 
10 mu_1       0.1      0.691       0.0930 0.000000522       9.03
11 mu_1       0.2      0.886       0.485  0.000274          8.86
12 mu_1       0.3      0.950       0.749  0.00752           7.02
13 mu_1       0.4      0.952       0.894  0.0580            3.02
14 mu_1       0.5      0.987       0.985  0.213             1.71
15 mu_1       0.6      1.03        1.06   0.477             1.52
16 mu_1       0.7      1.05        1.04   0.500             1.95
17 mu_1       0.8      1.10        0.917  0.153             7.31
18 mu_1       0.9      1.39        0.686  0.0104           37.7 
19 mu_0       0.1      0.387       0.0178 0.0000000314      9.57
20 mu_0       0.2      0.696       0.186  0.0000368         7.04
21 mu_0       0.3      0.883       0.471  0.00170           8.34
22 mu_0       0.4      0.924       0.709  0.0198            4.93
23 mu_0       0.5      0.947       0.850  0.102             2.55
24 mu_0       0.6      1.00        0.995  0.301             1.90
25 mu_0       0.7      1.05        1.04   0.586             1.73
26 mu_0       0.8      1.05        1.05   0.379             2.02
27 mu_0       0.9      1.05        0.877  0.0543            5.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.10    0.0000790  2.38e-14    115.  
 2 mu         0.2       6.68    0.0134     3.12e- 9    343.  
 3 mu         0.3       6.68    0.123      3.07e- 6    351.  
 4 mu         0.4       3.74    0.458      4.09e- 4    146.  
 5 mu         0.5       1.87    1.09       1.55e- 2     29.0 
 6 mu         0.6       1.32    1.10       1.23e- 1      4.61
 7 mu         0.7       1.55    0.887      4.84e- 2     10.4 
 8 mu         0.8       3.42    0.465      3.27e- 4     53.5 
 9 mu         0.9       9.64    0.0519     1.80e- 8    397.  
10 mu_1       0.1       4.74    0.000440   2.38e-13    246.  
11 mu_1       0.2       8.03    0.0443     1.56e- 8    428.  
12 mu_1       0.3       5.69    0.240      1.02e- 5    293.  
13 mu_1       0.4       2.77    0.755      1.02e- 3     91.6 
14 mu_1       0.5       1.53    1.12       2.91e- 2     14.5 
15 mu_1       0.6       1.26    1.08       1.88e- 1      4.61
16 mu_1       0.7       1.70    0.928      2.19e- 2     13.9 
17 mu_1       0.8       3.87    0.310      1.02e- 4     66.9 
18 mu_1       0.9      10.2     0.0289     4.99e- 9    441.  
19 mu_0       0.1       1.80    0.0000326  0           100.  
20 mu_0       0.2       6.34    0.00505    0           321.  
21 mu_0       0.3       7.10    0.0517     0           376.  
22 mu_0       0.4       4.38    0.315      0           183.  
23 mu_0       0.5       2.22    1.03       0            43.5 
24 mu_0       0.6       1.40    1.22       0             6.51
25 mu_0       0.7       1.20    1.07       0             4.74
26 mu_0       0.8       1.64    0.729      0            16.1 
27 mu_0       0.9       4.20    0.133      0            93.9 
[1] "Total run time was 94.881 seconds"
