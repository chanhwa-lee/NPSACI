
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1238"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  5  7  9  9  8  4  7  8 10  6  7  6  6  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02173 0.32012 0.55296 0.93605 4.00000 
[1] "event indicator table: "

  0   1 
720 518 
[1] "treatment indicator table: "

  0   1 
479 759 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 71.768 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.299 0.188
 2 mu         0.1   0.2 0.531 0.276
 3 mu         0.1   0.3 0.550 0.290
 4 mu         0.1   0.4 0.637 0.313
 5 mu         0.1   0.5 0.634 0.327
 6 mu         0.2   0.1 0.375 0.199
 7 mu         0.2   0.2 0.548 0.269
 8 mu         0.2   0.3 0.616 0.286
 9 mu         0.2   0.4 0.674 0.301
10 mu         0.2   0.5 0.680 0.316
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.953       0.0728 0.0000140      41.4 
 2 mu         0.2      1.18        0.399  0.00461        45.4 
 3 mu         0.3      1.11        0.671  0.0563         23.7 
 4 mu         0.4      1.03        0.893  0.207           8.23
 5 mu         0.5      0.993       0.965  0.493           2.47
 6 mu         0.6      0.997       0.994  0.498           1.44
 7 mu         0.7      1.00        0.987  0.493           1.80
 8 mu         0.8      0.946       0.923  0.121           2.96
 9 mu         0.9      0.769       0.700  0.00478         3.05
10 mu_1       0.1      1.34        0.221  0.0000703      63.7 
11 mu_1       0.2      1.18        0.577  0.0116         35.0 
12 mu_1       0.3      1.05        0.780  0.119          12.4 
13 mu_1       0.4      0.998       0.938  0.339           3.67
14 mu_1       0.5      0.988       0.960  0.465           2.06
15 mu_1       0.6      1.00        1.01   0.523           1.42
16 mu_1       0.7      1.00        0.975  0.403           1.99
17 mu_1       0.8      0.932       0.896  0.0885          3.10
18 mu_1       0.9      0.750       0.652  0.00315         2.94
19 mu_0       0.1      0.911       0.0517 0.00000778     38.9 
20 mu_0       0.2      1.18        0.356  0.00285        48.0 
21 mu_0       0.3      1.14        0.619  0.0293         28.6 
22 mu_0       0.4      1.05        0.823  0.120          11.3 
23 mu_0       0.5      0.998       0.927  0.321           3.50
24 mu_0       0.6      0.987       0.966  0.460           1.79
25 mu_0       0.7      1.01        1.02   0.558           1.56
26 mu_0       0.8      1.01        0.967  0.252           2.40
27 mu_0       0.9      0.941       0.912  0.0195          4.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.60    0.000123   2.58e-14     66.9 
 2 mu         0.2       2.94    0.0122     3.39e- 9    151.  
 3 mu         0.3       2.74    0.115      3.34e- 6    135.  
 4 mu         0.4       1.87    0.449      4.44e- 4     57.5 
 5 mu         0.5       1.32    0.964      1.54e- 2     13.1 
 6 mu         0.6       1.13    0.960      4.77e- 2      3.63
 7 mu         0.7       1.30    1.08       2.74e- 3      6.01
 8 mu         0.8       2.33    0.548      4.14e- 5     58.2 
 9 mu         0.9       6.97    0.0691     2.56e- 8    431.  
10 mu_1       0.1       2.79    0.000716   2.58e-13    103.  
11 mu_1       0.2       3.16    0.0331     1.69e- 8    178.  
12 mu_1       0.3       2.28    0.256      1.11e- 5    106.  
13 mu_1       0.4       1.51    0.707      1.11e- 3     33.8 
14 mu_1       0.5       1.18    0.996      2.84e- 2      6.18
15 mu_1       0.6       1.12    0.968      1.22e- 2      3.45
16 mu_1       0.7       1.40    0.959      6.03e- 4      8.59
17 mu_1       0.8       2.60    0.405      7.96e- 6     72.7 
18 mu_1       0.9       7.58    0.0433     4.37e- 9    479.  
19 mu_0       0.1       1.47    0.0000448  0            65.1 
20 mu_0       0.2       2.88    0.00539    0           145.  
21 mu_0       0.3       2.93    0.0549     0           148.  
22 mu_0       0.4       2.12    0.284      0            73.3 
23 mu_0       0.5       1.46    0.697      0            20.1 
24 mu_0       0.6       1.14    0.992      0             3.88
25 mu_0       0.7       1.06    1.00       0             3.38
26 mu_0       0.8       1.22    0.738      0             7.89
27 mu_0       0.9       1.55    0.0990     0            27.3 
[1] "Total run time was 75.956 seconds"
