
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  8  8  6  4  4  8  5  3  5  8  5  2  7  9  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05157 0.37699 0.64163 1.00000 5.53238 
[1] "event indicator table: "

  0   1 
740 501 
[1] "treatment indicator table: "

  0   1 
451 790 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 583
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 47.735 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.356 0.0588
 2 mu         0.1   0.2 0.441 0.0758
 3 mu         0.1   0.3 0.506 0.0843
 4 mu         0.1   0.4 0.523 0.0965
 5 mu         0.1   0.5 0.569 0.0964
 6 mu         0.2   0.1 0.338 0.0384
 7 mu         0.2   0.2 0.441 0.0441
 8 mu         0.2   0.3 0.508 0.0513
 9 mu         0.2   0.4 0.536 0.0582
10 mu         0.2   0.5 0.579 0.0579
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.07         0.486 0.00000000340      9.23
 2 mu         0.2      1.11         0.909 0.0000149          4.11
 3 mu         0.3      1.04         1.03  0.00144            3.21
 4 mu         0.4      0.989        1.03  0.0273             2.69
 5 mu         0.5      0.971        1.04  0.117              1.96
 6 mu         0.6      0.977        1.04  0.289              1.60
 7 mu         0.7      0.988        0.996 0.274              1.92
 8 mu         0.8      0.984        0.962 0.0456             2.25
 9 mu         0.9      0.961        0.889 0.000697           3.60
10 mu_1       0.1      1.16         0.725 0.0000000234       5.49
11 mu_1       0.2      1.08         1.03  0.0000515          3.48
12 mu_1       0.3      1.01         0.975 0.00334            3.09
13 mu_1       0.4      0.972        0.989 0.0480             2.41
14 mu_1       0.5      0.963        1.04  0.109              1.78
15 mu_1       0.6      0.974        1.00  0.371              1.74
16 mu_1       0.7      0.986        0.997 0.225              1.95
17 mu_1       0.8      0.981        0.987 0.0338             2.28
18 mu_1       0.9      0.959        0.848 0.000464           3.92
19 mu_0       0.1      1.06         0.413 0.00000000118     10.0 
20 mu_0       0.2      1.11         0.795 0.00000574         4.64
21 mu_0       0.3      1.05         0.992 0.000622           3.31
22 mu_0       0.4      1.00         1.04  0.0135             2.88
23 mu_0       0.5      0.979        1.00  0.114              2.21
24 mu_0       0.6      0.981        1.03  0.165              1.64
25 mu_0       0.7      0.993        1.03  0.330              1.86
26 mu_0       0.8      0.993        1.00  0.0927             2.14
27 mu_0       0.9      0.981        0.988 0.00280            2.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.947    0.000373   1.31e-16     34.6 
 2 mu         0.2      1.26     0.0183     6.13e-11     22.9 
 3 mu         0.3      1.20     0.108      1.19e- 7     13.4 
 4 mu         0.4      1.19     0.451      2.41e- 5      6.91
 5 mu         0.5      1.15     0.931      1.39e- 3      4.44
 6 mu         0.6      1.10     1.05       1.28e- 3      3.53
 7 mu         0.7      1.19     1.22       1.31e- 5      4.10
 8 mu         0.8      1.53     1.20       1.74e- 8      6.27
 9 mu         0.9      2.25     0.321      1.68e-13     28.0 
10 mu_1       0.1      1.53     0.00246    1.25e-15     36.4 
11 mu_1       0.2      1.34     0.0566     2.91e-10     19.7 
12 mu_1       0.3      1.21     0.258      3.76e- 7      8.93
13 mu_1       0.4      1.19     0.636      5.72e- 5      6.72
14 mu_1       0.5      1.12     1.02       2.65e- 3      3.74
15 mu_1       0.6      1.10     1.07       2.25e- 4      3.67
16 mu_1       0.7      1.23     1.12       1.97e- 6      4.39
17 mu_1       0.8      1.60     0.994      2.29e- 9      7.38
18 mu_1       0.9      2.31     0.243      1.96e-14     31.2 
19 mu_0       0.1      0.883    0.0000883  0            34.4 
20 mu_0       0.2      1.23     0.00602    0            24.1 
21 mu_0       0.3      1.19     0.0397     0            15.3 
22 mu_0       0.4      1.20     0.220      0             8.18
23 mu_0       0.5      1.17     0.605      0             5.50
24 mu_0       0.6      1.09     1.01       0             3.30
25 mu_0       0.7      1.10     0.949      0             4.07
26 mu_0       0.8      1.28     1.29       0             5.00
27 mu_0       0.9      1.71     0.618      0            12.1 
[1] "Total run time was 50.937 seconds"
