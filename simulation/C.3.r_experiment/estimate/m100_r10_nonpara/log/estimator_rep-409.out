
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1335"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  6  4  5  4  5  9  8  1  5  4 10  8  6 13 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03828 0.33224 0.60385 1.00000 4.41367 
[1] "event indicator table: "

  0   1 
803 532 
[1] "treatment indicator table: "

  0   1 
469 866 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.926 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.305 0.0910
 2 mu         0.1   0.2 0.400 0.0976
 3 mu         0.1   0.3 0.373 0.0957
 4 mu         0.1   0.4 0.380 0.0995
 5 mu         0.1   0.5 0.434 0.0902
 6 mu         0.2   0.1 0.363 0.0705
 7 mu         0.2   0.2 0.441 0.0757
 8 mu         0.2   0.3 0.425 0.0657
 9 mu         0.2   0.4 0.441 0.0651
10 mu         0.2   0.5 0.441 0.0640
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.672       0.106  0.00000000303      7.22
 2 mu         0.2      0.713       0.408  0.0000125          3.27
 3 mu         0.3      0.814       0.651  0.00113            2.80
 4 mu         0.4      0.905       0.874  0.0200             2.27
 5 mu         0.5      0.980       0.975  0.136              2.57
 6 mu         0.6      1.03        0.996  0.396              2.64
 7 mu         0.7      1.05        1.00   0.377              2.57
 8 mu         0.8      1.08        1.05   0.191              2.85
 9 mu         0.9      1.09        1.02   0.0208             4.34
10 mu_1       0.1      0.634       0.281  0.0000000208       4.26
11 mu_1       0.2      0.760       0.610  0.0000429          3.00
12 mu_1       0.3      0.867       0.838  0.00260            2.67
13 mu_1       0.4      0.943       0.947  0.0347             2.08
14 mu_1       0.5      1.00        0.984  0.191              2.80
15 mu_1       0.6      1.04        0.988  0.379              2.48
16 mu_1       0.7      1.06        1.02   0.388              2.62
17 mu_1       0.8      1.08        1.06   0.140              2.89
18 mu_1       0.9      1.09        0.986  0.0143             4.48
19 mu_0       0.1      0.676       0.0757 0.00000000106      7.89
20 mu_0       0.2      0.701       0.327  0.00000490         3.37
21 mu_0       0.3      0.791       0.558  0.000502           2.86
22 mu_0       0.4      0.880       0.831  0.0102             2.40
23 mu_0       0.5      0.957       0.934  0.0806             2.33
24 mu_0       0.6      1.01        0.976  0.327              2.89
25 mu_0       0.7      1.04        1.00   0.353              2.46
26 mu_0       0.8      1.05        1.01   0.253              2.68
27 mu_0       0.9      1.09        1.05   0.0791             3.21
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.24   0.0000270   2.95e-16     40.0 
 2 mu         0.2       1.33   0.00367     3.86e-11     54.6 
 3 mu         0.3       1.17   0.0691      3.81e- 8     24.9 
 4 mu         0.4       1.24   0.386       5.06e- 6     14.1 
 5 mu         0.5       1.44   0.915       2.25e- 4     14.2 
 6 mu         0.6       1.56   1.11        3.24e- 6     11.8 
 7 mu         0.7       1.54   1.15        1.03e- 8      8.17
 8 mu         0.8       1.68   1.13        3.09e-12     12.3 
 9 mu         0.9       2.29   0.265       2.94e-18     29.4 
10 mu_1       0.1       1.50   0.0000640   0            66.6 
11 mu_1       0.2       1.35   0.0108      0            45.5 
12 mu_1       0.3       1.21   0.146       0            16.3 
13 mu_1       0.4       1.34   0.625       0            12.3 
14 mu_1       0.5       1.52   1.00        0            14.9 
15 mu_1       0.6       1.57   1.04        0            10.3 
16 mu_1       0.7       1.55   1.09        0             7.78
17 mu_1       0.8       1.74   0.941       0            14.0 
18 mu_1       0.9       2.36   0.186       0            32.7 
19 mu_0       0.1       1.21   0.00000281  0            39.8 
20 mu_0       0.2       1.32   0.00168     0            56.9 
21 mu_0       0.3       1.15   0.0264      0            29.6 
22 mu_0       0.4       1.17   0.228       0            15.3 
23 mu_0       0.5       1.37   0.696       0            13.4 
24 mu_0       0.6       1.54   1.19        0            13.9 
25 mu_0       0.7       1.54   0.980       0             9.07
26 mu_0       0.8       1.43   0.965       0             7.72
27 mu_0       0.9       1.70   0.163       0            18.8 
[1] "Total run time was 56.448 seconds"
