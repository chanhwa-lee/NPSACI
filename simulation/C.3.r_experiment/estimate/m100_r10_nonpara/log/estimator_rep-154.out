
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1228"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5 13  5  7  6  8  4  4  6  5  9  6  5  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02274 0.32687 0.62013 1.00000 5.44079 
[1] "event indicator table: "

  0   1 
728 500 
[1] "treatment indicator table: "

  0   1 
477 751 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.288 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.213 0.0646
 2 mu         0.1   0.2 0.214 0.0900
 3 mu         0.1   0.3 0.283 0.0715
 4 mu         0.1   0.4 0.347 0.0627
 5 mu         0.1   0.5 0.348 0.0694
 6 mu         0.2   0.1 0.317 0.0510
 7 mu         0.2   0.2 0.358 0.0676
 8 mu         0.2   0.3 0.456 0.0584
 9 mu         0.2   0.4 0.520 0.0542
10 mu         0.2   0.5 0.537 0.0579
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.652        0.188 0.00000151       8.71
 2 mu         0.2      0.955        0.623 0.000779         5.96
 3 mu         0.3      1.07         0.977 0.0193           3.57
 4 mu         0.4      1.05         1.03  0.124            2.32
 5 mu         0.5      1.01         1.01  0.349            1.65
 6 mu         0.6      0.985        0.972 0.515            1.55
 7 mu         0.7      0.982        0.994 0.286            1.63
 8 mu         0.8      0.964        0.976 0.0673           2.17
 9 mu         0.9      0.922        0.746 0.000956         4.88
10 mu_1       0.1      0.978        0.494 0.00000824       8.31
11 mu_1       0.2      1.08         0.901 0.00217          4.23
12 mu_1       0.3      1.07         1.02  0.0364           2.75
13 mu_1       0.4      1.02         1.02  0.179            2.13
14 mu_1       0.5      0.984        0.994 0.414            1.67
15 mu_1       0.6      0.978        0.957 0.426            1.59
16 mu_1       0.7      0.977        0.984 0.219            1.70
17 mu_1       0.8      0.957        0.944 0.0495           2.29
18 mu_1       0.9      0.916        0.723 0.000632         5.29
19 mu_0       0.1      0.616        0.149 0.000000765      8.76
20 mu_0       0.2      0.925        0.541 0.000432         6.41
21 mu_0       0.3      1.07         0.954 0.0120           3.92
22 mu_0       0.4      1.07         1.02  0.0878           2.61
23 mu_0       0.5      1.03         1.01  0.284            1.92
24 mu_0       0.6      0.996        0.980 0.480            1.67
25 mu_0       0.7      0.994        0.958 0.443            1.62
26 mu_0       0.8      0.992        0.965 0.139            1.88
27 mu_0       0.9      0.977        0.970 0.00387          2.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.863     0.000236  4.90e-15     52.3 
 2 mu         0.2      1.11      0.0167    9.39e-10     32.2 
 3 mu         0.3      1.20      0.127     6.47e- 7     15.5 
 4 mu         0.4      1.13      0.469     6.45e- 5      9.34
 5 mu         0.5      1.04      0.842     2.29e- 3      4.99
 6 mu         0.6      0.997     0.884     4.24e- 2      4.51
 7 mu         0.7      1.05      0.956     4.70e- 3      3.20
 8 mu         0.8      1.31      0.391     3.58e- 5      9.33
 9 mu         0.9      1.94      0.0363    4.44e- 9     27.8 
10 mu_1       0.1      1.23      0.00145   4.41e-14     47.5 
11 mu_1       0.2      1.22      0.0517    4.43e- 9     19.4 
12 mu_1       0.3      1.18      0.284     2.16e- 6     11.4 
13 mu_1       0.4      1.06      0.713     1.61e- 4      6.11
14 mu_1       0.5      0.993     0.879     4.58e- 3      4.00
15 mu_1       0.6      0.993     0.902     1.43e- 2      4.51
16 mu_1       0.7      1.09      0.886     8.05e- 4      4.08
17 mu_1       0.8      1.39      0.302     1.34e- 5     11.7 
18 mu_1       0.9      2.02      0.0212    1.48e- 9     30.9 
19 mu_0       0.1      0.823     0.000109  0            52.8 
20 mu_0       0.2      1.08      0.00638   0            36.6 
21 mu_0       0.3      1.21      0.0665    0            17.2 
22 mu_0       0.4      1.18      0.287     0            12.1 
23 mu_0       0.5      1.08      0.768     0             6.33
24 mu_0       0.6      1.00      0.858     0             4.51
25 mu_0       0.7      0.955     0.897     0             3.82
26 mu_0       0.8      0.984     0.616     0             4.35
27 mu_0       0.9      1.19      0.0604    0            10.1 
[1] "Total run time was 69.568 seconds"
