
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1265"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  8  4  6  2  9  6  7 12  7  6  5  4  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0535  0.4297  0.6812  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
776 489 
[1] "treatment indicator table: "

  0   1 
403 862 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.216 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.843 0.360
 2 mu         0.1   0.2 0.981 0.428
 3 mu         0.1   0.3 1.09  0.476
 4 mu         0.1   0.4 1.16  0.522
 5 mu         0.1   0.5 1.23  0.565
 6 mu         0.2   0.1 0.488 0.142
 7 mu         0.2   0.2 0.572 0.176
 8 mu         0.2   0.3 0.634 0.173
 9 mu         0.2   0.4 0.669 0.173
10 mu         0.2   0.5 0.711 0.183
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      2.05        0.0388 0.00000102      87.0 
 2 mu         0.2      1.25        0.269  0.000327        18.6 
 3 mu         0.3      1.04        0.549  0.00740          7.39
 4 mu         0.4      0.982       0.865  0.0539           3.04
 5 mu         0.5      0.976       0.966  0.201            2.15
 6 mu         0.6      0.981       0.952  0.471            1.72
 7 mu         0.7      0.993       0.983  0.600            1.63
 8 mu         0.8      1.01        0.990  0.332            1.73
 9 mu         0.9      1.04        0.984  0.0425           2.86
10 mu_1       0.1      1.15        0.109  0.00000559      43.5 
11 mu_1       0.2      0.968       0.422  0.00108          5.99
12 mu_1       0.3      0.956       0.731  0.0164           4.53
13 mu_1       0.4      0.960       0.936  0.0910           2.43
14 mu_1       0.5      0.972       0.964  0.277            2.01
15 mu_1       0.6      0.983       0.955  0.540            1.65
16 mu_1       0.7      0.999       0.988  0.566            1.66
17 mu_1       0.8      1.02        0.999  0.277            1.83
18 mu_1       0.9      1.05        0.929  0.0331           2.98
19 mu_0       0.1      2.15        0.0257 0.000000398     91.8 
20 mu_0       0.2      1.32        0.195  0.000140        22.0 
21 mu_0       0.3      1.07        0.465  0.00354         10.5 
22 mu_0       0.4      0.998       0.835  0.0292           4.91
23 mu_0       0.5      0.981       0.955  0.125            2.29
24 mu_0       0.6      0.979       0.959  0.337            1.89
25 mu_0       0.7      0.977       0.962  0.441            1.55
26 mu_0       0.8      0.976       0.978  0.533            1.72
27 mu_0       0.9      0.975       0.987  0.127            1.92
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.924   0.00000619  5.81e-17     24.2 
 2 mu         0.2      1.21    0.00132     2.71e-11     23.3 
 3 mu         0.3      1.20    0.0297      5.26e- 8     16.6 
 4 mu         0.4      1.15    0.177       1.07e- 5      8.60
 5 mu         0.5      1.09    0.593       6.16e- 4      8.60
 6 mu         0.6      1.02    0.892       1.57e- 2      5.59
 7 mu         0.7      1.02    1.02        7.73e- 2      3.11
 8 mu         0.8      1.11    1.15        3.59e- 3      6.67
 9 mu         0.9      1.18    0.225       4.50e- 6     11.0 
10 mu_1       0.1      1.55    0.0000505   5.52e-16     33.8 
11 mu_1       0.2      1.24    0.00481     1.29e-10     21.5 
12 mu_1       0.3      1.09    0.0654      1.66e- 7     11.1 
13 mu_1       0.4      1.05    0.323       2.53e- 5      9.05
14 mu_1       0.5      1.01    0.766       1.17e- 3      8.03
15 mu_1       0.6      0.983   0.866       2.49e- 2      5.13
16 mu_1       0.7      1.02    1.02        1.38e- 2      3.17
17 mu_1       0.8      1.13    1.03        8.08e- 4      7.42
18 mu_1       0.9      1.17    0.176       2.10e- 6     10.8 
19 mu_0       0.1      0.854   0.00000158  0            23.5 
20 mu_0       0.2      1.20    0.000452    0            25.0 
21 mu_0       0.3      1.25    0.0109      0            19.2 
22 mu_0       0.4      1.23    0.0794      0            11.9 
23 mu_0       0.5      1.17    0.317       0             9.18
24 mu_0       0.6      1.08    0.837       0             6.90
25 mu_0       0.7      1.02    0.963       0             3.43
26 mu_0       0.8      1.06    1.02        0             3.71
27 mu_0       0.9      1.23    0.388       0            12.2 
[1] "Total run time was 64.407 seconds"
