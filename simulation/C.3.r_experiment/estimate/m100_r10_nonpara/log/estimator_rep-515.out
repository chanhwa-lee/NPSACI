
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1225"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  8  3  7  7  7  6  6  5 11  6  6  7  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02884 0.35789 0.62225 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
741 484 
[1] "treatment indicator table: "

  0   1 
428 797 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 575
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 72.476 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.185 0.0593
 2 mu         0.1   0.2 0.205 0.0534
 3 mu         0.1   0.3 0.255 0.0557
 4 mu         0.1   0.4 0.278 0.0686
 5 mu         0.1   0.5 0.283 0.0647
 6 mu         0.2   0.1 0.224 0.0569
 7 mu         0.2   0.2 0.259 0.0488
 8 mu         0.2   0.3 0.311 0.0497
 9 mu         0.2   0.4 0.338 0.0604
10 mu         0.2   0.5 0.349 0.0581
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.383       0.0200 0.00000000648      3.93
 2 mu         0.2      0.555       0.191  0.0000149          3.80
 3 mu         0.3      0.683       0.529  0.00101            3.90
 4 mu         0.4      0.790       0.767  0.0140             3.49
 5 mu         0.5      0.887       0.883  0.0809             2.00
 6 mu         0.6      0.969       0.964  0.270              1.65
 7 mu         0.7      1.03        1.03   0.468              1.60
 8 mu         0.8      1.07        1.08   0.180              2.94
 9 mu         0.9      1.09        0.887  0.0210             4.78
10 mu_1       0.1      0.515       0.0979 0.0000000458       4.98
11 mu_1       0.2      0.643       0.386  0.0000528          3.03
12 mu_1       0.3      0.745       0.674  0.00229            4.30
13 mu_1       0.4      0.842       0.819  0.0238             2.99
14 mu_1       0.5      0.927       0.922  0.113              1.64
15 mu_1       0.6      0.994       0.990  0.331              1.71
16 mu_1       0.7      1.04        1.05   0.396              1.79
17 mu_1       0.8      1.08        1.04   0.143              3.23
18 mu_1       0.9      1.09        0.853  0.0155             4.85
19 mu_0       0.1      0.369       0.0127 0.00000000211      4.26
20 mu_0       0.2      0.533       0.140  0.00000546         3.99
21 mu_0       0.3      0.657       0.452  0.000421           3.73
22 mu_0       0.4      0.756       0.685  0.00732            3.82
23 mu_0       0.5      0.848       0.843  0.0485             2.36
24 mu_0       0.6      0.931       0.926  0.179              2.02
25 mu_0       0.7      0.998       1.00   0.356              1.78
26 mu_0       0.8      1.04        1.05   0.326              1.78
27 mu_0       0.9      1.06        0.973  0.0708             4.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     455.     0.0000301   6.30e-14  45089.  
 2 mu         0.2     356.     0.00269     3.67e- 9  34674.  
 3 mu         0.3     129.     0.0448      2.11e- 6  12031.  
 4 mu         0.4      30.1    0.257       1.80e- 4   2471.  
 5 mu         0.5       5.63   0.705       5.34e- 3    301.  
 6 mu         0.6       1.68   1.10        7.90e- 2     19.0 
 7 mu         0.7       1.27   1.22        1.11e- 2      6.57
 8 mu         0.8       1.52   0.859       2.87e- 4     37.1 
 9 mu         0.9       2.27   0.188       5.21e- 8    122.  
10 mu_1       0.1     572.     0.000239    5.93e-13  56362.  
11 mu_1       0.2     227.     0.00996     1.73e- 8  21671.  
12 mu_1       0.3      57.6    0.110       6.62e- 6   5013.  
13 mu_1       0.4      11.5    0.430       4.25e- 4    772.  
14 mu_1       0.5       2.66   0.905       1.01e- 2     75.2 
15 mu_1       0.6       1.38   1.24        4.77e- 2      5.82
16 mu_1       0.7       1.28   1.20        3.65e- 3      8.83
17 mu_1       0.8       1.57   0.772       8.28e- 5     43.6 
18 mu_1       0.9       2.31   0.141       1.52e- 8    128.  
19 mu_0       0.1     442.     0.00000492  0         43837.  
20 mu_0       0.2     388.     0.000892    0         37924.  
21 mu_0       0.3     160.     0.0156      0         15038.  
22 mu_0       0.4      42.6    0.125       0          3604.  
23 mu_0       0.5       8.59   0.457       0           526.  
24 mu_0       0.6       2.14   0.900       0            41.7 
25 mu_0       0.7       1.27   1.30        0             5.84
26 mu_0       0.8       1.30   1.21        0            10.9 
27 mu_0       0.9       1.97   0.450       0            71.8 
[1] "Total run time was 77.153 seconds"
