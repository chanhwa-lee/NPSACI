
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1265"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  9  7  5  7  6  7  2  6  8  5  6 10  5  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03522 0.33106 0.57612 0.96165 5.00000 
[1] "event indicator table: "

  0   1 
728 537 
[1] "treatment indicator table: "

  0   1 
484 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.052 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.316 0.0849
 2 mu         0.1   0.2 0.473 0.0913
 3 mu         0.1   0.3 0.536 0.103 
 4 mu         0.1   0.4 0.558 0.116 
 5 mu         0.1   0.5 0.545 0.137 
 6 mu         0.2   0.1 0.330 0.0461
 7 mu         0.2   0.2 0.465 0.0518
 8 mu         0.2   0.3 0.514 0.0605
 9 mu         0.2   0.4 0.555 0.0692
10 mu         0.2   0.5 0.559 0.0807
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         0.243 0.000113      10.1 
 2 mu         0.2      1.01         0.732 0.0137         5.36
 3 mu         0.3      0.972        1.00  0.110          2.79
 4 mu         0.4      0.994        0.964 0.276          2.62
 5 mu         0.5      1.00         0.986 0.346          2.35
 6 mu         0.6      0.983        1.01  0.397          1.44
 7 mu         0.7      0.967        0.962 0.399          1.79
 8 mu         0.8      0.966        0.976 0.112          1.94
 9 mu         0.9      0.938        0.915 0.00368        2.95
10 mu_1       0.1      1.10         0.637 0.000537       7.87
11 mu_1       0.2      0.961        0.948 0.0311         3.15
12 mu_1       0.3      0.968        0.905 0.174          2.21
13 mu_1       0.4      1.00         0.973 0.301          2.71
14 mu_1       0.5      1.00         1.01  0.361          2.16
15 mu_1       0.6      0.980        0.997 0.417          1.48
16 mu_1       0.7      0.967        0.975 0.327          1.86
17 mu_1       0.8      0.964        0.952 0.0903         1.99
18 mu_1       0.9      0.933        0.876 0.00254        3.05
19 mu_0       0.1      1.02         0.198 0.0000656     10.3 
20 mu_0       0.2      1.02         0.676 0.00932        5.96
21 mu_0       0.3      0.974        1.02  0.0828         3.27
22 mu_0       0.4      0.990        0.962 0.212          2.56
23 mu_0       0.5      1.00         0.986 0.330          2.53
24 mu_0       0.6      0.988        0.999 0.366          1.70
25 mu_0       0.7      0.968        0.993 0.420          1.62
26 mu_0       0.8      0.972        1.02  0.185          2.01
27 mu_0       0.9      0.982        0.985 0.0140         2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03      0.000636  6.07e-17     70.7 
 2 mu         0.2      0.963     0.0246    1.59e-11     31.0 
 3 mu         0.3      1.14      0.145     2.35e- 8     12.2 
 4 mu         0.4      1.17      0.488     4.17e- 6      4.89
 5 mu         0.5      1.02      0.749     2.32e- 4      4.28
 6 mu         0.6      0.921     0.803     6.16e- 3      3.49
 7 mu         0.7      1.03      1.02      2.22e- 3      4.26
 8 mu         0.8      1.21      0.761     1.70e- 5      6.65
 9 mu         0.9      1.03      0.170     2.10e- 9      9.21
10 mu_1       0.1      0.591     0.00282   0            12.8 
11 mu_1       0.2      0.909     0.0735    0             5.62
12 mu_1       0.3      1.16      0.305     0             6.03
13 mu_1       0.4      1.13      0.649     0             5.16
14 mu_1       0.5      0.960     0.788     0             4.28
15 mu_1       0.6      0.909     0.829     0             2.91
16 mu_1       0.7      1.06      0.983     0             4.39
17 mu_1       0.8      1.21      0.620     0             7.21
18 mu_1       0.9      0.989     0.113     0            10.1 
19 mu_0       0.1      1.08      0.000242  0            78.5 
20 mu_0       0.2      0.977     0.00701   0            38.7 
21 mu_0       0.3      1.13      0.0568    0            17.4 
22 mu_0       0.4      1.20      0.230     0             6.89
23 mu_0       0.5      1.09      0.491     0             4.88
24 mu_0       0.6      0.940     0.674     0             4.36
25 mu_0       0.7      0.967     0.876     0             3.94
26 mu_0       0.8      1.21      1.15      0             4.43
27 mu_0       0.9      1.38      0.521     0            10.3 
[1] "Total run time was 65.011 seconds"
