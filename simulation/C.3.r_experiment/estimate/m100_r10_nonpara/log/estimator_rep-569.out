
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1240"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  5  6  5 11  6  9 10 10  3  5  7  7  6  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02723 0.31618 0.58672 1.00000 6.10520 
[1] "event indicator table: "

  0   1 
734 506 
[1] "treatment indicator table: "

  0   1 
468 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 570
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.16 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.440 0.131 
 2 mu         0.1   0.2 0.699 0.260 
 3 mu         0.1   0.3 0.732 0.238 
 4 mu         0.1   0.4 0.726 0.234 
 5 mu         0.1   0.5 0.760 0.232 
 6 mu         0.2   0.1 0.425 0.0803
 7 mu         0.2   0.2 0.676 0.220 
 8 mu         0.2   0.3 0.712 0.184 
 9 mu         0.2   0.4 0.723 0.174 
10 mu         0.2   0.5 0.757 0.157 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.08         0.170 0.00000357     24.1 
 2 mu         0.2      1.12         0.550 0.00152        12.4 
 3 mu         0.3      1.07         0.868 0.0331          5.90
 4 mu         0.4      1.03         0.971 0.198           2.83
 5 mu         0.5      1.01         0.948 0.543           1.93
 6 mu         0.6      1.01         0.991 0.645           1.58
 7 mu         0.7      0.993        0.990 0.506           1.45
 8 mu         0.8      0.969        1.00  0.163           1.79
 9 mu         0.9      0.993        0.881 0.0120          4.42
10 mu_1       0.1      1.06         0.466 0.0000199      16.1 
11 mu_1       0.2      1.07         0.873 0.00427         9.95
12 mu_1       0.3      1.03         0.976 0.0627          3.37
13 mu_1       0.4      1.00         0.988 0.286           2.27
14 mu_1       0.5      1.00         0.966 0.651           1.72
15 mu_1       0.6      1.01         0.997 0.610           1.49
16 mu_1       0.7      0.990        1.00  0.416           1.57
17 mu_1       0.8      0.971        1.01  0.122           1.99
18 mu_1       0.9      1.00         0.882 0.00815         4.65
19 mu_0       0.1      1.08         0.130 0.00000175     26.3 
20 mu_0       0.2      1.13         0.457 0.000832       14.7 
21 mu_0       0.3      1.09         0.790 0.0204          7.79
22 mu_0       0.4      1.05         0.976 0.138           3.96
23 mu_0       0.5      1.02         0.961 0.428           2.15
24 mu_0       0.6      1.01         0.983 0.687           1.71
25 mu_0       0.7      1.00         0.991 0.585           1.39
26 mu_0       0.8      0.962        0.960 0.325           1.68
27 mu_0       0.9      0.927        0.858 0.0466          2.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      52.7     0.0000352  1.02e-14   5247.  
 2 mu         0.2      15.1     0.00570    6.70e-10   1417.  
 3 mu         0.3       3.47    0.0952     4.40e- 7    220.  
 4 mu         0.4       1.44    0.393      4.39e- 5     21.3 
 5 mu         0.5       1.14    0.906      1.56e- 3      4.53
 6 mu         0.6       1.10    1.17       2.88e- 2      2.64
 7 mu         0.7       1.15    1.06       2.84e- 4      6.16
 8 mu         0.8       1.32    0.813      3.30e- 7     15.5 
 9 mu         0.9       1.60    0.130      2.83e-12     27.7 
10 mu_1       0.1      29.8     0.000209   1.02e-13   2915.  
11 mu_1       0.2       5.23    0.0180     3.35e- 9    394.  
12 mu_1       0.3       1.75    0.194      1.47e- 6     40.7 
13 mu_1       0.4       1.22    0.624      1.10e- 4     10.5 
14 mu_1       0.5       1.11    0.985      3.12e- 3      3.64
15 mu_1       0.6       1.11    1.17       3.00e- 3      2.84
16 mu_1       0.7       1.18    1.16       2.26e- 5      7.62
17 mu_1       0.8       1.37    0.690      2.29e- 8     16.8 
18 mu_1       0.9       1.61    0.0930     1.75e-13     28.8 
19 mu_0       0.1      55.3     0.0000115  0          5507.  
20 mu_0       0.2      17.6     0.00210    0          1673.  
21 mu_0       0.3       4.21    0.0449     0           296.  
22 mu_0       0.4       1.59    0.229      0            33.5 
23 mu_0       0.5       1.16    0.673      0             6.80
24 mu_0       0.6       1.08    1.02       0             3.13
25 mu_0       0.7       1.07    0.996      0             3.01
26 mu_0       0.8       1.15    1.14       0            10.3 
27 mu_0       0.9       1.48    0.235      0            23.9 
[1] "Total run time was 56.404 seconds"
