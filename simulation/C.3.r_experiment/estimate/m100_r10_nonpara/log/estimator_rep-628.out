
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1171"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  5  5  8  9  9  8  4  9  8  6  2  4  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03703 0.35978 0.59935 0.97752 5.00000 
[1] "event indicator table: "

  0   1 
701 470 
[1] "treatment indicator table: "

  0   1 
454 717 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 578
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 88.902 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.215 0.0490
 2 mu         0.1   0.2 0.396 0.0859
 3 mu         0.1   0.3 0.400 0.0746
 4 mu         0.1   0.4 0.491 0.102 
 5 mu         0.1   0.5 0.490 0.0991
 6 mu         0.2   0.1 0.268 0.0434
 7 mu         0.2   0.2 0.413 0.0624
 8 mu         0.2   0.3 0.455 0.0620
 9 mu         0.2   0.4 0.542 0.0786
10 mu         0.2   0.5 0.561 0.0789
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.717        0.199 0.00000155       5.56
 2 mu         0.2      0.977        0.685 0.00120          4.86
 3 mu         0.3      1.03         0.974 0.0353           3.06
 4 mu         0.4      0.993        0.967 0.194            1.93
 5 mu         0.5      0.973        0.966 0.452            1.52
 6 mu         0.6      0.984        0.988 0.451            1.41
 7 mu         0.7      0.996        1.00  0.413            1.41
 8 mu         0.8      1.00         1.03  0.0998           1.81
 9 mu         0.9      0.986        0.948 0.00395          3.03
10 mu_1       0.1      0.954        0.495 0.00000859       6.50
11 mu_1       0.2      1.05         0.860 0.00336          4.14
12 mu_1       0.3      1.02         0.961 0.0665           2.67
13 mu_1       0.4      0.983        0.964 0.301            1.70
14 mu_1       0.5      0.979        0.953 0.566            1.41
15 mu_1       0.6      0.992        1.00  0.416            1.45
16 mu_1       0.7      0.999        1.00  0.328            1.47
17 mu_1       0.8      1.00         1.05  0.0709           1.91
18 mu_1       0.9      0.984        0.943 0.00251          3.17
19 mu_0       0.1      0.690        0.159 0.000000770      5.66
20 mu_0       0.2      0.959        0.617 0.000665         5.04
21 mu_0       0.3      1.03         0.976 0.0220           3.55
22 mu_0       0.4      1.00         1.01  0.122            2.19
23 mu_0       0.5      0.966        0.959 0.308            1.70
24 mu_0       0.6      0.970        0.969 0.481            1.45
25 mu_0       0.7      0.989        0.995 0.410            1.50
26 mu_0       0.8      1.00         1.01  0.215            1.63
27 mu_0       0.9      1.01         0.989 0.0169           2.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.11      0.000344  9.23e-19     72.9 
 2 mu         0.2      1.18      0.0168    9.68e-13     31.5 
 3 mu         0.3      1.19      0.0998    3.22e- 9      9.95
 4 mu         0.4      1.12      0.349     1.02e- 6      6.36
 5 mu         0.5      0.968     0.705     8.81e- 5      4.08
 6 mu         0.6      0.888     0.859     3.38e- 3      2.20
 7 mu         0.7      0.965     1.03      1.77e- 4      2.32
 8 mu         0.8      1.14      0.903     6.03e- 7      4.34
 9 mu         0.9      1.28      0.179     2.62e-11     11.2 
10 mu_1       0.1      1.33      0.00242   9.23e-18     52.1 
11 mu_1       0.2      1.23      0.0574    4.84e-12     11.4 
12 mu_1       0.3      1.20      0.240     1.07e- 8      8.84
13 mu_1       0.4      1.08      0.562     2.54e- 6      6.19
14 mu_1       0.5      0.934     0.868     1.76e- 4      3.18
15 mu_1       0.6      0.901     0.891     1.38e- 3      2.36
16 mu_1       0.7      1.01      1.06      3.27e- 5      2.62
17 mu_1       0.8      1.18      0.757     1.26e- 7      4.88
18 mu_1       0.9      1.29      0.129     4.85e-12     12.5 
19 mu_0       0.1      1.09      0.000143  0            75.2 
20 mu_0       0.2      1.17      0.00575   0            36.6 
21 mu_0       0.3      1.19      0.0394    0            11.1 
22 mu_0       0.4      1.15      0.185     0             7.05
23 mu_0       0.5      1.00      0.436     0             4.99
24 mu_0       0.6      0.868     0.753     0             2.81
25 mu_0       0.7      0.857     0.867     0             2.49
26 mu_0       0.8      0.974     0.904     0             3.58
27 mu_0       0.9      1.17      0.222     0             6.26
[1] "Total run time was 93.651 seconds"
