
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1214"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  3 10  6 12  4  6  5  3  5  7  5  8  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0296  0.3033  0.5815  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
726 488 
[1] "treatment indicator table: "

  0   1 
506 708 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.573 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.271 0.138 
 2 mu         0.1   0.2 0.307 0.191 
 3 mu         0.1   0.3 0.498 0.126 
 4 mu         0.1   0.4 0.502 0.154 
 5 mu         0.1   0.5 0.494 0.168 
 6 mu         0.2   0.1 0.247 0.108 
 7 mu         0.2   0.2 0.272 0.151 
 8 mu         0.2   0.3 0.458 0.0655
 9 mu         0.2   0.4 0.456 0.0972
10 mu         0.2   0.5 0.458 0.114 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.850        0.144 0.0000241      8.29
 2 mu         0.2      0.913        0.559 0.00503        6.97
 3 mu         0.3      0.991        0.853 0.0567         5.00
 4 mu         0.4      1.01         0.954 0.225          2.24
 5 mu         0.5      0.998        0.961 0.412          1.71
 6 mu         0.6      0.966        0.976 0.461          1.42
 7 mu         0.7      0.922        0.961 0.178          1.51
 8 mu         0.8      0.891        0.889 0.0347         4.05
 9 mu         0.9      0.979        0.590 0.000756      12.0 
10 mu_1       0.1      0.789        0.370 0.000122       7.08
11 mu_1       0.2      0.964        0.825 0.0134         7.07
12 mu_1       0.3      1.01         0.963 0.114          3.55
13 mu_1       0.4      1.01         0.964 0.306          1.90
14 mu_1       0.5      0.987        0.987 0.478          1.60
15 mu_1       0.6      0.952        0.948 0.314          1.48
16 mu_1       0.7      0.910        0.954 0.104          1.69
17 mu_1       0.8      0.890        0.845 0.0183         4.59
18 mu_1       0.9      0.993        0.529 0.000500      12.6 
19 mu_0       0.1      0.857        0.107 0.0000126      9.17
20 mu_0       0.2      0.901        0.480 0.00293        6.95
21 mu_0       0.3      0.982        0.793 0.0321         5.62
22 mu_0       0.4      1.01         0.945 0.144          2.80
23 mu_0       0.5      1.01         0.959 0.346          1.81
24 mu_0       0.6      0.986        0.990 0.570          1.48
25 mu_0       0.7      0.949        0.968 0.227          1.57
26 mu_0       0.8      0.895        0.939 0.100          1.92
27 mu_0       0.9      0.855        0.818 0.00306        7.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      38.5      0.000333  8.97e-15    3766. 
 2 mu         0.2      15.5      0.0215    4.18e- 9    1448. 
 3 mu         0.3       4.53     0.194     8.11e- 6     335. 
 4 mu         0.4       1.79     0.730     1.64e- 3      51.6
 5 mu         0.5       1.45     1.15      1.63e- 2      13.2
 6 mu         0.6       1.73     1.20      3.77e- 3      14.0
 7 mu         0.7       2.94     1.01      6.86e- 5      34.1
 8 mu         0.8       7.76     0.350     2.05e- 7     287. 
 9 mu         0.9      22.7      0.0319    7.91e-12    1346. 
10 mu_1       0.1      26.3      0.00206   8.52e-14    2511. 
11 mu_1       0.2       5.99     0.0662    1.99e- 8     483. 
12 mu_1       0.3       1.96     0.391     2.57e- 5      74.4
13 mu_1       0.4       1.40     1.03      3.90e- 3      11.0
14 mu_1       0.5       1.51     1.03      1.75e- 2      13.2
15 mu_1       0.6       1.97     1.28      7.40e- 4      20.4
16 mu_1       0.7       3.48     0.856     1.15e- 5      46.3
17 mu_1       0.8       8.85     0.262     3.01e- 8     341. 
18 mu_1       0.9      23.8      0.0182    1.03e-12    1421. 
19 mu_0       0.1      39.8      0.000122  0           3906. 
20 mu_0       0.2      17.9      0.00905   0           1689. 
21 mu_0       0.3       5.63     0.121     0            447. 
22 mu_0       0.4       2.05     0.438     0             80.3
23 mu_0       0.5       1.40     1.01      0             13.2
24 mu_0       0.6       1.37     1.10      0             11.0
25 mu_0       0.7       1.69     1.11      0             17.5
26 mu_0       0.8       3.40     0.678     0             71.8
27 mu_0       0.9      12.9      0.111     0            673. 
[1] "Total run time was 53.653 seconds"
