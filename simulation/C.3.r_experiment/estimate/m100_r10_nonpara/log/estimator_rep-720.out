
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1239"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  4  6  5  5  7 10  6  7 10  7  8  5  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02241 0.34417 0.60061 1.00000 4.74503 
[1] "event indicator table: "

  0   1 
762 477 
[1] "treatment indicator table: "

  0   1 
468 771 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 91.984 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.438 0.156 
 2 mu         0.1   0.2 0.479 0.156 
 3 mu         0.1   0.3 0.516 0.165 
 4 mu         0.1   0.4 0.541 0.174 
 5 mu         0.1   0.5 0.593 0.186 
 6 mu         0.2   0.1 0.378 0.125 
 7 mu         0.2   0.2 0.431 0.0977
 8 mu         0.2   0.3 0.468 0.0987
 9 mu         0.2   0.4 0.493 0.0991
10 mu         0.2   0.5 0.539 0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.02        0.136  0.00000000438     24.1 
 2 mu         0.2      0.925       0.532  0.0000182         13.4 
 3 mu         0.3      0.881       0.784  0.00164            4.99
 4 mu         0.4      0.929       0.918  0.0288             2.69
 5 mu         0.5      0.982       0.982  0.189              2.30
 6 mu         0.6      0.995       1.00   0.608              1.77
 7 mu         0.7      0.971       0.995  0.276              1.41
 8 mu         0.8      0.937       0.919  0.0529             2.32
 9 mu         0.9      0.963       0.673  0.00183            6.63
10 mu_1       0.1      1.07        0.274  0.0000000300      20.2 
11 mu_1       0.2      0.889       0.766  0.0000624          5.85
12 mu_1       0.3      0.897       0.800  0.00377            3.24
13 mu_1       0.4      0.953       0.933  0.0498             2.43
14 mu_1       0.5      0.988       0.997  0.264              2.20
15 mu_1       0.6      0.986       0.997  0.579              1.54
16 mu_1       0.7      0.957       0.990  0.208              1.48
17 mu_1       0.8      0.929       0.889  0.0373             2.63
18 mu_1       0.9      0.967       0.621  0.00120            6.92
19 mu_0       0.1      1.02        0.0977 0.00000000153     24.6 
20 mu_0       0.2      0.934       0.441  0.00000712        15.3 
21 mu_0       0.3      0.875       0.796  0.000731           6.35
22 mu_0       0.4      0.913       0.867  0.0148             2.94
23 mu_0       0.5      0.976       0.981  0.115              2.40
24 mu_0       0.6      1.01        0.980  0.444              2.12
25 mu_0       0.7      1.00        1.02   0.435              1.45
26 mu_0       0.8      0.969       0.974  0.115              1.41
27 mu_0       0.9      0.924       0.902  0.00755            3.99
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     375.      0.000182   1.28e-15  37300.  
 2 mu         0.2      74.1     0.0110     2.99e-10   7171.  
 3 mu         0.3      13.7     0.0930     3.87e- 7   1106.  
 4 mu         0.4       3.61    0.386      5.89e- 5    128.  
 5 mu         0.5       1.87    0.786      2.72e- 3     29.4 
 6 mu         0.6       1.28    1.12       5.80e- 2     10.9 
 7 mu         0.7       1.15    1.12       7.80e- 3      2.51
 8 mu         0.8       1.36    0.659      2.67e- 5      6.33
 9 mu         0.9       1.70    0.110      1.63e- 9     21.4 
10 mu_1       0.1       2.60    0.00115    0           208.  
11 mu_1       0.2       2.62    0.0343     0           114.  
12 mu_1       0.3       2.53    0.208      0            86.2 
13 mu_1       0.4       2.16    0.564      0            50.0 
14 mu_1       0.5       1.60    1.02       0            24.8 
15 mu_1       0.6       1.22    1.12       0             7.62
16 mu_1       0.7       1.17    1.05       0             2.79
17 mu_1       0.8       1.41    0.529      0             7.42
18 mu_1       0.9       1.71    0.0788     0            22.6 
19 mu_0       0.1     416.      0.0000726  0         41444.  
20 mu_0       0.2      92.0     0.00490    0          8964.  
21 mu_0       0.3      18.4     0.0424     0          1580.  
22 mu_0       0.4       4.59    0.229      0           213.  
23 mu_0       0.5       2.13    0.576      0            36.1 
24 mu_0       0.6       1.38    1.09       0            15.7 
25 mu_0       0.7       1.12    1.19       0             3.04
26 mu_0       0.8       1.19    0.955      0             4.02
27 mu_0       0.9       1.60    0.321      0            11.6 
[1] "Total run time was 96.138 seconds"
