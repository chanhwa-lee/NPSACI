
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1277"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  6  4 10  2  9  5  8  7  6  7 10  5  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03657 0.35976 0.61238 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
765 512 
[1] "treatment indicator table: "

  0   1 
489 788 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.035 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.490 0.156 
 2 mu         0.1   0.2 0.564 0.169 
 3 mu         0.1   0.3 0.664 0.173 
 4 mu         0.1   0.4 0.725 0.192 
 5 mu         0.1   0.5 0.732 0.201 
 6 mu         0.2   0.1 0.310 0.0728
 7 mu         0.2   0.2 0.377 0.0754
 8 mu         0.2   0.3 0.455 0.0692
 9 mu         0.2   0.4 0.533 0.0703
10 mu         0.2   0.5 0.540 0.0745
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.33         0.228 0.000000660     28.1 
 2 mu         0.2      1.04         0.726 0.000530         6.45
 3 mu         0.3      1.00         0.926 0.0160           3.39
 4 mu         0.4      1.01         0.969 0.116            2.72
 5 mu         0.5      0.996        0.972 0.367            1.79
 6 mu         0.6      0.985        0.971 0.554            1.33
 7 mu         0.7      0.986        0.994 0.430            1.44
 8 mu         0.8      0.998        1.00  0.0975           2.03
 9 mu         0.9      1.04         0.943 0.00490          5.05
10 mu_1       0.1      0.978        0.449 0.00000382       9.08
11 mu_1       0.2      0.960        0.799 0.00154          3.92
12 mu_1       0.3      0.992        0.921 0.0311           3.52
13 mu_1       0.4      0.998        0.966 0.171            2.22
14 mu_1       0.5      0.989        0.967 0.450            1.73
15 mu_1       0.6      0.984        0.978 0.501            1.33
16 mu_1       0.7      0.989        1.02  0.323            1.54
17 mu_1       0.8      1.00         0.993 0.0675           2.09
18 mu_1       0.9      1.04         0.898 0.00319          5.48
19 mu_0       0.1      1.37         0.186 0.000000309     31.2 
20 mu_0       0.2      1.06         0.676 0.000278         7.09
21 mu_0       0.3      1.01         0.900 0.00957          4.01
22 mu_0       0.4      1.01         0.946 0.0795           3.06
23 mu_0       0.5      1.00         0.994 0.284            1.85
24 mu_0       0.6      0.988        0.969 0.597            1.48
25 mu_0       0.7      0.981        0.971 0.441            1.38
26 mu_0       0.8      0.988        1.02  0.217            1.80
27 mu_0       0.9      1.02         1.06  0.0203           2.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.881    0.0000742  8.17e-16     27.9 
 2 mu         0.2      1.19     0.00889    1.07e-10     19.0 
 3 mu         0.3      1.24     0.107      1.06e- 7     12.8 
 4 mu         0.4      1.14     0.414      1.40e- 5      7.18
 5 mu         0.5      1.06     0.833      6.23e- 4      4.45
 6 mu         0.6      1.06     1.01       8.93e- 3      3.04
 7 mu         0.7      1.12     1.17       2.17e- 4      2.79
 8 mu         0.8      1.27     0.570      9.69e- 7      7.13
 9 mu         0.9      1.53     0.0530     7.48e-11     24.1 
10 mu_1       0.1      1.30     0.000519   8.17e-15     27.5 
11 mu_1       0.2      1.31     0.0294     5.35e-10     14.2 
12 mu_1       0.3      1.21     0.229      3.52e- 7     11.0 
13 mu_1       0.4      1.07     0.624      3.51e- 5      4.79
14 mu_1       0.5      1.03     0.943      1.25e- 3      4.19
15 mu_1       0.6      1.06     1.08       1.86e- 3      2.98
16 mu_1       0.7      1.15     1.15       3.87e- 5      3.15
17 mu_1       0.8      1.30     0.450      1.51e- 7      8.35
18 mu_1       0.9      1.57     0.0373     1.04e-11     26.7 
19 mu_0       0.1      0.834    0.0000326  0            28.4 
20 mu_0       0.2      1.16     0.00407    0            20.3 
21 mu_0       0.3      1.25     0.0475     0            15.6 
22 mu_0       0.4      1.18     0.257      0             9.65
23 mu_0       0.5      1.09     0.642      0             4.85
24 mu_0       0.6      1.06     0.967      0             3.66
25 mu_0       0.7      1.07     1.07       0             2.60
26 mu_0       0.8      1.14     0.871      0             4.81
27 mu_0       0.9      1.17     0.132      0            13.0 
[1] "Total run time was 59.078 seconds"
