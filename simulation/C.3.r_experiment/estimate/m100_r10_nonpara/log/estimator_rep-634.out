
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1217"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  3  8  7  7  7  5  7  7  5  3  5  7  8  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0303  0.3892  0.6501  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
752 465 
[1] "treatment indicator table: "

  0   1 
429 788 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 197.615 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.462 0.181 
 2 mu         0.1   0.2 0.515 0.234 
 3 mu         0.1   0.3 0.554 0.256 
 4 mu         0.1   0.4 0.601 0.267 
 5 mu         0.1   0.5 0.630 0.285 
 6 mu         0.2   0.1 0.365 0.0825
 7 mu         0.2   0.2 0.427 0.0992
 8 mu         0.2   0.3 0.462 0.105 
 9 mu         0.2   0.4 0.514 0.109 
10 mu         0.2   0.5 0.534 0.114 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.32        0.0650 0.00000146      36.0 
 2 mu         0.2      1.10        0.469  0.00103         11.0 
 3 mu         0.3      1.03        0.851  0.0256           3.94
 4 mu         0.4      1.04        1.00   0.143            2.36
 5 mu         0.5      1.03        1.05   0.373            2.18
 6 mu         0.6      1.01        0.993  0.515            1.69
 7 mu         0.7      0.976       0.963  0.385            1.49
 8 mu         0.8      0.957       0.969  0.103            1.73
 9 mu         0.9      0.948       0.837  0.00591          3.20
10 mu_1       0.1      1.16        0.223  0.00000806      14.1 
11 mu_1       0.2      1.01        0.785  0.00293          5.26
12 mu_1       0.3      1.02        0.947  0.0497           3.32
13 mu_1       0.4      1.04        1.04   0.234            2.13
14 mu_1       0.5      1.02        0.974  0.426            2.13
15 mu_1       0.6      0.991       0.994  0.517            1.53
16 mu_1       0.7      0.966       0.980  0.309            1.45
17 mu_1       0.8      0.952       0.948  0.0756           1.77
18 mu_1       0.9      0.948       0.803  0.00403          3.29
19 mu_0       0.1      1.34        0.0483 0.000000731     39.8 
20 mu_0       0.2      1.12        0.385  0.000550        13.3 
21 mu_0       0.3      1.03        0.801  0.0150           4.71
22 mu_0       0.4      1.04        1.02   0.0816           2.77
23 mu_0       0.5      1.05        1.05   0.264            2.23
24 mu_0       0.6      1.03        0.983  0.445            1.93
25 mu_0       0.7      0.999       1.00   0.522            1.57
26 mu_0       0.8      0.974       0.964  0.210            1.60
27 mu_0       0.9      0.943       0.898  0.0228           2.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.347    0.0000610  3.23e-15     13.5 
 2 mu         0.2      0.954    0.00552    6.70e-10     24.2 
 3 mu         0.3      1.25     0.0753     7.58e- 7     28.3 
 4 mu         0.4      1.18     0.303      9.88e- 5     13.8 
 5 mu         0.5      1.13     0.759      3.81e- 3      4.27
 6 mu         0.6      1.15     1.07       4.72e- 2      3.34
 7 mu         0.7      1.14     1.11       1.38e- 2      3.03
 8 mu         0.8      1.09     0.846      9.22e- 5      3.82
 9 mu         0.9      1.02     0.152      1.01e- 8      9.19
10 mu_1       0.1      0.818    0.000432   2.91e-14     22.5 
11 mu_1       0.2      1.31     0.0185     3.01e- 9     31.8 
12 mu_1       0.3      1.30     0.168      2.27e- 6     24.8 
13 mu_1       0.4      1.14     0.526      2.22e- 4      9.07
14 mu_1       0.5      1.12     0.979      6.85e- 3      4.23
15 mu_1       0.6      1.15     1.09       7.27e- 2      2.93
16 mu_1       0.7      1.13     1.12       5.19e- 3      3.24
17 mu_1       0.8      1.09     0.709      3.03e- 5      4.30
18 mu_1       0.9      1.01     0.114      2.97e- 9     10.2 
19 mu_0       0.1      0.295    0.0000165  0            12.5 
20 mu_0       0.2      0.864    0.00230    0            22.3 
21 mu_0       0.3      1.22     0.0301     0            29.8 
22 mu_0       0.4      1.21     0.157      0            16.9 
23 mu_0       0.5      1.15     0.499      0             5.96
24 mu_0       0.6      1.17     0.941      0             3.95
25 mu_0       0.7      1.17     1.13       0             2.89
26 mu_0       0.8      1.13     1.17       0             3.71
27 mu_0       0.9      1.12     0.386      0             5.99
[1] "Total run time was 202.644 seconds"
