
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1246"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  5  5 10  8  4  4  7  5  7  6  6  4  3 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05722 0.38366 0.63334 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
777 469 
[1] "treatment indicator table: "

  0   1 
457 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 43.987 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.221 0.0695
 2 mu         0.1   0.2 0.332 0.0899
 3 mu         0.1   0.3 0.373 0.0830
 4 mu         0.1   0.4 0.415 0.0838
 5 mu         0.1   0.5 0.424 0.0913
 6 mu         0.2   0.1 0.175 0.0488
 7 mu         0.2   0.2 0.291 0.0635
 8 mu         0.2   0.3 0.336 0.0569
 9 mu         0.2   0.4 0.364 0.0577
10 mu         0.2   0.5 0.380 0.0657
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.694       0.0725 0.0000000346      6.07
 2 mu         0.2      0.720       0.438  0.0000622         3.23
 3 mu         0.3      0.841       0.735  0.00220           3.41
 4 mu         0.4      0.933       0.853  0.0205            2.84
 5 mu         0.5      0.972       0.952  0.101             2.16
 6 mu         0.6      0.987       0.973  0.319             1.80
 7 mu         0.7      0.984       0.972  0.158             2.09
 8 mu         0.8      0.957       0.944  0.0369            3.19
 9 mu         0.9      0.900       0.784  0.00257           3.62
10 mu_1       0.1      0.639       0.186  0.000000218       3.91
11 mu_1       0.2      0.762       0.648  0.000196          3.95
12 mu_1       0.3      0.891       0.852  0.00535           3.60
13 mu_1       0.4      0.959       0.885  0.0381            2.37
14 mu_1       0.5      0.984       0.976  0.154             2.10
15 mu_1       0.6      0.994       0.987  0.248             1.84
16 mu_1       0.7      0.988       0.978  0.0906            2.43
17 mu_1       0.8      0.956       0.915  0.0198            3.43
18 mu_1       0.9      0.897       0.774  0.00131           3.58
19 mu_0       0.1      0.700       0.0530 0.0000000142      6.58
20 mu_0       0.2      0.709       0.371  0.0000277         3.70
21 mu_0       0.3      0.819       0.682  0.000846          3.41
22 mu_0       0.4      0.916       0.845  0.00871           3.15
23 mu_0       0.5      0.960       0.919  0.0484            2.23
24 mu_0       0.6      0.976       0.949  0.178             1.98
25 mu_0       0.7      0.976       0.990  0.315             1.78
26 mu_0       0.8      0.963       0.949  0.106             2.25
27 mu_0       0.9      0.934       0.817  0.0128            4.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      77.5     0.000114   2.72e-17    5564. 
 2 mu         0.2     104.      0.00716    1.27e-11    4645. 
 3 mu         0.3      69.0     0.0700     2.46e- 8    4760. 
 4 mu         0.4      25.3     0.349      4.98e- 6    1986. 
 5 mu         0.5       5.74    0.797      2.88e- 4     393. 
 6 mu         0.6       1.79    1.06       7.36e- 3      34.4
 7 mu         0.7       1.79    1.09       1.36e- 3      48.3
 8 mu         0.8       2.02    0.910      4.13e- 6      47.2
 9 mu         0.9       1.89    0.191      4.49e-11      43.8
10 mu_1       0.1     111.      0.000740   2.58e-16    6954. 
11 mu_1       0.2      96.6     0.0232     6.02e-11    5807. 
12 mu_1       0.3      49.8     0.156      7.78e- 8    3967. 
13 mu_1       0.4      15.0     0.629      1.18e- 5    1242. 
14 mu_1       0.5       3.34    0.966      5.47e- 4     197. 
15 mu_1       0.6       1.61    1.10       1.17e- 2      25.2
16 mu_1       0.7       1.85    1.03       4.85e- 4      51.8
17 mu_1       0.8       2.04    0.777      7.74e- 7      44.2
18 mu_1       0.9       1.87    0.142      7.48e-12      45.5
19 mu_0       0.1      73.7     0.0000344  0           5409. 
20 mu_0       0.2     106.      0.00227    0           4679. 
21 mu_0       0.3      77.2     0.0332     0           5100. 
22 mu_0       0.4      32.2     0.196      0           2483. 
23 mu_0       0.5       8.15    0.595      0            590. 
24 mu_0       0.6       2.07    0.934      0             64.6
25 mu_0       0.7       1.63    1.03       0             40.3
26 mu_0       0.8       1.95    0.911      0             58.9
27 mu_0       0.9       2.12    0.470      0             33.7
[1] "Total run time was 47.029 seconds"
