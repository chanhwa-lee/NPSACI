
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1326"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  6  5  8  5  8  5  1  7  8  9  6 11  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02912 0.36931 0.64619 1.00000 4.57606 
[1] "event indicator table: "

  0   1 
860 466 
[1] "treatment indicator table: "

  0   1 
421 905 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 692
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 75.762 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est    se
   <chr>    <dbl> <dbl>  <dbl> <dbl>
 1 mu         0.1   0.1 0.119  0.127
 2 mu         0.1   0.2 0.0737 0.154
 3 mu         0.1   0.3 0.0714 0.174
 4 mu         0.1   0.4 0.0439 0.175
 5 mu         0.1   0.5 0.0700 0.147
 6 mu         0.2   0.1 0.171  0.126
 7 mu         0.2   0.2 0.149  0.153
 8 mu         0.2   0.3 0.153  0.172
 9 mu         0.2   0.4 0.137  0.173
10 mu         0.2   0.5 0.174  0.146
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1     0.109       0.00306 0.0000000230       2.94
 2 mu         0.2     0.354       0.0641  0.0000297          4.58
 3 mu         0.3     0.704       0.261   0.00152            5.61
 4 mu         0.4     0.989       0.640   0.0166             5.52
 5 mu         0.5     1.11        0.908   0.0892             5.71
 6 mu         0.6     1.11        0.990   0.294              6.25
 7 mu         0.7     1.04        0.988   0.310              3.48
 8 mu         0.8     0.934       0.922   0.0675             3.68
 9 mu         0.9     0.717       0.590   0.00256            2.20
10 mu_1       0.1     0.284       0.0131  0.000000160        4.83
11 mu_1       0.2     0.586       0.169   0.000104           6.35
12 mu_1       0.3     0.896       0.445   0.00361            5.40
13 mu_1       0.4     1.08        0.813   0.0307             5.53
14 mu_1       0.5     1.13        0.992   0.134              6.40
15 mu_1       0.6     1.10        0.998   0.376              5.90
16 mu_1       0.7     1.02        0.974   0.243              2.96
17 mu_1       0.8     0.915       0.894   0.0486             3.72
18 mu_1       0.9     0.696       0.536   0.00168            2.09
19 mu_0       0.1     0.0898      0.00194 0.00000000781      2.73
20 mu_0       0.2     0.296       0.0416  0.0000111          4.14
21 mu_0       0.3     0.622       0.185   0.000583           5.70
22 mu_0       0.4     0.931       0.546   0.00718            5.51
23 mu_0       0.5     1.10        0.858   0.0442             5.36
24 mu_0       0.6     1.14        0.975   0.169              6.77
25 mu_0       0.7     1.09        1.02    0.447              4.69
26 mu_0       0.8     1.01        0.962   0.143              3.50
27 mu_0       0.9     0.902       0.861   0.0104             3.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     222.    0.00000307   4.50e-17  22178.  
 2 mu         0.2     172.    0.000924     2.10e-11  17055.  
 3 mu         0.3      61.4   0.0150       4.07e- 8   5918.  
 4 mu         0.4      14.3   0.123        8.25e- 6   1216.  
 5 mu         0.5       3.19  0.504        4.77e- 4    148.  
 6 mu         0.6       1.40  0.918        1.22e- 2     14.4 
 7 mu         0.7       1.31  0.902        3.20e- 2     16.6 
 8 mu         0.8       2.97  0.771        2.81e- 4    161.  
 9 mu         0.9      13.6   0.178        5.49e- 8   1193.  
10 mu_1       0.1     278.    0.0000182    4.28e-16  27723.  
11 mu_1       0.2     109.    0.00348      9.97e-11  10659.  
12 mu_1       0.3      27.1   0.0364       1.29e- 7   2466.  
13 mu_1       0.4       5.83  0.229        1.96e- 5    380.  
14 mu_1       0.5       1.91  0.656        9.07e- 4     37.0 
15 mu_1       0.6       1.23  0.907        1.93e- 2     10.5 
16 mu_1       0.7       1.38  0.892        1.08e- 2     23.8 
17 mu_1       0.8       3.42  0.632        8.25e- 5    201.  
18 mu_1       0.9      14.9   0.131        1.09e- 8   1325.  
19 mu_0       0.1     216.    0.000000584  0         21562.  
20 mu_0       0.2     188.    0.000242     0         18654.  
21 mu_0       0.3      76.2   0.00619      0          7397.  
22 mu_0       0.4      20.0   0.0553       0          1773.  
23 mu_0       0.5       4.48  0.304        0           259.  
24 mu_0       0.6       1.64  0.774        0            20.5 
25 mu_0       0.7       1.16  0.863        0             6.45
26 mu_0       0.8       1.19  0.841        0            14.8 
27 mu_0       0.9       1.64  0.438        0            48.7 
[1] "Total run time was 80.107 seconds"
