
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1141"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  9 10  2  9 12  4  6  8  5 10  4  5  1  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04308 0.35896 0.59247 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
667 474 
[1] "treatment indicator table: "

  0   1 
375 766 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 573
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 568
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.076 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.216 0.153 
 2 mu         0.1   0.2 0.356 0.108 
 3 mu         0.1   0.3 0.345 0.122 
 4 mu         0.1   0.4 0.441 0.136 
 5 mu         0.1   0.5 0.401 0.134 
 6 mu         0.2   0.1 0.273 0.0865
 7 mu         0.2   0.2 0.375 0.0708
 8 mu         0.2   0.3 0.402 0.0773
 9 mu         0.2   0.4 0.457 0.0850
10 mu         0.2   0.5 0.467 0.0870
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.714       0.0566 0.0000000660     21.3 
 2 mu         0.2      0.840       0.368  0.000115         10.6 
 3 mu         0.3      0.868       0.703  0.00440           3.70
 4 mu         0.4      0.894       0.911  0.0461            1.88
 5 mu         0.5      0.929       0.980  0.230             1.61
 6 mu         0.6      0.970       0.999  0.480             1.39
 7 mu         0.7      1.02        1.00   0.646             1.51
 8 mu         0.8      1.07        1.04   0.405             1.83
 9 mu         0.9      1.10        1.08   0.0873            5.05
10 mu_1       0.1      0.993       0.221  0.000000398      16.4 
11 mu_1       0.2      0.890       0.649  0.000348          4.36
12 mu_1       0.3      0.890       0.909  0.0102            2.32
13 mu_1       0.4      0.915       0.953  0.0817            1.78
14 mu_1       0.5      0.947       0.989  0.295             1.46
15 mu_1       0.6      0.983       0.982  0.525             1.35
16 mu_1       0.7      1.03        1.02   0.627             1.57
17 mu_1       0.8      1.07        1.05   0.362             2.00
18 mu_1       0.9      1.10        1.06   0.0765            5.44
19 mu_0       0.1      0.683       0.0390 0.0000000291     21.9 
20 mu_0       0.2      0.828       0.291  0.0000479        12.1 
21 mu_0       0.3      0.858       0.641  0.00191           4.61
22 mu_0       0.4      0.880       0.866  0.0223            2.15
23 mu_0       0.5      0.912       0.972  0.129             1.76
24 mu_0       0.6      0.950       0.964  0.385             1.48
25 mu_0       0.7      0.993       0.996  0.602             1.39
26 mu_0       0.8      1.05        1.04   0.542             1.77
27 mu_0       0.9      1.08        1.02   0.185             2.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.357    0.0000445  1.49e-18     13.7 
 2 mu         0.2      0.718    0.00478    1.57e-12     13.5 
 3 mu         0.3      1.02     0.0673     5.21e- 9      9.10
 4 mu         0.4      1.11     0.294      1.64e- 6      7.03
 5 mu         0.5      1.06     0.712      1.42e- 4      4.60
 6 mu         0.6      1.00     0.965      5.46e- 3      2.95
 7 mu         0.7      0.995    1.02       1.49e- 2      3.46
 8 mu         0.8      1.12     0.984      2.24e- 4      4.81
 9 mu         0.9      1.67     0.266      5.56e- 8     19.8 
10 mu_1       0.1      0.746    0.000302   1.49e-17     19.6 
11 mu_1       0.2      1.00     0.0147     7.83e-12      9.66
12 mu_1       0.3      1.13     0.144      1.74e- 8      8.31
13 mu_1       0.4      1.08     0.533      4.10e- 6      5.86
14 mu_1       0.5      1.00     0.860      2.85e- 4      3.57
15 mu_1       0.6      0.966    0.973      9.10e- 3      3.15
16 mu_1       0.7      0.997    0.981      5.69e- 3      3.42
17 mu_1       0.8      1.15     0.832      8.86e- 5      4.95
18 mu_1       0.9      1.75     0.210      1.95e- 8     22.0 
19 mu_0       0.1      0.314    0.0000121  0            13.1 
20 mu_0       0.2      0.648    0.00193    0            14.5 
21 mu_0       0.3      0.972    0.0250     0            11.1 
22 mu_0       0.4      1.12     0.154      0             7.81
23 mu_0       0.5      1.11     0.498      0             6.13
24 mu_0       0.6      1.05     0.935      0             4.21
25 mu_0       0.7      0.991    0.956      0             3.54
26 mu_0       0.8      0.973    0.867      0             4.24
27 mu_0       0.9      1.01     0.161      0             5.51
[1] "Total run time was 53.421 seconds"
