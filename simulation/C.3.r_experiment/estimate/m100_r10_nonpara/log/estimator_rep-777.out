
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1277"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  4  7  6  7  4  7  3 12  8  3  6  7  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03822 0.35970 0.62843 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
741 536 
[1] "treatment indicator table: "

  0   1 
467 810 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.722 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.242 0.177 
 2 mu         0.1   0.2 0.350 0.115 
 3 mu         0.1   0.3 0.414 0.116 
 4 mu         0.1   0.4 0.500 0.191 
 5 mu         0.1   0.5 0.518 0.209 
 6 mu         0.2   0.1 0.366 0.120 
 7 mu         0.2   0.2 0.465 0.0877
 8 mu         0.2   0.3 0.547 0.0960
 9 mu         0.2   0.4 0.627 0.134 
10 mu         0.2   0.5 0.699 0.157 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.870       0.116  0.0000000754     16.2 
 2 mu         0.2      1.21        0.585  0.0000546        12.7 
 3 mu         0.3      1.21        0.855  0.00214           6.67
 4 mu         0.4      1.11        1.02   0.0245            3.19
 5 mu         0.5      1.05        1.02   0.139             1.82
 6 mu         0.6      1.02        1.01   0.483             1.48
 7 mu         0.7      0.993       0.989  0.590             1.55
 8 mu         0.8      0.967       0.942  0.176             2.20
 9 mu         0.9      0.968       0.831  0.00849           4.23
10 mu_1       0.1      1.23        0.322  0.000000544      18.0 
11 mu_1       0.2      1.26        0.873  0.000199          7.13
12 mu_1       0.3      1.15        0.933  0.00526           4.50
13 mu_1       0.4      1.06        0.984  0.0460            2.33
14 mu_1       0.5      1.03        0.992  0.212             1.70
15 mu_1       0.6      1.01        1.00   0.590             1.47
16 mu_1       0.7      0.988       0.974  0.463             1.66
17 mu_1       0.8      0.962       0.951  0.141             2.37
18 mu_1       0.9      0.966       0.785  0.00632           4.54
19 mu_0       0.1      0.830       0.0916 0.0000000233     16.0 
20 mu_0       0.2      1.20        0.514  0.0000184        14.1 
21 mu_0       0.3      1.23        0.871  0.000798          8.37
22 mu_0       0.4      1.14        0.997  0.0103            3.99
23 mu_0       0.5      1.07        1.02   0.0662            2.10
24 mu_0       0.6      1.03        0.999  0.267             1.66
25 mu_0       0.7      1.01        0.993  0.542             1.50
26 mu_0       0.8      0.986       0.983  0.316             1.87
27 mu_0       0.9      0.978       0.919  0.0280            3.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.338   0.0000263   1.44e-17     20.0 
 2 mu         0.2      0.820   0.00333     7.53e-12     31.1 
 3 mu         0.3      1.11    0.0528      1.67e- 8     24.1 
 4 mu         0.4      1.17    0.301       3.95e- 6     12.5 
 5 mu         0.5      1.12    0.847       2.74e- 4      7.30
 6 mu         0.6      1.08    1.04        8.76e- 3      3.84
 7 mu         0.7      1.05    1.03        7.68e- 3      3.63
 8 mu         0.8      1.01    0.641       7.69e- 5      4.27
 9 mu         0.9      1.17    0.0774      1.69e- 8     19.4 
10 mu_1       0.1      0.789   0.000175    1.44e-16     39.9 
11 mu_1       0.2      1.11    0.0119      3.77e-11     31.1 
12 mu_1       0.3      1.18    0.112       5.57e- 8     16.0 
13 mu_1       0.4      1.15    0.500       9.87e- 6     11.1 
14 mu_1       0.5      1.10    0.958       5.48e- 4      6.57
15 mu_1       0.6      1.07    1.04        1.46e- 2      3.64
16 mu_1       0.7      1.04    1.04        3.05e- 3      3.46
17 mu_1       0.8      1.01    0.539       2.67e- 5      5.01
18 mu_1       0.9      1.19    0.0466      5.22e- 9     21.6 
19 mu_0       0.1      0.287   0.00000681  0            17.7 
20 mu_0       0.2      0.749   0.00128     0            31.1 
21 mu_0       0.3      1.08    0.0250      0            27.5 
22 mu_0       0.4      1.18    0.165       0            16.6 
23 mu_0       0.5      1.15    0.545       0             8.92
24 mu_0       0.6      1.09    1.03        0             5.06
25 mu_0       0.7      1.06    0.981       0             4.03
26 mu_0       0.8      1.01    1.04        0             3.79
27 mu_0       0.9      1.00    0.234       0             7.81
[1] "Total run time was 63.958 seconds"
