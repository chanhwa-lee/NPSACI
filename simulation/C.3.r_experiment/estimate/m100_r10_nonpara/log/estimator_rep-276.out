
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1291"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  4  6  8  5  6  6 10 11  5  6  3  5 11  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03678 0.33729 0.60019 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
746 545 
[1] "treatment indicator table: "

  0   1 
494 797 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 693
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.801 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.315 0.0877
 2 mu         0.1   0.2 0.317 0.100 
 3 mu         0.1   0.3 0.374 0.0990
 4 mu         0.1   0.4 0.455 0.120 
 5 mu         0.1   0.5 0.478 0.107 
 6 mu         0.2   0.1 0.282 0.0531
 7 mu         0.2   0.2 0.300 0.0667
 8 mu         0.2   0.3 0.369 0.0575
 9 mu         0.2   0.4 0.444 0.0798
10 mu         0.2   0.5 0.461 0.0619
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.636       0.0732 0.0000000187       8.57
 2 mu         0.2      0.704       0.352  0.0000470          3.92
 3 mu         0.3      0.824       0.732  0.00311            3.11
 4 mu         0.4      0.944       0.917  0.0420             3.53
 5 mu         0.5      1.01        0.988  0.217              2.96
 6 mu         0.6      1.02        1.02   0.474              1.96
 7 mu         0.7      1.01        1.01   0.306              1.93
 8 mu         0.8      1.02        0.956  0.0579             3.48
 9 mu         0.9      1.12        0.758  0.00242            6.54
10 mu_1       0.1      0.664       0.206  0.000000116        6.04
11 mu_1       0.2      0.771       0.562  0.000149           3.32
12 mu_1       0.3      0.902       0.873  0.00664            3.96
13 mu_1       0.4      0.990       0.965  0.0680             3.43
14 mu_1       0.5      1.02        1.00   0.286              2.78
15 mu_1       0.6      1.02        1.02   0.511              1.70
16 mu_1       0.7      1.01        1.00   0.190              2.15
17 mu_1       0.8      1.03        0.910  0.0327             3.77
18 mu_1       0.9      1.13        0.708  0.00127            6.75
19 mu_0       0.1      0.632       0.0534 0.00000000783      8.96
20 mu_0       0.2      0.687       0.290  0.0000215          4.47
21 mu_0       0.3      0.790       0.655  0.00160            3.06
22 mu_0       0.4      0.913       0.881  0.0247             3.60
23 mu_0       0.5      0.996       0.963  0.147              3.53
24 mu_0       0.6      1.02        0.996  0.419              2.69
25 mu_0       0.7      1.01        0.974  0.526              1.72
26 mu_0       0.8      0.993       0.973  0.159              2.31
27 mu_0       0.9      1.03        0.905  0.0128             4.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      49.6     0.000143   2.14e-17   4877.  
 2 mu         0.2      32.8     0.0110     1.12e-11   3004.  
 3 mu         0.3      15.8     0.113      2.49e- 8   1185.  
 4 mu         0.4       7.09    0.466      5.88e- 6    338.  
 5 mu         0.5       3.43    0.998      4.08e- 4     69.2 
 6 mu         0.6       1.87    1.21       1.30e- 2     38.4 
 7 mu         0.7       1.28    1.09       7.72e- 3      8.65
 8 mu         0.8       1.47    0.513      1.75e- 4     31.2 
 9 mu         0.9       2.98    0.0392     2.16e- 7    103.  
10 mu_1       0.1      46.3     0.000994   2.14e-16   4434.  
11 mu_1       0.2      17.4     0.0322     5.61e-11   1365.  
12 mu_1       0.3       7.66    0.262      8.29e- 8    359.  
13 mu_1       0.4       4.11    0.734      1.47e- 5    120.  
14 mu_1       0.5       2.50    1.15       8.16e- 4     65.6 
15 mu_1       0.6       1.59    1.20       2.17e- 2     30.3 
16 mu_1       0.7       1.23    0.999      1.84e- 3      8.71
17 mu_1       0.8       1.56    0.360      3.64e- 5     36.7 
18 mu_1       0.9       3.13    0.0256     4.00e- 8    107.  
19 mu_0       0.1      50.0     0.0000512  0          4927.  
20 mu_0       0.2      36.6     0.00515    0          3414.  
21 mu_0       0.3      19.3     0.0569     0          1539.  
22 mu_0       0.4       9.07    0.295      0           513.  
23 mu_0       0.5       4.35    0.753      0           124.  
24 mu_0       0.6       2.28    1.23       0            50.5 
25 mu_0       0.7       1.39    1.10       0            15.2 
26 mu_0       0.8       1.14    0.884      0             9.91
27 mu_0       0.9       1.62    0.113      0            60.4 
[1] "Total run time was 71.396 seconds"
