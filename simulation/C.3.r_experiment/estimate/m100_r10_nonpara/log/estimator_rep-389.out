
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1295"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  3  2  7  8  9  8  6  8  9  1 10  6  8  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03829 0.35820 0.62177 1.00000 5.83197 
[1] "event indicator table: "

  0   1 
769 526 
[1] "treatment indicator table: "

  0   1 
498 797 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 678
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 71.387 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.266 0.0995
 2 mu         0.1   0.2 0.362 0.117 
 3 mu         0.1   0.3 0.390 0.123 
 4 mu         0.1   0.4 0.440 0.137 
 5 mu         0.1   0.5 0.481 0.142 
 6 mu         0.2   0.1 0.285 0.0584
 7 mu         0.2   0.2 0.386 0.0686
 8 mu         0.2   0.3 0.434 0.0727
 9 mu         0.2   0.4 0.490 0.0796
10 mu         0.2   0.5 0.530 0.0843
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.759       0.0514 0.00000628     17.8 
 2 mu         0.2      0.879       0.341  0.00243         6.11
 3 mu         0.3      0.973       0.732  0.0481          4.59
 4 mu         0.4      1.03        0.935  0.260           2.82
 5 mu         0.5      1.04        1.02   0.502           2.02
 6 mu         0.6      1.03        0.999  0.533           1.78
 7 mu         0.7      1.01        0.990  0.349           2.22
 8 mu         0.8      1.02        0.946  0.0660          6.22
 9 mu         0.9      1.05        0.823  0.00254         9.37
10 mu_1       0.1      0.935       0.176  0.0000333      11.2 
11 mu_1       0.2      0.956       0.579  0.00652         5.73
12 mu_1       0.3      1.01        0.911  0.0872          3.99
13 mu_1       0.4      1.04        1.02   0.361           2.41
14 mu_1       0.5      1.04        1.00   0.545           1.91
15 mu_1       0.6      1.03        1.00   0.483           1.76
16 mu_1       0.7      1.01        0.976  0.282           2.63
17 mu_1       0.8      1.03        0.922  0.0507          6.81
18 mu_1       0.9      1.05        0.781  0.00188         9.23
19 mu_0       0.1      0.739       0.0358 0.00000328     18.6 
20 mu_0       0.2      0.860       0.264  0.00141         7.15
21 mu_0       0.3      0.956       0.660  0.0313          4.94
22 mu_0       0.4      1.02        0.889  0.174           3.29
23 mu_0       0.5      1.04        1.03   0.361           2.34
24 mu_0       0.6      1.03        0.990  0.607           1.80
25 mu_0       0.7      1.02        0.991  0.435           1.76
26 mu_0       0.8      0.999       0.975  0.127           3.88
27 mu_0       0.9      1.02        0.866  0.00850        10.6 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.751    0.000141   6.70e-18     26.9 
 2 mu         0.2      1.54     0.0142     3.51e-12     46.6 
 3 mu         0.3      1.63     0.160      7.78e- 9     27.7 
 4 mu         0.4      1.50     0.636      1.84e- 6     15.6 
 5 mu         0.5      1.33     0.967      1.28e- 4      6.67
 6 mu         0.6      1.18     1.14       4.08e- 3      5.37
 7 mu         0.7      1.24     0.866      1.59e- 3      8.69
 8 mu         0.8      1.98     0.662      8.11e- 6     32.9 
 9 mu         0.9      4.37     0.0598     7.05e-10    143.  
10 mu_1       0.1      1.51     0.000893   6.70e-17     50.5 
11 mu_1       0.2      1.80     0.0443     1.76e-11     43.7 
12 mu_1       0.3      1.62     0.297      2.59e- 8     19.6 
13 mu_1       0.4      1.44     0.997      4.60e- 6     13.0 
14 mu_1       0.5      1.27     0.999      2.55e- 4      4.88
15 mu_1       0.6      1.15     1.04       6.80e- 3      5.47
16 mu_1       0.7      1.29     0.815      4.00e- 4     11.5 
17 mu_1       0.8      2.16     0.539      1.79e- 6     38.1 
18 mu_1       0.9      4.60     0.0387     1.38e-10    159.  
19 mu_0       0.1      0.666    0.0000576  0            24.3 
20 mu_0       0.2      1.47     0.00570    0            47.3 
21 mu_0       0.3      1.63     0.0894     0            32.2 
22 mu_0       0.4      1.54     0.423      0            17.3 
23 mu_0       0.5      1.39     1.07       0             8.90
24 mu_0       0.6      1.22     1.05       0             5.22
25 mu_0       0.7      1.10     1.00       0             5.06
26 mu_0       0.8      1.25     0.504      0            11.7 
27 mu_0       0.9      2.23     0.0569     0            54.3 
[1] "Total run time was 76.96 seconds"
