
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1200"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 13  4  8  5  9  8  3  6  6  7  8  3  5  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0374  0.3641  0.6309  1.0000  7.0000 
[1] "event indicator table: "

  0   1 
724 476 
[1] "treatment indicator table: "

  0   1 
429 771 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 49.807 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.359 0.0953
 2 mu         0.1   0.2 0.393 0.114 
 3 mu         0.1   0.3 0.404 0.127 
 4 mu         0.1   0.4 0.401 0.142 
 5 mu         0.1   0.5 0.476 0.140 
 6 mu         0.2   0.1 0.314 0.0506
 7 mu         0.2   0.2 0.373 0.0545
 8 mu         0.2   0.3 0.397 0.0589
 9 mu         0.2   0.4 0.427 0.0701
10 mu         0.2   0.5 0.478 0.0660
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.763       0.100  0.000000599     22.2 
 2 mu         0.2      0.818       0.521  0.000353         4.27
 3 mu         0.3      0.891       0.835  0.0110           2.56
 4 mu         0.4      0.955       0.950  0.0969           2.26
 5 mu         0.5      1.00        0.979  0.374            2.15
 6 mu         0.6      1.03        1.02   0.506            1.69
 7 mu         0.7      1.04        0.998  0.480            1.87
 8 mu         0.8      1.01        1.04   0.399            2.02
 9 mu         0.9      0.949       0.943  0.0363           2.46
10 mu_1       0.1      0.808       0.333  0.00000379       5.83
11 mu_1       0.2      0.886       0.836  0.00113          3.22
12 mu_1       0.3      0.938       0.932  0.0238           2.48
13 mu_1       0.4      0.985       0.982  0.161            2.44
14 mu_1       0.5      1.02        0.973  0.424            1.96
15 mu_1       0.6      1.03        1.02   0.521            1.68
16 mu_1       0.7      1.04        1.00   0.458            1.90
17 mu_1       0.8      1.01        1.03   0.332            2.04
18 mu_1       0.9      0.942       0.926  0.0273           2.55
19 mu_0       0.1      0.758       0.0819 0.000000244     24.6 
20 mu_0       0.2      0.801       0.432  0.000158         5.34
21 mu_0       0.3      0.871       0.763  0.00546          2.72
22 mu_0       0.4      0.935       0.908  0.0544           2.16
23 mu_0       0.5      0.985       0.968  0.261            2.34
24 mu_0       0.6      1.02        0.992  0.484            1.81
25 mu_0       0.7      1.04        1.03   0.519            1.92
26 mu_0       0.8      1.03        1.00   0.321            1.94
27 mu_0       0.9      1.01        0.988  0.118            2.32
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.503    0.000127   4.56e-18     23.8 
 2 mu         0.2      1.11     0.0105     2.39e-12     26.1 
 3 mu         0.3      1.42     0.0947     5.30e- 9     23.2 
 4 mu         0.4      1.42     0.449      1.25e- 6     18.5 
 5 mu         0.5      1.30     0.986      8.69e- 5     12.6 
 6 mu         0.6      1.21     1.12       2.78e- 3      5.47
 7 mu         0.7      1.13     0.945      6.59e- 3      7.29
 8 mu         0.8      1.08     0.754      6.57e- 5      5.45
 9 mu         0.9      1.30     0.137      8.13e- 9     11.2 
10 mu_1       0.1      1.07     0.000774   4.56e-17     36.6 
11 mu_1       0.2      1.49     0.0361     1.20e-11     27.3 
12 mu_1       0.3      1.53     0.199      1.77e- 8     21.1 
13 mu_1       0.4      1.38     0.736      3.13e- 6     16.8 
14 mu_1       0.5      1.24     1.11       1.74e- 4      9.15
15 mu_1       0.6      1.17     1.07       4.63e- 3      4.99
16 mu_1       0.7      1.10     0.930      1.45e- 3      7.53
17 mu_1       0.8      1.08     0.674      1.91e- 5      4.92
18 mu_1       0.9      1.33     0.102      2.71e- 9     12.4 
19 mu_0       0.1      0.440    0.0000517  0            22.4 
20 mu_0       0.2      1.01     0.00457    0            27.6 
21 mu_0       0.3      1.37     0.0513     0            24.1 
22 mu_0       0.4      1.44     0.293      0            19.6 
23 mu_0       0.5      1.35     0.761      0            16.0 
24 mu_0       0.6      1.27     1.20       0             8.70
25 mu_0       0.7      1.21     1.13       0             6.75
26 mu_0       0.8      1.10     0.951      0             7.57
27 mu_0       0.9      1.02     0.309      0             5.98
[1] "Total run time was 52.901 seconds"
