
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1250"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  4  8  6  9  7 10  6  7  2 11  4  6  5  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05036 0.37873 0.64814 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
770 480 
[1] "treatment indicator table: "

  0   1 
430 820 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 81.123 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.627 0.250
 2 mu         0.1   0.2 0.666 0.250
 3 mu         0.1   0.3 0.683 0.255
 4 mu         0.1   0.4 0.794 0.289
 5 mu         0.1   0.5 0.976 0.381
 6 mu         0.2   0.1 0.474 0.108
 7 mu         0.2   0.2 0.527 0.111
 8 mu         0.2   0.3 0.554 0.114
 9 mu         0.2   0.4 0.638 0.131
10 mu         0.2   0.5 0.734 0.168
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.16         0.264 0.000000751     44.3 
 2 mu         0.2      1.07         0.628 0.000563        18.4 
 3 mu         0.3      1.03         0.842 0.0167           7.42
 4 mu         0.4      1.00         0.894 0.105            3.94
 5 mu         0.5      0.983        0.928 0.294            2.25
 6 mu         0.6      0.986        0.989 0.425            1.66
 7 mu         0.7      0.985        0.973 0.439            1.90
 8 mu         0.8      0.976        0.949 0.293            1.81
 9 mu         0.9      0.957        0.892 0.135            2.92
10 mu_1       0.1      0.935        0.467 0.00000414       9.43
11 mu_1       0.2      0.980        0.825 0.00157          6.68
12 mu_1       0.3      0.990        0.866 0.0317           4.82
13 mu_1       0.4      0.979        0.936 0.154            3.38
14 mu_1       0.5      0.977        0.961 0.340            2.17
15 mu_1       0.6      0.986        0.983 0.486            1.66
16 mu_1       0.7      0.984        0.972 0.407            1.96
17 mu_1       0.8      0.974        0.935 0.271            1.82
18 mu_1       0.9      0.955        0.871 0.104            3.06
19 mu_0       0.1      1.19         0.206 0.000000374     49.1 
20 mu_0       0.2      1.09         0.642 0.000312        22.5 
21 mu_0       0.3      1.05         0.797 0.0103           9.92
22 mu_0       0.4      1.02         0.910 0.0728           4.40
23 mu_0       0.5      0.989        0.931 0.219            2.42
24 mu_0       0.6      0.985        0.955 0.327            1.95
25 mu_0       0.7      0.987        0.969 0.418            1.78
26 mu_0       0.8      0.981        0.983 0.345            2.04
27 mu_0       0.9      0.978        0.975 0.236            2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.26   0.0000245   3.77e-17    101.  
 2 mu         0.2       2.75   0.00425     1.76e-11     87.0 
 3 mu         0.3       2.10   0.0602      3.41e- 8     38.7 
 4 mu         0.4       1.53   0.294       6.91e- 6     16.5 
 5 mu         0.5       1.23   0.748       3.75e- 4      8.78
 6 mu         0.6       1.12   0.977       6.93e- 3      6.73
 7 mu         0.7       1.16   1.04        3.09e- 3      4.25
 8 mu         0.8       1.21   1.02        2.07e- 5      4.83
 9 mu         0.9       1.14   0.217       3.20e- 9      8.94
10 mu_1       0.1       3.44   0.000153    3.58e-16    134.  
11 mu_1       0.2       2.53   0.0145      8.35e-11     58.0 
12 mu_1       0.3       1.73   0.127       1.08e- 7     30.4 
13 mu_1       0.4       1.33   0.504       1.64e- 5     13.1 
14 mu_1       0.5       1.14   0.824       7.50e- 4      7.02
15 mu_1       0.6       1.10   1.06        1.16e- 2      6.49
16 mu_1       0.7       1.16   0.998       5.89e- 4      4.34
17 mu_1       0.8       1.21   0.881       3.46e- 6      5.40
18 mu_1       0.9       1.14   0.159       4.75e-10      8.88
19 mu_0       0.1       2.13   0.00000755  0            96.8 
20 mu_0       0.2       2.81   0.00169     0            94.2 
21 mu_0       0.3       2.26   0.0302      0            42.7 
22 mu_0       0.4       1.67   0.140       0            21.0 
23 mu_0       0.5       1.31   0.551       0            10.5 
24 mu_0       0.6       1.15   0.844       0             7.08
25 mu_0       0.7       1.14   1.01        0             5.15
26 mu_0       0.8       1.22   1.02        0             4.81
27 mu_0       0.9       1.20   0.515       0             9.41
[1] "Total run time was 85.877 seconds"
