
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1318"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  4  6  9  3  9  4  2  8  6  9  8  7  5 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03612 0.36501 0.60835 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
791 527 
[1] "treatment indicator table: "

  0   1 
452 866 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 49.178 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.180 0.0691
 2 mu         0.1   0.2 0.223 0.0853
 3 mu         0.1   0.3 0.243 0.0793
 4 mu         0.1   0.4 0.226 0.0679
 5 mu         0.1   0.5 0.225 0.0680
 6 mu         0.2   0.1 0.266 0.0652
 7 mu         0.2   0.2 0.327 0.0789
 8 mu         0.2   0.3 0.379 0.0880
 9 mu         0.2   0.4 0.378 0.0826
10 mu         0.2   0.5 0.386 0.0872
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.321       0.0254 0.00000000633      7.06
 2 mu         0.2      0.684       0.208  0.0000238          9.80
 3 mu         0.3      0.862       0.563  0.00197            6.72
 4 mu         0.4      0.925       0.819  0.0319             3.28
 5 mu         0.5      0.964       0.892  0.199              2.02
 6 mu         0.6      0.992       1.00   0.452              1.62
 7 mu         0.7      1.02        1.01   0.587              1.57
 8 mu         0.8      1.04        1.03   0.286              2.25
 9 mu         0.9      1.05        0.948  0.0394             3.48
10 mu_1       0.1      0.640       0.0908 0.0000000413      12.8 
11 mu_1       0.2      0.863       0.440  0.0000780          8.93
12 mu_1       0.3      0.924       0.792  0.00433            4.23
13 mu_1       0.4      0.951       0.868  0.0534             2.15
14 mu_1       0.5      0.979       0.955  0.272              1.98
15 mu_1       0.6      1.00        0.998  0.502              1.53
16 mu_1       0.7      1.03        1.04   0.528              1.62
17 mu_1       0.8      1.05        1.01   0.239              2.44
18 mu_1       0.9      1.05        0.939  0.0310             3.48
19 mu_0       0.1      0.286       0.0168 0.00000000245      6.42
20 mu_0       0.2      0.640       0.155  0.0000103         10.0 
21 mu_0       0.3      0.835       0.452  0.000955           7.80
22 mu_0       0.4      0.908       0.735  0.0176             4.23
23 mu_0       0.5      0.950       0.848  0.122              2.07
24 mu_0       0.6      0.979       0.989  0.329              1.85
25 mu_0       0.7      0.998       0.988  0.605              1.61
26 mu_0       0.8      1.02        0.994  0.445              1.79
27 mu_0       0.9      1.05        0.923  0.115              3.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.509    0.0000397  1.75e-15     24.9 
 2 mu         0.2      1.24     0.00420    2.04e-10     26.9 
 3 mu         0.3      1.79     0.0416     1.76e- 7     46.9 
 4 mu         0.4      1.73     0.239      2.00e- 5     36.3 
 5 mu         0.5      1.38     0.591      7.41e- 4     14.9 
 6 mu         0.6      1.11     0.910      1.31e- 2      6.02
 7 mu         0.7      1.06     1.03       1.02e- 2      3.16
 8 mu         0.8      1.25     0.838      7.78e- 5      7.26
 9 mu         0.9      1.50     0.145      9.63e- 9     15.1 
10 mu_1       0.1      1.02     0.000290   1.65e-14     31.1 
11 mu_1       0.2      1.68     0.0136     9.61e-10     42.0 
12 mu_1       0.3      1.86     0.104      5.53e- 7     48.9 
13 mu_1       0.4      1.58     0.405      4.73e- 5     28.4 
14 mu_1       0.5      1.25     0.789      1.40e- 3      9.32
15 mu_1       0.6      1.07     0.978      2.07e- 2      5.01
16 mu_1       0.7      1.08     1.03       4.37e- 3      3.20
17 mu_1       0.8      1.29     0.725      2.92e- 5      8.07
18 mu_1       0.9      1.51     0.113      3.21e- 9     15.6 
19 mu_0       0.1      0.451    0.0000105  0            24.2 
20 mu_0       0.2      1.13     0.00108    0            23.9 
21 mu_0       0.3      1.75     0.0187     0            46.1 
22 mu_0       0.4      1.83     0.108      0            41.6 
23 mu_0       0.5      1.51     0.342      0            20.5 
24 mu_0       0.6      1.17     0.782      0             8.06
25 mu_0       0.7      1.00     0.930      0             3.16
26 mu_0       0.8      1.08     1.10       0             4.04
27 mu_0       0.9      1.47     0.379      0            13.3 
[1] "Total run time was 52.385 seconds"
