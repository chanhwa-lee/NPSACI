
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1214"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  1 15  6  9  5  4  9  6  5  5  8  7  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01811 0.30518 0.57709 0.94706 5.00000 
[1] "event indicator table: "

  0   1 
710 504 
[1] "treatment indicator table: "

  0   1 
455 759 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 44.23 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 1.06  0.728
 2 mu         0.1   0.2 1.35  0.912
 3 mu         0.1   0.3 1.46  1.02 
 4 mu         0.1   0.4 1.55  1.10 
 5 mu         0.1   0.5 1.65  1.14 
 6 mu         0.2   0.1 0.904 0.685
 7 mu         0.2   0.2 1.16  0.863
 8 mu         0.2   0.3 1.27  0.981
 9 mu         0.2   0.4 1.36  1.05 
10 mu         0.2   0.5 1.45  1.10 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.09        0.0202  3.43e-10    203.  
 2 mu         0.2      2.91        0.199   6.09e- 7    219.  
 3 mu         0.3      1.58        0.546   4.51e- 5     76.5 
 4 mu         0.4      1.07        0.851   8.96e- 4     13.3 
 5 mu         0.5      1.00        0.955   8.55e- 3      2.36
 6 mu         0.6      0.984       0.972   5.04e- 2      2.09
 7 mu         0.7      0.940       0.934   1.13e- 1      2.53
 8 mu         0.8      0.936       0.841   1.24e- 2      8.00
 9 mu         0.9      1.28        0.578   1.74e- 4     45.2 
10 mu_1       0.1      3.49        0.0751  2.92e- 9    305.  
11 mu_1       0.2      2.37        0.407   2.62e- 6    165.  
12 mu_1       0.3      1.28        0.751   1.30e- 4     38.3 
13 mu_1       0.4      1.03        0.941   1.96e- 3      5.11
14 mu_1       0.5      1.01        0.993   1.51e- 2      1.97
15 mu_1       0.6      0.976       0.960   7.49e- 2      2.25
16 mu_1       0.7      0.928       0.915   6.91e- 2      2.54
17 mu_1       0.8      0.941       0.821   6.87e- 3      9.89
18 mu_1       0.9      1.33        0.531   8.76e- 5     50.2 
19 mu_0       0.1      3.05        0.0141  5.63e-11    192.  
20 mu_0       0.2      3.05        0.147   1.08e- 7    233.  
21 mu_0       0.3      1.71        0.460   8.65e- 6     92.9 
22 mu_0       0.4      1.09        0.797   1.89e- 4     18.8 
23 mu_0       0.5      0.996       0.988   2.02e- 3      2.98
24 mu_0       0.6      0.996       0.969   1.36e- 2      1.87
25 mu_0       0.7      0.970       0.955   6.70e- 2      2.50
26 mu_0       0.8      0.915       0.881   3.45e- 2      2.56
27 mu_0       0.9      0.861       0.839   9.47e- 4      3.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    1054.      0.000168   2.22e-16   87352. 
 2 mu         0.2     257.      0.0131     1.03e-10   18638. 
 3 mu         0.3      40.8     0.109      2.01e- 7    2211. 
 4 mu         0.4       7.07    0.467      4.06e- 5     247. 
 5 mu         0.5       3.05    0.986      2.35e- 3      43.6
 6 mu         0.6       3.22    1.18       2.04e- 2      63.7
 7 mu         0.7       6.65    1.10       5.26e- 4     310. 
 8 mu         0.8      14.0     0.709      2.71e- 7     894. 
 9 mu         0.9      16.6     0.109      5.82e-13    1162. 
10 mu_1       0.1     558.      0.00104    2.11e-15   43676. 
11 mu_1       0.2      72.1     0.0393     4.91e-10    4660. 
12 mu_1       0.3      10.4     0.244      6.35e- 7     369. 
13 mu_1       0.4       3.60    0.739      9.65e- 5      59.9
14 mu_1       0.5       2.67    1.16       4.47e- 3      37.3
15 mu_1       0.6       3.52    1.12       8.89e- 3      92.9
16 mu_1       0.7       7.66    1.09       3.76e- 5     388. 
17 mu_1       0.8      14.9     0.579      1.70e- 8     977. 
18 mu_1       0.9      16.2     0.0733     3.23e-14    1130. 
19 mu_0       0.1    1109.      0.0000597  0          92205. 
20 mu_0       0.2     303.      0.00577    0          22133. 
21 mu_0       0.3      53.8     0.0556     0           3001. 
22 mu_0       0.4       9.38    0.262      0            384. 
23 mu_0       0.5       3.43    0.772      0             54.4
24 mu_0       0.6       2.76    1.07       0             38.5
25 mu_0       0.7       4.27    1.17       0            129. 
26 mu_0       0.8      10.1     0.999      0            558. 
27 mu_0       0.9      20.1     0.345      0           1452. 
[1] "Total run time was 47.403 seconds"
