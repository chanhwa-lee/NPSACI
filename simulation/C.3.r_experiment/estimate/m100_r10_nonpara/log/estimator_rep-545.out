
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  6  5 10 10  4  3  4  9  6  5  5  6  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03797 0.39623 0.63487 1.00000 5.25143 
[1] "event indicator table: "

  0   1 
735 517 
[1] "treatment indicator table: "

  0   1 
416 836 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 54.122 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.246 0.0972
 2 mu         0.1   0.2 0.404 0.155 
 3 mu         0.1   0.3 0.383 0.147 
 4 mu         0.1   0.4 0.379 0.143 
 5 mu         0.1   0.5 0.451 0.144 
 6 mu         0.2   0.1 0.290 0.0853
 7 mu         0.2   0.2 0.423 0.123 
 8 mu         0.2   0.3 0.418 0.125 
 9 mu         0.2   0.4 0.439 0.127 
10 mu         0.2   0.5 0.522 0.134 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.527       0.0179  2.01e-10      8.23
 2 mu         0.2      0.787       0.204   1.05e- 6     15.9 
 3 mu         0.3      0.865       0.499   1.23e- 4      9.79
 4 mu         0.4      0.928       0.784   2.91e- 3      3.21
 5 mu         0.5      0.988       0.951   2.75e- 2      2.96
 6 mu         0.6      1.01        0.987   1.38e- 1      3.08
 7 mu         0.7      0.991       0.981   4.12e- 1      2.04
 8 mu         0.8      0.947       0.905   3.16e- 1      1.93
 9 mu         0.9      0.906       0.722   4.27e- 2      8.73
10 mu_1       0.1      0.685       0.0684  1.54e- 9     13.1 
11 mu_1       0.2      0.858       0.435   4.01e- 6     16.0 
12 mu_1       0.3      0.906       0.704   3.14e- 4      6.76
13 mu_1       0.4      0.969       0.926   5.62e- 3      2.94
14 mu_1       0.5      1.01        1.01    4.28e- 2      3.25
15 mu_1       0.6      1.01        0.999   1.82e- 1      2.92
16 mu_1       0.7      0.982       0.966   4.11e- 1      1.79
17 mu_1       0.8      0.936       0.913   2.42e- 1      2.23
18 mu_1       0.9      0.903       0.711   3.44e- 2      9.62
19 mu_0       0.1      0.510       0.0122  5.23e-11      8.37
20 mu_0       0.2      0.770       0.137   3.05e- 7     15.9 
21 mu_0       0.3      0.847       0.381   4.05e- 5     11.1 
22 mu_0       0.4      0.900       0.677   1.10e- 3      4.00
23 mu_0       0.5      0.967       0.895   1.21e- 2      2.66
24 mu_0       0.6      1.01        0.980   7.20e- 2      3.33
25 mu_0       0.7      1.01        0.997   2.64e- 1      2.60
26 mu_0       0.8      0.991       0.952   4.97e- 1      1.87
27 mu_0       0.9      0.940       0.872   1.17e- 1      2.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.802   0.0000180   4.08e-16     51.3 
 2 mu         0.2      1.65    0.00303     9.51e-11     43.4 
 3 mu         0.3      2.62    0.0441      1.23e- 7     86.8 
 4 mu         0.4      2.75    0.226       1.87e- 5     78.3 
 5 mu         0.5      2.04    0.632       8.65e- 4     38.6 
 6 mu         0.6      1.38    0.908       1.84e- 2     10.3 
 7 mu         0.7      1.25    1.10        6.32e- 3      5.91
 8 mu         0.8      1.55    0.987       5.54e- 5     25.4 
 9 mu         0.9      2.09    0.240       1.08e- 8     74.4 
10 mu_1       0.1      1.37    0.000115    3.87e-15     57.0 
11 mu_1       0.2      2.18    0.0101      4.50e-10     72.4 
12 mu_1       0.3      2.86    0.104       3.88e- 7     96.4 
13 mu_1       0.4      2.57    0.420       4.43e- 5     65.2 
14 mu_1       0.5      1.78    0.815       1.64e- 3     25.7 
15 mu_1       0.6      1.29    1.07        2.91e- 2      6.81
16 mu_1       0.7      1.28    1.09        2.12e- 3      8.44
17 mu_1       0.8      1.62    0.896       1.63e- 5     29.8 
18 mu_1       0.9      2.14    0.172       2.83e- 9     77.5 
19 mu_0       0.1      0.739   0.00000636  0            50.6 
20 mu_0       0.2      1.52    0.00114     0            44.4 
21 mu_0       0.3      2.51    0.0196      0            82.6 
22 mu_0       0.4      2.88    0.112       0            87.0 
23 mu_0       0.5      2.29    0.376       0            51.4 
24 mu_0       0.6      1.51    0.779       0            17.2 
25 mu_0       0.7      1.17    1.14        0             6.47
26 mu_0       0.8      1.24    1.08        0             7.95
27 mu_0       0.9      1.67    0.436       0            46.5 
[1] "Total run time was 57.915 seconds"
