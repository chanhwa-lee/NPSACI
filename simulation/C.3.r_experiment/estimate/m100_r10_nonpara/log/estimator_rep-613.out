
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1257"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  5  8  6  2  9  8  8  9  4  1  7  8  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02734 0.30753 0.59919 1.00000 4.01174 
[1] "event indicator table: "

  0   1 
721 536 
[1] "treatment indicator table: "

  0   1 
485 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.66 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.310 0.129 
 2 mu         0.1   0.2 0.351 0.167 
 3 mu         0.1   0.3 0.354 0.194 
 4 mu         0.1   0.4 0.426 0.170 
 5 mu         0.1   0.5 0.478 0.194 
 6 mu         0.2   0.1 0.298 0.0942
 7 mu         0.2   0.2 0.346 0.129 
 8 mu         0.2   0.3 0.352 0.157 
 9 mu         0.2   0.4 0.428 0.124 
10 mu         0.2   0.5 0.490 0.146 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.750       0.0480 0.000000672     11.9 
 2 mu         0.2      0.912       0.386  0.000509         5.48
 3 mu         0.3      1.02        0.809  0.0144           4.36
 4 mu         0.4      1.03        1.01   0.0954           3.37
 5 mu         0.5      1.00        1.01   0.320            1.99
 6 mu         0.6      0.971       0.927  0.625            1.85
 7 mu         0.7      0.964       1.01   0.284            1.92
 8 mu         0.8      0.965       0.985  0.0613           2.24
 9 mu         0.9      0.935       0.705  0.00284          6.20
10 mu_1       0.1      0.711       0.196  0.00000371       5.36
11 mu_1       0.2      0.953       0.640  0.00142          5.75
12 mu_1       0.3      1.02        0.939  0.0294           4.43
13 mu_1       0.4      1.02        0.982  0.153            2.78
14 mu_1       0.5      0.984       0.962  0.411            2.10
15 mu_1       0.6      0.963       0.951  0.629            1.79
16 mu_1       0.7      0.964       1.02   0.226            1.89
17 mu_1       0.8      0.965       0.933  0.0478           2.54
18 mu_1       0.9      0.934       0.660  0.00207          6.81
19 mu_0       0.1      0.754       0.0340 0.000000335     13.1 
20 mu_0       0.2      0.902       0.299  0.000281         6.30
21 mu_0       0.3      1.01        0.738  0.00714          4.75
22 mu_0       0.4      1.04        1.02   0.0544           3.75
23 mu_0       0.5      1.02        1.03   0.212            2.04
24 mu_0       0.6      0.982       0.982  0.512            2.09
25 mu_0       0.7      0.962       0.954  0.418            1.97
26 mu_0       0.8      0.963       0.963  0.115            1.81
27 mu_0       0.9      0.941       0.919  0.00978          3.13
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.70     0.000155   6.14e-15     61.6 
 2 mu         0.2      2.45     0.0142     1.27e- 9     75.9 
 3 mu         0.3      2.06     0.105      1.44e- 6     44.9 
 4 mu         0.4      1.46     0.424      1.87e- 4     17.1 
 5 mu         0.5      1.09     0.752      6.42e- 3      6.37
 6 mu         0.6      0.971    0.785      6.59e- 2      4.21
 7 mu         0.7      1.02     0.865      1.43e- 2      4.08
 8 mu         0.8      1.21     0.425      3.25e- 4      8.82
 9 mu         0.9      1.29     0.0753     1.01e- 7     12.9 
10 mu_1       0.1      2.99     0.000931   5.52e-14    103.  
11 mu_1       0.2      2.44     0.0428     5.72e- 9     63.2 
12 mu_1       0.3      1.66     0.242      4.32e- 6     24.9 
13 mu_1       0.4      1.17     0.674      4.22e- 4      9.35
14 mu_1       0.5      0.980    0.806      1.20e- 2      4.25
15 mu_1       0.6      0.962    0.783      5.20e- 2      4.54
16 mu_1       0.7      1.05     0.827      3.42e- 3      3.86
17 mu_1       0.8      1.25     0.339      6.77e- 5      9.73
18 mu_1       0.9      1.28     0.0532     3.92e- 8     12.7 
19 mu_0       0.1      1.55     0.0000680  0            57.0 
20 mu_0       0.2      2.45     0.00524    0            79.0 
21 mu_0       0.3      2.24     0.0430     0            53.5 
22 mu_0       0.4      1.65     0.257      0            23.7 
23 mu_0       0.5      1.20     0.623      0             8.49
24 mu_0       0.6      0.985    0.789      0             3.71
25 mu_0       0.7      0.949    0.788      0             4.80
26 mu_0       0.8      1.07     0.652      0             5.19
27 mu_0       0.9      1.37     0.186      0            15.2 
[1] "Total run time was 60.784 seconds"
