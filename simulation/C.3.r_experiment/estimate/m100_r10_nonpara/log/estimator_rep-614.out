
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1257"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  4  5  9 10 10  6  4  2  4  9  7  6  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0349  0.3248  0.6169  1.0000  4.7425 
[1] "event indicator table: "

  0   1 
737 520 
[1] "treatment indicator table: "

  0   1 
481 776 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.356 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.117 0.110 
 2 mu         0.1   0.2 0.230 0.150 
 3 mu         0.1   0.3 0.240 0.161 
 4 mu         0.1   0.4 0.337 0.121 
 5 mu         0.1   0.5 0.315 0.131 
 6 mu         0.2   0.1 0.195 0.0950
 7 mu         0.2   0.2 0.282 0.128 
 8 mu         0.2   0.3 0.307 0.131 
 9 mu         0.2   0.4 0.388 0.126 
10 mu         0.2   0.5 0.390 0.140 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.797       0.0759 0.000000432      6.59
 2 mu         0.2      1.01        0.513  0.000252         5.30
 3 mu         0.3      1.11        0.840  0.00784          8.06
 4 mu         0.4      1.07        0.953  0.0699           5.39
 5 mu         0.5      1.00        1.00   0.265            2.41
 6 mu         0.6      0.999       0.980  0.484            1.62
 7 mu         0.7      1.01        0.985  0.387            1.69
 8 mu         0.8      0.994       0.992  0.207            2.28
 9 mu         0.9      1.03        0.794  0.0273           4.37
10 mu_1       0.1      0.931       0.232  0.00000260       7.92
11 mu_1       0.2      1.08        0.773  0.000774         7.74
12 mu_1       0.3      1.10        0.949  0.0165           7.90
13 mu_1       0.4      1.03        0.985  0.113            4.01
14 mu_1       0.5      0.986       1.01   0.314            2.00
15 mu_1       0.6      1.00        0.976  0.559            1.71
16 mu_1       0.7      1.01        0.998  0.333            1.70
17 mu_1       0.8      0.993       0.974  0.164            2.39
18 mu_1       0.9      1.04        0.759  0.0206           4.65
19 mu_0       0.1      0.782       0.0573 0.000000192      6.92
20 mu_0       0.2      0.990       0.413  0.000121         5.49
21 mu_0       0.3      1.12        0.797  0.00412          8.12
22 mu_0       0.4      1.09        0.927  0.0409           6.31
23 mu_0       0.5      1.02        0.973  0.196            3.03
24 mu_0       0.6      0.997       1.01   0.358            1.95
25 mu_0       0.7      1.01        1.00   0.445            1.79
26 mu_0       0.8      0.998       0.994  0.252            1.81
27 mu_0       0.9      0.922       0.930  0.0311           2.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.75    0.0000985  1.19e-13    188.  
 2 mu         0.2       4.98    0.0108     3.89e- 9    267.  
 3 mu         0.3       3.81    0.0956     1.70e- 6    159.  
 4 mu         0.4       2.46    0.433      1.27e- 4     50.8 
 5 mu         0.5       1.64    0.992      3.62e- 3     17.3 
 6 mu         0.6       1.26    1.11       5.58e- 2      5.31
 7 mu         0.7       1.12    1.02       3.32e- 2      2.72
 8 mu         0.8       1.08    0.567      2.55e- 4      6.91
 9 mu         0.9       1.25    0.0772     4.43e- 8     24.4 
10 mu_1       0.1       5.63    0.000596   1.19e-12    290.  
11 mu_1       0.2       4.66    0.0311     1.94e- 8    250.  
12 mu_1       0.3       3.02    0.212      5.67e- 6     99.3 
13 mu_1       0.4       1.96    0.676      3.18e- 4     29.8 
14 mu_1       0.5       1.42    1.07       7.24e- 3     12.8 
15 mu_1       0.6       1.19    1.18       9.29e- 2      4.92
16 mu_1       0.7       1.10    0.968      8.90e- 3      3.13
17 mu_1       0.8       1.10    0.457      5.97e- 5      8.10
18 mu_1       0.9       1.27    0.0531     9.23e- 9     27.1 
19 mu_0       0.1       3.54    0.0000356  0           188.  
20 mu_0       0.2       5.06    0.00515    0           271.  
21 mu_0       0.3       4.15    0.0486     0           184.  
22 mu_0       0.4       2.80    0.294      0            68.8 
23 mu_0       0.5       1.85    0.787      0            21.9 
24 mu_0       0.6       1.36    1.10       0             6.93
25 mu_0       0.7       1.14    1.10       0             3.68
26 mu_0       0.8       1.02    0.853      0             3.60
27 mu_0       0.9       1.02    0.210      0            12.6 
[1] "Total run time was 62.729 seconds"
