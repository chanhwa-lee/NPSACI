
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1283"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  9  9  5  6  2  5  7  4  9  9 11  5  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02661 0.33193 0.60502 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
810 473 
[1] "treatment indicator table: "

  0   1 
445 838 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 700
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 583
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 86.933 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.538 0.384 
 2 mu         0.1   0.2 0.664 0.487 
 3 mu         0.1   0.3 0.843 0.579 
 4 mu         0.1   0.4 0.888 0.618 
 5 mu         0.1   0.5 0.969 0.631 
 6 mu         0.2   0.1 0.350 0.0943
 7 mu         0.2   0.2 0.426 0.124 
 8 mu         0.2   0.3 0.556 0.180 
 9 mu         0.2   0.4 0.585 0.182 
10 mu         0.2   0.5 0.646 0.171 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.36        0.0510 0.000000569     84.9 
 2 mu         0.2      0.998       0.495  0.000321        15.8 
 3 mu         0.3      1.02        0.921  0.00952          5.66
 4 mu         0.4      0.978       0.962  0.0802           4.11
 5 mu         0.5      0.955       0.953  0.251            1.90
 6 mu         0.6      0.984       0.988  0.428            1.47
 7 mu         0.7      1.01        1.01   0.632            1.57
 8 mu         0.8      1.01        0.976  0.427            1.90
 9 mu         0.9      1.02        0.928  0.0863           3.04
10 mu_1       0.1      0.799       0.175  0.00000359       7.83
11 mu_1       0.2      1.01        0.789  0.00102          5.53
12 mu_1       0.3      1.02        0.973  0.0205           5.61
13 mu_1       0.4      0.968       0.946  0.132            3.21
14 mu_1       0.5      0.964       1.01   0.323            1.59
15 mu_1       0.6      0.999       1.01   0.462            1.43
16 mu_1       0.7      1.02        1.02   0.574            1.62
17 mu_1       0.8      1.02        0.956  0.340            2.11
18 mu_1       0.9      1.03        0.889  0.0646           3.19
19 mu_0       0.1      1.42        0.0348 0.000000234     94.0 
20 mu_0       0.2      0.996       0.414  0.000145        19.0 
21 mu_0       0.3      1.02        0.870  0.00482          5.68
22 mu_0       0.4      0.985       0.904  0.0373           4.72
23 mu_0       0.5      0.945       0.946  0.120            2.42
24 mu_0       0.6      0.962       0.991  0.280            1.57
25 mu_0       0.7      0.997       1.03   0.446            1.46
26 mu_0       0.8      1.00        1.02   0.391            1.70
27 mu_0       0.9      0.990       0.909  0.253            2.15
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.827   0.0000134   1.01e-15     31.5 
 2 mu         0.2      1.53    0.00217     1.33e-10     30.6 
 3 mu         0.3      1.47    0.0322      1.31e- 7     23.3 
 4 mu         0.4      1.16    0.207       1.74e- 5     10.9 
 5 mu         0.5      0.987   0.673       7.72e- 4      4.03
 6 mu         0.6      0.997   0.978       1.71e- 2      3.49
 7 mu         0.7      1.08    1.02        1.43e- 3      2.90
 8 mu         0.8      1.18    0.900       7.29e- 6      3.42
 9 mu         0.9      1.36    0.152       6.34e-10     16.9 
10 mu_1       0.1      1.56    0.000111    1.01e-14     45.0 
11 mu_1       0.2      1.70    0.00850     6.63e-10     33.2 
12 mu_1       0.3      1.35    0.0752      4.35e- 7     17.3 
13 mu_1       0.4      1.05    0.358       4.34e- 5      8.64
14 mu_1       0.5      0.964   0.822       1.54e- 3      4.27
15 mu_1       0.6      1.02    0.950       1.48e- 2      3.08
16 mu_1       0.7      1.12    1.09        3.60e- 4      3.16
17 mu_1       0.8      1.22    0.753       1.61e- 6      4.27
18 mu_1       0.9      1.39    0.115       1.24e-10     18.7 
19 mu_0       0.1      0.745   0.00000353  0            30.0 
20 mu_0       0.2      1.49    0.000708    0            32.8 
21 mu_0       0.3      1.52    0.0148      0            25.9 
22 mu_0       0.4      1.23    0.106       0            12.5 
23 mu_0       0.5      1.01    0.479       0             5.34
24 mu_0       0.6      0.967   0.799       0             4.11
25 mu_0       0.7      1.00    0.995       0             2.93
26 mu_0       0.8      1.03    0.946       0             3.82
27 mu_0       0.9      1.02    0.228       0             5.48
[1] "Total run time was 91.534 seconds"
