
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  3 11  5  6 11  5  7  3  8  8  5  9  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03771 0.34032 0.57724 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
760 524 
[1] "treatment indicator table: "

  0   1 
470 814 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 49.344 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.304 0.0821
 2 mu         0.1   0.2 0.372 0.0846
 3 mu         0.1   0.3 0.367 0.0793
 4 mu         0.1   0.4 0.412 0.0896
 5 mu         0.1   0.5 0.432 0.0874
 6 mu         0.2   0.1 0.407 0.0659
 7 mu         0.2   0.2 0.471 0.0691
 8 mu         0.2   0.3 0.500 0.0711
 9 mu         0.2   0.4 0.549 0.0791
10 mu         0.2   0.5 0.582 0.0807
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.576       0.0835 0.00000166       6.16
 2 mu         0.2      0.946       0.462  0.00109          6.70
 3 mu         0.3      1.03        0.833  0.0183           4.57
 4 mu         0.4      1.00        0.945  0.114            2.72
 5 mu         0.5      0.995       1.02   0.346            2.13
 6 mu         0.6      1.00        0.982  0.579            1.69
 7 mu         0.7      1.01        0.988  0.362            1.57
 8 mu         0.8      0.965       0.938  0.150            1.78
 9 mu         0.9      0.886       0.650  0.0101           4.61
10 mu_1       0.1      0.923       0.269  0.00000917       8.35
11 mu_1       0.2      1.08        0.739  0.00344          5.98
12 mu_1       0.3      1.04        1.02   0.0402           3.41
13 mu_1       0.4      1.00        1.02   0.193            2.14
14 mu_1       0.5      1.00        0.995  0.400            2.09
15 mu_1       0.6      1.01        0.993  0.573            1.57
16 mu_1       0.7      1.00        1.01   0.327            1.64
17 mu_1       0.8      0.953       0.900  0.130            1.94
18 mu_1       0.9      0.881       0.616  0.00750          5.01
19 mu_0       0.1      0.537       0.0639 0.000000826      6.47
20 mu_0       0.2      0.911       0.362  0.000485         6.88
21 mu_0       0.3      1.02        0.780  0.00891          5.07
22 mu_0       0.4      1.00        0.996  0.0614           3.10
23 mu_0       0.5      0.991       0.967  0.241            2.17
24 mu_0       0.6      1.00        0.991  0.481            1.87
25 mu_0       0.7      1.02        1.02   0.446            1.55
26 mu_0       0.8      1.01        0.997  0.231            1.84
27 mu_0       0.9      0.936       0.912  0.0336           2.14
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.87     0.0000516  3.90e-15     85.8 
 2 mu         0.2      2.05     0.00934    4.54e-10     67.4 
 3 mu         0.3      1.67     0.0941     3.91e- 7     30.5 
 4 mu         0.4      1.33     0.326      4.46e- 5     10.8 
 5 mu         0.5      1.09     0.810      1.65e- 3      4.51
 6 mu         0.6      1.01     0.845      3.18e- 3      3.45
 7 mu         0.7      1.13     1.24       3.26e- 5      3.33
 8 mu         0.8      1.46     0.896      4.32e- 8      8.51
 9 mu         0.9      1.54     0.177      4.17e-13     14.9 
10 mu_1       0.1      2.67     0.000301   3.68e-14     98.9 
11 mu_1       0.2      1.96     0.0276     2.14e- 9     48.1 
12 mu_1       0.3      1.49     0.210      1.23e- 6     17.6 
13 mu_1       0.4      1.20     0.554      1.05e- 4      7.51
14 mu_1       0.5      1.04     0.944      3.12e- 3      4.01
15 mu_1       0.6      1.02     0.978      5.58e- 4      3.16
16 mu_1       0.7      1.19     1.16       4.90e- 6      4.29
17 mu_1       0.8      1.50     0.730      5.68e- 9      9.38
18 mu_1       0.9      1.52     0.131      4.88e-14     16.6 
19 mu_0       0.1      1.79     0.0000230  0            85.3 
20 mu_0       0.2      2.07     0.00478    0            72.2 
21 mu_0       0.3      1.74     0.0384     0            37.4 
22 mu_0       0.4      1.41     0.153      0            13.0 
23 mu_0       0.5      1.14     0.538      0             5.20
24 mu_0       0.6      0.985    0.897      0             3.88
25 mu_0       0.7      0.998    0.997      0             2.81
26 mu_0       0.8      1.27     1.20       0             6.05
27 mu_0       0.9      1.70     0.457      0            14.6 
[1] "Total run time was 52.63 seconds"
