
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1208"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  7  6  4  8  8  9  7  6  3 10  7  5  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05331 0.38988 0.64695 1.00000 5.94583 
[1] "event indicator table: "

  0   1 
736 472 
[1] "treatment indicator table: "

  0   1 
425 783 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 564
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 45.536 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.374 0.134 
 2 mu         0.1   0.2 0.369 0.112 
 3 mu         0.1   0.3 0.373 0.104 
 4 mu         0.1   0.4 0.385 0.101 
 5 mu         0.1   0.5 0.402 0.102 
 6 mu         0.2   0.1 0.370 0.113 
 7 mu         0.2   0.2 0.380 0.0925
 8 mu         0.2   0.3 0.395 0.0859
 9 mu         0.2   0.4 0.424 0.0834
10 mu         0.2   0.5 0.452 0.0844
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.574       0.0854 0.000000142       6.71
 2 mu         0.2      0.776       0.473  0.000231          8.85
 3 mu         0.3      0.936       0.805  0.0108            6.03
 4 mu         0.4      1.02        0.927  0.109             3.60
 5 mu         0.5      1.02        0.970  0.394             2.98
 6 mu         0.6      0.995       1.01   0.472             1.57
 7 mu         0.7      0.987       0.964  0.546             1.72
 8 mu         0.8      1.02        0.974  0.250             5.19
 9 mu         0.9      1.16        0.776  0.0205           22.8 
10 mu_1       0.1      0.712       0.254  0.000000851       9.09
11 mu_1       0.2      0.886       0.749  0.000697          8.85
12 mu_1       0.3      0.999       0.915  0.0219            4.05
13 mu_1       0.4      1.03        0.967  0.168             3.75
14 mu_1       0.5      1.01        0.955  0.470             2.57
15 mu_1       0.6      0.988       0.991  0.425             1.49
16 mu_1       0.7      0.986       0.952  0.484             1.80
17 mu_1       0.8      1.03        0.958  0.202             6.37
18 mu_1       0.9      1.18        0.759  0.0153           25.3 
19 mu_0       0.1      0.559       0.0640 0.0000000629      7.06
20 mu_0       0.2      0.748       0.380  0.000115          8.84
21 mu_0       0.3      0.909       0.734  0.00607           6.88
22 mu_0       0.4      1.01        0.915  0.0701            3.50
23 mu_0       0.5      1.03        0.956  0.280             3.39
24 mu_0       0.6      1.01        0.967  0.526             1.97
25 mu_0       0.7      0.991       1.00   0.406             1.61
26 mu_0       0.8      0.989       0.939  0.441             1.85
27 mu_0       0.9      0.987       0.983  0.0670            4.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     803.      0.0000482  3.60e-14  78411.  
 2 mu         0.2     643.      0.00581    2.10e- 9  60298.  
 3 mu         0.3     233.      0.0771     1.20e- 6  20922.  
 4 mu         0.4      50.7     0.341      1.03e- 4   4298.  
 5 mu         0.5       7.37    0.780      3.05e- 3    523.  
 6 mu         0.6       1.56    1.11       1.94e- 2     33.1 
 7 mu         0.7       1.24    1.22       9.58e- 4      6.02
 8 mu         0.8       1.63    0.910      1.27e- 5     17.3 
 9 mu         0.9       2.57    0.173      3.73e- 9     72.2 
10 mu_1       0.1    1017.      0.000292   3.39e-13  98014.  
11 mu_1       0.2     416.      0.0198     9.87e- 9  37686.  
12 mu_1       0.3     103.      0.160      3.78e- 6   8717.  
13 mu_1       0.4      17.8     0.567      2.42e- 4   1343.  
14 mu_1       0.5       2.87    0.969      5.74e- 3    131.  
15 mu_1       0.6       1.27    1.25       2.70e- 3      6.90
16 mu_1       0.7       1.29    1.26       1.14e- 4      7.31
17 mu_1       0.8       1.73    0.795      1.32e- 6     19.5 
18 mu_1       0.9       2.67    0.122      6.44e-10     80.3 
19 mu_0       0.1     779.      0.0000221  0         76233.  
20 mu_0       0.2     699.      0.00182    0         65951.  
21 mu_0       0.3     289.      0.0341     0         26152.  
22 mu_0       0.4      72.6     0.161      0          6267.  
23 mu_0       0.5      11.9     0.531      0           915.  
24 mu_0       0.6       1.99    0.967      0            72.5 
25 mu_0       0.7       1.14    1.14       0             3.02
26 mu_0       0.8       1.25    1.18       0            13.0 
27 mu_0       0.9       1.65    0.364      0            24.0 
[1] "Total run time was 49.018 seconds"
