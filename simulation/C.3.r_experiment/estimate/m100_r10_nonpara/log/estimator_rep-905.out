
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1216"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  8  4  9 11  6  9 11  3  5  7  4  4  7  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01569 0.30460 0.59767 0.99793 6.00000 
[1] "event indicator table: "

  0   1 
704 512 
[1] "treatment indicator table: "

  0   1 
483 733 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.823 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.426 0.108 
 2 mu         0.1   0.2 0.440 0.109 
 3 mu         0.1   0.3 0.527 0.129 
 4 mu         0.1   0.4 0.566 0.129 
 5 mu         0.1   0.5 0.567 0.131 
 6 mu         0.2   0.1 0.421 0.0740
 7 mu         0.2   0.2 0.463 0.0774
 8 mu         0.2   0.3 0.539 0.0835
 9 mu         0.2   0.4 0.587 0.0849
10 mu         0.2   0.5 0.606 0.0872
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.830        0.158 0.0000131      10.7 
 2 mu         0.2      0.977        0.647 0.00497         6.78
 3 mu         0.3      1.04         1.01  0.0943          3.72
 4 mu         0.4      1.04         1.04  0.325           2.50
 5 mu         0.5      1.00         1.03  0.452           1.64
 6 mu         0.6      0.987        0.972 0.710           1.36
 7 mu         0.7      0.989        1.01  0.323           1.38
 8 mu         0.8      0.968        0.997 0.120           2.44
 9 mu         0.9      0.898        0.756 0.0148          3.51
10 mu_1       0.1      0.986        0.449 0.0000666       9.95
11 mu_1       0.2      1.01         0.900 0.0128          4.13
12 mu_1       0.3      1.04         1.01  0.165           2.90
13 mu_1       0.4      1.02         1.02  0.345           2.27
14 mu_1       0.5      0.993        0.996 0.542           1.43
15 mu_1       0.6      0.988        0.987 0.597           1.35
16 mu_1       0.7      0.989        0.980 0.274           1.58
17 mu_1       0.8      0.962        0.992 0.104           2.68
18 mu_1       0.9      0.888        0.706 0.0119          3.53
19 mu_0       0.1      0.813        0.127 0.00000718     10.8 
20 mu_0       0.2      0.968        0.576 0.00300         7.51
21 mu_0       0.3      1.04         0.934 0.0638          4.23
22 mu_0       0.4      1.05         1.06  0.247           2.99
23 mu_0       0.5      1.01         1.01  0.361           1.93
24 mu_0       0.6      0.985        0.985 0.541           1.41
25 mu_0       0.7      0.988        0.999 0.439           1.37
26 mu_0       0.8      0.995        1.01  0.185           1.68
27 mu_0       0.9      0.989        0.966 0.0415          3.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.18      0.000229  9.37e-16     39.8 
 2 mu         0.2      1.40      0.0135    2.18e-10     24.5 
 3 mu         0.3      1.24      0.114     2.82e- 7     11.4 
 4 mu         0.4      1.09      0.465     4.08e- 5      4.70
 5 mu         0.5      1.02      0.890     1.45e- 3      2.81
 6 mu         0.6      0.958     1.03      2.36e- 2      2.52
 7 mu         0.7      0.945     0.974     4.38e- 4      2.60
 8 mu         0.8      1.08      0.383     1.14e- 6      6.23
 9 mu         0.9      1.46      0.0520    2.78e-11     17.6 
10 mu_1       0.1      1.66      0.00122   8.88e-15     36.2 
11 mu_1       0.2      1.38      0.0451    1.03e- 9     19.1 
12 mu_1       0.3      1.14      0.237     8.92e- 7      7.60
13 mu_1       0.4      1.02      0.676     1.02e- 4      3.44
14 mu_1       0.5      0.961     1.02      2.90e- 3      2.35
15 mu_1       0.6      0.926     1.04      7.20e- 3      2.52
16 mu_1       0.7      0.945     0.835     1.25e- 4      2.85
17 mu_1       0.8      1.11      0.243     2.84e- 7      7.00
18 mu_1       0.9      1.50      0.0301    6.17e-12     19.6 
19 mu_0       0.1      1.13      0.000102  0            40.2 
20 mu_0       0.2      1.40      0.00563   0            27.9 
21 mu_0       0.3      1.28      0.0634    0            13.0 
22 mu_0       0.4      1.15      0.299     0             6.02
23 mu_0       0.5      1.07      0.761     0             3.63
24 mu_0       0.6      1.01      1.07      0             2.52
25 mu_0       0.7      0.947     0.940     0             2.71
26 mu_0       0.8      0.958     0.651     0             3.50
27 mu_0       0.9      1.11      0.101     0            13.0 
[1] "Total run time was 63.779 seconds"
