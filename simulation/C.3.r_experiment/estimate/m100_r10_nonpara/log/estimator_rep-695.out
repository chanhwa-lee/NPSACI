
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1273"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  2 10  7  6  4  6 12  6  7  9  7  6  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03129 0.33849 0.59288 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
755 518 
[1] "treatment indicator table: "

  0   1 
478 795 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 47.855 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.202 0.0563
 2 mu         0.1   0.2 0.202 0.0655
 3 mu         0.1   0.3 0.181 0.0906
 4 mu         0.1   0.4 0.199 0.111 
 5 mu         0.1   0.5 0.176 0.138 
 6 mu         0.2   0.1 0.266 0.0485
 7 mu         0.2   0.2 0.289 0.0540
 8 mu         0.2   0.3 0.297 0.0764
 9 mu         0.2   0.4 0.327 0.101 
10 mu         0.2   0.5 0.320 0.126 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.466       0.0673 0.0000000371      9.02
 2 mu         0.2      0.728       0.384  0.0000679         6.89
 3 mu         0.3      0.913       0.681  0.00361           7.65
 4 mu         0.4      0.999       0.893  0.0300            5.58
 5 mu         0.5      1.03        0.947  0.112             3.86
 6 mu         0.6      1.03        0.992  0.306             2.78
 7 mu         0.7      0.999       1.02   0.0689            2.19
 8 mu         0.8      0.965       0.941  0.00395           5.15
 9 mu         0.9      0.984       0.725  0.0000117        15.4 
10 mu_1       0.1      0.722       0.220  0.000000235       8.67
11 mu_1       0.2      0.906       0.651  0.000215          8.70
12 mu_1       0.3      0.991       0.836  0.00768           7.43
13 mu_1       0.4      1.02        0.946  0.0590            4.31
14 mu_1       0.5      1.04        1.00   0.184             3.83
15 mu_1       0.6      1.03        1.01   0.258             2.43
16 mu_1       0.7      0.991       1.02   0.0473            2.70
17 mu_1       0.8      0.964       0.895  0.00243           5.88
18 mu_1       0.9      0.989       0.702  0.00000645       16.1 
19 mu_0       0.1      0.438       0.0499 0.0000000152      9.52
20 mu_0       0.2      0.684       0.318  0.0000311         6.44
21 mu_0       0.3      0.879       0.618  0.00144           7.74
22 mu_0       0.4      0.984       0.849  0.00969           6.43
23 mu_0       0.5      1.03        0.940  0.0409            4.39
24 mu_0       0.6      1.04        1.01   0.127             3.31
25 mu_0       0.7      1.02        1.00   0.119             1.98
26 mu_0       0.8      0.972       1.03   0.0100            2.22
27 mu_0       0.9      0.945       0.855  0.0000585         9.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     80.5      0.0000769  5.27e-18   7512.  
 2 mu         0.2     66.9      0.00793    5.52e-12   5856.  
 3 mu         0.3     36.8      0.0994     1.84e- 8   3018.  
 4 mu         0.4     15.7      0.433      5.06e- 6   1172.  
 5 mu         0.5      5.57     0.934      2.25e- 4    341.  
 6 mu         0.6      2.04     1.03       4.98e- 3     68.6 
 7 mu         0.7      1.11     0.932      1.73e- 3      8.02
 8 mu         0.8      0.974    0.652      1.32e- 5      6.07
 9 mu         0.9      1.63     0.0626     2.30e- 9     64.0 
10 mu_1       0.1     93.2      0.000491   5.27e-17   8347.  
11 mu_1       0.2     40.8      0.0266     2.76e-11   3253.  
12 mu_1       0.3     16.1      0.226      6.12e- 8   1118.  
13 mu_1       0.4      5.92     0.659      1.26e- 5    326.  
14 mu_1       0.5      2.40     0.951      4.49e- 4     75.7 
15 mu_1       0.6      1.32     1.04       8.30e- 3     12.7 
16 mu_1       0.7      1.00     0.918      4.62e- 4      3.28
17 mu_1       0.8      0.979    0.526      3.10e- 6      7.59
18 mu_1       0.9      1.72     0.0477     4.80e-10     71.1 
19 mu_0       0.1     79.0      0.0000298  0          7420.  
20 mu_0       0.2     73.4      0.00359    0          6506.  
21 mu_0       0.3     45.7      0.0356     0          3833.  
22 mu_0       0.4     22.1      0.264      0          1737.  
23 mu_0       0.5      8.74     0.735      0           606.  
24 mu_0       0.6      3.12     0.998      0           152.  
25 mu_0       0.7      1.37     1.05       0            23.7 
26 mu_0       0.8      0.955    0.713      0             4.21
27 mu_0       0.9      0.872    0.142      0             9.76
[1] "Total run time was 51.15 seconds"
