
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1196"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4 13 10  9  4  5  4  6  7  5  2  9  8  8  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03299 0.33840 0.60274 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
735 461 
[1] "treatment indicator table: "

  0   1 
439 757 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 589
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 76.877 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.345 0.0982
 2 mu         0.1   0.2 0.521 0.151 
 3 mu         0.1   0.3 0.511 0.134 
 4 mu         0.1   0.4 0.526 0.131 
 5 mu         0.1   0.5 0.680 0.189 
 6 mu         0.2   0.1 0.350 0.0897
 7 mu         0.2   0.2 0.498 0.141 
 8 mu         0.2   0.3 0.504 0.124 
 9 mu         0.2   0.4 0.528 0.108 
10 mu         0.2   0.5 0.662 0.169 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.786       0.0168 0.0000000203      11.8 
 2 mu         0.2      0.938       0.126  0.0000391          9.20
 3 mu         0.3      1.01        0.405  0.00223            9.11
 4 mu         0.4      1.01        0.755  0.0286             7.22
 5 mu         0.5      0.971       0.901  0.153              5.38
 6 mu         0.6      0.956       0.923  0.285              2.79
 7 mu         0.7      0.958       0.951  0.0829             3.77
 8 mu         0.8      0.937       0.919  0.00885            2.70
 9 mu         0.9      0.927       0.625  0.0000894          8.64
10 mu_1       0.1      1.06        0.0691 0.000000128       13.1 
11 mu_1       0.2      0.991       0.305  0.000125           8.71
12 mu_1       0.3      1.00        0.565  0.00481            8.99
13 mu_1       0.4      0.982       0.838  0.0471             7.10
14 mu_1       0.5      0.961       0.906  0.206              4.52
15 mu_1       0.6      0.962       0.938  0.225              2.93
16 mu_1       0.7      0.963       0.972  0.0590             3.83
17 mu_1       0.8      0.934       0.915  0.00570            3.05
18 mu_1       0.9      0.926       0.579  0.0000522          9.05
19 mu_0       0.1      0.756       0.0100 0.00000000823     11.6 
20 mu_0       0.2      0.925       0.0816 0.0000176         10.2 
21 mu_0       0.3      1.01        0.321  0.00112            9.16
22 mu_0       0.4      1.02        0.651  0.0162             7.30
23 mu_0       0.5      0.981       0.890  0.0990             6.24
24 mu_0       0.6      0.947       0.904  0.237              3.58
25 mu_0       0.7      0.946       0.908  0.139              3.62
26 mu_0       0.8      0.947       0.926  0.0214             3.76
27 mu_0       0.9      0.938       0.878  0.000424           4.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     403.     0.0000296   8.75e-14   39812. 
 2 mu         0.2     300.     0.00377     5.10e- 9   27214. 
 3 mu         0.3     123.     0.0603      2.93e- 6    8262. 
 4 mu         0.4      42.3    0.359       2.51e- 4    2254. 
 5 mu         0.5      12.5    0.929       7.42e- 3     771. 
 6 mu         0.6       3.69   1.21        1.10e- 1     132. 
 7 mu         0.7       2.85   1.07        8.40e- 3      99.7
 8 mu         0.8       4.01   0.808       9.62e- 5     219. 
 9 mu         0.9       3.17   0.149       1.57e- 8     160. 
10 mu_1       0.1     482.     0.000217    8.23e-13   46838. 
11 mu_1       0.2     200.     0.0134      2.40e- 8   16008. 
12 mu_1       0.3      72.1    0.128       9.19e- 6    3334. 
13 mu_1       0.4      25.1    0.547       5.89e- 4    1657. 
14 mu_1       0.5       7.52   1.13        1.40e- 2     454. 
15 mu_1       0.6       2.84   1.22        7.38e- 2      64.7
16 mu_1       0.7       3.00   1.13        3.79e- 3     119. 
17 mu_1       0.8       4.10   0.675       3.80e- 5     228. 
18 mu_1       0.9       3.00   0.117       2.05e- 9     148. 
19 mu_0       0.1     394.     0.00000713  0          39031. 
20 mu_0       0.2     325.     0.00145     0          30015. 
21 mu_0       0.3     145.     0.0315      0          10414. 
22 mu_0       0.4      53.8    0.186       0           2652. 
23 mu_0       0.5      17.4    0.602       0           1089. 
24 mu_0       0.6       4.97   1.01        0            233. 
25 mu_0       0.7       2.51   1.21        0             55.4
26 mu_0       0.8       3.63   1.02        0            182. 
27 mu_0       0.9       4.67   0.372       0            267. 
[1] "Total run time was 81.337 seconds"
