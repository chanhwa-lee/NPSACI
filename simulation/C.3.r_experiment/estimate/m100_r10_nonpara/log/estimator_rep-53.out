
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1198"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8 10  6  8  6  4  6  5 10  6  5  5  8  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03468 0.34445 0.60262 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
730 468 
[1] "treatment indicator table: "

  0   1 
466 732 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.552 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.458 0.134
 2 mu         0.1   0.2 0.506 0.135
 3 mu         0.1   0.3 0.551 0.148
 4 mu         0.1   0.4 0.531 0.141
 5 mu         0.1   0.5 0.680 0.159
 6 mu         0.2   0.1 0.413 0.110
 7 mu         0.2   0.2 0.475 0.111
 8 mu         0.2   0.3 0.528 0.121
 9 mu         0.2   0.4 0.531 0.112
10 mu         0.2   0.5 0.659 0.130
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.970       0.126  0.0000229      8.06
 2 mu         0.2      1.10        0.606  0.00326        6.28
 3 mu         0.3      1.10        0.948  0.0292         4.93
 4 mu         0.4      1.08        1.07   0.124          2.94
 5 mu         0.5      1.05        1.04   0.341          2.04
 6 mu         0.6      1.01        1.01   0.426          1.48
 7 mu         0.7      0.971       0.960  0.338          1.51
 8 mu         0.8      0.983       0.960  0.0630         2.25
 9 mu         0.9      1.03        0.859  0.00142        4.13
10 mu_1       0.1      1.06        0.358  0.000132       8.91
11 mu_1       0.2      1.10        0.824  0.00955        5.16
12 mu_1       0.3      1.09        1.03   0.0686         4.57
13 mu_1       0.4      1.07        1.04   0.223          2.31
14 mu_1       0.5      1.04        1.03   0.502          1.84
15 mu_1       0.6      0.994       0.990  0.447          1.53
16 mu_1       0.7      0.968       0.950  0.271          1.59
17 mu_1       0.8      0.990       0.985  0.0453         2.41
18 mu_1       0.9      1.03        0.825  0.000920       4.44
19 mu_0       0.1      0.960       0.0948 0.0000107      8.91
20 mu_0       0.2      1.10        0.494  0.00126        6.64
21 mu_0       0.3      1.10        0.904  0.0123         5.08
22 mu_0       0.4      1.08        1.10   0.0578         3.42
23 mu_0       0.5      1.06        1.04   0.180          2.25
24 mu_0       0.6      1.03        1.01   0.388          1.67
25 mu_0       0.7      0.980       0.990  0.360          1.58
26 mu_0       0.8      0.955       0.913  0.134          1.67
27 mu_0       0.9      1.01        0.943  0.00593        3.32
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.52    0.000127   9.15e-18    306.  
 2 mu         0.2       3.46    0.0131     4.80e-12    186.  
 3 mu         0.3       1.85    0.0931     1.06e- 8     49.3 
 4 mu         0.4       1.30    0.382      2.52e- 6      8.99
 5 mu         0.5       1.13    0.919      1.75e- 4      3.81
 6 mu         0.6       1.06    1.04       5.58e- 3      3.50
 7 mu         0.7       1.09    1.07       3.48e- 4      3.70
 8 mu         0.8       1.19    0.667      6.92e- 7     12.2 
 9 mu         0.9       1.30    0.0966     1.34e-11     17.8 
10 mu_1       0.1       5.45    0.000864   9.15e-17    339.  
11 mu_1       0.2       2.64    0.0443     2.40e-11    103.  
12 mu_1       0.3       1.54    0.220      3.55e- 8     18.3 
13 mu_1       0.4       1.23    0.653      6.29e- 6      7.02
14 mu_1       0.5       1.10    1.13       3.49e- 4      3.81
15 mu_1       0.6       1.07    0.965      4.39e- 3      3.28
16 mu_1       0.7       1.11    1.07       5.52e- 5      4.66
17 mu_1       0.8       1.21    0.533      9.61e- 8     13.4 
18 mu_1       0.9       1.30    0.0621     1.65e-12     17.5 
19 mu_0       0.1       4.41    0.0000554  0           302.  
20 mu_0       0.2       3.67    0.00506    0           206.  
21 mu_0       0.3       1.99    0.0331     0            62.6 
22 mu_0       0.4       1.35    0.224      0            11.0 
23 mu_0       0.5       1.15    0.734      0             5.08
24 mu_0       0.6       1.06    1.03       0             3.83
25 mu_0       0.7       1.03    0.997      0             3.19
26 mu_0       0.8       1.09    0.838      0             7.17
27 mu_0       0.9       1.31    0.244      0            21.0 
[1] "Total run time was 54.867 seconds"
