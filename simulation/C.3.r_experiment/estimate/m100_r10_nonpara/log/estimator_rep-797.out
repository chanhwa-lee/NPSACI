
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1205"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  5  6  7 12  9  5 10  5  8  6  5  5  6  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04649 0.36638 0.63908 1.00000 6.94371 
[1] "event indicator table: "

  0   1 
720 485 
[1] "treatment indicator table: "

  0   1 
445 760 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.809 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.124 0.0748
 2 mu         0.1   0.2 0.158 0.111 
 3 mu         0.1   0.3 0.159 0.155 
 4 mu         0.1   0.4 0.160 0.191 
 5 mu         0.1   0.5 0.196 0.219 
 6 mu         0.2   0.1 0.175 0.0417
 7 mu         0.2   0.2 0.222 0.0630
 8 mu         0.2   0.3 0.263 0.0922
 9 mu         0.2   0.4 0.290 0.116 
10 mu         0.2   0.5 0.338 0.129 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.602       0.0755 0.00000131      15.9 
 2 mu         0.2      0.773       0.403  0.000775         5.17
 3 mu         0.3      0.921       0.802  0.0171           3.10
 4 mu         0.4      1.01        1.01   0.112            2.48
 5 mu         0.5      1.03        1.06   0.377            1.71
 6 mu         0.6      1.01        1.02   0.665            1.53
 7 mu         0.7      0.972       0.976  0.476            1.40
 8 mu         0.8      0.908       0.880  0.297            1.87
 9 mu         0.9      0.823       0.726  0.0147           3.10
10 mu_1       0.1      0.809       0.255  0.00000757       9.32
11 mu_1       0.2      0.904       0.685  0.00218          3.01
12 mu_1       0.3      0.993       0.974  0.0327           3.27
13 mu_1       0.4      1.03        1.04   0.167            2.09
14 mu_1       0.5      1.02        1.04   0.453            1.62
15 mu_1       0.6      0.996       0.993  0.586            1.46
16 mu_1       0.7      0.957       0.957  0.430            1.53
17 mu_1       0.8      0.896       0.872  0.237            1.93
18 mu_1       0.9      0.820       0.682  0.0107           3.28
19 mu_0       0.1      0.579       0.0511 0.000000612     16.6 
20 mu_0       0.2      0.741       0.307  0.000425         5.89
21 mu_0       0.3      0.891       0.713  0.0104           3.10
22 mu_0       0.4      0.994       0.972  0.0746           2.74
23 mu_0       0.5      1.04        1.05   0.274            1.89
24 mu_0       0.6      1.03        1.03   0.567            1.63
25 mu_0       0.7      1.01        1.00   0.585            1.39
26 mu_0       0.8      0.956       0.956  0.382            1.64
27 mu_0       0.9      0.845       0.788  0.0508           2.33
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.54     0.0000887  6.21e-12    139.  
 2 mu         0.2      3.96     0.00658    1.43e- 7    217.  
 3 mu         0.3      3.05     0.0759     4.19e- 5    148.  
 4 mu         0.4      1.81     0.342      1.72e- 3     46.5 
 5 mu         0.5      1.21     0.755      2.08e- 2     10.3 
 6 mu         0.6      1.01     0.901      1.32e- 1      2.97
 7 mu         0.7      1.05     1.05       1.33e- 2      2.63
 8 mu         0.8      1.13     0.814      5.18e- 5      4.22
 9 mu         0.9      0.998    0.0974     2.53e- 9      9.95
10 mu_1       0.1      3.82     0.000719   5.17e-11    167.  
11 mu_1       0.2      3.89     0.0226     5.95e- 7    229.  
12 mu_1       0.3      2.41     0.162      1.16e- 4    104.  
13 mu_1       0.4      1.45     0.593      3.96e- 3     24.5 
14 mu_1       0.5      1.08     0.822      3.84e- 2      5.59
15 mu_1       0.6      1.00     0.957      2.44e- 2      2.66
16 mu_1       0.7      1.07     1.16       2.44e- 3      2.97
17 mu_1       0.8      1.14     0.657      1.36e- 5      4.85
18 mu_1       0.9      0.986    0.0722     5.93e-10     11.1 
19 mu_0       0.1      2.40     0.0000224  0           139.  
20 mu_0       0.2      3.97     0.00258    0           214.  
21 mu_0       0.3      3.33     0.0386     0           167.  
22 mu_0       0.4      2.06     0.176      0            61.1 
23 mu_0       0.5      1.33     0.497      0            14.9 
24 mu_0       0.6      1.03     0.866      0             5.40
25 mu_0       0.7      0.980    0.972      0             2.82
26 mu_0       0.8      1.07     0.987      0             4.05
27 mu_0       0.9      1.11     0.240      0             5.71
[1] "Total run time was 66.265 seconds"
