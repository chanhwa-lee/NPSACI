
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1349"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  1  4  3  7  5  8  7  2  6  5 14  7  5 12  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02543 0.32690 0.59000 1.00000 5.05790 
[1] "event indicator table: "

  0   1 
807 542 
[1] "treatment indicator table: "

  0   1 
473 876 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 672
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 677
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 44.75 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.290 0.0990
 2 mu         0.1   0.2 0.337 0.113 
 3 mu         0.1   0.3 0.399 0.121 
 4 mu         0.1   0.4 0.468 0.141 
 5 mu         0.1   0.5 0.503 0.151 
 6 mu         0.2   0.1 0.323 0.0695
 7 mu         0.2   0.2 0.397 0.0872
 8 mu         0.2   0.3 0.459 0.0950
 9 mu         0.2   0.4 0.518 0.106 
10 mu         0.2   0.5 0.556 0.116 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.756       0.0201 0.0000000857     23.5 
 2 mu         0.2      0.927       0.220  0.0000937        18.4 
 3 mu         0.3      0.930       0.573  0.00332           9.71
 4 mu         0.4      0.905       0.817  0.0340            4.15
 5 mu         0.5      0.930       0.896  0.167             2.34
 6 mu         0.6      0.967       0.968  0.407             1.91
 7 mu         0.7      0.985       0.995  0.458             1.57
 8 mu         0.8      0.973       0.951  0.143             2.92
 9 mu         0.9      0.860       0.831  0.00772           3.47
10 mu_1       0.1      0.933       0.0850 0.000000514      26.1 
11 mu_1       0.2      0.912       0.415  0.000337         10.4 
12 mu_1       0.3      0.888       0.731  0.00800           3.94
13 mu_1       0.4      0.900       0.880  0.0618            2.47
14 mu_1       0.5      0.945       0.899  0.246             2.37
15 mu_1       0.6      0.977       0.977  0.439             1.73
16 mu_1       0.7      0.985       0.990  0.408             1.61
17 mu_1       0.8      0.964       0.945  0.117             3.12
18 mu_1       0.9      0.845       0.800  0.00549           3.38
19 mu_0       0.1      0.737       0.0141 0.0000000380     23.2 
20 mu_0       0.2      0.931       0.161  0.0000329        20.4 
21 mu_0       0.3      0.947       0.502  0.00132          12.2 
22 mu_0       0.4      0.908       0.769  0.0154            5.84
23 mu_0       0.5      0.915       0.884  0.0889            2.46
24 mu_0       0.6      0.952       0.942  0.280             2.18
25 mu_0       0.7      0.984       0.969  0.460             1.52
26 mu_0       0.8      1.01        0.983  0.247             2.13
27 mu_0       0.9      0.994       0.948  0.0265            4.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.748   0.0000214   1.17e-15     34.4 
 2 mu         0.2      1.43    0.00253     4.78e-10     47.2 
 3 mu         0.3      1.31    0.0592      4.12e- 7     32.2 
 4 mu         0.4      1.13    0.323       4.70e- 5     10.1 
 5 mu         0.5      1.11    0.751       1.74e- 3      7.05
 6 mu         0.6      1.17    0.992       7.65e- 3      4.62
 7 mu         0.7      1.36    1.13        9.13e- 5      6.11
 8 mu         0.8      2.21    0.943       1.38e- 7     37.3 
 9 mu         0.9      5.50    0.155       1.50e-12    175.  
10 mu_1       0.1      1.36    0.000154    1.11e-14     51.6 
11 mu_1       0.2      1.56    0.00828     2.26e- 9     49.7 
12 mu_1       0.3      1.25    0.121       1.30e- 6     22.6 
13 mu_1       0.4      1.12    0.538       1.11e- 4      7.18
14 mu_1       0.5      1.14    0.966       3.28e- 3      6.63
15 mu_1       0.6      1.20    1.03        1.91e- 3      5.27
16 mu_1       0.7      1.43    1.19        1.96e- 5      6.01
17 mu_1       0.8      2.41    0.838       2.59e- 8     44.3 
18 mu_1       0.9      5.82    0.112       2.50e-13    185.  
19 mu_0       0.1      0.680   0.00000427  0            32.5 
20 mu_0       0.2      1.40    0.00121     0            46.6 
21 mu_0       0.3      1.34    0.0293      0            36.3 
22 mu_0       0.4      1.13    0.154       0            13.3 
23 mu_0       0.5      1.09    0.519       0             7.46
24 mu_0       0.6      1.12    0.907       0             5.38
25 mu_0       0.7      1.19    0.965       0             6.43
26 mu_0       0.8      1.39    1.09        0             9.33
27 mu_0       0.9      2.57    0.301       0            87.5 
[1] "Total run time was 47.888 seconds"
