
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1203"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3 12 10  7  7  7  4  4  6  3  6  7  7  6  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02407 0.29607 0.60247 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
709 494 
[1] "treatment indicator table: "

  0   1 
479 724 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 575
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 81.388 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.271 0.0889
 2 mu         0.1   0.2 0.318 0.115 
 3 mu         0.1   0.3 0.409 0.139 
 4 mu         0.1   0.4 0.444 0.153 
 5 mu         0.1   0.5 0.448 0.159 
 6 mu         0.2   0.1 0.291 0.0638
 7 mu         0.2   0.2 0.355 0.0828
 8 mu         0.2   0.3 0.437 0.0994
 9 mu         0.2   0.4 0.490 0.110 
10 mu         0.2   0.5 0.499 0.113 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.01        0.0305 0.0000000785     14.0 
 2 mu         0.2      1.02        0.318  0.000129          7.05
 3 mu         0.3      0.961       0.733  0.00619           4.26
 4 mu         0.4      0.963       0.922  0.0660            2.48
 5 mu         0.5      0.982       1.00   0.297             2.07
 6 mu         0.6      0.987       0.990  0.641             1.40
 7 mu         0.7      0.972       0.994  0.417             1.40
 8 mu         0.8      0.960       0.903  0.210             2.42
 9 mu         0.9      0.942       0.616  0.0157            4.55
10 mu_1       0.1      1.05        0.108  0.000000472      10.6 
11 mu_1       0.2      0.916       0.501  0.000390          4.65
12 mu_1       0.3      0.903       0.794  0.0126            2.52
13 mu_1       0.4      0.949       0.940  0.103             2.57
14 mu_1       0.5      0.981       0.991  0.385             1.83
15 mu_1       0.6      0.986       0.982  0.568             1.34
16 mu_1       0.7      0.969       0.977  0.372             1.52
17 mu_1       0.8      0.959       0.857  0.167             2.55
18 mu_1       0.9      0.935       0.565  0.0117            4.70
19 mu_0       0.1      1.00        0.0207 0.0000000348     15.6 
20 mu_0       0.2      1.05        0.252  0.0000640         8.71
21 mu_0       0.3      0.985       0.644  0.00344           5.24
22 mu_0       0.4      0.973       0.891  0.0413            2.92
23 mu_0       0.5      0.983       0.956  0.181             2.31
24 mu_0       0.6      0.988       1.01   0.353             1.52
25 mu_0       0.7      0.977       0.980  0.471             1.36
26 mu_0       0.8      0.963       0.977  0.356             1.90
27 mu_0       0.9      1.00        0.964  0.0489            3.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.593     0.000341  3.49e-13     14.6 
 2 mu         0.2      1.52      0.0176    1.14e- 8     24.8 
 3 mu         0.3      1.97      0.158     5.01e- 6     38.0 
 4 mu         0.4      1.79      0.549     3.75e- 4     25.2 
 5 mu         0.5      1.39      0.919     9.04e- 3     10.2 
 6 mu         0.6      1.12      1.04      9.45e- 2      4.11
 7 mu         0.7      1.09      0.978     4.75e- 3      4.24
 8 mu         0.8      1.32      0.448     4.84e- 5     12.3 
 9 mu         0.9      2.01      0.0463    5.32e- 9     71.9 
10 mu_1       0.1      1.30      0.00210   3.49e-12     26.5 
11 mu_1       0.2      1.99      0.0559    5.72e- 8     36.5 
12 mu_1       0.3      2.01      0.333     1.67e- 5     37.2 
13 mu_1       0.4      1.64      0.930     9.37e- 4     18.5 
14 mu_1       0.5      1.26      0.918     1.81e- 2      7.16
15 mu_1       0.6      1.08      0.981     3.15e- 2      3.80
16 mu_1       0.7      1.12      0.828     1.36e- 3      5.38
17 mu_1       0.8      1.39      0.321     1.37e- 5     15.4 
18 mu_1       0.9      2.11      0.0301    1.55e- 9     79.9 
19 mu_0       0.1      0.514     0.000157  0            13.3 
20 mu_0       0.2      1.41      0.00952   0            21.9 
21 mu_0       0.3      1.95      0.0857    0            38.3 
22 mu_0       0.4      1.89      0.328     0            29.6 
23 mu_0       0.5      1.52      0.835     0            14.1 
24 mu_0       0.6      1.19      1.03      0             4.92
25 mu_0       0.7      1.04      1.04      0             3.26
26 mu_0       0.8      1.05      0.604     0             8.96
27 mu_0       0.9      1.09      0.0849    0            16.6 
[1] "Total run time was 86.753 seconds"
