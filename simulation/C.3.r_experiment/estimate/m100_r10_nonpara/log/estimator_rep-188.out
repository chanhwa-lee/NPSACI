
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1270"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  5  8 11  3  8  7  4  4  4 10  5  5  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05117 0.37686 0.63432 1.00000 5.32198 
[1] "event indicator table: "

  0   1 
763 507 
[1] "treatment indicator table: "

  0   1 
424 846 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.004 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.319 0.126 
 2 mu         0.1   0.2 0.401 0.127 
 3 mu         0.1   0.3 0.554 0.179 
 4 mu         0.1   0.4 0.679 0.268 
 5 mu         0.1   0.5 0.680 0.254 
 6 mu         0.2   0.1 0.379 0.0936
 7 mu         0.2   0.2 0.454 0.0968
 8 mu         0.2   0.3 0.592 0.118 
 9 mu         0.2   0.4 0.670 0.157 
10 mu         0.2   0.5 0.706 0.155 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.847       0.0736 0.0000000227      22.3 
 2 mu         0.2      1.10        0.574  0.0000324         12.6 
 3 mu         0.3      1.14        0.976  0.00167            6.28
 4 mu         0.4      1.10        1.07   0.0221             3.14
 5 mu         0.5      1.05        1.04   0.134              2.45
 6 mu         0.6      1.02        0.997  0.413              2.03
 7 mu         0.7      0.989       0.962  0.532              1.76
 8 mu         0.8      0.979       0.944  0.298              1.72
 9 mu         0.9      0.974       0.872  0.0160             2.91
10 mu_1       0.1      1.17        0.258  0.000000145       18.7 
11 mu_1       0.2      1.18        0.885  0.000114          10.1 
12 mu_1       0.3      1.14        1.12   0.00394            4.15
13 mu_1       0.4      1.08        1.03   0.0399             2.74
14 mu_1       0.5      1.04        1.03   0.198              2.17
15 mu_1       0.6      1.01        0.967  0.449              2.05
16 mu_1       0.7      0.985       0.964  0.480              1.68
17 mu_1       0.8      0.983       0.943  0.247              1.86
18 mu_1       0.9      0.978       0.839  0.0121             3.16
19 mu_0       0.1      0.811       0.0516 0.00000000869     22.8 
20 mu_0       0.2      1.07        0.465  0.0000122         14.3 
21 mu_0       0.3      1.14        0.924  0.000692           7.19
22 mu_0       0.4      1.11        1.12   0.0103             3.96
23 mu_0       0.5      1.07        1.05   0.0713             2.73
24 mu_0       0.6      1.04        1.00   0.291              2.26
25 mu_0       0.7      1.00        0.982  0.469              1.95
26 mu_0       0.8      0.963       0.930  0.391              1.77
27 mu_0       0.9      0.941       0.893  0.0506             2.09
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.423   0.00000828  1.82e-13     19.7 
 2 mu         0.2      0.987   0.00111     9.44e- 9     24.6 
 3 mu         0.3      1.39    0.0201      4.63e- 6     23.2 
 4 mu         0.4      1.40    0.127       2.97e- 4     15.6 
 5 mu         0.5      1.29    0.511       7.04e- 3      9.40
 6 mu         0.6      1.26    0.966       8.68e- 2      7.90
 7 mu         0.7      1.25    1.15        9.82e- 3      5.33
 8 mu         0.8      1.20    1.00        7.50e- 5      4.03
 9 mu         0.9      1.09    0.187       9.28e- 9      9.93
10 mu_1       0.1      0.953   0.0000597   1.62e-12     39.5 
11 mu_1       0.2      1.35    0.00450     4.19e- 8     24.6 
12 mu_1       0.3      1.47    0.0480      1.41e- 5     22.7 
13 mu_1       0.4      1.32    0.225       6.96e- 4     13.5 
14 mu_1       0.5      1.22    0.720       1.32e- 2      7.91
15 mu_1       0.6      1.23    1.05        9.15e- 2      7.62
16 mu_1       0.7      1.25    1.19        4.21e- 3      5.33
17 mu_1       0.8      1.20    0.917       2.81e- 5      4.30
18 mu_1       0.9      1.09    0.153       3.09e- 9     11.0 
19 mu_0       0.1      0.364   0.00000183  0            17.5 
20 mu_0       0.2      0.896   0.000268    0            24.6 
21 mu_0       0.3      1.36    0.00593     0            24.8 
22 mu_0       0.4      1.46    0.0579      0            20.8 
23 mu_0       0.5      1.36    0.243       0            15.0 
24 mu_0       0.6      1.29    0.706       0             9.24
25 mu_0       0.7      1.26    1.02        0             6.05
26 mu_0       0.8      1.19    1.10        0             6.04
27 mu_0       0.9      1.14    0.429       0             5.94
[1] "Total run time was 61.315 seconds"
