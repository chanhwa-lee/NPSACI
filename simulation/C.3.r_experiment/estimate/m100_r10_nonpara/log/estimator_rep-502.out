
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1277"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  4  3  9  3  9  7  4  7  4  3 12  2  8  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03845 0.31166 0.58290 0.97824 5.33856 
[1] "event indicator table: "

  0   1 
729 548 
[1] "treatment indicator table: "

  0   1 
532 745 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 636
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.82 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.203 0.0502
 2 mu         0.1   0.2 0.255 0.0782
 3 mu         0.1   0.3 0.341 0.106 
 4 mu         0.1   0.4 0.388 0.123 
 5 mu         0.1   0.5 0.459 0.0906
 6 mu         0.2   0.1 0.247 0.0324
 7 mu         0.2   0.2 0.328 0.0481
 8 mu         0.2   0.3 0.404 0.0618
 9 mu         0.2   0.4 0.463 0.0703
10 mu         0.2   0.5 0.496 0.0643
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.854        0.249 0.0000694      6.27
 2 mu         0.2      0.961        0.823 0.0101         3.64
 3 mu         0.3      0.972        0.943 0.0853         2.78
 4 mu         0.4      0.988        0.959 0.255          2.47
 5 mu         0.5      1.01         1.02  0.519          1.63
 6 mu         0.6      1.03         1.02  0.670          1.44
 7 mu         0.7      1.02         1.02  0.381          1.52
 8 mu         0.8      0.952        0.926 0.164          1.95
 9 mu         0.9      0.828        0.654 0.0143         2.89
10 mu_1       0.1      0.910        0.519 0.000330       5.52
11 mu_1       0.2      0.948        0.869 0.0276         3.77
12 mu_1       0.3      0.962        0.920 0.159          3.02
13 mu_1       0.4      0.991        0.957 0.364          2.15
14 mu_1       0.5      1.02         1.03  0.611          1.56
15 mu_1       0.6      1.03         1.03  0.565          1.51
16 mu_1       0.7      1.01         1.02  0.371          1.56
17 mu_1       0.8      0.939        0.921 0.138          2.08
18 mu_1       0.9      0.819        0.618 0.0100         2.95
19 mu_0       0.1      0.847        0.207 0.0000405      6.36
20 mu_0       0.2      0.965        0.761 0.00567        3.98
21 mu_0       0.3      0.977        0.931 0.0537         3.00
22 mu_0       0.4      0.985        0.967 0.160          2.69
23 mu_0       0.5      1.01         0.967 0.343          1.70
24 mu_0       0.6      1.03         1.03  0.605          1.40
25 mu_0       0.7      1.03         1.02  0.404          1.58
26 mu_0       0.8      1.01         1.03  0.268          1.70
27 mu_0       0.9      0.911        0.875 0.0455         2.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.976     0.000561  3.19e-15     24.4 
 2 mu         0.2      1.25      0.0238    6.60e-10     18.6 
 3 mu         0.3      1.20      0.183     7.47e- 7      8.13
 4 mu         0.4      1.09      0.622     9.73e- 5      4.12
 5 mu         0.5      0.980     0.976     3.75e- 3      3.02
 6 mu         0.6      0.912     0.950     1.91e- 3      2.36
 7 mu         0.7      0.993     0.996     2.61e- 5      2.66
 8 mu         0.8      1.18      0.451     5.19e- 8      5.43
 9 mu         0.9      1.25      0.0561    1.00e-12     13.0 
10 mu_1       0.1      1.42      0.00273   2.87e-14     30.3 
11 mu_1       0.2      1.33      0.0824    2.97e- 9     12.5 
12 mu_1       0.3      1.19      0.362     2.24e- 6      5.71
13 mu_1       0.4      1.07      0.864     2.19e- 4      3.96
14 mu_1       0.5      0.954     0.862     6.75e- 3      3.02
15 mu_1       0.6      0.914     0.943     3.55e- 4      2.46
16 mu_1       0.7      1.03      0.872     4.15e- 6      3.00
17 mu_1       0.8      1.21      0.332     7.21e- 9      5.94
18 mu_1       0.9      1.25      0.0383    1.24e-13     14.4 
19 mu_0       0.1      0.927     0.000267  0            24.6 
20 mu_0       0.2      1.23      0.0105    0            20.4 
21 mu_0       0.3      1.21      0.107     0             9.17
22 mu_0       0.4      1.11      0.456     0             4.53
23 mu_0       0.5      1.01      0.855     0             3.59
24 mu_0       0.6      0.910     0.810     0             2.72
25 mu_0       0.7      0.917     0.949     0             2.70
26 mu_0       0.8      1.06      0.827     0             4.39
27 mu_0       0.9      1.23      0.187     0             8.82
[1] "Total run time was 70.105 seconds"
