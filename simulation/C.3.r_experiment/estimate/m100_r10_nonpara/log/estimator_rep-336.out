
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1192"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  8  6  9  6  6 10  6  6  5  5  4  6  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03647 0.34943 0.61941 1.00000 4.88610 
[1] "event indicator table: "

  0   1 
724 468 
[1] "treatment indicator table: "

  0   1 
424 768 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 576
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 129.423 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.284 0.0940
 2 mu         0.1   0.2 0.367 0.132 
 3 mu         0.1   0.3 0.486 0.157 
 4 mu         0.1   0.4 0.488 0.160 
 5 mu         0.1   0.5 0.550 0.168 
 6 mu         0.2   0.1 0.267 0.0614
 7 mu         0.2   0.2 0.331 0.0929
 8 mu         0.2   0.3 0.424 0.108 
 9 mu         0.2   0.4 0.433 0.114 
10 mu         0.2   0.5 0.497 0.123 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.983       0.0646 0.0000000346     19.6 
 2 mu         0.2      1.06        0.397  0.0000703        15.8 
 3 mu         0.3      1.19        0.736  0.00414          11.2 
 4 mu         0.4      1.17        0.930  0.0532           10.0 
 5 mu         0.5      1.08        1.03   0.220             4.73
 6 mu         0.6      1.03        0.995  0.554             1.88
 7 mu         0.7      1.00        0.988  0.517             1.97
 8 mu         0.8      0.986       1.01   0.146             1.59
 9 mu         0.9      1.01        0.897  0.0122            3.59
10 mu_1       0.1      1.03        0.207  0.000000231      22.1 
11 mu_1       0.2      1.11        0.666  0.000234          9.61
12 mu_1       0.3      1.19        0.853  0.00923          12.5 
13 mu_1       0.4      1.13        0.990  0.0893            8.46
14 mu_1       0.5      1.05        1.01   0.316             3.46
15 mu_1       0.6      1.01        0.995  0.596             1.60
16 mu_1       0.7      0.998       0.994  0.389             1.99
17 mu_1       0.8      0.990       1.01   0.101             1.78
18 mu_1       0.9      1.02        0.897  0.00809           3.90
19 mu_0       0.1      0.978       0.0480 0.0000000128     20.4 
20 mu_0       0.2      1.05        0.330  0.0000292        17.4 
21 mu_0       0.3      1.19        0.670  0.00196          11.0 
22 mu_0       0.4      1.20        0.884  0.0264           11.1 
23 mu_0       0.5      1.12        0.987  0.123             6.01
24 mu_0       0.6      1.05        1.03   0.369             2.31
25 mu_0       0.7      1.01        0.986  0.435             1.93
26 mu_0       0.8      0.969       0.957  0.326             1.89
27 mu_0       0.9      0.916       0.895  0.0493            2.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.74   0.0000507   5.87e-16    254.  
 2 mu         0.2       7.69   0.00331     1.37e-10    350.  
 3 mu         0.3       7.11   0.0518      1.77e- 7    468.  
 4 mu         0.4       4.10   0.229       2.69e- 5    266.  
 5 mu         0.5       1.94   0.595       1.24e- 3     75.8 
 6 mu         0.6       1.23   1.04        2.65e- 2     10.4 
 7 mu         0.7       1.17   1.07        7.89e- 4      4.55
 8 mu         0.8       1.26   0.936       3.07e- 6      7.94
 9 mu         0.9       1.43   0.129       9.99e-11     11.3 
10 mu_1       0.1       6.77   0.000332    5.56e-15    401.  
11 mu_1       0.2       8.56   0.0130      6.48e-10    486.  
12 mu_1       0.3       6.12   0.107       5.58e- 7    433.  
13 mu_1       0.4       3.03   0.416       6.37e- 5    185.  
14 mu_1       0.5       1.51   0.793       2.36e- 3     42.1 
15 mu_1       0.6       1.15   1.05        1.12e- 2      4.80
16 mu_1       0.7       1.19   1.03        2.37e- 4      5.28
17 mu_1       0.8       1.30   0.807       8.09e- 7      8.60
18 mu_1       0.9       1.46   0.0914      1.75e-11     12.6 
19 mu_0       0.1       3.40   0.00000720  0           238.  
20 mu_0       0.2       7.47   0.00132     0           325.  
21 mu_0       0.3       7.54   0.0168      0           483.  
22 mu_0       0.4       4.80   0.124       0           320.  
23 mu_0       0.5       2.36   0.519       0           110.  
24 mu_0       0.6       1.35   0.811       0            18.7 
25 mu_0       0.7       1.15   1.01        0             4.54
26 mu_0       0.8       1.13   1.08        0             7.17
27 mu_0       0.9       1.21   0.316       0            12.2 
[1] "Total run time was 136.849 seconds"
