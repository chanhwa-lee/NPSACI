
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1317"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  6  8  8  2  3  7  6  7 13  3  6  8  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02661 0.32314 0.60665 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
772 545 
[1] "treatment indicator table: "

  0   1 
442 875 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.147 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.199 0.0811
 2 mu         0.1   0.2 0.265 0.0798
 3 mu         0.1   0.3 0.299 0.0935
 4 mu         0.1   0.4 0.284 0.108 
 5 mu         0.1   0.5 0.276 0.115 
 6 mu         0.2   0.1 0.270 0.0641
 7 mu         0.2   0.2 0.336 0.0658
 8 mu         0.2   0.3 0.372 0.0764
 9 mu         0.2   0.4 0.370 0.0859
10 mu         0.2   0.5 0.380 0.0925
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.410      0.00707 0.0000000895      9.64
 2 mu         0.2      0.628      0.132   0.0000612         7.00
 3 mu         0.3      0.783      0.491   0.00182           5.31
 4 mu         0.4      0.876      0.787   0.0156            3.74
 5 mu         0.5      0.932      0.924   0.0725            2.74
 6 mu         0.6      0.965      0.952   0.230             1.88
 7 mu         0.7      0.980      0.940   0.436             1.72
 8 mu         0.8      0.972      0.982   0.143             2.22
 9 mu         0.9      0.938      0.809   0.00481           3.82
10 mu_1       0.1      0.540      0.0375  0.000000643       9.70
11 mu_1       0.2      0.729      0.277   0.000221          6.29
12 mu_1       0.3      0.847      0.703   0.00434           4.89
13 mu_1       0.4      0.916      0.907   0.0284            3.42
14 mu_1       0.5      0.952      0.949   0.109             2.45
15 mu_1       0.6      0.971      0.971   0.302             1.71
16 mu_1       0.7      0.978      0.956   0.396             1.86
17 mu_1       0.8      0.968      0.984   0.122             2.24
18 mu_1       0.9      0.931      0.797   0.00337           3.99
19 mu_0       0.1      0.395      0.00418 0.0000000280      9.64
20 mu_0       0.2      0.603      0.0955  0.0000211         7.30
21 mu_0       0.3      0.755      0.401   0.000650          5.49
22 mu_0       0.4      0.850      0.714   0.00673           3.99
23 mu_0       0.5      0.912      0.879   0.0357            3.02
24 mu_0       0.6      0.955      0.926   0.123             2.15
25 mu_0       0.7      0.983      1.00    0.326             1.61
26 mu_0       0.8      0.986      0.992   0.227             2.14
27 mu_0       0.9      1.00       1.01    0.0178            2.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.222  0.00000344   1.01e-16      5.96
 2 mu         0.2      0.856  0.000457     2.66e-11     16.3 
 3 mu         0.3      1.51   0.0169       3.93e- 8     24.6 
 4 mu         0.4      1.65   0.149        6.96e- 6     21.7 
 5 mu         0.5      1.36   0.662        3.87e- 4      9.28
 6 mu         0.6      1.17   0.943        1.03e- 2      4.48
 7 mu         0.7      1.19   1.12         9.98e- 4      4.11
 8 mu         0.8      1.21   1.14         3.89e- 6      4.12
 9 mu         0.9      1.21   0.234        1.90e-10     15.2 
10 mu_1       0.1      0.623  0.0000297    1.01e-15     15.6 
11 mu_1       0.2      1.32   0.00199      1.33e-10     17.8 
12 mu_1       0.3      1.75   0.0366       1.31e- 7     27.3 
13 mu_1       0.4      1.60   0.252        1.74e- 5     18.1 
14 mu_1       0.5      1.25   0.834        7.73e- 4      6.19
15 mu_1       0.6      1.13   0.955        1.41e- 2      3.98
16 mu_1       0.7      1.19   1.16         3.00e- 4      4.11
17 mu_1       0.8      1.21   1.08         1.02e- 6      4.86
18 mu_1       0.9      1.22   0.182        4.45e-11     16.9 
19 mu_0       0.1      0.178  0.000000478  0             5.23
20 mu_0       0.2      0.739  0.000139     0            16.1 
21 mu_0       0.3      1.41   0.00684      0            23.4 
22 mu_0       0.4      1.69   0.0758       0            24.1 
23 mu_0       0.5      1.47   0.443        0            12.4 
24 mu_0       0.6      1.22   0.844        0             6.07
25 mu_0       0.7      1.18   1.05         0             4.26
26 mu_0       0.8      1.21   1.19         0             3.75
27 mu_0       0.9      1.16   0.616        0             6.27
[1] "Total run time was 63.759 seconds"
