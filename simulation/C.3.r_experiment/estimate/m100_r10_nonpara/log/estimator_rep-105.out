
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1254"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2 10 10  5  7  5  4  7  6  4  8  7  6  7  1 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03164 0.31460 0.59454 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
768 486 
[1] "treatment indicator table: "

  0   1 
462 792 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.966 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.392 0.123 
 2 mu         0.1   0.2 0.435 0.108 
 3 mu         0.1   0.3 0.439 0.108 
 4 mu         0.1   0.4 0.453 0.107 
 5 mu         0.1   0.5 0.452 0.109 
 6 mu         0.2   0.1 0.386 0.0997
 7 mu         0.2   0.2 0.443 0.0859
 8 mu         0.2   0.3 0.458 0.0859
 9 mu         0.2   0.4 0.479 0.0836
10 mu         0.2   0.5 0.487 0.0857
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.795       0.0856 0.000000225       7.56
 2 mu         0.2      0.900       0.434  0.000218          6.36
 3 mu         0.3      0.975       0.723  0.00825           4.58
 4 mu         0.4      0.996       0.915  0.0787            4.73
 5 mu         0.5      0.983       0.928  0.331             3.49
 6 mu         0.6      0.971       0.971  0.552             1.80
 7 mu         0.7      0.974       0.961  0.343             1.75
 8 mu         0.8      0.946       0.887  0.0657            2.66
 9 mu         0.9      0.845       0.622  0.00162           3.16
10 mu_1       0.1      0.904       0.274  0.00000138        9.08
11 mu_1       0.2      0.927       0.688  0.000674          4.85
12 mu_1       0.3      0.967       0.885  0.0172            4.58
13 mu_1       0.4      0.974       0.930  0.126             4.66
14 mu_1       0.5      0.966       0.962  0.353             2.91
15 mu_1       0.6      0.967       0.967  0.553             1.56
16 mu_1       0.7      0.974       0.948  0.278             1.90
17 mu_1       0.8      0.941       0.869  0.0488            2.77
18 mu_1       0.9      0.839       0.590  0.00109           3.31
19 mu_0       0.1      0.783       0.0640 0.0000000965      7.68
20 mu_0       0.2      0.893       0.353  0.000104          6.74
21 mu_0       0.3      0.978       0.677  0.00440           5.41
22 mu_0       0.4      1.01        0.874  0.0473            4.78
23 mu_0       0.5      1.00        0.935  0.229             4.07
24 mu_0       0.6      0.978       0.983  0.489             2.28
25 mu_0       0.7      0.975       0.970  0.496             1.66
26 mu_0       0.8      0.969       0.910  0.134             2.21
27 mu_0       0.9      0.902       0.800  0.00638           3.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    9114.     0.0000294   8.91e-18 889057.  
 2 mu         0.2    1652.     0.00226     9.34e-12 151929.  
 3 mu         0.3     253.     0.0378      3.11e- 8  20500.  
 4 mu         0.4      33.1    0.212       9.79e- 6   2030.  
 5 mu         0.5       4.35   0.572       8.50e- 4    150.  
 6 mu         0.6       1.32   1.10        3.26e- 2     15.5 
 7 mu         0.7       1.29   1.04        5.94e- 3      5.55
 8 mu         0.8       1.64   0.945       8.96e- 5     20.9 
 9 mu         0.9       2.65   0.137       4.32e- 9    108.  
10 mu_1       0.1     202.     0.000224    0         16075.  
11 mu_1       0.2      62.6    0.00898     0          4400.  
12 mu_1       0.3      16.2    0.0790      0          1013.  
13 mu_1       0.4       4.00   0.371       0           186.  
14 mu_1       0.5       1.46   0.808       0            25.0 
15 mu_1       0.6       1.16   1.13        0             2.96
16 mu_1       0.7       1.37   1.08        0             7.05
17 mu_1       0.8       1.72   0.810       0            23.2 
18 mu_1       0.9       2.76   0.108       0           120.  
19 mu_0       0.1   10104.     0.00000579  0        987841.  
20 mu_0       0.2    2049.     0.000770    0        189912.  
21 mu_0       0.3     355.     0.0141      0         29286.  
22 mu_0       0.4      52.4    0.0988      0          3384.  
23 mu_0       0.5       7.24   0.336       0           275.  
24 mu_0       0.6       1.57   0.818       0            35.5 
25 mu_0       0.7       1.10   1.00        0             3.73
26 mu_0       0.8       1.30   1.07        0            11.6 
27 mu_0       0.9       1.65   0.290       0            38.2 
[1] "Total run time was 95.54 seconds"
