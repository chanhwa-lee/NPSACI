
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1199"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 13  7  5  6  2  8  6  6  9  8  1 10  7  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03776 0.38433 0.66363 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
694 505 
[1] "treatment indicator table: "

  0   1 
434 765 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.574 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.449 0.200
 2 mu         0.1   0.2 0.531 0.242
 3 mu         0.1   0.3 0.548 0.263
 4 mu         0.1   0.4 0.571 0.293
 5 mu         0.1   0.5 0.572 0.303
 6 mu         0.2   0.1 0.484 0.140
 7 mu         0.2   0.2 0.567 0.165
 8 mu         0.2   0.3 0.599 0.179
 9 mu         0.2   0.4 0.640 0.197
10 mu         0.2   0.5 0.651 0.204
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.974       0.0247 0.00000175      43.2 
 2 mu         0.2      1.12        0.253  0.000743        26.3 
 3 mu         0.3      1.08        0.590  0.0154          11.3 
 4 mu         0.4      1.06        0.906  0.102            6.80
 5 mu         0.5      1.04        0.976  0.343            2.93
 6 mu         0.6      1.03        1.04   0.473            1.55
 7 mu         0.7      1.00        0.991  0.528            1.44
 8 mu         0.8      0.969       0.966  0.156            2.01
 9 mu         0.9      0.960       0.818  0.0124           6.09
10 mu_1       0.1      1.19        0.0972 0.00000964      48.0 
11 mu_1       0.2      1.14        0.533  0.00241         14.6 
12 mu_1       0.3      1.09        0.839  0.0335          10.1 
13 mu_1       0.4      1.06        0.984  0.168            5.07
14 mu_1       0.5      1.04        0.997  0.458            2.17
15 mu_1       0.6      1.02        1.02   0.470            1.40
16 mu_1       0.7      0.993       0.979  0.436            1.47
17 mu_1       0.8      0.962       0.947  0.122            2.23
18 mu_1       0.9      0.960       0.794  0.00908          6.38
19 mu_0       0.1      0.951       0.0179 0.000000871     42.7 
20 mu_0       0.2      1.11        0.179  0.000327        29.2 
21 mu_0       0.3      1.08        0.480  0.00766         11.9 
22 mu_0       0.4      1.06        0.856  0.0582           7.95
23 mu_0       0.5      1.05        0.974  0.227            3.70
24 mu_0       0.6      1.04        1.02   0.477            1.86
25 mu_0       0.7      1.02        1.04   0.536            1.44
26 mu_0       0.8      0.994       1.01   0.292            1.55
27 mu_0       0.9      0.966       1.00   0.0425           3.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.964    0.000216   4.87e-14     43.7 
 2 mu         0.2      1.81     0.00817    2.84e- 9     43.2 
 3 mu         0.3      2.07     0.0973     1.63e- 6     31.4 
 4 mu         0.4      1.81     0.327      1.39e- 4     16.6 
 5 mu         0.5      1.44     0.723      4.13e- 3     11.0 
 6 mu         0.6      1.23     1.02       6.10e- 2      6.71
 7 mu         0.7      1.25     1.16       7.62e- 3      5.18
 8 mu         0.8      1.35     0.868      8.76e- 5      8.18
 9 mu         0.9      1.30     0.243      3.05e- 8     15.9 
10 mu_1       0.1      1.76     0.00141    4.58e-13     62.5 
11 mu_1       0.2      2.06     0.0278     1.33e- 8     40.9 
12 mu_1       0.3      1.95     0.215      5.11e- 6     27.0 
13 mu_1       0.4      1.63     0.597      3.28e- 4     14.7 
14 mu_1       0.5      1.34     0.861      7.77e- 3      9.04
15 mu_1       0.6      1.22     1.09       5.05e- 2      5.92
16 mu_1       0.7      1.27     1.21       2.18e- 3      5.92
17 mu_1       0.8      1.37     0.727      2.19e- 5      9.09
18 mu_1       0.9      1.30     0.191      6.77e- 9     17.7 
19 mu_0       0.1      0.875    0.0000399  0            41.7 
20 mu_0       0.2      1.75     0.00328    0            46.2 
21 mu_0       0.3      2.11     0.0385     0            35.6 
22 mu_0       0.4      1.93     0.174      0            21.9 
23 mu_0       0.5      1.54     0.483      0            12.9 
24 mu_0       0.6      1.24     0.846      0             8.09
25 mu_0       0.7      1.18     1.08       0             4.23
26 mu_0       0.8      1.28     1.11       0             7.63
27 mu_0       0.9      1.31     0.495      0            11.7 
[1] "Total run time was 71.288 seconds"
