
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1266"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  5 10  6  3  7  7  6  8  7  7  5  8  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02056 0.31100 0.59588 1.00000 5.10850 
[1] "event indicator table: "

  0   1 
736 530 
[1] "treatment indicator table: "

  0   1 
509 757 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.345 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau      est     se
   <chr>    <dbl> <dbl>    <dbl>  <dbl>
 1 mu         0.1   0.1 -0.0410  0.0966
 2 mu         0.1   0.2 -0.00835 0.0970
 3 mu         0.1   0.3 -0.0132  0.122 
 4 mu         0.1   0.4 -0.0348  0.143 
 5 mu         0.1   0.5 -0.0433  0.151 
 6 mu         0.2   0.1  0.0283  0.105 
 7 mu         0.2   0.2  0.0707  0.104 
 8 mu         0.2   0.3  0.102   0.117 
 9 mu         0.2   0.4  0.0934  0.136 
10 mu         0.2   0.5  0.0886  0.143 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.281       0.0166 0.000000866      5.89
 2 mu         0.2      0.516       0.166  0.000442         8.49
 3 mu         0.3      0.726       0.497  0.0117           7.94
 4 mu         0.4      0.860       0.759  0.0870           4.60
 5 mu         0.5      0.936       0.899  0.295            2.09
 6 mu         0.6      0.979       0.962  0.320            1.65
 7 mu         0.7      1.01        0.973  0.0675           2.36
 8 mu         0.8      1.01        0.956  0.00527          5.20
 9 mu         0.9      0.988       0.607  0.0000379       13.8 
10 mu_1       0.1      0.445       0.0613 0.00000541       7.82
11 mu_1       0.2      0.665       0.328  0.00138          9.96
12 mu_1       0.3      0.813       0.662  0.0246           6.45
13 mu_1       0.4      0.903       0.880  0.139            3.09
14 mu_1       0.5      0.956       0.926  0.367            1.68
15 mu_1       0.6      0.990       0.958  0.232            1.82
16 mu_1       0.7      1.02        0.987  0.0456           2.68
17 mu_1       0.8      1.02        0.913  0.00331          6.32
18 mu_1       0.9      0.997       0.543  0.0000222       15.3 
19 mu_0       0.1      0.263       0.0113 0.000000360      6.34
20 mu_0       0.2      0.479       0.127  0.000206         8.12
21 mu_0       0.3      0.688       0.420  0.00620          8.58
22 mu_0       0.4      0.832       0.693  0.0527           5.60
23 mu_0       0.5      0.917       0.878  0.189            2.73
24 mu_0       0.6      0.963       0.938  0.350            1.57
25 mu_0       0.7      0.991       0.940  0.119            2.25
26 mu_0       0.8      0.990       0.937  0.0131           3.79
27 mu_0       0.9      0.907       0.815  0.000179         5.27
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      66.0     0.000244   2.63e-15   4836.  
 2 mu         0.2      44.8     0.0157     6.88e-10   2647.  
 3 mu         0.3      18.7     0.122      1.02e- 6    914.  
 4 mu         0.4       6.23    0.407      1.80e- 4    224.  
 5 mu         0.5       2.34    0.791      1.00e- 2     37.6 
 6 mu         0.6       1.52    1.01       5.30e- 2     10.7 
 7 mu         0.7       1.97    0.957      2.33e- 3     41.7 
 8 mu         0.8       4.72    0.467      2.05e- 5    235.  
 9 mu         0.9      13.5     0.0420     4.00e- 9    775.  
10 mu_1       0.1      66.2     0.00161    2.63e-14   4030.  
11 mu_1       0.2      25.2     0.0515     3.44e- 9   1157.  
12 mu_1       0.3       8.21    0.266      3.39e- 6    350.  
13 mu_1       0.4       2.99    0.651      4.51e- 4     73.3 
14 mu_1       0.5       1.66    0.925      2.00e- 2     18.4 
15 mu_1       0.6       1.47    0.992      2.08e- 2      7.67
16 mu_1       0.7       2.19    0.788      7.84e- 4     56.1 
17 mu_1       0.8       5.31    0.362      6.02e- 6    277.  
18 mu_1       0.9      14.2     0.0266     1.05e- 9    811.  
19 mu_0       0.1      66.0     0.0000860  0          4925.  
20 mu_0       0.2      49.8     0.00603    0          3033.  
21 mu_0       0.3      23.3     0.0446     0          1197.  
22 mu_0       0.4       8.39    0.238      0           342.  
23 mu_0       0.5       3.01    0.649      0            69.0 
24 mu_0       0.6       1.59    0.883      0            15.3 
25 mu_0       0.7       1.44    1.00       0             9.16
26 mu_0       0.8       2.40    0.725      0            69.3 
27 mu_0       0.9       7.00    0.155      0           456.  
[1] "Total run time was 58.7 seconds"
