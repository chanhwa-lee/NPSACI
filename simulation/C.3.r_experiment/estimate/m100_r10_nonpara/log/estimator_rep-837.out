
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1281"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  7  8  9  6  5  5  3  7 10  6  5  6  8  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03107 0.34422 0.61968 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
740 541 
[1] "treatment indicator table: "

  0   1 
461 820 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.337 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.548 0.215
 2 mu         0.1   0.2 0.713 0.271
 3 mu         0.1   0.3 0.783 0.303
 4 mu         0.1   0.4 0.830 0.334
 5 mu         0.1   0.5 0.882 0.351
 6 mu         0.2   0.1 0.414 0.114
 7 mu         0.2   0.2 0.528 0.148
 8 mu         0.2   0.3 0.607 0.167
 9 mu         0.2   0.4 0.681 0.185
10 mu         0.2   0.5 0.733 0.196
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.40        0.0306 0.0000000581     37.9 
 2 mu         0.2      1.22        0.271  0.0000698        30.2 
 3 mu         0.3      1.04        0.614  0.00332          10.6 
 4 mu         0.4      0.978       0.854  0.0399            3.53
 5 mu         0.5      1.00        0.982  0.212             2.33
 6 mu         0.6      1.03        1.01   0.550             1.72
 7 mu         0.7      1.01        0.999  0.534             1.74
 8 mu         0.8      0.971       1.01   0.154             2.30
 9 mu         0.9      1.01        0.853  0.00604           9.06
10 mu_1       0.1      1.10        0.101  0.000000401      42.0 
11 mu_1       0.2      1.07        0.452  0.000242         22.7 
12 mu_1       0.3      0.965       0.783  0.00773           5.35
13 mu_1       0.4      0.967       0.926  0.0701            3.15
14 mu_1       0.5      1.01        0.995  0.301             2.04
15 mu_1       0.6      1.03        1.02   0.605             1.69
16 mu_1       0.7      1.00        1.01   0.420             1.87
17 mu_1       0.8      0.969       1.01   0.119             2.33
18 mu_1       0.9      1.02        0.832  0.00434          10.1 
19 mu_0       0.1      1.44        0.0228 0.0000000200     42.0 
20 mu_0       0.2      1.25        0.214  0.0000267        32.1 
21 mu_0       0.3      1.07        0.521  0.00143          12.8 
22 mu_0       0.4      0.985       0.764  0.0197            4.99
23 mu_0       0.5      0.995       0.943  0.122             2.63
24 mu_0       0.6      1.02        1.01   0.431             1.82
25 mu_0       0.7      1.02        0.996  0.649             1.68
26 mu_0       0.8      0.979       0.971  0.297             2.17
27 mu_0       0.9      0.918       0.952  0.0214            2.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.633   0.0000373   5.29e-14     14.9 
 2 mu         0.2      1.23    0.00295     4.87e- 9     19.6 
 3 mu         0.3      1.65    0.0381      3.22e- 6     26.2 
 4 mu         0.4      1.59    0.148       2.69e- 4     20.7 
 5 mu         0.5      1.22    0.484       5.98e- 3      9.80
 6 mu         0.6      0.972   0.797       1.41e- 2      3.41
 7 mu         0.7      1.02    1.01        4.57e- 4      3.41
 8 mu         0.8      1.18    0.925       3.07e- 6      7.20
 9 mu         0.9      1.25    0.164       4.74e-10     24.1 
10 mu_1       0.1      1.20    0.000304    4.50e-13     24.9 
11 mu_1       0.2      1.54    0.0119      2.07e- 8     26.5 
12 mu_1       0.3      1.69    0.106       9.11e- 6     26.9 
13 mu_1       0.4      1.44    0.303       5.72e- 4     15.9 
14 mu_1       0.5      1.08    0.625       1.18e- 2      7.30
15 mu_1       0.6      0.948   0.901       3.14e- 3      2.93
16 mu_1       0.7      1.05    1.05        8.71e- 5      3.78
17 mu_1       0.8      1.20    0.858       5.11e- 7      8.30
18 mu_1       0.9      1.26    0.124       7.02e-11     26.8 
19 mu_0       0.1      0.571   0.00000627  0            14.3 
20 mu_0       0.2      1.16    0.000876    0            19.1 
21 mu_0       0.3      1.64    0.00907     0            26.0 
22 mu_0       0.4      1.70    0.0738      0            23.9 
23 mu_0       0.5      1.36    0.312       0            13.6 
24 mu_0       0.6      1.01    0.657       0             5.01
25 mu_0       0.7      0.939   0.779       0             3.05
26 mu_0       0.8      1.07    1.00        0             4.80
27 mu_0       0.9      1.20    0.396       0            11.8 
[1] "Total run time was 62.79 seconds"
