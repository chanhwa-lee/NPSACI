
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1217"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  4 14  6  5 10  6  5  7  5  8  7  3  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02542 0.35945 0.59608 1.00000 5.79329 
[1] "event indicator table: "

  0   1 
757 460 
[1] "treatment indicator table: "

  0   1 
437 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 573
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 101.3 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1  5.12 4.34 
 2 mu         0.1   0.2  6.48 5.49 
 3 mu         0.1   0.3  7.13 5.95 
 4 mu         0.1   0.4  7.82 6.50 
 5 mu         0.1   0.5  7.83 6.51 
 6 mu         0.2   0.1  1.43 0.934
 7 mu         0.2   0.2  1.80 1.19 
 8 mu         0.2   0.3  2.02 1.29 
 9 mu         0.2   0.4  2.22 1.40 
10 mu         0.2   0.5  2.23 1.41 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1     13.8         0.0524 0.00000112    1124.  
 2 mu         0.2      3.94        0.428  0.000592       240.  
 3 mu         0.3      1.47        0.827  0.0162          28.6 
 4 mu         0.4      1.10        1.01   0.121            7.09
 5 mu         0.5      1.04        1.03   0.265            2.81
 6 mu         0.6      1.01        1.01   0.517            1.66
 7 mu         0.7      0.987       0.973  0.496            2.06
 8 mu         0.8      0.965       0.966  0.230            2.44
 9 mu         0.9      0.999       0.933  0.0249           3.49
10 mu_1       0.1      6.61        0.166  0.00000705     562.  
11 mu_1       0.2      1.55        0.713  0.00186         60.0 
12 mu_1       0.3      1.05        0.889  0.0342           6.25
13 mu_1       0.4      1.03        0.972  0.192            3.72
14 mu_1       0.5      1.02        1.02   0.370            2.30
15 mu_1       0.6      1.01        0.998  0.524            1.51
16 mu_1       0.7      0.983       0.966  0.507            2.20
17 mu_1       0.8      0.965       0.957  0.163            2.42
18 mu_1       0.9      1.01        0.903  0.0163           3.86
19 mu_0       0.1     14.6         0.0362 0.000000466   1187.  
20 mu_0       0.2      4.54        0.333  0.000274       285.  
21 mu_0       0.3      1.65        0.754  0.00848         38.7 
22 mu_0       0.4      1.14        0.935  0.0738          11.2 
23 mu_0       0.5      1.05        1.01   0.148            3.80
24 mu_0       0.6      1.02        1.04   0.251            1.98
25 mu_0       0.7      0.999       0.990  0.393            1.72
26 mu_0       0.8      0.968       0.958  0.364            2.54
27 mu_0       0.9      0.944       0.909  0.0562           2.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     37.6     0.0000128   5.04e-14   3620.  
 2 mu         0.2     20.6     0.00151     2.94e- 9   1762.  
 3 mu         0.3      8.42    0.0292      1.69e- 6    532.  
 4 mu         0.4      3.26    0.174       1.44e- 4    112.  
 5 mu         0.5      1.49    0.502       4.27e- 3     17.0 
 6 mu         0.6      1.05    0.880       2.18e- 2      5.47
 7 mu         0.7      1.06    1.00        6.18e- 4      2.42
 8 mu         0.8      1.17    1.07        3.16e- 6      4.81
 9 mu         0.9      1.18    0.302       2.25e-10     10.4 
10 mu_1       0.1     30.5     0.0000947   4.75e-13   2785.  
11 mu_1       0.2     10.2     0.00632     1.38e- 8    678.  
12 mu_1       0.3      4.07    0.0623      5.30e- 6    136.  
13 mu_1       0.4      1.86    0.342       3.40e- 4     34.6 
14 mu_1       0.5      1.12    0.695       8.05e- 3      9.36
15 mu_1       0.6      1.00    0.986       6.42e- 3      3.91
16 mu_1       0.7      1.09    1.13        1.56e- 4      2.46
17 mu_1       0.8      1.20    0.966       6.97e- 7      5.46
18 mu_1       0.9      1.17    0.244       5.38e-11     10.9 
19 mu_0       0.1     38.4     0.00000233  0          3713.  
20 mu_0       0.2     23.2     0.000464    0          2033.  
21 mu_0       0.3     10.3     0.0124      0           702.  
22 mu_0       0.4      4.19    0.0678      0           172.  
23 mu_0       0.5      1.86    0.291       0            28.9 
24 mu_0       0.6      1.13    0.573       0             7.82
25 mu_0       0.7      0.982   0.968       0             3.23
26 mu_0       0.8      1.05    1.07        0             3.15
27 mu_0       0.9      1.23    0.431       0             7.10
[1] "Total run time was 107.021 seconds"
