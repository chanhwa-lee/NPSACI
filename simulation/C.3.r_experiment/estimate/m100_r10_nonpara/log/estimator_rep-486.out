
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1191"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  9 10 11  6  3  7  8  8  5  6  6  1  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04779 0.39422 0.62609 1.00000 5.24833 
[1] "event indicator table: "

  0   1 
720 471 
[1] "treatment indicator table: "

  0   1 
385 806 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 574
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 45.48 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 1.02  0.685
 2 mu         0.1   0.2 1.14  0.821
 3 mu         0.1   0.3 1.41  0.978
 4 mu         0.1   0.4 1.49  1.05 
 5 mu         0.1   0.5 1.56  1.12 
 6 mu         0.2   0.1 0.655 0.334
 7 mu         0.2   0.2 0.735 0.400
 8 mu         0.2   0.3 0.883 0.476
 9 mu         0.2   0.4 0.930 0.510
10 mu         0.2   0.5 0.979 0.543
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      2.53        0.0353 0.000000846    199.  
 2 mu         0.2      1.61        0.280  0.000389        97.1 
 3 mu         0.3      1.02        0.665  0.00897         23.0 
 4 mu         0.4      0.962       0.921  0.0670           5.38
 5 mu         0.5      0.982       0.962  0.257            1.88
 6 mu         0.6      0.981       0.986  0.488            1.68
 7 mu         0.7      0.973       0.990  0.451            1.64
 8 mu         0.8      0.971       0.977  0.356            1.53
 9 mu         0.9      0.976       0.992  0.0838           2.18
10 mu_1       0.1      2.67        0.153  0.00000470     199.  
11 mu_1       0.2      1.27        0.572  0.00135         50.3 
12 mu_1       0.3      0.987       0.933  0.0208          10.4 
13 mu_1       0.4      0.987       0.959  0.117            3.35
14 mu_1       0.5      0.991       0.972  0.365            1.75
15 mu_1       0.6      0.981       0.976  0.455            1.74
16 mu_1       0.7      0.974       0.993  0.462            1.58
17 mu_1       0.8      0.976       0.966  0.321            1.56
18 mu_1       0.9      0.979       1.00   0.0619           2.33
19 mu_0       0.1      2.52        0.0232 0.000000409    199.  
20 mu_0       0.2      1.70        0.215  0.000149       109.  
21 mu_0       0.3      1.04        0.615  0.00388         28.4 
22 mu_0       0.4      0.945       0.877  0.0333           6.73
23 mu_0       0.5      0.972       0.969  0.150            2.26
24 mu_0       0.6      0.981       0.990  0.425            1.65
25 mu_0       0.7      0.969       0.959  0.426            1.79
26 mu_0       0.8      0.953       0.966  0.363            1.54
27 mu_0       0.9      0.947       0.923  0.183            1.80
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.93    0.0000759  1.49e-15     89.2 
 2 mu         0.2       2.09    0.00519    3.08e-10     69.5 
 3 mu         0.3       1.85    0.0717     3.49e- 7     35.8 
 4 mu         0.4       1.58    0.314      4.55e- 5     15.8 
 5 mu         0.5       1.33    0.773      1.75e- 3      6.26
 6 mu         0.6       1.12    0.922      2.99e- 2      5.20
 7 mu         0.7       1.01    0.996      5.34e- 2      2.57
 8 mu         0.8       1.16    0.957      6.99e- 4      3.93
 9 mu         0.9       1.34    0.195      1.95e- 7     11.7 
10 mu_1       0.1       2.52    0.000471   1.34e-14     99.1 
11 mu_1       0.2       1.87    0.0205     1.39e- 9     40.4 
12 mu_1       0.3       1.59    0.156      1.05e- 6     23.9 
13 mu_1       0.4       1.41    0.568      1.02e- 4      9.09
14 mu_1       0.5       1.23    0.883      3.15e- 3      6.59
15 mu_1       0.6       1.05    0.882      4.48e- 2      4.56
16 mu_1       0.7       1.00    1.09       1.35e- 2      2.69
17 mu_1       0.8       1.18    0.816      3.06e- 4      4.40
18 mu_1       0.9       1.34    0.150      7.57e- 8     13.0 
19 mu_0       0.1       1.86    0.0000267  0            88.1 
20 mu_0       0.2       2.14    0.00182    0            77.3 
21 mu_0       0.3       1.96    0.0305     0            45.5 
22 mu_0       0.4       1.69    0.173      0            20.6 
23 mu_0       0.5       1.43    0.515      0             7.65
24 mu_0       0.6       1.21    0.999      0             6.16
25 mu_0       0.7       1.04    1.03       0             3.09
26 mu_0       0.8       1.04    1.13       0             2.94
27 mu_0       0.9       1.33    0.515      0             7.66
[1] "Total run time was 48.802 seconds"
