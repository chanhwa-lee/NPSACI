
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1299"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  7  6  3  4  6  2  8  5  8  7  6  5  8 10  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04159 0.41511 0.64559 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
762 537 
[1] "treatment indicator table: "

  0   1 
467 832 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 674
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 70.58 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.193 0.116 
 2 mu         0.1   0.2 0.321 0.108 
 3 mu         0.1   0.3 0.365 0.110 
 4 mu         0.1   0.4 0.398 0.119 
 5 mu         0.1   0.5 0.375 0.102 
 6 mu         0.2   0.1 0.228 0.0890
 7 mu         0.2   0.2 0.364 0.0850
 8 mu         0.2   0.3 0.409 0.0785
 9 mu         0.2   0.4 0.447 0.0927
10 mu         0.2   0.5 0.437 0.0764
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.537       0.0470 0.0000154       9.16
 2 mu         0.2      0.750       0.375  0.00314         5.44
 3 mu         0.3      0.936       0.812  0.0439          6.40
 4 mu         0.4      1.00        0.942  0.160           3.31
 5 mu         0.5      1.01        1.02   0.326           1.77
 6 mu         0.6      1.00        0.989  0.503           1.64
 7 mu         0.7      0.979       0.971  0.466           1.44
 8 mu         0.8      0.935       0.942  0.187           2.11
 9 mu         0.9      0.919       0.782  0.0203          3.79
10 mu_1       0.1      0.718       0.155  0.0000814       5.57
11 mu_1       0.2      0.891       0.625  0.00889         7.16
12 mu_1       0.3      1.00        0.990  0.0852          5.65
13 mu_1       0.4      1.02        1.01   0.229           2.33
14 mu_1       0.5      1.01        1.02   0.337           1.73
15 mu_1       0.6      0.999       0.979  0.547           1.63
16 mu_1       0.7      0.973       0.970  0.399           1.53
17 mu_1       0.8      0.931       0.933  0.164           2.24
18 mu_1       0.9      0.918       0.746  0.0145          3.89
19 mu_0       0.1      0.517       0.0325 0.00000812      9.64
20 mu_0       0.2      0.714       0.317  0.00170         5.01
21 mu_0       0.3      0.907       0.738  0.0262          6.73
22 mu_0       0.4      0.993       0.907  0.114           3.95
23 mu_0       0.5      1.01        1.04   0.246           1.81
24 mu_0       0.6      1.01        1.00   0.394           1.66
25 mu_0       0.7      0.994       0.992  0.555           1.69
26 mu_0       0.8      0.955       0.984  0.280           1.60
27 mu_0       0.9      0.921       0.900  0.0698          2.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.25    0.0000485  3.12e-14     96.2 
 2 mu         0.2       1.75    0.00774    3.23e- 9    118.  
 3 mu         0.3       1.62    0.0939     2.31e- 6     70.1 
 4 mu         0.4       1.44    0.464      9.72e- 5     26.7 
 5 mu         0.5       1.26    0.859      1.77e- 3     10.4 
 6 mu         0.6       1.12    1.06       1.89e- 2      2.89
 7 mu         0.7       1.12    1.08       5.10e- 3      4.57
 8 mu         0.8       1.54    0.569      6.89e- 5     33.9 
 9 mu         0.9       3.57    0.0865     2.70e- 8    198.  
10 mu_1       0.1       2.14    0.000263   2.79e-13    160.  
11 mu_1       0.2       1.75    0.0261     1.44e- 8     98.7 
12 mu_1       0.3       1.49    0.215      7.26e- 6     39.0 
13 mu_1       0.4       1.36    0.742      2.43e- 4     17.9 
14 mu_1       0.5       1.21    1.05       3.54e- 3      7.66
15 mu_1       0.6       1.10    0.932      2.27e- 2      3.17
16 mu_1       0.7       1.14    1.08       1.12e- 3      6.53
17 mu_1       0.8       1.67    0.443      1.48e- 5     42.3 
18 mu_1       0.9       3.83    0.0588     7.49e- 9    220.  
19 mu_0       0.1       1.15    0.0000178  0            89.1 
20 mu_0       0.2       1.75    0.00330    0           123.  
21 mu_0       0.3       1.67    0.0446     0            83.5 
22 mu_0       0.4       1.49    0.313      0            37.1 
23 mu_0       0.5       1.31    0.678      0            13.1 
24 mu_0       0.6       1.15    1.03       0             4.04
25 mu_0       0.7       1.06    1.01       0             3.75
26 mu_0       0.8       1.04    0.919      0             4.23
27 mu_0       0.9       1.20    0.233      0            14.0 
[1] "Total run time was 74.914 seconds"
