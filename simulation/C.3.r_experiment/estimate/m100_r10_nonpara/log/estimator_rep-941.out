
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  6  4  7  9  6  5  8  5  2  9 12  5  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02378 0.36211 0.61069 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
788 496 
[1] "treatment indicator table: "

  0   1 
421 863 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 98.862 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.210 0.183 
 2 mu         0.1   0.2 0.279 0.155 
 3 mu         0.1   0.3 0.269 0.157 
 4 mu         0.1   0.4 0.270 0.158 
 5 mu         0.1   0.5 0.323 0.115 
 6 mu         0.2   0.1 0.220 0.128 
 7 mu         0.2   0.2 0.277 0.110 
 8 mu         0.2   0.3 0.283 0.104 
 9 mu         0.2   0.4 0.287 0.100 
10 mu         0.2   0.5 0.312 0.0794
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.577       0.0471 0.00000000387      6.67
 2 mu         0.2      0.588       0.305  0.0000119          3.51
 3 mu         0.3      0.678       0.506  0.000770           4.14
 4 mu         0.4      0.755       0.711  0.0113             3.08
 5 mu         0.5      0.840       0.832  0.0719             1.81
 6 mu         0.6      0.922       0.946  0.175              1.76
 7 mu         0.7      0.982       0.985  0.280              1.45
 8 mu         0.8      1.04        1.01   0.476              1.93
 9 mu         0.9      1.08        0.980  0.0458             2.84
10 mu_1       0.1      0.543       0.0899 0.0000000252       4.32
11 mu_1       0.2      0.674       0.429  0.0000402          4.80
12 mu_1       0.3      0.737       0.661  0.00175            3.86
13 mu_1       0.4      0.797       0.794  0.0196             2.32
14 mu_1       0.5      0.874       0.896  0.103              1.85
15 mu_1       0.6      0.945       0.954  0.162              1.73
16 mu_1       0.7      0.996       1.01   0.327              1.46
17 mu_1       0.8      1.05        0.998  0.438              1.99
18 mu_1       0.9      1.08        0.950  0.0360             2.97
19 mu_0       0.1      0.581       0.0323 0.00000000149      7.11
20 mu_0       0.2      0.566       0.220  0.00000485         3.43
21 mu_0       0.3      0.653       0.444  0.000351           4.27
22 mu_0       0.4      0.727       0.657  0.00578            3.59
23 mu_0       0.5      0.806       0.766  0.0411             2.27
24 mu_0       0.6      0.888       0.885  0.168              1.79
25 mu_0       0.7      0.948       0.961  0.171              1.53
26 mu_0       0.8      0.992       1.00   0.515              1.68
27 mu_0       0.9      1.06        1.04   0.133              2.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      85.7    0.00000815  1.73e-17   7152.  
 2 mu         0.2      96.5    0.00174     8.05e-12   3915.  
 3 mu         0.3      75.9    0.0237      1.56e- 8   3535.  
 4 mu         0.4      37.7    0.140       3.17e- 6   1757.  
 5 mu         0.5      12.1    0.469       1.83e- 4    481.  
 6 mu         0.6       2.99   0.927       4.68e- 3     81.2 
 7 mu         0.7       1.25   1.02        1.84e- 2      7.41
 8 mu         0.8       1.49   0.775       4.77e- 4     32.3 
 9 mu         0.9       3.09   0.179       6.63e- 7    135.  
10 mu_1       0.1      95.1    0.0000553   1.64e-16   5960.  
11 mu_1       0.2      89.5    0.00785     3.82e-11   4334.  
12 mu_1       0.3      58.1    0.0561      4.95e- 8   2946.  
13 mu_1       0.4      24.0    0.239       7.52e- 6   1098.  
14 mu_1       0.5       6.93   0.593       3.48e- 4    241.  
15 mu_1       0.6       1.96   0.993       7.41e- 3     42.3 
16 mu_1       0.7       1.18   0.956       6.07e- 3      5.93
17 mu_1       0.8       1.60   0.751       1.38e- 4     38.3 
18 mu_1       0.9       3.25   0.130       1.70e- 7    142.  
19 mu_0       0.1      84.6    0.00000277  0          7284.  
20 mu_0       0.2      98.3    0.000434    0          4486.  
21 mu_0       0.3      83.5    0.0100      0          3788.  
22 mu_0       0.4      46.8    0.0707      0          2197.  
23 mu_0       0.5      17.2    0.307       0           722.  
24 mu_0       0.6       4.53   0.706       0           140.  
25 mu_0       0.7       1.42   1.01        0            17.0 
26 mu_0       0.8       1.05   0.786       0             8.51
27 mu_0       0.9       1.67   0.169       0            70.9 
[1] "Total run time was 103.924 seconds"
