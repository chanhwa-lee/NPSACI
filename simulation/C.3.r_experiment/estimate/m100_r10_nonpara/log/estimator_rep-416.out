
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1338"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  2  3  6  4 10 12  9  3  8  3 10 12  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03416 0.33537 0.62629 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
795 543 
[1] "treatment indicator table: "

  0   1 
490 848 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 667
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 237.856 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.518 0.306
 2 mu         0.1   0.2 0.679 0.387
 3 mu         0.1   0.3 0.684 0.410
 4 mu         0.1   0.4 0.710 0.461
 5 mu         0.1   0.5 0.761 0.484
 6 mu         0.2   0.1 0.656 0.366
 7 mu         0.2   0.2 0.857 0.461
 8 mu         0.2   0.3 0.881 0.492
 9 mu         0.2   0.4 0.939 0.555
10 mu         0.2   0.5 1.00  0.581
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.32        0.0316 0.000000136      99.7 
 2 mu         0.2      1.88        0.264  0.000139        121.  
 3 mu         0.3      1.42        0.596  0.00556          48.4 
 4 mu         0.4      1.17        0.978  0.0558           10.1 
 5 mu         0.5      1.09        1.02   0.242             5.71
 6 mu         0.6      1.03        0.998  0.515             2.55
 7 mu         0.7      0.981       0.962  0.436             1.41
 8 mu         0.8      0.938       0.909  0.0902            1.97
 9 mu         0.9      0.943       0.668  0.00224           3.88
10 mu_1       0.1      2.17        0.117  0.000000804     157.  
11 mu_1       0.2      1.83        0.522  0.000417         95.7 
12 mu_1       0.3      1.31        0.843  0.0114           25.5 
13 mu_1       0.4      1.14        1.02   0.0881            8.28
14 mu_1       0.5      1.07        1.03   0.315             4.67
15 mu_1       0.6      1.01        0.989  0.609             2.03
16 mu_1       0.7      0.973       0.937  0.362             1.47
17 mu_1       0.8      0.933       0.923  0.0672            2.15
18 mu_1       0.9      0.949       0.633  0.00150           4.19
19 mu_0       0.1      1.23        0.0207 0.0000000622     93.3 
20 mu_0       0.2      1.89        0.197  0.0000691       128.  
21 mu_0       0.3      1.47        0.502  0.00305          58.1 
22 mu_0       0.4      1.19        0.881  0.0342           13.9 
23 mu_0       0.5      1.10        1.04   0.170             6.75
24 mu_0       0.6      1.04        1.02   0.375             3.32
25 mu_0       0.7      0.999       0.981  0.566             1.50
26 mu_0       0.8      0.961       0.937  0.182             1.69
27 mu_0       0.9      0.890       0.794  0.00883           3.06
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     29.3      0.0000498  1.60e-15   2632.  
 2 mu         0.2     40.6      0.0120     3.32e-10   3599.  
 3 mu         0.3     19.7      0.104      3.76e- 7   1639.  
 4 mu         0.4      5.84     0.369      4.89e- 5    385.  
 5 mu         0.5      1.79     0.703      1.89e- 3     48.8 
 6 mu         0.6      1.04     0.895      3.22e- 2      4.89
 7 mu         0.7      1.07     0.954      1.44e- 3      8.79
 8 mu         0.8      1.46     0.669      7.35e- 6     17.7 
 9 mu         0.9      1.80     0.0958     6.39e-10     29.1 
10 mu_1       0.1     49.1      0.000270   1.44e-14   4387.  
11 mu_1       0.2     34.5      0.0371     1.49e- 9   2999.  
12 mu_1       0.3     11.8      0.236      1.13e- 6    911.  
13 mu_1       0.4      3.25     0.603      1.10e- 4    160.  
14 mu_1       0.5      1.30     0.822      3.40e- 3     16.3 
15 mu_1       0.6      0.967    0.829      1.49e- 2      4.53
16 mu_1       0.7      1.10     0.888      3.62e- 4      9.77
17 mu_1       0.8      1.53     0.545      1.62e- 6     19.7 
18 mu_1       0.9      1.82     0.0642     1.25e-10     29.1 
19 mu_0       0.1     27.1      0.0000253  0          2437.  
20 mu_0       0.2     42.2      0.00502    0          3749.  
21 mu_0       0.3     23.1      0.0500     0          1951.  
22 mu_0       0.4      7.57     0.205      0           534.  
23 mu_0       0.5      2.28     0.517      0            81.3 
24 mu_0       0.6      1.14     0.865      0             6.18
25 mu_0       0.7      0.972    0.892      0             6.51
26 mu_0       0.8      1.19     0.817      0            12.5 
27 mu_0       0.9      1.68     0.229      0            32.3 
[1] "Total run time was 244.118 seconds"
