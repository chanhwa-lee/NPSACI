
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1281"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  5  9  9  5  6  4  3  8  2  8  8  3 11  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02319 0.29808 0.58636 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
751 530 
[1] "treatment indicator table: "

  0   1 
471 810 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 694
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 94.072 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.249 0.0749
 2 mu         0.1   0.2 0.319 0.0718
 3 mu         0.1   0.3 0.373 0.0689
 4 mu         0.1   0.4 0.440 0.0899
 5 mu         0.1   0.5 0.445 0.105 
 6 mu         0.2   0.1 0.295 0.0702
 7 mu         0.2   0.2 0.376 0.0590
 8 mu         0.2   0.3 0.412 0.0656
 9 mu         0.2   0.4 0.486 0.0778
10 mu         0.2   0.5 0.517 0.0842
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.713       0.0793 0.00000121       4.88
 2 mu         0.2      0.837       0.430  0.000403        10.4 
 3 mu         0.3      0.892       0.645  0.00949         10.8 
 4 mu         0.4      0.924       0.823  0.0722           6.71
 5 mu         0.5      0.958       0.921  0.282            2.96
 6 mu         0.6      0.991       0.973  0.518            1.82
 7 mu         0.7      1.02        1.02   0.402            2.75
 8 mu         0.8      1.05        0.974  0.174            4.46
 9 mu         0.9      1.03        0.797  0.0169          13.3 
10 mu_1       0.1      0.850       0.217  0.00000790       9.31
11 mu_1       0.2      0.904       0.573  0.00133         13.1 
12 mu_1       0.3      0.915       0.802  0.0213           9.17
13 mu_1       0.4      0.939       0.895  0.123            4.47
14 mu_1       0.5      0.974       0.969  0.393            1.80
15 mu_1       0.6      1.00        0.973  0.506            1.86
16 mu_1       0.7      1.02        1.04   0.366            3.05
17 mu_1       0.8      1.04        0.956  0.152            5.11
18 mu_1       0.9      1.01        0.760  0.0130          13.9 
19 mu_0       0.1      0.698       0.0607 0.000000468      4.74
20 mu_0       0.2      0.820       0.344  0.000170         9.72
21 mu_0       0.3      0.882       0.584  0.00445         11.4 
22 mu_0       0.4      0.913       0.759  0.0382           8.21
23 mu_0       0.5      0.943       0.882  0.171            4.11
24 mu_0       0.6      0.975       0.966  0.481            1.77
25 mu_0       0.7      1.01        1.00   0.455            2.05
26 mu_0       0.8      1.07        1.05   0.261            3.95
27 mu_0       0.9      1.19        1.01   0.0494           7.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      26.8     0.0000666  4.31e-17   1948.  
 2 mu         0.2      23.5     0.00884    1.13e-11   1518.  
 3 mu         0.3      14.6     0.125      1.67e- 8    783.  
 4 mu         0.4       7.40    0.451      2.96e- 6    304.  
 5 mu         0.5       3.37    0.942      1.65e- 4     99.6 
 6 mu         0.6       1.73    1.20       4.38e- 3     30.1 
 7 mu         0.7       1.48    1.22       1.73e- 2      8.59
 8 mu         0.8       2.19    0.673      2.26e- 4     28.9 
 9 mu         0.9       3.61    0.0733     6.29e- 8     66.7 
10 mu_1       0.1      30.8     0.000376   0          2165.  
11 mu_1       0.2      16.2     0.0286     0           844.  
12 mu_1       0.3       7.88    0.206      0           290.  
13 mu_1       0.4       3.71    0.603      0           127.  
14 mu_1       0.5       1.91    1.13       0            44.2 
15 mu_1       0.6       1.36    1.19       0            11.1 
16 mu_1       0.7       1.54    1.13       0            10.9 
17 mu_1       0.8       2.41    0.533      0            33.5 
18 mu_1       0.9       3.80    0.0461     0            68.8 
19 mu_0       0.1      26.3     0.0000318  0          1924.  
20 mu_0       0.2      25.4     0.00373    0          1687.  
21 mu_0       0.3      17.5     0.0667     0           994.  
22 mu_0       0.4       9.87    0.286      0           450.  
23 mu_0       0.5       4.83    0.680      0           157.  
24 mu_0       0.6       2.28    1.05       0            58.5 
25 mu_0       0.7       1.34    1.17       0            14.2 
26 mu_0       0.8       1.31    0.992      0            10.3 
27 mu_0       0.9       1.94    0.153      0            47.6 
[1] "Total run time was 99.256 seconds"
