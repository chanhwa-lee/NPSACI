
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1264"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 12  6  7  7  4  4  5  6  4  5  3  8 10  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03229 0.32003 0.61075 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
708 556 
[1] "treatment indicator table: "

  0   1 
498 766 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.766 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.320 0.108 
 2 mu         0.1   0.2 0.349 0.0964
 3 mu         0.1   0.3 0.328 0.0789
 4 mu         0.1   0.4 0.323 0.0752
 5 mu         0.1   0.5 0.315 0.0756
 6 mu         0.2   0.1 0.363 0.0873
 7 mu         0.2   0.2 0.426 0.0846
 8 mu         0.2   0.3 0.424 0.0706
 9 mu         0.2   0.4 0.443 0.0657
10 mu         0.2   0.5 0.454 0.0682
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.467       0.0642 0.000000178       7.11
 2 mu         0.2      0.734       0.346  0.000293          6.09
 3 mu         0.3      0.873       0.637  0.0136            3.65
 4 mu         0.4      0.923       0.808  0.134             2.27
 5 mu         0.5      0.947       0.916  0.472             1.70
 6 mu         0.6      0.982       0.984  0.587             1.39
 7 mu         0.7      1.02        1.04   0.453             1.67
 8 mu         0.8      1.04        0.983  0.212             2.04
 9 mu         0.9      1.00        0.749  0.00847           3.97
10 mu_1       0.1      0.714       0.220  0.00000107        7.05
11 mu_1       0.2      0.857       0.628  0.000882          5.40
12 mu_1       0.3      0.922       0.792  0.0274            3.04
13 mu_1       0.4      0.943       0.890  0.204             1.99
14 mu_1       0.5      0.964       0.955  0.516             1.64
15 mu_1       0.6      0.998       1.00   0.573             1.41
16 mu_1       0.7      1.03        1.04   0.442             1.73
17 mu_1       0.8      1.04        0.981  0.168             2.10
18 mu_1       0.9      0.998       0.689  0.00618           4.31
19 mu_0       0.1      0.440       0.0475 0.0000000789      7.79
20 mu_0       0.2      0.703       0.283  0.000145          6.26
21 mu_0       0.3      0.852       0.530  0.00767           4.04
22 mu_0       0.4      0.910       0.739  0.0867            2.61
23 mu_0       0.5      0.930       0.866  0.298             1.86
24 mu_0       0.6      0.959       0.942  0.556             1.53
25 mu_0       0.7      0.999       1.00   0.480             1.57
26 mu_0       0.8      1.04        1.02   0.343             1.81
27 mu_0       0.9      1.02        0.936  0.0291            2.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.86     0.0000687  2.85e-14    328.  
 2 mu         0.2      3.61     0.00753    2.95e- 9    200.  
 3 mu         0.3      1.67     0.0954     2.22e- 6     53.0 
 4 mu         0.4      1.03     0.306      2.17e- 4     10.9 
 5 mu         0.5      0.942    0.737      6.70e- 3      4.29
 6 mu         0.6      1.00     1.04       7.40e- 3      2.14
 7 mu         0.7      1.09     1.16       9.48e- 5      4.04
 8 mu         0.8      1.18     0.746      1.44e- 7     15.2 
 9 mu         0.9      1.23     0.0805     1.56e-12     25.0 
10 mu_1       0.1      5.88     0.000426   2.55e-13    365.  
11 mu_1       0.2      2.58     0.0249     1.32e- 8    111.  
12 mu_1       0.3      1.22     0.203      6.63e- 6     19.6 
13 mu_1       0.4      0.931    0.557      4.86e- 4      7.78
14 mu_1       0.5      0.940    0.868      1.20e- 2      2.71
15 mu_1       0.6      1.02     1.10       1.37e- 3      2.08
16 mu_1       0.7      1.11     1.14       1.60e- 5      5.13
17 mu_1       0.8      1.20     0.636      2.69e- 8     16.9 
18 mu_1       0.9      1.22     0.0626     2.60e-13     24.7 
19 mu_0       0.1      4.75     0.0000238  0           324.  
20 mu_0       0.2      3.87     0.00308    0           222.  
21 mu_0       0.3      1.87     0.0390     0            67.3 
22 mu_0       0.4      1.09     0.165      0            13.0 
23 mu_0       0.5      0.943    0.508      0             6.14
24 mu_0       0.6      0.970    0.954      0             2.38
25 mu_0       0.7      1.05     1.11       0             2.30
26 mu_0       0.8      1.12     1.16       0             8.44
27 mu_0       0.9      1.27     0.195      0            27.8 
[1] "Total run time was 65.021 seconds"
