
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1276"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10  4  8  3  2  8  8  3  6  6  8  7 14  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03575 0.29231 0.61207 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
749 527 
[1] "treatment indicator table: "

  0   1 
448 828 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 49.791 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.644 0.242
 2 mu         0.1   0.2 0.905 0.304
 3 mu         0.1   0.3 0.955 0.334
 4 mu         0.1   0.4 1.01  0.359
 5 mu         0.1   0.5 1.10  0.390
 6 mu         0.2   0.1 0.539 0.148
 7 mu         0.2   0.2 0.741 0.197
 8 mu         0.2   0.3 0.787 0.202
 9 mu         0.2   0.4 0.820 0.209
10 mu         0.2   0.5 0.927 0.236
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.72        0.0243 0.00000137      38.8 
 2 mu         0.2      1.33        0.218  0.000408        21.6 
 3 mu         0.3      1.01        0.641  0.00864          6.84
 4 mu         0.4      0.949       0.855  0.0600           3.41
 5 mu         0.5      0.970       0.967  0.222            2.13
 6 mu         0.6      0.992       0.993  0.521            1.46
 7 mu         0.7      0.990       0.985  0.526            1.73
 8 mu         0.8      0.970       0.952  0.199            2.10
 9 mu         0.9      0.960       0.838  0.0140           5.49
10 mu_1       0.1      1.50        0.0910 0.00000885      39.3 
11 mu_1       0.2      1.00        0.427  0.00132         12.1 
12 mu_1       0.3      0.901       0.844  0.0189           4.43
13 mu_1       0.4      0.935       0.901  0.101            2.61
14 mu_1       0.5      0.973       0.988  0.307            1.87
15 mu_1       0.6      0.992       1.00   0.550            1.47
16 mu_1       0.7      0.986       0.976  0.402            1.77
17 mu_1       0.8      0.966       0.947  0.161            2.32
18 mu_1       0.9      0.959       0.810  0.0102           5.71
19 mu_0       0.1      1.74        0.0169 0.000000541     40.0 
20 mu_0       0.2      1.41        0.173  0.000179        23.9 
21 mu_0       0.3      1.06        0.567  0.00424          9.30
22 mu_0       0.4      0.959       0.777  0.0331           4.89
23 mu_0       0.5      0.967       0.934  0.136            2.70
24 mu_0       0.6      0.991       1.01   0.371            1.73
25 mu_0       0.7      1.00        0.994  0.561            1.64
26 mu_0       0.8      0.986       0.964  0.354            1.89
27 mu_0       0.9      0.963       0.917  0.0482           3.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.719    0.000102   2.05e-17     28.2 
 2 mu         0.2      1.49     0.00591    2.15e-11     32.9 
 3 mu         0.3      1.76     0.0682     7.14e- 8     44.1 
 4 mu         0.4      1.48     0.258      2.25e- 5     25.0 
 5 mu         0.5      1.16     0.654      1.83e- 3      7.14
 6 mu         0.6      1.00     0.855      2.71e- 2      6.52
 7 mu         0.7      1.09     1.01       6.55e- 3      4.97
 8 mu         0.8      1.65     0.931      7.53e- 5     23.6 
 9 mu         0.9      4.51     0.186      2.62e- 8    249.  
10 mu_1       0.1      1.35     0.000629   2.05e-16     35.3 
11 mu_1       0.2      1.82     0.0228     1.07e-10     45.8 
12 mu_1       0.3      1.69     0.153      2.38e- 7     40.8 
13 mu_1       0.4      1.30     0.460      5.63e- 5     17.4 
14 mu_1       0.5      1.05     0.724      3.44e- 3      5.23
15 mu_1       0.6      0.977    0.859      4.24e- 2      6.52
16 mu_1       0.7      1.13     1.03       1.87e- 3      5.77
17 mu_1       0.8      1.78     0.810      1.88e- 5     29.5 
18 mu_1       0.9      4.85     0.140      5.82e- 9    277.  
19 mu_0       0.1      0.648    0.0000316  0            27.4 
20 mu_0       0.2      1.41     0.00190    0            29.7 
21 mu_0       0.3      1.80     0.0254     0            45.5 
22 mu_0       0.4      1.61     0.114      0            30.1 
23 mu_0       0.5      1.27     0.382      0            10.3 
24 mu_0       0.6      1.05     0.812      0             6.52
25 mu_0       0.7      0.982    0.830      0             5.54
26 mu_0       0.8      1.15     0.897      0             7.84
27 mu_0       0.9      1.43     0.262      0            16.3 
[1] "Total run time was 53.189 seconds"
