
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1294"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  6  6  5  5  9  9  7  5  4 10  7  8  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02145 0.30696 0.58578 0.96719 4.18728 
[1] "event indicator table: "

  0   1 
768 526 
[1] "treatment indicator table: "

  0   1 
511 783 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 92.535 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.508 0.329
 2 mu         0.1   0.2 0.643 0.366
 3 mu         0.1   0.3 0.664 0.391
 4 mu         0.1   0.4 0.717 0.399
 5 mu         0.1   0.5 0.726 0.409
 6 mu         0.2   0.1 0.444 0.173
 7 mu         0.2   0.2 0.557 0.190
 8 mu         0.2   0.3 0.602 0.204
 9 mu         0.2   0.4 0.649 0.207
10 mu         0.2   0.5 0.672 0.212
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.06       0.0151  0.00000000553     61.8 
 2 mu         0.2      1.02       0.188   0.0000226         29.8 
 3 mu         0.3      0.940      0.506   0.00201           13.5 
 4 mu         0.4      0.923      0.825   0.0345             9.21
 5 mu         0.5      0.908      0.895   0.207              3.50
 6 mu         0.6      0.919      0.926   0.419              1.87
 7 mu         0.7      0.954      0.953   0.103              2.79
 8 mu         0.8      0.957      0.941   0.00969            4.30
 9 mu         0.9      0.880      0.578   0.0000764          5.14
10 mu_1       0.1      1.32       0.0550  0.0000000379      61.8 
11 mu_1       0.2      1.02       0.385   0.0000774         15.1 
12 mu_1       0.3      0.961      0.731   0.00459           13.3 
13 mu_1       0.4      0.929      0.914   0.0594             6.93
14 mu_1       0.5      0.912      0.909   0.287              2.27
15 mu_1       0.6      0.928      0.922   0.314              2.07
16 mu_1       0.7      0.960      0.968   0.0704             3.12
17 mu_1       0.8      0.953      0.896   0.00614            4.35
18 mu_1       0.9      0.872      0.520   0.0000445          5.58
19 mu_0       0.1      1.03       0.00983 0.00000000194     61.8 
20 mu_0       0.2      1.01       0.134   0.00000889        33.5 
21 mu_0       0.3      0.932      0.397   0.000898          13.6 
22 mu_0       0.4      0.918      0.758   0.0179            10.7 
23 mu_0       0.5      0.904      0.865   0.127              4.73
24 mu_0       0.6      0.906      0.912   0.399              2.43
25 mu_0       0.7      0.940      0.943   0.179              2.40
26 mu_0       0.8      0.976      1.00    0.0239             4.08
27 mu_0       0.9      0.958      0.933   0.000364           4.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      26.8     0.0000900  3.91e-14    1114. 
 2 mu         0.2      37.6     0.0102     4.56e- 9    1523. 
 3 mu         0.3      23.9     0.110      3.93e- 6     791. 
 4 mu         0.4      11.3     0.496      4.48e- 4     301. 
 5 mu         0.5       5.09    1.06       1.64e- 2     126. 
 6 mu         0.6       2.74    1.17       1.04e- 1      47.7
 7 mu         0.7       2.94    1.24       7.15e- 3      55.6
 8 mu         0.8       6.59    0.545      9.08e- 5     314. 
 9 mu         0.9      14.9     0.0445     3.95e- 9    1033. 
10 mu_1       0.1      47.0     0.000520   3.69e-13    1857. 
11 mu_1       0.2      34.3     0.0325     2.15e- 8    1270. 
12 mu_1       0.3      16.0     0.231      1.24e- 5     439. 
13 mu_1       0.4       6.78    0.737      1.06e- 3     151. 
14 mu_1       0.5       3.24    1.13       3.13e- 2      63.2
15 mu_1       0.6       2.23    1.33       5.12e- 2      19.9
16 mu_1       0.7       3.18    1.16       3.00e- 3      74.8
17 mu_1       0.8       7.32    0.413      1.89e- 5     369. 
18 mu_1       0.9      15.5     0.0273     7.31e-10    1081. 
19 mu_0       0.1      24.5     0.0000372  0           1032. 
20 mu_0       0.2      38.4     0.00425    0           1587. 
21 mu_0       0.3      27.3     0.0563     0            941. 
22 mu_0       0.4      14.3     0.317      0            418. 
23 mu_0       0.5       6.94    0.787      0            189. 
24 mu_0       0.6       3.50    1.19       0             89.4
25 mu_0       0.7       2.38    1.25       0             28.9
26 mu_0       0.8       3.67    0.981      0             92.3
27 mu_0       0.9      10.4     0.189      0            608. 
[1] "Total run time was 98.101 seconds"
