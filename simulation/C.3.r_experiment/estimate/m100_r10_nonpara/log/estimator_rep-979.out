
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1211"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
12  9  7  3  4  5  3  7  4  6 10  7  5  8  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02106 0.37057 0.59826 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
709 502 
[1] "treatment indicator table: "

  0   1 
469 742 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.951 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.253 0.137
 2 mu         0.1   0.2 0.318 0.138
 3 mu         0.1   0.3 0.351 0.133
 4 mu         0.1   0.4 0.342 0.144
 5 mu         0.1   0.5 0.407 0.125
 6 mu         0.2   0.1 0.299 0.132
 7 mu         0.2   0.2 0.373 0.132
 8 mu         0.2   0.3 0.416 0.127
 9 mu         0.2   0.4 0.421 0.138
10 mu         0.2   0.5 0.494 0.119
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.585       0.0215  3.86e-12     11.4 
 2 mu         0.2      0.773       0.213   4.83e- 8      9.90
 3 mu         0.3      0.796       0.655   1.04e- 5      4.85
 4 mu         0.4      0.866       0.876   4.16e- 4      2.09
 5 mu         0.5      0.957       0.962   6.33e- 3      3.40
 6 mu         0.6      1.02        1.01    5.03e- 2      3.37
 7 mu         0.7      1.07        1.04    4.58e- 2      3.46
 8 mu         0.8      1.15        0.980   2.58e- 3      6.44
 9 mu         0.9      1.34        0.732   6.46e- 6     11.8 
10 mu_1       0.1      0.865       0.0981  3.19e-11     15.2 
11 mu_1       0.2      0.820       0.412   2.01e- 7      6.90
12 mu_1       0.3      0.819       0.774   2.91e- 5      3.60
13 mu_1       0.4      0.906       0.913   8.75e- 4      2.82
14 mu_1       0.5      0.987       0.964   1.07e- 2      3.71
15 mu_1       0.6      1.04        1.03    7.16e- 2      3.12
16 mu_1       0.7      1.09        1.05    2.87e- 2      4.22
17 mu_1       0.8      1.17        0.955   1.49e- 3      7.06
18 mu_1       0.9      1.35        0.666   3.36e- 6     12.7 
19 mu_0       0.1      0.554       0.0137  7.39e-13     11.0 
20 mu_0       0.2      0.762       0.152   1.01e- 8     10.7 
21 mu_0       0.3      0.786       0.520   2.43e- 6      5.39
22 mu_0       0.4      0.839       0.801   1.09e- 4      2.35
23 mu_0       0.5      0.927       0.910   1.93e- 3      3.10
24 mu_0       0.6      0.995       0.994   1.83e- 2      3.76
25 mu_0       0.7      1.04        1.02    8.55e- 2      2.87
26 mu_0       0.8      1.07        1.05    6.94e- 3      3.96
27 mu_0       0.9      1.19        0.948   3.43e- 5      9.04
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      35.3     0.000173   1.64e-16    1593. 
 2 mu         0.2      31.3     0.0155     2.15e-11    2177. 
 3 mu         0.3      13.9     0.0969     2.12e- 8     992. 
 4 mu         0.4       4.87    0.420      2.82e- 6     233. 
 5 mu         0.5       2.43    0.948      1.25e- 4      61.4
 6 mu         0.6       2.26    1.08       2.78e- 3      33.3
 7 mu         0.7       3.94    1.17       6.29e- 5     123. 
 8 mu         0.8       7.36    0.784      8.34e- 8     311. 
 9 mu         0.9       8.28    0.100      8.05e-13     360. 
10 mu_1       0.1      41.7     0.00121    1.64e-15    2655. 
11 mu_1       0.2      22.8     0.0520     1.08e-10    1815. 
12 mu_1       0.3       8.03    0.233      7.07e- 8     551. 
13 mu_1       0.4       3.20    0.668      7.05e- 6      97.0
14 mu_1       0.5       2.15    0.960      2.50e- 4      54.6
15 mu_1       0.6       2.45    1.08       1.08e- 3      45.8
16 mu_1       0.7       4.48    1.16       9.46e- 6     153. 
17 mu_1       0.8       7.80    0.649      1.10e- 8     337. 
18 mu_1       0.9       8.11    0.0621     9.42e-14     346. 
19 mu_0       0.1      34.6     0.0000530  0           1475. 
20 mu_0       0.2      33.4     0.00485    0           2268. 
21 mu_0       0.3      16.4     0.0417     0           1180. 
22 mu_0       0.4       5.98    0.197      0            323. 
23 mu_0       0.5       2.72    0.687      0             68.2
24 mu_0       0.6       1.98    1.04       0             39.4
25 mu_0       0.7       2.65    1.02       0             71.6
26 mu_0       0.8       5.60    1.02       0            207. 
27 mu_0       0.9       9.88    0.260      0            480. 
[1] "Total run time was 61.274 seconds"
