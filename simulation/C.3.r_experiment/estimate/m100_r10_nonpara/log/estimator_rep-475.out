
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1232"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  9  5  8  6  5  8  6  2  5  8  6  6  3 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03103 0.35024 0.58359 0.95379 6.00000 
[1] "event indicator table: "

  0   1 
727 505 
[1] "treatment indicator table: "

  0   1 
467 765 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.716 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.417 0.104
 2 mu         0.1   0.2 0.457 0.106
 3 mu         0.1   0.3 0.449 0.107
 4 mu         0.1   0.4 0.484 0.114
 5 mu         0.1   0.5 0.485 0.119
 6 mu         0.2   0.1 0.428 0.101
 7 mu         0.2   0.2 0.491 0.108
 8 mu         0.2   0.3 0.490 0.107
 9 mu         0.2   0.4 0.556 0.108
10 mu         0.2   0.5 0.566 0.110
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.825        0.217 0.000000686      8.80
 2 mu         0.2      0.962        0.674 0.000577         8.13
 3 mu         0.3      0.967        0.856 0.0188           4.99
 4 mu         0.4      0.980        0.938 0.151            2.81
 5 mu         0.5      0.998        0.985 0.475            1.98
 6 mu         0.6      1.01         1.04  0.531            1.49
 7 mu         0.7      1.01         1.02  0.458            1.70
 8 mu         0.8      1.00         0.977 0.352            2.04
 9 mu         0.9      0.998        0.894 0.0725           3.41
10 mu_1       0.1      1.02         0.578 0.00000398       9.08
11 mu_1       0.2      0.976        0.794 0.00169          7.36
12 mu_1       0.3      0.971        0.912 0.0370           3.82
13 mu_1       0.4      0.989        0.958 0.228            2.42
14 mu_1       0.5      1.00         0.972 0.449            1.80
15 mu_1       0.6      1.01         1.04  0.499            1.49
16 mu_1       0.7      1.01         1.01  0.458            1.73
17 mu_1       0.8      1.00         0.990 0.305            2.08
18 mu_1       0.9      0.998        0.852 0.0555           3.48
19 mu_0       0.1      0.804        0.174 0.000000319      8.85
20 mu_0       0.2      0.959        0.598 0.000300         8.32
21 mu_0       0.3      0.965        0.797 0.0109           5.49
22 mu_0       0.4      0.974        0.952 0.0995           3.07
23 mu_0       0.5      0.992        0.960 0.296            2.15
24 mu_0       0.6      1.01         1.00  0.457            1.58
25 mu_0       0.7      1.01         1.04  0.439            1.63
26 mu_0       0.8      1.02         1.02  0.283            1.87
27 mu_0       0.9      1.00         0.977 0.201            2.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03     0.0000496  8.43e-15     42.3 
 2 mu         0.2      1.51     0.00561    9.82e-10     44.9 
 3 mu         0.3      1.47     0.0821     8.47e- 7     30.7 
 4 mu         0.4      1.30     0.465      9.65e- 5      9.61
 5 mu         0.5      1.17     0.939      3.57e- 3      5.10
 6 mu         0.6      1.06     1.01       1.51e- 2      2.79
 7 mu         0.7      1.02     0.951      5.58e- 4      4.28
 8 mu         0.8      1.09     0.791      4.91e- 6      5.48
 9 mu         0.9      1.22     0.0749     5.24e-10     15.6 
10 mu_1       0.1      1.57     0.000381   7.96e-14     34.6 
11 mu_1       0.2      1.62     0.0173     4.64e- 9     47.3 
12 mu_1       0.3      1.39     0.203      2.66e- 6     21.5 
13 mu_1       0.4      1.22     0.657      2.28e- 4      6.70
14 mu_1       0.5      1.11     0.975      6.75e- 3      4.30
15 mu_1       0.6      1.03     0.970      1.93e- 3      2.90
16 mu_1       0.7      1.03     0.957      6.13e- 5      4.75
17 mu_1       0.8      1.12     0.617      4.72e- 7      5.33
18 mu_1       0.9      1.23     0.0523     1.15e-10     16.4 
19 mu_0       0.1      0.971    0.0000149  0            43.4 
20 mu_0       0.2      1.48     0.00248    0            44.4 
21 mu_0       0.3      1.51     0.0415     0            34.6 
22 mu_0       0.4      1.36     0.300      0            12.6 
23 mu_0       0.5      1.22     0.800      0             5.91
24 mu_0       0.6      1.10     0.949      0             3.23
25 mu_0       0.7      1.01     0.879      0             3.17
26 mu_0       0.8      1.01     0.912      0             6.09
27 mu_0       0.9      1.11     0.231      0             8.68
[1] "Total run time was 64.888 seconds"
