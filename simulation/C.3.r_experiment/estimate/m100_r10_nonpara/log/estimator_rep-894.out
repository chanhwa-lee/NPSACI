
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1276"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  2  8  7  9  7  5  6  5  6  8  4  6 12  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04735 0.42223 0.67401 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
778 498 
[1] "treatment indicator table: "

  0   1 
391 885 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.493 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.231 0.0621
 2 mu         0.1   0.2 0.257 0.0716
 3 mu         0.1   0.3 0.258 0.0777
 4 mu         0.1   0.4 0.270 0.0870
 5 mu         0.1   0.5 0.300 0.0845
 6 mu         0.2   0.1 0.278 0.0596
 7 mu         0.2   0.2 0.358 0.0887
 8 mu         0.2   0.3 0.394 0.0927
 9 mu         0.2   0.4 0.415 0.0964
10 mu         0.2   0.5 0.455 0.0945
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.485       0.0201  4.70e-10      7.18
 2 mu         0.2      0.822       0.273   3.80e- 6      9.40
 3 mu         0.3      0.943       0.659   4.99e- 4      5.08
 4 mu         0.4      1.01        0.986   1.12e- 2      3.16
 5 mu         0.5      1.03        1.04    8.68e- 2      2.15
 6 mu         0.6      1.03        1.01    3.14e- 1      1.95
 7 mu         0.7      1.00        1.02    2.74e- 1      1.57
 8 mu         0.8      0.988       0.947   4.01e- 2      1.88
 9 mu         0.9      1.05        1.05    7.80e- 4      3.97
10 mu_1       0.1      0.895       0.0825  3.29e- 9     11.2 
11 mu_1       0.2      0.979       0.511   1.33e- 5      8.06
12 mu_1       0.3      0.999       0.879   1.16e- 3      3.75
13 mu_1       0.4      1.02        1.01    1.96e- 2      2.70
14 mu_1       0.5      1.03        1.02    1.22e- 1      1.89
15 mu_1       0.6      1.02        1.02    3.75e- 1      1.90
16 mu_1       0.7      0.997       0.992   2.06e- 1      1.59
17 mu_1       0.8      0.989       0.956   2.79e- 2      1.91
18 mu_1       0.9      1.06        1.04    5.00e- 4      4.34
19 mu_0       0.1      0.440       0.0138  1.57e-10      6.91
20 mu_0       0.2      0.783       0.201   1.42e- 6      9.73
21 mu_0       0.3      0.918       0.565   2.13e- 4      5.74
22 mu_0       0.4      0.996       0.947   5.56e- 3      3.46
23 mu_0       0.5      1.04        1.02    5.13e- 2      2.48
24 mu_0       0.6      1.04        1.04    2.24e- 1      2.02
25 mu_0       0.7      1.02        1.02    4.35e- 1      1.75
26 mu_0       0.8      0.983       0.978   8.88e- 2      1.78
27 mu_0       0.9      0.963       0.877   3.29e- 3      2.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.939  0.00000727   2.01e-18     35.4 
 2 mu         0.2      1.94   0.00104      1.05e-12     49.0 
 3 mu         0.3      2.21   0.0203       2.34e- 9     33.2 
 4 mu         0.4      2.01   0.160        5.53e- 7     24.2 
 5 mu         0.5      1.74   0.581        3.84e- 5     25.4 
 6 mu         0.6      1.42   0.876        1.23e- 3     16.9 
 7 mu         0.7      1.25   1.08         2.56e- 3      5.44
 8 mu         0.8      1.35   0.957        1.50e- 5      8.04
 9 mu         0.9      1.49   0.393        1.46e- 9     12.9 
10 mu_1       0.1      1.99   0.0000499    2.01e-17     64.3 
11 mu_1       0.2      2.38   0.00399      5.27e-12     44.6 
12 mu_1       0.3      2.13   0.0481       7.80e- 9     30.1 
13 mu_1       0.4      1.81   0.295        1.38e- 6     21.1 
14 mu_1       0.5      1.56   0.650        7.68e- 5     25.4 
15 mu_1       0.6      1.31   0.899        2.04e- 3     14.1 
16 mu_1       0.7      1.22   1.05         8.13e- 4      6.36
17 mu_1       0.8      1.37   0.913        4.16e- 6      8.23
18 mu_1       0.9      1.49   0.280        3.61e-10     13.5 
19 mu_0       0.1      0.823  0.000000511  0            32.2 
20 mu_0       0.2      1.83   0.000327     0            50.1 
21 mu_0       0.3      2.25   0.00939      0            38.8 
22 mu_0       0.4      2.15   0.0782       0            28.3 
23 mu_0       0.5      1.91   0.282        0            25.4 
24 mu_0       0.6      1.59   0.755        0            21.1 
25 mu_0       0.7      1.30   1.15         0             7.40
26 mu_0       0.8      1.28   0.936        0             7.31
27 mu_0       0.9      1.46   0.385        0            10.6 
[1] "Total run time was 49.831 seconds"
