
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1276"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  6  9  8  5  9  4  7  6  1  6  7  7  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03376 0.35887 0.63515 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
764 512 
[1] "treatment indicator table: "

  0   1 
488 788 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 667
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 78.309 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.410 0.0996
 2 mu         0.1   0.2 0.479 0.121 
 3 mu         0.1   0.3 0.599 0.138 
 4 mu         0.1   0.4 0.633 0.138 
 5 mu         0.1   0.5 0.661 0.143 
 6 mu         0.2   0.1 0.351 0.0589
 7 mu         0.2   0.2 0.424 0.0743
 8 mu         0.2   0.3 0.526 0.0837
 9 mu         0.2   0.4 0.568 0.0790
10 mu         0.2   0.5 0.588 0.0813
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.907        0.200 0.00000198      12.7 
 2 mu         0.2      0.968        0.629 0.000926         4.74
 3 mu         0.3      0.935        0.855 0.0223           2.78
 4 mu         0.4      0.947        0.915 0.148            2.11
 5 mu         0.5      0.990        0.962 0.448            1.64
 6 mu         0.6      1.02         1.01  0.558            1.53
 7 mu         0.7      1.02         1.01  0.548            1.61
 8 mu         0.8      0.964        0.938 0.354            1.69
 9 mu         0.9      0.889        0.798 0.0495           3.10
10 mu_1       0.1      0.971        0.522 0.0000117        8.06
11 mu_1       0.2      0.965        0.803 0.00275          4.19
12 mu_1       0.3      0.931        0.839 0.0443           2.33
13 mu_1       0.4      0.963        0.940 0.223            1.95
14 mu_1       0.5      1.00         1.02  0.433            1.60
15 mu_1       0.6      1.02         0.999 0.652            1.64
16 mu_1       0.7      1.01         1.02  0.508            1.55
17 mu_1       0.8      0.955        0.936 0.270            1.82
18 mu_1       0.9      0.887        0.797 0.0386           3.32
19 mu_0       0.1      0.900        0.164 0.000000899     13.9 
20 mu_0       0.2      0.969        0.540 0.000471         5.30
21 mu_0       0.3      0.937        0.822 0.0128           3.00
22 mu_0       0.4      0.936        0.881 0.0970           2.21
23 mu_0       0.5      0.976        0.928 0.343            1.94
24 mu_0       0.6      1.01         1.01  0.380            1.52
25 mu_0       0.7      1.02         1.01  0.506            1.75
26 mu_0       0.8      0.999        0.980 0.380            1.61
27 mu_0       0.9      0.910        0.881 0.0732           2.31
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.40     0.0000864  9.76e-14     54.3 
 2 mu         0.2      1.80     0.0117     5.05e- 9     42.2 
 3 mu         0.3      1.37     0.127      2.54e- 6     25.2 
 4 mu         0.4      1.04     0.499      1.86e- 4      6.77
 5 mu         0.5      0.959    0.848      4.60e- 3      3.01
 6 mu         0.6      0.967    0.955      5.93e- 3      2.99
 7 mu         0.7      1.03     1.11       9.43e- 5      3.38
 8 mu         0.8      1.13     0.655      2.14e- 7      4.59
 9 mu         0.9      1.03     0.0947     4.66e-12      9.72
10 mu_1       0.1      2.06     0.000466   8.67e-13     67.8 
11 mu_1       0.2      1.72     0.0352     2.25e- 8     42.2 
12 mu_1       0.3      1.21     0.263      7.53e- 6     16.8 
13 mu_1       0.4      0.993    0.735      4.14e- 4      4.57
14 mu_1       0.5      0.954    0.921      8.17e- 3      3.12
15 mu_1       0.6      0.972    0.927      1.56e- 3      3.32
16 mu_1       0.7      1.05     1.06       2.13e- 5      3.22
17 mu_1       0.8      1.14     0.535      4.23e- 8      4.91
18 mu_1       0.9      1.01     0.0614     8.17e-13     10.8 
19 mu_0       0.1      1.33     0.0000392  0            52.7 
20 mu_0       0.2      1.82     0.00603    0            45.6 
21 mu_0       0.3      1.44     0.0599     0            28.8 
22 mu_0       0.4      1.08     0.285      0             9.03
23 mu_0       0.5      0.964    0.620      0             3.76
24 mu_0       0.6      0.959    0.899      0             3.18
25 mu_0       0.7      1.00     0.990      0             3.76
26 mu_0       0.8      1.11     0.995      0             3.35
27 mu_0       0.9      1.22     0.232      0             6.73
[1] "Total run time was 82.372 seconds"
