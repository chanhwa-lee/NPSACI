
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1306"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  6  8  3  6  3  7  6  7  7  6  7  8  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0538  0.3923  0.6352  1.0000  4.0000 
[1] "event indicator table: "

  0   1 
781 525 
[1] "treatment indicator table: "

  0   1 
481 825 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 689
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 115.595 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.388 0.116 
 2 mu         0.1   0.2 0.507 0.196 
 3 mu         0.1   0.3 0.553 0.224 
 4 mu         0.1   0.4 0.600 0.257 
 5 mu         0.1   0.5 0.760 0.207 
 6 mu         0.2   0.1 0.340 0.0715
 7 mu         0.2   0.2 0.447 0.124 
 8 mu         0.2   0.3 0.499 0.142 
 9 mu         0.2   0.4 0.538 0.164 
10 mu         0.2   0.5 0.676 0.129 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.872        0.139 0.000000669      9.28
 2 mu         0.2      0.925        0.642 0.000600         5.44
 3 mu         0.3      0.963        0.930 0.0193           2.41
 4 mu         0.4      0.980        0.975 0.141            2.92
 5 mu         0.5      0.979        0.996 0.362            2.06
 6 mu         0.6      0.979        0.974 0.505            1.48
 7 mu         0.7      0.982        0.982 0.374            1.56
 8 mu         0.8      1.02         0.957 0.196            2.31
 9 mu         0.9      1.14         0.984 0.0176           4.69
10 mu_1       0.1      0.857        0.402 0.00000391       7.02
11 mu_1       0.2      0.932        0.923 0.00177          4.35
12 mu_1       0.3      0.971        0.988 0.0404           2.69
13 mu_1       0.4      0.978        0.974 0.205            2.87
14 mu_1       0.5      0.976        0.985 0.434            1.75
15 mu_1       0.6      0.977        0.969 0.494            1.44
16 mu_1       0.7      0.983        0.970 0.359            1.61
17 mu_1       0.8      1.03         1.00  0.158            2.40
18 mu_1       0.9      1.15         0.969 0.0130           4.94
19 mu_0       0.1      0.874        0.109 0.000000309     10.3 
20 mu_0       0.2      0.923        0.543 0.000308         5.71
21 mu_0       0.3      0.960        0.886 0.0102           2.90
22 mu_0       0.4      0.980        0.973 0.0865           2.96
23 mu_0       0.5      0.982        0.985 0.290            2.36
24 mu_0       0.6      0.981        0.978 0.505            1.70
25 mu_0       0.7      0.979        0.972 0.403            1.54
26 mu_0       0.8      0.986        0.965 0.293            1.93
27 mu_0       0.9      1.05         0.953 0.0593           2.99
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.54    0.0000688  1.46e-15    124.  
 2 mu         0.2       1.41    0.00596    1.70e-10     75.4 
 3 mu         0.3       1.33    0.0639     1.47e- 7     20.0 
 4 mu         0.4       1.28    0.349      1.67e- 5     17.5 
 5 mu         0.5       1.13    0.794      6.19e- 4      7.79
 6 mu         0.6       1.10    1.05       1.04e- 2      4.35
 7 mu         0.7       1.17    0.996      1.41e- 4      5.75
 8 mu         0.8       1.20    1.20       2.81e- 7      4.19
 9 mu         0.9       1.18    0.225      5.43e-12     11.2 
10 mu_1       0.1       1.87    0.000413   1.38e-14    138.  
11 mu_1       0.2       1.32    0.0196     8.04e-10     41.9 
12 mu_1       0.3       1.35    0.154      4.62e- 7     20.2 
13 mu_1       0.4       1.26    0.544      3.95e- 5     15.3 
14 mu_1       0.5       1.13    1.02       1.17e- 3      5.45
15 mu_1       0.6       1.13    1.17       1.92e- 3      4.96
16 mu_1       0.7       1.19    1.10       2.24e- 5      5.62
17 mu_1       0.8       1.20    1.05       3.90e- 8      4.69
18 mu_1       0.9       1.16    0.170      6.70e-13     12.5 
19 mu_0       0.1       1.50    0.0000247  0           123.  
20 mu_0       0.2       1.44    0.00204    0            83.8 
21 mu_0       0.3       1.33    0.0344     0            25.4 
22 mu_0       0.4       1.29    0.180      0            18.9 
23 mu_0       0.5       1.13    0.622      0            10.1 
24 mu_0       0.6       1.04    1.06       0             3.44
25 mu_0       0.7       1.11    1.03       0             6.05
26 mu_0       0.8       1.21    1.06       0             4.52
27 mu_0       0.9       1.36    0.700      0             8.46
[1] "Total run time was 120.198 seconds"
