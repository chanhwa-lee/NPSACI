
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1330"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  3  6  4  9  5  6 10  4  9  6 11  6  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05446 0.36941 0.60734 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
814 516 
[1] "treatment indicator table: "

  0   1 
462 868 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 684
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 160.594 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.290 0.163
 2 mu         0.1   0.2 0.322 0.161
 3 mu         0.1   0.3 0.399 0.171
 4 mu         0.1   0.4 0.436 0.166
 5 mu         0.1   0.5 0.466 0.177
 6 mu         0.2   0.1 0.311 0.120
 7 mu         0.2   0.2 0.380 0.111
 8 mu         0.2   0.3 0.470 0.119
 9 mu         0.2   0.4 0.530 0.109
10 mu         0.2   0.5 0.571 0.113
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.733       0.0597 0.00000334     24.1 
 2 mu         0.2      0.993       0.364  0.00141        10.3 
 3 mu         0.3      1.07        0.699  0.0242          5.89
 4 mu         0.4      1.05        0.977  0.118           3.31
 5 mu         0.5      1.01        0.991  0.307           1.87
 6 mu         0.6      1.00        1.00   0.515           1.39
 7 mu         0.7      0.998       0.997  0.696           1.72
 8 mu         0.8      0.962       0.945  0.338           1.84
 9 mu         0.9      0.917       0.744  0.0320          4.01
10 mu_1       0.1      0.996       0.193  0.0000187      16.1 
11 mu_1       0.2      1.09        0.669  0.00395         9.29
12 mu_1       0.3      1.08        0.929  0.0445          4.07
13 mu_1       0.4      1.03        0.976  0.168           2.92
14 mu_1       0.5      1.00        1.02   0.375           1.53
15 mu_1       0.6      1.00        0.995  0.558           1.39
16 mu_1       0.7      0.992       0.998  0.604           1.81
17 mu_1       0.8      0.953       0.938  0.287           1.88
18 mu_1       0.9      0.916       0.716  0.0250          4.30
19 mu_0       0.1      0.704       0.0445 0.00000164     25.0 
20 mu_0       0.2      0.969       0.297  0.000772       10.8 
21 mu_0       0.3      1.07        0.601  0.0155          6.75
22 mu_0       0.4      1.06        0.946  0.0844          3.57
23 mu_0       0.5      1.02        0.965  0.238           2.21
24 mu_0       0.6      1.01        1.02   0.450           1.44
25 mu_0       0.7      1.01        0.994  0.609           1.50
26 mu_0       0.8      0.998       0.997  0.544           2.06
27 mu_0       0.9      0.929       0.913  0.0948          2.26
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0923   0.0000186   1.36e-15      2.76
 2 mu         0.2     0.464    0.00252     1.79e-10     15.1 
 3 mu         0.3     0.806    0.0483      1.76e- 7     15.5 
 4 mu         0.4     0.958    0.280       2.34e- 5      7.00
 5 mu         0.5     0.994    0.888       1.04e- 3      4.28
 6 mu         0.6     1.00     1.01        2.31e- 2      2.30
 7 mu         0.7     1.04     1.08        3.24e- 3      2.73
 8 mu         0.8     1.19     0.653       1.44e- 5      4.22
 9 mu         0.9     1.44     0.0650      7.93e-10     22.7 
10 mu_1       0.1     0.264    0.000110    1.36e-14      6.91
11 mu_1       0.2     0.711    0.0100      8.93e-10     18.9 
12 mu_1       0.3     0.955    0.114       5.86e- 7     12.9 
13 mu_1       0.4     1.01     0.436       5.85e- 5      6.40
14 mu_1       0.5     1.01     1.02        2.08e- 3      3.42
15 mu_1       0.6     1.01     0.933       3.84e- 2      2.40
16 mu_1       0.7     1.06     1.06        1.16e- 3      2.81
17 mu_1       0.8     1.23     0.517       4.50e- 6      4.72
18 mu_1       0.9     1.46     0.0447      2.20e-10     25.2 
19 mu_0       0.1     0.0733   0.00000272  0             2.30
20 mu_0       0.2     0.402    0.00118     0            14.2 
21 mu_0       0.3     0.742    0.0174      0            16.6 
22 mu_0       0.4     0.920    0.158       0             8.08
23 mu_0       0.5     0.979    0.649       0             5.13
24 mu_0       0.6     0.987    1.09        0             2.84
25 mu_0       0.7     0.976    0.964       0             2.53
26 mu_0       0.8     1.02     0.902       0             3.52
27 mu_0       0.9     1.21     0.188       0             8.22
[1] "Total run time was 165.536 seconds"
