
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1215"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  6  3  6 10  4  8  7  7  6  4  8  7  8  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03186 0.30138 0.59874 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
708 507 
[1] "treatment indicator table: "

  0   1 
505 710 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.288 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.657 0.321
 2 mu         0.1   0.2 0.811 0.384
 3 mu         0.1   0.3 0.846 0.412
 4 mu         0.1   0.4 0.917 0.457
 5 mu         0.1   0.5 0.996 0.492
 6 mu         0.2   0.1 0.475 0.139
 7 mu         0.2   0.2 0.604 0.175
 8 mu         0.2   0.3 0.646 0.175
 9 mu         0.2   0.4 0.709 0.185
10 mu         0.2   0.5 0.769 0.203
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.43        0.0628 0.000000712     79.4 
 2 mu         0.2      1.17        0.424  0.000568        27.2 
 3 mu         0.3      1.02        0.824  0.0176           5.66
 4 mu         0.4      0.981       0.934  0.137            2.24
 5 mu         0.5      0.981       0.986  0.464            1.50
 6 mu         0.6      0.989       0.991  0.701            1.33
 7 mu         0.7      0.986       1.00   0.286            1.82
 8 mu         0.8      0.953       0.884  0.0395           5.07
 9 mu         0.9      0.934       0.561  0.000508        22.0 
10 mu_1       0.1      1.42        0.213  0.00000395      49.6 
11 mu_1       0.2      1.07        0.705  0.00159          8.54
12 mu_1       0.3      0.986       0.921  0.0337           2.71
13 mu_1       0.4      0.975       0.956  0.202            1.70
14 mu_1       0.5      0.985       0.985  0.573            1.43
15 mu_1       0.6      0.994       0.997  0.642            1.34
16 mu_1       0.7      0.985       0.986  0.224            1.89
17 mu_1       0.8      0.948       0.855  0.0280           6.20
18 mu_1       0.9      0.939       0.492  0.000325        24.4 
19 mu_0       0.1      1.43        0.0469 0.000000352     82.7 
20 mu_0       0.2      1.19        0.342  0.000312        31.8 
21 mu_0       0.3      1.03        0.722  0.0108           7.48
22 mu_0       0.4      0.984       0.892  0.0935           2.64
23 mu_0       0.5      0.976       0.975  0.356            1.70
24 mu_0       0.6      0.982       0.998  0.639            1.44
25 mu_0       0.7      0.987       1.01   0.431            1.67
26 mu_0       0.8      0.972       1.01   0.0856           2.04
27 mu_0       0.9      0.894       0.953  0.00216          2.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.10      0.000306  2.31e-17    130.  
 2 mu         0.2      3.13      0.0178    2.42e-11    127.  
 3 mu         0.3      2.52      0.132     8.05e- 8     62.8 
 4 mu         0.4      1.64      0.463     2.54e- 5     31.2 
 5 mu         0.5      1.13      0.923     2.20e- 3      8.55
 6 mu         0.6      1.04      1.04      9.01e- 3      3.40
 7 mu         0.7      1.26      0.996     1.43e- 4      8.16
 8 mu         0.8      1.87      0.466     3.26e- 7     26.6 
 9 mu         0.9      4.69      0.0504    7.08e-12    281.  
10 mu_1       0.1      3.50      0.00187   2.31e-16    186.  
11 mu_1       0.2      3.13      0.0495    1.21e-10     90.4 
12 mu_1       0.3      2.11      0.267     2.68e- 7     52.3 
13 mu_1       0.4      1.37      0.718     6.35e- 5     19.5 
14 mu_1       0.5      1.05      0.918     4.41e- 3      4.73
15 mu_1       0.6      1.08      1.09      2.37e- 3      3.96
16 mu_1       0.7      1.36      0.882     3.24e- 5     11.7 
17 mu_1       0.8      2.03      0.354     6.43e- 8     33.3 
18 mu_1       0.9      5.04      0.0327    1.24e-12    312.  
19 mu_0       0.1      1.94      0.000105  0           124.  
20 mu_0       0.2      3.13      0.00710   0           136.  
21 mu_0       0.3      2.70      0.0644    0            70.3 
22 mu_0       0.4      1.82      0.288     0            39.0 
23 mu_0       0.5      1.20      0.786     0            12.8 
24 mu_0       0.6      0.969     0.975     0             4.63
25 mu_0       0.7      1.02      1.00      0             3.60
26 mu_0       0.8      1.24      0.733     0            11.5 
27 mu_0       0.9      1.50      0.164     0            29.9 
[1] "Total run time was 49.56 seconds"
