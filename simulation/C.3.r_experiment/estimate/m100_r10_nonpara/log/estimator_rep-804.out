
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1178"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  9  4 10  4  9  6  6  7  3  8  3  5  9  1  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03675 0.32179 0.59601 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
679 499 
[1] "treatment indicator table: "

  0   1 
490 688 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 575
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.965 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.357 0.105 
 2 mu         0.1   0.2 0.391 0.0865
 3 mu         0.1   0.3 0.422 0.0826
 4 mu         0.1   0.4 0.431 0.0834
 5 mu         0.1   0.5 0.481 0.0940
 6 mu         0.2   0.1 0.283 0.0435
 7 mu         0.2   0.2 0.338 0.0441
 8 mu         0.2   0.3 0.395 0.0514
 9 mu         0.2   0.4 0.410 0.0538
10 mu         0.2   0.5 0.500 0.0614
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.777        0.215  0.000247      9.63
 2 mu         0.2      0.854        0.718  0.0181        4.23
 3 mu         0.3      0.939        0.864  0.138         3.89
 4 mu         0.4      1.00         0.982  0.334         3.12
 5 mu         0.5      1.02         1.00   0.264         2.11
 6 mu         0.6      1.02         1.00   0.616         1.81
 7 mu         0.7      0.996        0.960  0.543         1.73
 8 mu         0.8      0.971        0.968  0.286         1.93
 9 mu         0.9      1.01         0.911  0.0252        3.53
10 mu_1       0.1      0.797        0.496  0.00113       4.33
11 mu_1       0.2      0.889        0.799  0.0462        4.68
12 mu_1       0.3      0.980        0.891  0.239         3.59
13 mu_1       0.4      1.02         0.978  0.308         2.32
14 mu_1       0.5      1.03         1.04   0.289         2.16
15 mu_1       0.6      1.02         0.990  0.617         1.68
16 mu_1       0.7      0.989        0.946  0.520         1.70
17 mu_1       0.8      0.970        0.967  0.239         2.19
18 mu_1       0.9      1.02         0.903  0.0192        3.81
19 mu_0       0.1      0.775        0.179  0.000149     10.6 
20 mu_0       0.2      0.846        0.665  0.0110        5.13
21 mu_0       0.3      0.921        0.859  0.0937        4.02
22 mu_0       0.4      0.984        0.961  0.254         3.65
23 mu_0       0.5      1.01         0.961  0.239         2.67
24 mu_0       0.6      1.02         1.02   0.452         2.01
25 mu_0       0.7      1.01         0.978  0.570         1.80
26 mu_0       0.8      0.972        0.968  0.372         1.64
27 mu_0       0.9      0.974        0.974  0.0793        2.31
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.71      0.00202   9.72e-19     53.8 
 2 mu         0.2      1.59      0.0524    1.02e-12     47.2 
 3 mu         0.3      1.30      0.261     3.39e- 9     27.8 
 4 mu         0.4      1.09      0.646     1.07e- 6     12.6 
 5 mu         0.5      0.988     0.899     9.27e- 5      4.39
 6 mu         0.6      1.00      0.969     1.62e- 4      2.93
 7 mu         0.7      1.06      0.904     1.42e- 6      5.83
 8 mu         0.8      1.18      0.619     1.65e- 9     16.1 
 9 mu         0.9      1.80      0.0707    1.41e-14     42.0 
10 mu_1       0.1      2.09      0.0125    9.72e-18     67.3 
11 mu_1       0.2      1.37      0.155     5.10e-12     29.5 
12 mu_1       0.3      1.12      0.500     1.13e- 8     11.6 
13 mu_1       0.4      1.01      0.831     2.67e- 6      3.94
14 mu_1       0.5      0.970     0.925     1.85e- 4      2.97
15 mu_1       0.6      1.01      0.993     1.50e- 5      3.85
16 mu_1       0.7      1.08      0.808     1.13e- 7      7.29
17 mu_1       0.8      1.21      0.461     1.14e-10     18.8 
18 mu_1       0.9      1.86      0.0471    8.72e-16     43.5 
19 mu_0       0.1      1.67      0.000718  0            52.3 
20 mu_0       0.2      1.65      0.0231    0            51.6 
21 mu_0       0.3      1.37      0.131     0            34.7 
22 mu_0       0.4      1.14      0.408     0            18.4 
23 mu_0       0.5      1.01      0.801     0             7.69
24 mu_0       0.6      0.984     0.879     0             3.14
25 mu_0       0.7      1.03      1.00      0             3.25
26 mu_0       0.8      1.05      0.767     0             6.18
27 mu_0       0.9      1.19      0.131     0            28.0 
[1] "Total run time was 50.387 seconds"
