
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  5  5  7  7  1  3  6  6 15  4  4 11  2  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02925 0.29897 0.56108 0.95513 5.00000 
[1] "event indicator table: "

  0   1 
717 524 
[1] "treatment indicator table: "

  0   1 
460 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.427 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.291 0.106 
 2 mu         0.1   0.2 0.328 0.123 
 3 mu         0.1   0.3 0.319 0.116 
 4 mu         0.1   0.4 0.369 0.100 
 5 mu         0.1   0.5 0.364 0.100 
 6 mu         0.2   0.1 0.359 0.0870
 7 mu         0.2   0.2 0.415 0.0999
 8 mu         0.2   0.3 0.424 0.0941
 9 mu         0.2   0.4 0.472 0.0877
10 mu         0.2   0.5 0.471 0.0885
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.549       0.0395 0.000000397      8.87
 2 mu         0.2      0.766       0.305  0.000340         8.67
 3 mu         0.3      0.870       0.699  0.0111           4.09
 4 mu         0.4      0.944       0.895  0.0885           2.16
 5 mu         0.5      0.998       0.929  0.306            1.97
 6 mu         0.6      1.03        1.00   0.374            2.02
 7 mu         0.7      1.02        0.997  0.421            1.73
 8 mu         0.8      0.995       1.02   0.103            1.59
 9 mu         0.9      0.960       0.946  0.00250          3.41
10 mu_1       0.1      0.796       0.145  0.00000231      12.7 
11 mu_1       0.2      0.847       0.545  0.000996         6.25
12 mu_1       0.3      0.902       0.878  0.0219           2.59
13 mu_1       0.4      0.966       0.926  0.133            2.10
14 mu_1       0.5      1.01        0.966  0.381            1.97
15 mu_1       0.6      1.03        1.02   0.317            1.99
16 mu_1       0.7      1.02        1.00   0.363            1.70
17 mu_1       0.8      0.989       0.992  0.0797           1.63
18 mu_1       0.9      0.953       0.926  0.00175          3.76
19 mu_0       0.1      0.522       0.0299 0.000000185      8.45
20 mu_0       0.2      0.746       0.239  0.000176         9.28
21 mu_0       0.3      0.857       0.587  0.00649          4.92
22 mu_0       0.4      0.929       0.860  0.0588           2.55
23 mu_0       0.5      0.985       0.923  0.231            2.13
24 mu_0       0.6      1.02        0.998  0.427            2.05
25 mu_0       0.7      1.03        1.01   0.273            1.94
26 mu_0       0.8      1.02        1.02   0.198            1.79
27 mu_0       0.9      1.02        1.02   0.00919          2.27
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.02    0.0000984  2.21e-18     92.9 
 2 mu         0.2       2.72    0.0102     1.16e-12     90.4 
 3 mu         0.3       2.10    0.104      2.57e- 9     41.0 
 4 mu         0.4       1.58    0.494      6.09e- 7     13.3 
 5 mu         0.5       1.41    1.20       4.22e- 5      9.17
 6 mu         0.6       1.33    1.07       1.35e- 3      9.15
 7 mu         0.7       1.19    1.00       1.92e- 3      3.74
 8 mu         0.8       1.20    0.824      8.53e- 6      5.43
 9 mu         0.9       1.64    0.0885     4.69e-10     17.5 
10 mu_1       0.1       3.26    0.000636   2.21e-17    133.  
11 mu_1       0.2       2.59    0.0303     5.80e-12     64.5 
12 mu_1       0.3       1.77    0.236      8.58e- 9     19.9 
13 mu_1       0.4       1.45    0.775      1.52e- 6     12.2 
14 mu_1       0.5       1.39    1.12       8.45e- 5     10.1 
15 mu_1       0.6       1.31    1.03       2.25e- 3      8.38
16 mu_1       0.7       1.17    0.955      6.84e- 4      3.67
17 mu_1       0.8       1.24    0.649      2.67e- 6      6.32
18 mu_1       0.9       1.70    0.0632     1.30e-10     19.4 
19 mu_0       0.1       1.88    0.0000332  0            88.4 
20 mu_0       0.2       2.75    0.00419    0            96.8 
21 mu_0       0.3       2.24    0.0470     0            50.1 
22 mu_0       0.4       1.66    0.308      0            16.4 
23 mu_0       0.5       1.44    1.01       0             8.97
24 mu_0       0.6       1.37    1.02       0            10.3 
25 mu_0       0.7       1.22    1.02       0             5.61
26 mu_0       0.8       1.06    0.951      0             4.51
27 mu_0       0.9       1.13    0.201      0            11.3 
[1] "Total run time was 49.566 seconds"
