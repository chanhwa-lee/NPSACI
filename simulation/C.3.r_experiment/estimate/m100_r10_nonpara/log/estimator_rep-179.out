
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1291"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  4  7  3  2  9  8  5  8  7  4  3  9 11  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0364  0.3694  0.6265  1.0000  7.0000 
[1] "event indicator table: "

  0   1 
780 511 
[1] "treatment indicator table: "

  0   1 
466 825 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.508 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.365 0.105 
 2 mu         0.1   0.2 0.459 0.104 
 3 mu         0.1   0.3 0.537 0.135 
 4 mu         0.1   0.4 0.577 0.124 
 5 mu         0.1   0.5 0.615 0.119 
 6 mu         0.2   0.1 0.373 0.0622
 7 mu         0.2   0.2 0.456 0.0644
 8 mu         0.2   0.3 0.531 0.0808
 9 mu         0.2   0.4 0.578 0.0754
10 mu         0.2   0.5 0.627 0.0757
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.912        0.186 0.00000568     11.6 
 2 mu         0.2      1.03         0.720 0.00224         5.69
 3 mu         0.3      0.986        0.918 0.0452          3.27
 4 mu         0.4      0.991        0.954 0.0989          2.24
 5 mu         0.5      1.01         0.962 0.134           2.16
 6 mu         0.6      1.02         1.01  0.489           1.79
 7 mu         0.7      1.02         1.03  0.564           1.49
 8 mu         0.8      1.00         0.954 0.296           1.63
 9 mu         0.9      0.967        0.956 0.0542          2.15
10 mu_1       0.1      1.16         0.503 0.0000301       8.87
11 mu_1       0.2      1.03         0.986 0.00601         3.66
12 mu_1       0.3      0.977        0.945 0.0825          2.28
13 mu_1       0.4      0.995        0.964 0.0521          1.91
14 mu_1       0.5      1.01         0.956 0.184           2.18
15 mu_1       0.6      1.02         1.02  0.513           1.70
16 mu_1       0.7      1.02         1.04  0.498           1.52
17 mu_1       0.8      1.00         0.976 0.306           1.78
18 mu_1       0.9      0.966        0.974 0.0428          2.20
19 mu_0       0.1      0.884        0.149 0.00000296     12.6 
20 mu_0       0.2      1.03         0.633 0.00130         6.72
21 mu_0       0.3      0.990        0.937 0.0293          3.70
22 mu_0       0.4      0.989        0.909 0.130           2.81
23 mu_0       0.5      1.01         0.940 0.0833          2.14
24 mu_0       0.6      1.01         1.01  0.325           2.01
25 mu_0       0.7      1.01         0.999 0.527           1.66
26 mu_0       0.8      1.00         1.02  0.257           1.61
27 mu_0       0.9      0.968        0.947 0.144           1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.61    0.00000854  4.86e-14     68.3 
 2 mu         0.2      1.37    0.00178     1.59e- 9     36.9 
 3 mu         0.3      1.11    0.0398      6.98e- 7     12.1 
 4 mu         0.4      1.03    0.201       5.22e- 5      8.52
 5 mu         0.5      1.00    0.630       1.48e- 3      6.83
 6 mu         0.6      1.07    0.937       2.53e- 3      3.93
 7 mu         0.7      1.16    0.997       2.59e- 5      5.19
 8 mu         0.8      1.18    1.19        3.44e- 8      4.30
 9 mu         0.9      1.33    0.204       3.32e-13     10.4 
10 mu_1       0.1      1.87    0.0000624   4.86e-13     71.9 
11 mu_1       0.2      1.24    0.00742     7.97e- 9     19.4 
12 mu_1       0.3      1.07    0.101       2.33e- 6      9.23
13 mu_1       0.4      1.03    0.315       1.31e- 4      8.97
14 mu_1       0.5      1.03    0.793       2.97e- 3      5.76
15 mu_1       0.6      1.11    1.02        4.45e- 4      4.49
16 mu_1       0.7      1.19    1.03        3.90e- 6      5.08
17 mu_1       0.8      1.20    1.11        4.52e- 9      4.78
18 mu_1       0.9      1.37    0.155       3.88e-14     11.5 
19 mu_0       0.1      1.58    0.00000149  0            67.9 
20 mu_0       0.2      1.41    0.000730    0            41.3 
21 mu_0       0.3      1.12    0.0120      0            13.6 
22 mu_0       0.4      1.03    0.0958      0             8.22
23 mu_0       0.5      0.978   0.327       0             7.91
24 mu_0       0.6      0.997   0.676       0             3.90
25 mu_0       0.7      1.08    0.913       0             5.47
26 mu_0       0.8      1.07    0.922       0             4.08
27 mu_0       0.9      0.932   0.235       0             7.86
[1] "Total run time was 49.703 seconds"
