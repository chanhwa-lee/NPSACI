
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1265"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  2  6  9  1  8 10  9  7  6  7  8  3  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04027 0.39447 0.62845 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
782 483 
[1] "treatment indicator table: "

  0   1 
525 740 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.103 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.647 0.165 
 2 mu         0.1   0.2 0.750 0.193 
 3 mu         0.1   0.3 0.876 0.221 
 4 mu         0.1   0.4 0.950 0.246 
 5 mu         0.1   0.5 0.961 0.254 
 6 mu         0.2   0.1 0.457 0.0696
 7 mu         0.2   0.2 0.549 0.0770
 8 mu         0.2   0.3 0.667 0.0913
 9 mu         0.2   0.4 0.726 0.0991
10 mu         0.2   0.5 0.733 0.0995
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.48         0.341  0.000288     45.7 
 2 mu         0.2      1.17         0.867  0.0214       15.5 
 3 mu         0.3      1.04         0.938  0.149         4.33
 4 mu         0.4      1.02         0.986  0.418         2.17
 5 mu         0.5      1.01         0.971  0.223         1.89
 6 mu         0.6      1.01         0.970  0.187         2.06
 7 mu         0.7      0.998        0.971  0.453         1.72
 8 mu         0.8      0.977        0.968  0.235         2.29
 9 mu         0.9      0.969        0.739  0.0220        4.49
10 mu_1       0.1      1.29         0.676  0.00127      27.7 
11 mu_1       0.2      1.03         0.928  0.0493        6.16
12 mu_1       0.3      1.00         0.944  0.242         2.21
13 mu_1       0.4      1.01         0.995  0.485         2.14
14 mu_1       0.5      1.01         1.00   0.159         1.94
15 mu_1       0.6      1.00         0.981  0.220         2.06
16 mu_1       0.7      0.995        0.937  0.347         1.88
17 mu_1       0.8      0.972        0.974  0.180         2.43
18 mu_1       0.9      0.967        0.715  0.0166        4.78
19 mu_0       0.1      1.50         0.288  0.000179     47.7 
20 mu_0       0.2      1.20         0.804  0.0144       17.8 
21 mu_0       0.3      1.05         0.937  0.109         5.23
22 mu_0       0.4      1.02         0.955  0.339         2.19
23 mu_0       0.5      1.01         0.994  0.287         1.98
24 mu_0       0.6      1.01         0.979  0.138         2.07
25 mu_0       0.7      1.01         1.02   0.348         1.91
26 mu_0       0.8      0.998        0.982  0.452         2.06
27 mu_0       0.9      0.990        0.923  0.0709        3.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.82     0.000320  4.49e-14    115.  
 2 mu         0.2       1.31     0.0229    2.61e- 9     27.6 
 3 mu         0.3       1.10     0.203     1.50e- 6     11.4 
 4 mu         0.4       1.02     0.720     8.77e- 5      7.04
 5 mu         0.5       1.04     0.965     1.99e- 3      3.52
 6 mu         0.6       1.05     0.961     3.16e- 4      3.51
 7 mu         0.7       1.08     1.04      2.08e- 6      5.21
 8 mu         0.8       1.23     0.380     1.61e- 9      8.76
 9 mu         0.9       1.26     0.0271    6.90e-15     13.6 
10 mu_1       0.1       1.75     0.00188   4.22e-13     60.5 
11 mu_1       0.2       1.19     0.0731    1.23e- 8     15.1 
12 mu_1       0.3       1.02     0.401     4.71e- 6      9.79
13 mu_1       0.4       1.01     0.906     2.19e- 4      5.56
14 mu_1       0.5       1.06     0.896     1.54e- 3      3.87
15 mu_1       0.6       1.06     1.09      2.77e- 5      3.58
16 mu_1       0.7       1.10     0.925     1.56e- 7      6.05
17 mu_1       0.8       1.25     0.271     1.06e-10      8.90
18 mu_1       0.9       1.25     0.0166    4.03e-16     14.1 
19 mu_0       0.1       1.82     0.000151  0           121.  
20 mu_0       0.2       1.34     0.0116    0            32.7 
21 mu_0       0.3       1.14     0.115     0            12.5 
22 mu_0       0.4       1.03     0.510     0             8.03
23 mu_0       0.5       1.03     1.01      0             3.44
24 mu_0       0.6       1.05     0.877     0             3.94
25 mu_0       0.7       1.04     0.948     0             4.03
26 mu_0       0.8       1.17     0.764     0             8.21
27 mu_0       0.9       1.41     0.105     0             9.74
[1] "Total run time was 55.394 seconds"
