
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1251"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4  5  5  5  7  8 10 11  4  6  3  6  9  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01588 0.33580 0.61088 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
755 496 
[1] "treatment indicator table: "

  0   1 
442 809 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.651 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.299 0.174
 2 mu         0.1   0.2 0.366 0.173
 3 mu         0.1   0.3 0.389 0.153
 4 mu         0.1   0.4 0.403 0.140
 5 mu         0.1   0.5 0.390 0.125
 6 mu         0.2   0.1 0.368 0.140
 7 mu         0.2   0.2 0.462 0.143
 8 mu         0.2   0.3 0.515 0.132
 9 mu         0.2   0.4 0.532 0.126
10 mu         0.2   0.5 0.551 0.121
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.454       0.0312 0.00000000805      6.51
 2 mu         0.2      0.801       0.272  0.0000308         11.3 
 3 mu         0.3      0.955       0.671  0.00257            7.38
 4 mu         0.4      1.01        0.945  0.0414             3.44
 5 mu         0.5      1.02        1.00   0.251              1.92
 6 mu         0.6      1.01        0.993  0.524              1.59
 7 mu         0.7      0.978       0.980  0.359              1.66
 8 mu         0.8      0.986       1.01   0.140              2.16
 9 mu         0.9      1.10        0.907  0.00782            6.54
10 mu_1       0.1      0.753       0.119  0.0000000525      11.0 
11 mu_1       0.2      0.951       0.501  0.000101          11.0 
12 mu_1       0.3      1.01        0.844  0.00565            5.40
13 mu_1       0.4      1.03        0.975  0.0691             2.50
14 mu_1       0.5      1.02        0.995  0.340              1.64
15 mu_1       0.6      1.00        0.973  0.421              1.58
16 mu_1       0.7      0.977       0.975  0.387              1.77
17 mu_1       0.8      0.993       1.00   0.114              2.25
18 mu_1       0.9      1.11        0.878  0.00589            7.06
19 mu_0       0.1      0.421       0.0221 0.00000000311      7.10
20 mu_0       0.2      0.763       0.210  0.0000133         11.4 
21 mu_0       0.3      0.930       0.564  0.00124            8.22
22 mu_0       0.4      1.00        0.889  0.0230             4.06
23 mu_0       0.5      1.02        1.01   0.162              2.43
24 mu_0       0.6      1.01        0.979  0.516              1.64
25 mu_0       0.7      0.980       0.972  0.294              1.54
26 mu_0       0.8      0.957       0.953  0.243              1.89
27 mu_0       0.9      1.02        0.984  0.0252             3.01
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.600    0.0000973  6.40e-15     45.8 
 2 mu         0.2      1.18     0.00603    1.02e- 9     63.5 
 3 mu         0.3      1.49     0.0688     8.76e- 7     43.0 
 4 mu         0.4      1.46     0.285      9.99e- 5     21.6 
 5 mu         0.5      1.27     0.773      3.05e- 3      7.70
 6 mu         0.6      1.15     1.03       3.26e- 2      5.53
 7 mu         0.7      1.17     1.14       9.58e- 3      4.31
 8 mu         0.8      1.29     0.781      1.44e- 4      5.70
 9 mu         0.9      1.40     0.147      6.33e- 8     16.2 
10 mu_1       0.1      1.20     0.000729   5.76e-14     83.3 
11 mu_1       0.2      1.45     0.0217     4.80e- 9     57.7 
12 mu_1       0.3      1.52     0.152      2.76e- 6     30.0 
13 mu_1       0.4      1.38     0.487      2.36e- 4     17.0 
14 mu_1       0.5      1.21     0.914      6.10e- 3      6.10
15 mu_1       0.6      1.14     1.05       5.44e- 2      5.07
16 mu_1       0.7      1.18     1.10       4.02e- 3      4.21
17 mu_1       0.8      1.31     0.651      5.29e- 5      6.41
18 mu_1       0.9      1.40     0.112      2.07e- 8     17.0 
19 mu_0       0.1      0.533    0.0000270  0            41.7 
20 mu_0       0.2      1.11     0.00221    0            65.0 
21 mu_0       0.3      1.47     0.0278     0            50.2 
22 mu_0       0.4      1.51     0.149      0            26.0 
23 mu_0       0.5      1.33     0.489      0            10.5 
24 mu_0       0.6      1.17     0.919      0             6.22
25 mu_0       0.7      1.13     1.05       0             4.54
26 mu_0       0.8      1.21     1.21       0             4.27
27 mu_0       0.9      1.47     0.404      0            11.9 
[1] "Total run time was 59.12 seconds"
