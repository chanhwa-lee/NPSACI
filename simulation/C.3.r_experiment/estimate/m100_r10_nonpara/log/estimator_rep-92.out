
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1218"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
13  3  9  6  5  6  2  4  6  7 11  7  2  6  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02249 0.34387 0.60720 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
719 499 
[1] "treatment indicator table: "

  0   1 
421 797 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 578
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.776 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.413 0.0984
 2 mu         0.1   0.2 0.578 0.157 
 3 mu         0.1   0.3 0.582 0.142 
 4 mu         0.1   0.4 0.611 0.149 
 5 mu         0.1   0.5 0.623 0.149 
 6 mu         0.2   0.1 0.322 0.0500
 7 mu         0.2   0.2 0.432 0.0751
 8 mu         0.2   0.3 0.457 0.0682
 9 mu         0.2   0.4 0.480 0.0680
10 mu         0.2   0.5 0.509 0.0670
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.991       0.0960 0.00000291     16.2 
 2 mu         0.2      0.849       0.446  0.00135         5.40
 3 mu         0.3      0.900       0.837  0.0248          2.41
 4 mu         0.4      1.00        0.984  0.146           2.65
 5 mu         0.5      1.06        1.06   0.298           2.55
 6 mu         0.6      1.05        1.03   0.550           1.82
 7 mu         0.7      1.00        0.996  0.439           1.56
 8 mu         0.8      0.989       0.986  0.299           1.68
 9 mu         0.9      1.01        0.978  0.0765          2.41
10 mu_1       0.1      0.706       0.308  0.0000172       5.12
11 mu_1       0.2      0.832       0.645  0.00407         2.27
12 mu_1       0.3      0.951       0.947  0.0505          2.29
13 mu_1       0.4      1.04        1.02   0.227           2.84
14 mu_1       0.5      1.07        1.04   0.340           2.39
15 mu_1       0.6      1.03        1.02   0.561           1.82
16 mu_1       0.7      0.992       0.978  0.445           1.50
17 mu_1       0.8      0.989       0.991  0.277           1.75
18 mu_1       0.9      1.02        0.957  0.0617          2.51
19 mu_0       0.1      1.02        0.0703 0.00000132     18.0 
20 mu_0       0.2      0.853       0.384  0.000664        6.36
21 mu_0       0.3      0.878       0.831  0.0137          2.92
22 mu_0       0.4      0.973       0.959  0.0917          2.53
23 mu_0       0.5      1.05        1.04   0.256           2.72
24 mu_0       0.6      1.07        1.05   0.435           1.97
25 mu_0       0.7      1.03        1.02   0.423           1.76
26 mu_0       0.8      0.989       0.979  0.384           1.57
27 mu_0       0.9      0.954       0.911  0.0494          2.16
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.834    0.0000447  4.55e-18     25.2 
 2 mu         0.2      1.10     0.00543    2.39e-12     21.8 
 3 mu         0.3      1.04     0.0637     5.29e- 9      9.39
 4 mu         0.4      1.05     0.294      1.25e- 6      4.85
 5 mu         0.5      1.14     0.626      8.68e- 5      6.44
 6 mu         0.6      1.17     1.02       2.77e- 3      5.35
 7 mu         0.7      1.12     1.11       7.76e- 4      3.47
 8 mu         0.8      1.11     1.20       5.21e- 6      3.34
 9 mu         0.9      1.07     0.253      8.04e-10      6.15
10 mu_1       0.1      1.31     0.000309   4.55e-17     33.7 
11 mu_1       0.2      1.18     0.0176     1.19e-11     14.6 
12 mu_1       0.3      1.06     0.149      1.76e- 8      6.83
13 mu_1       0.4      1.10     0.521      3.13e- 6      4.84
14 mu_1       0.5      1.17     0.813      1.74e- 4      6.78
15 mu_1       0.6      1.16     1.10       4.62e- 3      4.69
16 mu_1       0.7      1.11     1.26       1.48e- 4      3.23
17 mu_1       0.8      1.11     0.983      8.68e- 7      3.51
18 mu_1       0.9      1.05     0.186      1.19e-10      6.83
19 mu_0       0.1      0.781    0.0000106  0            24.3 
20 mu_0       0.2      1.08     0.00197    0            23.7 
21 mu_0       0.3      1.03     0.0275     0            11.3 
22 mu_0       0.4      1.02     0.114      0             6.06
23 mu_0       0.5      1.12     0.402      0             6.10
24 mu_0       0.6      1.18     0.592      0             6.34
25 mu_0       0.7      1.14     1.04       0             4.05
26 mu_0       0.8      1.11     1.21       0             3.08
27 mu_0       0.9      1.21     0.344      0             5.05
[1] "Total run time was 53.889 seconds"
