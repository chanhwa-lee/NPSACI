
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  8  7  3  5  9  2  7  9  5  7  6  6  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02729 0.33153 0.58239 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
776 476 
[1] "treatment indicator table: "

  0   1 
436 816 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 137.967 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.186 0.113 
 2 mu         0.1   0.2 0.392 0.127 
 3 mu         0.1   0.3 0.384 0.127 
 4 mu         0.1   0.4 0.370 0.127 
 5 mu         0.1   0.5 0.397 0.131 
 6 mu         0.2   0.1 0.223 0.0794
 7 mu         0.2   0.2 0.412 0.0854
 8 mu         0.2   0.3 0.428 0.0799
 9 mu         0.2   0.4 0.424 0.0780
10 mu         0.2   0.5 0.456 0.0847
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.626       0.0413 0.0000000843     17.4 
 2 mu         0.2      0.767       0.260  0.000112          8.96
 3 mu         0.3      0.845       0.629  0.00380           4.42
 4 mu         0.4      0.918       0.856  0.0368            4.38
 5 mu         0.5      0.964       0.911  0.162             2.96
 6 mu         0.6      0.979       0.955  0.330             2.44
 7 mu         0.7      0.995       0.975  0.481             1.95
 8 mu         0.8      1.02        0.985  0.376             2.00
 9 mu         0.9      1.06        1.03   0.0525            3.44
10 mu_1       0.1      0.809       0.131  0.000000506      12.2 
11 mu_1       0.2      0.850       0.508  0.000400          6.39
12 mu_1       0.3      0.898       0.839  0.00906           4.45
13 mu_1       0.4      0.950       0.922  0.0660            4.18
14 mu_1       0.5      0.975       0.926  0.225             2.38
15 mu_1       0.6      0.982       0.962  0.375             2.41
16 mu_1       0.7      0.997       0.960  0.516             1.93
17 mu_1       0.8      1.02        1.01   0.329             2.10
18 mu_1       0.9      1.06        1.04   0.0410            3.52
19 mu_0       0.1      0.606       0.0292 0.0000000374     18.0 
20 mu_0       0.2      0.746       0.180  0.0000399         9.60
21 mu_0       0.3      0.823       0.512  0.00154           5.02
22 mu_0       0.4      0.896       0.781  0.0174            4.51
23 mu_0       0.5      0.952       0.911  0.0909            3.54
24 mu_0       0.6      0.975       0.941  0.225             2.48
25 mu_0       0.7      0.990       0.962  0.393             2.32
26 mu_0       0.8      1.01        0.978  0.407             1.89
27 mu_0       0.9      1.02        0.989  0.140             2.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     11.0     0.0000261   2.36e-15   1003.  
 2 mu         0.2      8.81    0.00266     1.54e-10    695.  
 3 mu         0.3      5.63    0.0350      1.01e- 7    313.  
 4 mu         0.4      3.34    0.227       1.01e- 5    104.  
 5 mu         0.5      1.85    0.614       3.60e- 4     33.1 
 6 mu         0.6      1.21    0.940       4.95e- 3      6.52
 7 mu         0.7      1.06    0.958       5.90e- 5      4.52
 8 mu         0.8      1.02    0.842       8.94e- 8      4.90
 9 mu         0.9      1.00    0.207       9.72e-13      7.31
10 mu_1       0.1     11.8     0.000204    2.36e-14   1003.  
11 mu_1       0.2      5.74    0.00978     7.72e-10    347.  
12 mu_1       0.3      3.56    0.0869      3.38e- 7    104.  
13 mu_1       0.4      2.29    0.415       2.53e- 5     65.0 
14 mu_1       0.5      1.45    0.859       7.19e- 4     23.2 
15 mu_1       0.6      1.13    0.916       1.24e- 3      6.33
16 mu_1       0.7      1.06    0.949       1.26e- 5      3.95
17 mu_1       0.8      1.02    0.743       1.68e- 8      5.21
18 mu_1       0.9      1.00    0.153       1.62e-13      7.65
19 mu_0       0.1     10.9     0.00000428  0          1003.  
20 mu_0       0.2      9.58    0.000744    0           782.  
21 mu_0       0.3      6.51    0.0161      0           403.  
22 mu_0       0.4      4.03    0.0997      0           157.  
23 mu_0       0.5      2.24    0.368       0            45.5 
24 mu_0       0.6      1.33    0.810       0            10.6 
25 mu_0       0.7      1.08    0.993       0             5.86
26 mu_0       0.8      1.03    0.862       0             3.68
27 mu_0       0.9      0.980   0.304       0             6.81
[1] "Total run time was 148.682 seconds"
