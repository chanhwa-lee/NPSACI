
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1246"
[1] "cluster size dist'n: "

 5  6  7  8 10 11 12 13 14 15 16 17 18 19 20 
 9  6  9  6  8  3  5  7  9  5  6  6 11  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02852 0.31426 0.57862 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
747 499 
[1] "treatment indicator table: "

  0   1 
461 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 76.803 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.690 0.188 
 2 mu         0.1   0.2 0.872 0.229 
 3 mu         0.1   0.3 0.984 0.255 
 4 mu         0.1   0.4 1.07  0.274 
 5 mu         0.1   0.5 1.13  0.286 
 6 mu         0.2   0.1 0.520 0.0770
 7 mu         0.2   0.2 0.655 0.0893
 8 mu         0.2   0.3 0.750 0.102 
 9 mu         0.2   0.4 0.834 0.111 
10 mu         0.2   0.5 0.883 0.119 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.99        0.136  0.00000807     47.2 
 2 mu         0.2      1.54        0.633  0.00206        11.4 
 3 mu         0.3      1.19        0.954  0.0282          4.42
 4 mu         0.4      1.03        0.987  0.142           2.63
 5 mu         0.5      0.996       0.992  0.404           1.76
 6 mu         0.6      0.998       0.972  0.527           1.70
 7 mu         0.7      0.974       0.989  0.445           1.51
 8 mu         0.8      0.958       0.943  0.250           1.68
 9 mu         0.9      0.976       0.875  0.0205          2.83
10 mu_1       0.1      1.40        0.391  0.0000405      15.8 
11 mu_1       0.2      1.25        0.851  0.00637         8.68
12 mu_1       0.3      1.06        0.979  0.0588          2.87
13 mu_1       0.4      0.994       0.988  0.227           2.40
14 mu_1       0.5      0.992       0.980  0.533           1.74
15 mu_1       0.6      0.991       0.956  0.483           1.71
16 mu_1       0.7      0.966       0.981  0.447           1.50
17 mu_1       0.8      0.960       0.940  0.200           1.81
18 mu_1       0.9      0.979       0.857  0.0149          3.04
19 mu_0       0.1      2.06        0.0966 0.00000447     52.4 
20 mu_0       0.2      1.62        0.550  0.000981       13.5 
21 mu_0       0.3      1.24        0.870  0.0151          5.19
22 mu_0       0.4      1.05        1.01   0.0859          2.79
23 mu_0       0.5      1.00        0.969  0.275           1.85
24 mu_0       0.6      1.01        0.976  0.495           1.82
25 mu_0       0.7      0.994       0.992  0.402           1.65
26 mu_0       0.8      0.950       0.974  0.227           1.71
27 mu_0       0.9      0.953       0.956  0.0252          1.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.117     0.0000740  7.20e-15      2.35
 2 mu         0.2     0.636     0.0100     8.39e-10      8.13
 3 mu         0.3     1.19      0.0960     7.23e- 7     13.9 
 4 mu         0.4     1.32      0.363      8.24e- 5      9.02
 5 mu         0.5     1.18      0.883      3.05e- 3      5.23
 6 mu         0.6     1.10      1.04       3.81e- 2      3.27
 7 mu         0.7     1.23      1.29       3.54e- 3      5.46
 8 mu         0.8     1.47      0.977      3.10e- 5      9.22
 9 mu         0.9     1.61      0.217      6.07e- 9     18.3 
10 mu_1       0.1     0.353     0.000581   6.80e-14      5.53
11 mu_1       0.2     1.02      0.0308     3.96e- 9     11.9 
12 mu_1       0.3     1.40      0.229      2.28e- 6     13.9 
13 mu_1       0.4     1.34      0.665      1.95e- 4      6.76
14 mu_1       0.5     1.16      0.992      5.76e- 3      4.82
15 mu_1       0.6     1.13      1.16       3.15e- 2      2.93
16 mu_1       0.7     1.29      1.27       1.19e- 3      6.50
17 mu_1       0.8     1.51      0.809      9.12e- 6      9.61
18 mu_1       0.9     1.62      0.170      1.59e- 9     19.2 
19 mu_0       0.1     0.0908    0.0000301  0             2.00
20 mu_0       0.2     0.539     0.00481    0             7.77
21 mu_0       0.3     1.09      0.0368     0            13.9 
22 mu_0       0.4     1.30      0.173      0            10.5 
23 mu_0       0.5     1.20      0.595      0             5.63
24 mu_0       0.6     1.06      0.784      0             4.41
25 mu_0       0.7     1.11      1.13       0             3.45
26 mu_0       0.8     1.30      1.21       0             7.69
27 mu_0       0.9     1.50      0.435      0            12.5 
[1] "Total run time was 80.708 seconds"
