
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1311"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  5  4  4  3 10  4  6  5  8  8  7  9  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04838 0.34494 0.61836 1.00000 5.13111 
[1] "event indicator table: "

  0   1 
764 547 
[1] "treatment indicator table: "

  0   1 
461 850 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 678
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 150.565 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.597 0.287
 2 mu         0.1   0.2 0.647 0.349
 3 mu         0.1   0.3 0.682 0.351
 4 mu         0.1   0.4 0.697 0.390
 5 mu         0.1   0.5 0.713 0.418
 6 mu         0.2   0.1 0.347 0.114
 7 mu         0.2   0.2 0.385 0.130
 8 mu         0.2   0.3 0.417 0.128
 9 mu         0.2   0.4 0.457 0.142
10 mu         0.2   0.5 0.474 0.151
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.34        0.0471 0.000000611     73.5 
 2 mu         0.2      0.910       0.321  0.000502        25.1 
 3 mu         0.3      0.827       0.672  0.0160           5.12
 4 mu         0.4      0.887       0.846  0.127            1.88
 5 mu         0.5      0.955       0.954  0.276            1.75
 6 mu         0.6      0.988       0.983  0.393            1.64
 7 mu         0.7      1.01        1.02   0.621            1.60
 8 mu         0.8      1.05        1.06   0.334            2.38
 9 mu         0.9      1.13        1.01   0.0284           5.54
10 mu_1       0.1      1.07        0.171  0.00000354      46.0 
11 mu_1       0.2      0.826       0.549  0.00146          7.86
12 mu_1       0.3      0.860       0.784  0.0314           2.55
13 mu_1       0.4      0.927       0.893  0.181            1.70
14 mu_1       0.5      0.975       0.971  0.314            1.84
15 mu_1       0.6      0.995       0.999  0.429            1.53
16 mu_1       0.7      1.01        1.03   0.549            1.60
17 mu_1       0.8      1.05        1.09   0.270            2.67
18 mu_1       0.9      1.14        1.01   0.0213           5.70
19 mu_0       0.1      1.37        0.0344 0.000000285     76.6 
20 mu_0       0.2      0.931       0.254  0.000262        29.5 
21 mu_0       0.3      0.813       0.601  0.00936          6.83
22 mu_0       0.4      0.860       0.772  0.0839           2.00
23 mu_0       0.5      0.934       0.926  0.238            1.67
24 mu_0       0.6      0.979       0.977  0.340            1.82
25 mu_0       0.7      0.996       0.976  0.456            1.61
26 mu_0       0.8      1.01        1.02   0.498            1.73
27 mu_0       0.9      1.04        1.04   0.0918           4.06
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.337    0.0000596  7.15e-18     16.2 
 2 mu         0.2      0.864    0.00445    3.75e-12     22.5 
 3 mu         0.3      1.28     0.0467     8.31e- 9     19.7 
 4 mu         0.4      1.35     0.211      1.97e- 6     11.4 
 5 mu         0.5      1.18     0.687      1.36e- 4      5.61
 6 mu         0.6      1.01     0.984      4.36e- 3      3.37
 7 mu         0.7      0.997    1.09       2.77e- 2      2.46
 8 mu         0.8      1.12     0.938      4.42e- 4      3.49
 9 mu         0.9      1.41     0.239      1.23e- 7     23.0 
10 mu_1       0.1      0.758    0.000349   7.15e-17     29.5 
11 mu_1       0.2      1.17     0.0136     1.88e-11     22.5 
12 mu_1       0.3      1.38     0.110      2.77e- 8     17.5 
13 mu_1       0.4      1.31     0.372      4.92e- 6      8.74
14 mu_1       0.5      1.12     0.843      2.73e- 4      5.23
15 mu_1       0.6      1.00     0.990      7.26e- 3      2.70
16 mu_1       0.7      1.03     1.12       1.05e- 2      2.60
17 mu_1       0.8      1.16     0.814      1.94e- 4      4.36
18 mu_1       0.9      1.44     0.191      4.79e- 8     25.5 
19 mu_0       0.1      0.291    0.0000109  0            14.7 
20 mu_0       0.2      0.788    0.00142    0            23.0 
21 mu_0       0.3      1.24     0.0174     0            20.6 
22 mu_0       0.4      1.38     0.103      0            13.9 
23 mu_0       0.5      1.24     0.452      0             6.70
24 mu_0       0.6      1.02     0.841      0             4.49
25 mu_0       0.7      0.924    0.906      0             2.87
26 mu_0       0.8      0.974    1.03       0             2.96
27 mu_0       0.9      1.11     0.257      0             6.76
[1] "Total run time was 156.756 seconds"
