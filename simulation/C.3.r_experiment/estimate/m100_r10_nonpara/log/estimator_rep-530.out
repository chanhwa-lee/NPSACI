
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1271"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  3 11  6  8  5  4  3  9  9  7  5  2 10  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03082 0.36658 0.63694 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
747 524 
[1] "treatment indicator table: "

  0   1 
475 796 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 64.089 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.267 0.102 
 2 mu         0.1   0.2 0.368 0.104 
 3 mu         0.1   0.3 0.483 0.131 
 4 mu         0.1   0.4 0.474 0.135 
 5 mu         0.1   0.5 0.552 0.143 
 6 mu         0.2   0.1 0.349 0.0720
 7 mu         0.2   0.2 0.482 0.0814
 8 mu         0.2   0.3 0.587 0.0969
 9 mu         0.2   0.4 0.594 0.0993
10 mu         0.2   0.5 0.662 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.799       0.0829 0.00000118      15.1 
 2 mu         0.2      1.06        0.404  0.000944         9.64
 3 mu         0.3      1.06        0.844  0.0282           7.98
 4 mu         0.4      1.02        0.948  0.182            4.36
 5 mu         0.5      1.00        0.999  0.332            2.01
 6 mu         0.6      1.00        1.01   0.522            1.47
 7 mu         0.7      1.01        1.02   0.434            1.74
 8 mu         0.8      1.03        0.976  0.148            2.85
 9 mu         0.9      0.991       0.729  0.00873          7.17
10 mu_1       0.1      1.11        0.247  0.00000655      14.3 
11 mu_1       0.2      1.15        0.722  0.00264          8.83
12 mu_1       0.3      1.07        0.950  0.0532           7.12
13 mu_1       0.4      1.02        0.968  0.234            3.20
14 mu_1       0.5      1.00        1.02   0.361            1.63
15 mu_1       0.6      0.995       0.995  0.514            1.36
16 mu_1       0.7      1.01        1.01   0.392            1.94
17 mu_1       0.8      1.02        0.946  0.123            3.15
18 mu_1       0.9      0.983       0.689  0.00669          7.82
19 mu_0       0.1      0.764       0.0617 0.000000583     16.5 
20 mu_0       0.2      1.04        0.312  0.000519        10.2 
21 mu_0       0.3      1.06        0.763  0.0175           8.35
22 mu_0       0.4      1.02        0.895  0.140            5.13
23 mu_0       0.5      1.01        0.988  0.302            2.39
24 mu_0       0.6      1.01        1.02   0.459            2.05
25 mu_0       0.7      1.01        1.01   0.533            1.49
26 mu_0       0.8      1.05        1.05   0.247            2.28
27 mu_0       0.9      1.07        0.911  0.0271           4.89
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.32     0.0000302  7.51e-16    318.  
 2 mu         0.2      2.00     0.00513    1.97e-10     50.9 
 3 mu         0.3      1.66     0.0797     2.91e- 7     34.4 
 4 mu         0.4      1.31     0.296      5.16e- 5     15.3 
 5 mu         0.5      1.04     0.706      2.49e- 3      5.01
 6 mu         0.6      0.966    0.945      2.87e- 5      3.04
 7 mu         0.7      1.11     1.07       9.11e- 8      5.02
 8 mu         0.8      1.74     0.703      2.74e-11     22.3 
 9 mu         0.9      3.98     0.100      2.61e-17    113.  
10 mu_1       0.1      1.95     0.000134   0            66.8 
11 mu_1       0.2      1.78     0.0172     0            46.3 
12 mu_1       0.3      1.44     0.146      0            20.9 
13 mu_1       0.4      1.14     0.509      0             6.95
14 mu_1       0.5      0.977    0.855      0             4.38
15 mu_1       0.6      0.976    0.960      0             3.22
16 mu_1       0.7      1.18     1.05       0             6.06
17 mu_1       0.8      1.89     0.585      0            26.2 
18 mu_1       0.9      4.27     0.0710     0           125.  
19 mu_0       0.1      4.59     0.0000126  0           353.  
20 mu_0       0.2      2.06     0.00209    0            52.0 
21 mu_0       0.3      1.75     0.0365     0            40.2 
22 mu_0       0.4      1.43     0.170      0            20.8 
23 mu_0       0.5      1.11     0.477      0             7.57
24 mu_0       0.6      0.952    0.780      0             3.39
25 mu_0       0.7      0.964    0.994      0             3.43
26 mu_0       0.8      1.13     0.812      0             9.95
27 mu_0       0.9      1.45     0.204      0            40.9 
[1] "Total run time was 68.006 seconds"
