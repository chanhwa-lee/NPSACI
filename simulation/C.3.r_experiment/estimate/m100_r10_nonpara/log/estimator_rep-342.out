
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1273"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  6  7  5  4  6  8  9  6  6  6  5  9  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03916 0.35676 0.60265 1.00000 3.50842 
[1] "event indicator table: "

  0   1 
753 520 
[1] "treatment indicator table: "

  0   1 
479 794 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.4 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.140 0.150 
 2 mu         0.1   0.2 0.310 0.119 
 3 mu         0.1   0.3 0.359 0.180 
 4 mu         0.1   0.4 0.363 0.186 
 5 mu         0.1   0.5 0.344 0.198 
 6 mu         0.2   0.1 0.142 0.105 
 7 mu         0.2   0.2 0.340 0.0677
 8 mu         0.2   0.3 0.358 0.0957
 9 mu         0.2   0.4 0.391 0.110 
10 mu         0.2   0.5 0.381 0.125 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.504       0.0306 0.00000150      18.6 
 2 mu         0.2      0.715       0.310  0.000893         9.62
 3 mu         0.3      0.899       0.709  0.0145           4.91
 4 mu         0.4      0.997       0.952  0.0812           2.68
 5 mu         0.5      1.02        1.00   0.283            1.87
 6 mu         0.6      1.02        1.01   0.597            1.80
 7 mu         0.7      1.04        1.05   0.477            2.02
 8 mu         0.8      1.11        0.999  0.167            5.41
 9 mu         0.9      1.34        0.706  0.0147          34.0 
10 mu_1       0.1      0.566       0.118  0.00000826       3.89
11 mu_1       0.2      0.810       0.513  0.00253          4.95
12 mu_1       0.3      0.953       0.864  0.0280           3.51
13 mu_1       0.4      1.01        0.976  0.124            2.15
14 mu_1       0.5      1.01        0.998  0.384            1.93
15 mu_1       0.6      1.02        1.01   0.585            1.72
16 mu_1       0.7      1.05        1.07   0.404            2.31
17 mu_1       0.8      1.13        0.991  0.138            6.65
18 mu_1       0.9      1.37        0.664  0.0113          37.8 
19 mu_0       0.1      0.497       0.0202 0.000000747     20.6 
20 mu_0       0.2      0.692       0.254  0.000484        11.8 
21 mu_0       0.3      0.876       0.666  0.00874          6.54
22 mu_0       0.4      0.989       0.937  0.0525           3.63
23 mu_0       0.5      1.02        0.963  0.183            2.13
24 mu_0       0.6      1.02        0.987  0.515            1.91
25 mu_0       0.7      1.02        1.01   0.619            1.51
26 mu_0       0.8      1.05        0.990  0.272            2.99
27 mu_0       0.9      1.08        1.06   0.0455           5.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      12.3     0.0000533  1.44e-13   1210.  
 2 mu         0.2       7.29    0.00575    1.67e- 8    662.  
 3 mu         0.3       3.55    0.0690     1.44e- 5    229.  
 4 mu         0.4       1.99    0.296      1.65e- 3     56.0 
 5 mu         0.5       1.33    0.810      3.12e- 2      9.78
 6 mu         0.6       1.12    1.04       2.24e- 1      2.91
 7 mu         0.7       1.37    1.10       2.67e- 2     11.1 
 8 mu         0.8       2.51    0.621      6.32e- 4     71.9 
 9 mu         0.9       4.95    0.112      3.47e- 7    266.  
10 mu_1       0.1      10.5     0.000340   1.36e-12   1008.  
11 mu_1       0.2       3.80    0.0178     7.91e- 8    276.  
12 mu_1       0.3       2.10    0.162      4.54e- 5     63.5 
13 mu_1       0.4       1.52    0.520      3.89e- 3     18.6 
14 mu_1       0.5       1.19    0.962      5.20e- 2      6.11
15 mu_1       0.6       1.13    1.08       9.33e- 2      3.15
16 mu_1       0.7       1.50    1.04       5.69e- 3     15.0 
17 mu_1       0.8       2.75    0.468      6.58e- 5     84.9 
18 mu_1       0.9       5.13    0.0718     3.21e- 8    279.  
19 mu_0       0.1      12.5     0.0000178  0          1233.  
20 mu_0       0.2       8.16    0.00201    0           759.  
21 mu_0       0.3       4.18    0.0312     0           300.  
22 mu_0       0.4       2.30    0.169      0            85.5 
23 mu_0       0.5       1.47    0.618      0            17.3 
24 mu_0       0.6       1.11    0.967      0             3.59
25 mu_0       0.7       1.08    1.03       0             3.36
26 mu_0       0.8       1.56    1.00       0            20.0 
27 mu_0       0.9       3.36    0.188      0           148.  
[1] "Total run time was 71.367 seconds"
