
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1275"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  3  2 11  8  6  5  8  7  8  9  6  5  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02776 0.33394 0.61198 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
719 556 
[1] "treatment indicator table: "

  0   1 
508 767 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.854 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.455 0.140 
 2 mu         0.1   0.2 0.485 0.150 
 3 mu         0.1   0.3 0.538 0.171 
 4 mu         0.1   0.4 0.617 0.199 
 5 mu         0.1   0.5 0.612 0.201 
 6 mu         0.2   0.1 0.433 0.0814
 7 mu         0.2   0.2 0.497 0.0930
 8 mu         0.2   0.3 0.556 0.104 
 9 mu         0.2   0.4 0.619 0.105 
10 mu         0.2   0.5 0.654 0.117 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.902       0.118  0.000000107      30.6 
 2 mu         0.2      0.976       0.576  0.000118         11.8 
 3 mu         0.3      1.03        0.966  0.00512           5.56
 4 mu         0.4      1.04        1.05   0.0566            2.95
 5 mu         0.5      1.02        0.978  0.280             1.84
 6 mu         0.6      0.990       0.999  0.414             1.55
 7 mu         0.7      0.979       0.989  0.272             1.81
 8 mu         0.8      0.984       0.933  0.122             2.17
 9 mu         0.9      1.01        0.746  0.0164            3.94
10 mu_1       0.1      1.08        0.338  0.000000663      20.4 
11 mu_1       0.2      1.02        0.859  0.000371          6.08
12 mu_1       0.3      1.05        1.04   0.0110            3.12
13 mu_1       0.4      1.03        0.987  0.0933            2.40
14 mu_1       0.5      1.00        0.985  0.336             1.65
15 mu_1       0.6      0.977       0.966  0.362             1.69
16 mu_1       0.7      0.972       0.984  0.240             1.79
17 mu_1       0.8      0.981       0.904  0.0998            2.25
18 mu_1       0.9      1.02        0.725  0.0123            4.28
19 mu_0       0.1      0.883       0.0897 0.0000000450     31.7 
20 mu_0       0.2      0.965       0.473  0.0000542        13.8 
21 mu_0       0.3      1.02        0.939  0.00261           6.60
22 mu_0       0.4      1.05        1.04   0.0321            3.68
23 mu_0       0.5      1.04        1.00   0.180             2.11
24 mu_0       0.6      1.01        1.02   0.397             1.60
25 mu_0       0.7      0.997       0.993  0.348             1.85
26 mu_0       0.8      0.992       0.995  0.172             2.17
27 mu_0       0.9      0.957       0.941  0.0162            2.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.52     0.0000994  9.98e-16    195.  
 2 mu         0.2      2.66     0.00973    2.33e-10    133.  
 3 mu         0.3      1.78     0.0979     3.01e- 7     40.5 
 4 mu         0.4      1.29     0.472      4.57e- 5      9.97
 5 mu         0.5      1.14     0.951      2.12e- 3      6.40
 6 mu         0.6      1.08     0.918      2.59e- 2      6.39
 7 mu         0.7      1.04     0.922      6.66e- 4      4.92
 8 mu         0.8      1.12     0.446      1.99e- 6      6.84
 9 mu         0.9      1.38     0.0470     7.68e-11     16.8 
10 mu_1       0.1      3.45     0.000652   9.46e-15    230.  
11 mu_1       0.2      2.35     0.0290     1.10e- 9     78.4 
12 mu_1       0.3      1.51     0.218      9.50e- 7     24.8 
13 mu_1       0.4      1.20     0.674      1.08e- 4      5.99
14 mu_1       0.5      1.13     0.994      4.01e- 3      7.04
15 mu_1       0.6      1.09     0.958      4.32e- 3      5.85
16 mu_1       0.7      1.06     0.902      1.12e- 4      5.64
17 mu_1       0.8      1.14     0.342      2.92e- 7      7.33
18 mu_1       0.9      1.40     0.0324     1.00e-11     18.7 
19 mu_0       0.1      2.42     0.0000292  0           191.  
20 mu_0       0.2      2.74     0.00476    0           147.  
21 mu_0       0.3      1.90     0.0544     0            51.0 
22 mu_0       0.4      1.34     0.344      0            13.3 
23 mu_0       0.5      1.15     0.799      0             5.76
24 mu_0       0.6      1.08     0.915      0             7.18
25 mu_0       0.7      1.01     0.856      0             5.79
26 mu_0       0.8      0.997    0.612      0             4.89
27 mu_0       0.9      1.22     0.114      0             9.91
[1] "Total run time was 96.83 seconds"
