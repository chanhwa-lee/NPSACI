
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1218"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  4  7  9  5  7  5  7  6  6  4  5  4  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05193 0.39276 0.65631 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
732 486 
[1] "treatment indicator table: "

  0   1 
420 798 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 74.726 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.209 0.0980
 2 mu         0.1   0.2 0.300 0.136 
 3 mu         0.1   0.3 0.370 0.124 
 4 mu         0.1   0.4 0.388 0.139 
 5 mu         0.1   0.5 0.420 0.151 
 6 mu         0.2   0.1 0.199 0.0647
 7 mu         0.2   0.2 0.295 0.0866
 8 mu         0.2   0.3 0.365 0.0715
 9 mu         0.2   0.4 0.396 0.0792
10 mu         0.2   0.5 0.434 0.0854
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.603       0.0532 0.00000000869     16.5 
 2 mu         0.2      0.711       0.403  0.0000336          6.15
 3 mu         0.3      0.834       0.754  0.00284            3.78
 4 mu         0.4      0.936       0.843  0.0468             3.34
 5 mu         0.5      0.997       0.936  0.235              2.91
 6 mu         0.6      1.03        0.991  0.341              1.98
 7 mu         0.7      1.04        1.04   0.448              1.66
 8 mu         0.8      1.01        0.986  0.290              2.35
 9 mu         0.9      0.950       0.910  0.0248             3.10
10 mu_1       0.1      0.622       0.181  0.0000000567       8.51
11 mu_1       0.2      0.766       0.644  0.000110           4.31
12 mu_1       0.3      0.891       0.834  0.00627            3.13
13 mu_1       0.4      0.973       0.820  0.0785             3.40
14 mu_1       0.5      1.02        0.954  0.277              2.82
15 mu_1       0.6      1.04        1.02   0.330              1.85
16 mu_1       0.7      1.04        1.05   0.536              1.67
17 mu_1       0.8      1.01        0.971  0.218              2.45
18 mu_1       0.9      0.952       0.876  0.0177             3.31
19 mu_0       0.1      0.601       0.0355 0.00000000335     18.3 
20 mu_0       0.2      0.698       0.319  0.0000144          7.17
21 mu_0       0.3      0.809       0.647  0.00137            4.55
22 mu_0       0.4      0.911       0.822  0.0257             3.31
23 mu_0       0.5      0.978       0.888  0.144              3.09
24 mu_0       0.6      1.01        0.984  0.330              2.35
25 mu_0       0.7      1.03        1.02   0.242              1.86
26 mu_0       0.8      1.02        1.06   0.284              1.94
27 mu_0       0.9      0.933       0.920  0.0891             2.97
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.09    0.000233   4.11e-17    109.  
 2 mu         0.2       1.85    0.0161     1.92e-11     66.9 
 3 mu         0.3       1.78    0.127      3.72e- 8     26.4 
 4 mu         0.4       1.82    0.468      7.54e- 6     30.6 
 5 mu         0.5       1.64    1.03       4.36e- 4     20.5 
 6 mu         0.6       1.32    1.09       1.11e- 2      7.08
 7 mu         0.7       1.10    0.896      1.29e- 2      3.73
 8 mu         0.8       1.17    0.762      2.55e- 4      6.91
 9 mu         0.9       1.85    0.117      2.80e- 7     20.2 
10 mu_1       0.1       1.93    0.00131    0            98.8 
11 mu_1       0.2       1.49    0.0476     0            30.4 
12 mu_1       0.3       1.60    0.271      0            26.0 
13 mu_1       0.4       1.68    0.742      0            30.6 
14 mu_1       0.5       1.47    1.09       0            16.4 
15 mu_1       0.6       1.20    1.07       0             6.24
16 mu_1       0.7       1.06    0.811      0             3.91
17 mu_1       0.8       1.21    0.648      0             8.10
18 mu_1       0.9       1.92    0.0836     0            21.1 
19 mu_0       0.1       2.11    0.0000952  0           110.  
20 mu_0       0.2       1.94    0.00638    0            76.0 
21 mu_0       0.3       1.85    0.0560     0            34.3 
22 mu_0       0.4       1.92    0.289      0            30.6 
23 mu_0       0.5       1.80    0.827      0            24.6 
24 mu_0       0.6       1.49    1.13       0             9.08
25 mu_0       0.7       1.19    1.05       0             4.45
26 mu_0       0.8       1.03    0.831      0             5.01
27 mu_0       0.9       1.23    0.223      0            12.6 
[1] "Total run time was 79.349 seconds"
