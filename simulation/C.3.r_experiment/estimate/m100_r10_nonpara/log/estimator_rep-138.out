
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1259"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  9  9  2  5 10  3  6  7  5  7  3  8  5  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06422 0.41627 0.66836 1.00000 4.09527 
[1] "event indicator table: "

  0   1 
744 515 
[1] "treatment indicator table: "

  0   1 
428 831 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.167 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.595 0.182 
 2 mu         0.1   0.2 0.675 0.220 
 3 mu         0.1   0.3 0.783 0.268 
 4 mu         0.1   0.4 0.834 0.264 
 5 mu         0.1   0.5 0.905 0.297 
 6 mu         0.2   0.1 0.392 0.0644
 7 mu         0.2   0.2 0.443 0.0752
 8 mu         0.2   0.3 0.521 0.0917
 9 mu         0.2   0.4 0.566 0.0850
10 mu         0.2   0.5 0.610 0.100 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.40        0.127  0.00000000393     39.8 
 2 mu         0.2      1.09        0.440  0.0000160          5.68
 3 mu         0.3      0.986       0.762  0.00144            5.74
 4 mu         0.4      0.967       0.947  0.0252             3.08
 5 mu         0.5      1.01        0.972  0.168              2.32
 6 mu         0.6      1.05        1.01   0.521              2.58
 7 mu         0.7      1.02        0.971  0.645              1.88
 8 mu         0.8      0.962       0.950  0.429              1.86
 9 mu         0.9      0.968       0.950  0.146              2.50
10 mu_1       0.1      1.10        0.336  0.0000000258       8.59
11 mu_1       0.2      1.03        0.657  0.0000531          6.88
12 mu_1       0.3      0.964       0.877  0.00321            4.89
13 mu_1       0.4      0.977       0.962  0.0428             2.74
14 mu_1       0.5      1.03        0.989  0.232              2.48
15 mu_1       0.6      1.05        1.01   0.584              2.52
16 mu_1       0.7      1.01        0.990  0.525              1.73
17 mu_1       0.8      0.958       0.925  0.402              1.86
18 mu_1       0.9      0.973       0.955  0.118              2.54
19 mu_0       0.1      1.43        0.0966 0.00000000151     44.2 
20 mu_0       0.2      1.11        0.350  0.00000679         6.89
21 mu_0       0.3      0.995       0.649  0.000680           6.10
22 mu_0       0.4      0.959       0.923  0.0135             3.37
23 mu_0       0.5      0.999       0.958  0.104              2.48
24 mu_0       0.6      1.05        1.02   0.395              2.67
25 mu_0       0.7      1.05        0.999  0.492              2.23
26 mu_0       0.8      0.974       0.949  0.537              1.85
27 mu_0       0.9      0.920       0.922  0.192              2.06
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.510    0.000114   3.04e-17     23.5 
 2 mu         0.2      0.867    0.0117     1.42e-11     14.5 
 3 mu         0.3      1.10     0.0876     2.75e- 8     10.3 
 4 mu         0.4      1.19     0.381      5.57e- 6      5.72
 5 mu         0.5      1.13     0.790      3.22e- 4      4.55
 6 mu         0.6      0.995    0.964      8.23e- 3      3.89
 7 mu         0.7      0.957    0.877      2.79e- 3      4.66
 8 mu         0.8      1.06     1.01       4.40e- 5      3.48
 9 mu         0.9      1.22     0.303      8.60e- 9      8.49
10 mu_1       0.1      0.840    0.000714   2.89e-16     21.4 
11 mu_1       0.2      1.07     0.0394     6.73e-11     13.6 
12 mu_1       0.3      1.20     0.218      8.70e- 8      8.07
13 mu_1       0.4      1.20     0.538      1.32e- 5      5.79
14 mu_1       0.5      1.08     0.891      6.12e- 4      4.75
15 mu_1       0.6      0.956    0.792      6.44e- 3      3.43
16 mu_1       0.7      0.957    0.785      3.62e- 4      4.81
17 mu_1       0.8      1.08     0.839      6.29e- 6      3.64
18 mu_1       0.9      1.23     0.240      2.25e- 9      9.44
19 mu_0       0.1      0.473    0.0000334  0            23.8 
20 mu_0       0.2      0.816    0.00452    0            16.5 
21 mu_0       0.3      1.06     0.0366     0            11.2 
22 mu_0       0.4      1.18     0.191      0             6.63
23 mu_0       0.5      1.17     0.620      0             5.09
24 mu_0       0.6      1.05     0.843      0             4.57
25 mu_0       0.7      0.957    0.750      0             4.31
26 mu_0       0.8      1.00     0.660      0             4.83
27 mu_0       0.9      1.08     0.376      0             5.36
[1] "Total run time was 54.335 seconds"
