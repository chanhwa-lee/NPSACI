
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1266"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6 10  7  4  5  6  5  4  5  6  8  6  6  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03992 0.35692 0.58109 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
766 500 
[1] "treatment indicator table: "

  0   1 
434 832 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.545 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.458 0.140
 2 mu         0.1   0.2 0.638 0.213
 3 mu         0.1   0.3 0.636 0.214
 4 mu         0.1   0.4 0.635 0.235
 5 mu         0.1   0.5 0.673 0.209
 6 mu         0.2   0.1 0.337 0.101
 7 mu         0.2   0.2 0.469 0.173
 8 mu         0.2   0.3 0.468 0.163
 9 mu         0.2   0.4 0.460 0.172
10 mu         0.2   0.5 0.496 0.142
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.05        0.0586 0.000000219     14.2 
 2 mu         0.2      0.825       0.407  0.000207         8.54
 3 mu         0.3      0.901       0.877  0.00658          4.94
 4 mu         0.4      1.01        1.04   0.0599           3.79
 5 mu         0.5      1.03        0.971  0.262            2.92
 6 mu         0.6      1.02        1.02   0.607            1.60
 7 mu         0.7      1.01        1.01   0.640            1.67
 8 mu         0.8      0.943       0.937  0.251            1.98
 9 mu         0.9      0.777       0.684  0.0214           2.64
10 mu_1       0.1      0.780       0.177  0.00000129       4.69
11 mu_1       0.2      0.795       0.725  0.000619         3.14
12 mu_1       0.3      0.944       0.965  0.0149           3.58
13 mu_1       0.4      1.03        0.984  0.103            3.77
14 mu_1       0.5      1.02        0.969  0.366            2.50
15 mu_1       0.6      1.01        1.01   0.598            1.62
16 mu_1       0.7      1.00        1.00   0.539            1.62
17 mu_1       0.8      0.929       0.904  0.195            2.02
18 mu_1       0.9      0.767       0.636  0.0164           2.82
19 mu_0       0.1      1.09        0.0406 0.000000101     15.6 
20 mu_0       0.2      0.832       0.326  0.0000847       10.4 
21 mu_0       0.3      0.882       0.785  0.00302          6.60
22 mu_0       0.4      1.00        1.02   0.0313           4.07
23 mu_0       0.5      1.04        0.958  0.158            3.33
24 mu_0       0.6      1.02        1.00   0.361            1.95
25 mu_0       0.7      1.02        1.05   0.526            1.76
26 mu_0       0.8      1.00        0.983  0.432            1.84
27 mu_0       0.9      0.864       0.849  0.0664           2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     135.     0.0000279   4.77e-14  13315.  
 2 mu         0.2      77.3    0.00468     3.97e- 9   7290.  
 3 mu         0.3      30.6    0.0607      2.61e- 6   2517.  
 4 mu         0.4       9.79   0.275       1.96e- 4    616.  
 5 mu         0.5       2.92   0.735       4.64e- 3    104.  
 6 mu         0.6       1.34   1.08        5.71e- 2     10.7 
 7 mu         0.7       1.26   1.17        3.45e- 2      6.12
 8 mu         0.8       1.92   0.821       1.43e- 3     26.3 
 9 mu         0.9       3.93   0.149       8.98e- 7    112.  
10 mu_1       0.1     114.     0.000186    4.27e-13  11096.  
11 mu_1       0.2      36.0    0.0158      1.99e- 8   3037.  
12 mu_1       0.3      12.0    0.143       8.70e- 6    699.  
13 mu_1       0.4       4.07   0.462       4.59e- 4    158.  
14 mu_1       0.5       1.68   0.947       8.69e- 3     36.1 
15 mu_1       0.6       1.18   1.11        4.62e- 2      4.11
16 mu_1       0.7       1.32   1.15        6.16e- 3      7.82
17 mu_1       0.8       2.09   0.708       3.61e- 4     29.4 
18 mu_1       0.9       4.16   0.109       3.10e- 7    125.  
19 mu_0       0.1     137.     0.00000988  0         13562.  
20 mu_0       0.2      87.6    0.00186     0          8353.  
21 mu_0       0.3      38.6    0.0237      0          3296.  
22 mu_0       0.4      13.6    0.145       0           941.  
23 mu_0       0.5       4.16   0.499       0           190.  
24 mu_0       0.6       1.58   0.936       0            24.5 
25 mu_0       0.7       1.14   1.22        0             2.80
26 mu_0       0.8       1.26   0.968       0            13.9 
27 mu_0       0.9       1.81   0.237       0            51.3 
[1] "Total run time was 55.598 seconds"
