
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  3  7  3 10 10  6  5  5 11  4  7  8  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03568 0.34028 0.60871 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
708 544 
[1] "treatment indicator table: "

  0   1 
475 777 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 49.584 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.234 0.142
 2 mu         0.1   0.2 0.388 0.172
 3 mu         0.1   0.3 0.376 0.186
 4 mu         0.1   0.4 0.370 0.209
 5 mu         0.1   0.5 0.369 0.230
 6 mu         0.2   0.1 0.278 0.101
 7 mu         0.2   0.2 0.425 0.122
 8 mu         0.2   0.3 0.433 0.129
 9 mu         0.2   0.4 0.446 0.142
10 mu         0.2   0.5 0.459 0.155
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.758       0.0298 0.00000145      29.1 
 2 mu         0.2      0.893       0.197  0.000661        13.3 
 3 mu         0.3      0.949       0.571  0.0157           6.39
 4 mu         0.4      0.982       0.870  0.106            3.77
 5 mu         0.5      0.990       0.965  0.354            1.83
 6 mu         0.6      0.987       0.975  0.634            1.34
 7 mu         0.7      1.00        1.03   0.477            1.59
 8 mu         0.8      1.02        1.01   0.141            3.33
 9 mu         0.9      1.02        0.610  0.00702          7.26
10 mu_1       0.1      0.711       0.112  0.00000853      16.1 
11 mu_1       0.2      0.885       0.411  0.00195         11.1 
12 mu_1       0.3      0.957       0.782  0.0312           5.81
13 mu_1       0.4      0.993       0.934  0.162            2.95
14 mu_1       0.5      0.994       0.977  0.455            1.44
15 mu_1       0.6      0.991       0.999  0.651            1.38
16 mu_1       0.7      1.01        1.04   0.398            1.74
17 mu_1       0.8      1.03        1.00   0.111            3.60
18 mu_1       0.9      1.03        0.571  0.00501          8.00
19 mu_0       0.1      0.763       0.0185 0.000000662     32.4 
20 mu_0       0.2      0.895       0.145  0.000338        16.0 
21 mu_0       0.3      0.946       0.463  0.00902          7.29
22 mu_0       0.4      0.974       0.774  0.0684           4.32
23 mu_0       0.5      0.987       0.945  0.254            2.23
24 mu_0       0.6      0.980       0.982  0.588            1.35
25 mu_0       0.7      0.981       1.00   0.639            1.39
26 mu_0       0.8      0.997       1.02   0.261            2.25
27 mu_0       0.9      1.00        0.908  0.0251           5.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.605    0.000135   1.63e-14     22.1 
 2 mu         0.2      1.11     0.0106     1.07e- 9     30.6 
 3 mu         0.3      1.29     0.119      7.01e- 7     22.3 
 4 mu         0.4      1.25     0.468      6.99e- 5     13.2 
 5 mu         0.5      1.14     0.934      2.48e- 3      4.99
 6 mu         0.6      1.10     1.04       4.59e- 2      2.80
 7 mu         0.7      1.34     0.851      5.47e- 2     10.1 
 8 mu         0.8      2.17     0.365      1.23e- 3     46.7 
 9 mu         0.9      3.57     0.0450     1.09e- 6    154.  
10 mu_1       0.1      1.22     0.000856   1.63e-13     40.1 
11 mu_1       0.2      1.32     0.0328     5.34e- 9     27.8 
12 mu_1       0.3      1.26     0.240      2.34e- 6     18.6 
13 mu_1       0.4      1.16     0.687      1.75e- 4      8.25
14 mu_1       0.5      1.07     1.07       4.97e- 3      2.97
15 mu_1       0.6      1.10     1.02       7.66e- 2      3.90
16 mu_1       0.7      1.45     0.778      1.43e- 2     12.5 
17 mu_1       0.8      2.34     0.270      4.24e- 4     54.9 
18 mu_1       0.9      3.66     0.0304     3.77e- 7    161.  
19 mu_0       0.1      0.536    0.0000453  0            20.0 
20 mu_0       0.2      1.05     0.00495    0            31.3 
21 mu_0       0.3      1.30     0.0692     0            24.2 
22 mu_0       0.4      1.32     0.313      0            16.5 
23 mu_0       0.5      1.20     0.745      0             7.49
24 mu_0       0.6      1.09     1.09       0             2.76
25 mu_0       0.7      1.11     1.00       0             4.48
26 mu_0       0.8      1.52     0.694      0            17.0 
27 mu_0       0.9      2.81     0.153      0            90.4 
[1] "Total run time was 52.975 seconds"
