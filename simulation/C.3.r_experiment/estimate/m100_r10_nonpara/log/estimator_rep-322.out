
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1263"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  5  3 11  7  7  7  7  4  6  5  8  7  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04655 0.34769 0.64067 1.00000 6.06484 
[1] "event indicator table: "

  0   1 
744 519 
[1] "treatment indicator table: "

  0   1 
468 795 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.774 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.345 0.153
 2 mu         0.1   0.2 0.352 0.127
 3 mu         0.1   0.3 0.378 0.154
 4 mu         0.1   0.4 0.411 0.140
 5 mu         0.1   0.5 0.424 0.140
 6 mu         0.2   0.1 0.363 0.137
 7 mu         0.2   0.2 0.383 0.113
 8 mu         0.2   0.3 0.425 0.138
 9 mu         0.2   0.4 0.473 0.125
10 mu         0.2   0.5 0.507 0.125
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.577       0.0891  2.56e-10      6.09
 2 mu         0.2      0.802       0.429   2.45e- 6      4.39
 3 mu         0.3      0.900       0.777   3.92e- 4      3.75
 4 mu         0.4      0.965       0.937   1.11e- 2      2.41
 5 mu         0.5      1.02        0.997   1.15e- 1      1.91
 6 mu         0.6      1.03        1.05    3.04e- 1      1.65
 7 mu         0.7      1.03        1.04    3.19e- 1      1.90
 8 mu         0.8      1.00        0.997   4.66e- 2      2.59
 9 mu         0.9      0.986       0.846   6.45e- 4      5.51
10 mu_1       0.1      0.714       0.292   1.89e- 9      3.59
11 mu_1       0.2      0.883       0.648   9.09e- 6      4.59
12 mu_1       0.3      0.939       0.904   9.74e- 4      3.24
13 mu_1       0.4      0.996       0.969   2.08e- 2      2.05
14 mu_1       0.5      1.03        1.02    1.73e- 1      1.85
15 mu_1       0.6      1.04        1.04    3.36e- 1      1.67
16 mu_1       0.7      1.02        1.03    2.55e- 1      1.88
17 mu_1       0.8      0.996       1.00    3.41e- 2      2.64
18 mu_1       0.9      0.986       0.809   4.27e- 4      6.04
19 mu_0       0.1      0.562       0.0644  7.42e-11      6.75
20 mu_0       0.2      0.782       0.357   7.91e- 7      4.34
21 mu_0       0.3      0.884       0.719   1.43e- 4      3.98
22 mu_0       0.4      0.945       0.911   4.64e- 3      2.84
23 mu_0       0.5      1.00        0.977   5.59e- 2      1.96
24 mu_0       0.6      1.03        1.02    2.55e- 1      1.87
25 mu_0       0.7      1.04        1.04    3.33e- 1      1.94
26 mu_0       0.8      1.03        1.05    9.70e- 2      2.40
27 mu_0       0.9      0.987       0.962   2.61e- 3      2.86
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.76    0.0000480  5.01e-15    498.  
 2 mu         0.2       3.33    0.00521    6.57e-10    242.  
 3 mu         0.3       1.69    0.0783     6.48e- 7     73.2 
 4 mu         0.4       1.13    0.378      8.62e- 5     15.3 
 5 mu         0.5       1.04    0.816      3.83e- 3      3.43
 6 mu         0.6       1.06    1.05       1.79e- 3      2.72
 7 mu         0.7       1.15    1.13       1.83e- 5      3.81
 8 mu         0.8       1.59    0.617      2.43e- 8     28.1 
 9 mu         0.9       3.13    0.0747     2.35e-13    117.  
10 mu_1       0.1       4.91    0.000331   5.01e-14    383.  
11 mu_1       0.2       1.92    0.0197     3.29e- 9     93.1 
12 mu_1       0.3       1.16    0.169      2.16e- 6     18.8 
13 mu_1       0.4       1.01    0.613      2.15e- 4      7.32
14 mu_1       0.5       1.04    0.877      7.65e- 3      3.33
15 mu_1       0.6       1.08    1.12       3.14e- 4      2.40
16 mu_1       0.7       1.20    1.11       2.76e- 6      5.15
17 mu_1       0.8       1.69    0.523      3.20e- 9     33.3 
18 mu_1       0.9       3.27    0.0524     2.74e-14    123.  
19 mu_0       0.1       5.85    0.0000103  0           510.  
20 mu_0       0.2       3.69    0.00236    0           279.  
21 mu_0       0.3       1.91    0.0442     0            96.5 
22 mu_0       0.4       1.21    0.210      0            23.6 
23 mu_0       0.5       1.04    0.561      0             4.90
24 mu_0       0.6       1.03    0.911      0             3.20
25 mu_0       0.7       1.04    1.04       0             2.72
26 mu_0       0.8       1.17    1.01       0             7.39
27 mu_0       0.9       1.83    0.216      0            61.6 
[1] "Total run time was 61.448 seconds"
