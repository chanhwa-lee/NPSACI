
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1179"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  9  8  8  7  5 14  7  7  3  2  2  7  8  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04125 0.34046 0.61616 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
704 475 
[1] "treatment indicator table: "

  0   1 
433 746 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 583
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 74.621 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.568 0.278 
 2 mu         0.1   0.2 0.668 0.314 
 3 mu         0.1   0.3 0.758 0.373 
 4 mu         0.1   0.4 0.763 0.398 
 5 mu         0.1   0.5 0.767 0.420 
 6 mu         0.2   0.1 0.364 0.0894
 7 mu         0.2   0.2 0.449 0.0834
 8 mu         0.2   0.3 0.504 0.124 
 9 mu         0.2   0.4 0.502 0.146 
10 mu         0.2   0.5 0.504 0.169 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.35         0.141 0.0000573     52.4 
 2 mu         0.2      1.09         0.593 0.00642        7.13
 3 mu         0.3      1.05         0.991 0.0607         4.56
 4 mu         0.4      1.05         0.987 0.211          2.44
 5 mu         0.5      1.03         0.996 0.438          1.62
 6 mu         0.6      0.993        0.973 0.594          1.53
 7 mu         0.7      0.974        1.02  0.523          1.31
 8 mu         0.8      0.989        0.986 0.140          1.77
 9 mu         0.9      0.995        0.947 0.00855        2.28
10 mu_1       0.1      1.12         0.424 0.000288       7.78
11 mu_1       0.2      1.07         0.872 0.0162         5.89
12 mu_1       0.3      1.06         0.945 0.104          3.77
13 mu_1       0.4      1.05         1.03  0.284          2.07
14 mu_1       0.5      1.02         0.989 0.467          1.61
15 mu_1       0.6      0.991        0.997 0.670          1.48
16 mu_1       0.7      0.978        0.982 0.419          1.44
17 mu_1       0.8      0.995        1.00  0.104          1.91
18 mu_1       0.9      0.991        0.967 0.00590        2.27
19 mu_0       0.1      1.37         0.106 0.0000316     58.2 
20 mu_0       0.2      1.09         0.495 0.00389        8.88
21 mu_0       0.3      1.05         0.919 0.0404         4.90
22 mu_0       0.4      1.05         0.955 0.162          2.81
23 mu_0       0.5      1.03         1.02  0.359          1.80
24 mu_0       0.6      0.995        0.980 0.481          1.61
25 mu_0       0.7      0.965        0.970 0.583          1.44
26 mu_0       0.8      0.967        0.988 0.286          1.55
27 mu_0       0.9      1.03         0.993 0.0324         2.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.62     0.0000942  1.22e-13     42.1 
 2 mu         0.2      2.40     0.00630    3.98e- 9     57.5 
 3 mu         0.3      1.70     0.0666     1.74e- 6     26.2 
 4 mu         0.4      1.10     0.312      1.31e- 4      7.89
 5 mu         0.5      0.910    0.741      3.71e- 3      4.79
 6 mu         0.6      0.928    1.02       2.49e- 2      2.28
 7 mu         0.7      1.05     1.03       5.29e- 4      2.75
 8 mu         0.8      1.28     0.926      1.80e- 6      6.25
 9 mu         0.9      1.89     0.126      7.83e-11     36.6 
10 mu_1       0.1      2.87     0.000585   1.22e-12     70.1 
11 mu_1       0.2      2.32     0.0223     1.99e- 8     47.9 
12 mu_1       0.3      1.35     0.159      5.82e- 6     14.6 
13 mu_1       0.4      0.955    0.530      3.26e- 4      6.29
14 mu_1       0.5      0.882    0.802      7.42e- 3      4.04
15 mu_1       0.6      0.942    1.01       6.92e- 3      2.34
16 mu_1       0.7      1.08     1.11       1.26e- 4      3.14
17 mu_1       0.8      1.33     0.744      3.75e- 7      7.81
18 mu_1       0.9      1.97     0.0949     1.45e-11     40.6 
19 mu_0       0.1      1.48     0.0000321  0            39.0 
20 mu_0       0.2      2.43     0.00226    0            59.9 
21 mu_0       0.3      1.84     0.0280     0            31.2 
22 mu_0       0.4      1.20     0.165      0            10.8 
23 mu_0       0.5      0.939    0.533      0             5.55
24 mu_0       0.6      0.907    0.877      0             2.85
25 mu_0       0.7      0.971    0.971      0             2.48
26 mu_0       0.8      1.06     1.02       0             3.93
27 mu_0       0.9      1.17     0.251      0             6.53
[1] "Total run time was 79.77 seconds"
