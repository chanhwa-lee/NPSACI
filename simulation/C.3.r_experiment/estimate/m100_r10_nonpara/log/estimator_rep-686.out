
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1257"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  9  3  7  8  3  4  7 14  7  4  4  5  5  8  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05267 0.41175 0.64266 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
749 508 
[1] "treatment indicator table: "

  0   1 
417 840 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.055 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.175 0.189
 2 mu         0.1   0.2 0.239 0.244
 3 mu         0.1   0.3 0.367 0.178
 4 mu         0.1   0.4 0.364 0.202
 5 mu         0.1   0.5 0.360 0.211
 6 mu         0.2   0.1 0.316 0.137
 7 mu         0.2   0.2 0.413 0.178
 8 mu         0.2   0.3 0.528 0.147
 9 mu         0.2   0.4 0.562 0.163
10 mu         0.2   0.5 0.574 0.169
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.894       0.0468 0.0000000559     18.1 
 2 mu         0.2      1.20        0.320  0.000107         20.3 
 3 mu         0.3      1.15        0.688  0.00594           9.27
 4 mu         0.4      1.06        0.921  0.0656            3.84
 5 mu         0.5      0.991       0.974  0.292             2.42
 6 mu         0.6      0.978       0.985  0.577             1.60
 7 mu         0.7      0.990       0.983  0.636             1.37
 8 mu         0.8      1.00        1.02   0.394             1.66
 9 mu         0.9      1.03        0.948  0.0580            3.12
10 mu_1       0.1      1.35        0.180  0.000000355      27.2 
11 mu_1       0.2      1.24        0.552  0.000342         16.0 
12 mu_1       0.3      1.11        0.864  0.0127            6.30
13 mu_1       0.4      1.02        0.955  0.111             2.90
14 mu_1       0.5      0.972       0.981  0.400             2.21
15 mu_1       0.6      0.978       0.952  0.628             1.45
16 mu_1       0.7      0.994       0.989  0.592             1.39
17 mu_1       0.8      1.01        1.02   0.335             1.75
18 mu_1       0.9      1.03        0.919  0.0458            3.24
19 mu_0       0.1      0.844       0.0320 0.0000000227     17.1 
20 mu_0       0.2      1.19        0.252  0.0000486        21.4 
21 mu_0       0.3      1.17        0.578  0.00304          10.5 
22 mu_0       0.4      1.09        0.884  0.0354            4.47
23 mu_0       0.5      1.01        0.960  0.184             2.63
24 mu_0       0.6      0.979       0.967  0.455             1.82
25 mu_0       0.7      0.982       0.977  0.581             1.46
26 mu_0       0.8      0.980       0.980  0.482             1.52
27 mu_0       0.9      0.971       0.920  0.148             2.04
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.941    0.0000442  4.46e-16     59.0 
 2 mu         0.2      2.28     0.00551    1.04e-10    129.  
 3 mu         0.3      2.35     0.0741     1.34e- 7    100.  
 4 mu         0.4      1.80     0.282      2.04e- 5     43.6 
 5 mu         0.5      1.36     0.826      9.44e- 4     11.5 
 6 mu         0.6      1.12     1.13       1.73e- 2      3.54
 7 mu         0.7      0.982    0.948      4.38e- 2      3.03
 8 mu         0.8      0.992    0.709      5.77e- 4      3.88
 9 mu         0.9      1.23     0.105      2.25e- 7     10.4 
10 mu_1       0.1      2.09     0.000277   4.22e-15    126.  
11 mu_1       0.2      2.74     0.0195     4.92e-10    138.  
12 mu_1       0.3      2.15     0.163      4.24e- 7     71.7 
13 mu_1       0.4      1.55     0.474      4.83e- 5     23.4 
14 mu_1       0.5      1.23     1.04       1.79e- 3      6.24
15 mu_1       0.6      1.06     1.00       2.89e- 2      3.25
16 mu_1       0.7      0.962    0.956      1.57e- 2      3.36
17 mu_1       0.8      1.00     0.589      1.80e- 4      3.77
18 mu_1       0.9      1.25     0.0800     6.26e- 8     11.5 
19 mu_0       0.1      0.813    0.0000143  0            51.5 
20 mu_0       0.2      2.16     0.00203    0           127.  
21 mu_0       0.3      2.43     0.0297     0           113.  
22 mu_0       0.4      1.96     0.174      0            57.1 
23 mu_0       0.5      1.48     0.595      0            18.0 
24 mu_0       0.6      1.20     1.09       0             5.43
25 mu_0       0.7      1.03     0.958      0             3.46
26 mu_0       0.8      0.948    0.957      0             4.31
27 mu_0       0.9      1.03     0.233      0             6.51
[1] "Total run time was 55.135 seconds"
