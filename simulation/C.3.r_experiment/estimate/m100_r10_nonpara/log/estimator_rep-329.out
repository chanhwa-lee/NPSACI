
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1214"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  5 12  7  4  6  6  6  8  9  4  6  5  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03928 0.35028 0.61493 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
693 521 
[1] "treatment indicator table: "

  0   1 
444 770 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 83.265 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.404 0.136 
 2 mu         0.1   0.2 0.449 0.123 
 3 mu         0.1   0.3 0.552 0.113 
 4 mu         0.1   0.4 0.551 0.112 
 5 mu         0.1   0.5 0.569 0.118 
 6 mu         0.2   0.1 0.411 0.0880
 7 mu         0.2   0.2 0.503 0.0842
 8 mu         0.2   0.3 0.609 0.0817
 9 mu         0.2   0.4 0.620 0.0802
10 mu         0.2   0.5 0.655 0.0820
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.857        0.354 0.0000481      6.91
 2 mu         0.2      1.06         0.883 0.00595        5.44
 3 mu         0.3      1.06         0.918 0.0675         3.18
 4 mu         0.4      1.03         0.992 0.269          2.30
 5 mu         0.5      1.03         0.991 0.426          2.25
 6 mu         0.6      1.03         1.04  0.523          1.92
 7 mu         0.7      1.03         1.04  0.330          1.66
 8 mu         0.8      1.00         0.968 0.202          1.78
 9 mu         0.9      0.964        0.844 0.125          2.47
10 mu_1       0.1      1.06         0.682 0.000259       8.66
11 mu_1       0.2      1.11         0.981 0.0162         4.36
12 mu_1       0.3      1.06         1.03  0.124          2.69
13 mu_1       0.4      1.04         0.990 0.330          2.38
14 mu_1       0.5      1.03         1.03  0.448          2.21
15 mu_1       0.6      1.03         1.02  0.513          1.82
16 mu_1       0.7      1.02         1.03  0.255          1.74
17 mu_1       0.8      0.998        0.964 0.223          1.73
18 mu_1       0.9      0.961        0.819 0.104          2.50
19 mu_0       0.1      0.834        0.308 0.0000246      7.42
20 mu_0       0.2      1.04         0.854 0.00339        5.91
21 mu_0       0.3      1.06         0.921 0.0432         3.61
22 mu_0       0.4      1.03         0.934 0.196          2.51
23 mu_0       0.5      1.03         0.963 0.377          2.30
24 mu_0       0.6      1.04         1.04  0.496          2.28
25 mu_0       0.7      1.04         1.01  0.441          1.81
26 mu_0       0.8      1.02         1.03  0.118          1.99
27 mu_0       0.9      0.986        0.862 0.316          2.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.683   0.0000398   5.83e-17     31.0 
 2 mu         0.2      1.07    0.00430     2.72e-11     27.2 
 3 mu         0.3      1.12    0.0606      5.27e- 8     16.0 
 4 mu         0.4      1.06    0.359       1.07e- 5      7.26
 5 mu         0.5      1.04    0.823       6.17e- 4      4.10
 6 mu         0.6      1.08    0.915       1.58e- 2      3.82
 7 mu         0.7      1.13    1.07        3.94e- 4      4.23
 8 mu         0.8      1.13    1.00        1.02e- 6      4.78
 9 mu         0.9      1.41    0.176       2.50e-11     20.2 
10 mu_1       0.1      1.13    0.000273    5.54e-16     38.7 
11 mu_1       0.2      1.15    0.0142      1.29e-10     17.2 
12 mu_1       0.3      1.07    0.134       1.67e- 7      9.05
13 mu_1       0.4      1.03    0.555       2.54e- 5      6.00
14 mu_1       0.5      1.04    0.812       1.17e- 3      4.10
15 mu_1       0.6      1.10    1.03        7.07e- 3      4.03
16 mu_1       0.7      1.14    1.07        1.13e- 4      4.26
17 mu_1       0.8      1.15    0.846       2.56e- 7      5.12
18 mu_1       0.9      1.48    0.123       5.55e-12     22.5 
19 mu_0       0.1      0.633   0.00000968  0            30.1 
20 mu_0       0.2      1.05    0.00158     0            29.7 
21 mu_0       0.3      1.14    0.0273      0            20.0 
22 mu_0       0.4      1.09    0.208       0            10.6 
23 mu_0       0.5      1.04    0.573       0             4.43
24 mu_0       0.6      1.05    0.861       0             3.70
25 mu_0       0.7      1.09    0.988       0             4.14
26 mu_0       0.8      1.03    0.872       0             4.06
27 mu_0       0.9      0.870   0.126       0             6.92
[1] "Total run time was 87.919 seconds"
