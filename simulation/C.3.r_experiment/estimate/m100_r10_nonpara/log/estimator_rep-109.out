
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1238"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  4  8  9  8  5  6  5  3  7  4  8  9  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03084 0.33848 0.60557 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
723 515 
[1] "treatment indicator table: "

  0   1 
433 805 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 575
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 71.405 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.298 0.106 
 2 mu         0.1   0.2 0.401 0.121 
 3 mu         0.1   0.3 0.424 0.149 
 4 mu         0.1   0.4 0.585 0.135 
 5 mu         0.1   0.5 0.581 0.132 
 6 mu         0.2   0.1 0.401 0.0817
 7 mu         0.2   0.2 0.534 0.0920
 8 mu         0.2   0.3 0.568 0.104 
 9 mu         0.2   0.4 0.736 0.111 
10 mu         0.2   0.5 0.763 0.110 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.895        0.201 0.0000000665     12.7 
 2 mu         0.2      1.31         0.770 0.000128         12.8 
 3 mu         0.3      1.27         1.05  0.00706           8.89
 4 mu         0.4      1.11         1.08  0.0842            3.93
 5 mu         0.5      1.03         0.976 0.401             2.03
 6 mu         0.6      1.01         0.977 0.511             1.50
 7 mu         0.7      0.995        0.962 0.505             1.67
 8 mu         0.8      0.988        1.02  0.376             1.87
 9 mu         0.9      1.03         0.946 0.0374            5.72
10 mu_1       0.1      1.31         0.532 0.000000404      10.6 
11 mu_1       0.2      1.37         0.958 0.000393         13.2 
12 mu_1       0.3      1.19         1.07  0.0147            6.75
13 mu_1       0.4      1.06         1.02  0.134             2.93
14 mu_1       0.5      1.01         0.952 0.522             1.78
15 mu_1       0.6      1.00         0.994 0.443             1.58
16 mu_1       0.7      0.992        0.967 0.504             1.68
17 mu_1       0.8      0.990        1.01  0.334             1.92
18 mu_1       0.9      1.03         0.928 0.0295            6.24
19 mu_0       0.1      0.849        0.164 0.0000000290     12.9 
20 mu_0       0.2      1.29         0.721 0.0000614        12.7 
21 mu_0       0.3      1.30         1.09  0.00379           9.80
22 mu_0       0.4      1.15         1.09  0.0512            4.60
23 mu_0       0.5      1.05         1.00  0.281             2.29
24 mu_0       0.6      1.01         0.948 0.538             1.64
25 mu_0       0.7      1.00         0.962 0.360             1.70
26 mu_0       0.8      0.983        0.963 0.341             1.99
27 mu_0       0.9      1.00         0.981 0.0931            2.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.396    0.000242   8.10e-17     14.4 
 2 mu         0.2      1.17     0.0166     3.77e-11     37.6 
 3 mu         0.3      1.54     0.144      7.32e- 8     38.3 
 4 mu         0.4      1.45     0.510      1.48e- 5     19.0 
 5 mu         0.5      1.29     1.09       7.19e- 4      6.09
 6 mu         0.6      1.19     1.11       1.33e- 2      5.52
 7 mu         0.7      1.11     1.15       1.02e- 2      3.40
 8 mu         0.8      1.21     0.949      1.17e- 4      6.57
 9 mu         0.9      1.54     0.228      2.90e- 8     23.0 
10 mu_1       0.1      0.933    0.00174    7.69e-16     24.1 
11 mu_1       0.2      1.60     0.0563     1.79e-10     46.9 
12 mu_1       0.3      1.62     0.320      2.32e- 7     31.9 
13 mu_1       0.4      1.40     0.879      3.53e- 5     11.9 
14 mu_1       0.5      1.26     1.21       1.44e- 3      6.09
15 mu_1       0.6      1.17     1.09       2.22e- 2      5.06
16 mu_1       0.7      1.10     1.06       2.84e- 3      3.23
17 mu_1       0.8      1.22     0.762      4.62e- 5      6.91
18 mu_1       0.9      1.55     0.168      1.02e- 8     24.3 
19 mu_0       0.1      0.336    0.0000844  0            13.3 
20 mu_0       0.2      1.06     0.00692    0            35.2 
21 mu_0       0.3      1.50     0.0717     0            41.0 
22 mu_0       0.4      1.48     0.284      0            23.8 
23 mu_0       0.5      1.32     0.862      0             8.52
24 mu_0       0.6      1.21     1.20       0             6.21
25 mu_0       0.7      1.14     0.979      0             3.77
26 mu_0       0.8      1.16     1.25       0             5.18
27 mu_0       0.9      1.45     0.474      0            11.5 
[1] "Total run time was 75.836 seconds"
