
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1210"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5 11  4  5  4  7 14  7  6  5  7  6  4  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03926 0.35052 0.63144 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
687 523 
[1] "treatment indicator table: "

  0   1 
434 776 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 573
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.049 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.354 0.105 
 2 mu         0.1   0.2 0.472 0.136 
 3 mu         0.1   0.3 0.499 0.134 
 4 mu         0.1   0.4 0.553 0.144 
 5 mu         0.1   0.5 0.558 0.147 
 6 mu         0.2   0.1 0.324 0.0672
 7 mu         0.2   0.2 0.429 0.0877
 8 mu         0.2   0.3 0.454 0.0908
 9 mu         0.2   0.4 0.505 0.0971
10 mu         0.2   0.5 0.516 0.100 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.812       0.0529 0.0000000313     15.9 
 2 mu         0.2      0.907       0.400  0.0000642         7.96
 3 mu         0.3      0.974       0.784  0.00382           4.30
 4 mu         0.4      1.01        0.918  0.0497            2.62
 5 mu         0.5      1.00        0.945  0.259             2.02
 6 mu         0.6      0.983       0.982  0.514             1.90
 7 mu         0.7      0.992       0.996  0.493             2.43
 8 mu         0.8      1.06        0.987  0.286             3.65
 9 mu         0.9      1.16        1.06   0.0687            4.56
10 mu_1       0.1      0.890       0.205  0.000000199       9.24
11 mu_1       0.2      0.936       0.690  0.000207          5.81
12 mu_1       0.3      0.976       0.860  0.00829           2.97
13 mu_1       0.4      0.991       0.912  0.0818            2.39
14 mu_1       0.5      0.985       0.968  0.348             2.12
15 mu_1       0.6      0.976       0.981  0.479             1.78
16 mu_1       0.7      0.997       0.988  0.489             2.68
17 mu_1       0.8      1.07        0.989  0.247             3.66
18 mu_1       0.9      1.17        1.10   0.0564            4.72
19 mu_0       0.1      0.803       0.0406 0.0000000126     17.5 
20 mu_0       0.2      0.900       0.305  0.0000286         9.52
21 mu_0       0.3      0.974       0.710  0.00191           5.23
22 mu_0       0.4      1.01        0.913  0.0283            2.93
23 mu_0       0.5      1.02        0.969  0.171             2.22
24 mu_0       0.6      0.994       0.992  0.452             2.08
25 mu_0       0.7      0.981       0.971  0.449             1.84
26 mu_0       0.8      1.01        0.971  0.369             3.59
27 mu_0       0.9      1.09        1.05   0.0439            3.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       8.56   0.0000517   2.04e-16    701.  
 2 mu         0.2       4.79   0.00387     2.67e-11    240.  
 3 mu         0.3       2.17   0.0554      2.63e- 8     71.5 
 4 mu         0.4       1.27   0.336       3.50e- 6     16.8 
 5 mu         0.5       1.12   0.715       1.55e- 4      5.28
 6 mu         0.6       1.16   1.03        3.44e- 3      5.16
 7 mu         0.7       1.26   1.11        3.42e- 4     10.4 
 8 mu         0.8       1.38   0.777       8.93e- 7     22.8 
 9 mu         0.9       1.40   0.137       3.06e-11     16.7 
10 mu_1       0.1       7.12   0.000383    2.04e-15    438.  
11 mu_1       0.2       3.07   0.0146      1.33e-10    131.  
12 mu_1       0.3       1.54   0.116       8.76e- 8     39.7 
13 mu_1       0.4       1.16   0.592       8.74e- 6      7.71
14 mu_1       0.5       1.13   0.812       3.11e- 4      5.76
15 mu_1       0.6       1.17   1.05        2.28e- 3      4.69
16 mu_1       0.7       1.27   1.07        3.05e- 5     12.4 
17 mu_1       0.8       1.39   0.628       6.97e- 8     23.7 
18 mu_1       0.9       1.40   0.101       2.13e-12     15.4 
19 mu_0       0.1       8.72   0.00000986  0           730.  
20 mu_0       0.2       5.22   0.00138     0           281.  
21 mu_0       0.3       2.45   0.0292      0            85.1 
22 mu_0       0.4       1.34   0.158       0            23.3 
23 mu_0       0.5       1.11   0.461       0             6.22
24 mu_0       0.6       1.13   0.816       0             5.87
25 mu_0       0.7       1.22   1.18        0             5.76
26 mu_0       0.8       1.35   1.12        0            19.0 
27 mu_0       0.9       1.36   0.333       0            27.8 
[1] "Total run time was 49.36 seconds"
