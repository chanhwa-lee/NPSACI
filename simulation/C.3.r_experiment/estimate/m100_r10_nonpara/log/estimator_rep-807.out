
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1233"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 14 15 16 17 18 19 20 
 4  8  6  5  9  5  8 11 11  8  3  3  6  9  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04021 0.37777 0.64952 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
775 458 
[1] "treatment indicator table: "

  0   1 
409 824 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 45.782 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.353 0.111 
 2 mu         0.1   0.2 0.459 0.141 
 3 mu         0.1   0.3 0.609 0.190 
 4 mu         0.1   0.4 0.631 0.199 
 5 mu         0.1   0.5 0.641 0.204 
 6 mu         0.2   0.1 0.274 0.0486
 7 mu         0.2   0.2 0.373 0.0622
 8 mu         0.2   0.3 0.507 0.110 
 9 mu         0.2   0.4 0.534 0.101 
10 mu         0.2   0.5 0.545 0.0967
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.11        0.0504 0.00000000444     24.7 
 2 mu         0.2      0.969       0.411  0.0000171         10.7 
 3 mu         0.3      0.962       0.858  0.00145            8.53
 4 mu         0.4      0.956       0.963  0.0244             3.62
 5 mu         0.5      0.960       0.964  0.160              1.77
 6 mu         0.6      0.966       0.947  0.434              1.81
 7 mu         0.7      0.973       0.974  0.389              1.59
 8 mu         0.8      0.973       1.01   0.296              1.54
 9 mu         0.9      0.972       0.926  0.0149             2.59
10 mu_1       0.1      0.815       0.152  0.0000000290       7.69
11 mu_1       0.2      0.938       0.619  0.0000560         11.9 
12 mu_1       0.3      0.948       0.871  0.00320            6.49
13 mu_1       0.4      0.952       0.970  0.0411             2.40
14 mu_1       0.5      0.961       0.937  0.221              1.73
15 mu_1       0.6      0.968       0.945  0.371              1.81
16 mu_1       0.7      0.975       0.992  0.384              1.62
17 mu_1       0.8      0.974       0.995  0.238              1.68
18 mu_1       0.9      0.976       0.923  0.0108             2.81
19 mu_0       0.1      1.14        0.0342 0.00000000172     27.4 
20 mu_0       0.2      0.976       0.315  0.00000732        10.4 
21 mu_0       0.3      0.968       0.790  0.000696           9.40
22 mu_0       0.4      0.959       0.942  0.0132             4.43
23 mu_0       0.5      0.959       0.982  0.0992             1.97
24 mu_0       0.6      0.963       0.947  0.391              1.81
25 mu_0       0.7      0.966       0.962  0.310              1.77
26 mu_0       0.8      0.967       0.962  0.307              1.66
27 mu_0       0.9      0.937       0.935  0.0513             1.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      7.10     0.0000713  2.08e-16    651.  
 2 mu         0.2      8.94     0.00484    4.85e-11    791.  
 3 mu         0.3      4.40     0.0496     6.27e- 8    315.  
 4 mu         0.4      1.96     0.255      9.53e- 6     63.4 
 5 mu         0.5      1.27     0.665      4.41e- 4     10.7 
 6 mu         0.6      1.04     0.965      9.39e- 3      3.97
 7 mu         0.7      1.01     0.948      5.19e- 3      2.81
 8 mu         0.8      1.15     1.05       1.18e- 5      4.86
 9 mu         0.9      1.62     0.315      2.56e-10     25.3 
10 mu_1       0.1     11.4      0.000453   1.97e-15   1028.  
11 mu_1       0.2      7.47     0.0189     2.30e-10    625.  
12 mu_1       0.3      3.00     0.111      1.98e- 7    166.  
13 mu_1       0.4      1.57     0.460      2.26e- 5     25.0 
14 mu_1       0.5      1.17     0.769      8.35e- 4      9.05
15 mu_1       0.6      1.01     0.901      1.48e- 2      3.05
16 mu_1       0.7      1.02     0.907      1.17e- 3      3.01
17 mu_1       0.8      1.18     1.01       2.33e- 6      6.07
18 mu_1       0.9      1.67     0.243      4.49e-11     28.1 
19 mu_0       0.1      6.63     0.0000186  0           609.  
20 mu_0       0.2      9.30     0.00144    0           833.  
21 mu_0       0.3      5.00     0.0234     0           379.  
22 mu_0       0.4      2.22     0.113      0            89.0 
23 mu_0       0.5      1.37     0.368      0            12.4 
24 mu_0       0.6      1.09     0.856      0             5.75
25 mu_0       0.7      0.986    0.855      0             3.04
26 mu_0       0.8      1.05     0.973      0             3.54
27 mu_0       0.9      1.14     0.474      0             5.20
[1] "Total run time was 48.855 seconds"
