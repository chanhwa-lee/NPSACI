
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1209"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 11  7  9  5  3  6  9  5  7  4  3  9  4  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01522 0.33047 0.58220 0.99050 4.00000 
[1] "event indicator table: "

  0   1 
720 489 
[1] "treatment indicator table: "

  0   1 
461 748 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 571
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 49.014 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.0784 0.0897
 2 mu         0.1   0.2 0.0789 0.140 
 3 mu         0.1   0.3 0.0719 0.163 
 4 mu         0.1   0.4 0.0614 0.179 
 5 mu         0.1   0.5 0.172  0.132 
 6 mu         0.2   0.1 0.121  0.0554
 7 mu         0.2   0.2 0.133  0.117 
 8 mu         0.2   0.3 0.142  0.139 
 9 mu         0.2   0.4 0.138  0.155 
10 mu         0.2   0.5 0.257  0.0809
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.451       0.0272 0.0000000656     20.2 
 2 mu         0.2      0.616       0.279  0.000115          9.64
 3 mu         0.3      0.760       0.613  0.00581           3.73
 4 mu         0.4      0.866       0.854  0.0641            2.22
 5 mu         0.5      0.949       0.961  0.233             1.58
 6 mu         0.6      1.01        1.00   0.474             1.59
 7 mu         0.7      1.05        1.02   0.471             2.49
 8 mu         0.8      1.06        0.959  0.139             4.50
 9 mu         0.9      1.02        0.602  0.00684           8.05
10 mu_1       0.1      0.672       0.108  0.000000396      14.9 
11 mu_1       0.2      0.746       0.484  0.000349          4.75
12 mu_1       0.3      0.840       0.853  0.0119            2.75
13 mu_1       0.4      0.914       0.902  0.100             2.02
14 mu_1       0.5      0.981       0.981  0.326             1.62
15 mu_1       0.6      1.03        1.02   0.593             1.78
16 mu_1       0.7      1.06        1.01   0.397             3.04
17 mu_1       0.8      1.06        0.931  0.110             5.16
18 mu_1       0.9      1.02        0.546  0.00508           8.63
19 mu_0       0.1      0.426       0.0205 0.0000000289     20.8 
20 mu_0       0.2      0.584       0.224  0.0000561        10.9 
21 mu_0       0.3      0.725       0.532  0.00319           4.43
22 mu_0       0.4      0.834       0.780  0.0399            2.60
23 mu_0       0.5      0.918       0.911  0.139             1.68
24 mu_0       0.6      0.983       0.992  0.295             1.66
25 mu_0       0.7      1.02        1.00   0.539             1.62
26 mu_0       0.8      1.04        1.01   0.258             2.50
27 mu_0       0.9      1.02        0.956  0.0227            3.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value   max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>       <dbl>
 1 mu         0.1  484551.      0.000119   6.55e-14 48454084.  
 2 mu         0.2  232642.      0.00767    6.78e- 9 23261889.  
 3 mu         0.3   47331.      0.0783     5.12e- 6  4731212.  
 4 mu         0.4    5255.      0.320      3.50e- 4   524575.  
 5 mu         0.5     311.      0.722      8.30e- 3    30787.  
 6 mu         0.6       9.29    0.987      1.02e- 1      799.  
 7 mu         0.7       1.31    0.967      2.26e- 2        8.87
 8 mu         0.8       1.74    0.607      3.39e- 4       27.6 
 9 mu         0.9       2.75    0.103      2.61e- 8      113.  
10 mu_1       0.1  484563.      0.000787   5.86e-13 48454084.  
11 mu_1       0.2  116334.      0.0259     3.03e- 8 11630944.  
12 mu_1       0.3   15784.      0.179      1.53e- 5  1577071.  
13 mu_1       0.4    1317.      0.505      8.21e- 4   131144.  
14 mu_1       0.5      63.4     0.877      1.56e- 2     6157.  
15 mu_1       0.6       2.47    1.04       8.70e- 2      133.  
16 mu_1       0.7       1.33    0.900      7.68e- 3       10.9 
17 mu_1       0.8       1.86    0.515      1.16e- 4       34.4 
18 mu_1       0.9       2.87    0.0676     2.91e- 9      126.  
19 mu_0       0.1  484550.      0.0000408  0        48454084.  
20 mu_0       0.2  261719.      0.00315    0        26169625.  
21 mu_0       0.3   60850.      0.0338     0         6082987.  
22 mu_0       0.4    7880.      0.166      0          786863.  
23 mu_0       0.5     558.      0.511      0           55416.  
24 mu_0       0.6      19.5     0.886      0            1797.  
25 mu_0       0.7       1.26    0.993      0              18.4 
26 mu_0       0.8       1.27    0.922      0              14.0 
27 mu_0       0.9       1.58    0.233      0              28.7 
[1] "Total run time was 52.188 seconds"
