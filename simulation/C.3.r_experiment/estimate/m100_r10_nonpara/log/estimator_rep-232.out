
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1216"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7 13  8  3  7  6  5  3  7  9  9  3  3  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02916 0.38763 0.59525 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
716 500 
[1] "treatment indicator table: "

  0   1 
435 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.56 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.363 0.219
 2 mu         0.1   0.2 0.397 0.220
 3 mu         0.1   0.3 0.394 0.246
 4 mu         0.1   0.4 0.444 0.255
 5 mu         0.1   0.5 0.427 0.263
 6 mu         0.2   0.1 0.356 0.140
 7 mu         0.2   0.2 0.390 0.122
 8 mu         0.2   0.3 0.401 0.129
 9 mu         0.2   0.4 0.442 0.127
10 mu         0.2   0.5 0.434 0.131
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.772       0.0257 0.0000000336     41.8 
 2 mu         0.2      0.901       0.247  0.0000606        18.1 
 3 mu         0.3      0.959       0.545  0.00317           7.63
 4 mu         0.4      0.966       0.825  0.0364            6.21
 5 mu         0.5      0.972       0.930  0.172             3.45
 6 mu         0.6      0.994       0.975  0.445             1.51
 7 mu         0.7      1.01        1.01   0.400             2.17
 8 mu         0.8      0.996       0.980  0.0657            2.02
 9 mu         0.9      0.895       0.758  0.00130           2.97
10 mu_1       0.1      0.957       0.0929 0.000000203      29.8 
11 mu_1       0.2      0.981       0.475  0.000185          6.93
12 mu_1       0.3      0.982       0.772  0.00654           7.85
13 mu_1       0.4      0.966       0.882  0.0575            5.26
14 mu_1       0.5      0.975       0.959  0.224             2.72
15 mu_1       0.6      1.00        0.993  0.499             1.61
16 mu_1       0.7      1.02        1.03   0.317             2.21
17 mu_1       0.8      0.991       0.962  0.0473            2.07
18 mu_1       0.9      0.881       0.710  0.000860          3.05
19 mu_0       0.1      0.751       0.0191 0.0000000148     43.1 
20 mu_0       0.2      0.881       0.179  0.0000295        21.0 
21 mu_0       0.3      0.949       0.447  0.00172           7.54
22 mu_0       0.4      0.966       0.753  0.0223            6.84
23 mu_0       0.5      0.968       0.881  0.120             4.18
24 mu_0       0.6      0.983       0.938  0.350             1.99
25 mu_0       0.7      1.00        0.998  0.595             2.08
26 mu_0       0.8      1.02        1.02   0.139             2.12
27 mu_0       0.9      1.02        0.963  0.00529           2.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     74.0      0.0000669  3.70e-14   7365.  
 2 mu         0.2     32.7      0.00631    3.83e- 9   3186.  
 3 mu         0.3      9.67     0.0637     2.74e- 6    842.  
 4 mu         0.4      2.89     0.280      2.05e- 4    151.  
 5 mu         0.5      1.49     0.668      5.83e- 3     17.7 
 6 mu         0.6      1.19     1.02       8.99e- 2      5.45
 7 mu         0.7      1.19     1.10       2.01e- 2      5.87
 8 mu         0.8      1.42     0.711      1.90e- 4     10.6 
 9 mu         0.9      2.04     0.121      2.61e- 8     39.4 
10 mu_1       0.1     53.4      0.000507   3.31e-13   5261.  
11 mu_1       0.2     12.6      0.0225     1.71e- 8   1138.  
12 mu_1       0.3      3.36     0.153      8.61e- 6    201.  
13 mu_1       0.4      1.63     0.482      5.13e- 4     27.0 
14 mu_1       0.5      1.28     0.962      1.17e- 2      9.32
15 mu_1       0.6      1.17     1.08       1.39e- 1      4.30
16 mu_1       0.7      1.25     1.09       3.30e- 3      6.71
17 mu_1       0.8      1.52     0.624      1.70e- 5     13.2 
18 mu_1       0.9      2.16     0.0860     2.07e- 9     43.7 
19 mu_0       0.1     76.2      0.0000138  0          7599.  
20 mu_0       0.2     37.8      0.00177    0          3698.  
21 mu_0       0.3     12.4      0.0240     0          1117.  
22 mu_0       0.4      3.73     0.138      0           234.  
23 mu_0       0.5      1.69     0.403      0            32.8 
24 mu_0       0.6      1.21     0.823      0             7.41
25 mu_0       0.7      1.04     1.11       0             3.92
26 mu_0       0.8      1.00     0.808      0             9.83
27 mu_0       0.9      0.914    0.135      0             8.09
[1] "Total run time was 53.83 seconds"
