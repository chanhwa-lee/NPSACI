
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1201"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  8  5  8  8  6  7  8  8  4  6  3  6  7  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03674 0.37669 0.63982 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
715 486 
[1] "treatment indicator table: "

  0   1 
438 763 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 48.405 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.335 0.0543
 2 mu         0.1   0.2 0.415 0.0757
 3 mu         0.1   0.3 0.438 0.0747
 4 mu         0.1   0.4 0.476 0.0927
 5 mu         0.1   0.5 0.497 0.0907
 6 mu         0.2   0.1 0.386 0.0511
 7 mu         0.2   0.2 0.476 0.0640
 8 mu         0.2   0.3 0.520 0.0681
 9 mu         0.2   0.4 0.561 0.0839
10 mu         0.2   0.5 0.596 0.0799
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.721       0.129  0.0000906      6.15
 2 mu         0.2      0.955       0.521  0.0131         4.27
 3 mu         0.3      1.03        0.885  0.110          3.23
 4 mu         0.4      1.06        0.964  0.371          2.61
 5 mu         0.5      1.05        0.993  0.522          1.84
 6 mu         0.6      1.01        1.00   0.497          1.63
 7 mu         0.7      0.976       1.00   0.330          1.47
 8 mu         0.8      0.966       0.970  0.429          1.43
 9 mu         0.9      0.984       0.937  0.163          1.99
10 mu_1       0.1      0.883       0.350  0.000411       5.21
11 mu_1       0.2      1.02        0.813  0.0322         3.57
12 mu_1       0.3      1.05        0.966  0.204          3.14
13 mu_1       0.4      1.06        0.989  0.525          2.33
14 mu_1       0.5      1.04        1.03   0.542          1.85
15 mu_1       0.6      1.00        0.987  0.379          1.59
16 mu_1       0.7      0.971       0.985  0.358          1.41
17 mu_1       0.8      0.967       0.988  0.380          1.44
18 mu_1       0.9      0.985       0.906  0.115          2.09
19 mu_0       0.1      0.703       0.0941 0.0000550      6.75
20 mu_0       0.2      0.939       0.434  0.00737        4.45
21 mu_0       0.3      1.02        0.824  0.0699         3.27
22 mu_0       0.4      1.06        0.923  0.268          2.79
23 mu_0       0.5      1.06        1.02   0.477          1.98
24 mu_0       0.6      1.03        1.00   0.582          1.76
25 mu_0       0.7      0.990       0.985  0.263          1.61
26 mu_0       0.8      0.962       0.969  0.475          1.58
27 mu_0       0.9      0.970       0.962  0.0760         1.89
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.372    0.000162   4.09e-17      8.75
 2 mu         0.2      1.04     0.0101     1.07e-11     29.1 
 3 mu         0.3      1.26     0.112      1.58e- 8     29.8 
 4 mu         0.4      1.18     0.418      2.81e- 6     12.4 
 5 mu         0.5      1.12     0.908      1.56e- 4      4.43
 6 mu         0.6      1.07     1.01       4.15e- 3      3.35
 7 mu         0.7      1.00     1.06       2.09e- 4      2.88
 8 mu         0.8      0.999    0.732      7.13e- 7      4.96
 9 mu         0.9      1.10     0.126      3.10e-11      8.04
10 mu_1       0.1      0.872    0.00103    4.09e-16     15.0 
11 mu_1       0.2      1.38     0.0329     5.36e-11     36.4 
12 mu_1       0.3      1.31     0.249      5.28e- 8     24.8 
13 mu_1       0.4      1.17     0.681      7.02e- 6      7.78
14 mu_1       0.5      1.11     1.06       3.12e- 4      3.84
15 mu_1       0.6      1.05     1.05       2.74e- 3      3.01
16 mu_1       0.7      0.992    0.951      4.98e- 5      2.99
17 mu_1       0.8      1.01     0.587      1.49e- 7      5.22
18 mu_1       0.9      1.11     0.0900     5.74e-12      8.93
19 mu_0       0.1      0.317    0.0000511  0             8.10
20 mu_0       0.2      0.958    0.00471    0            27.3 
21 mu_0       0.3      1.23     0.0503     0            31.9 
22 mu_0       0.4      1.19     0.279      0            15.6 
23 mu_0       0.5      1.13     0.641      0             5.06
24 mu_0       0.6      1.10     0.922      0             3.87
25 mu_0       0.7      1.02     1.04       0             2.70
26 mu_0       0.8      0.970    0.829      0             3.91
27 mu_0       0.9      0.987    0.242      0             6.44
[1] "Total run time was 51.553 seconds"
