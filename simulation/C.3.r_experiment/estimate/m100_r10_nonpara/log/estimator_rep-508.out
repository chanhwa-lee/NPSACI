
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1157"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 19 20 
 8  7  9  6  9  8 12  3  6  2  5  4  9  3  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0415  0.3579  0.6152  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
681 476 
[1] "treatment indicator table: "

  0   1 
413 744 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 578
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 80.727 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.204 0.103 
 2 mu         0.1   0.2 0.280 0.134 
 3 mu         0.1   0.3 0.377 0.124 
 4 mu         0.1   0.4 0.441 0.157 
 5 mu         0.1   0.5 0.452 0.168 
 6 mu         0.2   0.1 0.210 0.0713
 7 mu         0.2   0.2 0.284 0.0899
 8 mu         0.2   0.3 0.349 0.0742
 9 mu         0.2   0.4 0.415 0.0958
10 mu         0.2   0.5 0.429 0.108 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.662       0.0307 0.00000000309     20.9 
 2 mu         0.2      0.665       0.312  0.0000113          5.27
 3 mu         0.3      0.764       0.639  0.000888           3.67
 4 mu         0.4      0.872       0.821  0.0136             3.18
 5 mu         0.5      0.939       0.929  0.0796             2.97
 6 mu         0.6      0.977       0.963  0.243              2.11
 7 mu         0.7      0.998       0.998  0.501              1.66
 8 mu         0.8      1.01        0.955  0.233              2.94
 9 mu         0.9      0.981       0.761  0.0228             6.82
10 mu_1       0.1      0.652       0.118  0.0000000201       5.88
11 mu_1       0.2      0.711       0.521  0.0000367          4.65
12 mu_1       0.3      0.826       0.740  0.00194            2.98
13 mu_1       0.4      0.918       0.872  0.0225             3.26
14 mu_1       0.5      0.967       0.963  0.108              2.88
15 mu_1       0.6      0.992       0.985  0.285              1.89
16 mu_1       0.7      1.00        1.01   0.532              1.89
17 mu_1       0.8      1.01        0.967  0.181              3.42
18 mu_1       0.9      0.977       0.763  0.0163             7.51
19 mu_0       0.1      0.664       0.0212 0.00000000120     22.9 
20 mu_0       0.2      0.653       0.245  0.00000490         6.23
21 mu_0       0.3      0.737       0.531  0.000438           4.13
22 mu_0       0.4      0.841       0.748  0.00768            3.13
23 mu_0       0.5      0.912       0.882  0.0517             3.06
24 mu_0       0.6      0.954       0.929  0.180              2.44
25 mu_0       0.7      0.984       0.979  0.385              1.50
26 mu_0       0.8      1.01        1.04   0.273              1.55
27 mu_0       0.9      1.01        0.967  0.0810             3.86
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.347     0.000378  2.62e-16     15.2 
 2 mu         0.2      0.885     0.0160    1.22e-10     16.6 
 3 mu         0.3      1.36      0.113     2.37e- 7     19.5 
 4 mu         0.4      1.50      0.414     4.80e- 5     15.1 
 5 mu         0.5      1.33      0.831     2.77e- 3     11.6 
 6 mu         0.6      1.14      0.995     2.04e- 2      7.91
 7 mu         0.7      1.12      1.10      5.78e- 4      3.48
 8 mu         0.8      1.52      0.725     2.96e- 6     18.3 
 9 mu         0.9      2.72      0.156     2.57e-10     76.2 
10 mu_1       0.1      0.739     0.00238   2.49e-15     23.4 
11 mu_1       0.2      1.27      0.0529    5.80e-10     18.3 
12 mu_1       0.3      1.59      0.253     7.50e- 7     20.4 
13 mu_1       0.4      1.52      0.662     1.14e- 4     13.2 
14 mu_1       0.5      1.27      0.939     5.27e- 3     10.3 
15 mu_1       0.6      1.10      1.17      6.01e- 3      5.86
16 mu_1       0.7      1.13      1.15      1.46e- 4      4.03
17 mu_1       0.8      1.59      0.538     6.52e- 7     21.7 
18 mu_1       0.9      2.79      0.108     5.04e-11     80.2 
19 mu_0       0.1      0.304     0.000132  0            14.3 
20 mu_0       0.2      0.789     0.00578   0            17.6 
21 mu_0       0.3      1.26      0.0593    0            19.2 
22 mu_0       0.4      1.48      0.230     0            17.3 
23 mu_0       0.5      1.39      0.589     0            12.9 
24 mu_0       0.6      1.20      0.969     0            11.0 
25 mu_0       0.7      1.11      1.18      0             6.44
26 mu_0       0.8      1.23      1.13      0             4.81
27 mu_0       0.9      2.07      0.490     0            40.1 
[1] "Total run time was 86.548 seconds"
