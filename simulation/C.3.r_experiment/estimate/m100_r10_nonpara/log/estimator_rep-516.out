
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1274"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  7  2  6 11 10  2  5  2  6  7  8 12  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03423 0.36164 0.63667 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
776 498 
[1] "treatment indicator table: "

  0   1 
483 791 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.314 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.216 0.118 
 2 mu         0.1   0.2 0.287 0.126 
 3 mu         0.1   0.3 0.340 0.108 
 4 mu         0.1   0.4 0.332 0.101 
 5 mu         0.1   0.5 0.331 0.0987
 6 mu         0.2   0.1 0.226 0.0701
 7 mu         0.2   0.2 0.301 0.0783
 8 mu         0.2   0.3 0.345 0.0723
 9 mu         0.2   0.4 0.341 0.0736
10 mu         0.2   0.5 0.355 0.0726
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.486       0.0160 0.000000105       6.43
 2 mu         0.2      0.658       0.189  0.000109          7.87
 3 mu         0.3      0.791       0.550  0.00329           6.32
 4 mu         0.4      0.895       0.848  0.0295            5.05
 5 mu         0.5      0.958       0.959  0.138             2.90
 6 mu         0.6      0.991       0.959  0.405             1.76
 7 mu         0.7      0.997       0.971  0.463             1.86
 8 mu         0.8      0.938       0.906  0.188             2.53
 9 mu         0.9      0.779       0.522  0.0115            3.60
10 mu_1       0.1      0.658       0.0630 0.000000651       8.50
11 mu_1       0.2      0.763       0.368  0.000339          7.43
12 mu_1       0.3      0.864       0.715  0.00796           6.36
13 mu_1       0.4      0.934       0.937  0.0543            4.13
14 mu_1       0.5      0.970       0.943  0.206             2.24
15 mu_1       0.6      0.992       0.987  0.514             1.63
16 mu_1       0.7      0.990       0.956  0.390             2.00
17 mu_1       0.8      0.924       0.884  0.135             2.64
18 mu_1       0.9      0.767       0.481  0.00829           3.72
19 mu_0       0.1      0.467       0.0107 0.0000000449      6.35
20 mu_0       0.2      0.631       0.148  0.0000429         7.98
21 mu_0       0.3      0.760       0.493  0.00129           6.30
22 mu_0       0.4      0.870       0.779  0.0130            5.66
23 mu_0       0.5      0.946       0.957  0.0694            3.57
24 mu_0       0.6      0.990       0.974  0.241             2.11
25 mu_0       0.7      1.01        0.986  0.589             1.76
26 mu_0       0.8      0.995       0.968  0.342             2.36
27 mu_0       0.9      0.884       0.847  0.0400            3.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      10.2     0.0000906  3.12e-15    907.  
 2 mu         0.2       4.26    0.0143     4.08e-10    248.  
 3 mu         0.3       3.37    0.112      4.02e- 7    124.  
 4 mu         0.4       2.96    0.423      5.35e- 5    112.  
 5 mu         0.5       2.13    0.787      2.38e- 3     55.2 
 6 mu         0.6       1.42    0.913      7.74e- 4     14.8 
 7 mu         0.7       1.30    0.876      9.05e- 6     24.8 
 8 mu         0.8       2.08    0.559      1.58e- 8     54.4 
 9 mu         0.9       4.66    0.0593     2.70e-13    138.  
10 mu_1       0.1       1.17    0.000390   0            32.7 
11 mu_1       0.2       2.36    0.0186     0           104.  
12 mu_1       0.3       3.07    0.180      0           138.  
13 mu_1       0.4       2.64    0.551      0            93.4 
14 mu_1       0.5       1.84    0.861      0            36.8 
15 mu_1       0.6       1.30    0.782      0             9.02
16 mu_1       0.7       1.37    0.925      0            29.5 
17 mu_1       0.8       2.29    0.419      0            56.6 
18 mu_1       0.9       5.00    0.0402     0           153.  
19 mu_0       0.1      11.2     0.0000503  0          1007.  
20 mu_0       0.2       4.74    0.00542    0           310.  
21 mu_0       0.3       3.50    0.0537     0           118.  
22 mu_0       0.4       3.16    0.280      0           125.  
23 mu_0       0.5       2.43    0.660      0            73.6 
24 mu_0       0.6       1.59    0.928      0            24.6 
25 mu_0       0.7       1.13    0.773      0            13.8 
26 mu_0       0.8       1.24    0.412      0            45.3 
27 mu_0       0.9       1.62    0.0333     0            66.3 
[1] "Total run time was 55.569 seconds"
