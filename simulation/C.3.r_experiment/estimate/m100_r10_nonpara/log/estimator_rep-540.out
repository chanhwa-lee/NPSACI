
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1272"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4  1  6  8 12  4  7  8  6  7  4  7  5  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02902 0.32955 0.59215 0.96386 4.00000 
[1] "event indicator table: "

  0   1 
743 529 
[1] "treatment indicator table: "

  0   1 
483 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 78.343 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.133 0.0599
 2 mu         0.1   0.2 0.305 0.0677
 3 mu         0.1   0.3 0.269 0.0635
 4 mu         0.1   0.4 0.347 0.0783
 5 mu         0.1   0.5 0.420 0.105 
 6 mu         0.2   0.1 0.241 0.0619
 7 mu         0.2   0.2 0.414 0.0729
 8 mu         0.2   0.3 0.411 0.0728
 9 mu         0.2   0.4 0.480 0.0839
10 mu         0.2   0.5 0.558 0.104 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.537       0.0670  2.60e- 9      7.02
 2 mu         0.2      0.830       0.362   6.45e- 6     10.0 
 3 mu         0.3      0.888       0.766   4.80e- 4      7.32
 4 mu         0.4      0.897       0.935   8.05e- 3      3.98
 5 mu         0.5      0.943       0.930   5.66e- 2      7.41
 6 mu         0.6      0.976       0.955   1.48e- 1      7.89
 7 mu         0.7      0.954       0.929   1.88e- 2      4.14
 8 mu         0.8      0.910       0.810   5.87e- 4      3.46
 9 mu         0.9      0.827       0.465   7.04e- 7      6.30
10 mu_1       0.1      0.903       0.219   1.84e- 8     12.9 
11 mu_1       0.2      0.934       0.634   2.31e- 5      9.44
12 mu_1       0.3      0.893       0.925   1.15e- 3      5.00
13 mu_1       0.4      0.903       0.937   1.47e- 2      4.73
14 mu_1       0.5      0.958       0.925   8.35e- 2      8.26
15 mu_1       0.6      0.980       0.944   9.86e- 2      7.38
16 mu_1       0.7      0.948       0.911   1.10e- 2      3.45
17 mu_1       0.8      0.902       0.778   3.06e- 4      3.73
18 mu_1       0.9      0.816       0.429   3.28e- 7      6.98
19 mu_0       0.1      0.496       0.0494  8.36e-10      6.37
20 mu_0       0.2      0.804       0.287   2.30e- 6     10.2 
21 mu_0       0.3      0.885       0.662   1.91e- 4      8.31
22 mu_0       0.4      0.893       0.875   3.65e- 3      4.97
23 mu_0       0.5      0.928       0.932   2.97e- 2      6.57
24 mu_0       0.6      0.971       0.949   1.34e- 1      8.65
25 mu_0       0.7      0.966       0.964   3.70e- 2      5.73
26 mu_0       0.8      0.941       0.952   1.71e- 3      2.38
27 mu_0       0.9      0.923       0.744   4.08e- 6      6.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1   13161.      0.0000502  1.79e-17 1315256. 
 2 mu         0.2   45543.      0.0112     1.88e-11 4551427. 
 3 mu         0.3   40643.      0.119      6.24e- 8 4060854. 
 4 mu         0.4   17324.      0.410      1.97e- 5 1730071. 
 5 mu         0.5    3959.      0.897      1.71e- 3  394773. 
 6 mu         0.6     455.      1.08       1.74e- 2   45003. 
 7 mu         0.7      23.0     1.11       8.71e- 4    1981. 
 8 mu         0.8       4.17    0.600      4.46e- 6     107. 
 9 mu         0.9       7.38    0.0847     3.87e-10     218. 
10 mu_1       0.1   30964.      0.000261   0        3094721. 
11 mu_1       0.2   53583.      0.0245     0        5354621. 
12 mu_1       0.3   31881.      0.215      0        3184983. 
13 mu_1       0.4   10194.      0.662      0        1017689. 
14 mu_1       0.5    1866.      0.919      0         185776. 
15 mu_1       0.6     180.      1.23       0          17648. 
16 mu_1       0.7       9.75    1.02       0            666. 
17 mu_1       0.8       4.29    0.500      0            111. 
18 mu_1       0.9       7.79    0.0577     0            242. 
19 mu_0       0.1   11183.      0.0000203  0        1117538. 
20 mu_0       0.2   43533.      0.00556    0        4350629. 
21 mu_0       0.3   44398.      0.0529     0        4436227. 
22 mu_0       0.4   22077.      0.241      0        2204993. 
23 mu_0       0.5    6052.      0.683      0         603771. 
24 mu_0       0.6     867.      0.937      0          86035. 
25 mu_0       0.7      53.9     1.06       0           5049. 
26 mu_0       0.8       3.68    0.696      0             88.9
27 mu_0       0.9       3.68    0.159      0            130. 
[1] "Total run time was 82.409 seconds"
