
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1173"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  8  7  5  8  8  7  6  1  7  7  3  8  4  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04613 0.35402 0.60994 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
674 499 
[1] "treatment indicator table: "

  0   1 
453 720 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 555
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 121.778 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.300 0.192
 2 mu         0.1   0.2 0.440 0.193
 3 mu         0.1   0.3 0.475 0.219
 4 mu         0.1   0.4 0.525 0.232
 5 mu         0.1   0.5 0.558 0.250
 6 mu         0.2   0.1 0.486 0.276
 7 mu         0.2   0.2 0.658 0.287
 8 mu         0.2   0.3 0.736 0.332
 9 mu         0.2   0.4 0.801 0.347
10 mu         0.2   0.5 0.850 0.368
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.01        0.0924 0.00000125      48.8 
 2 mu         0.2      1.60        0.476  0.000500        75.6 
 3 mu         0.3      1.38        0.811  0.0132          40.6 
 4 mu         0.4      1.11        0.939  0.106           12.5 
 5 mu         0.5      1.01        0.980  0.420            3.01
 6 mu         0.6      1.01        1.01   0.663            1.35
 7 mu         0.7      1.00        0.985  0.460            2.19
 8 mu         0.8      0.963       0.907  0.173            3.45
 9 mu         0.9      0.900       0.679  0.00934          8.19
10 mu_1       0.1      1.72        0.361  0.00000709      86.1 
11 mu_1       0.2      1.66        0.792  0.00162         67.2 
12 mu_1       0.3      1.25        0.962  0.0289          24.9 
13 mu_1       0.4      1.05        0.999  0.178            6.48
14 mu_1       0.5      0.997       0.991  0.518            1.81
15 mu_1       0.6      1.01        1.00   0.608            1.39
16 mu_1       0.7      1.00        0.963  0.368            2.38
17 mu_1       0.8      0.956       0.895  0.136            3.54
18 mu_1       0.9      0.900       0.630  0.00693          9.05
19 mu_0       0.1      0.926       0.0624 0.000000517     44.6 
20 mu_0       0.2      1.58        0.390  0.000221        77.7 
21 mu_0       0.3      1.43        0.747  0.00643         47.4 
22 mu_0       0.4      1.16        0.870  0.0586          16.6 
23 mu_0       0.5      1.03        0.971  0.267            4.21
24 mu_0       0.6      1.00        0.997  0.633            1.54
25 mu_0       0.7      1.01        1.00   0.610            1.74
26 mu_0       0.8      0.987       0.961  0.320            3.08
27 mu_0       0.9      0.900       0.823  0.0311           4.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     701.      0.000166   1.60e-12  69905.  
 2 mu         0.2     338.      0.0127     7.35e- 8  33560.  
 3 mu         0.3      70.5     0.0968     3.23e- 5   6826.  
 4 mu         0.4       9.06    0.319      2.03e- 3    757.  
 5 mu         0.5       1.54    0.722      4.18e- 2     44.4 
 6 mu         0.6       1.07    1.02       6.24e- 2      2.71
 7 mu         0.7       1.34    1.13       1.76e- 3     11.9 
 8 mu         0.8       1.77    0.769      7.81e- 6     29.9 
 9 mu         0.9       1.57    0.148      3.77e-11     34.9 
10 mu_1       0.1     703.      0.000929   1.34e-11  69905.  
11 mu_1       0.2     170.      0.0423     3.09e- 7  16780.  
12 mu_1       0.3      24.4     0.214      9.07e- 5   2275.  
13 mu_1       0.4       3.03    0.533      4.28e- 3    189.  
14 mu_1       0.5       1.06    0.847      7.03e- 2      8.88
15 mu_1       0.6       1.07    0.986      1.83e- 2      3.37
16 mu_1       0.7       1.42    1.17       4.45e- 4     14.3 
17 mu_1       0.8       1.81    0.655      9.77e- 7     31.5 
18 mu_1       0.9       1.54    0.109      4.19e-12     34.2 
19 mu_0       0.1     701.      0.0000733  0         69905.  
20 mu_0       0.2     380.      0.00528    0         37755.  
21 mu_0       0.3      90.2     0.0365     0          8776.  
22 mu_0       0.4      13.1     0.179      0          1135.  
23 mu_0       0.5       2.02    0.502      0            79.9 
24 mu_0       0.6       1.06    0.912      0             3.60
25 mu_0       0.7       1.15    1.06       0             6.27
26 mu_0       0.8       1.59    1.05       0            23.6 
27 mu_0       0.9       1.90    0.267      0            41.1 
[1] "Total run time was 129.664 seconds"
