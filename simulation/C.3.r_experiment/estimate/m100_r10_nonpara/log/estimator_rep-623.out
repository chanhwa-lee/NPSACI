
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1255"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  9  7  7  5  6  7  5  6  7  3  7  8  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02904 0.36212 0.63271 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
743 512 
[1] "treatment indicator table: "

  0   1 
453 802 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 682
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 573
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 47.647 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.433 0.0896
 2 mu         0.1   0.2 0.474 0.0925
 3 mu         0.1   0.3 0.494 0.0992
 4 mu         0.1   0.4 0.543 0.121 
 5 mu         0.1   0.5 0.548 0.116 
 6 mu         0.2   0.1 0.407 0.0623
 7 mu         0.2   0.2 0.473 0.0666
 8 mu         0.2   0.3 0.508 0.0749
 9 mu         0.2   0.4 0.566 0.0880
10 mu         0.2   0.5 0.588 0.0867
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.735        0.170 0.0000149       5.87
 2 mu         0.2      0.910        0.559 0.00435         9.03
 3 mu         0.3      1.01         0.903 0.0474          4.73
 4 mu         0.4      1.05         1.04  0.214           2.42
 5 mu         0.5      1.05         1.04  0.332           2.05
 6 mu         0.6      1.04         1.04  0.453           2.46
 7 mu         0.7      1.02         1.01  0.384           2.16
 8 mu         0.8      0.989        0.991 0.248           1.66
 9 mu         0.9      0.995        0.890 0.0560          3.25
10 mu_1       0.1      0.893        0.445 0.0000793      10.4 
11 mu_1       0.2      0.989        0.816 0.0141          7.97
12 mu_1       0.3      1.04         0.979 0.103           2.81
13 mu_1       0.4      1.06         1.04  0.319           2.33
14 mu_1       0.5      1.06         1.03  0.352           2.04
15 mu_1       0.6      1.05         1.02  0.498           2.50
16 mu_1       0.7      1.02         1.00  0.369           2.05
17 mu_1       0.8      0.985        0.959 0.252           1.69
18 mu_1       0.9      0.998        0.896 0.0441          3.50
19 mu_0       0.1      0.718        0.131 0.00000778      5.58
20 mu_0       0.2      0.890        0.484 0.00192         9.29
21 mu_0       0.3      0.995        0.857 0.0234          5.55
22 mu_0       0.4      1.04         1.02  0.120           2.49
23 mu_0       0.5      1.05         1.04  0.304           2.16
24 mu_0       0.6      1.04         1.03  0.358           2.40
25 mu_0       0.7      1.03         1.01  0.420           2.41
26 mu_0       0.8      1.01         0.966 0.232           1.73
27 mu_0       0.9      0.973        0.930 0.0118          1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.905    0.0000478  5.05e-17     25.3 
 2 mu         0.2      1.28     0.00609    1.32e-11     19.7 
 3 mu         0.3      1.25     0.0786     1.96e- 8     12.8 
 4 mu         0.4      1.13     0.317      3.47e- 6      6.48
 5 mu         0.5      1.05     0.713      1.93e- 4      4.86
 6 mu         0.6      1.02     0.780      5.13e- 3      4.33
 7 mu         0.7      1.05     0.991      1.80e- 3      3.29
 8 mu         0.8      1.17     0.967      1.82e- 5      4.97
 9 mu         0.9      1.32     0.178      5.61e- 9     10.3 
10 mu_1       0.1      1.49     0.000308   5.05e-16     28.1 
11 mu_1       0.2      1.34     0.0199     6.62e-11     17.2 
12 mu_1       0.3      1.16     0.184      6.52e- 8      9.82
13 mu_1       0.4      1.06     0.546      8.68e- 6      5.60
14 mu_1       0.5      1.03     0.833      3.85e- 4      4.64
15 mu_1       0.6      1.03     0.867      8.55e- 3      4.01
16 mu_1       0.7      1.08     1.06       3.68e- 4      3.41
17 mu_1       0.8      1.20     0.862      3.24e- 6      5.59
18 mu_1       0.9      1.34     0.139      8.91e-10     10.3 
19 mu_0       0.1      0.840    0.0000174  0            25.0 
20 mu_0       0.2      1.27     0.00221    0            21.9 
21 mu_0       0.3      1.29     0.0286     0            15.0 
22 mu_0       0.4      1.17     0.169      0             8.30
23 mu_0       0.5      1.07     0.561      0             6.48
24 mu_0       0.6      1.00     0.705      0             4.82
25 mu_0       0.7      0.986    0.861      0             3.58
26 mu_0       0.8      1.04     0.837      0             3.86
27 mu_0       0.9      1.16     0.246      0            10.3 
[1] "Total run time was 51.119 seconds"
