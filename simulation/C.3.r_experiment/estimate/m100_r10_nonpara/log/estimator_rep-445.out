
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8  7  6  3  6  6  9  4  6  7  2  8 12  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02671 0.35334 0.62936 1.00000 4.59312 
[1] "event indicator table: "

  0   1 
764 505 
[1] "treatment indicator table: "

  0   1 
490 779 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 77.748 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.378 0.189 
 2 mu         0.1   0.2 0.413 0.238 
 3 mu         0.1   0.3 0.449 0.254 
 4 mu         0.1   0.4 0.558 0.285 
 5 mu         0.1   0.5 0.563 0.308 
 6 mu         0.2   0.1 0.301 0.0392
 7 mu         0.2   0.2 0.327 0.0582
 8 mu         0.2   0.3 0.360 0.0511
 9 mu         0.2   0.4 0.464 0.0730
10 mu         0.2   0.5 0.463 0.0679
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.915       0.0739 0.00000123      50.2 
 2 mu         0.2      0.819       0.454  0.000931         5.48
 3 mu         0.3      1.03        0.950  0.0266           5.91
 4 mu         0.4      1.11        1.07   0.184            4.61
 5 mu         0.5      1.07        1.04   0.408            2.47
 6 mu         0.6      0.996       0.998  0.599            1.30
 7 mu         0.7      0.958       0.945  0.532            1.80
 8 mu         0.8      0.978       0.887  0.229            2.04
 9 mu         0.9      1.05        0.941  0.0115           7.36
10 mu_1       0.1      0.719       0.242  0.00000682       6.63
11 mu_1       0.2      0.970       0.787  0.00259          5.42
12 mu_1       0.3      1.12        1.07   0.0499           5.97
13 mu_1       0.4      1.12        1.08   0.245            3.88
14 mu_1       0.5      1.05        1.05   0.463            1.97
15 mu_1       0.6      0.977       0.971  0.593            1.32
16 mu_1       0.7      0.953       0.951  0.497            1.87
17 mu_1       0.8      0.981       0.884  0.189            2.27
18 mu_1       0.9      1.06        0.934  0.00818          7.91
19 mu_0       0.1      0.937       0.0521 0.000000614     55.7 
20 mu_0       0.2      0.781       0.375  0.000517         6.79
21 mu_0       0.3      0.997       0.871  0.0166           5.88
22 mu_0       0.4      1.11        1.05   0.131            5.10
23 mu_0       0.5      1.09        1.05   0.339            2.98
24 mu_0       0.6      1.02        1.01   0.458            1.51
25 mu_0       0.7      0.971       0.972  0.564            1.64
26 mu_0       0.8      0.963       0.930  0.327            2.01
27 mu_0       0.9      0.974       0.863  0.0384           2.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.85     0.000209   2.49e-14    570.  
 2 mu         0.2      4.61     0.0141     2.58e- 9    389.  
 3 mu         0.3      2.42     0.107      1.94e- 6    118.  
 4 mu         0.4      1.55     0.429      1.90e- 4     20.8 
 5 mu         0.5      1.21     1.01       5.80e- 3      5.09
 6 mu         0.6      1.04     1.10       8.11e- 2      2.23
 7 mu         0.7      0.984    1.07       1.95e- 3      2.63
 8 mu         0.8      1.12     0.562      5.80e- 6      6.59
 9 mu         0.9      1.45     0.0557     2.24e-10     23.7 
10 mu_1       0.1      7.15     0.00131    2.22e-13    670.  
11 mu_1       0.2      3.40     0.0460     1.15e- 8    229.  
12 mu_1       0.3      1.88     0.245      5.79e- 6     46.4 
13 mu_1       0.4      1.39     0.657      4.25e- 4      8.77
14 mu_1       0.5      1.15     1.08       1.05e- 2      3.75
15 mu_1       0.6      1.02     1.06       2.10e- 2      2.21
16 mu_1       0.7      0.984    0.997      3.27e- 4      3.16
17 mu_1       0.8      1.15     0.448      8.53e- 7      6.94
18 mu_1       0.9      1.48     0.0342     2.93e-11     26.3 
19 mu_0       0.1      5.70     0.0000660  0           559.  
20 mu_0       0.2      4.91     0.00553    0           430.  
21 mu_0       0.3      2.65     0.0495     0           149.  
22 mu_0       0.4      1.65     0.271      0            30.6 
23 mu_0       0.5      1.27     0.795      0             6.43
24 mu_0       0.6      1.08     1.10       0             3.18
25 mu_0       0.7      0.984    1.04       0             2.26
26 mu_0       0.8      0.997    0.860      0             5.21
27 mu_0       0.9      1.22     0.142      0             8.57
[1] "Total run time was 82.612 seconds"
