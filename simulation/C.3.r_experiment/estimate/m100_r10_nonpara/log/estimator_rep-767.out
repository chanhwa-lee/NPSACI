
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1204"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  5  4  4  7  6  4 14  8  7  5  7 10  3  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03105 0.33480 0.60221 1.00000 5.38541 
[1] "event indicator table: "

  0   1 
701 503 
[1] "treatment indicator table: "

  0   1 
430 774 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 70.417 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.349 0.304
 2 mu         0.1   0.2 0.530 0.373
 3 mu         0.1   0.3 0.541 0.362
 4 mu         0.1   0.4 0.530 0.362
 5 mu         0.1   0.5 0.599 0.325
 6 mu         0.2   0.1 0.371 0.208
 7 mu         0.2   0.2 0.536 0.256
 8 mu         0.2   0.3 0.560 0.255
 9 mu         0.2   0.4 0.557 0.257
10 mu         0.2   0.5 0.593 0.240
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.656       0.0374 0.000000172      36.0 
 2 mu         0.2      0.861       0.326  0.000177         28.5 
 3 mu         0.3      0.981       0.712  0.00665          15.3 
 4 mu         0.4      1.04        0.946  0.0587            6.64
 5 mu         0.5      1.02        1.03   0.236             2.54
 6 mu         0.6      0.983       0.981  0.567             1.73
 7 mu         0.7      0.968       0.976  0.589             1.29
 8 mu         0.8      0.993       0.962  0.361             1.95
 9 mu         0.9      1.15        1.07   0.137             3.58
10 mu_1       0.1      0.960       0.144  0.00000112       40.3 
11 mu_1       0.2      0.932       0.606  0.000574         16.5 
12 mu_1       0.3      1.00        0.960  0.0137            6.46
13 mu_1       0.4      1.03        0.998  0.0923            2.57
14 mu_1       0.5      0.998       0.971  0.308             2.12
15 mu_1       0.6      0.970       0.966  0.557             1.59
16 mu_1       0.7      0.965       0.951  0.542             1.36
17 mu_1       0.8      1.00        0.969  0.333             2.06
18 mu_1       0.9      1.17        1.03   0.120             3.82
19 mu_0       0.1      0.622       0.0251 0.0000000673     35.6 
20 mu_0       0.2      0.843       0.261  0.0000777        31.5 
21 mu_0       0.3      0.973       0.617  0.00351          19.1 
22 mu_0       0.4      1.05        0.869  0.0362            9.34
23 mu_0       0.5      1.04        1.02   0.163             3.91
24 mu_0       0.6      1.00        0.979  0.436             1.94
25 mu_0       0.7      0.976       0.952  0.480             1.46
26 mu_0       0.8      0.962       0.957  0.372             1.52
27 mu_0       0.9      0.975       0.916  0.282             2.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.842    0.000110   4.91e-15     62.7 
 2 mu         0.2      1.83     0.0101     3.22e-10     67.7 
 3 mu         0.3      2.10     0.0891     2.11e- 7     66.8 
 4 mu         0.4      1.86     0.320      2.11e- 5     45.2 
 5 mu         0.5      1.51     0.855      7.49e- 4     17.8 
 6 mu         0.6      1.27     1.08       1.38e- 2      7.38
 7 mu         0.7      1.13     1.13       1.66e- 4      3.44
 8 mu         0.8      1.04     0.739      2.52e- 7      4.89
 9 mu         0.9      0.925    0.105      2.74e-12      9.09
10 mu_1       0.1      1.56     0.000647   4.91e-14     94.0 
11 mu_1       0.2      2.26     0.0316     1.61e- 9     71.6 
12 mu_1       0.3      2.17     0.208      7.04e- 7     63.6 
13 mu_1       0.4      1.78     0.635      5.27e- 5     32.3 
14 mu_1       0.5      1.44     1.04       1.50e- 3     15.0 
15 mu_1       0.6      1.23     1.13       3.49e- 3      5.53
16 mu_1       0.7      1.11     1.12       3.57e- 5      3.52
17 mu_1       0.8      1.03     0.576      4.73e- 8      5.35
18 mu_1       0.9      0.911    0.0731     4.56e-13     10.1 
19 mu_0       0.1      0.762    0.0000378  0            59.2 
20 mu_0       0.2      1.73     0.00444    0            71.9 
21 mu_0       0.3      2.07     0.0383     0            68.1 
22 mu_0       0.4      1.91     0.193      0            53.8 
23 mu_0       0.5      1.58     0.566      0            25.4 
24 mu_0       0.6      1.34     1.06       0            10.1 
25 mu_0       0.7      1.20     1.09       0             3.28
26 mu_0       0.8      1.11     1.05       0             3.70
27 mu_0       0.9      1.04     0.298      0             7.95
[1] "Total run time was 74.022 seconds"
