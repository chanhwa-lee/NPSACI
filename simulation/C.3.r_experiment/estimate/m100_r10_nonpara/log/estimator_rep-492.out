
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1294"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  8  6  6  5  4  2  6 10  8  8  6 10  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02734 0.34457 0.61352 1.00000 5.07628 
[1] "event indicator table: "

  0   1 
784 510 
[1] "treatment indicator table: "

  0   1 
487 807 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.338 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.291 0.0886
 2 mu         0.1   0.2 0.369 0.148 
 3 mu         0.1   0.3 0.415 0.132 
 4 mu         0.1   0.4 0.453 0.128 
 5 mu         0.1   0.5 0.456 0.120 
 6 mu         0.2   0.1 0.332 0.0682
 7 mu         0.2   0.2 0.411 0.113 
 8 mu         0.2   0.3 0.441 0.101 
 9 mu         0.2   0.4 0.486 0.0970
10 mu         0.2   0.5 0.515 0.0921
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.506       0.0713 0.000000380      5.72
 2 mu         0.2      0.718       0.418  0.000225         4.46
 3 mu         0.3      0.876       0.736  0.00701          3.02
 4 mu         0.4      0.935       0.892  0.0623           2.17
 5 mu         0.5      0.956       0.958  0.262            1.74
 6 mu         0.6      0.981       0.953  0.506            1.56
 7 mu         0.7      1.01        1.01   0.500            1.57
 8 mu         0.8      1.04        1.03   0.380            2.34
 9 mu         0.9      1.04        0.827  0.0362           5.75
10 mu_1       0.1      0.618       0.234  0.00000254       6.17
11 mu_1       0.2      0.825       0.625  0.000755         3.17
12 mu_1       0.3      0.925       0.863  0.0158           2.34
13 mu_1       0.4      0.952       0.966  0.106            2.09
14 mu_1       0.5      0.967       0.990  0.363            1.71
15 mu_1       0.6      0.990       0.959  0.509            1.60
16 mu_1       0.7      1.02        1.03   0.460            1.57
17 mu_1       0.8      1.04        1.01   0.293            2.58
18 mu_1       0.9      1.04        0.782  0.0274           6.00
19 mu_0       0.1      0.494       0.0574 0.000000140      6.07
20 mu_0       0.2      0.692       0.369  0.0000923        4.78
21 mu_0       0.3      0.855       0.693  0.00325          3.54
22 mu_0       0.4      0.923       0.866  0.0330           2.32
23 mu_0       0.5      0.944       0.941  0.162            1.86
24 mu_0       0.6      0.969       0.955  0.472            1.61
25 mu_0       0.7      1.00        1.00   0.519            1.62
26 mu_0       0.8      1.04        1.05   0.471            1.77
27 mu_0       0.9      1.07        0.983  0.116            4.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.22     0.0000936  4.55e-17    192.  
 2 mu         0.2      2.09     0.00772    2.12e-11     93.3 
 3 mu         0.3      1.37     0.0827     4.11e- 8     28.2 
 4 mu         0.4      1.06     0.332      8.34e- 6     11.1 
 5 mu         0.5      0.993    0.775      4.82e- 4      5.82
 6 mu         0.6      1.04     0.953      1.23e- 2      4.21
 7 mu         0.7      1.12     1.01       4.70e- 4      4.67
 8 mu         0.8      1.19     0.649      2.76e- 6      7.72
 9 mu         0.9      1.20     0.0829     3.79e-10     28.6 
10 mu_1       0.1      2.79     0.000649   4.32e-16    148.  
11 mu_1       0.2      1.49     0.0243     1.01e-10     35.9 
12 mu_1       0.3      1.13     0.185      1.30e- 7     17.0 
13 mu_1       0.4      0.988    0.560      1.98e- 5      7.77
14 mu_1       0.5      0.985    0.898      9.16e- 4      4.24
15 mu_1       0.6      1.05     0.952      2.02e- 3      4.68
16 mu_1       0.7      1.14     1.05       4.80e- 5      4.45
17 mu_1       0.8      1.20     0.510      2.46e- 7      9.12
18 mu_1       0.9      1.20     0.0563     3.01e-11     30.0 
19 mu_0       0.1      3.27     0.0000351  0           197.  
20 mu_0       0.2      2.24     0.00299    0           108.  
21 mu_0       0.3      1.47     0.0393     0            37.2 
22 mu_0       0.4      1.11     0.174      0            13.5 
23 mu_0       0.5      1.00     0.516      0             7.41
24 mu_0       0.6      1.01     0.974      0             4.31
25 mu_0       0.7      1.07     0.988      0             5.19
26 mu_0       0.8      1.14     0.918      0             4.31
27 mu_0       0.9      1.18     0.219      0            15.9 
[1] "Total run time was 53.675 seconds"
