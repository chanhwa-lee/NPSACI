
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1128"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  7 15  5  6  9  4  7  6  6  5  5  4  6  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02199 0.29932 0.59439 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
681 447 
[1] "treatment indicator table: "

  0   1 
415 713 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 539
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 589
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.667 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.437 0.134 
 2 mu         0.1   0.2 0.436 0.161 
 3 mu         0.1   0.3 0.532 0.158 
 4 mu         0.1   0.4 0.642 0.186 
 5 mu         0.1   0.5 0.745 0.249 
 6 mu         0.2   0.1 0.370 0.0713
 7 mu         0.2   0.2 0.400 0.0901
 8 mu         0.2   0.3 0.477 0.0868
 9 mu         0.2   0.4 0.564 0.103 
10 mu         0.2   0.5 0.635 0.147 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.968       0.0998 0.0000000894     19.2 
 2 mu         0.2      0.955       0.407  0.000106          9.79
 3 mu         0.3      0.967       0.822  0.00499           5.81
 4 mu         0.4      0.997       0.905  0.0592            5.42
 5 mu         0.5      1.00        0.960  0.177             3.28
 6 mu         0.6      1.00        1.01   0.319             1.81
 7 mu         0.7      1.01        0.998  0.114             2.88
 8 mu         0.8      1.03        0.981  0.0186            4.16
 9 mu         0.9      1.02        0.853  0.000506          4.81
10 mu_1       0.1      0.957       0.307  0.000000616      15.0 
11 mu_1       0.2      0.948       0.689  0.000367          5.56
12 mu_1       0.3      0.997       0.895  0.0116            6.48
13 mu_1       0.4      1.02        0.965  0.104             4.59
14 mu_1       0.5      1.01        1.04   0.281             2.36
15 mu_1       0.6      1.01        1.00   0.231             2.14
16 mu_1       0.7      1.02        0.958  0.0724            3.33
17 mu_1       0.8      1.03        0.974  0.0104            4.38
18 mu_1       0.9      1.02        0.859  0.000254          4.80
19 mu_0       0.1      0.969       0.0721 0.0000000308     19.7 
20 mu_0       0.2      0.957       0.344  0.0000408        11.2 
21 mu_0       0.3      0.954       0.721  0.00216           5.53
22 mu_0       0.4      0.985       0.880  0.0255            5.98
23 mu_0       0.5      0.999       0.950  0.0727            4.20
24 mu_0       0.6      0.996       0.986  0.168             2.13
25 mu_0       0.7      1.00        1.03   0.212             1.84
26 mu_0       0.8      1.03        1.00   0.0514            3.27
27 mu_0       0.9      1.06        0.949  0.00277           5.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.73     0.000210   4.86e-15     65.9 
 2 mu         0.2      2.01     0.0129     3.18e-10     37.3 
 3 mu         0.3      1.88     0.0922     2.09e- 7     33.3 
 4 mu         0.4      1.43     0.353      2.09e- 5     17.6 
 5 mu         0.5      1.12     0.831      7.41e- 4      6.59
 6 mu         0.6      1.02     0.844      1.37e- 2      6.71
 7 mu         0.7      1.09     0.848      1.00e- 3     10.3 
 8 mu         0.8      1.44     0.745      6.70e- 6     39.3 
 9 mu         0.9      2.44     0.146      7.37e-10    128.  
10 mu_1       0.1      1.29     0.000552   0            29.6 
11 mu_1       0.2      1.78     0.0272     0            43.9 
12 mu_1       0.3      1.53     0.130      0            27.0 
13 mu_1       0.4      1.18     0.423      0            11.7 
14 mu_1       0.5      1.02     0.726      0             7.32
15 mu_1       0.6      1.02     0.800      0             6.22
16 mu_1       0.7      1.15     0.862      0            14.8 
17 mu_1       0.8      1.55     0.659      0            49.1 
18 mu_1       0.9      2.59     0.0952     0           142.  
19 mu_0       0.1      1.78     0.0000805  0            73.2 
20 mu_0       0.2      2.07     0.00456    0            40.6 
21 mu_0       0.3      2.03     0.0410     0            36.4 
22 mu_0       0.4      1.60     0.164      0            21.5 
23 mu_0       0.5      1.21     0.528      0             8.49
24 mu_0       0.6      1.03     0.822      0             7.46
25 mu_0       0.7      0.971    0.740      0             6.80
26 mu_0       0.8      0.974    0.796      0             4.43
27 mu_0       0.9      1.12     0.238      0            12.1 
[1] "Total run time was 49.653 seconds"
