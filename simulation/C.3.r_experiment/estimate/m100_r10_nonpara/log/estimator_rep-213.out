
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1200"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  4  6  7  5 13  4  8 11  6  4  6  3  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04152 0.34372 0.64735 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
706 494 
[1] "treatment indicator table: "

  0   1 
414 786 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 580
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 90.766 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 1.30  0.877
 2 mu         0.1   0.2 1.66  1.17 
 3 mu         0.1   0.3 1.96  1.36 
 4 mu         0.1   0.4 2.22  1.53 
 5 mu         0.1   0.5 2.45  1.66 
 6 mu         0.2   0.1 0.914 0.443
 7 mu         0.2   0.2 1.15  0.584
 8 mu         0.2   0.3 1.32  0.669
 9 mu         0.2   0.4 1.50  0.759
10 mu         0.2   0.5 1.69  0.836
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      3.98        0.0235 0.0000000663    305.  
 2 mu         0.2      2.66        0.260  0.000113        149.  
 3 mu         0.3      1.70        0.612  0.00531          45.2 
 4 mu         0.4      1.28        0.921  0.0448           10.2 
 5 mu         0.5      1.09        1.04   0.167             3.68
 6 mu         0.6      1.01        1.00   0.433             1.69
 7 mu         0.7      0.983       0.968  0.455             1.61
 8 mu         0.8      0.988       0.950  0.111             2.90
 9 mu         0.9      1.04        0.857  0.00599           9.10
10 mu_1       0.1      3.61        0.0897 0.000000411     235.  
11 mu_1       0.2      1.87        0.464  0.000341         57.3 
12 mu_1       0.3      1.38        0.829  0.0107           13.5 
13 mu_1       0.4      1.17        0.982  0.0816            6.31
14 mu_1       0.5      1.05        1.02   0.260             2.54
15 mu_1       0.6      0.997       0.950  0.514             1.56
16 mu_1       0.7      0.981       0.977  0.328             1.65
17 mu_1       0.8      0.990       0.948  0.0720            3.27
18 mu_1       0.9      1.05        0.825  0.00355           9.49
19 mu_0       0.1      4.02        0.0164 0.0000000269    313.  
20 mu_0       0.2      2.86        0.204  0.0000561       171.  
21 mu_0       0.3      1.83        0.531  0.00253          59.4 
22 mu_0       0.4      1.35        0.890  0.0173           15.1 
23 mu_0       0.5      1.13        0.965  0.0734            4.91
24 mu_0       0.6      1.03        1.03   0.225             2.11
25 mu_0       0.7      0.987       0.953  0.541             1.62
26 mu_0       0.8      0.979       1.00   0.265             1.79
27 mu_0       0.9      0.980       0.871  0.0279            5.56
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     18.7      0.0000671  1.15e-15   1823.  
 2 mu         0.2     14.0      0.00568    1.50e-10   1263.  
 3 mu         0.3      7.54     0.0448     1.48e- 7    570.  
 4 mu         0.4      3.86     0.217      1.97e- 5    190.  
 5 mu         0.5      2.16     0.639      8.75e- 4     46.0 
 6 mu         0.6      1.34     0.976      1.94e- 2     15.6 
 7 mu         0.7      1.02     0.991      4.13e- 3      3.53
 8 mu         0.8      1.08     0.792      2.42e- 5      4.28
 9 mu         0.9      1.47     0.211      2.36e- 9     19.1 
10 mu_1       0.1     19.5      0.000494   1.15e-14   1823.  
11 mu_1       0.2      8.11     0.0190     7.52e-10    632.  
12 mu_1       0.3      3.87     0.111      4.94e- 7    190.  
13 mu_1       0.4      2.35     0.356      4.93e- 5     47.4 
14 mu_1       0.5      1.62     0.833      1.75e- 3     26.7 
15 mu_1       0.6      1.16     0.939      3.24e- 2     12.3 
16 mu_1       0.7      0.998    0.992      1.31e- 3      2.74
17 mu_1       0.8      1.11     0.660      6.71e- 6      5.35
18 mu_1       0.9      1.52     0.156      5.83e-10     21.3 
19 mu_0       0.1     18.7      0.0000213  0          1823.  
20 mu_0       0.2     15.4      0.00133    0          1421.  
21 mu_0       0.3      9.11     0.0182     0           733.  
22 mu_0       0.4      4.87     0.110      0           285.  
23 mu_0       0.5      2.70     0.432      0            82.7 
24 mu_0       0.6      1.61     0.860      0            20.6 
25 mu_0       0.7      1.08     0.899      0             6.19
26 mu_0       0.8      0.941    0.916      0             3.84
27 mu_0       0.9      0.992    0.243      0             7.06
[1] "Total run time was 96.06 seconds"
