
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1230"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  7  7  4  3  7  5  7  7  7  5  8  5  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02942 0.31523 0.60086 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
699 531 
[1] "treatment indicator table: "

  0   1 
495 735 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.838 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.371 0.161 
 2 mu         0.1   0.2 0.406 0.201 
 3 mu         0.1   0.3 0.525 0.229 
 4 mu         0.1   0.4 0.544 0.238 
 5 mu         0.1   0.5 0.577 0.258 
 6 mu         0.2   0.1 0.287 0.0700
 7 mu         0.2   0.2 0.331 0.0898
 8 mu         0.2   0.3 0.420 0.101 
 9 mu         0.2   0.4 0.439 0.104 
10 mu         0.2   0.5 0.468 0.114 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.10        0.0454 0.0000000852     35.5 
 2 mu         0.2      0.880       0.330  0.000154         16.9 
 3 mu         0.3      0.882       0.666  0.00682           8.17
 4 mu         0.4      0.936       0.884  0.0618            4.12
 5 mu         0.5      0.964       0.957  0.258             2.41
 6 mu         0.6      0.972       0.973  0.475             1.66
 7 mu         0.7      0.966       1.01   0.117             1.66
 8 mu         0.8      0.942       0.906  0.00975           2.71
 9 mu         0.9      0.875       0.506  0.0000711         5.30
10 mu_1       0.1      0.705       0.157  0.000000516      17.7 
11 mu_1       0.2      0.748       0.579  0.000470          3.80
12 mu_1       0.3      0.871       0.835  0.0141            3.17
13 mu_1       0.4      0.939       0.923  0.0979            2.59
14 mu_1       0.5      0.963       0.955  0.340             2.28
15 mu_1       0.6      0.969       0.982  0.361             1.45
16 mu_1       0.7      0.963       1.01   0.0792            1.77
17 mu_1       0.8      0.938       0.861  0.00595           2.80
18 mu_1       0.9      0.871       0.438  0.0000400         5.48
19 mu_0       0.1      1.14        0.0330 0.0000000374     39.2 
20 mu_0       0.2      0.913       0.271  0.0000749        20.5 
21 mu_0       0.3      0.886       0.548  0.00370          10.7 
22 mu_0       0.4      0.934       0.823  0.0377            5.66
23 mu_0       0.5      0.965       0.924  0.175             3.14
24 mu_0       0.6      0.976       0.954  0.458             1.98
25 mu_0       0.7      0.973       1.00   0.206             1.54
26 mu_0       0.8      0.954       1.01   0.0250            2.39
27 mu_0       0.9      0.906       0.840  0.000351          3.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.16    0.000114   3.73e-15     58.2 
 2 mu         0.2       2.24    0.0122     9.77e-10     79.5 
 3 mu         0.3       2.34    0.143      1.44e- 6     63.1 
 4 mu         0.4       1.80    0.529      2.56e- 4     41.0 
 5 mu         0.5       1.28    1.00       1.14e- 2     12.2 
 6 mu         0.6       1.11    0.939      6.55e- 2      6.71
 7 mu         0.7       1.29    0.893      1.39e- 3     24.5 
 8 mu         0.8       2.14    0.360      4.74e- 6     67.1 
 9 mu         0.9       6.88    0.0343     2.06e-10    559.  
10 mu_1       0.1       2.23    0.000775   3.73e-14     97.0 
11 mu_1       0.2       2.59    0.0382     4.88e- 9     66.3 
12 mu_1       0.3       2.21    0.274      4.81e- 6     63.1 
13 mu_1       0.4       1.54    0.777      6.40e- 4     30.7 
14 mu_1       0.5       1.15    0.960      2.22e- 2      7.30
15 mu_1       0.6       1.09    0.933      1.82e- 2      9.22
16 mu_1       0.7       1.35    0.814      3.31e- 4     28.8 
17 mu_1       0.8       2.32    0.265      9.88e- 7     83.9 
18 mu_1       0.9       7.47    0.0195     3.81e-11    621.  
19 mu_0       0.1       1.04    0.0000448  0            53.9 
20 mu_0       0.2       2.15    0.00591    0            82.9 
21 mu_0       0.3       2.40    0.0891     0            63.1 
22 mu_0       0.4       1.96    0.366      0            47.8 
23 mu_0       0.5       1.42    0.804      0            17.0 
24 mu_0       0.6       1.14    0.995      0             5.90
25 mu_0       0.7       1.14    0.957      0            14.4 
26 mu_0       0.8       1.39    0.666      0            41.6 
27 mu_0       0.9       1.56    0.0987     0            54.0 
[1] "Total run time was 70.859 seconds"
