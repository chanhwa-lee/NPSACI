
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  4  5  7  2  6 13  6  5  3  3  8  6  9  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05373 0.38799 0.65291 1.00000 4.16823 
[1] "event indicator table: "

  0   1 
764 505 
[1] "treatment indicator table: "

  0   1 
450 819 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.254 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.259 0.0994
 2 mu         0.1   0.2 0.375 0.134 
 3 mu         0.1   0.3 0.409 0.171 
 4 mu         0.1   0.4 0.551 0.202 
 5 mu         0.1   0.5 0.549 0.210 
 6 mu         0.2   0.1 0.282 0.0747
 7 mu         0.2   0.2 0.404 0.104 
 8 mu         0.2   0.3 0.452 0.130 
 9 mu         0.2   0.4 0.568 0.152 
10 mu         0.2   0.5 0.576 0.157 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.996       0.0387 0.0000000684     40.0 
 2 mu         0.2      1.06        0.325  0.000125         30.7 
 3 mu         0.3      1.00        0.696  0.00659          10.7 
 4 mu         0.4      1.00        0.930  0.0749            2.62
 5 mu         0.5      1.01        0.978  0.301             2.30
 6 mu         0.6      1.01        0.987  0.489             1.59
 7 mu         0.7      0.989       1.01   0.541             1.51
 8 mu         0.8      0.954       0.949  0.235             1.77
 9 mu         0.9      0.901       0.833  0.00908           2.84
10 mu_1       0.1      1.15        0.129  0.000000432      50.0 
11 mu_1       0.2      1.04        0.612  0.000397         19.2 
12 mu_1       0.3      0.999       0.865  0.0140            4.50
13 mu_1       0.4      1.01        0.998  0.120             2.67
14 mu_1       0.5      1.02        0.979  0.368             2.06
15 mu_1       0.6      1.01        1.00   0.545             1.52
16 mu_1       0.7      0.984       0.991  0.504             1.55
17 mu_1       0.8      0.947       0.947  0.189             1.79
18 mu_1       0.9      0.895       0.808  0.00670           3.07
19 mu_0       0.1      0.979       0.0262 0.0000000279     38.9 
20 mu_0       0.2      1.07        0.253  0.0000573        33.6 
21 mu_0       0.3      1.00        0.651  0.00343          13.4 
22 mu_0       0.4      0.990       0.882  0.0448            3.30
23 mu_0       0.5      1.01        0.967  0.233             2.53
24 mu_0       0.6      1.01        0.973  0.404             1.92
25 mu_0       0.7      1.00        1.00   0.460             1.47
26 mu_0       0.8      0.983       0.981  0.331             1.70
27 mu_0       0.9      0.956       0.936  0.0305            2.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.19    0.0000849  7.28e-17    159.  
 2 mu         0.2       3.44    0.00624    1.91e-11     87.1 
 3 mu         0.3       2.45    0.0694     2.82e- 8     67.2 
 4 mu         0.4       1.67    0.321      5.00e- 6     38.2 
 5 mu         0.5       1.35    0.829      2.78e- 4     10.9 
 6 mu         0.6       1.21    1.08       7.39e- 3      5.54
 7 mu         0.7       1.15    1.10       4.78e- 4      4.33
 8 mu         0.8       1.21    0.902      1.09e- 6      6.20
 9 mu         0.9       1.33    0.176      2.36e-11     11.8 
10 mu_1       0.1       4.02    0.000586   7.28e-16    133.  
11 mu_1       0.2       3.02    0.0260     9.54e-11     69.7 
12 mu_1       0.3       2.04    0.151      9.40e- 8     62.2 
13 mu_1       0.4       1.51    0.543      1.25e- 5     26.5 
14 mu_1       0.5       1.31    0.997      5.55e- 4      7.67
15 mu_1       0.6       1.19    1.05       7.91e- 3      5.42
16 mu_1       0.7       1.15    1.08       1.08e- 4      3.71
17 mu_1       0.8       1.23    0.753      2.15e- 7      6.89
18 mu_1       0.9       1.34    0.124      4.14e-12     13.1 
19 mu_0       0.1       3.10    0.0000275  0           162.  
20 mu_0       0.2       3.55    0.00207    0            99.8 
21 mu_0       0.3       2.63    0.0273     0            69.3 
22 mu_0       0.4       1.78    0.157      0            45.9 
23 mu_0       0.5       1.39    0.606      0            15.7 
24 mu_0       0.6       1.24    0.891      0             6.92
25 mu_0       0.7       1.15    1.00       0             5.77
26 mu_0       0.8       1.14    1.15       0             3.81
27 mu_0       0.9       1.27    0.393      0            11.3 
[1] "Total run time was 88.967 seconds"
