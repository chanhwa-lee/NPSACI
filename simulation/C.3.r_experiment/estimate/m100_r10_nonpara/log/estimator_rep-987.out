
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1259"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  4  6  9  8  5 10  6  5  6  8  7  1  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03711 0.43589 0.66580 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
747 512 
[1] "treatment indicator table: "

  0   1 
416 843 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 172.577 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.450 0.275 
 2 mu         0.1   0.2 0.534 0.329 
 3 mu         0.1   0.3 0.720 0.406 
 4 mu         0.1   0.4 0.700 0.417 
 5 mu         0.1   0.5 0.719 0.429 
 6 mu         0.2   0.1 0.271 0.0752
 7 mu         0.2   0.2 0.315 0.0922
 8 mu         0.2   0.3 0.429 0.142 
 9 mu         0.2   0.4 0.422 0.124 
10 mu         0.2   0.5 0.433 0.127 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.27        0.0214 0.000000160      60.1 
 2 mu         0.2      0.841       0.245  0.000102          9.60
 3 mu         0.3      0.869       0.621  0.00346           4.32
 4 mu         0.4      0.969       0.881  0.0338            3.30
 5 mu         0.5      1.03        1.00   0.159             2.00
 6 mu         0.6      1.02        1.02   0.451             1.65
 7 mu         0.7      0.991       0.983  0.590             1.50
 8 mu         0.8      0.979       0.978  0.199             2.09
 9 mu         0.9      0.986       0.890  0.00418           2.98
10 mu_1       0.1      0.824       0.0782 0.00000108       17.4 
11 mu_1       0.2      0.838       0.489  0.000347          5.58
12 mu_1       0.3      0.936       0.816  0.00794           3.95
13 mu_1       0.4      1.01        0.941  0.0589            2.79
14 mu_1       0.5      1.03        1.00   0.226             1.77
15 mu_1       0.6      1.01        1.02   0.515             1.66
16 mu_1       0.7      0.988       0.980  0.489             1.60
17 mu_1       0.8      0.981       0.962  0.152             2.18
18 mu_1       0.9      0.987       0.867  0.00289           3.03
19 mu_0       0.1      1.32        0.0139 0.0000000581     66.8 
20 mu_0       0.2      0.842       0.183  0.0000408        11.4 
21 mu_0       0.3      0.841       0.499  0.00154           4.69
22 mu_0       0.4      0.942       0.792  0.0170            3.65
23 mu_0       0.5      1.02        0.974  0.0916            2.55
24 mu_0       0.6      1.03        0.978  0.300             1.72
25 mu_0       0.7      0.996       1.00   0.593             1.60
26 mu_0       0.8      0.974       0.972  0.388             1.73
27 mu_0       0.9      0.971       0.946  0.0158            2.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      21.5     0.0000265  2.72e-16   2057.  
 2 mu         0.2      11.0     0.00452    6.33e-11    802.  
 3 mu         0.3       5.72    0.0640     8.19e- 8    275.  
 4 mu         0.4       2.89    0.287      1.25e- 5     80.2 
 5 mu         0.5       1.68    0.786      5.76e- 4     26.8 
 6 mu         0.6       1.24    0.990      1.23e- 2      7.17
 7 mu         0.7       1.10    1.00       1.31e- 2      3.68
 8 mu         0.8       1.23    0.903      5.12e- 5     10.6 
 9 mu         0.9       1.80    0.189      2.50e- 9     21.7 
10 mu_1       0.1       2.16    0.000151   0           165.  
11 mu_1       0.2       3.62    0.0144     0           226.  
12 mu_1       0.3       2.77    0.128      0           103.  
13 mu_1       0.4       1.83    0.482      0            45.4 
14 mu_1       0.5       1.36    0.964      0            17.9 
15 mu_1       0.6       1.16    1.04       0             5.38
16 mu_1       0.7       1.09    1.04       0             4.61
17 mu_1       0.8       1.28    0.769      0            11.6 
18 mu_1       0.9       1.86    0.148      0            24.1 
19 mu_0       0.1      23.7     0.0000111  0          2285.  
20 mu_0       0.2      12.8     0.00161    0          1002.  
21 mu_0       0.3       6.99    0.0254     0           393.  
22 mu_0       0.4       3.59    0.155      0           134.  
23 mu_0       0.5       1.99    0.503      0            37.3 
24 mu_0       0.6       1.37    0.881      0            12.0 
25 mu_0       0.7       1.10    0.945      0             4.57
26 mu_0       0.8       1.00    0.920      0             6.64
27 mu_0       0.9       1.21    0.246      0            17.3 
[1] "Total run time was 178.342 seconds"
