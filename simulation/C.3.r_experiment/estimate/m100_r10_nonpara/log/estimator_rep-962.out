
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1287"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  7  7  7  7  8  2  4  5  5  4  8  7  7 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05513 0.40654 0.65750 1.00000 5.08859 
[1] "event indicator table: "

  0   1 
745 542 
[1] "treatment indicator table: "

  0   1 
469 818 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.228 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.234 0.104 
 2 mu         0.1   0.2 0.200 0.0898
 3 mu         0.1   0.3 0.182 0.0851
 4 mu         0.1   0.4 0.247 0.0927
 5 mu         0.1   0.5 0.209 0.0673
 6 mu         0.2   0.1 0.258 0.0912
 7 mu         0.2   0.2 0.249 0.0820
 8 mu         0.2   0.3 0.247 0.0798
 9 mu         0.2   0.4 0.332 0.0909
10 mu         0.2   0.5 0.304 0.0669
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.249       0.0322 0.00000000354      2.85
 2 mu         0.2      0.531       0.294  0.00000838         3.74
 3 mu         0.3      0.745       0.637  0.000605           3.47
 4 mu         0.4      0.887       0.884  0.0101             4.57
 5 mu         0.5      0.957       0.940  0.0723             3.12
 6 mu         0.6      0.980       0.973  0.242              1.64
 7 mu         0.7      0.958       0.958  0.264              1.58
 8 mu         0.8      0.905       0.947  0.0455             1.89
 9 mu         0.9      0.809       0.685  0.000935           3.87
10 mu_1       0.1      0.475       0.115  0.0000000238       4.48
11 mu_1       0.2      0.703       0.520  0.0000286          3.40
12 mu_1       0.3      0.859       0.803  0.00140            4.36
13 mu_1       0.4      0.947       0.915  0.0179             4.44
14 mu_1       0.5      0.981       0.982  0.105              2.61
15 mu_1       0.6      0.983       0.963  0.311              1.62
16 mu_1       0.7      0.949       0.965  0.214              1.64
17 mu_1       0.8      0.895       0.928  0.0336             2.02
18 mu_1       0.9      0.797       0.617  0.000636           3.99
19 mu_0       0.1      0.224       0.0206 0.00000000129      2.81
20 mu_0       0.2      0.488       0.233  0.00000332         3.88
21 mu_0       0.3      0.697       0.544  0.000263           3.09
22 mu_0       0.4      0.848       0.797  0.00486            4.66
23 mu_0       0.5      0.934       0.916  0.0392             3.64
24 mu_0       0.6      0.976       1.00   0.139              1.84
25 mu_0       0.7      0.979       0.972  0.280              1.53
26 mu_0       0.8      0.947       0.967  0.0929             1.77
27 mu_0       0.9      0.915       0.881  0.00363            2.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     154.      0.000108   1.80e-15  14176.  
 2 mu         0.2     297.      0.00956    4.19e-10  27595.  
 3 mu         0.3     203.      0.0853     5.41e- 7  18759.  
 4 mu         0.4      78.2     0.289      8.23e- 5   6993.  
 5 mu         0.5      19.4     0.841      3.63e- 3   1532.  
 6 mu         0.6       3.95    1.02       6.19e- 2    182.  
 7 mu         0.7       1.51    1.18       4.14e- 3      9.37
 8 mu         0.8       1.42    0.727      1.85e- 5      7.19
 9 mu         0.9       1.66    0.109      1.34e- 9     30.0 
10 mu_1       0.1     306.      0.000756   1.70e-14  28353.  
11 mu_1       0.2     297.      0.0310     1.98e- 9  27595.  
12 mu_1       0.3     137.      0.183      1.71e- 6  12506.  
13 mu_1       0.4      40.5     0.504      1.95e- 4   3496.  
14 mu_1       0.5       8.89    0.988      6.54e- 3    613.  
15 mu_1       0.6       2.27    1.14       3.56e- 2     60.6 
16 mu_1       0.7       1.35    1.03       7.40e- 4      6.89
17 mu_1       0.8       1.44    0.607      2.90e- 6      8.52
18 mu_1       0.9       1.66    0.0792     1.99e-10     31.5 
19 mu_0       0.1     137.      0.0000427  0         12601.  
20 mu_0       0.2     297.      0.00356    0         27595.  
21 mu_0       0.3     232.      0.0323     0         21438.  
22 mu_0       0.4     103.      0.172      0          9324.  
23 mu_0       0.5      29.9     0.604      0          2451.  
24 mu_0       0.6       6.46    0.930      0           364.  
25 mu_0       0.7       1.88    1.06       0            24.4 
26 mu_0       0.8       1.32    1.02       0             5.68
27 mu_0       0.9       1.65    0.239      0            15.8 
[1] "Total run time was 59.899 seconds"
