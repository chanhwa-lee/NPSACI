
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1200"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  3 12  4  7  8  5  1  6  9  6 11  5  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02046 0.30776 0.59555 1.00000 6.30879 
[1] "event indicator table: "

  0   1 
703 497 
[1] "treatment indicator table: "

  0   1 
458 742 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 565
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.218 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.341 0.115 
 2 mu         0.1   0.2 0.342 0.109 
 3 mu         0.1   0.3 0.354 0.107 
 4 mu         0.1   0.4 0.451 0.145 
 5 mu         0.1   0.5 0.468 0.142 
 6 mu         0.2   0.1 0.384 0.0945
 7 mu         0.2   0.2 0.431 0.100 
 8 mu         0.2   0.3 0.480 0.104 
 9 mu         0.2   0.4 0.573 0.126 
10 mu         0.2   0.5 0.603 0.129 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.560       0.0323 0.00000000618     11.0 
 2 mu         0.2      0.905       0.289  0.0000229         14.7 
 3 mu         0.3      1.02        0.625  0.00184            7.31
 4 mu         0.4      1.04        0.903  0.0288             3.34
 5 mu         0.5      1.03        0.997  0.171              2.41
 6 mu         0.6      1.02        0.999  0.513              1.96
 7 mu         0.7      1.03        0.978  0.437              2.93
 8 mu         0.8      1.03        0.994  0.120              4.59
 9 mu         0.9      1.13        0.790  0.00660           17.6 
10 mu_1       0.1      0.933       0.144  0.0000000402      17.7 
11 mu_1       0.2      1.04        0.584  0.0000748         12.4 
12 mu_1       0.3      1.04        0.836  0.00404            4.59
13 mu_1       0.4      1.03        0.989  0.0478             3.29
14 mu_1       0.5      1.02        1.01   0.231              2.06
15 mu_1       0.6      1.02        0.980  0.551              2.09
16 mu_1       0.7      1.03        0.973  0.342              3.19
17 mu_1       0.8      1.03        0.961  0.0880             5.61
18 mu_1       0.9      1.15        0.763  0.00457           19.5 
19 mu_0       0.1      0.518       0.0230 0.00000000239     10.7 
20 mu_0       0.2      0.871       0.225  0.00000993        15.3 
21 mu_0       0.3      1.01        0.542  0.000904           8.47
22 mu_0       0.4      1.04        0.800  0.0161             3.84
23 mu_0       0.5      1.03        0.983  0.111              2.76
24 mu_0       0.6      1.02        1.00   0.386              1.81
25 mu_0       0.7      1.03        0.979  0.580              2.33
26 mu_0       0.8      1.01        0.959  0.248              3.83
27 mu_0       0.9      0.932       0.823  0.0240             6.15
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.21    0.000187   1.16e-16      83.1
 2 mu         0.2       1.54    0.0155     5.39e-11      51.2
 3 mu         0.3       1.83    0.111      1.04e- 7      21.9
 4 mu         0.4       1.81    0.479      2.12e- 5      34.3
 5 mu         0.5       1.48    0.919      1.22e- 3      22.9
 6 mu         0.6       1.35    0.980      3.13e- 2      19.8
 7 mu         0.7       1.69    0.907      5.96e- 3      46.6
 8 mu         0.8       2.33    0.679      5.22e- 5      52.2
 9 mu         0.9       3.31    0.110      1.02e- 8      99.8
10 mu_1       0.1       1.60    0.00128    1.10e-15      75.6
11 mu_1       0.2       1.64    0.0515     2.56e-10      23.3
12 mu_1       0.3       1.85    0.230      3.31e- 7      29.1
13 mu_1       0.4       1.70    0.712      5.03e- 5      34.3
14 mu_1       0.5       1.38    0.915      2.33e- 3      18.4
15 mu_1       0.6       1.40    0.952      2.27e- 2      25.3
16 mu_1       0.7       1.83    0.853      1.28e- 3      50.9
17 mu_1       0.8       2.48    0.528      1.54e- 5      49.9
18 mu_1       0.9       3.44    0.0823     2.67e- 9     111. 
19 mu_0       0.1       1.17    0.0000828  0             84.0
20 mu_0       0.2       1.51    0.00528    0             58.2
21 mu_0       0.3       1.83    0.0392     0             26.2
22 mu_0       0.4       1.89    0.285      0             34.3
23 mu_0       0.5       1.57    0.786      0             27.5
24 mu_0       0.6       1.28    0.885      0             11.7
25 mu_0       0.7       1.37    0.878      0             36.5
26 mu_0       0.8       1.76    0.741      0             61.4
27 mu_0       0.9       2.18    0.131      0             35.5
[1] "Total run time was 58.889 seconds"
