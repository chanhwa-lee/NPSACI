
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1151"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9 11  8  9  7  4  5  5  5  4  1 10  7  7  7  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04054 0.38724 0.63960 1.00000 8.00000 
[1] "event indicator table: "

  0   1 
702 449 
[1] "treatment indicator table: "

  0   1 
364 787 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 566
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.395 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.371 0.110 
 2 mu         0.1   0.2 0.394 0.0899
 3 mu         0.1   0.3 0.404 0.0936
 4 mu         0.1   0.4 0.414 0.0993
 5 mu         0.1   0.5 0.413 0.113 
 6 mu         0.2   0.1 0.320 0.0657
 7 mu         0.2   0.2 0.351 0.0488
 8 mu         0.2   0.3 0.372 0.0499
 9 mu         0.2   0.4 0.396 0.0532
10 mu         0.2   0.5 0.410 0.0621
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.829       0.107  0.000000508     10.1 
 2 mu         0.2      0.878       0.582  0.000419         3.71
 3 mu         0.3      0.937       0.904  0.0135           4.27
 4 mu         0.4      0.969       0.947  0.110            3.22
 5 mu         0.5      0.981       0.958  0.325            2.41
 6 mu         0.6      0.996       0.984  0.399            2.05
 7 mu         0.7      1.02        1.01   0.486            1.52
 8 mu         0.8      1.02        0.985  0.504            1.78
 9 mu         0.9      0.971       0.962  0.0755           2.06
10 mu_1       0.1      0.906       0.323  0.00000294       6.32
11 mu_1       0.2      0.921       0.832  0.00122          4.57
12 mu_1       0.3      0.963       0.913  0.0266           4.05
13 mu_1       0.4      0.977       0.954  0.167            2.79
14 mu_1       0.5      0.986       0.990  0.310            2.43
15 mu_1       0.6      1.00        1.00   0.443            1.90
16 mu_1       0.7      1.02        1.02   0.478            1.55
17 mu_1       0.8      1.02        0.986  0.499            1.80
18 mu_1       0.9      0.967       0.970  0.0613           2.16
19 mu_0       0.1      0.820       0.0816 0.000000237     10.5 
20 mu_0       0.2      0.867       0.506  0.000218         4.28
21 mu_0       0.3      0.926       0.889  0.00788          4.36
22 mu_0       0.4      0.963       0.944  0.0683           3.51
23 mu_0       0.5      0.977       0.988  0.196            2.40
24 mu_0       0.6      0.987       0.987  0.333            2.26
25 mu_0       0.7      1.00        1.02   0.495            1.56
26 mu_0       0.8      1.02        1.02   0.449            1.69
27 mu_0       0.9      1.01        0.986  0.203            2.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.22     0.000109   2.46e-16    110.  
 2 mu         0.2      0.680    0.00479    5.73e-11     29.7 
 3 mu         0.3      0.720    0.0404     7.41e- 8      7.93
 4 mu         0.4      0.903    0.191      1.07e- 5      8.02
 5 mu         0.5      0.996    0.606      3.79e- 4      5.15
 6 mu         0.6      1.03     0.932      6.80e- 4      4.09
 7 mu         0.7      1.06     0.954      5.96e- 6      3.60
 8 mu         0.8      1.06     0.986      6.91e- 9      3.44
 9 mu         0.9      1.03     0.318      5.93e-14      5.46
10 mu_1       0.1      0.979    0.000717   2.33e-15     61.1 
11 mu_1       0.2      0.711    0.0199     2.71e-10      9.33
12 mu_1       0.3      0.860    0.112      2.34e- 7      7.56
13 mu_1       0.4      0.986    0.342      2.66e- 5      7.80
14 mu_1       0.5      1.02     0.845      7.57e- 4      4.15
15 mu_1       0.6      1.04     0.996      6.29e- 5      4.17
16 mu_1       0.7      1.06     1.04       4.73e- 7      3.72
17 mu_1       0.8      1.05     0.944      4.80e-10      3.65
18 mu_1       0.9      1.03     0.243      3.66e-15      6.06
19 mu_0       0.1      1.25     0.0000312  0           115.  
20 mu_0       0.2      0.672    0.00127    0            35.1 
21 mu_0       0.3      0.659    0.0113     0             8.24
22 mu_0       0.4      0.847    0.0814     0             8.17
23 mu_0       0.5      0.969    0.337      0             6.29
24 mu_0       0.6      1.01     0.769      0             3.98
25 mu_0       0.7      1.06     0.860      0             3.86
26 mu_0       0.8      1.08     1.06       0             3.74
27 mu_0       0.9      1.02     0.559      0             5.18
[1] "Total run time was 56.805 seconds"
