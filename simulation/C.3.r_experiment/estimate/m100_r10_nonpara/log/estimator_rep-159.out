
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1244"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  7  6  7  4  5  5  9  7  6  6  6  9  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03643 0.34108 0.59313 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
748 496 
[1] "treatment indicator table: "

  0   1 
485 759 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 80.032 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.356 0.110 
 2 mu         0.1   0.2 0.397 0.113 
 3 mu         0.1   0.3 0.408 0.101 
 4 mu         0.1   0.4 0.439 0.0965
 5 mu         0.1   0.5 0.469 0.0913
 6 mu         0.2   0.1 0.320 0.0662
 7 mu         0.2   0.2 0.380 0.0839
 8 mu         0.2   0.3 0.423 0.0809
 9 mu         0.2   0.4 0.478 0.0790
10 mu         0.2   0.5 0.528 0.0759
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.667        0.164 0.00000677      4.99
 2 mu         0.2      0.925        0.510 0.00215         4.75
 3 mu         0.3      0.998        0.884 0.0341          4.86
 4 mu         0.4      0.982        0.912 0.155           2.95
 5 mu         0.5      0.971        0.998 0.261           1.81
 6 mu         0.6      0.982        0.958 0.364           1.49
 7 mu         0.7      0.982        0.983 0.480           1.51
 8 mu         0.8      0.956        0.926 0.184           1.59
 9 mu         0.9      0.944        0.827 0.0126          3.12
10 mu_1       0.1      0.851        0.388 0.0000339       5.77
11 mu_1       0.2      0.998        0.754 0.00540         5.94
12 mu_1       0.3      1.00         0.925 0.0579          4.07
13 mu_1       0.4      0.983        0.966 0.208           2.66
14 mu_1       0.5      0.979        0.983 0.249           1.58
15 mu_1       0.6      0.985        0.977 0.424           1.52
16 mu_1       0.7      0.973        0.987 0.452           1.53
17 mu_1       0.8      0.947        0.925 0.124           1.66
18 mu_1       0.9      0.940        0.803 0.00935         3.26
19 mu_0       0.1      0.647        0.120 0.00000376      5.38
20 mu_0       0.2      0.907        0.456 0.00134         4.45
21 mu_0       0.3      0.996        0.803 0.0239          5.19
22 mu_0       0.4      0.982        0.879 0.119           3.15
23 mu_0       0.5      0.963        0.975 0.258           2.08
24 mu_0       0.6      0.979        0.961 0.275           1.61
25 mu_0       0.7      1.00         0.988 0.481           1.57
26 mu_0       0.8      0.993        1.00  0.360           1.74
27 mu_0       0.9      0.978        0.918 0.0423          2.14
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.66      0.000334  1.40e-17     81.3 
 2 mu         0.2      1.91      0.0245    7.32e-12     70.0 
 3 mu         0.3      1.64      0.171     1.62e- 8     41.6 
 4 mu         0.4      1.34      0.498     3.84e- 6     13.3 
 5 mu         0.5      1.13      0.810     2.66e- 4      5.36
 6 mu         0.6      0.985     0.801     8.50e- 3      4.03
 7 mu         0.7      0.953     0.861     8.71e- 3      5.81
 8 mu         0.8      1.02      0.499     6.68e- 5      6.67
 9 mu         0.9      1.21      0.0685    1.16e- 8     18.9 
10 mu_1       0.1      1.64      0.00133   0            75.9 
11 mu_1       0.2      1.66      0.0761    0            65.6 
12 mu_1       0.3      1.35      0.337     0            26.0 
13 mu_1       0.4      1.17      0.689     0             6.24
14 mu_1       0.5      1.04      0.884     0             5.07
15 mu_1       0.6      0.953     0.802     0             4.68
16 mu_1       0.7      0.953     0.812     0             5.93
17 mu_1       0.8      1.04      0.411     0             7.70
18 mu_1       0.9      1.23      0.0413    0            20.9 
19 mu_0       0.1      1.67      0.000162  0            90.4 
20 mu_0       0.2      1.98      0.0129    0            71.1 
21 mu_0       0.3      1.76      0.0969    0            48.3 
22 mu_0       0.4      1.45      0.341     0            18.0 
23 mu_0       0.5      1.21      0.746     0             5.64
24 mu_0       0.6      1.03      0.883     0             4.32
25 mu_0       0.7      0.951     0.741     0             5.53
26 mu_0       0.8      0.971     0.836     0             6.23
27 mu_0       0.9      1.08      0.123     0            10.5 
[1] "Total run time was 84.641 seconds"
