
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1187"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6 11  8  9  3  5  6  2  7  6  4 10  6  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03067 0.40358 0.65285 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
721 466 
[1] "treatment indicator table: "

  0   1 
391 796 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 547
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 82.188 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.435 0.159 
 2 mu         0.1   0.2 0.443 0.171 
 3 mu         0.1   0.3 0.519 0.210 
 4 mu         0.1   0.4 0.524 0.216 
 5 mu         0.1   0.5 0.526 0.227 
 6 mu         0.2   0.1 0.355 0.0800
 7 mu         0.2   0.2 0.372 0.0874
 8 mu         0.2   0.3 0.426 0.107 
 9 mu         0.2   0.4 0.432 0.112 
10 mu         0.2   0.5 0.438 0.119 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.799       0.0524 0.0000000168      34.9 
 2 mu         0.2      0.840       0.299  0.0000302         17.2 
 3 mu         0.3      0.852       0.690  0.00154            5.74
 4 mu         0.4      0.936       0.865  0.0167             3.61
 5 mu         0.5      1.00        0.995  0.0712             4.76
 6 mu         0.6      1.01        1.00   0.172              3.17
 7 mu         0.7      0.998       1.04   0.402              1.41
 8 mu         0.8      0.983       1.01   0.188              1.72
 9 mu         0.9      0.944       0.896  0.0194             4.35
10 mu_1       0.1      1.00        0.195  0.000000106       26.9 
11 mu_1       0.2      0.872       0.642  0.0000953          6.93
12 mu_1       0.3      0.907       0.850  0.00324            2.73
13 mu_1       0.4      0.987       0.957  0.0264             4.36
14 mu_1       0.5      1.02        0.992  0.0919             4.66
15 mu_1       0.6      1.01        1.01   0.200              2.70
16 mu_1       0.7      0.994       1.02   0.378              1.43
17 mu_1       0.8      0.976       0.999  0.159              1.84
18 mu_1       0.9      0.938       0.861  0.0151             4.68
19 mu_0       0.1      0.777       0.0353 0.00000000688     35.8 
20 mu_0       0.2      0.832       0.224  0.0000139         19.7 
21 mu_0       0.3      0.828       0.622  0.000810           7.27
22 mu_0       0.4      0.902       0.805  0.0102             3.11
23 mu_0       0.5      0.982       0.946  0.0505             4.86
24 mu_0       0.6      1.01        0.988  0.131              3.88
25 mu_0       0.7      1.01        1.01   0.255              1.77
26 mu_0       0.8      1.01        1.02   0.306              1.64
27 mu_0       0.9      1.00        1.01   0.0584             2.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.238    0.000109   3.57e-18     11.6 
 2 mu         0.2      0.657    0.0124     1.87e-12     14.5 
 3 mu         0.3      1.30     0.104      4.15e- 9     32.4 
 4 mu         0.4      1.62     0.388      9.81e- 7     28.7 
 5 mu         0.5      1.53     0.860      6.81e- 5     12.3 
 6 mu         0.6      1.31     1.10       2.18e- 3      7.39
 7 mu         0.7      1.21     1.16       2.67e- 2      3.49
 8 mu         0.8      1.44     0.898      3.18e- 4      8.44
 9 mu         0.9      2.07     0.220      7.86e- 8     39.5 
10 mu_1       0.1      0.538    0.000626   3.57e-17     23.2 
11 mu_1       0.2      1.01     0.0405     9.36e-12     23.6 
12 mu_1       0.3      1.57     0.249      1.38e- 8     36.1 
13 mu_1       0.4      1.67     0.670      2.45e- 6     23.9 
14 mu_1       0.5      1.47     1.05       1.36e- 4      9.44
15 mu_1       0.6      1.25     1.17       3.63e- 3      6.16
16 mu_1       0.7      1.21     1.24       1.25e- 2      3.92
17 mu_1       0.8      1.49     0.705      1.25e- 4     10.0 
18 mu_1       0.9      2.11     0.155      2.76e- 8     41.7 
19 mu_0       0.1      0.205    0.0000520  0            10.3 
20 mu_0       0.2      0.570    0.00527    0            14.5 
21 mu_0       0.3      1.19     0.0509     0            30.9 
22 mu_0       0.4      1.59     0.211      0            31.9 
23 mu_0       0.5      1.59     0.588      0            16.4 
24 mu_0       0.6      1.39     0.910      0             9.24
25 mu_0       0.7      1.21     1.10       0             5.53
26 mu_0       0.8      1.22     1.10       0             4.82
27 mu_0       0.9      1.67     0.393      0            19.8 
[1] "Total run time was 87.553 seconds"
