
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1322"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  7  3 10  7  3  5  6 10  5  5  6  7  8 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04475 0.37943 0.63004 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
778 544 
[1] "treatment indicator table: "

  0   1 
460 862 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 667
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.781 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.226 0.0777
 2 mu         0.1   0.2 0.324 0.0941
 3 mu         0.1   0.3 0.313 0.0912
 4 mu         0.1   0.4 0.335 0.0952
 5 mu         0.1   0.5 0.330 0.0990
 6 mu         0.2   0.1 0.292 0.0748
 7 mu         0.2   0.2 0.417 0.0882
 8 mu         0.2   0.3 0.420 0.0861
 9 mu         0.2   0.4 0.463 0.0919
10 mu         0.2   0.5 0.482 0.0954
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.617       0.0648  3.73e-10     14.8 
 2 mu         0.2      0.880       0.445   2.02e- 6     12.4 
 3 mu         0.3      1.10        0.754   2.49e- 4     15.0 
 4 mu         0.4      1.13        1.03    6.24e- 3      8.25
 5 mu         0.5      1.07        1.03    6.30e- 2      2.98
 6 mu         0.6      1.02        1.01    3.39e- 1      1.70
 7 mu         0.7      0.994       1.01    4.06e- 1      1.41
 8 mu         0.8      0.995       0.992   3.67e- 1      2.22
 9 mu         0.9      0.966       0.877   4.43e- 2      3.42
10 mu_1       0.1      0.712       0.224   2.86e- 9      8.51
11 mu_1       0.2      1.05        0.742   7.79e- 6     16.4 
12 mu_1       0.3      1.16        0.926   6.43e- 4     13.5 
13 mu_1       0.4      1.12        1.04    1.22e- 2      5.98
14 mu_1       0.5      1.05        1.01    9.94e- 2      2.44
15 mu_1       0.6      1.01        1.03    4.52e- 1      1.54
16 mu_1       0.7      0.994       0.991   3.93e- 1      1.43
17 mu_1       0.8      0.995       0.991   3.22e- 1      2.33
18 mu_1       0.9      0.963       0.855   3.52e- 2      3.76
19 mu_0       0.1      0.606       0.0443  9.64e-11     16.1 
20 mu_0       0.2      0.838       0.367   5.79e- 7     11.4 
21 mu_0       0.3      1.08        0.698   7.98e- 5     15.7 
22 mu_0       0.4      1.14        1.01    2.28e- 3      9.77
23 mu_0       0.5      1.09        1.04    2.65e- 2      3.79
24 mu_0       0.6      1.03        1.02    1.69e- 1      2.04
25 mu_0       0.7      0.995       1.01    4.37e- 1      1.55
26 mu_0       0.8      0.995       0.989   3.54e- 1      1.76
27 mu_0       0.9      0.994       0.962   1.26e- 1      2.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      11.7   0.00000395   5.92e-17    811.  
 2 mu         0.2      13.8   0.00136      2.76e-11    876.  
 3 mu         0.3       6.43  0.0335       5.35e- 8    306.  
 4 mu         0.4       2.50  0.208        1.09e- 5     52.7 
 5 mu         0.5       1.43  0.635        6.28e- 4     11.2 
 6 mu         0.6       1.18  1.10         1.60e- 2      4.61
 7 mu         0.7       1.11  1.10         2.15e- 3      3.91
 8 mu         0.8       1.13  0.995        3.26e- 6      5.04
 9 mu         0.9       1.22  0.210        3.55e-11      9.38
10 mu_1       0.1      18.2   0.0000278    5.63e-16   1217.  
11 mu_1       0.2      11.2   0.00452      1.31e-10    657.  
12 mu_1       0.3       4.12  0.0712       1.70e- 7    153.  
13 mu_1       0.4       1.84  0.349        2.58e- 5     19.8 
14 mu_1       0.5       1.30  0.818        1.19e- 3      9.36
15 mu_1       0.6       1.15  1.15         2.54e- 2      3.46
16 mu_1       0.7       1.11  1.08         4.62e- 4      4.39
17 mu_1       0.8       1.14  0.839        6.12e- 7      4.99
18 mu_1       0.9       1.24  0.163        5.91e-12     10.4 
19 mu_0       0.1      11.0   0.000000899  0           766.  
20 mu_0       0.2      14.5   0.000469     0           931.  
21 mu_0       0.3       7.43  0.0164       0           371.  
22 mu_0       0.4       2.94  0.106        0            74.7 
23 mu_0       0.5       1.57  0.377        0            14.0 
24 mu_0       0.6       1.22  0.802        0             6.34
25 mu_0       0.7       1.12  1.13         0             3.04
26 mu_0       0.8       1.07  1.07         0             5.39
27 mu_0       0.9       1.04  0.413        0             9.23
[1] "Total run time was 59.262 seconds"
