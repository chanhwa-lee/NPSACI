
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1350"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  2 10  5  3  8  5  6  7  7  2  6 11  7  9  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04954 0.37600 0.63897 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
797 553 
[1] "treatment indicator table: "

  0   1 
476 874 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 697
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 103.72 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.362 0.155
 2 mu         0.1   0.2 0.429 0.145
 3 mu         0.1   0.3 0.525 0.190
 4 mu         0.1   0.4 0.533 0.181
 5 mu         0.1   0.5 0.540 0.182
 6 mu         0.2   0.1 0.500 0.171
 7 mu         0.2   0.2 0.615 0.193
 8 mu         0.2   0.3 0.739 0.234
 9 mu         0.2   0.4 0.796 0.250
10 mu         0.2   0.5 0.839 0.268
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.687      0.00594 0.0000000717     16.1 
 2 mu         0.2      1.24       0.123   0.000134         43.1 
 3 mu         0.3      1.41       0.458   0.00717          57.7 
 4 mu         0.4      1.20       0.705   0.0594           33.0 
 5 mu         0.5      1.02       0.898   0.229            10.1 
 6 mu         0.6      0.992      0.972   0.526             2.31
 7 mu         0.7      1.02       1.01    0.309             2.01
 8 mu         0.8      1.08       1.00    0.0494            5.74
 9 mu         0.9      1.14       0.712   0.000719         10.1 
10 mu_1       0.1      1.04       0.0270  0.000000435      21.8 
11 mu_1       0.2      1.42       0.260   0.000412         59.8 
12 mu_1       0.3      1.36       0.575   0.0148           53.4 
13 mu_1       0.4      1.12       0.805   0.101            23.1 
14 mu_1       0.5      0.998      0.940   0.319             6.04
15 mu_1       0.6      1.00       0.990   0.575             1.64
16 mu_1       0.7      1.03       1.02    0.253             2.30
17 mu_1       0.8      1.09       0.985   0.0364            6.34
18 mu_1       0.9      1.14       0.683   0.000477         10.1 
19 mu_0       0.1      0.648      0.00381 0.0000000313     16.2 
20 mu_0       0.2      1.20       0.0882  0.0000648        38.9 
21 mu_0       0.3      1.43       0.383   0.00381          59.5 
22 mu_0       0.4      1.26       0.642   0.0317           39.6 
23 mu_0       0.5      1.05       0.887   0.111            14.1 
24 mu_0       0.6      0.980      0.957   0.231             3.31
25 mu_0       0.7      1.00       1.01    0.428             1.52
26 mu_0       0.8      1.04       1.02    0.101             3.33
27 mu_0       0.9      1.14       0.933   0.00290          10.7 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.272    0.0000524  1.21e-17     20.1 
 2 mu         0.2      0.891    0.00550    6.33e-12     43.9 
 3 mu         0.3      1.51     0.0800     1.40e- 8     34.1 
 4 mu         0.4      1.73     0.296      3.32e- 6     45.2 
 5 mu         0.5      1.45     0.696      2.30e- 4     29.0 
 6 mu         0.6      1.18     1.09       7.36e- 3      8.93
 7 mu         0.7      1.21     1.04       3.88e- 2     11.4 
 8 mu         0.8      1.61     0.656      6.70e- 4     32.6 
 9 mu         0.9      2.45     0.0764     3.50e- 7     53.2 
10 mu_1       0.1      0.651    0.000329   1.21e-16     43.0 
11 mu_1       0.2      1.26     0.0184     3.17e-11     47.1 
12 mu_1       0.3      1.73     0.170      4.68e- 8     42.6 
13 mu_1       0.4      1.72     0.528      8.30e- 6     43.9 
14 mu_1       0.5      1.37     0.941      4.61e- 4     22.6 
15 mu_1       0.6      1.15     1.01       1.23e- 2      5.79
16 mu_1       0.7      1.25     1.01       1.19e- 2     13.8 
17 mu_1       0.8      1.69     0.510      1.80e- 4     34.6 
18 mu_1       0.9      2.54     0.0508     1.11e- 7     56.2 
19 mu_0       0.1      0.230    0.0000173  0            17.5 
20 mu_0       0.2      0.798    0.00235    0            43.1 
21 mu_0       0.3      1.42     0.0333     0            38.3 
22 mu_0       0.4      1.74     0.157      0            46.0 
23 mu_0       0.5      1.54     0.461      0            35.4 
24 mu_0       0.6      1.21     0.949      0            13.6 
25 mu_0       0.7      1.11     1.05       0             5.68
26 mu_0       0.8      1.30     0.902      0            24.4 
27 mu_0       0.9      1.66     0.212      0            45.2 
[1] "Total run time was 108.778 seconds"
