
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1278"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  7  6  9 10  5  2 10  2  4  8  9  6  5  8  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03723 0.36193 0.59921 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
735 543 
[1] "treatment indicator table: "

  0   1 
467 811 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 674
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.173 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.238 0.0943
 2 mu         0.1   0.2 0.290 0.109 
 3 mu         0.1   0.3 0.257 0.117 
 4 mu         0.1   0.4 0.261 0.136 
 5 mu         0.1   0.5 0.252 0.142 
 6 mu         0.2   0.1 0.271 0.0743
 7 mu         0.2   0.2 0.326 0.0846
 8 mu         0.2   0.3 0.306 0.0839
 9 mu         0.2   0.4 0.321 0.0977
10 mu         0.2   0.5 0.317 0.0991
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.486      0.0121  0.0000000412     15.8 
 2 mu         0.2      0.583      0.134   0.0000801        12.2 
 3 mu         0.3      0.738      0.495   0.00375           4.49
 4 mu         0.4      0.919      0.784   0.0377            2.80
 5 mu         0.5      1.02       0.957   0.137             2.45
 6 mu         0.6      1.03       0.999   0.344             2.37
 7 mu         0.7      1.02       0.991   0.275             2.69
 8 mu         0.8      0.992      0.924   0.0518            4.50
 9 mu         0.9      0.871      0.793   0.00166           4.58
10 mu_1       0.1      0.570      0.0519  0.000000251      19.8 
11 mu_1       0.2      0.653      0.286   0.000257          7.68
12 mu_1       0.3      0.844      0.678   0.00870           3.35
13 mu_1       0.4      0.997      0.923   0.0601            2.50
14 mu_1       0.5      1.05       0.992   0.182             2.48
15 mu_1       0.6      1.03       1.03    0.417             2.42
16 mu_1       0.7      1.01       0.970   0.209             3.03
17 mu_1       0.8      0.981      0.893   0.0361            4.70
18 mu_1       0.9      0.854      0.773   0.00107           4.74
19 mu_0       0.1      0.477      0.00771 0.0000000178     15.4 
20 mu_0       0.2      0.565      0.0912  0.0000308        13.3 
21 mu_0       0.3      0.693      0.396   0.00163           5.46
22 mu_0       0.4      0.867      0.685   0.0221            3.00
23 mu_0       0.5      0.991      0.900   0.0919            2.42
24 mu_0       0.6      1.03       0.991   0.236             2.30
25 mu_0       0.7      1.02       0.987   0.430             2.44
26 mu_0       0.8      1.03       1.03    0.114             3.70
27 mu_0       0.9      1.02       0.934   0.00692           5.97
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.19    0.000108   9.36e-15     48.8 
 2 mu         0.2       2.73    0.0100     2.18e- 9     81.8 
 3 mu         0.3       2.63    0.108      2.67e- 6     63.9 
 4 mu         0.4       1.91    0.408      1.78e- 4     24.1 
 5 mu         0.5       1.50    0.946      4.22e- 3      9.13
 6 mu         0.6       1.41    1.09       5.20e- 2      6.21
 7 mu         0.7       1.75    0.991      1.01e- 2     19.2 
 8 mu         0.8       3.29    0.749      4.48e- 5     83.0 
 9 mu         0.9       7.01    0.110      2.47e- 9    216.  
10 mu_1       0.1       2.40    0.000609   8.86e-14     75.0 
11 mu_1       0.2       3.12    0.0328     1.03e- 8     90.9 
12 mu_1       0.3       2.35    0.224      7.56e- 6     47.3 
13 mu_1       0.4       1.68    0.645      4.18e- 4     15.1 
14 mu_1       0.5       1.44    1.08       7.92e- 3      7.13
15 mu_1       0.6       1.44    1.05       6.02e- 2      8.13
16 mu_1       0.7       1.92    0.883      2.96e- 3     25.6 
17 mu_1       0.8       3.64    0.562      1.40e- 5     96.8 
18 mu_1       0.9       7.31    0.0674     6.85e-10    224.  
19 mu_0       0.1       1.06    0.0000415  0            45.9 
20 mu_0       0.2       2.63    0.00413    0            79.5 
21 mu_0       0.3       2.75    0.0506     0            71.0 
22 mu_0       0.4       2.06    0.256      0            30.2 
23 mu_0       0.5       1.57    0.704      0            13.7 
24 mu_0       0.6       1.35    1.04       0             5.50
25 mu_0       0.7       1.36    1.02       0            10.2 
26 mu_0       0.8       1.88    0.775      0            27.7 
27 mu_0       0.9       4.34    0.180      0           144.  
[1] "Total run time was 89.097 seconds"
