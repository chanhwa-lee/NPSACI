
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1320"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  5  4  7  3  9  6  9  6  8  7  6  3  9  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05564 0.41182 0.66804 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
831 489 
[1] "treatment indicator table: "

  0   1 
433 887 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 672
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 49.33 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.140 0.0821
 2 mu         0.1   0.2 0.177 0.0913
 3 mu         0.1   0.3 0.250 0.129 
 4 mu         0.1   0.4 0.268 0.137 
 5 mu         0.1   0.5 0.310 0.162 
 6 mu         0.2   0.1 0.241 0.0775
 7 mu         0.2   0.2 0.313 0.0831
 8 mu         0.2   0.3 0.391 0.108 
 9 mu         0.2   0.4 0.426 0.114 
10 mu         0.2   0.5 0.455 0.129 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.522       0.0374 0.000000124      17.5 
 2 mu         0.2      0.875       0.298  0.000209         14.8 
 3 mu         0.3      1.01        0.723  0.00932           6.93
 4 mu         0.4      1.06        0.985  0.0590            4.09
 5 mu         0.5      1.03        1.01   0.208             2.65
 6 mu         0.6      0.984       0.976  0.460             1.62
 7 mu         0.7      0.964       0.983  0.438             1.36
 8 mu         0.8      0.980       0.985  0.421             1.66
 9 mu         0.9      1.05        0.990  0.0659            4.26
10 mu_1       0.1      0.851       0.138  0.000000744      21.9 
11 mu_1       0.2      1.03        0.553  0.000633         12.0 
12 mu_1       0.3      1.09        0.926  0.0192            4.54
13 mu_1       0.4      1.07        0.995  0.0944            3.88
14 mu_1       0.5      1.02        1.03   0.282             2.19
15 mu_1       0.6      0.975       0.954  0.437             1.58
16 mu_1       0.7      0.961       0.962  0.383             1.38
17 mu_1       0.8      0.984       0.992  0.377             1.75
18 mu_1       0.9      1.05        0.975  0.0523            4.71
19 mu_0       0.1      0.485       0.0266 0.0000000546     17.0 
20 mu_0       0.2      0.836       0.219  0.000103         15.5 
21 mu_0       0.3      0.982       0.609  0.00509           7.96
22 mu_0       0.4      1.05        0.957  0.0354            4.23
23 mu_0       0.5      1.04        0.985  0.135             3.12
24 mu_0       0.6      0.997       0.997  0.356             1.86
25 mu_0       0.7      0.969       0.937  0.420             1.53
26 mu_0       0.8      0.961       0.956  0.271             1.43
27 mu_0       0.9      0.991       0.938  0.176             1.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.959   0.00000550  2.99e-15     27.4 
 2 mu         0.2      2.68    0.00127     4.82e-10     52.6 
 3 mu         0.3      2.81    0.0219      4.16e- 7     61.6 
 4 mu         0.4      1.86    0.156       4.74e- 5     30.0 
 5 mu         0.5      1.14    0.479       1.75e- 3      7.33
 6 mu         0.6      0.960   0.843       2.30e- 2      2.91
 7 mu         0.7      1.03    1.09        1.77e- 3      2.70
 8 mu         0.8      1.13    0.966       6.89e- 6      4.63
 9 mu         0.9      1.15    0.221       3.37e-10     12.1 
10 mu_1       0.1      2.16    0.0000421   2.69e-14     54.9 
11 mu_1       0.2      3.27    0.00441     2.28e- 9     69.2 
12 mu_1       0.3      2.52    0.0509      1.31e- 6     54.0 
13 mu_1       0.4      1.49    0.290       1.12e- 4     19.7 
14 mu_1       0.5      1.01    0.660       3.31e- 3      4.89
15 mu_1       0.6      0.956   0.892       2.51e- 2      2.70
16 mu_1       0.7      1.04    1.07        5.32e- 4      2.57
17 mu_1       0.8      1.14    0.836       1.81e- 6      5.41
18 mu_1       0.9      1.15    0.157       7.88e-11     12.5 
19 mu_0       0.1      0.826   0.00000159  0            24.4 
20 mu_0       0.2      2.53    0.000396    0            50.3 
21 mu_0       0.3      2.94    0.00868     0            64.8 
22 mu_0       0.4      2.11    0.0682      0            36.8 
23 mu_0       0.5      1.28    0.236       0            10.5 
24 mu_0       0.6      0.967   0.634       0             4.25
25 mu_0       0.7      0.993   0.978       0             3.00
26 mu_0       0.8      1.10    1.25        0             2.79
27 mu_0       0.9      1.15    0.434       0             8.03
[1] "Total run time was 52.827 seconds"
