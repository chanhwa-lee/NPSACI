
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1359"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  2  8  6  5  5  4  6 11  7  6  5  5  4 11 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02752 0.32545 0.60262 1.00000 4.24043 
[1] "event indicator table: "

  0   1 
794 565 
[1] "treatment indicator table: "

  0   1 
543 816 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 693
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 47.299 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.276 0.0774
 2 mu         0.1   0.2 0.271 0.0567
 3 mu         0.1   0.3 0.308 0.0683
 4 mu         0.1   0.4 0.302 0.0680
 5 mu         0.1   0.5 0.368 0.0911
 6 mu         0.2   0.1 0.331 0.0682
 7 mu         0.2   0.2 0.338 0.0561
 8 mu         0.2   0.3 0.401 0.0674
 9 mu         0.2   0.4 0.410 0.0691
10 mu         0.2   0.5 0.480 0.0870
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.584       0.0888 0.000000160       4.89
 2 mu         0.2      0.809       0.419  0.000274          8.49
 3 mu         0.3      0.856       0.751  0.0119            5.79
 4 mu         0.4      0.921       0.913  0.108             2.88
 5 mu         0.5      0.992       0.985  0.333             2.54
 6 mu         0.6      1.03        1.04   0.513             1.76
 7 mu         0.7      1.08        1.05   0.509             3.55
 8 mu         0.8      1.16        1.01   0.273             8.07
 9 mu         0.9      1.11        0.925  0.0368           12.7 
10 mu_1       0.1      0.797       0.236  0.000000966       8.72
11 mu_1       0.2      0.885       0.595  0.000831          8.49
12 mu_1       0.3      0.895       0.841  0.0248            3.88
13 mu_1       0.4      0.958       0.958  0.167             3.06
14 mu_1       0.5      1.01        1.02   0.377             2.28
15 mu_1       0.6      1.05        1.05   0.579             1.91
16 mu_1       0.7      1.10        1.05   0.483             4.34
17 mu_1       0.8      1.17        1.01   0.245             9.02
18 mu_1       0.9      1.09        0.883  0.0279           12.8 
19 mu_0       0.1      0.561       0.0620 0.0000000707      4.74
20 mu_0       0.2      0.790       0.314  0.000135          8.49
21 mu_0       0.3      0.839       0.660  0.00639           6.60
22 mu_0       0.4      0.897       0.895  0.0588            2.94
23 mu_0       0.5      0.973       0.957  0.227             2.80
24 mu_0       0.6      1.02        1.02   0.413             1.83
25 mu_0       0.7      1.05        1.04   0.526             1.71
26 mu_0       0.8      1.12        1.03   0.382             4.31
27 mu_0       0.9      1.26        1.03   0.103            11.9 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     191.       0.000398  1.72e-16  18833.  
 2 mu         0.2      46.6      0.0231    8.02e-11   4073.  
 3 mu         0.3      11.2      0.142     1.56e- 7    718.  
 4 mu         0.4       3.06     0.531     3.15e- 5     96.8 
 5 mu         0.5       1.41     0.851     1.38e- 3     19.9 
 6 mu         0.6       1.07     0.905     5.48e- 3      5.32
 7 mu         0.7       1.01     0.780     1.33e- 4      5.00
 8 mu         0.8       1.24     0.561     3.76e- 7     18.9 
 9 mu         0.9       2.24     0.0488    4.09e-12     88.7 
10 mu_1       0.1       5.37     0.00116   0           327.  
11 mu_1       0.2       5.96     0.0639    0           398.  
12 mu_1       0.3       3.25     0.312     0           159.  
13 mu_1       0.4       1.73     0.694     0            33.7 
14 mu_1       0.5       1.21     0.849     0            13.3 
15 mu_1       0.6       1.03     0.917     0             5.11
16 mu_1       0.7       1.00     0.831     0             4.76
17 mu_1       0.8       1.29     0.439     0            22.5 
18 mu_1       0.9       2.29     0.0320    0            93.7 
19 mu_0       0.1     212.       0.000164  0         20925.  
20 mu_0       0.2      56.8      0.00701   0          5091.  
21 mu_0       0.3      14.7      0.0801    0          1026.  
22 mu_0       0.4       3.95     0.379     0           161.  
23 mu_0       0.5       1.61     0.835     0            26.5 
24 mu_0       0.6       1.14     0.935     0             8.87
25 mu_0       0.7       1.03     0.834     0             5.55
26 mu_0       0.8       1.06     0.861     0             4.79
27 mu_0       0.9       1.72     0.193     0            44.4 
[1] "Total run time was 50.536 seconds"
