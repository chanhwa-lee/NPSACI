
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1208"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  7 10 11  8  4  8  7  6  6  3  4  7  5  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05744 0.40293 0.66120 1.00000 5.59546 
[1] "event indicator table: "

  0   1 
744 464 
[1] "treatment indicator table: "

  0   1 
389 819 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.361 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.315 0.104 
 2 mu         0.1   0.2 0.468 0.147 
 3 mu         0.1   0.3 0.483 0.146 
 4 mu         0.1   0.4 0.533 0.151 
 5 mu         0.1   0.5 0.553 0.157 
 6 mu         0.2   0.1 0.300 0.0707
 7 mu         0.2   0.2 0.465 0.0964
 8 mu         0.2   0.3 0.505 0.0979
 9 mu         0.2   0.4 0.584 0.120 
10 mu         0.2   0.5 0.593 0.118 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.770      0.0121  0.0000000914     15.4 
 2 mu         0.2      0.920      0.134   0.000153          8.69
 3 mu         0.3      1.01       0.519   0.00744           7.90
 4 mu         0.4      1.06       0.822   0.0785            4.44
 5 mu         0.5      1.07       0.992   0.233             2.75
 6 mu         0.6      1.03       0.985   0.259             2.05
 7 mu         0.7      0.976      0.936   0.277             2.05
 8 mu         0.8      0.921      0.909   0.252             2.45
 9 mu         0.9      0.901      0.770   0.0176            8.70
10 mu_1       0.1      0.887      0.0471  0.000000550      12.2 
11 mu_1       0.2      0.985      0.275   0.000464         10.1 
12 mu_1       0.3      1.02       0.680   0.0152            6.27
13 mu_1       0.4      1.05       0.918   0.122             4.14
14 mu_1       0.5      1.05       0.993   0.285             2.37
15 mu_1       0.6      1.01       0.992   0.218             1.95
16 mu_1       0.7      0.964      0.931   0.319             2.08
17 mu_1       0.8      0.914      0.889   0.215             2.92
18 mu_1       0.9      0.902      0.735   0.0133            9.64
19 mu_0       0.1      0.757      0.00773 0.0000000404     17.1 
20 mu_0       0.2      0.904      0.0903  0.0000758         8.34
21 mu_0       0.3      0.999      0.409   0.00413           8.60
22 mu_0       0.4      1.06       0.785   0.0496            5.43
23 mu_0       0.5      1.08       0.931   0.152             3.31
24 mu_0       0.6      1.05       1.01    0.279             2.27
25 mu_0       0.7      1.00       0.994   0.179             1.98
26 mu_0       0.8      0.949      0.923   0.259             2.19
27 mu_0       0.9      0.892      0.799   0.0566            2.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.677    0.0000531  2.74e-16     34.4 
 2 mu         0.2      1.73     0.00473    6.40e-11     73.8 
 3 mu         0.3      2.74     0.0533     8.27e- 8    148.  
 4 mu         0.4      2.55     0.236      1.26e- 5    112.  
 5 mu         0.5      1.85     0.593      5.82e- 4     40.0 
 6 mu         0.6      1.40     0.888      1.24e- 2     16.8 
 7 mu         0.7      1.44     1.05       4.26e- 2      6.80
 8 mu         0.8      2.15     1.06       1.10e- 3     18.1 
 9 mu         0.9      3.45     0.421      6.81e- 7     94.0 
10 mu_1       0.1      1.29     0.000379   2.60e-15     43.0 
11 mu_1       0.2      2.37     0.0174     3.03e-10    116.  
12 mu_1       0.3      2.87     0.133      2.61e- 7    156.  
13 mu_1       0.4      2.29     0.453      2.98e- 5     88.5 
14 mu_1       0.5      1.63     0.777      1.10e- 3     25.3 
15 mu_1       0.6      1.34     0.926      1.96e- 2     14.0 
16 mu_1       0.7      1.53     0.970      1.97e- 2      7.29
17 mu_1       0.8      2.32     1.08       4.84e- 4     22.6 
18 mu_1       0.9      3.57     0.328      2.52e- 7    104.  
19 mu_0       0.1      0.608    0.0000164  0            33.4 
20 mu_0       0.2      1.57     0.00151    0            63.1 
21 mu_0       0.3      2.69     0.0172     0           145.  
22 mu_0       0.4      2.73     0.0917     0           128.  
23 mu_0       0.5      2.06     0.292      0            54.7 
24 mu_0       0.6      1.49     0.751      0            21.0 
25 mu_0       0.7      1.23     0.844      0             7.38
26 mu_0       0.8      1.48     0.871      0             8.38
27 mu_0       0.9      2.36     0.384      0            23.0 
[1] "Total run time was 70.627 seconds"
