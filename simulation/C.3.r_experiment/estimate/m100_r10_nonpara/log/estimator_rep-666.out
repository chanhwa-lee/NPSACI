
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  6  8  8  5  8  4  6  8  7  1  5 11  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02052 0.34432 0.58996 0.98737 4.27670 
[1] "event indicator table: "

  0   1 
750 519 
[1] "treatment indicator table: "

  0   1 
423 846 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.17 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.520 0.166 
 2 mu         0.1   0.2 0.593 0.190 
 3 mu         0.1   0.3 0.600 0.204 
 4 mu         0.1   0.4 0.601 0.213 
 5 mu         0.1   0.5 0.658 0.231 
 6 mu         0.2   0.1 0.431 0.0862
 7 mu         0.2   0.2 0.504 0.102 
 8 mu         0.2   0.3 0.523 0.0980
 9 mu         0.2   0.4 0.531 0.103 
10 mu         0.2   0.5 0.571 0.0996
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.12        0.0699 0.00000192      23.0 
 2 mu         0.2      1.05        0.427  0.000880         7.34
 3 mu         0.3      1.05        0.853  0.0209           3.52
 4 mu         0.4      1.04        0.938  0.139            2.61
 5 mu         0.5      1.02        0.972  0.389            2.14
 6 mu         0.6      1.01        1.01   0.518            2.13
 7 mu         0.7      1.01        1.01   0.520            1.76
 8 mu         0.8      0.972       0.957  0.155            1.94
 9 mu         0.9      0.923       0.876  0.00819          2.72
10 mu_1       0.1      1.26        0.218  0.0000113       13.2 
11 mu_1       0.2      1.09        0.764  0.00260          4.76
12 mu_1       0.3      1.08        0.993  0.0415           3.45
13 mu_1       0.4      1.04        0.974  0.212            2.51
14 mu_1       0.5      1.02        0.987  0.460            2.11
15 mu_1       0.6      1.02        0.980  0.552            2.10
16 mu_1       0.7      1.00        1.03   0.455            1.72
17 mu_1       0.8      0.966       0.951  0.128            1.99
18 mu_1       0.9      0.916       0.855  0.00621          2.83
19 mu_0       0.1      1.11        0.0523 0.000000879     24.1 
20 mu_0       0.2      1.04        0.339  0.000450         8.23
21 mu_0       0.3      1.04        0.800  0.0120           3.58
22 mu_0       0.4      1.04        0.946  0.0910           2.85
23 mu_0       0.5      1.02        0.972  0.317            2.32
24 mu_0       0.6      1.01        1.00   0.467            2.17
25 mu_0       0.7      1.01        0.982  0.599            1.96
26 mu_0       0.8      0.997       1.01   0.264            1.94
27 mu_0       0.9      0.988       0.943  0.0260           2.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.526   0.0000134   4.48e-19     19.1 
 2 mu         0.2      1.11    0.00425     4.70e-13     52.2 
 3 mu         0.3      1.12    0.0738      1.56e- 9     35.7 
 4 mu         0.4      1.04    0.370       4.93e- 7     11.2 
 5 mu         0.5      1.07    0.901       4.27e- 5      3.93
 6 mu         0.6      1.09    0.908       1.64e- 3      3.77
 7 mu         0.7      1.04    0.998       3.19e- 3      3.01
 8 mu         0.8      1.04    0.797       1.24e- 5      3.27
 9 mu         0.9      1.10    0.190       6.08e-10      9.68
10 mu_1       0.1      1.04    0.0000873   4.48e-18     40.2 
11 mu_1       0.2      1.28    0.0117      2.35e-12     54.9 
12 mu_1       0.3      1.11    0.150       5.21e- 9     25.0 
13 mu_1       0.4      1.05    0.582       1.23e- 6      5.87
14 mu_1       0.5      1.09    0.969       8.55e- 5      3.98
15 mu_1       0.6      1.08    0.977       2.73e- 3      3.59
16 mu_1       0.7      1.03    1.02        9.61e- 4      2.97
17 mu_1       0.8      1.04    0.660       3.27e- 6      3.41
18 mu_1       0.9      1.10    0.134       1.42e-10     10.8 
19 mu_0       0.1      0.469   0.00000401  0            16.7 
20 mu_0       0.2      1.06    0.00164     0            51.5 
21 mu_0       0.3      1.13    0.0367      0            40.2 
22 mu_0       0.4      1.03    0.205       0            14.7 
23 mu_0       0.5      1.05    0.660       0             4.57
24 mu_0       0.6      1.10    0.939       0             4.06
25 mu_0       0.7      1.07    0.979       0             3.29
26 mu_0       0.8      1.03    1.07        0             3.04
27 mu_0       0.9      1.08    0.462       0             5.35
[1] "Total run time was 64.969 seconds"
