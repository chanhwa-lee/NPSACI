
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1310"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  5  4  8  8  2 12  3  8 10  5  8  3  7  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03016 0.34050 0.64337 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
769 541 
[1] "treatment indicator table: "

  0   1 
443 867 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 79.776 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.553 0.395
 2 mu         0.1   0.2 0.631 0.461
 3 mu         0.1   0.3 0.751 0.539
 4 mu         0.1   0.4 0.983 0.623
 5 mu         0.1   0.5 1.00  0.659
 6 mu         0.2   0.1 0.549 0.322
 7 mu         0.2   0.2 0.652 0.377
 8 mu         0.2   0.3 0.738 0.436
 9 mu         0.2   0.4 0.908 0.488
10 mu         0.2   0.5 0.931 0.517
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.28       0.00312 0.0000000938     96.1 
 2 mu         0.2      1.49       0.0797  0.0000695        73.9 
 3 mu         0.3      1.40       0.307   0.00232          51.0 
 4 mu         0.4      1.17       0.633   0.0223           33.2 
 5 mu         0.5      0.999      0.899   0.104            10.2 
 6 mu         0.6      0.973      0.975   0.295             1.97
 7 mu         0.7      1.01       0.978   0.533             1.92
 8 mu         0.8      1.07       1.01    0.293             4.64
 9 mu         0.9      1.05       0.703   0.0374           14.8 
10 mu_1       0.1      1.62       0.0144  0.000000575     120.  
11 mu_1       0.2      1.44       0.180   0.000236         46.2 
12 mu_1       0.3      1.32       0.478   0.00530          51.0 
13 mu_1       0.4      1.09       0.760   0.0388           25.0 
14 mu_1       0.5      0.979      0.922   0.148             6.39
15 mu_1       0.6      0.978      0.982   0.362             1.61
16 mu_1       0.7      1.02       0.989   0.508             2.18
17 mu_1       0.8      1.07       1.02    0.261             5.05
18 mu_1       0.9      1.05       0.654   0.0302           16.3 
19 mu_0       0.1      1.25       0.00189 0.0000000403     93.4 
20 mu_0       0.2      1.50       0.0481  0.0000280        80.8 
21 mu_0       0.3      1.44       0.227   0.00104          50.9 
22 mu_0       0.4      1.22       0.515   0.0113           38.7 
23 mu_0       0.5      1.02       0.833   0.0602           14.1 
24 mu_0       0.6      0.966      0.929   0.196             2.88
25 mu_0       0.7      0.989      0.982   0.434             1.57
26 mu_0       0.8      1.04       1.02    0.424             3.03
27 mu_0       0.9      1.09       0.948   0.102             7.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.561   0.0000141   4.67e-15     33.6 
 2 mu         0.2      1.62    0.00336     5.44e-10     74.1 
 3 mu         0.3      2.50    0.0383      4.69e- 7     98.7 
 4 mu         0.4      2.43    0.210       5.34e- 5     77.4 
 5 mu         0.5      1.81    0.663       1.98e- 3     45.8 
 6 mu         0.6      1.30    1.02        3.51e- 2     15.3 
 7 mu         0.7      1.13    0.994       9.90e- 2      3.52
 8 mu         0.8      1.22    0.674       3.81e- 3     10.9 
 9 mu         0.9      1.52    0.0881      5.36e- 6     31.8 
10 mu_1       0.1      1.13    0.0000853   4.41e-14     43.0 
11 mu_1       0.2      2.33    0.0110      2.57e- 9    106.  
12 mu_1       0.3      2.73    0.0885      1.48e- 6     94.0 
13 mu_1       0.4      2.22    0.363       1.26e- 4     69.1 
14 mu_1       0.5      1.56    0.853       3.74e- 3     32.7 
15 mu_1       0.6      1.19    1.08        5.53e- 2      9.10
16 mu_1       0.7      1.11    0.981       1.92e- 2      4.70
17 mu_1       0.8      1.25    0.540       1.12e- 3     13.7 
18 mu_1       0.9      1.55    0.0612      2.68e- 6     35.1 
19 mu_0       0.1      0.498   0.00000353  0            32.6 
20 mu_0       0.2      1.44    0.00115     0            66.2 
21 mu_0       0.3      2.40    0.0162      0           101.  
22 mu_0       0.4      2.57    0.120       0            82.9 
23 mu_0       0.5      2.06    0.403       0            58.8 
24 mu_0       0.6      1.48    0.909       0            24.6 
25 mu_0       0.7      1.17    1.13        0             5.87
26 mu_0       0.8      1.10    0.945       0             4.50
27 mu_0       0.9      1.28    0.263       0            18.7 
[1] "Total run time was 84.396 seconds"
