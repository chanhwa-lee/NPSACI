
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1213"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9 10  6  4  3  7  7  5  7  6  7  6  6  5  8  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04263 0.39419 0.62689 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
745 468 
[1] "treatment indicator table: "

  0   1 
381 832 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 71.286 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.395 0.0983
 2 mu         0.1   0.2 0.420 0.114 
 3 mu         0.1   0.3 0.551 0.164 
 4 mu         0.1   0.4 0.583 0.174 
 5 mu         0.1   0.5 0.662 0.162 
 6 mu         0.2   0.1 0.371 0.0664
 7 mu         0.2   0.2 0.415 0.0723
 8 mu         0.2   0.3 0.513 0.0922
 9 mu         0.2   0.4 0.555 0.0959
10 mu         0.2   0.5 0.605 0.0890
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.08        0.106  0.0000000135      14.7 
 2 mu         0.2      1.07        0.395  0.0000320          8.13
 3 mu         0.3      1.02        0.816  0.00226            3.89
 4 mu         0.4      1.02        0.924  0.0356             2.78
 5 mu         0.5      1.02        1.02   0.233              2.19
 6 mu         0.6      1.00        0.996  0.482              1.52
 7 mu         0.7      0.997       1.01   0.397              1.58
 8 mu         0.8      1.01        1.00   0.246              1.74
 9 mu         0.9      1.02        1.04   0.148              2.22
10 mu_1       0.1      1.05        0.284  0.0000000953      14.9 
11 mu_1       0.2      0.993       0.648  0.000114           5.09
12 mu_1       0.3      0.989       0.945  0.00537            3.31
13 mu_1       0.4      1.01        0.938  0.0640             2.58
14 mu_1       0.5      1.01        0.983  0.277              1.98
15 mu_1       0.6      1.00        0.990  0.558              1.53
16 mu_1       0.7      1.00        1.02   0.333              1.68
17 mu_1       0.8      1.01        1.00   0.256              1.81
18 mu_1       0.9      1.02        1.04   0.127              2.33
19 mu_0       0.1      1.09        0.0741 0.00000000437     15.3 
20 mu_0       0.2      1.09        0.305  0.0000116          9.03
21 mu_0       0.3      1.04        0.692  0.000921           4.14
22 mu_0       0.4      1.02        0.870  0.0167             2.91
23 mu_0       0.5      1.03        0.993  0.128              2.39
24 mu_0       0.6      1.01        1.02   0.365              1.68
25 mu_0       0.7      0.989       0.997  0.483              1.46
26 mu_0       0.8      0.997       1.03   0.209              1.92
27 mu_0       0.9      1.01        1.01   0.271              2.21
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.271   0.0000455   8.33e-19      9.99
 2 mu         0.2      0.645   0.00518     8.74e-13     17.4 
 3 mu         0.3      0.935   0.0445      2.90e- 9     13.5 
 4 mu         0.4      1.12    0.211       9.16e- 7      7.29
 5 mu         0.5      1.16    0.612       7.95e- 5      6.84
 6 mu         0.6      1.10    1.03        3.05e- 3      3.51
 7 mu         0.7      1.04    0.948       1.53e- 2      2.78
 8 mu         0.8      1.08    1.12        2.65e- 4      3.23
 9 mu         0.9      1.19    0.318       1.84e- 7     10.1 
10 mu_1       0.1      0.632   0.000376    8.33e-18     17.0 
11 mu_1       0.2      0.902   0.0167      4.37e-12     18.6 
12 mu_1       0.3      1.07    0.117       9.68e- 9     10.3 
13 mu_1       0.4      1.16    0.376       2.29e- 6      7.90
14 mu_1       0.5      1.14    0.798       1.59e- 4      6.08
15 mu_1       0.6      1.07    0.976       5.08e- 3      3.44
16 mu_1       0.7      1.04    1.08        4.70e- 3      2.81
17 mu_1       0.8      1.09    1.06        7.09e- 5      3.29
18 mu_1       0.9      1.20    0.212       4.38e- 8     11.3 
19 mu_0       0.1      0.230   0.00000852  0             9.25
20 mu_0       0.2      0.580   0.00124     0            17.0 
21 mu_0       0.3      0.878   0.0170      0            15.1 
22 mu_0       0.4      1.10    0.0836      0             8.67
23 mu_0       0.5      1.18    0.341       0             7.60
24 mu_0       0.6      1.14    0.810       0             4.39
25 mu_0       0.7      1.04    0.939       0             3.07
26 mu_0       0.8      1.00    0.977       0             3.46
27 mu_0       0.9      1.16    0.417       0             5.19
[1] "Total run time was 75.015 seconds"
