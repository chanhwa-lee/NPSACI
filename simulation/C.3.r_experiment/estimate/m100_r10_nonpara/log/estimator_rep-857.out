
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1183"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  9  7  8  4  8  6  2  8  7  5  5  6  5  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03757 0.29772 0.56014 1.00000 4.28397 
[1] "event indicator table: "

  0   1 
687 496 
[1] "treatment indicator table: "

  0   1 
433 750 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 590
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 48.876 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 1.37  0.840
 2 mu         0.1   0.2 1.81  1.14 
 3 mu         0.1   0.3 1.91  1.23 
 4 mu         0.1   0.4 2.13  1.34 
 5 mu         0.1   0.5 2.27  1.47 
 6 mu         0.2   0.1 0.737 0.317
 7 mu         0.2   0.2 0.971 0.418
 8 mu         0.2   0.3 1.02  0.455
 9 mu         0.2   0.4 1.17  0.497
10 mu         0.2   0.5 1.21  0.525
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      3.63       0.0127  0.0000000266    234.  
 2 mu         0.2      1.86       0.169   0.0000535        64.3 
 3 mu         0.3      1.19       0.499   0.00316          26.1 
 4 mu         0.4      0.970      0.812   0.0416            8.93
 5 mu         0.5      0.962      0.950   0.152             2.51
 6 mu         0.6      1.00       0.956   0.373             2.36
 7 mu         0.7      0.999      0.988   0.187             2.25
 8 mu         0.8      1.01       0.965   0.0399            5.22
 9 mu         0.9      1.41       0.740   0.00185          47.4 
10 mu_1       0.1      1.36       0.0594  0.000000169      82.8 
11 mu_1       0.2      1.02       0.350   0.000172         28.8 
12 mu_1       0.3      0.910      0.710   0.00686           8.92
13 mu_1       0.4      0.909      0.907   0.0689            3.43
14 mu_1       0.5      0.970      0.980   0.250             2.13
15 mu_1       0.6      1.01       0.956   0.342             2.42
16 mu_1       0.7      1.00       0.987   0.129             2.82
17 mu_1       0.8      1.03       0.944   0.0249            6.30
18 mu_1       0.9      1.47       0.718   0.00107          52.6 
19 mu_0       0.1      3.88       0.00795 0.0000000107    260.  
20 mu_0       0.2      2.07       0.127   0.0000239        80.3 
21 mu_0       0.3      1.31       0.395   0.00158          33.4 
22 mu_0       0.4      1.01       0.707   0.0154           13.2 
23 mu_0       0.5      0.954      0.925   0.0553            4.12
24 mu_0       0.6      0.985      0.977   0.155             2.27
25 mu_0       0.7      0.987      0.950   0.322             2.26
26 mu_0       0.8      0.943      0.922   0.0997            2.11
27 mu_0       0.9      0.878      0.885   0.00756           3.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      20.6     0.0000926  5.96e-14   1560.  
 2 mu         0.2      12.3     0.00718    5.48e- 9    675.  
 3 mu         0.3       5.08    0.0863     3.62e- 6    178.  
 4 mu         0.4       2.00    0.328      3.03e- 4     32.1 
 5 mu         0.5       1.32    0.740      7.79e- 3      9.31
 6 mu         0.6       1.88    1.04       2.19e- 2     33.4 
 7 mu         0.7       3.75    0.989      1.44e- 3     98.2 
 8 mu         0.8       7.85    0.810      2.85e- 5    255.  
 9 mu         0.9      14.1     0.123      5.52e- 9    570.  
10 mu_1       0.1      18.6     0.000664   5.06e-13   1114.  
11 mu_1       0.2       6.96    0.0235     2.33e- 8    241.  
12 mu_1       0.3       2.58    0.189      1.03e- 5     42.5 
13 mu_1       0.4       1.32    0.516      6.44e- 4     11.5 
14 mu_1       0.5       1.42    0.820      1.32e- 2     18.6 
15 mu_1       0.6       2.42    1.05       3.32e- 3     55.6 
16 mu_1       0.7       4.75    1.04       1.87e- 4    140.  
17 mu_1       0.8       9.16    0.686      3.24e- 6    313.  
18 mu_1       0.9      14.9     0.0985     4.38e-10    634.  
19 mu_0       0.1      20.8     0.0000196  0          1609.  
20 mu_0       0.2      13.6     0.00255    0           783.  
21 mu_0       0.3       6.15    0.0257     0           237.  
22 mu_0       0.4       2.45    0.114      0            49.6 
23 mu_0       0.5       1.23    0.412      0            10.9 
24 mu_0       0.6       1.06    0.855      0             5.37
25 mu_0       0.7       1.42    1.06       0            24.4 
26 mu_0       0.8       2.63    1.00       0           106.  
27 mu_0       0.9       6.21    0.297      0           387.  
[1] "Total run time was 52.096 seconds"
