
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  8  5  4  5  9  6  4  6  8  9 10  3  8  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05392 0.35472 0.62540 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
723 518 
[1] "treatment indicator table: "

  0   1 
462 779 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 114.752 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.445 0.123 
 2 mu         0.1   0.2 0.515 0.141 
 3 mu         0.1   0.3 0.556 0.148 
 4 mu         0.1   0.4 0.621 0.171 
 5 mu         0.1   0.5 0.663 0.185 
 6 mu         0.2   0.1 0.400 0.0619
 7 mu         0.2   0.2 0.474 0.0648
 8 mu         0.2   0.3 0.501 0.0646
 9 mu         0.2   0.4 0.554 0.0779
10 mu         0.2   0.5 0.595 0.0848
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06        0.104  0.0000625     25.9 
 2 mu         0.2      0.971       0.510  0.00976        7.23
 3 mu         0.3      0.942       0.824  0.0776         3.80
 4 mu         0.4      0.943       0.934  0.254          2.24
 5 mu         0.5      0.969       0.975  0.462          1.65
 6 mu         0.6      1.00        1.00   0.572          1.59
 7 mu         0.7      1.04        1.01   0.538          1.74
 8 mu         0.8      1.07        1.02   0.277          1.94
 9 mu         0.9      1.04        0.921  0.0536         2.81
10 mu_1       0.1      0.996       0.320  0.000332      13.9 
11 mu_1       0.2      0.983       0.816  0.0264         4.63
12 mu_1       0.3      0.952       0.959  0.142          3.20
13 mu_1       0.4      0.955       0.958  0.361          1.90
14 mu_1       0.5      0.977       0.971  0.497          1.59
15 mu_1       0.6      1.01        0.985  0.574          1.55
16 mu_1       0.7      1.04        1.04   0.430          1.80
17 mu_1       0.8      1.08        1.01   0.181          2.06
18 mu_1       0.9      1.04        0.914  0.0420         2.84
19 mu_0       0.1      1.06        0.0804 0.0000326     28.7 
20 mu_0       0.2      0.968       0.426  0.00560        8.05
21 mu_0       0.3      0.938       0.801  0.0501         4.06
22 mu_0       0.4      0.936       0.891  0.184          2.69
23 mu_0       0.5      0.961       0.972  0.407          1.82
24 mu_0       0.6      0.995       0.976  0.546          1.66
25 mu_0       0.7      1.03        1.01   0.534          1.62
26 mu_0       0.8      1.06        1.04   0.398          1.94
27 mu_0       0.9      1.08        1.04   0.146          2.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.965    0.000199   6.84e-16     50.8 
 2 mu         0.2      1.26     0.0102     8.97e-11     39.6 
 3 mu         0.3      1.19     0.126      8.84e- 8     20.4 
 4 mu         0.4      1.06     0.497      1.18e- 5      7.93
 5 mu         0.5      0.993    1.02       5.22e- 4      2.76
 6 mu         0.6      0.988    1.07       1.16e- 2      2.65
 7 mu         0.7      0.981    1.01       2.05e- 3      2.90
 8 mu         0.8      1.00     0.564      2.06e- 5      4.08
 9 mu         0.9      1.26     0.0805     6.38e- 9     13.2 
10 mu_1       0.1      1.44     0.00116    6.84e-15     56.4 
11 mu_1       0.2      1.28     0.0307     4.48e-10     22.0 
12 mu_1       0.3      1.13     0.250      2.95e- 7      8.11
13 mu_1       0.4      1.02     0.767      2.94e- 5      4.21
14 mu_1       0.5      0.978    1.01       1.04e- 3      2.46
15 mu_1       0.6      0.976    1.04       1.13e- 2      2.56
16 mu_1       0.7      0.964    0.910      4.18e- 4      3.14
17 mu_1       0.8      1.01     0.415      3.69e- 6      5.10
18 mu_1       0.9      1.28     0.0604     1.01e- 9     14.7 
19 mu_0       0.1      0.912    0.0000458  0            50.2 
20 mu_0       0.2      1.26     0.00485    0            44.0 
21 mu_0       0.3      1.22     0.0705     0            25.9 
22 mu_0       0.4      1.09     0.289      0            11.7 
23 mu_0       0.5      1.01     0.830      0             4.10
24 mu_0       0.6      1.01     1.12       0             2.79
25 mu_0       0.7      1.02     1.02       0             2.84
26 mu_0       0.8      0.990    0.964      0             3.79
27 mu_0       0.9      1.04     0.275      0             6.69
[1] "Total run time was 120.46 seconds"
