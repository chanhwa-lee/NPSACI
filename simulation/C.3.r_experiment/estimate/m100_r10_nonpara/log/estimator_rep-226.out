
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1207"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  6  8  9  9  6  4  8  7  8  4  3  8  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03638 0.36657 0.62109 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
713 494 
[1] "treatment indicator table: "

  0   1 
477 730 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 577
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.037 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.275 0.0814
 2 mu         0.1   0.2 0.345 0.0883
 3 mu         0.1   0.3 0.370 0.0965
 4 mu         0.1   0.4 0.360 0.0977
 5 mu         0.1   0.5 0.386 0.117 
 6 mu         0.2   0.1 0.242 0.0501
 7 mu         0.2   0.2 0.340 0.0672
 8 mu         0.2   0.3 0.378 0.0727
 9 mu         0.2   0.4 0.380 0.0693
10 mu         0.2   0.5 0.417 0.0795
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.724       0.0257 0.000000722     13.2 
 2 mu         0.2      0.754       0.260  0.000377         7.88
 3 mu         0.3      0.813       0.604  0.0103           7.24
 4 mu         0.4      0.925       0.797  0.0791          11.8 
 5 mu         0.5      0.995       0.922  0.274            9.63
 6 mu         0.6      1.01        0.973  0.547            4.44
 7 mu         0.7      1.01        0.976  0.208            2.16
 8 mu         0.8      0.991       0.937  0.0324           2.93
 9 mu         0.9      0.907       0.646  0.000753         7.71
10 mu_1       0.1      0.830       0.109  0.00000452      13.6 
11 mu_1       0.2      0.777       0.489  0.00119          6.38
12 mu_1       0.3      0.872       0.737  0.0219           9.97
13 mu_1       0.4      0.977       0.868  0.130           12.3 
14 mu_1       0.5      1.02        0.945  0.353            8.19
15 mu_1       0.6      1.02        0.982  0.511            3.39
16 mu_1       0.7      1.01        0.971  0.162            2.35
17 mu_1       0.8      0.987       0.930  0.0240           3.33
18 mu_1       0.9      0.899       0.599  0.000521         8.02
19 mu_0       0.1      0.712       0.0177 0.000000300     13.2 
20 mu_0       0.2      0.748       0.189  0.000175         8.52
21 mu_0       0.3      0.788       0.516  0.00539          6.07
22 mu_0       0.4      0.891       0.737  0.0447          11.5 
23 mu_0       0.5      0.972       0.874  0.156           11.1 
24 mu_0       0.6      0.999       0.963  0.396            6.01
25 mu_0       0.7      1.00        0.984  0.315            2.13
26 mu_0       0.8      1.00        0.971  0.0660           2.81
27 mu_0       0.9      0.978       0.912  0.00285          4.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      32.6      0.000261  2.65e-16    2982. 
 2 mu         0.2     113.       0.0150    1.23e-10   10320. 
 3 mu         0.3     106.       0.132     2.39e- 7    9208. 
 4 mu         0.4      50.1      0.388     4.85e- 5    3923. 
 5 mu         0.5      14.1      0.784     2.36e- 3     895. 
 6 mu         0.6       2.94     1.00      3.63e- 2     102. 
 7 mu         0.7       2.14     1.03      6.01e- 3      68.9
 8 mu         0.8       8.58     0.433     5.27e- 5     581. 
 9 mu         0.9      33.0      0.0551    1.03e- 8    2721. 
10 mu_1       0.1      76.4      0.00163   2.52e-15    7017. 
11 mu_1       0.2     135.       0.0449    5.86e-10   12141. 
12 mu_1       0.3      86.1      0.273     7.58e- 7    7222. 
13 mu_1       0.4      31.8      0.584     1.15e- 4    2308. 
14 mu_1       0.5       7.83     0.875     4.71e- 3     421. 
15 mu_1       0.6       1.96     1.02      1.20e- 2      40.0
16 mu_1       0.7       2.50     0.884     9.02e- 4      93.5
17 mu_1       0.8      10.0      0.312     1.55e- 5     689. 
18 mu_1       0.9      34.8      0.0369    2.69e- 9    2872. 
19 mu_0       0.1      27.7      0.000122  0           2534. 
20 mu_0       0.2     107.       0.00740   0           9865. 
21 mu_0       0.3     114.       0.0852    0          10059. 
22 mu_0       0.4      62.4      0.282     0           5000. 
23 mu_0       0.5      20.4      0.626     0           1369. 
24 mu_0       0.6       4.40     0.717     0            195. 
25 mu_0       0.7       1.30     0.844     0             11.5
26 mu_0       0.8       2.84     0.661     0            145. 
27 mu_0       0.9      17.0      0.108     0           1360. 
[1] "Total run time was 49.101 seconds"
