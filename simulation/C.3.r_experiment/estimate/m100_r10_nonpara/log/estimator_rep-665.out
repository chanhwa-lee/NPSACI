
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1254"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  7  4  9  6  5  7  8 11  7  7  2  5  2 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01701 0.30031 0.59610 0.99291 5.00000 
[1] "event indicator table: "

  0   1 
739 515 
[1] "treatment indicator table: "

  0   1 
478 776 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.891 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.558 0.124 
 2 mu         0.1   0.2 0.628 0.139 
 3 mu         0.1   0.3 0.625 0.126 
 4 mu         0.1   0.4 0.641 0.120 
 5 mu         0.1   0.5 0.657 0.114 
 6 mu         0.2   0.1 0.448 0.105 
 7 mu         0.2   0.2 0.506 0.121 
 8 mu         0.2   0.3 0.506 0.103 
 9 mu         0.2   0.4 0.522 0.0960
10 mu         0.2   0.5 0.546 0.0877
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.825       0.0792 0.0000000645      5.36
 2 mu         0.2      0.753       0.358  0.0000738         5.19
 3 mu         0.3      0.762       0.640  0.00334           3.21
 4 mu         0.4      0.840       0.768  0.0382            3.17
 5 mu         0.5      0.927       0.932  0.196             2.41
 6 mu         0.6      0.982       0.978  0.533             1.52
 7 mu         0.7      1.01        1.00   0.372             1.44
 8 mu         0.8      1.01        1.02   0.295             2.19
 9 mu         0.9      0.891       0.869  0.0218            3.40
10 mu_1       0.1      0.778       0.186  0.000000443       6.98
11 mu_1       0.2      0.758       0.618  0.000254          4.39
12 mu_1       0.3      0.794       0.709  0.00770           3.61
13 mu_1       0.4      0.880       0.848  0.0665            2.87
14 mu_1       0.5      0.953       0.965  0.277             1.89
15 mu_1       0.6      0.994       0.999  0.502             1.53
16 mu_1       0.7      1.02        1.01   0.379             1.50
17 mu_1       0.8      0.998       1.00   0.240             2.36
18 mu_1       0.9      0.878       0.865  0.0164            3.44
19 mu_0       0.1      0.830       0.0557 0.0000000224      5.96
20 mu_0       0.2      0.752       0.290  0.0000287         5.40
21 mu_0       0.3      0.748       0.563  0.00147           3.75
22 mu_0       0.4      0.813       0.755  0.0193            3.38
23 mu_0       0.5      0.901       0.889  0.114             2.94
24 mu_0       0.6      0.963       0.968  0.392             2.03
25 mu_0       0.7      1.00        0.997  0.357             1.54
26 mu_0       0.8      1.04        1.02   0.479             1.84
27 mu_0       0.9      1.01        0.948  0.0699            3.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     228.      0.0000536  9.59e-14  13575.  
 2 mu         0.2     105.      0.00752    8.81e- 9   5872.  
 3 mu         0.3      26.3     0.0716     4.43e- 6   1552.  
 4 mu         0.4       5.12    0.304      3.25e- 4    279.  
 5 mu         0.5       1.50    0.685      7.41e- 3     32.6 
 6 mu         0.6       1.13    0.951      1.62e- 2      3.95
 7 mu         0.7       1.17    1.19       1.25e- 4      4.77
 8 mu         0.8       1.27    1.11       1.10e- 7     15.3 
 9 mu         0.9       1.61    0.212      5.31e-13     55.9 
10 mu_1       0.1     190.      0.000309   8.15e-13   9696.  
11 mu_1       0.2      45.2     0.0212     3.75e- 8   2097.  
12 mu_1       0.3       8.28    0.166      1.31e- 5    370.  
13 mu_1       0.4       1.93    0.559      7.21e- 4     49.8 
14 mu_1       0.5       1.14    0.884      1.38e- 2      7.28
15 mu_1       0.6       1.12    1.07       2.70e- 3      3.62
16 mu_1       0.7       1.19    1.24       1.78e- 5      5.03
17 mu_1       0.8       1.30    0.984      1.38e- 8     19.1 
18 mu_1       0.9       1.67    0.164      5.90e-14     62.1 
19 mu_0       0.1     232.      0.0000133  0         14006.  
20 mu_0       0.2     119.      0.00216    0          6816.  
21 mu_0       0.3      34.0     0.0321     0          2059.  
22 mu_0       0.4       7.25    0.169      0           432.  
23 mu_0       0.5       1.85    0.528      0            60.5 
24 mu_0       0.6       1.13    0.876      0             6.08
25 mu_0       0.7       1.12    1.09       0             4.77
26 mu_0       0.8       1.15    1.17       0             4.08
27 mu_0       0.9       1.05    0.528      0             6.39
[1] "Total run time was 70.706 seconds"
