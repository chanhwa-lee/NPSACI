
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1226"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  7 11  9 10  6  3  6  3 10  5  4  3  8  3 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01936 0.33170 0.61342 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
719 507 
[1] "treatment indicator table: "

  0   1 
454 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 46.999 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.175 0.112 
 2 mu         0.1   0.2 0.202 0.161 
 3 mu         0.1   0.3 0.256 0.175 
 4 mu         0.1   0.4 0.325 0.181 
 5 mu         0.1   0.5 0.380 0.183 
 6 mu         0.2   0.1 0.254 0.0738
 7 mu         0.2   0.2 0.305 0.104 
 8 mu         0.2   0.3 0.353 0.112 
 9 mu         0.2   0.4 0.428 0.115 
10 mu         0.2   0.5 0.490 0.116 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.846       0.0426 0.000000155      13.6 
 2 mu         0.2      0.932       0.351  0.000259         12.1 
 3 mu         0.3      0.940       0.704  0.0100            5.12
 4 mu         0.4      0.975       0.900  0.0618            4.23
 5 mu         0.5      0.983       0.955  0.192             3.39
 6 mu         0.6      0.976       0.937  0.401             2.07
 7 mu         0.7      0.983       0.973  0.404             1.72
 8 mu         0.8      1.00        0.966  0.203             4.16
 9 mu         0.9      1.09        0.843  0.0133           18.1 
10 mu_1       0.1      0.960       0.142  0.000000930      16.5 
11 mu_1       0.2      0.927       0.589  0.000783          9.29
12 mu_1       0.3      0.947       0.832  0.0190            4.69
13 mu_1       0.4      0.975       0.949  0.0909            4.03
14 mu_1       0.5      0.974       0.969  0.240             2.71
15 mu_1       0.6      0.972       0.965  0.454             1.63
16 mu_1       0.7      0.985       0.954  0.371             2.02
17 mu_1       0.8      1.01        0.967  0.170             4.86
18 mu_1       0.9      1.10        0.821  0.0101           20.0 
19 mu_0       0.1      0.833       0.0314 0.0000000683     15.1 
20 mu_0       0.2      0.933       0.292  0.000128         12.8 
21 mu_0       0.3      0.937       0.644  0.00618           5.87
22 mu_0       0.4      0.975       0.864  0.0423            4.36
23 mu_0       0.5      0.991       0.941  0.144             4.08
24 mu_0       0.6      0.982       0.938  0.322             2.91
25 mu_0       0.7      0.977       0.949  0.481             1.69
26 mu_0       0.8      0.979       0.977  0.334             1.83
27 mu_0       0.9      0.971       0.895  0.0424            3.11
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.198    0.0000646  2.28e-15      8.70
 2 mu         0.2      0.608    0.0108     4.73e-10     11.8 
 3 mu         0.3      1.09     0.0840     5.35e- 7     18.0 
 4 mu         0.4      1.30     0.348      6.97e- 5     14.2 
 5 mu         0.5      1.20     0.753      2.69e- 3      7.59
 6 mu         0.6      1.05     0.860      4.58e- 2      4.03
 7 mu         0.7      0.999    0.881      6.70e- 3      4.27
 8 mu         0.8      1.06     0.782      6.71e- 5      5.72
 9 mu         0.9      1.15     0.139      1.48e- 8     17.8 
10 mu_1       0.1      0.472    0.000518   2.05e-14     12.4 
11 mu_1       0.2      0.941    0.0321     2.13e- 9     18.2 
12 mu_1       0.3      1.30     0.203      1.60e- 6     18.4 
13 mu_1       0.4      1.33     0.504      1.57e- 4     11.4 
14 mu_1       0.5      1.15     0.859      4.84e- 3      6.07
15 mu_1       0.6      1.02     0.894      4.58e- 2      4.03
16 mu_1       0.7      1.00     0.856      2.66e- 3      4.36
17 mu_1       0.8      1.07     0.619      2.33e- 5      6.26
18 mu_1       0.9      1.15     0.0892     4.56e- 9     19.8 
19 mu_0       0.1      0.168    0.0000247  0             8.29
20 mu_0       0.2      0.525    0.00466    0            10.2 
21 mu_0       0.3      0.999    0.0344     0            17.8 
22 mu_0       0.4      1.28     0.187      0            16.4 
23 mu_0       0.5      1.25     0.510      0             9.30
24 mu_0       0.6      1.09     0.785      0             4.03
25 mu_0       0.7      0.991    0.871      0             4.07
26 mu_0       0.8      1.01     0.831      0             4.58
27 mu_0       0.9      1.15     0.192      0             8.16
[1] "Total run time was 49.969 seconds"
