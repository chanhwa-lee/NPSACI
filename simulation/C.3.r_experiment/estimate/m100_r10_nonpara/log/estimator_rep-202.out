
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1215"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  9  7  5  8  5  9 10  6  5  7  5  6  7  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01533 0.29678 0.57671 0.94388 5.72141 
[1] "event indicator table: "

  0   1 
705 510 
[1] "treatment indicator table: "

  0   1 
500 715 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 70.859 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.418 0.140 
 2 mu         0.1   0.2 0.442 0.167 
 3 mu         0.1   0.3 0.444 0.182 
 4 mu         0.1   0.4 0.439 0.202 
 5 mu         0.1   0.5 0.488 0.218 
 6 mu         0.2   0.1 0.376 0.0643
 7 mu         0.2   0.2 0.427 0.0733
 8 mu         0.2   0.3 0.451 0.0823
 9 mu         0.2   0.4 0.471 0.0981
10 mu         0.2   0.5 0.514 0.108 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.987       0.111  0.0000133      29.0 
 2 mu         0.2      0.980       0.446  0.00380         6.23
 3 mu         0.3      1.01        0.903  0.0651          3.41
 4 mu         0.4      1.03        0.995  0.337           2.59
 5 mu         0.5      1.02        1.02   0.585           2.10
 6 mu         0.6      0.998       0.986  0.692           1.56
 7 mu         0.7      0.981       1.01   0.367           1.84
 8 mu         0.8      0.953       0.921  0.0765          2.54
 9 mu         0.9      0.873       0.464  0.00271         7.24
10 mu_1       0.1      1.14        0.353  0.0000701      14.5 
11 mu_1       0.2      1.02        0.756  0.0109          4.31
12 mu_1       0.3      1.02        0.981  0.126           3.17
13 mu_1       0.4      1.02        1.03   0.504           2.38
14 mu_1       0.5      1.01        0.992  0.709           1.90
15 mu_1       0.6      0.988       0.988  0.475           1.47
16 mu_1       0.7      0.977       0.985  0.253           1.98
17 mu_1       0.8      0.948       0.891  0.0529          2.97
18 mu_1       0.9      0.869       0.417  0.00171         7.86
19 mu_0       0.1      0.970       0.0809 0.00000697     30.6 
20 mu_0       0.2      0.971       0.390  0.00202         7.38
21 mu_0       0.3      1.00        0.812  0.0390          3.80
22 mu_0       0.4      1.04        0.964  0.210           2.89
23 mu_0       0.5      1.04        1.02   0.391           2.29
24 mu_0       0.6      1.01        1.02   0.607           1.70
25 mu_0       0.7      0.991       0.990  0.571           1.53
26 mu_0       0.8      0.976       0.974  0.171           2.26
27 mu_0       0.9      0.912       0.861  0.0118          2.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.679     0.000557  2.69e-12     34.9 
 2 mu         0.2      1.60      0.0265    1.24e- 7     48.3 
 3 mu         0.3      1.92      0.180     5.45e- 5     33.2 
 4 mu         0.4      1.62      0.545     3.43e- 3     30.0 
 5 mu         0.5      1.21      0.891     5.44e- 2     14.8 
 6 mu         0.6      1.06      1.05      7.15e- 2      3.95
 7 mu         0.7      1.14      1.02      4.31e- 3      3.66
 8 mu         0.8      1.19      0.444     3.29e- 5      8.32
 9 mu         0.9      0.818     0.0356    4.07e- 9     17.6 
10 mu_1       0.1      1.46      0.00327   2.27e-11     63.4 
11 mu_1       0.2      2.03      0.0801    5.22e- 7     43.9 
12 mu_1       0.3      1.89      0.360     1.53e- 4     36.9 
13 mu_1       0.4      1.43      0.802     7.21e- 3     25.0 
14 mu_1       0.5      1.11      1.06      8.97e- 2      9.85
15 mu_1       0.6      1.05      1.06      1.99e- 2      2.34
16 mu_1       0.7      1.16      0.883     1.30e- 3      4.33
17 mu_1       0.8      1.17      0.328     1.23e- 5      9.65
18 mu_1       0.9      0.779     0.0202    1.36e- 9     19.6 
19 mu_0       0.1      0.592     0.000227  0            31.7 
20 mu_0       0.2      1.49      0.0117    0            49.4 
21 mu_0       0.3      1.93      0.0993    0            38.2 
22 mu_0       0.4      1.74      0.354     0            33.3 
23 mu_0       0.5      1.31      0.746     0            19.7 
24 mu_0       0.6      1.06      0.961     0             6.58
25 mu_0       0.7      1.10      1.09      0             2.83
26 mu_0       0.8      1.26      0.823     0             6.56
27 mu_0       0.9      1.17      0.120     0            10.8 
[1] "Total run time was 75.154 seconds"
