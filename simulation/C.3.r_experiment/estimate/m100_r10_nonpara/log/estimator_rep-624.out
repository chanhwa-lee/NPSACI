
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1202"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  6  6  9  8 10 11  6  2  9  9  5  5  6  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04944 0.36327 0.63669 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
747 455 
[1] "treatment indicator table: "

  0   1 
425 777 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 62.127 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.238 0.0832
 2 mu         0.1   0.2 0.288 0.124 
 3 mu         0.1   0.3 0.282 0.144 
 4 mu         0.1   0.4 0.371 0.162 
 5 mu         0.1   0.5 0.411 0.180 
 6 mu         0.2   0.1 0.242 0.0656
 7 mu         0.2   0.2 0.310 0.0979
 8 mu         0.2   0.3 0.317 0.112 
 9 mu         0.2   0.4 0.415 0.122 
10 mu         0.2   0.5 0.460 0.136 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.946       0.0540 0.000000103      29.6 
 2 mu         0.2      1.03        0.456  0.0000682        23.1 
 3 mu         0.3      1.01        0.729  0.00243          12.2 
 4 mu         0.4      1.01        0.929  0.0252            5.11
 5 mu         0.5      1.02        1.03   0.128             2.04
 6 mu         0.6      1.01        0.984  0.384             1.77
 7 mu         0.7      0.969       0.968  0.575             1.68
 8 mu         0.8      0.971       0.948  0.409             1.90
 9 mu         0.9      1.03        0.868  0.0360            2.73
10 mu_1       0.1      1.10        0.192  0.000000736      32.9 
11 mu_1       0.2      1.00        0.641  0.000245         13.0 
12 mu_1       0.3      0.983       0.853  0.00586           4.86
13 mu_1       0.4      1.01        1.00   0.0460            2.49
14 mu_1       0.5      1.02        1.00   0.189             2.03
15 mu_1       0.6      0.996       0.972  0.499             1.64
16 mu_1       0.7      0.963       0.959  0.569             1.68
17 mu_1       0.8      0.976       0.947  0.340             2.03
18 mu_1       0.9      1.04        0.899  0.0275            2.90
19 mu_0       0.1      0.929       0.0389 0.0000000324     29.2 
20 mu_0       0.2      1.03        0.345  0.0000239        25.7 
21 mu_0       0.3      1.02        0.642  0.000958         15.3 
22 mu_0       0.4      1.01        0.865  0.0113            7.26
23 mu_0       0.5      1.02        1.00   0.0660            2.96
24 mu_0       0.6      1.02        1.02   0.157             2.08
25 mu_0       0.7      0.983       0.954  0.253             1.67
26 mu_0       0.8      0.950       0.981  0.366             1.67
27 mu_0       0.9      0.962       0.898  0.112             2.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     439.     0.0000259   2.77e-15  43602.  
 2 mu         0.2     140.     0.00265     5.73e-10  13246.  
 3 mu         0.3      30.8    0.0329      6.48e- 7   2346.  
 4 mu         0.4       6.55   0.199       8.45e- 5    266.  
 5 mu         0.5       1.97   0.634       2.20e- 3     30.2 
 6 mu         0.6       1.11   1.00        2.82e- 2      4.27
 7 mu         0.7       1.06   0.992       7.09e- 3      3.15
 8 mu         0.8       1.16   0.983       1.23e- 5      4.04
 9 mu         0.9       1.14   0.269       2.12e-10      8.24
10 mu_1       0.1     263.     0.000199    2.49e-14  25648.  
11 mu_1       0.2      48.3    0.00940     2.58e- 9   3896.  
12 mu_1       0.3      10.6    0.0847      1.94e- 6    460.  
13 mu_1       0.4       3.14   0.354       1.90e- 4     88.1 
14 mu_1       0.5       1.39   0.881       4.40e- 3     13.4 
15 mu_1       0.6       1.05   0.969       4.71e- 2      3.12
16 mu_1       0.7       1.09   1.06        5.96e- 4      3.50
17 mu_1       0.8       1.17   0.886       9.07e- 7      3.93
18 mu_1       0.9       1.14   0.208       1.38e-11      9.16
19 mu_0       0.1     458.     0.00000527  0         45597.  
20 mu_0       0.2     163.     0.000901    0         15584.  
21 mu_0       0.3      39.4    0.0124      0          3154.  
22 mu_0       0.4       8.82   0.0852      0           417.  
23 mu_0       0.5       2.54   0.361       0            46.9 
24 mu_0       0.6       1.22   0.854       0             6.01
25 mu_0       0.7       1.00   0.943       0             2.50
26 mu_0       0.8       1.11   1.09        0             4.49
27 mu_0       0.9       1.21   0.561       0             5.49
[1] "Total run time was 66.643 seconds"
