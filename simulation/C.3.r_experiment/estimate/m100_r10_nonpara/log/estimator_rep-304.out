
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1276"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  5  5  8  3  8  9  6  9  8  4 10  2  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04065 0.35873 0.64023 1.00000 5.98787 
[1] "event indicator table: "

  0   1 
736 540 
[1] "treatment indicator table: "

  0   1 
481 795 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 78 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.724 0.360
 2 mu         0.1   0.2 0.825 0.421
 3 mu         0.1   0.3 0.909 0.461
 4 mu         0.1   0.4 1.01  0.488
 5 mu         0.1   0.5 1.06  0.521
 6 mu         0.2   0.1 0.540 0.153
 7 mu         0.2   0.2 0.653 0.195
 8 mu         0.2   0.3 0.739 0.239
 9 mu         0.2   0.4 0.819 0.256
10 mu         0.2   0.5 0.882 0.269
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.50        0.0336 0.000000236      66.3 
 2 mu         0.2      1.37        0.258  0.000255         41.6 
 3 mu         0.3      1.18        0.606  0.00708          21.6 
 4 mu         0.4      1.03        0.912  0.0586            7.19
 5 mu         0.5      0.983       0.981  0.248             1.88
 6 mu         0.6      0.973       0.981  0.577             1.57
 7 mu         0.7      0.963       0.962  0.316             1.71
 8 mu         0.8      0.934       0.918  0.0725            2.03
 9 mu         0.9      0.848       0.695  0.00231           3.47
10 mu_1       0.1      1.30        0.124  0.00000154       58.4 
11 mu_1       0.2      1.25        0.492  0.000784         32.0 
12 mu_1       0.3      1.07        0.849  0.0146           11.1 
13 mu_1       0.4      0.985       0.975  0.0944            3.00
14 mu_1       0.5      0.972       0.977  0.335             1.77
15 mu_1       0.6      0.968       0.957  0.487             1.49
16 mu_1       0.7      0.961       0.982  0.247             1.73
17 mu_1       0.8      0.930       0.910  0.0528            2.31
18 mu_1       0.9      0.840       0.653  0.00160           3.69
19 mu_0       0.1      1.53        0.0236 0.0000000919     73.7 
20 mu_0       0.2      1.40        0.198  0.000110         44.0 
21 mu_0       0.3      1.22        0.524  0.00386          26.1 
22 mu_0       0.4      1.06        0.838  0.0348           10.0 
23 mu_0       0.5      0.994       0.983  0.162             2.79
24 mu_0       0.6      0.980       0.982  0.478             1.69
25 mu_0       0.7      0.970       0.970  0.477             1.65
26 mu_0       0.8      0.953       0.963  0.151             1.73
27 mu_0       0.9      0.915       0.863  0.00864           2.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.77    0.0000605  9.53e-18    160.  
 2 mu         0.2       1.18    0.00608    4.99e-12     54.8 
 3 mu         0.3       1.26    0.0648     1.11e- 8     13.5 
 4 mu         0.4       1.35    0.329      2.62e- 6     11.9 
 5 mu         0.5       1.25    0.819      1.82e- 4     11.1 
 6 mu         0.6       1.11    0.902      5.02e- 3      6.40
 7 mu         0.7       1.24    0.972      7.83e- 5     13.3 
 8 mu         0.8       2.41    0.425      2.04e- 7     60.6 
 9 mu         0.9       6.99    0.0440     7.01e-12    315.  
10 mu_1       0.1       1.49    0.000357   9.53e-17    100.  
11 mu_1       0.2       1.20    0.0189     2.50e-11     17.1 
12 mu_1       0.3       1.38    0.146      3.69e- 8     13.6 
13 mu_1       0.4       1.34    0.518      6.55e- 6     11.3 
14 mu_1       0.5       1.18    0.972      3.63e- 4     10.4 
15 mu_1       0.6       1.09    0.890      5.23e- 4      8.05
16 mu_1       0.7       1.33    0.930      6.99e- 6     15.5 
17 mu_1       0.8       2.72    0.307      1.60e- 8     75.7 
18 mu_1       0.9       7.53    0.0270     4.87e-13    350.  
19 mu_0       0.1       1.80    0.0000185  0           167.  
20 mu_0       0.2       1.18    0.00241    0            64.3 
21 mu_0       0.3       1.21    0.0372     0            14.9 
22 mu_0       0.4       1.36    0.189      0            12.8 
23 mu_0       0.5       1.31    0.622      0            11.7 
24 mu_0       0.6       1.14    0.971      0             8.47
25 mu_0       0.7       1.02    0.919      0             8.06
26 mu_0       0.8       1.17    0.534      0            17.9 
27 mu_0       0.9       2.14    0.0466     0            77.9 
[1] "Total run time was 82.045 seconds"
