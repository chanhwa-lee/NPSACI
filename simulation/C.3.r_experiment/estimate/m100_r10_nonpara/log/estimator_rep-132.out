
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 10"
[1] "m: 100"
[1] "N_total: 1239"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  8  5  5  4  2  8  6  7  7  6  5  5  5  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04855 0.37950 0.64738 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
731 508 
[1] "treatment indicator table: "

  0   1 
449 790 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 564
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.555 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.296 0.113 
 2 mu         0.1   0.2 0.407 0.140 
 3 mu         0.1   0.3 0.539 0.172 
 4 mu         0.1   0.4 0.598 0.173 
 5 mu         0.1   0.5 0.611 0.171 
 6 mu         0.2   0.1 0.299 0.0815
 7 mu         0.2   0.2 0.402 0.0970
 8 mu         0.2   0.3 0.546 0.145 
 9 mu         0.2   0.4 0.593 0.139 
10 mu         0.2   0.5 0.608 0.134 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.840       0.126  0.0000000300     18.7 
 2 mu         0.2      0.882       0.523  0.0000575        10.8 
 3 mu         0.3      0.909       0.748  0.00323           6.53
 4 mu         0.4      0.951       0.826  0.0404            7.17
 5 mu         0.5      0.987       0.968  0.213             4.34
 6 mu         0.6      1.00        0.964  0.480             1.82
 7 mu         0.7      0.994       0.983  0.318             1.83
 8 mu         0.8      0.976       0.948  0.144             2.68
 9 mu         0.9      0.978       0.857  0.0124            3.86
10 mu_1       0.1      0.799       0.324  0.000000190       7.01
11 mu_1       0.2      0.823       0.639  0.000184          4.30
12 mu_1       0.3      0.894       0.773  0.00694           7.78
13 mu_1       0.4      0.956       0.913  0.0662            6.58
14 mu_1       0.5      0.997       0.951  0.288             3.40
15 mu_1       0.6      1.01        0.994  0.442             1.88
16 mu_1       0.7      0.994       0.973  0.277             2.00
17 mu_1       0.8      0.976       0.951  0.115             2.83
18 mu_1       0.9      0.979       0.842  0.00885           4.21
19 mu_0       0.1      0.845       0.0962 0.0000000122     20.7 
20 mu_0       0.2      0.897       0.423  0.0000260        13.2 
21 mu_0       0.3      0.915       0.706  0.00164           8.15
22 mu_0       0.4      0.948       0.835  0.0231            7.57
23 mu_0       0.5      0.977       0.930  0.138             5.28
24 mu_0       0.6      0.996       0.943  0.461             2.40
25 mu_0       0.7      0.993       0.967  0.354             1.98
26 mu_0       0.8      0.976       0.970  0.244             2.08
27 mu_0       0.9      0.976       0.920  0.0445            3.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       8.17    0.0000425  3.83e-17    343.  
 2 mu         0.2       6.36    0.00651    2.01e-11    300.  
 3 mu         0.3       4.22    0.0856     4.46e- 8    177.  
 4 mu         0.4       2.60    0.385      1.05e- 5     80.2 
 5 mu         0.5       1.67    0.804      7.31e- 4     28.0 
 6 mu         0.6       1.31    1.01       8.93e- 3      7.04
 7 mu         0.7       1.40    1.10       3.30e- 4     12.5 
 8 mu         0.8       2.03    0.707      2.67e- 6     44.4 
 9 mu         0.9       4.12    0.165      4.13e-10    183.  
10 mu_1       0.1       5.73    0.000143   0           428.  
11 mu_1       0.2       3.29    0.0126     0           188.  
12 mu_1       0.3       2.07    0.129      0            73.7 
13 mu_1       0.4       1.45    0.598      0            25.1 
14 mu_1       0.5       1.20    0.906      0            10.2 
15 mu_1       0.6       1.22    0.944      0             7.54
16 mu_1       0.7       1.48    0.946      0            14.6 
17 mu_1       0.8       2.21    0.605      0            55.5 
18 mu_1       0.9       4.43    0.130      0           203.  
19 mu_0       0.1       8.44    0.0000140  0           333.  
20 mu_0       0.2       7.13    0.00288    0           329.  
21 mu_0       0.3       5.13    0.0364     0           221.  
22 mu_0       0.4       3.36    0.198      0           117.  
23 mu_0       0.5       2.13    0.577      0            49.0 
24 mu_0       0.6       1.46    0.876      0            15.4 
25 mu_0       0.7       1.23    1.01       0             7.55
26 mu_0       0.8       1.28    0.904      0            16.7 
27 mu_0       0.9       1.32    0.273      0            24.2 
[1] "Total run time was 58.929 seconds"
