
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1204"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6 10  4 10  7  2  7  6  7  6  5 11  4  6  8  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02636 0.35071 0.60775 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
698 506 
[1] "treatment indicator table: "

  0   1 
447 757 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 581
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 445.543 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.388 0.165
 2 mu         0.1   0.2 0.443 0.148
 3 mu         0.1   0.3 0.496 0.133
 4 mu         0.1   0.4 0.632 0.135
 5 mu         0.1   0.5 0.694 0.144
 6 mu         0.2   0.1 0.410 0.161
 7 mu         0.2   0.2 0.482 0.141
 8 mu         0.2   0.3 0.541 0.125
 9 mu         0.2   0.4 0.669 0.120
10 mu         0.2   0.5 0.732 0.126
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.872        0.654  0.000628     13.1 
 2 mu         0.2      1.02         1      0.0474        8.42
 3 mu         0.3      1.04         1      0.249         5.37
 4 mu         0.4      1.02         1      0.569         2.58
 5 mu         0.5      1.01         1      0.790         1.36
 6 mu         0.6      1.00         1      0.910         1.11
 7 mu         0.7      1.00         1      0.777         1.11
 8 mu         0.8      0.991        1      0.522         1.33
 9 mu         0.9      0.966        1      0.184         2.35
10 mu_1       0.1      1.03         1      0.00267      12.0 
11 mu_1       0.2      1.04         1      0.105         7.26
12 mu_1       0.3      1.03         1      0.386         3.36
13 mu_1       0.4      1.01         1      0.706         1.85
14 mu_1       0.5      1.01         1      0.875         1.21
15 mu_1       0.6      1.00         1      0.880         1.12
16 mu_1       0.7      0.999        1      0.729         1.13
17 mu_1       0.8      0.989        1      0.469         1.40
18 mu_1       0.9      0.964        1      0.157         2.42
19 mu_0       0.1      0.855        0.609  0.000401     13.3 
20 mu_0       0.2      1.02         1      0.0331        9.29
21 mu_0       0.3      1.05         1      0.190         6.23
22 mu_0       0.4      1.03         1      0.478         3.24
23 mu_0       0.5      1.01         1      0.706         1.60
24 mu_0       0.6      1.01         1      0.878         1.16
25 mu_0       0.7      1.00         1      0.859         1.13
26 mu_0       0.8      1.00         1      0.721         1.22
27 mu_0       0.9      0.988        1      0.423         1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      34.7     0.000102   3.34e-17    3102. 
 2 mu         0.2      42.5     0.00903    1.75e-11    3769. 
 3 mu         0.3      19.2     0.0795     3.88e- 8    1502. 
 4 mu         0.4       6.10    0.307      9.17e- 6     302. 
 5 mu         0.5       2.54    0.717      6.36e- 4      31.9
 6 mu         0.6       1.81    0.987      2.03e- 2      14.5
 7 mu         0.7       2.20    0.979      1.82e- 3      38.2
 8 mu         0.8       3.90    0.584      8.09e- 6      64.6
 9 mu         0.9       7.08    0.0921     4.45e-10     152. 
10 mu_1       0.1      55.0     0.000684   3.34e-16    4898. 
11 mu_1       0.2      34.4     0.0295     8.74e-11    2976. 
12 mu_1       0.3      11.2     0.200      1.29e- 7     791. 
13 mu_1       0.4       3.55    0.539      2.29e- 5     119. 
14 mu_1       0.5       1.93    0.809      1.27e- 3      13.9
15 mu_1       0.6       1.73    1.04       2.62e- 2      20.2
16 mu_1       0.7       2.43    0.865      6.49e- 4      45.5
17 mu_1       0.8       4.29    0.475      2.53e- 6      67.3
18 mu_1       0.9       7.47    0.0624     1.24e-10     169. 
19 mu_0       0.1      32.4     0.0000381  0           2902. 
20 mu_0       0.2      44.6     0.00423    0           3968. 
21 mu_0       0.3      22.6     0.0316     0           1807. 
22 mu_0       0.4       7.81    0.161      0            424. 
23 mu_0       0.5       3.16    0.538      0             53.8
24 mu_0       0.6       1.93    0.850      0             14.0
25 mu_0       0.7       1.67    0.945      0             21.2
26 mu_0       0.8       2.35    0.814      0             53.8
27 mu_0       0.9       3.54    0.142      0             87.4
[1] "Total run time was 449.445 seconds"
