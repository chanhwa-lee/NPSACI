
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1227"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  8  2  3  7 10  3  6  7 10  9  6  7  4  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03797 0.30790 0.61807 1.00000 4.18639 
[1] "event indicator table: "

  0   1 
720 507 
[1] "treatment indicator table: "

  0   1 
455 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 338.627 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.398 0.107 
 2 mu         0.1   0.2 0.642 0.158 
 3 mu         0.1   0.3 0.760 0.187 
 4 mu         0.1   0.4 0.769 0.190 
 5 mu         0.1   0.5 0.774 0.191 
 6 mu         0.2   0.1 0.316 0.0457
 7 mu         0.2   0.2 0.497 0.0720
 8 mu         0.2   0.3 0.612 0.0820
 9 mu         0.2   0.4 0.621 0.0772
10 mu         0.2   0.5 0.632 0.0772
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.27         0.939   0.0130      35.2 
 2 mu         0.2      1.10         1       0.216       11.1 
 3 mu         0.3      1.02         1       0.522        2.73
 4 mu         0.4      1.00         1       0.716        1.34
 5 mu         0.5      0.999        1       0.864        1.18
 6 mu         0.6      1.00         1       0.943        1.11
 7 mu         0.7      1.00         1       0.929        1.07
 8 mu         0.8      1.00         1       0.832        1.12
 9 mu         0.9      0.998        1       0.652        1.45
10 mu_1       0.1      1.23         1       0.0421      20.8 
11 mu_1       0.2      1.03         1       0.345        3.77
12 mu_1       0.3      1.00         1       0.619        1.49
13 mu_1       0.4      0.997        1       0.780        1.23
14 mu_1       0.5      0.999        1       0.907        1.15
15 mu_1       0.6      1.00         1       0.948        1.09
16 mu_1       0.7      1.00         1       0.920        1.09
17 mu_1       0.8      1.00         1       0.812        1.14
18 mu_1       0.9      0.997        1       0.632        1.51
19 mu_0       0.1      1.27         0.934   0.00975     36.8 
20 mu_0       0.2      1.12         1       0.184       12.9 
21 mu_0       0.3      1.03         1       0.459        3.32
22 mu_0       0.4      1.00         1       0.673        1.42
23 mu_0       0.5      0.998        1       0.821        1.21
24 mu_0       0.6      1.00         1       0.935        1.13
25 mu_0       0.7      1.00         1       0.950        1.08
26 mu_0       0.8      1.00         1       0.908        1.11
27 mu_0       0.9      1.01         1       0.796        1.19
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.934    0.000115   1.80e-14     70.8 
 2 mu         0.2      1.35     0.00583    1.87e- 9     77.6 
 3 mu         0.3      1.46     0.0994     1.41e- 6     40.2 
 4 mu         0.4      1.48     0.323      1.38e- 4     17.6 
 5 mu         0.5      1.37     0.788      4.25e- 3     10.4 
 6 mu         0.6      1.20     1.09       6.03e- 2      5.54
 7 mu         0.7      1.09     1.06       1.96e- 2      2.59
 8 mu         0.8      1.09     0.515      2.96e- 4      5.96
 9 mu         0.9      1.07     0.0601     1.83e- 7     20.9 
10 mu_1       0.1      1.64     0.000909   1.61e-13    109.  
11 mu_1       0.2      1.48     0.0206     8.36e- 9     59.7 
12 mu_1       0.3      1.47     0.232      4.20e- 6     20.6 
13 mu_1       0.4      1.44     0.591      3.08e- 4     15.7 
14 mu_1       0.5      1.29     0.968      7.60e- 3      7.43
15 mu_1       0.6      1.14     1.14       8.74e- 2      4.89
16 mu_1       0.7      1.07     0.998      4.31e- 3      2.91
17 mu_1       0.8      1.09     0.419      5.69e- 5      6.67
18 mu_1       0.9      1.08     0.0373     3.13e- 8     23.2 
19 mu_0       0.1      0.856    0.0000269  0            66.6 
20 mu_0       0.2      1.32     0.00307    0            82.0 
21 mu_0       0.3      1.45     0.0377     0            48.6 
22 mu_0       0.4      1.51     0.171      0            18.8 
23 mu_0       0.5      1.45     0.547      0            13.4 
24 mu_0       0.6      1.29     0.957      0             6.52
25 mu_0       0.7      1.14     1.23       0             3.48
26 mu_0       0.8      1.10     0.837      0             3.57
27 mu_0       0.9      1.03     0.248      0            11.6 
[1] "Total run time was 341.882 seconds"
