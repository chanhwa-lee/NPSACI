
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1242"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  9  7  5  6  4  4  8  8  3  4  8  3  7  6 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01264 0.27006 0.53246 0.94139 3.00000 
[1] "event indicator table: "

  0   1 
781 461 
[1] "treatment indicator table: "

  0   1 
473 769 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 373.566 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.406 0.0663
 2 mu         0.1   0.2 0.459 0.0547
 3 mu         0.1   0.3 0.530 0.0609
 4 mu         0.1   0.4 0.551 0.0649
 5 mu         0.1   0.5 0.563 0.0763
 6 mu         0.2   0.1 0.360 0.0448
 7 mu         0.2   0.2 0.409 0.0332
 8 mu         0.2   0.3 0.474 0.0370
 9 mu         0.2   0.4 0.499 0.0401
10 mu         0.2   0.5 0.524 0.0529
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01             1   0.0101       5.58
 2 mu         0.2      0.989            1   0.184        1.86
 3 mu         0.3      0.990            1   0.559        1.40
 4 mu         0.4      0.995            1   0.800        1.22
 5 mu         0.5      0.998            1   0.869        1.09
 6 mu         0.6      0.999            1   0.930        1.05
 7 mu         0.7      1.00             1   0.935        1.10
 8 mu         0.8      1.00             1   0.884        1.22
 9 mu         0.9      0.998            1   0.677        1.38
10 mu_1       0.1      0.985            1   0.0319       1.89
11 mu_1       0.2      0.984            1   0.309        1.55
12 mu_1       0.3      0.990            1   0.689        1.32
13 mu_1       0.4      0.996            1   0.829        1.17
14 mu_1       0.5      0.998            1   0.886        1.07
15 mu_1       0.6      0.999            1   0.938        1.07
16 mu_1       0.7      1.00             1   0.922        1.13
17 mu_1       0.8      1.00             1   0.874        1.24
18 mu_1       0.9      0.998            1   0.653        1.39
19 mu_0       0.1      1.02             1   0.00773      6.02
20 mu_0       0.2      0.990            1   0.152        2.04
21 mu_0       0.3      0.989            1   0.503        1.44
22 mu_0       0.4      0.995            1   0.782        1.26
23 mu_0       0.5      0.998            1   0.852        1.12
24 mu_0       0.6      0.998            1   0.909        1.05
25 mu_0       0.7      0.999            1   0.941        1.08
26 mu_0       0.8      1.00             1   0.920        1.15
27 mu_0       0.9      1.00             1   0.815        1.25
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.196    0.0000804  7.20e-15      5.11
 2 mu         0.2      0.653    0.00901    8.39e-10      7.08
 3 mu         0.3      1.01     0.139      7.23e- 7      7.47
 4 mu         0.4      1.10     0.560      8.24e- 5      6.09
 5 mu         0.5      1.06     1.04       3.05e- 3      3.25
 6 mu         0.6      1.04     1.02       5.41e- 2      3.09
 7 mu         0.7      1.10     1.10       7.04e- 3      3.03
 8 mu         0.8      1.37     0.603      9.25e- 5      8.70
 9 mu         0.9      1.83     0.0580     3.62e- 8     25.4 
10 mu_1       0.1      0.515    0.000524   6.80e-14      9.29
11 mu_1       0.2      0.987    0.0276     3.96e- 9      8.77
12 mu_1       0.3      1.16     0.314      2.28e- 6      7.78
13 mu_1       0.4      1.11     0.876      1.95e- 4      5.07
14 mu_1       0.5      1.05     1.09       5.76e- 3      3.40
15 mu_1       0.6      1.04     1.04       3.77e- 2      2.99
16 mu_1       0.7      1.14     0.968      2.51e- 3      3.68
17 mu_1       0.8      1.44     0.466      2.89e- 5      9.24
18 mu_1       0.9      1.89     0.0331     1.01e- 8     28.3 
19 mu_0       0.1      0.161    0.0000332  0             4.65
20 mu_0       0.2      0.569    0.00487    0             7.24
21 mu_0       0.3      0.951    0.0795     0             7.63
22 mu_0       0.4      1.09     0.350      0             6.77
23 mu_0       0.5      1.08     0.853      0             3.82
24 mu_0       0.6      1.04     1.02       0             3.47
25 mu_0       0.7      1.02     1.11       0             2.84
26 mu_0       0.8      1.08     0.836      0             6.52
27 mu_0       0.9      1.30     0.146      0            12.1 
[1] "Total run time was 378.185 seconds"
