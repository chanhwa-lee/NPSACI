
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1211"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  8  7  7  5  4  9  8  4 10  6  5  1  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04742 0.36406 0.61835 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
710 501 
[1] "treatment indicator table: "

  0   1 
425 786 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 581
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 333.472 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.428 0.0925
 2 mu         0.1   0.2 0.467 0.119 
 3 mu         0.1   0.3 0.496 0.111 
 4 mu         0.1   0.4 0.522 0.110 
 5 mu         0.1   0.5 0.566 0.108 
 6 mu         0.2   0.1 0.371 0.0891
 7 mu         0.2   0.2 0.399 0.132 
 8 mu         0.2   0.3 0.452 0.107 
 9 mu         0.2   0.4 0.464 0.117 
10 mu         0.2   0.5 0.488 0.118 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.877            1   0.00432      9.97
 2 mu         0.2      0.930            1   0.0891       4.21
 3 mu         0.3      0.974            1   0.348        2.46
 4 mu         0.4      0.999            1   0.663        2.13
 5 mu         0.5      1.01             1   0.804        1.60
 6 mu         0.6      1.01             1   0.901        1.25
 7 mu         0.7      1.00             1   0.913        1.12
 8 mu         0.8      0.993            1   0.807        1.12
 9 mu         0.9      0.976            1   0.534        1.19
10 mu_1       0.1      0.922            1   0.0169       6.79
11 mu_1       0.2      0.959            1   0.179        2.64
12 mu_1       0.3      0.992            1   0.502        2.46
13 mu_1       0.4      1.01             1   0.771        1.87
14 mu_1       0.5      1.01             1   0.871        1.41
15 mu_1       0.6      1.00             1   0.896        1.16
16 mu_1       0.7      0.999            1   0.901        1.13
17 mu_1       0.8      0.992            1   0.787        1.11
18 mu_1       0.9      0.974            1   0.503        1.20
19 mu_0       0.1      0.872            1   0.00293     10.3 
20 mu_0       0.2      0.923            1   0.0666       4.79
21 mu_0       0.3      0.967            1   0.282        2.45
22 mu_0       0.4      0.994            1   0.590        2.31
23 mu_0       0.5      1.01             1   0.737        1.80
24 mu_0       0.6      1.01             1   0.849        1.37
25 mu_0       0.7      1.00             1   0.898        1.14
26 mu_0       0.8      0.998            1   0.881        1.16
27 mu_0       0.9      0.998            1   0.738        1.20
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.34    0.0000588  3.01e-17     257. 
 2 mu         0.2       9.87    0.00598    1.58e-11     714. 
 3 mu         0.3       9.63    0.0742     3.50e- 8     724. 
 4 mu         0.4       6.66    0.350      8.27e- 6     429. 
 5 mu         0.5       3.60    0.914      5.74e- 4     162. 
 6 mu         0.6       1.95    1.09       8.88e- 3      37.6
 7 mu         0.7       1.45    1.14       9.09e- 5      14.8
 8 mu         0.8       1.43    0.979      1.20e- 7      24.9
 9 mu         0.9       1.88    0.224      1.16e-12      40.7
10 mu_1       0.1       9.88    0.000253   0            644. 
11 mu_1       0.2      11.2     0.0188     0            892. 
12 mu_1       0.3       8.48    0.161      0            603. 
13 mu_1       0.4       5.00    0.587      0            268. 
14 mu_1       0.5       2.66    1.04       0             81.1
15 mu_1       0.6       1.67    1.15       0             17.3
16 mu_1       0.7       1.41    1.06       0             17.6
17 mu_1       0.8       1.44    0.838      0             26.0
18 mu_1       0.9       1.93    0.175      0             45.2
19 mu_0       0.1       5.94    0.0000192  0            238. 
20 mu_0       0.2       9.54    0.00201    0            669. 
21 mu_0       0.3      10.1     0.0332     0            776. 
22 mu_0       0.4       7.76    0.171      0            536. 
23 mu_0       0.5       4.53    0.547      0            243. 
24 mu_0       0.6       2.36    0.959      0             70.6
25 mu_0       0.7       1.53    1.11       0             11.2
26 mu_0       0.8       1.39    1.05       0             20.8
27 mu_0       0.9       1.48    0.355      0             33.8
[1] "Total run time was 338.474 seconds"
