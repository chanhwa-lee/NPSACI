
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1255"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  4  4  8  9 11 12  2  6  7  6  2  3  6 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01795 0.31777 0.56690 0.95249 4.00000 
[1] "event indicator table: "

  0   1 
753 502 
[1] "treatment indicator table: "

  0   1 
466 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 384.437 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.360 0.166 
 2 mu         0.1   0.2 0.393 0.167 
 3 mu         0.1   0.3 0.480 0.241 
 4 mu         0.1   0.4 0.503 0.229 
 5 mu         0.1   0.5 0.654 0.193 
 6 mu         0.2   0.1 0.379 0.0879
 7 mu         0.2   0.2 0.420 0.0724
 8 mu         0.2   0.3 0.529 0.120 
 9 mu         0.2   0.4 0.547 0.102 
10 mu         0.2   0.5 0.660 0.0965
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08          1      0.00733     13.1 
 2 mu         0.2      0.998         1      0.143        2.31
 3 mu         0.3      0.989         1      0.461        1.28
 4 mu         0.4      0.991         1      0.730        1.15
 5 mu         0.5      0.997         1      0.868        1.10
 6 mu         0.6      1.00          1      0.916        1.12
 7 mu         0.7      1.01          1      0.911        1.14
 8 mu         0.8      1.01          1      0.857        1.17
 9 mu         0.9      1.01          1      0.548        1.40
10 mu_1       0.1      0.988         1      0.0242       3.65
11 mu_1       0.2      0.989         1      0.249        1.70
12 mu_1       0.3      0.988         1      0.584        1.22
13 mu_1       0.4      0.992         1      0.791        1.14
14 mu_1       0.5      0.999         1      0.895        1.09
15 mu_1       0.6      1.00          1      0.910        1.13
16 mu_1       0.7      1.01          1      0.913        1.14
17 mu_1       0.8      1.01          1      0.834        1.18
18 mu_1       0.9      1.01          1      0.517        1.45
19 mu_0       0.1      1.09          1      0.00546     14.5 
20 mu_0       0.2      1.00          1      0.116        2.46
21 mu_0       0.3      0.989         1      0.409        1.36
22 mu_0       0.4      0.990         1      0.690        1.16
23 mu_0       0.5      0.995         1      0.840        1.12
24 mu_0       0.6      1.00          1      0.902        1.09
25 mu_0       0.7      1.00          1      0.904        1.15
26 mu_0       0.8      1.01          1.00   0.881        1.14
27 mu_0       0.9      1.02          1      0.826        1.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.40     0.000122   2.66e-16    108.  
 2 mu         0.2      1.99     0.00943    1.24e-10    116.  
 3 mu         0.3      1.47     0.0921     2.41e- 7     40.5 
 4 mu         0.4      1.09     0.420      4.88e- 5      9.87
 5 mu         0.5      1.03     0.920      1.17e- 3      3.49
 6 mu         0.6      1.12     1.08       1.50e- 2      3.58
 7 mu         0.7      1.21     1.17       2.86e- 4      3.77
 8 mu         0.8      1.42     0.824      4.33e- 7     10.4 
 9 mu         0.9      2.36     0.141      4.70e-12     68.5 
10 mu_1       0.1      2.23     0.000688   2.53e-15    161.  
11 mu_1       0.2      1.93     0.0306     5.90e-10     87.2 
12 mu_1       0.3      1.33     0.205      7.63e- 7     20.3 
13 mu_1       0.4      1.07     0.700      1.16e- 4      7.40
14 mu_1       0.5      1.07     1.03       2.34e- 3      3.49
15 mu_1       0.6      1.15     1.07       5.99e- 3      3.71
16 mu_1       0.7      1.23     1.15       6.13e- 5      3.59
17 mu_1       0.8      1.46     0.649      8.12e- 8     13.0 
18 mu_1       0.9      2.45     0.109      7.84e-13     76.1 
19 mu_0       0.1      1.31     0.0000476  0           102.  
20 mu_0       0.2      2.01     0.00410    0           124.  
21 mu_0       0.3      1.53     0.0416     0            49.2 
22 mu_0       0.4      1.11     0.233      0            11.5 
23 mu_0       0.5      0.984    0.631      0             4.10
24 mu_0       0.6      1.06     1.00       0             3.58
25 mu_0       0.7      1.17     1.16       0             4.19
26 mu_0       0.8      1.24     1.11       0             4.44
27 mu_0       0.9      1.48     0.281      0            20.0 
[1] "Total run time was 388.21 seconds"
