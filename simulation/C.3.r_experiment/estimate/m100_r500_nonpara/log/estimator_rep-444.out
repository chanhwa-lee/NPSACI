
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1258"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 16 17 18 19 20 
 7  7  4  7  5  7  4  8  8  8 11  7  2  5 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03593 0.38031 0.61760 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
741 517 
[1] "treatment indicator table: "

  0   1 
455 803 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 491.972 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.420 0.107 
 2 mu         0.1   0.2 0.440 0.136 
 3 mu         0.1   0.3 0.611 0.140 
 4 mu         0.1   0.4 0.733 0.157 
 5 mu         0.1   0.5 0.730 0.156 
 6 mu         0.2   0.1 0.358 0.0620
 7 mu         0.2   0.2 0.393 0.0830
 8 mu         0.2   0.3 0.531 0.0790
 9 mu         0.2   0.4 0.641 0.0964
10 mu         0.2   0.5 0.639 0.0908
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.977        0.914 0.000000555     21.1 
 2 mu         0.2      0.942        0.967 0.000289        10.5 
 3 mu         0.3      0.942        1     0.00793          2.79
 4 mu         0.4      0.968        1     0.0625           1.58
 5 mu         0.5      0.985        1     0.238            1.51
 6 mu         0.6      0.997        1     0.549            1.22
 7 mu         0.7      1.00         1     0.604            1.43
 8 mu         0.8      0.991        1     0.311            1.86
 9 mu         0.9      0.959        1     0.0678           2.26
10 mu_1       0.1      1.02         0.935 0.00000330      21.1 
11 mu_1       0.2      0.946        0.997 0.000871         5.58
12 mu_1       0.3      0.959        1     0.0163           1.53
13 mu_1       0.4      0.977        1     0.0989           1.66
14 mu_1       0.5      0.989        1     0.312            1.41
15 mu_1       0.6      0.999        1     0.631            1.24
16 mu_1       0.7      1.00         1     0.536            1.48
17 mu_1       0.8      0.989        1     0.262            1.96
18 mu_1       0.9      0.955        1     0.0540           2.25
19 mu_0       0.1      0.971        0.884 0.000000250     21.1 
20 mu_0       0.2      0.941        0.965 0.000143        11.7 
21 mu_0       0.3      0.934        0.996 0.00435          3.34
22 mu_0       0.4      0.962        1     0.0383           1.52
23 mu_0       0.5      0.982        1     0.164            1.61
24 mu_0       0.6      0.993        1     0.427            1.34
25 mu_0       0.7      1.00         1     0.761            1.37
26 mu_0       0.8      1.00         1     0.507            1.65
27 mu_0       0.9      0.986        1     0.192            2.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.64    0.0000519  2.56e-16     544. 
 2 mu         0.2       6.88    0.00791    5.96e-11     424. 
 3 mu         0.3       4.85    0.114      7.70e- 8     218. 
 4 mu         0.4       3.23    0.500      1.17e- 5      84.8
 5 mu         0.5       5.86    0.950      5.42e- 4     350. 
 6 mu         0.6      45.4     1.23       1.15e- 2    4146. 
 7 mu         0.7     289.      1.13       7.73e- 4   27475. 
 8 mu         0.8    1086.      0.962      2.01e- 6  103424. 
 9 mu         0.9    1816.      0.157      4.91e-11  170217. 
10 mu_1       0.1       8.42    0.000332   2.42e-15     604. 
11 mu_1       0.2       5.45    0.0272     2.82e-10     235. 
12 mu_1       0.3       3.44    0.269      2.43e- 7      80.9
13 mu_1       0.4       2.69    0.715      2.77e- 5      68.1
14 mu_1       0.5       8.49    1.18       1.03e- 3     623. 
15 mu_1       0.6      66.3     1.27       1.39e- 2    6143. 
16 mu_1       0.7     367.      1.10       2.21e- 4   34888. 
17 mu_1       0.8    1208.      0.813      5.02e- 7  114916. 
18 mu_1       0.9    1798.      0.131      1.09e-11  168115. 
19 mu_0       0.1       6.44    0.0000201  0            537. 
20 mu_0       0.2       7.23    0.00350    0            471. 
21 mu_0       0.3       5.46    0.0505     0            277. 
22 mu_0       0.4       3.59    0.249      0            126. 
23 mu_0       0.5       3.23    0.721      0             77.9
24 mu_0       0.6      13.9     1.12       0           1152. 
25 mu_0       0.7     108.      1.22       0          10176. 
26 mu_0       0.8     598.      1.03       0          57458. 
27 mu_0       0.9    1981.      0.376      0         189130. 
[1] "Total run time was 496.577 seconds"
