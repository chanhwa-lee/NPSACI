
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1199"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6 10  6 11  5  9  6  5  4  4  2  6  6  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03155 0.36379 0.60312 0.97820 6.00000 
[1] "event indicator table: "

  0   1 
711 488 
[1] "treatment indicator table: "

  0   1 
440 759 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 569
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 3844.718 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.248 0.137 
 2 mu         0.1   0.2 0.306 0.181 
 3 mu         0.1   0.3 0.486 0.0746
 4 mu         0.1   0.4 0.484 0.0680
 5 mu         0.1   0.5 0.464 0.0607
 6 mu         0.2   0.1 0.327 0.0807
 7 mu         0.2   0.2 0.395 0.111 
 8 mu         0.2   0.3 0.490 0.0693
 9 mu         0.2   0.4 0.519 0.0710
10 mu         0.2   0.5 0.510 0.0623
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.809        0.989   0.00265      1.67
 2 mu         0.2      0.904        1       0.0552       1.85
 3 mu         0.3      0.972        1       0.250        1.59
 4 mu         0.4      1.00         1       0.556        1.45
 5 mu         0.5      1.00         1       0.760        1.24
 6 mu         0.6      0.999        1       0.885        1.11
 7 mu         0.7      1.00         1       0.897        1.11
 8 mu         0.8      1.00         1       0.805        1.32
 9 mu         0.9      1.00         1       0.524        1.76
10 mu_1       0.1      0.866        1       0.0118       1.70
11 mu_1       0.2      0.948        1       0.130        1.92
12 mu_1       0.3      0.995        1       0.412        1.57
13 mu_1       0.4      1.01         1       0.704        1.38
14 mu_1       0.5      1.00         1       0.860        1.20
15 mu_1       0.6      0.999        1       0.874        1.08
16 mu_1       0.7      1.00         1       0.888        1.14
17 mu_1       0.8      1.00         1       0.762        1.38
18 mu_1       0.9      1.00         1       0.481        1.81
19 mu_0       0.1      0.803        0.992   0.00163      1.75
20 mu_0       0.2      0.893        1       0.0366       1.83
21 mu_0       0.3      0.963        1       0.181        1.67
22 mu_0       0.4      0.997        1       0.458        1.49
23 mu_0       0.5      1.00         1       0.660        1.27
24 mu_0       0.6      1.00         1       0.833        1.15
25 mu_0       0.7      0.999        1       0.862        1.08
26 mu_0       0.8      1.00         1       0.886        1.10
27 mu_0       0.9      1.00         1       0.768        1.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     129.      0.000222   3.75e-18  10458.  
 2 mu         0.2      72.8     0.0127     1.97e-12   5089.  
 3 mu         0.3      28.8     0.140      4.36e- 9   1538.  
 4 mu         0.4       9.94    0.504      1.03e- 6    570.  
 5 mu         0.5       3.54    0.940      7.15e- 5    199.  
 6 mu         0.6       1.66    1.16       2.29e- 3     50.0 
 7 mu         0.7       1.36    1.05       1.26e- 2      8.84
 8 mu         0.8       1.79    0.740      1.90e- 4     29.0 
 9 mu         0.9       3.10    0.114      8.10e- 8    105.  
10 mu_1       0.1     111.      0.00110    0          8044.  
11 mu_1       0.2      33.7     0.0387     0          1957.  
12 mu_1       0.3      10.1     0.294      0           524.  
13 mu_1       0.4       3.47    0.777      0           178.  
14 mu_1       0.5       1.67    1.10       0            49.7 
15 mu_1       0.6       1.26    1.08       0            10.4 
16 mu_1       0.7       1.36    1.11       0            11.5 
17 mu_1       0.8       1.89    0.645      0            32.2 
18 mu_1       0.9       3.22    0.0799     0           117.  
19 mu_0       0.1     131.      0.0000634  0         10726.  
20 mu_0       0.2      82.6     0.00575    0          5872.  
21 mu_0       0.3      36.8     0.0600     0          2027.  
22 mu_0       0.4      14.3     0.303      0           831.  
23 mu_0       0.5       5.40    0.720      0           348.  
24 mu_0       0.6       2.27    0.981      0           109.  
25 mu_0       0.7       1.35    1.10       0            22.7 
26 mu_0       0.8       1.37    0.904      0            16.1 
27 mu_0       0.9       2.00    0.141      0            53.0 
[1] "Total run time was 3852.418 seconds"
