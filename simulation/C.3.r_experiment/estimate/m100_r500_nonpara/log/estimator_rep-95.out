
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1227"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 16 17 18 19 20 
 6  8  6  8  8  6 10  4  6  5  3  7  6 10  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0448  0.3737  0.6189  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
773 454 
[1] "treatment indicator table: "

  0   1 
419 808 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 588
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 1008.656 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.412 0.0795
 2 mu         0.1   0.2 0.464 0.0716
 3 mu         0.1   0.3 0.557 0.0617
 4 mu         0.1   0.4 0.630 0.0890
 5 mu         0.1   0.5 0.628 0.0836
 6 mu         0.2   0.1 0.375 0.0546
 7 mu         0.2   0.2 0.461 0.0564
 8 mu         0.2   0.3 0.543 0.0492
 9 mu         0.2   0.4 0.616 0.0623
10 mu         0.2   0.5 0.623 0.0585
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.888            1    0.0854      2.35
 2 mu         0.2      1.00             1    0.332       2.86
 3 mu         0.3      1.02             1    0.589       1.69
 4 mu         0.4      1.01             1    0.793       1.30
 5 mu         0.5      1.00             1    0.852       1.24
 6 mu         0.6      0.998            1    0.912       1.13
 7 mu         0.7      0.998            1    0.936       1.08
 8 mu         0.8      1.00             1    0.889       1.16
 9 mu         0.9      1.00             1    0.764       1.27
10 mu_1       0.1      0.999            1    0.219       3.36
11 mu_1       0.2      1.03             1    0.498       2.50
12 mu_1       0.3      1.02             1    0.715       1.45
13 mu_1       0.4      1.01             1    0.826       1.30
14 mu_1       0.5      1.00             1    0.864       1.21
15 mu_1       0.6      0.997            1    0.925       1.10
16 mu_1       0.7      0.999            1    0.929       1.09
17 mu_1       0.8      1.00             1    0.882       1.17
18 mu_1       0.9      1.00             1    0.749       1.28
19 mu_0       0.1      0.876            1    0.0706      2.32
20 mu_0       0.2      0.994            1    0.291       2.95
21 mu_0       0.3      1.02             1    0.535       1.85
22 mu_0       0.4      1.01             1    0.740       1.35
23 mu_0       0.5      1.00             1    0.841       1.27
24 mu_0       0.6      0.999            1    0.887       1.18
25 mu_0       0.7      0.997            1    0.917       1.08
26 mu_0       0.8      0.998            1    0.915       1.12
27 mu_0       0.9      1.00             1    0.846       1.21
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.400    0.0000952  3.59e-15     16.0 
 2 mu         0.2      0.691    0.00671    7.44e-10     14.1 
 3 mu         0.3      1.00     0.0700     8.17e- 7     11.9 
 4 mu         0.4      1.17     0.293      9.32e- 5      8.55
 5 mu         0.5      1.13     0.686      3.45e- 3      5.16
 6 mu         0.6      1.02     0.929      6.12e- 2      3.47
 7 mu         0.7      1.01     0.932      3.43e- 2      3.40
 8 mu         0.8      1.15     0.943      4.48e- 4      4.65
 9 mu         0.9      1.26     0.236      1.25e- 7     15.1 
10 mu_1       0.1      0.775    0.000651   3.23e-14     21.7 
11 mu_1       0.2      0.894    0.0265     3.35e- 9     13.5 
12 mu_1       0.3      1.10     0.159      2.52e- 6      9.00
13 mu_1       0.4      1.16     0.486      2.20e- 4      7.10
14 mu_1       0.5      1.07     0.848      6.51e- 3      4.63
15 mu_1       0.6      0.983    0.971      6.86e- 2      3.30
16 mu_1       0.7      1.02     0.927      9.16e- 3      3.32
17 mu_1       0.8      1.18     0.810      1.96e- 4      4.90
18 mu_1       0.9      1.26     0.173      4.86e- 8     15.8 
19 mu_0       0.1      0.359    0.0000290  0            15.6 
20 mu_0       0.2      0.641    0.00221    0            15.4 
21 mu_0       0.3      0.959    0.0366     0            13.6 
22 mu_0       0.4      1.18     0.145      0            11.4 
23 mu_0       0.5      1.19     0.415      0             8.25
24 mu_0       0.6      1.07     0.794      0             5.07
25 mu_0       0.7      0.976    0.906      0             3.58
26 mu_0       0.8      1.05     1.02       0             3.79
27 mu_0       0.9      1.25     0.377      0             8.37
[1] "Total run time was 1014.156 seconds"
