
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1234"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
12  4  3  6  6  6  8  6  3 11  8  2  6  8  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04036 0.34416 0.60361 1.00000 8.00000 
[1] "event indicator table: "

  0   1 
716 518 
[1] "treatment indicator table: "

  0   1 
454 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 678.55 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.219 0.135 
 2 mu         0.1   0.2 0.195 0.168 
 3 mu         0.1   0.3 0.216 0.218 
 4 mu         0.1   0.4 0.179 0.278 
 5 mu         0.1   0.5 0.160 0.304 
 6 mu         0.2   0.1 0.264 0.0987
 7 mu         0.2   0.2 0.258 0.108 
 8 mu         0.2   0.3 0.294 0.142 
 9 mu         0.2   0.4 0.279 0.177 
10 mu         0.2   0.5 0.282 0.191 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.753        0.991 0.00000369      2.72
 2 mu         0.2      0.839        1     0.00134         4.12
 3 mu         0.3      0.898        1     0.0253          2.58
 4 mu         0.4      0.947        1     0.139           1.47
 5 mu         0.5      0.977        1     0.382           1.27
 6 mu         0.6      0.991        1     0.684           1.18
 7 mu         0.7      0.999        1     0.914           1.09
 8 mu         0.8      1.00         1     0.803           1.12
 9 mu         0.9      1.00         1     0.622           1.46
10 mu_1       0.1      0.813        1     0.0000186       4.61
11 mu_1       0.2      0.874        1     0.00343         3.74
12 mu_1       0.3      0.925        1     0.0446          1.96
13 mu_1       0.4      0.964        1     0.193           1.35
14 mu_1       0.5      0.984        1     0.455           1.27
15 mu_1       0.6      0.994        1     0.741           1.14
16 mu_1       0.7      1.00         1     0.921           1.10
17 mu_1       0.8      1.00         1     0.787           1.11
18 mu_1       0.9      1.00         1     0.588           1.50
19 mu_0       0.1      0.746        0.988 0.00000203      2.51
20 mu_0       0.2      0.830        1.00  0.000812        4.21
21 mu_0       0.3      0.886        1     0.0170          2.84
22 mu_0       0.4      0.936        1     0.103           1.61
23 mu_0       0.5      0.970        1     0.308           1.28
24 mu_0       0.6      0.987        1     0.598           1.23
25 mu_0       0.7      0.996        1     0.837           1.10
26 mu_0       0.8      1.00         1     0.869           1.13
27 mu_0       0.9      0.995        1     0.647           1.14
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value  max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>      <dbl>
 1 mu         0.1   22655.      0.000114   9.28e-17 2164137.  
 2 mu         0.2    7577.      0.00682    2.43e-11  657468.  
 3 mu         0.3    1641.      0.0781     3.59e- 8  116438.  
 4 mu         0.4     279.      0.368      6.38e- 6   13179.  
 5 mu         0.5      41.0     0.912      3.54e- 4    2165.  
 6 mu         0.6       6.00    1.13       9.42e- 3     214.  
 7 mu         0.7       1.65    1.27       2.97e- 2      12.8 
 8 mu         0.8       1.25    0.905      6.12e- 4       5.44
 9 mu         0.9       1.41    0.126      1.05e- 8      14.2 
10 mu_1       0.1   14177.      0.000717   0        1273022.  
11 mu_1       0.2    2666.      0.0236     0         193373.  
12 mu_1       0.3     471.      0.175      0          22831.  
13 mu_1       0.4      81.1     0.612      0           4413.  
14 mu_1       0.5      13.9     1.08       0            619.  
15 mu_1       0.6       2.90    1.21       0             51.0 
16 mu_1       0.7       1.35    1.19       0              6.64
17 mu_1       0.8       1.24    0.746      0              6.12
18 mu_1       0.9       1.44    0.0901     0             15.8 
19 mu_0       0.1   23597.      0.0000361  0        2263149.  
20 mu_0       0.2    8805.      0.00253    0         773491.  
21 mu_0       0.3    2142.      0.0327     0         156555.  
22 mu_0       0.4     411.      0.172      0          20673.  
23 mu_0       0.5      68.1     0.603      0           3712.  
24 mu_0       0.6      10.7     1.06       0            459.  
25 mu_0       0.7       2.33    1.11       0             27.1 
26 mu_0       0.8       1.31    1.09       0              6.99
27 mu_0       0.9       1.20    0.266      0              9.79
[1] "Total run time was 683.261 seconds"
