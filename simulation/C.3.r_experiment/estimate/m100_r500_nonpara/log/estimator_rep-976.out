
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1270"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  2  4  4 11  2 10  6  6  9  9  8  7  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03323 0.33347 0.59787 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
769 501 
[1] "treatment indicator table: "

  0   1 
482 788 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 367.94 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.305 0.0736
 2 mu         0.1   0.2 0.370 0.108 
 3 mu         0.1   0.3 0.508 0.0990
 4 mu         0.1   0.4 0.494 0.124 
 5 mu         0.1   0.5 0.509 0.136 
 6 mu         0.2   0.1 0.314 0.0466
 7 mu         0.2   0.2 0.391 0.0591
 8 mu         0.2   0.3 0.490 0.0614
 9 mu         0.2   0.4 0.510 0.0681
10 mu         0.2   0.5 0.535 0.0748
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.995        0.984    0.110       5.39
 2 mu         0.2      1.02         1        0.517       2.07
 3 mu         0.3      1.01         1        0.767       1.33
 4 mu         0.4      1.00         1        0.823       1.19
 5 mu         0.5      1.00         1        0.861       1.10
 6 mu         0.6      1.00         1        0.930       1.08
 7 mu         0.7      1.00         1        0.912       1.12
 8 mu         0.8      1.00         1        0.894       1.16
 9 mu         0.9      0.992        1        0.783       1.20
10 mu_1       0.1      1.03         1        0.255       2.75
11 mu_1       0.2      1.02         1        0.675       1.71
12 mu_1       0.3      1.01         1        0.814       1.24
13 mu_1       0.4      1.00         1        0.821       1.13
14 mu_1       0.5      1.00         1        0.888       1.08
15 mu_1       0.6      1.00         1        0.933       1.09
16 mu_1       0.7      1.00         1        0.911       1.14
17 mu_1       0.8      1.00         1        0.881       1.16
18 mu_1       0.9      0.991        1        0.768       1.21
19 mu_0       0.1      0.991        0.970    0.0939      5.92
20 mu_0       0.2      1.03         1        0.475       2.16
21 mu_0       0.3      1.01         1        0.737       1.43
22 mu_0       0.4      1.00         1        0.799       1.23
23 mu_0       0.5      1.00         1        0.834       1.13
24 mu_0       0.6      1.00         1        0.920       1.07
25 mu_0       0.7      1.00         1        0.914       1.10
26 mu_0       0.8      1.00         1        0.926       1.18
27 mu_0       0.9      0.997        1        0.773       1.15
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.524    0.000128   5.52e-16     10.6 
 2 mu         0.2      1.35     0.00746    7.23e-11     36.6 
 3 mu         0.3      1.68     0.101      7.12e- 8     32.7 
 4 mu         0.4      1.53     0.416      9.48e- 6     14.4 
 5 mu         0.5      1.22     0.968      4.21e- 4      5.47
 6 mu         0.6      0.992    0.917      9.34e- 3      2.79
 7 mu         0.7      0.948    0.949      7.48e- 3      2.77
 8 mu         0.8      1.12     0.646      6.56e- 5      4.40
 9 mu         0.9      1.28     0.0539     1.28e- 8     10.3 
10 mu_1       0.1      1.17     0.000881   5.52e-15     24.9 
11 mu_1       0.2      1.73     0.0252     3.62e-10     43.1 
12 mu_1       0.3      1.67     0.219      2.37e- 7     25.6 
13 mu_1       0.4      1.38     0.649      2.37e- 5      9.31
14 mu_1       0.5      1.10     0.943      8.42e- 4      3.98
15 mu_1       0.6      0.943    0.811      1.56e- 2      2.67
16 mu_1       0.7      0.967    0.986      2.51e- 3      2.96
17 mu_1       0.8      1.15     0.511      1.93e- 5      4.95
18 mu_1       0.9      1.27     0.0356     3.35e- 9     10.7 
19 mu_0       0.1      0.453    0.0000374  0             8.99
20 mu_0       0.2      1.25     0.00257    0            35.0 
21 mu_0       0.3      1.68     0.0363     0            35.7 
22 mu_0       0.4      1.63     0.234      0            18.1 
23 mu_0       0.5      1.35     0.782      0             8.20
24 mu_0       0.6      1.07     1.02       0             3.48
25 mu_0       0.7      0.904    0.770      0             2.67
26 mu_0       0.8      0.959    0.942      0             3.41
27 mu_0       0.9      1.33     0.136      0             9.17
[1] "Total run time was 371.685 seconds"
