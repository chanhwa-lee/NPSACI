
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1213"
[1] "cluster size dist'n: "

 6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  9  9  9 10  4  7  8  9  7  5  4  2  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03558 0.39986 0.62872 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
731 482 
[1] "treatment indicator table: "

  0   1 
454 759 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 366.167 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.478 0.0892
 2 mu         0.1   0.2 0.595 0.0805
 3 mu         0.1   0.3 0.698 0.108 
 4 mu         0.1   0.4 0.726 0.0990
 5 mu         0.1   0.5 0.803 0.124 
 6 mu         0.2   0.1 0.420 0.0510
 7 mu         0.2   0.2 0.532 0.0422
 8 mu         0.2   0.3 0.623 0.0716
 9 mu         0.2   0.4 0.660 0.0612
10 mu         0.2   0.5 0.736 0.0864
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04             1    0.0284      7.18
 2 mu         0.2      1.05             1    0.259       3.12
 3 mu         0.3      1.03             1    0.620       1.60
 4 mu         0.4      1.01             1    0.863       1.24
 5 mu         0.5      1.00             1    0.900       1.12
 6 mu         0.6      0.999            1    0.936       1.06
 7 mu         0.7      0.997            1    0.899       1.08
 8 mu         0.8      0.997            1    0.875       1.18
 9 mu         0.9      0.991            1    0.621       1.39
10 mu_1       0.1      1.06             1    0.0782      4.97
11 mu_1       0.2      1.04             1    0.401       2.05
12 mu_1       0.3      1.02             1    0.747       1.43
13 mu_1       0.4      1.01             1    0.888       1.17
14 mu_1       0.5      1.00             1    0.913       1.08
15 mu_1       0.6      0.998            1    0.929       1.06
16 mu_1       0.7      0.996            1    0.895       1.09
17 mu_1       0.8      0.996            1    0.847       1.20
18 mu_1       0.9      0.990            1    0.582       1.41
19 mu_0       0.1      1.04             1    0.0229      7.42
20 mu_0       0.2      1.06             1    0.224       3.53
21 mu_0       0.3      1.04             1    0.566       1.74
22 mu_0       0.4      1.02             1    0.827       1.29
23 mu_0       0.5      1.01             1    0.888       1.15
24 mu_0       0.6      1.00             1    0.946       1.07
25 mu_0       0.7      0.998            1    0.909       1.07
26 mu_0       0.8      0.997            1    0.886       1.10
27 mu_0       0.9      1.00             1    0.792       1.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       9.03    0.0000420  2.58e-15    425.  
 2 mu         0.2       8.10    0.00597    6.00e-10    345.  
 3 mu         0.3       4.48    0.0785     7.76e- 7    156.  
 4 mu         0.4       2.17    0.404      1.18e- 4     44.2 
 5 mu         0.5       1.29    0.994      5.46e- 3     10.7 
 6 mu         0.6       1.12    1.06       1.15e- 1      2.78
 7 mu         0.7       1.20    1.23       2.19e- 2      3.72
 8 mu         0.8       1.42    0.691      3.29e- 4     10.3 
 9 mu         0.9       1.86    0.0716     1.02e- 7     43.0 
10 mu_1       0.1      11.5     0.000267   2.44e-14    507.  
11 mu_1       0.2       5.67    0.0187     2.84e- 9    246.  
12 mu_1       0.3       2.50    0.169      2.45e- 6     74.5 
13 mu_1       0.4       1.33    0.636      2.80e- 4     15.6 
14 mu_1       0.5       1.06    1.08       1.03e- 2      2.68
15 mu_1       0.6       1.10    1.08       1.09e- 1      3.17
16 mu_1       0.7       1.24    1.23       6.67e- 3      4.61
17 mu_1       0.8       1.48    0.549      5.88e- 5     12.2 
18 mu_1       0.9       1.89    0.0512     1.61e- 8     45.2 
19 mu_0       0.1       8.76    0.0000147  0           425.  
20 mu_0       0.2       8.71    0.00261    0           370.  
21 mu_0       0.3       5.33    0.0415     0           192.  
22 mu_0       0.4       2.74    0.242      0            66.3 
23 mu_0       0.5       1.52    0.790      0            19.3 
24 mu_0       0.6       1.14    1.11       0             3.88
25 mu_0       0.7       1.11    1.05       0             3.86
26 mu_0       0.8       1.20    1.02       0             6.26
27 mu_0       0.9       1.56    0.124      0            22.6 
[1] "Total run time was 369.297 seconds"
