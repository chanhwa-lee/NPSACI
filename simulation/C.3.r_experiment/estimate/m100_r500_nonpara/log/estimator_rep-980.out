
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1233"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  4 12  6  8  8  6  3  8  6  7  5  6  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04623 0.35514 0.63405 1.00000 4.41990 
[1] "event indicator table: "

  0   1 
756 477 
[1] "treatment indicator table: "

  0   1 
419 814 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 669
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 564
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 350.236 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.420 0.0789
 2 mu         0.1   0.2 0.490 0.0568
 3 mu         0.1   0.3 0.572 0.0579
 4 mu         0.1   0.4 0.601 0.0573
 5 mu         0.1   0.5 0.622 0.0546
 6 mu         0.2   0.1 0.353 0.0603
 7 mu         0.2   0.2 0.440 0.0443
 8 mu         0.2   0.3 0.497 0.0405
 9 mu         0.2   0.4 0.540 0.0453
10 mu         0.2   0.5 0.568 0.0432
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02             1     0.291      1.98
 2 mu         0.2      1.01             1     0.658      1.40
 3 mu         0.3      1.01             1     0.657      1.26
 4 mu         0.4      1.00             1     0.812      1.14
 5 mu         0.5      1.00             1     0.893      1.09
 6 mu         0.6      0.999            1     0.927      1.07
 7 mu         0.7      0.999            1     0.922      1.09
 8 mu         0.8      0.998            1     0.922      1.13
 9 mu         0.9      0.995            1     0.864      1.21
10 mu_1       0.1      1.02             1     0.535      1.71
11 mu_1       0.2      1.01             1     0.585      1.34
12 mu_1       0.3      1.00             1     0.701      1.19
13 mu_1       0.4      1.00             1     0.855      1.12
14 mu_1       0.5      1.00             1     0.904      1.09
15 mu_1       0.6      0.999            1     0.933      1.07
16 mu_1       0.7      0.998            1     0.919      1.09
17 mu_1       0.8      0.998            1     0.911      1.13
18 mu_1       0.9      0.995            1     0.854      1.22
19 mu_0       0.1      1.02             1     0.256      2.10
20 mu_0       0.2      1.02             1     0.676      1.44
21 mu_0       0.3      1.01             1     0.639      1.29
22 mu_0       0.4      1.00             1     0.777      1.17
23 mu_0       0.5      1.00             1     0.867      1.10
24 mu_0       0.6      1.00             1     0.917      1.08
25 mu_0       0.7      0.999            1     0.928      1.09
26 mu_0       0.8      0.999            1     0.918      1.12
27 mu_0       0.9      1.00             1     0.868      1.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.34    0.0000247  3.76e-16     83.4 
 2 mu         0.2       1.12    0.00451    8.77e-11     32.0 
 3 mu         0.3       1.01    0.0585     1.13e- 7     14.1 
 4 mu         0.4       1.06    0.253      1.72e- 5     11.4 
 5 mu         0.5       1.09    0.711      7.98e- 4      5.26
 6 mu         0.6       1.08    1.03       5.87e- 3      3.83
 7 mu         0.7       1.09    0.974      1.22e- 4      3.78
 8 mu         0.8       1.15    1.21       4.78e- 7      3.48
 9 mu         0.9       1.22    0.282      3.28e-11      7.84
10 mu_1       0.1       1.42    0.000151   3.57e-15     55.6 
11 mu_1       0.2       1.03    0.0155     4.15e-10     18.5 
12 mu_1       0.3       1.04    0.137      3.58e- 7     13.2 
13 mu_1       0.4       1.10    0.438      4.08e- 5     10.0 
14 mu_1       0.5       1.10    0.932      1.51e- 3      4.99
15 mu_1       0.6       1.08    0.996      6.52e- 4      3.55
16 mu_1       0.7       1.10    1.07       1.16e- 5      3.78
17 mu_1       0.8       1.17    1.21       3.98e- 8      3.84
18 mu_1       0.9       1.23    0.222      2.43e-12      8.72
19 mu_0       0.1       1.33    0.0000107  0            86.4 
20 mu_0       0.2       1.15    0.00167    0            37.4 
21 mu_0       0.3       1.00    0.0219     0            15.4 
22 mu_0       0.4       1.03    0.109      0            12.4 
23 mu_0       0.5       1.07    0.410      0             6.62
24 mu_0       0.6       1.07    0.844      0             4.26
25 mu_0       0.7       1.05    1.00       0             3.88
26 mu_0       0.8       1.07    0.965      0             3.47
27 mu_0       0.9       1.11    0.362      0             5.99
[1] "Total run time was 353.757 seconds"
