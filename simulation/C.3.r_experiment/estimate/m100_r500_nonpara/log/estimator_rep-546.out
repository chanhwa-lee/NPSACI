
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 500"
[1] "m: 100"
[1] "N_total: 1232"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  7  8  5  7  5  9  4  8 12  4  7  2  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05843 0.39607 0.63233 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
730 502 
[1] "treatment indicator table: "

  0   1 
439 793 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 384.684 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.213 0.142
 2 mu         0.1   0.2 0.243 0.176
 3 mu         0.1   0.3 0.292 0.135
 4 mu         0.1   0.4 0.290 0.151
 5 mu         0.1   0.5 0.280 0.173
 6 mu         0.2   0.1 0.235 0.121
 7 mu         0.2   0.2 0.273 0.150
 8 mu         0.2   0.3 0.324 0.114
 9 mu         0.2   0.4 0.337 0.131
10 mu         0.2   0.5 0.339 0.150
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.823        0.962   0.00229      2.99
 2 mu         0.2      0.927        1       0.0807       3.39
 3 mu         0.3      0.972        1       0.349        2.27
 4 mu         0.4      0.992        1       0.607        1.48
 5 mu         0.5      0.999        1       0.806        1.22
 6 mu         0.6      1.00         1       0.910        1.15
 7 mu         0.7      0.998        1       0.926        1.09
 8 mu         0.8      0.993        1       0.758        1.21
 9 mu         0.9      0.983        1       0.471        1.38
10 mu_1       0.1      0.910        1       0.00820      4.43
11 mu_1       0.2      0.960        1       0.151        2.89
12 mu_1       0.3      0.984        1       0.458        1.74
13 mu_1       0.4      0.996        1       0.691        1.26
14 mu_1       0.5      1.00         1       0.863        1.20
15 mu_1       0.6      1.00         1       0.923        1.13
16 mu_1       0.7      0.997        1       0.902        1.10
17 mu_1       0.8      0.991        1       0.726        1.24
18 mu_1       0.9      0.982        1       0.445        1.41
19 mu_0       0.1      0.813        0.938   0.00163      2.83
20 mu_0       0.2      0.918        1       0.0631       3.51
21 mu_0       0.3      0.967        1       0.303        2.50
22 mu_0       0.4      0.989        1       0.550        1.63
23 mu_0       0.5      0.998        1       0.749        1.24
24 mu_0       0.6      1.00         1       0.871        1.18
25 mu_0       0.7      1.00         1       0.920        1.13
26 mu_0       0.8      0.997        1       0.886        1.12
27 mu_0       0.9      0.991        1       0.705        1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      32.3     0.0000938  5.08e-17   2939.  
 2 mu         0.2      18.5     0.00880    2.37e-11   1430.  
 3 mu         0.3       7.77    0.0827     4.45e- 8    432.  
 4 mu         0.4       3.03    0.363      5.92e- 6     90.6 
 5 mu         0.5       1.53    0.861      2.63e- 4     16.1 
 6 mu         0.6       1.25    1.11       5.84e- 3      4.87
 7 mu         0.7       1.33    0.994      1.07e- 3      7.03
 8 mu         0.8       1.40    0.977      5.49e- 6     11.9 
 9 mu         0.9       1.32    0.242      4.77e-10     16.3 
10 mu_1       0.1      27.3     0.000708   4.83e-16   2261.  
11 mu_1       0.2       9.74    0.0295     1.12e-10    550.  
12 mu_1       0.3       3.94    0.184      1.45e- 7    119.  
13 mu_1       0.4       1.87    0.625      1.48e- 5     43.6 
14 mu_1       0.5       1.29    0.991      5.26e- 4      8.29
15 mu_1       0.6       1.24    1.05       9.73e- 3      4.70
16 mu_1       0.7       1.34    1.02       2.71e- 4      8.37
17 mu_1       0.8       1.38    0.889      1.21e- 6     12.4 
18 mu_1       0.9       1.30    0.181      9.35e-11     16.9 
19 mu_0       0.1      32.8     0.0000291  0          3015.  
20 mu_0       0.2      20.7     0.00282    0          1650.  
21 mu_0       0.3       9.41    0.0351     0           570.  
22 mu_0       0.4       3.81    0.213      0           139.  
23 mu_0       0.5       1.76    0.672      0            25.1 
24 mu_0       0.6       1.27    1.07       0             9.48
25 mu_0       0.7       1.30    1.09       0             5.00
26 mu_0       0.8       1.46    1.13       0             9.90
27 mu_0       0.9       1.52    0.435      0            16.1 
[1] "Total run time was 388.459 seconds"
