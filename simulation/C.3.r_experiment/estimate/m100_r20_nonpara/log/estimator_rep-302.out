
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1211"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  9  8  5  8  5  7  4  7  5 10  5  5  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03479 0.34847 0.59286 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
729 482 
[1] "treatment indicator table: "

  0   1 
463 748 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 64.587 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.281 0.120 
 2 mu         0.1   0.2 0.352 0.141 
 3 mu         0.1   0.3 0.422 0.128 
 4 mu         0.1   0.4 0.485 0.137 
 5 mu         0.1   0.5 0.520 0.141 
 6 mu         0.2   0.1 0.283 0.0775
 7 mu         0.2   0.2 0.354 0.0933
 8 mu         0.2   0.3 0.422 0.0826
 9 mu         0.2   0.4 0.499 0.0900
10 mu         0.2   0.5 0.540 0.0941
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.925        0.487 0.0000815     15.3 
 2 mu         0.2      1.02         0.839 0.00946        6.56
 3 mu         0.3      1.01         0.978 0.103          3.15
 4 mu         0.4      0.994        0.967 0.382          1.69
 5 mu         0.5      0.998        0.995 0.673          1.63
 6 mu         0.6      0.999        1.00  0.737          1.37
 7 mu         0.7      0.993        0.997 0.636          1.32
 8 mu         0.8      0.991        0.992 0.379          1.61
 9 mu         0.9      0.988        0.918 0.0414         2.51
10 mu_1       0.1      1.04         0.796 0.000413       7.92
11 mu_1       0.2      1.03         0.970 0.0245         4.13
12 mu_1       0.3      1.00         0.982 0.183          1.96
13 mu_1       0.4      0.996        0.986 0.496          1.74
14 mu_1       0.5      1.00         1.00  0.643          1.55
15 mu_1       0.6      0.999        1.01  0.717          1.31
16 mu_1       0.7      0.993        0.999 0.581          1.36
17 mu_1       0.8      0.993        0.986 0.324          1.77
18 mu_1       0.9      0.988        0.908 0.0322         2.62
19 mu_0       0.1      0.912        0.432 0.0000447     16.5 
20 mu_0       0.2      1.02         0.771 0.00570        7.74
21 mu_0       0.3      1.01         0.964 0.0688         3.65
22 mu_0       0.4      0.993        0.957 0.302          2.01
23 mu_0       0.5      0.995        0.996 0.604          1.70
24 mu_0       0.6      0.999        0.997 0.671          1.46
25 mu_0       0.7      0.993        1.01  0.677          1.31
26 mu_0       0.8      0.985        0.998 0.474          1.52
27 mu_0       0.9      0.993        1.00  0.124          2.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.09     0.0000902  8.20e-15     90.9 
 2 mu         0.2      2.63     0.0101     9.55e-10     78.6 
 3 mu         0.3      1.72     0.100      8.23e- 7     33.2 
 4 mu         0.4      1.10     0.356      9.39e- 5      9.10
 5 mu         0.5      0.985    0.866      3.48e- 3      3.11
 6 mu         0.6      1.02     1.04       2.07e- 2      2.31
 7 mu         0.7      1.08     1.12       5.13e- 4      2.50
 8 mu         0.8      1.14     0.710      2.00e- 6      4.10
 9 mu         0.9      1.07     0.132      9.78e-11     15.2 
10 mu_1       0.1      3.32     0.000659   7.74e-14    121.  
11 mu_1       0.2      2.35     0.0302     4.51e- 9     56.3 
12 mu_1       0.3      1.30     0.220      2.59e- 6     19.5 
13 mu_1       0.4      0.970    0.566      2.22e- 4      4.01
14 mu_1       0.5      0.980    0.883      6.56e- 3      2.93
15 mu_1       0.6      1.03     1.10       7.28e- 3      2.13
16 mu_1       0.7      1.10     1.10       1.54e- 4      2.68
17 mu_1       0.8      1.15     0.568      5.26e- 7      4.84
18 mu_1       0.9      1.05     0.0946     2.29e-11     15.9 
19 mu_0       0.1      1.96     0.0000307  0            87.5 
20 mu_0       0.2      2.70     0.00468    0            85.2 
21 mu_0       0.3      1.90     0.0394     0            39.1 
22 mu_0       0.4      1.19     0.234      0            12.5 
23 mu_0       0.5      0.990    0.623      0             4.94
24 mu_0       0.6      0.997    1.04       0             2.56
25 mu_0       0.7      1.04     1.07       0             2.20
26 mu_0       0.8      1.12     1.08       0             3.64
27 mu_0       0.9      1.22     0.455      0             8.44
[1] "Total run time was 67.665 seconds"
