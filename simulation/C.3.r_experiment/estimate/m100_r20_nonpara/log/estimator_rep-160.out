
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1290"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  9  6  7  4  5  5  4 10  7  7  3  8  9  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04283 0.45389 0.68438 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
750 540 
[1] "treatment indicator table: "

  0   1 
465 825 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 183.318 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 1.10  0.559
 2 mu         0.1   0.2 1.15  0.607
 3 mu         0.1   0.3 1.18  0.623
 4 mu         0.1   0.4 1.34  0.696
 5 mu         0.1   0.5 1.38  0.726
 6 mu         0.2   0.1 0.882 0.327
 7 mu         0.2   0.2 0.919 0.344
 8 mu         0.2   0.3 0.947 0.352
 9 mu         0.2   0.4 1.07  0.393
10 mu         0.2   0.5 1.11  0.408
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1       2.29       0.0863 0.00000000694    128.  
 2 mu         0.2       1.85       0.412  0.0000265         61.5 
 3 mu         0.3       1.49       0.807  0.00220           41.6 
 4 mu         0.4       1.21       0.960  0.0353            18.7 
 5 mu         0.5       1.07       0.964  0.212              5.98
 6 mu         0.6       1.02       1.02   0.482              1.77
 7 mu         0.7       1.01       1.03   0.430              1.62
 8 mu         0.8       1.02       1.00   0.289              1.80
 9 mu         0.9       1.04       1.02   0.112              3.48
10 mu_1       0.1       1.54       0.250  0.0000000453      80.6 
11 mu_1       0.2       1.49       0.687  0.0000870         55.9 
12 mu_1       0.3       1.25       0.928  0.00484           25.3 
13 mu_1       0.4       1.09       0.978  0.0587             8.68
14 mu_1       0.5       1.03       1.01   0.286              2.51
15 mu_1       0.6       1.02       1.01   0.527              1.53
16 mu_1       0.7       1.01       1.03   0.389              1.68
17 mu_1       0.8       1.02       1.01   0.282              1.93
18 mu_1       0.9       1.04       0.997  0.0932             3.62
19 mu_0       0.1       2.37       0.0670 0.00000000268    143.  
20 mu_0       0.2       1.94       0.329  0.0000114         62.9 
21 mu_0       0.3       1.59       0.765  0.00107           48.6 
22 mu_0       0.4       1.28       0.944  0.0196            25.3 
23 mu_0       0.5       1.10       0.959  0.137              9.44
24 mu_0       0.6       1.03       1.01   0.411              2.69
25 mu_0       0.7       1.01       1.01   0.525              1.48
26 mu_0       0.8       1.00       1.02   0.316              1.90
27 mu_0       0.9       1.02       0.989  0.268              2.31
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      21.5     0.0000561  3.35e-17   2120.  
 2 mu         0.2       6.92    0.00560    1.56e-11    644.  
 3 mu         0.3       2.15    0.0946     3.03e- 8    114.  
 4 mu         0.4       1.52    0.403      6.13e- 6     24.0 
 5 mu         0.5       1.42    0.872      3.55e- 4     15.4 
 6 mu         0.6       1.28    0.968      9.06e- 3      8.36
 7 mu         0.7       1.18    1.07       3.45e- 4      5.32
 8 mu         0.8       1.21    0.812      6.00e- 7      6.65
 9 mu         0.9       1.46    0.187      1.03e-11     15.7 
10 mu_1       0.1      12.6     0.000296   0          1247.  
11 mu_1       0.2       2.56    0.0141     0           189.  
12 mu_1       0.3       1.47    0.188      0            22.6 
13 mu_1       0.4       1.50    0.620      0            23.3 
14 mu_1       0.5       1.41    1.02       0            12.0 
15 mu_1       0.6       1.27    1.02       0             8.36
16 mu_1       0.7       1.19    1.02       0             4.90
17 mu_1       0.8       1.23    0.652      0             7.66
18 mu_1       0.9       1.48    0.139      0            17.5 
19 mu_0       0.1      22.4     0.0000180  0          2217.  
20 mu_0       0.2       8.00    0.00243    0           758.  
21 mu_0       0.3       2.44    0.0461     0           153.  
22 mu_0       0.4       1.54    0.235      0            24.5 
23 mu_0       0.5       1.44    0.585      0            18.8 
24 mu_0       0.6       1.30    0.909      0             8.36
25 mu_0       0.7       1.16    1.05       0             7.10
26 mu_0       0.8       1.14    0.924      0             4.16
27 mu_0       0.9       1.19    0.294      0             9.48
[1] "Total run time was 190.783 seconds"
