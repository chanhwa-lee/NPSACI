
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1300"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  4  4  6  6  6  8  8  6  8  6  8  5  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04855 0.39412 0.62809 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
802 498 
[1] "treatment indicator table: "

  0   1 
442 858 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 689
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 114.71 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.375 0.177 
 2 mu         0.1   0.2 0.538 0.198 
 3 mu         0.1   0.3 0.545 0.213 
 4 mu         0.1   0.4 0.607 0.235 
 5 mu         0.1   0.5 0.762 0.264 
 6 mu         0.2   0.1 0.286 0.0755
 7 mu         0.2   0.2 0.411 0.0595
 8 mu         0.2   0.3 0.437 0.0602
 9 mu         0.2   0.4 0.486 0.0736
10 mu         0.2   0.5 0.599 0.0939
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.09         0.297 0.00000334     31.0 
 2 mu         0.2      0.969        0.725 0.00142         5.93
 3 mu         0.3      1.01         0.991 0.0317          3.33
 4 mu         0.4      1.04         1.02  0.203           2.45
 5 mu         0.5      1.03         1.04  0.622           1.73
 6 mu         0.6      1.01         1.02  0.615           1.35
 7 mu         0.7      0.987        0.977 0.649           1.39
 8 mu         0.8      0.963        0.958 0.449           1.49
 9 mu         0.9      0.946        0.897 0.253           2.66
10 mu_1       0.1      0.968        0.704 0.0000178       8.01
11 mu_1       0.2      1.01         0.970 0.00385         3.92
12 mu_1       0.3      1.04         1.02  0.0591          3.02
13 mu_1       0.4      1.04         1.03  0.295           2.19
14 mu_1       0.5      1.02         1.03  0.611           1.56
15 mu_1       0.6      1.00         1.00  0.625           1.36
16 mu_1       0.7      0.981        0.967 0.618           1.39
17 mu_1       0.8      0.960        0.947 0.435           1.51
18 mu_1       0.9      0.947        0.885 0.237           2.83
19 mu_0       0.1      1.10         0.244 0.00000173     34.5 
20 mu_0       0.2      0.959        0.651 0.000807        7.13
21 mu_0       0.3      0.993        0.938 0.0199          3.47
22 mu_0       0.4      1.03         1.01  0.141           2.62
23 mu_0       0.5      1.04         1.03  0.485           1.90
24 mu_0       0.6      1.02         1.04  0.582           1.34
25 mu_0       0.7      1.00         0.981 0.656           1.40
26 mu_0       0.8      0.976        0.983 0.503           1.40
27 mu_0       0.9      0.934        0.882 0.230           1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.73    0.00000622  5.53e-17    148.  
 2 mu         0.2      1.39    0.00204     2.58e-11     81.1 
 3 mu         0.3      1.02    0.0417      5.00e- 8     28.0 
 4 mu         0.4      0.918   0.258       1.01e- 5      8.02
 5 mu         0.5      0.998   0.839       5.86e- 4      6.56
 6 mu         0.6      1.13    1.01        9.56e- 3      4.56
 7 mu         0.7      1.23    1.30        2.03e- 4      3.25
 8 mu         0.8      1.28    1.10        6.91e- 7      3.39
 9 mu         0.9      1.34    0.275       3.00e-11     11.9 
10 mu_1       0.1      1.77    0.0000425   5.25e-16    123.  
11 mu_1       0.2      1.10    0.00743     1.22e-10     33.8 
12 mu_1       0.3      0.908   0.104       1.58e- 7     12.2 
13 mu_1       0.4      0.925   0.449       2.41e- 5      6.90
14 mu_1       0.5      1.04    0.981       1.11e- 3      6.12
15 mu_1       0.6      1.17    1.04        2.65e- 3      4.34
16 mu_1       0.7      1.24    1.35        4.83e- 5      3.20
17 mu_1       0.8      1.29    0.927       1.44e- 7      3.76
18 mu_1       0.9      1.35    0.201       5.56e-12     12.5 
19 mu_0       0.1      1.72    0.00000221  0           151.  
20 mu_0       0.2      1.47    0.000867    0            93.0 
21 mu_0       0.3      1.07    0.0151      0            36.7 
22 mu_0       0.4      0.913   0.142       0            10.5 
23 mu_0       0.5      0.956   0.575       0             6.99
24 mu_0       0.6      1.09    1.01        0             5.26
25 mu_0       0.7      1.19    1.10        0             3.98
26 mu_0       0.8      1.25    1.14        0             3.51
27 mu_0       0.9      1.28    0.398       0             6.25
[1] "Total run time was 120.209 seconds"
