
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1308"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  6  3  6  4  2  9  5  9  9  7  9  5  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01875 0.28637 0.58791 0.96765 5.00000 
[1] "event indicator table: "

  0   1 
746 562 
[1] "treatment indicator table: "

  0   1 
523 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 68.148 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.429 0.0986
 2 mu         0.1   0.2 0.560 0.150 
 3 mu         0.1   0.3 0.602 0.149 
 4 mu         0.1   0.4 0.644 0.151 
 5 mu         0.1   0.5 0.654 0.153 
 6 mu         0.2   0.1 0.361 0.0410
 7 mu         0.2   0.2 0.460 0.0598
 8 mu         0.2   0.3 0.513 0.0570
 9 mu         0.2   0.4 0.563 0.0547
10 mu         0.2   0.5 0.584 0.0568
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.909        0.287 0.000143      16.6 
 2 mu         0.2      0.974        0.791 0.0145         4.51
 3 mu         0.3      1.05         1.03  0.137          2.20
 4 mu         0.4      1.07         1.05  0.303          1.83
 5 mu         0.5      1.06         1.02  0.317          1.66
 6 mu         0.6      1.03         1.02  0.556          1.49
 7 mu         0.7      1.00         1.01  0.590          1.56
 8 mu         0.8      0.946        0.971 0.314          1.70
 9 mu         0.9      0.880        0.760 0.0812         2.60
10 mu_1       0.1      0.881        0.594 0.000653       5.88
11 mu_1       0.2      1.01         0.940 0.0342         2.78
12 mu_1       0.3      1.07         1.03  0.223          1.84
13 mu_1       0.4      1.07         1.06  0.256          1.81
14 mu_1       0.5      1.05         1.01  0.363          1.60
15 mu_1       0.6      1.02         1.02  0.643          1.45
16 mu_1       0.7      0.988        0.985 0.523          1.63
17 mu_1       0.8      0.934        0.961 0.299          1.66
18 mu_1       0.9      0.875        0.726 0.0678         2.73
19 mu_0       0.1      0.912        0.250 0.0000869     18.5 
20 mu_0       0.2      0.965        0.727 0.00962        5.45
21 mu_0       0.3      1.04         0.984 0.0999         2.36
22 mu_0       0.4      1.07         1.07  0.334          1.85
23 mu_0       0.5      1.06         1.05  0.271          1.72
24 mu_0       0.6      1.05         1.03  0.426          1.56
25 mu_0       0.7      1.03         1.04  0.609          1.48
26 mu_0       0.8      0.993        0.994 0.378          1.83
27 mu_0       0.9      0.929        0.940 0.120          2.11
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.512     0.000356  3.69e-15     14.5 
 2 mu         0.2      1.06      0.0208    7.63e-10     15.7 
 3 mu         0.3      1.24      0.140     8.64e- 7     14.4 
 4 mu         0.4      1.17      0.437     1.13e- 4      8.37
 5 mu         0.5      1.02      0.898     4.34e- 3      3.63
 6 mu         0.6      0.989     0.960     3.23e- 3      3.38
 7 mu         0.7      1.12      1.06      3.86e- 5      5.11
 8 mu         0.8      1.37      0.579     5.84e- 8      6.87
 9 mu         0.9      1.57      0.0914    6.35e-13     15.2 
10 mu_1       0.1      0.950     0.00214   3.32e-14     21.8 
11 mu_1       0.2      1.27      0.0715    3.43e- 9     16.5 
12 mu_1       0.3      1.28      0.293     2.59e- 6     12.8 
13 mu_1       0.4      1.14      0.600     2.53e- 4      5.58
14 mu_1       0.5      1.01      0.895     7.81e- 3      3.44
15 mu_1       0.6      1.02      1.11      8.08e- 4      3.98
16 mu_1       0.7      1.17      1.00      8.26e- 6      5.15
17 mu_1       0.8      1.42      0.437     1.10e- 8      7.58
18 mu_1       0.9      1.56      0.0608    1.06e-13     15.8 
19 mu_0       0.1      0.463     0.000169  0            13.7 
20 mu_0       0.2      1.01      0.00694   0            16.7 
21 mu_0       0.3      1.22      0.0539    0            15.1 
22 mu_0       0.4      1.19      0.253     0            10.2 
23 mu_0       0.5      1.04      0.630     0             4.21
24 mu_0       0.6      0.951     0.848     0             2.99
25 mu_0       0.7      1.01      1.01      0             5.01
26 mu_0       0.8      1.21      0.865     0             4.91
27 mu_0       0.9      1.59      0.251     0            11.8 
[1] "Total run time was 72.096 seconds"
