
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1317"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  1  9  6  5 11  9  6  5  7  3 10  7  3 12  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04091 0.34025 0.59737 1.00000 5.65478 
[1] "event indicator table: "

  0   1 
772 545 
[1] "treatment indicator table: "

  0   1 
465 852 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.325 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.143 0.0744
 2 mu         0.1   0.2 0.252 0.0919
 3 mu         0.1   0.3 0.338 0.110 
 4 mu         0.1   0.4 0.338 0.125 
 5 mu         0.1   0.5 0.478 0.239 
 6 mu         0.2   0.1 0.188 0.0557
 7 mu         0.2   0.2 0.340 0.0764
 8 mu         0.2   0.3 0.425 0.0963
 9 mu         0.2   0.4 0.446 0.109 
10 mu         0.2   0.5 0.586 0.219 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.448       0.0408 0.00000225      8.44
 2 mu         0.2      0.693       0.350  0.000673        3.99
 3 mu         0.3      0.880       0.746  0.0143          2.73
 4 mu         0.4      0.982       0.942  0.0978          2.31
 5 mu         0.5      1.01        0.990  0.339           1.71
 6 mu         0.6      1.00        1.01   0.675           1.31
 7 mu         0.7      0.988       0.999  0.647           1.30
 8 mu         0.8      1.00        0.999  0.378           1.66
 9 mu         0.9      1.12        0.865  0.0622          7.18
10 mu_1       0.1      0.683       0.139  0.0000130       6.19
11 mu_1       0.2      0.845       0.595  0.00200         2.92
12 mu_1       0.3      0.968       0.926  0.0292          2.69
13 mu_1       0.4      1.01        0.983  0.154           2.07
14 mu_1       0.5      1.01        1.02   0.443           1.54
15 mu_1       0.6      0.994       0.999  0.731           1.22
16 mu_1       0.7      0.984       0.989  0.618           1.39
17 mu_1       0.8      1.01        0.993  0.338           1.79
18 mu_1       0.9      1.13        0.841  0.0516          7.94
19 mu_0       0.1      0.422       0.0296 0.00000106      8.69
20 mu_0       0.2      0.655       0.280  0.000342        4.51
21 mu_0       0.3      0.842       0.656  0.00794         2.75
22 mu_0       0.4      0.963       0.885  0.0602          2.50
23 mu_0       0.5      1.01        0.968  0.235           2.03
24 mu_0       0.6      1.01        1.01   0.575           1.47
25 mu_0       0.7      0.996       1.00   0.648           1.24
26 mu_0       0.8      0.987       0.966  0.536           1.49
27 mu_0       0.9      1.05        1.02   0.158           2.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.533    0.0000521  8.70e-17     36.2 
 2 mu         0.2      1.35     0.00468    4.56e-11     79.2 
 3 mu         0.3      1.54     0.0534     1.01e- 7     61.5 
 4 mu         0.4      1.40     0.282      2.39e- 5     26.8 
 5 mu         0.5      1.19     0.731      1.66e- 3     12.0 
 6 mu         0.6      1.07     0.943      5.30e- 2      4.60
 7 mu         0.7      1.12     1.07       8.21e- 3      5.11
 8 mu         0.8      1.40     0.643      1.08e- 4     14.7 
 9 mu         0.9      2.38     0.0758     4.22e- 8    118.  
10 mu_1       0.1      1.23     0.000378   8.70e-16     77.5 
11 mu_1       0.2      1.69     0.0164     2.28e-10     84.9 
12 mu_1       0.3      1.53     0.121      3.37e- 7     44.0 
13 mu_1       0.4      1.31     0.485      5.98e- 5     16.0 
14 mu_1       0.5      1.13     0.874      3.32e- 3      9.85
15 mu_1       0.6      1.05     0.914      5.83e- 2      4.30
16 mu_1       0.7      1.15     1.06       2.93e- 3      6.39
17 mu_1       0.8      1.45     0.561      3.37e- 5     16.1 
18 mu_1       0.9      2.48     0.0525     1.17e- 8    131.  
19 mu_0       0.1      0.455    0.0000174  0            31.6 
20 mu_0       0.2      1.27     0.00151    0            77.8 
21 mu_0       0.3      1.55     0.0259     0            69.1 
22 mu_0       0.4      1.46     0.139      0            35.0 
23 mu_0       0.5      1.26     0.492      0            14.1 
24 mu_0       0.6      1.10     0.920      0             6.77
25 mu_0       0.7      1.06     0.998      0             4.26
26 mu_0       0.8      1.20     0.938      0             9.21
27 mu_0       0.9      1.51     0.225      0            23.9 
[1] "Total run time was 58.209 seconds"
