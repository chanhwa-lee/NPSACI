
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1250"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  6  7  3  5  6  6  6  9  7  8  6  6  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02849 0.29652 0.55611 0.91088 6.00000 
[1] "event indicator table: "

  0   1 
727 523 
[1] "treatment indicator table: "

  0   1 
506 744 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 78.371 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.333 0.0659
 2 mu         0.1   0.2 0.361 0.0837
 3 mu         0.1   0.3 0.442 0.0926
 4 mu         0.1   0.4 0.597 0.121 
 5 mu         0.1   0.5 0.604 0.122 
 6 mu         0.2   0.1 0.295 0.0402
 7 mu         0.2   0.2 0.349 0.0530
 8 mu         0.2   0.3 0.424 0.0596
 9 mu         0.2   0.4 0.520 0.0770
10 mu         0.2   0.5 0.530 0.0775
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.911        0.153 0.0000123      10.0 
 2 mu         0.2      0.893        0.589 0.00234         7.44
 3 mu         0.3      0.912        0.831 0.0291          3.20
 4 mu         0.4      0.959        0.947 0.132           1.85
 5 mu         0.5      0.990        0.989 0.338           1.48
 6 mu         0.6      1.01         1.01  0.618           1.43
 7 mu         0.7      1.01         1.00  0.437           1.64
 8 mu         0.8      0.982        0.982 0.129           1.91
 9 mu         0.9      0.886        0.869 0.00656         2.24
10 mu_1       0.1      0.982        0.430 0.0000648      12.1 
11 mu_1       0.2      0.892        0.789 0.00676         4.88
12 mu_1       0.3      0.933        0.924 0.0568          2.30
13 mu_1       0.4      0.975        0.964 0.198           1.77
14 mu_1       0.5      0.999        0.996 0.428           1.40
15 mu_1       0.6      1.01         1.01  0.704           1.43
16 mu_1       0.7      1.01         1.00  0.378           1.69
17 mu_1       0.8      0.978        0.972 0.103           1.98
18 mu_1       0.9      0.877        0.824 0.00479         2.29
19 mu_0       0.1      0.903        0.124 0.00000644      9.80
20 mu_0       0.2      0.893        0.505 0.00123         8.08
21 mu_0       0.3      0.903        0.806 0.0172          3.58
22 mu_0       0.4      0.948        0.925 0.0873          2.13
23 mu_0       0.5      0.980        0.986 0.249           1.61
24 mu_0       0.6      0.998        1.01  0.489           1.44
25 mu_0       0.7      1.01         1.00  0.573           1.52
26 mu_0       0.8      0.998        0.971 0.231           1.82
27 mu_0       0.9      0.966        0.956 0.0225          2.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.44     0.000188   2.22e-15     48.9 
 2 mu         0.2      1.57     0.0193     2.59e-10     36.5 
 3 mu         0.3      1.43     0.144      2.23e- 7     16.6 
 4 mu         0.4      1.24     0.486      2.54e- 5      9.26
 5 mu         0.5      1.09     0.866      9.41e- 4      4.95
 6 mu         0.6      1.05     1.03       1.67e- 2      3.65
 7 mu         0.7      1.18     0.979      6.39e- 4      7.91
 8 mu         0.8      1.85     0.391      2.18e- 6     34.0 
 9 mu         0.9      3.83     0.0283     9.46e-11    180.  
10 mu_1       0.1      1.09     0.000843   0            44.5 
11 mu_1       0.2      1.31     0.0471     0            30.4 
12 mu_1       0.3      1.22     0.264      0            13.7 
13 mu_1       0.4      1.11     0.681      0             8.53
14 mu_1       0.5      1.04     0.905      0             4.22
15 mu_1       0.6      1.06     1.00       0             3.57
16 mu_1       0.7      1.26     0.849      0            10.1 
17 mu_1       0.8      2.02     0.303      0            38.3 
18 mu_1       0.9      4.03     0.0151     0           199.  
19 mu_0       0.1      1.48     0.0000801  0            54.4 
20 mu_0       0.2      1.64     0.00713    0            38.0 
21 mu_0       0.3      1.52     0.0775     0            19.8 
22 mu_0       0.4      1.33     0.349      0            10.9 
23 mu_0       0.5      1.15     0.728      0             6.25
24 mu_0       0.6      1.03     0.969      0             4.13
25 mu_0       0.7      0.999    0.872      0             3.12
26 mu_0       0.8      1.19     0.642      0            17.9 
27 mu_0       0.9      2.05     0.0674     0            66.3 
[1] "Total run time was 82.339 seconds"
