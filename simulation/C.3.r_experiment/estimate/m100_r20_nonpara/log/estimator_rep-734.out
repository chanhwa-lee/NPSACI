
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1302"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  7  5  8  7  4  3  9  6  7  7  5  9  5  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03741 0.34097 0.63361 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
804 498 
[1] "treatment indicator table: "

  0   1 
454 848 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 96.299 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.239 0.0377
 2 mu         0.1   0.2 0.378 0.122 
 3 mu         0.1   0.3 0.445 0.140 
 4 mu         0.1   0.4 0.475 0.120 
 5 mu         0.1   0.5 0.504 0.115 
 6 mu         0.2   0.1 0.291 0.0365
 7 mu         0.2   0.2 0.384 0.0714
 8 mu         0.2   0.3 0.471 0.0858
 9 mu         0.2   0.4 0.540 0.0819
10 mu         0.2   0.5 0.598 0.0848
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.794        0.306 0.000000118       9.01
 2 mu         0.2      1.01         0.866 0.000203          7.81
 3 mu         0.3      1.04         0.980 0.0100            3.55
 4 mu         0.4      1.02         1.05  0.106             1.85
 5 mu         0.5      1.01         1.01  0.422             1.54
 6 mu         0.6      1.01         1.00  0.588             1.54
 7 mu         0.7      0.999        0.980 0.623             1.65
 8 mu         0.8      0.981        0.964 0.463             1.90
 9 mu         0.9      0.975        0.971 0.0741            1.87
10 mu_1       0.1      1.04         0.616 0.000000710      12.0 
11 mu_1       0.2      1.07         0.982 0.000616          5.23
12 mu_1       0.3      1.04         1.05  0.0204            2.36
13 mu_1       0.4      1.01         1.03  0.164             1.77
14 mu_1       0.5      1.00         0.979 0.531             1.54
15 mu_1       0.6      1.01         0.992 0.558             1.50
16 mu_1       0.7      0.995        0.978 0.579             1.72
17 mu_1       0.8      0.980        0.963 0.391             1.89
18 mu_1       0.9      0.976        0.989 0.0579            1.97
19 mu_0       0.1      0.767        0.247 0.0000000519      8.67
20 mu_0       0.2      0.998        0.792 0.0000998         8.45
21 mu_0       0.3      1.04         0.957 0.00555           4.08
22 mu_0       0.4      1.02         1.04  0.0671            2.16
23 mu_0       0.5      1.01         1.03  0.312             1.68
24 mu_0       0.6      1.01         1.00  0.564             1.60
25 mu_0       0.7      1.01         0.989 0.538             1.53
26 mu_0       0.8      0.984        0.967 0.472             1.93
27 mu_0       0.9      0.969        0.912 0.219             1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.78   0.0000190   1.74e-17    463.  
 2 mu         0.2       8.03   0.00263     4.56e-12    421.  
 3 mu         0.3       5.11   0.0487      6.74e- 9    252.  
 4 mu         0.4       2.55   0.261       1.20e- 6     67.6 
 5 mu         0.5       1.49   0.691       6.64e- 5     17.9 
 6 mu         0.6       1.12   0.807       1.77e- 3      7.18
 7 mu         0.7       1.03   0.924       9.71e- 4      3.29
 8 mu         0.8       1.09   0.908       7.44e- 6      4.28
 9 mu         0.9       1.16   0.263       6.14e-10      5.57
10 mu_1       0.1       8.48   0.000148    1.74e-16    421.  
11 mu_1       0.2       6.80   0.0101      2.28e-11    421.  
12 mu_1       0.3       3.61   0.118       2.25e- 8    168.  
13 mu_1       0.4       1.90   0.477       2.99e- 6     33.8 
14 mu_1       0.5       1.29   0.904       1.33e- 4     14.3 
15 mu_1       0.6       1.07   0.710       2.95e- 3      5.17
16 mu_1       0.7       1.03   0.967       2.60e- 4      3.17
17 mu_1       0.8       1.10   0.864       1.74e- 6      4.46
18 mu_1       0.9       1.17   0.195       1.36e-10      6.15
19 mu_0       0.1       6.59   0.00000230  0           468.  
20 mu_0       0.2       8.33   0.00101     0           421.  
21 mu_0       0.3       5.75   0.0184      0           288.  
22 mu_0       0.4       2.98   0.157       0            90.1 
23 mu_0       0.5       1.69   0.484       0            21.5 
24 mu_0       0.6       1.21   0.813       0            10.8 
25 mu_0       0.7       1.02   0.755       0             4.39
26 mu_0       0.8       1.01   0.842       0             3.83
27 mu_0       0.9       1.10   0.151       0             6.55
[1] "Total run time was 100.799 seconds"
