
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1184"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  8  9  5  7  7  8  3  6  4  8  7  7  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01917 0.31826 0.59816 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
719 465 
[1] "treatment indicator table: "

  0   1 
456 728 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 561
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 54.54 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.369 0.0665
 2 mu         0.1   0.2 0.422 0.0723
 3 mu         0.1   0.3 0.454 0.0798
 4 mu         0.1   0.4 0.491 0.0910
 5 mu         0.1   0.5 0.523 0.0950
 6 mu         0.2   0.1 0.350 0.0421
 7 mu         0.2   0.2 0.405 0.0438
 8 mu         0.2   0.3 0.447 0.0520
 9 mu         0.2   0.4 0.483 0.0615
10 mu         0.2   0.5 0.521 0.0636
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.868        0.388 0.00000929      7.23
 2 mu         0.2      0.936        0.848 0.00160         3.30
 3 mu         0.3      0.980        1.01  0.0253          2.12
 4 mu         0.4      0.992        1.01  0.141           1.86
 5 mu         0.5      1.01         1.00  0.426           1.62
 6 mu         0.6      1.03         1.01  0.661           1.61
 7 mu         0.7      1.03         1.01  0.617           1.73
 8 mu         0.8      1.01         1.01  0.495           1.71
 9 mu         0.9      0.928        0.938 0.197           1.91
10 mu_1       0.1      0.861        0.617 0.0000550       3.68
11 mu_1       0.2      0.966        0.937 0.00487         2.43
12 mu_1       0.3      0.994        0.996 0.0523          1.92
13 mu_1       0.4      0.998        0.988 0.224           1.84
14 mu_1       0.5      1.01         1.01  0.544           1.53
15 mu_1       0.6      1.03         1.01  0.713           1.65
16 mu_1       0.7      1.03         1.00  0.592           1.73
17 mu_1       0.8      0.996        1.01  0.451           1.72
18 mu_1       0.9      0.922        0.920 0.176           2.03
19 mu_0       0.1      0.869        0.335 0.00000421      7.97
20 mu_0       0.2      0.928        0.761 0.000788        3.91
21 mu_0       0.3      0.974        0.982 0.0137          2.20
22 mu_0       0.4      0.987        0.988 0.0860          1.87
23 mu_0       0.5      1.00         1.02  0.294           1.74
24 mu_0       0.6      1.03         1.01  0.580           1.56
25 mu_0       0.7      1.04         1.02  0.676           1.72
26 mu_0       0.8      1.04         1.03  0.585           1.73
27 mu_0       0.9      0.974        0.975 0.384           1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.765     0.000222  3.41e-15     14.4 
 2 mu         0.2      1.51      0.0196    3.97e-10     24.8 
 3 mu         0.3      1.46      0.103     3.43e- 7     14.8 
 4 mu         0.4      1.19      0.337     3.91e- 5      5.57
 5 mu         0.5      1.04      0.660     1.45e- 3      3.92
 6 mu         0.6      1.01      0.853     1.54e- 2      3.88
 7 mu         0.7      1.09      1.10      3.27e- 4      4.52
 8 mu         0.8      1.21      0.821     1.12e- 6      5.83
 9 mu         0.9      1.26      0.136     4.85e-11     12.1 
10 mu_1       0.1      1.51      0.00127   3.22e-14     26.9 
11 mu_1       0.2      1.71      0.0557    1.88e- 9     23.3 
12 mu_1       0.3      1.36      0.235     1.08e- 6     10.3 
13 mu_1       0.4      1.11      0.561     9.22e- 5      4.79
14 mu_1       0.5      1.01      0.715     2.73e- 3      4.07
15 mu_1       0.6      1.03      0.964     4.29e- 3      3.70
16 mu_1       0.7      1.12      1.06      7.80e- 5      4.61
17 mu_1       0.8      1.23      0.669     2.33e- 7      6.37
18 mu_1       0.9      1.27      0.0950    8.98e-12     13.4 
19 mu_0       0.1      0.682     0.000104  0            13.0 
20 mu_0       0.2      1.46      0.00624   0            25.2 
21 mu_0       0.3      1.50      0.0455    0            17.1 
22 mu_0       0.4      1.24      0.187     0             7.10
23 mu_0       0.5      1.07      0.495     0             4.57
24 mu_0       0.6      0.999     0.755     0             4.16
25 mu_0       0.7      1.03      0.961     0             4.31
26 mu_0       0.8      1.11      1.01      0             4.85
27 mu_0       0.9      1.20      0.329     0             9.47
[1] "Total run time was 57.742 seconds"
