
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1227"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  9  4  4  3  5  7  6  5  7  6  7  9 11  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01832 0.30157 0.58512 0.97164 4.00000 
[1] "event indicator table: "

  0   1 
726 501 
[1] "treatment indicator table: "

  0   1 
447 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 575
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 54.913 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.442 0.0739
 2 mu         0.1   0.2 0.574 0.0854
 3 mu         0.1   0.3 0.611 0.0917
 4 mu         0.1   0.4 0.676 0.0970
 5 mu         0.1   0.5 0.694 0.0955
 6 mu         0.2   0.1 0.407 0.0525
 7 mu         0.2   0.2 0.504 0.0583
 8 mu         0.2   0.3 0.537 0.0596
 9 mu         0.2   0.4 0.593 0.0587
10 mu         0.2   0.5 0.615 0.0562
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.970        0.638  0.000259      8.91
 2 mu         0.2      0.973        0.801  0.0170        4.14
 3 mu         0.3      1.01         0.920  0.132         2.89
 4 mu         0.4      1.03         0.961  0.305         2.66
 5 mu         0.5      1.02         0.996  0.502         1.75
 6 mu         0.6      1.01         0.994  0.642         1.36
 7 mu         0.7      0.994        0.992  0.564         1.47
 8 mu         0.8      0.980        0.993  0.453         1.69
 9 mu         0.9      1.00         0.973  0.0969        2.18
10 mu_1       0.1      0.997        0.859  0.00132       5.91
11 mu_1       0.2      1.00         0.911  0.0442        3.55
12 mu_1       0.3      1.03         0.994  0.223         3.12
13 mu_1       0.4      1.03         1.00   0.410         2.33
14 mu_1       0.5      1.02         0.995  0.576         1.62
15 mu_1       0.6      1.01         1.01   0.671         1.45
16 mu_1       0.7      0.990        1.01   0.512         1.50
17 mu_1       0.8      0.976        0.985  0.413         1.73
18 mu_1       0.9      1.00         0.955  0.0813        2.30
19 mu_0       0.1      0.967        0.594  0.000141      9.34
20 mu_0       0.2      0.966        0.761  0.0102        4.63
21 mu_0       0.3      0.998        0.913  0.0933        2.80
22 mu_0       0.4      1.02         0.966  0.234         2.88
23 mu_0       0.5      1.02         0.983  0.414         2.06
24 mu_0       0.6      1.01         0.997  0.586         1.50
25 mu_0       0.7      1.00         1.01   0.605         1.49
26 mu_0       0.8      0.993        1.01   0.335         1.55
27 mu_0       0.9      1.01         1.02   0.197         2.01
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.83     0.000153   3.57e-16     90.8 
 2 mu         0.2      1.28     0.0164     8.32e-11     43.0 
 3 mu         0.3      1.04     0.133      1.08e- 7     16.0 
 4 mu         0.4      1.08     0.524      1.64e- 5     16.1 
 5 mu         0.5      1.10     0.947      7.56e- 4      7.20
 6 mu         0.6      1.07     1.03       1.26e- 3      3.11
 7 mu         0.7      1.01     1.03       1.48e- 5      2.57
 8 mu         0.8      1.03     0.911      2.57e- 8      3.89
 9 mu         0.9      1.16     0.189      4.41e-13      6.95
10 mu_1       0.1      1.81     0.000873   3.38e-15     69.9 
11 mu_1       0.2      1.11     0.0450     3.94e-10     26.9 
12 mu_1       0.3      1.10     0.322      3.40e- 7     18.7 
13 mu_1       0.4      1.16     0.703      3.87e- 5     14.1 
14 mu_1       0.5      1.14     1.05       1.43e- 3      5.04
15 mu_1       0.6      1.07     1.07       1.24e- 4      2.75
16 mu_1       0.7      0.999    0.927      1.24e- 6      2.70
17 mu_1       0.8      1.03     0.701      1.89e- 9      4.21
18 mu_1       0.9      1.17     0.143      2.88e-14      7.27
19 mu_0       0.1      1.84     0.0000582  0            95.0 
20 mu_0       0.2      1.32     0.00579    0            47.1 
21 mu_0       0.3      1.01     0.0731     0            18.7 
22 mu_0       0.4      1.02     0.361      0            17.5 
23 mu_0       0.5      1.07     0.779      0             9.36
24 mu_0       0.6      1.09     1.10       0             3.66
25 mu_0       0.7      1.05     1.06       0             2.60
26 mu_0       0.8      1.03     0.927      0             2.97
27 mu_0       0.9      1.15     0.300      0             6.12
[1] "Total run time was 58.197 seconds"
