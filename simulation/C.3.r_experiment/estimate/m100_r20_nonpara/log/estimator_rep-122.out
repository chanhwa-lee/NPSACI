
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1251"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  3  6  6  8 11  5  8  6  5  1  6  8  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03088 0.35139 0.62277 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
711 540 
[1] "treatment indicator table: "

  0   1 
483 768 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.407 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.450 0.0882
 2 mu         0.1   0.2 0.501 0.103 
 3 mu         0.1   0.3 0.561 0.118 
 4 mu         0.1   0.4 0.635 0.138 
 5 mu         0.1   0.5 0.692 0.158 
 6 mu         0.2   0.1 0.388 0.0576
 7 mu         0.2   0.2 0.437 0.0675
 8 mu         0.2   0.3 0.494 0.0710
 9 mu         0.2   0.4 0.567 0.0873
10 mu         0.2   0.5 0.626 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.10         0.290 0.00000172      18.9 
 2 mu         0.2      1.02         0.663 0.00131         10.5 
 3 mu         0.3      0.972        0.870 0.0374           3.90
 4 mu         0.4      0.977        0.968 0.161            2.55
 5 mu         0.5      0.987        0.973 0.397            1.59
 6 mu         0.6      0.995        0.993 0.729            1.27
 7 mu         0.7      1.01         0.996 0.648            1.77
 8 mu         0.8      1.03         0.994 0.323            2.46
 9 mu         0.9      1.07         0.986 0.0430           6.22
10 mu_1       0.1      1.08         0.529 0.00000951      15.8 
11 mu_1       0.2      0.938        0.795 0.00365          4.59
12 mu_1       0.3      0.953        0.916 0.0701           3.25
13 mu_1       0.4      0.979        0.975 0.256            2.20
14 mu_1       0.5      0.992        0.976 0.531            1.38
15 mu_1       0.6      0.999        0.989 0.745            1.31
16 mu_1       0.7      1.01         0.994 0.529            1.92
17 mu_1       0.8      1.03         0.997 0.261            2.48
18 mu_1       0.9      1.07         0.947 0.0337           6.86
19 mu_0       0.1      1.10         0.238 0.000000855     19.2 
20 mu_0       0.2      1.04         0.612 0.000727        12.0 
21 mu_0       0.3      0.980        0.845 0.0235           4.97
22 mu_0       0.4      0.975        0.941 0.0972           2.78
23 mu_0       0.5      0.983        0.977 0.263            1.81
24 mu_0       0.6      0.988        0.971 0.539            1.30
25 mu_0       0.7      0.997        1.00  0.721            1.44
26 mu_0       0.8      1.02         1.02  0.505            2.39
27 mu_0       0.9      1.04         1.03  0.126            2.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.37     0.000121   3.82e-17     82.6 
 2 mu         0.2      1.77     0.00683    2.00e-11     80.4 
 3 mu         0.3      1.53     0.0929     4.44e- 8     36.4 
 4 mu         0.4      1.25     0.480      1.05e- 5     13.4 
 5 mu         0.5      1.09     0.930      7.28e- 4      7.00
 6 mu         0.6      1.03     1.05       2.33e- 2      3.21
 7 mu         0.7      1.05     0.991      6.33e- 3      4.06
 8 mu         0.8      1.32     0.425      6.34e- 5     13.4 
 9 mu         0.9      2.05     0.0439     1.39e- 8     51.6 
10 mu_1       0.1      2.24     0.000694   3.82e-16    118.  
11 mu_1       0.2      1.76     0.0270     1.00e-10     57.4 
12 mu_1       0.3      1.33     0.200      1.48e- 7     17.4 
13 mu_1       0.4      1.10     0.723      2.62e- 5      8.36
14 mu_1       0.5      1.03     0.886      1.46e- 3      3.93
15 mu_1       0.6      1.02     1.08       2.82e- 2      3.09
16 mu_1       0.7      1.08     0.895      1.55e- 3      5.12
17 mu_1       0.8      1.38     0.322      1.37e- 5     14.7 
18 mu_1       0.9      2.11     0.0295     3.76e- 9     57.3 
19 mu_0       0.1      1.28     0.0000409  0            78.7 
20 mu_0       0.2      1.77     0.00263    0            86.2 
21 mu_0       0.3      1.61     0.0465     0            44.6 
22 mu_0       0.4      1.34     0.299      0            16.7 
23 mu_0       0.5      1.15     0.832      0            10.5 
24 mu_0       0.6      1.05     0.856      0             4.96
25 mu_0       0.7      0.988    1.05       0             2.59
26 mu_0       0.8      1.07     0.674      0             7.86
27 mu_0       0.9      1.49     0.124      0            23.0 
[1] "Total run time was 71.191 seconds"
