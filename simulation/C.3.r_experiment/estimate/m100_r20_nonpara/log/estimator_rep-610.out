
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1184"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  8  4  9 10  5  4  5  7  6  3 11  5  5  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03614 0.29299 0.58442 0.96196 4.00000 
[1] "event indicator table: "

  0   1 
703 481 
[1] "treatment indicator table: "

  0   1 
452 732 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 99.896 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.350 0.0692
 2 mu         0.1   0.2 0.421 0.102 
 3 mu         0.1   0.3 0.417 0.0988
 4 mu         0.1   0.4 0.422 0.106 
 5 mu         0.1   0.5 0.483 0.136 
 6 mu         0.2   0.1 0.353 0.0457
 7 mu         0.2   0.2 0.427 0.0652
 8 mu         0.2   0.3 0.434 0.0664
 9 mu         0.2   0.4 0.455 0.0740
10 mu         0.2   0.5 0.527 0.0944
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.818        0.174 0.000000670      7.71
 2 mu         0.2      0.897        0.568 0.000374         6.15
 3 mu         0.3      0.953        0.887 0.0109           3.25
 4 mu         0.4      0.983        0.994 0.0880           2.17
 5 mu         0.5      0.977        1.00  0.257            1.60
 6 mu         0.6      0.964        0.963 0.501            1.50
 7 mu         0.7      0.974        0.980 0.523            1.40
 8 mu         0.8      0.995        0.980 0.212            1.87
 9 mu         0.9      1.00         0.914 0.0338           3.37
10 mu_1       0.1      0.896        0.486 0.00000422       9.67
11 mu_1       0.2      0.938        0.855 0.00119          4.12
12 mu_1       0.3      0.981        1.03  0.0235           3.26
13 mu_1       0.4      0.986        1.02  0.128            1.67
14 mu_1       0.5      0.968        0.980 0.332            1.61
15 mu_1       0.6      0.959        0.970 0.510            1.41
16 mu_1       0.7      0.975        0.982 0.396            1.53
17 mu_1       0.8      0.996        0.990 0.155            2.01
18 mu_1       0.9      1.00         0.922 0.0233           3.51
19 mu_0       0.1      0.809        0.145 0.000000275      7.49
20 mu_0       0.2      0.887        0.502 0.000170         6.66
21 mu_0       0.3      0.941        0.808 0.00559          3.25
22 mu_0       0.4      0.980        0.961 0.0523           2.54
23 mu_0       0.5      0.986        1.03  0.182            2.07
24 mu_0       0.6      0.973        0.977 0.398            1.63
25 mu_0       0.7      0.972        0.971 0.593            1.49
26 mu_0       0.8      0.994        0.996 0.442            1.44
27 mu_0       0.9      0.996        0.961 0.128            2.10
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.83    0.0000672  8.14e-12    350.  
 2 mu         0.2       4.74    0.00853    1.05e- 7    243.  
 3 mu         0.3       3.30    0.0979     2.36e- 5    110.  
 4 mu         0.4       2.20    0.390      9.71e- 4     64.0 
 5 mu         0.5       1.52    0.859      1.53e- 2     26.3 
 6 mu         0.6       1.27    1.09       3.24e- 3      5.62
 7 mu         0.7       1.30    1.10       5.05e- 5      6.26
 8 mu         0.8       1.40    0.888      1.32e- 7      9.48
 9 mu         0.9       1.39    0.192      4.53e-12     20.6 
10 mu_1       0.1       6.24    0.000530   7.12e-11    350.  
11 mu_1       0.2       3.56    0.0324     4.61e- 7    121.  
12 mu_1       0.3       2.46    0.206      6.87e- 5     86.3 
13 mu_1       0.4       1.72    0.608      2.12e- 3     50.0 
14 mu_1       0.5       1.33    0.926      9.59e- 3     16.4 
15 mu_1       0.6       1.25    1.08       3.37e- 4      5.31
16 mu_1       0.7       1.35    1.11       4.51e- 6      6.84
17 mu_1       0.8       1.45    0.704      1.03e- 8      9.88
18 mu_1       0.9       1.42    0.138      3.14e-13     22.9 
19 mu_0       0.1       5.78    0.0000278  0           350.  
20 mu_0       0.2       5.03    0.00257    0           273.  
21 mu_0       0.3       3.66    0.0419     0           141.  
22 mu_0       0.4       2.52    0.245      0            73.4 
23 mu_0       0.5       1.71    0.710      0            36.2 
24 mu_0       0.6       1.29    0.911      0             9.66
25 mu_0       0.7       1.17    0.984      0             5.04
26 mu_0       0.8       1.20    0.749      0             8.26
27 mu_0       0.9       1.06    0.103      0            12.8 
[1] "Total run time was 104.554 seconds"
