
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1175"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4 10  6  7  8 10  3  8  6  6  6  7  3  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02871 0.32446 0.60272 1.00000 4.99769 
[1] "event indicator table: "

  0   1 
703 472 
[1] "treatment indicator table: "

  0   1 
410 765 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 567
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 91.69 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.503 0.113 
 2 mu         0.1   0.2 0.605 0.139 
 3 mu         0.1   0.3 0.642 0.151 
 4 mu         0.1   0.4 0.729 0.159 
 5 mu         0.1   0.5 0.762 0.168 
 6 mu         0.2   0.1 0.450 0.0708
 7 mu         0.2   0.2 0.541 0.0833
 8 mu         0.2   0.3 0.592 0.0904
 9 mu         0.2   0.4 0.666 0.0976
10 mu         0.2   0.5 0.701 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.17         0.218 0.000000101      15.3 
 2 mu         0.2      1.16         0.730 0.000109         11.7 
 3 mu         0.3      1.10         0.971 0.00461           6.22
 4 mu         0.4      1.06         1.03  0.0484            2.78
 5 mu         0.5      1.02         1.03  0.222             1.97
 6 mu         0.6      0.993        1.00  0.452             1.70
 7 mu         0.7      0.992        0.972 0.557             1.48
 8 mu         0.8      0.987        0.995 0.314             1.55
 9 mu         0.9      0.965        0.979 0.0451            2.04
10 mu_1       0.1      1.14         0.526 0.000000659      16.3 
11 mu_1       0.2      1.07         0.948 0.000357          7.56
12 mu_1       0.3      1.04         1.02  0.0101            3.27
13 mu_1       0.4      1.02         1.01  0.0806            2.10
14 mu_1       0.5      1.00         1.03  0.301             1.90
15 mu_1       0.6      0.992        0.982 0.499             1.65
16 mu_1       0.7      0.993        0.975 0.509             1.50
17 mu_1       0.8      0.987        0.992 0.278             1.61
18 mu_1       0.9      0.963        0.957 0.0363            2.11
19 mu_0       0.1      1.17         0.182 0.0000000394     16.9 
20 mu_0       0.2      1.18         0.647 0.0000473        12.7 
21 mu_0       0.3      1.13         0.941 0.00225           7.49
22 mu_0       0.4      1.08         0.998 0.0270            3.62
23 mu_0       0.5      1.03         1.04  0.144             2.04
24 mu_0       0.6      0.996        1.02  0.383             1.78
25 mu_0       0.7      0.987        0.988 0.582             1.60
26 mu_0       0.8      0.986        0.984 0.457             1.58
27 mu_0       0.9      0.989        0.968 0.124             1.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.277    0.000142   1.65e-15     11.7 
 2 mu         0.2      0.919    0.0109     3.42e-10     20.5 
 3 mu         0.3      1.45     0.0907     3.87e- 7     19.4 
 4 mu         0.4      1.55     0.353      5.04e- 5     16.2 
 5 mu         0.5      1.38     0.853      1.94e- 3     12.0 
 6 mu         0.6      1.17     0.968      2.96e- 2      4.81
 7 mu         0.7      1.10     0.998      1.84e- 3      4.64
 8 mu         0.8      1.22     0.851      8.19e- 6      6.90
 9 mu         0.9      1.34     0.189      4.50e-10     18.8 
10 mu_1       0.1      0.738    0.00100    1.49e-14     25.9 
11 mu_1       0.2      1.37     0.0329     1.54e- 9     22.7 
12 mu_1       0.3      1.63     0.224      1.16e- 6     19.4 
13 mu_1       0.4      1.52     0.598      1.13e- 4     16.1 
14 mu_1       0.5      1.30     1.03       3.50e- 3      9.91
15 mu_1       0.6      1.14     0.951      2.65e- 2      4.22
16 mu_1       0.7      1.11     1.03       6.57e- 4      5.68
17 mu_1       0.8      1.25     0.724      2.56e- 6      7.39
18 mu_1       0.9      1.34     0.129      1.25e-10     20.9 
19 mu_0       0.1      0.226    0.0000357  0            10.1 
20 mu_0       0.2      0.806    0.00493    0            19.9 
21 mu_0       0.3      1.38     0.0393     0            20.1 
22 mu_0       0.4      1.57     0.200      0            16.6 
23 mu_0       0.5      1.45     0.555      0            14.2 
24 mu_0       0.6      1.23     0.921      0             7.37
25 mu_0       0.7      1.08     0.963      0             3.82
26 mu_0       0.8      1.12     1.04       0             4.93
27 mu_0       0.9      1.35     0.445      0            10.0 
[1] "Total run time was 96.903 seconds"
