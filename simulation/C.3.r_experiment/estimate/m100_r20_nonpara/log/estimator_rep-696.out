
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1255"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  4  6  6  7 10  9  6  8  4  7 12  4  5  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03064 0.35365 0.58434 0.99469 6.00000 
[1] "event indicator table: "

  0   1 
722 533 
[1] "treatment indicator table: "

  0   1 
491 764 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 93.952 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.277 0.0541
 2 mu         0.1   0.2 0.344 0.0585
 3 mu         0.1   0.3 0.355 0.0692
 4 mu         0.1   0.4 0.366 0.0775
 5 mu         0.1   0.5 0.412 0.0852
 6 mu         0.2   0.1 0.307 0.0404
 7 mu         0.2   0.2 0.370 0.0397
 8 mu         0.2   0.3 0.397 0.0464
 9 mu         0.2   0.4 0.422 0.0506
10 mu         0.2   0.5 0.478 0.0544
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.786        0.364  0.00110       6.36
 2 mu         0.2      0.871        0.763  0.0415        2.81
 3 mu         0.3      0.905        0.881  0.214         1.78
 4 mu         0.4      0.942        0.966  0.356         1.65
 5 mu         0.5      0.981        0.967  0.510         1.47
 6 mu         0.6      1.01         1.01   0.710         1.46
 7 mu         0.7      1.03         1.02   0.678         1.63
 8 mu         0.8      1.04         1.01   0.377         1.61
 9 mu         0.9      1.08         0.988  0.113         3.01
10 mu_1       0.1      0.970        0.808  0.00411       4.13
11 mu_1       0.2      0.915        0.919  0.0814        1.95
12 mu_1       0.3      0.930        0.913  0.296         1.78
13 mu_1       0.4      0.963        0.969  0.435         1.61
14 mu_1       0.5      0.997        1.01   0.554         1.46
15 mu_1       0.6      1.02         1.03   0.692         1.51
16 mu_1       0.7      1.03         1.01   0.658         1.63
17 mu_1       0.8      1.04         1.02   0.336         1.77
18 mu_1       0.9      1.08         0.980  0.100         3.24
19 mu_0       0.1      0.766        0.317  0.000764      6.61
20 mu_0       0.2      0.860        0.739  0.0315        3.07
21 mu_0       0.3      0.894        0.863  0.175         1.87
22 mu_0       0.4      0.927        0.935  0.303         1.70
23 mu_0       0.5      0.964        0.978  0.425         1.57
24 mu_0       0.6      1.00         1.01   0.664         1.53
25 mu_0       0.7      1.02         1.02   0.663         1.65
26 mu_0       0.8      1.02         1.01   0.539         1.76
27 mu_0       0.9      1.02         0.948  0.233         2.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.778    0.0000815  4.10e-15     18.1 
 2 mu         0.2      1.12     0.0120     2.69e-10     13.9 
 3 mu         0.3      1.03     0.117      1.76e- 7      7.92
 4 mu         0.4      0.918    0.490      1.76e- 5      7.38
 5 mu         0.5      0.947    0.774      6.25e- 4      4.82
 6 mu         0.6      1.06     1.12       7.66e- 3      3.78
 7 mu         0.7      1.15     1.15       1.86e- 4      3.60
 8 mu         0.8      1.14     0.758      8.31e- 7      4.64
 9 mu         0.9      1.05     0.103      6.42e-11     12.9 
10 mu_1       0.1      1.25     0.000591   4.10e-14     22.7 
11 mu_1       0.2      1.17     0.0353     1.34e- 9     12.5 
12 mu_1       0.3      0.955    0.238      5.88e- 7      8.72
13 mu_1       0.4      0.893    0.709      4.40e- 5      6.15
14 mu_1       0.5      0.971    0.798      1.25e- 3      3.33
15 mu_1       0.6      1.08     1.13       1.60e- 3      3.94
16 mu_1       0.7      1.16     1.13       3.32e- 5      4.05
17 mu_1       0.8      1.14     0.588      1.30e- 7      4.97
18 mu_1       0.9      1.06     0.0761     8.92e-12     14.3 
19 mu_0       0.1      0.726    0.0000377  0            17.6 
20 mu_0       0.2      1.10     0.00506    0            15.3 
21 mu_0       0.3      1.07     0.0577     0             9.19
22 mu_0       0.4      0.936    0.312      0             8.20
23 mu_0       0.5      0.923    0.682      0             6.43
24 mu_0       0.6      1.01     0.972      0             3.64
25 mu_0       0.7      1.12     1.11       0             3.93
26 mu_0       0.8      1.14     0.891      0             4.97
27 mu_0       0.9      0.932    0.160      0             5.86
[1] "Total run time was 98.095 seconds"
