
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1207"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  9 13  8  2  8  6  7  5  8  5  4  6  7  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02699 0.31878 0.59284 0.96202 6.08016 
[1] "event indicator table: "

  0   1 
694 513 
[1] "treatment indicator table: "

  0   1 
462 745 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 589
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 92.498 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.603 0.226 
 2 mu         0.1   0.2 0.720 0.262 
 3 mu         0.1   0.3 0.840 0.285 
 4 mu         0.1   0.4 0.900 0.308 
 5 mu         0.1   0.5 0.917 0.326 
 6 mu         0.2   0.1 0.441 0.0587
 7 mu         0.2   0.2 0.505 0.0643
 8 mu         0.2   0.3 0.636 0.0802
 9 mu         0.2   0.4 0.715 0.101 
10 mu         0.2   0.5 0.730 0.0965
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.34         0.673  0.000453     49.8 
 2 mu         0.2      1.07         0.919  0.0311        8.66
 3 mu         0.3      1.02         1.02   0.205         2.32
 4 mu         0.4      0.990        0.984  0.452         1.54
 5 mu         0.5      0.975        0.994  0.442         1.52
 6 mu         0.6      0.977        0.975  0.515         1.38
 7 mu         0.7      0.980        0.979  0.481         1.59
 8 mu         0.8      0.968        0.950  0.490         2.03
 9 mu         0.9      0.959        0.883  0.161         5.58
10 mu_1       0.1      1.01         0.798  0.00182       4.19
11 mu_1       0.2      1.03         0.984  0.0642        2.80
12 mu_1       0.3      1.01         0.979  0.298         1.99
13 mu_1       0.4      0.983        0.991  0.372         1.56
14 mu_1       0.5      0.975        0.990  0.490         1.50
15 mu_1       0.6      0.980        0.989  0.464         1.39
16 mu_1       0.7      0.981        0.961  0.504         1.72
17 mu_1       0.8      0.966        0.950  0.439         2.11
18 mu_1       0.9      0.961        0.871  0.131         6.06
19 mu_0       0.1      1.37         0.678  0.000301     55.4 
20 mu_0       0.2      1.08         0.899  0.0229       10.8 
21 mu_0       0.3      1.02         1.00   0.165         2.46
22 mu_0       0.4      0.995        0.977  0.355         1.81
23 mu_0       0.5      0.975        0.985  0.377         1.54
24 mu_0       0.6      0.973        0.982  0.502         1.44
25 mu_0       0.7      0.979        0.988  0.428         1.43
26 mu_0       0.8      0.977        0.948  0.495         1.71
27 mu_0       0.9      0.940        0.890  0.375         2.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      9.29     0.000233   3.20e-15    562.  
 2 mu         0.2      3.68     0.0187     4.20e-10    135.  
 3 mu         0.3      1.62     0.137      4.13e- 7     38.4 
 4 mu         0.4      1.09     0.494      5.50e- 5     13.0 
 5 mu         0.5      1.03     0.777      1.96e- 3      4.89
 6 mu         0.6      1.06     1.06       1.54e- 3      3.29
 7 mu         0.7      1.14     0.977      1.01e- 5      4.21
 8 mu         0.8      1.45     1.00       7.85e- 9     10.7 
 9 mu         0.9      2.41     0.190      3.37e-14     53.4 
10 mu_1       0.1      3.94     0.000791   0           296.  
11 mu_1       0.2      1.40     0.0287     0            42.7 
12 mu_1       0.3      0.936    0.177      0            14.8 
13 mu_1       0.4      0.956    0.497      0             4.84
14 mu_1       0.5      1.04     0.881      0             4.63
15 mu_1       0.6      1.09     0.986      0             3.36
16 mu_1       0.7      1.18     1.00       0             6.01
17 mu_1       0.8      1.52     0.886      0            13.4 
18 mu_1       0.9      2.53     0.132      0            59.3 
19 mu_0       0.1      9.88     0.0000683  0           591.  
20 mu_0       0.2      4.25     0.00772    0           160.  
21 mu_0       0.3      1.91     0.0636     0            54.8 
22 mu_0       0.4      1.17     0.303      0            21.7 
23 mu_0       0.5      1.02     0.560      0             7.28
24 mu_0       0.6      1.02     0.848      0             3.56
25 mu_0       0.7      1.05     0.911      0             3.11
26 mu_0       0.8      1.16     1.07       0             4.37
27 mu_0       0.9      1.36     0.208      0            16.2 
[1] "Total run time was 96.959 seconds"
