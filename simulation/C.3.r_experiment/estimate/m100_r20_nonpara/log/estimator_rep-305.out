
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1346"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  4  7  6  8  4 10  4  6  4  6  3  4 12 11  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03524 0.35446 0.63630 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
774 572 
[1] "treatment indicator table: "

  0   1 
498 848 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 62.949 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.501 0.122 
 2 mu         0.1   0.2 0.558 0.118 
 3 mu         0.1   0.3 0.597 0.124 
 4 mu         0.1   0.4 0.654 0.126 
 5 mu         0.1   0.5 0.657 0.127 
 6 mu         0.2   0.1 0.463 0.0840
 7 mu         0.2   0.2 0.537 0.0805
 8 mu         0.2   0.3 0.599 0.0852
 9 mu         0.2   0.4 0.657 0.0878
10 mu         0.2   0.5 0.665 0.0872
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.333 0.000109      12.1 
 2 mu         0.2      1.14         0.838 0.0179         6.62
 3 mu         0.3      1.05         0.980 0.145          3.04
 4 mu         0.4      1.01         0.978 0.364          2.66
 5 mu         0.5      0.996        0.979 0.556          1.89
 6 mu         0.6      0.983        0.970 0.665          1.32
 7 mu         0.7      0.980        0.973 0.702          1.42
 8 mu         0.8      0.998        1.02  0.396          1.40
 9 mu         0.9      1.02         0.974 0.157          2.51
10 mu_1       0.1      1.25         0.756 0.000518       9.85
11 mu_1       0.2      1.11         0.934 0.0427         4.53
12 mu_1       0.3      1.02         0.965 0.232          2.94
13 mu_1       0.4      1.00         0.981 0.475          2.45
14 mu_1       0.5      0.989        0.979 0.558          1.54
15 mu_1       0.6      0.980        0.965 0.685          1.35
16 mu_1       0.7      0.981        0.982 0.666          1.46
17 mu_1       0.8      1.00         1.04  0.378          1.48
18 mu_1       0.9      1.02         0.972 0.137          2.67
19 mu_0       0.1      1.03         0.275 0.0000636     12.3 
20 mu_0       0.2      1.15         0.817 0.0117         7.45
21 mu_0       0.3      1.07         0.945 0.105          3.24
22 mu_0       0.4      1.02         0.974 0.290          2.80
23 mu_0       0.5      1.00         0.970 0.532          2.25
24 mu_0       0.6      0.988        0.990 0.584          1.44
25 mu_0       0.7      0.977        0.961 0.669          1.40
26 mu_0       0.8      0.983        0.986 0.466          1.55
27 mu_0       0.9      1.03         1.02  0.336          2.11
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.45   0.0000300   4.60e-17     74.0 
 2 mu         0.2       1.86   0.00480     2.14e-11     79.9 
 3 mu         0.3       1.41   0.0629      4.16e- 8     27.9 
 4 mu         0.4       1.17   0.294       8.43e- 6     11.7 
 5 mu         0.5       1.06   0.698       4.87e- 4      5.17
 6 mu         0.6       1.02   1.03        6.54e- 3      2.56
 7 mu         0.7       1.03   1.07        1.04e- 4      3.07
 8 mu         0.8       1.05   0.817       2.37e- 7      4.35
 9 mu         0.9       1.17   0.120       3.23e-12      9.53
10 mu_1       0.1       2.26   0.000257    4.37e-16    111.  
11 mu_1       0.2       1.73   0.0150      1.02e-10     59.9 
12 mu_1       0.3       1.29   0.133       1.32e- 7     18.0 
13 mu_1       0.4       1.14   0.511       2.00e- 5      7.82
14 mu_1       0.5       1.05   0.893       9.26e- 4      4.35
15 mu_1       0.6       1.03   1.10        1.72e- 3      2.62
16 mu_1       0.7       1.03   0.961       2.35e- 5      3.10
17 mu_1       0.8       1.06   0.660       4.67e- 8      4.62
18 mu_1       0.9       1.18   0.0929      5.39e-13      9.96
19 mu_0       0.1       1.36   0.00000739  0            69.9 
20 mu_0       0.2       1.89   0.00163     0            84.9 
21 mu_0       0.3       1.47   0.0325      0            33.8 
22 mu_0       0.4       1.19   0.140       0            14.3 
23 mu_0       0.5       1.06   0.521       0             5.99
24 mu_0       0.6       1.02   0.936       0             2.80
25 mu_0       0.7       1.03   1.09        0             3.01
26 mu_0       0.8       1.02   1.03        0             3.57
27 mu_0       0.9       1.08   0.245       0             6.04
[1] "Total run time was 65.831 seconds"
