
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1221"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 10  7  3  9 12  3  6  7  9  3  3  4  5  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03729 0.41752 0.65294 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
698 523 
[1] "treatment indicator table: "

  0   1 
473 748 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 89.768 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.228 0.0271
 2 mu         0.1   0.2 0.299 0.0513
 3 mu         0.1   0.3 0.301 0.0570
 4 mu         0.1   0.4 0.370 0.0943
 5 mu         0.1   0.5 0.358 0.0860
 6 mu         0.2   0.1 0.276 0.0325
 7 mu         0.2   0.2 0.363 0.0416
 8 mu         0.2   0.3 0.397 0.0467
 9 mu         0.2   0.4 0.458 0.0569
10 mu         0.2   0.5 0.488 0.0568
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.754        0.403  0.000800      3.73
 2 mu         0.2      0.979        0.829  0.0244        3.29
 3 mu         0.3      1.05         1.00   0.133         3.19
 4 mu         0.4      1.04         1.02   0.367         2.20
 5 mu         0.5      1.01         1.00   0.553         1.63
 6 mu         0.6      0.997        1.00   0.604         1.31
 7 mu         0.7      0.997        1.00   0.424         1.53
 8 mu         0.8      0.996        0.970  0.207         2.12
 9 mu         0.9      0.994        0.959  0.0475        3.80
10 mu_1       0.1      0.871        0.759  0.00372       3.64
11 mu_1       0.2      1.04         0.976  0.0583        3.57
12 mu_1       0.3      1.06         1.04   0.224         2.93
13 mu_1       0.4      1.03         1.01   0.504         1.88
14 mu_1       0.5      0.997        0.992  0.488         1.54
15 mu_1       0.6      0.990        0.998  0.663         1.37
16 mu_1       0.7      0.993        1.00   0.357         1.69
17 mu_1       0.8      0.992        0.981  0.181         2.21
18 mu_1       0.9      0.992        0.966  0.0380        3.98
19 mu_0       0.1      0.741        0.358  0.000476      4.14
20 mu_0       0.2      0.964        0.771  0.0159        3.22
21 mu_0       0.3      1.05         0.983  0.0939        3.30
22 mu_0       0.4      1.05         1.05   0.277         2.42
23 mu_0       0.5      1.02         0.987  0.515         1.79
24 mu_0       0.6      1.01         0.991  0.515         1.52
25 mu_0       0.7      1.01         1.01   0.581         1.41
26 mu_0       0.8      1.01         0.993  0.309         1.74
27 mu_0       0.9      1.01         0.957  0.132         2.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.851    0.000132   1.42e-13     64.2 
 2 mu         0.2      1.30     0.0115     1.31e- 8     44.5 
 3 mu         0.3      1.53     0.142      5.26e- 6     29.2 
 4 mu         0.4      1.44     0.557      2.95e- 4     12.2 
 5 mu         0.5      1.22     1.11       6.71e- 3      5.37
 6 mu         0.6      1.07     1.16       8.62e- 2      2.68
 7 mu         0.7      1.07     1.05       6.10e- 3      2.56
 8 mu         0.8      1.26     0.542      2.72e- 5      5.70
 9 mu         0.9      1.68     0.0615     1.49e- 9     25.2 
10 mu_1       0.1      1.24     0.000719   1.21e-12     64.2 
11 mu_1       0.2      1.50     0.0419     5.57e- 8     35.6 
12 mu_1       0.3      1.55     0.296      1.75e- 5     24.3 
13 mu_1       0.4      1.35     0.841      7.38e- 4      7.61
14 mu_1       0.5      1.15     1.08       1.34e- 2      4.58
15 mu_1       0.6      1.05     1.03       4.34e- 2      2.48
16 mu_1       0.7      1.10     1.05       2.18e- 3      2.87
17 mu_1       0.8      1.32     0.404      8.49e- 6      6.64
18 mu_1       0.9      1.73     0.0385     4.15e-10     28.0 
19 mu_0       0.1      0.808    0.0000494  0            64.2 
20 mu_0       0.2      1.24     0.00571    0            50.0 
21 mu_0       0.3      1.52     0.0772     0            31.3 
22 mu_0       0.4      1.49     0.345      0            15.2 
23 mu_0       0.5      1.30     0.919      0             6.21
24 mu_0       0.6      1.11     1.06       0             3.37
25 mu_0       0.7      1.01     1.01       0             2.44
26 mu_0       0.8      1.05     0.804      0             3.52
27 mu_0       0.9      1.23     0.182      0             9.87
[1] "Total run time was 94.279 seconds"
