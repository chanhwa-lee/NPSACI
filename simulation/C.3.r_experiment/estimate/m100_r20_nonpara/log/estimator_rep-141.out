
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4 10  9  3  5  8  2  4  5  7  9  4  5 10  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01076 0.25615 0.54389 0.88168 4.00000 
[1] "event indicator table: "

  0   1 
739 530 
[1] "treatment indicator table: "

  0   1 
523 746 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.163 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.674 0.128 
 2 mu         0.1   0.2 0.714 0.117 
 3 mu         0.1   0.3 0.752 0.119 
 4 mu         0.1   0.4 0.789 0.128 
 5 mu         0.1   0.5 0.792 0.133 
 6 mu         0.2   0.1 0.487 0.0625
 7 mu         0.2   0.2 0.514 0.0505
 8 mu         0.2   0.3 0.556 0.0457
 9 mu         0.2   0.4 0.597 0.0472
10 mu         0.2   0.5 0.611 0.0491
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.32         0.594  0.000365     13.5 
 2 mu         0.2      1.06         0.858  0.0190        4.12
 3 mu         0.3      0.992        0.935  0.0927        1.92
 4 mu         0.4      0.986        1.00   0.210         1.51
 5 mu         0.5      0.989        1.01   0.421         1.40
 6 mu         0.6      0.992        1.01   0.686         1.32
 7 mu         0.7      0.996        0.971  0.619         1.37
 8 mu         0.8      1.01         1.02   0.325         1.86
 9 mu         0.9      1.02         0.948  0.0464        3.11
10 mu_1       0.1      1.12         0.978  0.00158       6.67
11 mu_1       0.2      0.992        0.974  0.0393        2.54
12 mu_1       0.3      0.982        0.974  0.133         1.89
13 mu_1       0.4      0.984        1.00   0.261         1.45
14 mu_1       0.5      0.987        1.01   0.472         1.39
15 mu_1       0.6      0.991        0.996  0.665         1.31
16 mu_1       0.7      0.996        0.969  0.521         1.41
17 mu_1       0.8      1.01         1.04   0.274         1.89
18 mu_1       0.9      1.02         0.931  0.0373        3.23
19 mu_0       0.1      1.34         0.535  0.000216     14.8 
20 mu_0       0.2      1.08         0.861  0.0126        4.65
21 mu_0       0.3      0.997        0.921  0.0752        2.03
22 mu_0       0.4      0.988        1.00   0.177         1.69
23 mu_0       0.5      0.991        1.01   0.332         1.42
24 mu_0       0.6      0.994        0.998  0.554         1.44
25 mu_0       0.7      0.996        0.998  0.599         1.35
26 mu_0       0.8      1.00         1.00   0.496         1.79
27 mu_0       0.9      1.01         1.03   0.129         2.04
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.904     0.000323  1.81e-14     30.5 
 2 mu         0.2      1.39      0.0245    1.87e- 9     32.6 
 3 mu         0.3      1.37      0.265     1.41e- 6     16.9 
 4 mu         0.4      1.21      0.749     1.38e- 4      5.68
 5 mu         0.5      1.08      0.967     4.26e- 3      3.28
 6 mu         0.6      1.02      0.918     1.09e- 2      3.40
 7 mu         0.7      1.11      1.12      4.01e- 4      2.91
 8 mu         0.8      1.33      0.658     3.53e- 6      5.95
 9 mu         0.9      1.55      0.0894    2.05e-10     17.8 
10 mu_1       0.1      1.49      0.00189   1.62e-13     37.4 
11 mu_1       0.2      1.56      0.0829    8.38e- 9     28.7 
12 mu_1       0.3      1.34      0.563     4.22e- 6      9.97
13 mu_1       0.4      1.16      1.02      3.09e- 4      5.23
14 mu_1       0.5      1.03      0.989     7.62e- 3      3.53
15 mu_1       0.6      1.01      0.958     1.39e- 3      3.19
16 mu_1       0.7      1.15      1.33      4.41e- 5      3.38
17 mu_1       0.8      1.39      0.495     3.40e- 7      6.33
18 mu_1       0.9      1.61      0.0629    5.70e-11     19.8 
19 mu_0       0.1      0.839     0.000160  0            31.2 
20 mu_0       0.2      1.35      0.0130    0            33.5 
21 mu_0       0.3      1.38      0.143     0            19.9 
22 mu_0       0.4      1.25      0.468     0             6.40
23 mu_0       0.5      1.12      0.868     0             3.84
24 mu_0       0.6      1.02      1.02      0             3.72
25 mu_0       0.7      1.01      0.864     0             2.65
26 mu_0       0.8      1.10      0.718     0             4.59
27 mu_0       0.9      1.08      0.0961    0             8.29
[1] "Total run time was 60.359 seconds"
