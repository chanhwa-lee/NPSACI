
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1216"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  6 10  5  5  3  3  8  9  7  4  5  4 12  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01811 0.29232 0.55678 0.93911 4.00000 
[1] "event indicator table: "

  0   1 
737 479 
[1] "treatment indicator table: "

  0   1 
460 756 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 572
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 80.032 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.316 0.112 
 2 mu         0.1   0.2 0.332 0.138 
 3 mu         0.1   0.3 0.389 0.159 
 4 mu         0.1   0.4 0.422 0.175 
 5 mu         0.1   0.5 0.471 0.185 
 6 mu         0.2   0.1 0.255 0.0544
 7 mu         0.2   0.2 0.292 0.0718
 8 mu         0.2   0.3 0.370 0.0713
 9 mu         0.2   0.4 0.390 0.0814
10 mu         0.2   0.5 0.461 0.0873
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.935        0.233 0.00000254     20.5 
 2 mu         0.2      0.913        0.593 0.000715        8.37
 3 mu         0.3      0.958        0.901 0.0142          6.55
 4 mu         0.4      0.972        0.956 0.0907          4.61
 5 mu         0.5      0.973        0.988 0.297           2.04
 6 mu         0.6      0.992        1.01  0.591           1.42
 7 mu         0.7      1.02         1.02  0.470           1.55
 8 mu         0.8      1.05         1.05  0.199           2.34
 9 mu         0.9      1.07         1.05  0.0272          6.27
10 mu_1       0.1      0.937        0.467 0.0000154      12.1 
11 mu_1       0.2      0.905        0.798 0.00219         5.51
12 mu_1       0.3      0.959        0.931 0.0295          6.63
13 mu_1       0.4      0.968        0.973 0.144           3.68
14 mu_1       0.5      0.980        0.990 0.389           1.62
15 mu_1       0.6      1.00         1.02  0.609           1.48
16 mu_1       0.7      1.03         1.03  0.409           1.62
17 mu_1       0.8      1.05         1.05  0.165           2.55
18 mu_1       0.9      1.08         1.04  0.0209          6.63
19 mu_0       0.1      0.934        0.197 0.00000111     21.4 
20 mu_0       0.2      0.916        0.530 0.000346        9.28
21 mu_0       0.3      0.957        0.872 0.00765         6.52
22 mu_0       0.4      0.974        0.961 0.0550          5.23
23 mu_0       0.5      0.967        0.970 0.205           2.46
24 mu_0       0.6      0.975        0.999 0.482           1.35
25 mu_0       0.7      0.996        0.995 0.613           1.54
26 mu_0       0.8      1.02         1.00  0.337           1.79
27 mu_0       0.9      1.03         1.02  0.0838          3.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.69    0.000296   1.16e-15     88.6 
 2 mu         0.2       6.45    0.0149     2.69e-10    485.  
 3 mu         0.3       6.92    0.0998     3.48e- 7    497.  
 4 mu         0.4       3.80    0.408      5.29e- 5    207.  
 5 mu         0.5       1.72    0.939      1.94e- 3     41.1 
 6 mu         0.6       1.14    1.07       2.07e- 2      3.59
 7 mu         0.7       1.23    1.03       8.36e- 3      4.45
 8 mu         0.8       1.71    0.747      9.57e- 5     16.7 
 9 mu         0.9       2.41    0.133      1.27e- 8     43.3 
10 mu_1       0.1       3.73    0.00223    1.09e-14    222.  
11 mu_1       0.2       8.00    0.0467     1.28e- 9    606.  
12 mu_1       0.3       6.12    0.244      1.10e- 6    414.  
13 mu_1       0.4       2.89    0.646      1.25e- 4    130.  
14 mu_1       0.5       1.42    1.09       3.88e- 3     20.5 
15 mu_1       0.6       1.12    1.14       3.46e- 2      3.66
16 mu_1       0.7       1.31    0.888      3.77e- 3      5.16
17 mu_1       0.8       1.80    0.568      3.78e- 5     19.4 
18 mu_1       0.9       2.45    0.0993     3.71e- 9     44.9 
19 mu_0       0.1       1.47    0.0000671  0            73.9 
20 mu_0       0.2       6.06    0.00553    0           454.  
21 mu_0       0.3       7.27    0.0447     0           532.  
22 mu_0       0.4       4.41    0.276      0           259.  
23 mu_0       0.5       2.02    0.705      0            61.6 
24 mu_0       0.6       1.18    0.922      0             6.74
25 mu_0       0.7       1.07    0.964      0             4.46
26 mu_0       0.8       1.31    0.938      0             7.01
27 mu_0       0.9       2.07    0.304      0            28.9 
[1] "Total run time was 84.595 seconds"
