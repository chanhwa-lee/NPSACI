
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1289"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  7  4  9  2 12  4 10  5  5  6  4  8  5 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03521 0.36818 0.65085 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
767 522 
[1] "treatment indicator table: "

  0   1 
459 830 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.974 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.753 0.359 
 2 mu         0.1   0.2 0.910 0.444 
 3 mu         0.1   0.3 0.975 0.490 
 4 mu         0.1   0.4 1.09  0.556 
 5 mu         0.1   0.5 1.11  0.577 
 6 mu         0.2   0.1 0.479 0.0897
 7 mu         0.2   0.2 0.570 0.111 
 8 mu         0.2   0.3 0.605 0.120 
 9 mu         0.2   0.4 0.662 0.140 
10 mu         0.2   0.5 0.676 0.144 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.91         0.306 0.0000502    103.  
 2 mu         0.2      1.21         0.749 0.00833       23.3 
 3 mu         0.3      1.04         0.938 0.0903         4.26
 4 mu         0.4      1.01         0.985 0.298          1.97
 5 mu         0.5      1.01         1.01  0.441          1.72
 6 mu         0.6      1.03         1.02  0.696          1.45
 7 mu         0.7      1.02         0.998 0.719          1.68
 8 mu         0.8      0.980        0.964 0.483          1.80
 9 mu         0.9      0.939        0.873 0.0505         2.28
10 mu_1       0.1      1.51         0.573 0.000230      52.0 
11 mu_1       0.2      1.08         0.877 0.0193         7.28
12 mu_1       0.3      1.03         1.02  0.144          2.24
13 mu_1       0.4      1.01         1.00  0.309          1.99
14 mu_1       0.5      1.02         1.01  0.517          1.59
15 mu_1       0.6      1.03         1.01  0.739          1.46
16 mu_1       0.7      1.01         0.985 0.664          1.70
17 mu_1       0.8      0.973        0.953 0.415          1.87
18 mu_1       0.9      0.935        0.874 0.0398         2.34
19 mu_0       0.1      1.96         0.263 0.0000303    109.  
20 mu_0       0.2      1.24         0.692 0.00559       27.3 
21 mu_0       0.3      1.05         0.916 0.0637         5.25
22 mu_0       0.4      1.01         0.993 0.231          1.96
23 mu_0       0.5      1.01         1.02  0.364          1.84
24 mu_0       0.6      1.03         1.02  0.555          1.45
25 mu_0       0.7      1.04         1.03  0.711          1.65
26 mu_0       0.8      1.01         0.988 0.642          1.73
27 mu_0       0.9      0.971        0.936 0.147          1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.24    0.0000197   2.24e-15     73.6 
 2 mu         0.2      2.40    0.00375     4.64e-10     89.4 
 3 mu         0.3      1.98    0.0576      5.25e- 7     39.8 
 4 mu         0.4      1.26    0.252       6.85e- 5     19.3 
 5 mu         0.5      0.982   0.723       2.48e- 3      5.30
 6 mu         0.6      1.05    0.974       1.40e- 2      3.42
 7 mu         0.7      1.15    1.19        3.48e- 4      3.09
 8 mu         0.8      1.15    1.02        1.33e- 6      4.37
 9 mu         0.9      1.24    0.146       2.89e-11     16.7 
10 mu_1       0.1      2.36    0.000132    2.02e-14    116.  
11 mu_1       0.2      2.61    0.0113      2.09e- 9     70.6 
12 mu_1       0.3      1.68    0.123       1.58e- 6     32.4 
13 mu_1       0.4      1.06    0.421       1.54e- 4     12.1 
14 mu_1       0.5      0.958   0.839       4.75e- 3      3.43
15 mu_1       0.6      1.08    1.05        4.93e- 3      3.51
16 mu_1       0.7      1.15    1.20        1.05e- 4      3.36
17 mu_1       0.8      1.15    0.867       2.63e- 7      4.85
18 mu_1       0.9      1.25    0.113       5.08e-12     18.6 
19 mu_0       0.1      1.12    0.00000488  0            68.8 
20 mu_0       0.2      2.35    0.00158     0            94.1 
21 mu_0       0.3      2.11    0.0249      0            43.5 
22 mu_0       0.4      1.39    0.137       0            24.2 
23 mu_0       0.5      1.01    0.475       0             7.95
24 mu_0       0.6      1.01    0.860       0             3.29
25 mu_0       0.7      1.13    1.15        0             3.57
26 mu_0       0.8      1.16    1.16        0             3.80
27 mu_0       0.9      1.07    0.338       0             7.99
[1] "Total run time was 63.133 seconds"
