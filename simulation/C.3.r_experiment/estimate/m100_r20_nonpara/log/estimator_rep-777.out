
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1259"
[1] "cluster size dist'n: "

 5  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  3 11 13  3 10  3  6  7  7  9  4 10  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01955 0.32221 0.58148 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
732 527 
[1] "treatment indicator table: "

  0   1 
456 803 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.06 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.318 0.0551
 2 mu         0.1   0.2 0.364 0.0681
 3 mu         0.1   0.3 0.425 0.0813
 4 mu         0.1   0.4 0.441 0.0815
 5 mu         0.1   0.5 0.451 0.0820
 6 mu         0.2   0.1 0.314 0.0433
 7 mu         0.2   0.2 0.372 0.0590
 8 mu         0.2   0.3 0.420 0.0522
 9 mu         0.2   0.4 0.451 0.0579
10 mu         0.2   0.5 0.487 0.0567
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.797        0.238  0.000235      5.25
 2 mu         0.2      0.910        0.742  0.0157        4.75
 3 mu         0.3      0.971        0.933  0.0830        2.99
 4 mu         0.4      0.975        0.947  0.220         1.90
 5 mu         0.5      0.970        0.947  0.423         1.59
 6 mu         0.6      0.979        0.965  0.556         1.59
 7 mu         0.7      1.00         0.997  0.515         1.38
 8 mu         0.8      1.01         0.974  0.625         1.83
 9 mu         0.9      0.975        0.924  0.242         2.16
10 mu_1       0.1      0.906        0.579  0.000944      6.54
11 mu_1       0.2      0.966        0.838  0.0324        3.36
12 mu_1       0.3      0.978        0.902  0.138         2.08
13 mu_1       0.4      0.970        0.964  0.260         1.77
14 mu_1       0.5      0.970        0.955  0.514         1.63
15 mu_1       0.6      0.985        0.972  0.548         1.54
16 mu_1       0.7      1.01         0.997  0.495         1.57
17 mu_1       0.8      1.01         0.983  0.584         1.92
18 mu_1       0.9      0.971        0.929  0.218         2.20
19 mu_0       0.1      0.784        0.182  0.000156      5.53
20 mu_0       0.2      0.896        0.721  0.0103        5.10
21 mu_0       0.3      0.967        0.906  0.0594        3.56
22 mu_0       0.4      0.978        0.926  0.168         2.07
23 mu_0       0.5      0.970        0.943  0.332         1.66
24 mu_0       0.6      0.970        0.945  0.552         1.66
25 mu_0       0.7      0.986        0.975  0.551         1.49
26 mu_0       0.8      1.01         0.978  0.449         1.50
27 mu_0       0.9      1.01         0.957  0.367         2.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.24     0.0000632  1.74e-17     74.6 
 2 mu         0.2      1.72     0.00686    4.56e-12     45.9 
 3 mu         0.3      1.63     0.0769     6.73e- 9     27.3 
 4 mu         0.4      1.34     0.332      1.19e- 6     15.2 
 5 mu         0.5      1.14     0.822      6.63e- 5      5.90
 6 mu         0.6      1.06     1.02       1.77e- 3      3.84
 7 mu         0.7      1.02     0.939      8.71e- 4      2.80
 8 mu         0.8      0.999    0.775      3.39e- 6      4.57
 9 mu         0.9      1.21     0.158      1.66e-10     13.8 
10 mu_1       0.1      1.71     0.000495   1.74e-16     62.2 
11 mu_1       0.2      1.81     0.0205     2.28e-11     43.1 
12 mu_1       0.3      1.54     0.171      2.24e- 8     22.5 
13 mu_1       0.4      1.26     0.599      2.99e- 6     11.2 
14 mu_1       0.5      1.10     0.945      1.33e- 4      5.24
15 mu_1       0.6      1.05     0.995      2.94e- 3      3.26
16 mu_1       0.7      1.02     0.955      2.62e- 4      2.89
17 mu_1       0.8      1.00     0.648      8.93e- 7      4.76
18 mu_1       0.9      1.25     0.117      3.88e-11     15.3 
19 mu_0       0.1      1.19     0.0000140  0            76.0 
20 mu_0       0.2      1.70     0.00247    0            46.8 
21 mu_0       0.3      1.67     0.0299     0            31.7 
22 mu_0       0.4      1.39     0.175      0            17.9 
23 mu_0       0.5      1.17     0.591      0             7.34
24 mu_0       0.6      1.08     0.916      0             5.33
25 mu_0       0.7      1.04     1.01       0             3.23
26 mu_0       0.8      0.976    0.813      0             3.81
27 mu_0       0.9      0.893    0.144      0             5.57
[1] "Total run time was 59.316 seconds"
