
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1255"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  2 11  7 10  6  5  4  8  4  3  4 13  5  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05974 0.39513 0.65556 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
711 544 
[1] "treatment indicator table: "

  0   1 
397 858 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 577
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 678
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 73.166 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.429 0.143
 2 mu         0.1   0.2 0.465 0.133
 3 mu         0.1   0.3 0.592 0.190
 4 mu         0.1   0.4 0.579 0.172
 5 mu         0.1   0.5 0.572 0.159
 6 mu         0.2   0.1 0.416 0.125
 7 mu         0.2   0.2 0.449 0.103
 8 mu         0.2   0.3 0.553 0.120
 9 mu         0.2   0.4 0.550 0.109
10 mu         0.2   0.5 0.556 0.104
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.841       0.0674 0.00000102      21.2 
 2 mu         0.2      0.893       0.395  0.000822        14.5 
 3 mu         0.3      0.890       0.710  0.0187           5.06
 4 mu         0.4      0.939       0.909  0.118            4.27
 5 mu         0.5      1.00        0.972  0.318            3.53
 6 mu         0.6      1.02        0.966  0.568            2.54
 7 mu         0.7      0.999       0.962  0.650            1.80
 8 mu         0.8      0.983       0.987  0.602            1.58
 9 mu         0.9      0.969       0.968  0.124            1.91
10 mu_1       0.1      0.895       0.211  0.00000590      24.9 
11 mu_1       0.2      0.871       0.637  0.00238          8.61
12 mu_1       0.3      0.898       0.775  0.0387           4.30
13 mu_1       0.4      0.965       0.935  0.186            4.22
14 mu_1       0.5      1.02        0.985  0.438            3.23
15 mu_1       0.6      1.02        0.965  0.692            2.34
16 mu_1       0.7      0.997       0.969  0.637            1.68
17 mu_1       0.8      0.984       0.988  0.561            1.67
18 mu_1       0.9      0.968       0.955  0.105            1.92
19 mu_0       0.1      0.835       0.0489 0.000000476     20.8 
20 mu_0       0.2      0.899       0.336  0.000431        16.0 
21 mu_0       0.3      0.886       0.650  0.0101           5.77
22 mu_0       0.4      0.921       0.859  0.0722           4.31
23 mu_0       0.5      0.987       1.01   0.197            3.84
24 mu_0       0.6      1.02        0.972  0.383            2.85
25 mu_0       0.7      1.01        0.954  0.632            2.06
26 mu_0       0.8      0.979       0.955  0.591            1.47
27 mu_0       0.9      0.979       1.01   0.300            1.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      18.0    0.00000701  2.05e-15   1781.  
 2 mu         0.2      10.2    0.00114     2.39e-10    962.  
 3 mu         0.3       3.20   0.0195      2.06e- 7    224.  
 4 mu         0.4       1.43   0.138       2.35e- 5     28.9 
 5 mu         0.5       1.23   0.493       8.68e- 4     16.4 
 6 mu         0.6       1.23   0.854       1.54e- 2      6.96
 7 mu         0.7       1.25   1.03        6.76e- 4      7.10
 8 mu         0.8       1.26   1.05        8.96e- 7      6.16
 9 mu         0.9       1.25   0.362       8.65e-12     11.3 
10 mu_1       0.1      19.3    0.0000626   1.93e-14   1875.  
11 mu_1       0.2       5.93   0.00472     1.13e- 9    506.  
12 mu_1       0.3       1.88   0.0494      6.48e- 7     78.4 
13 mu_1       0.4       1.27   0.253       5.54e- 5     21.9 
14 mu_1       0.5       1.23   0.629       1.64e- 3     13.5 
15 mu_1       0.6       1.24   0.848       1.16e- 2      6.10
16 mu_1       0.7       1.26   1.13        1.02e- 4      7.16
17 mu_1       0.8       1.27   1.01        1.18e- 7      6.68
18 mu_1       0.9       1.25   0.304       1.01e-12     12.6 
19 mu_0       0.1      17.9    0.00000158  0          1770.  
20 mu_0       0.2      11.3    0.000332    0          1076.  
21 mu_0       0.3       3.76   0.00801     0           286.  
22 mu_0       0.4       1.54   0.0618      0            43.1 
23 mu_0       0.5       1.22   0.278       0            19.3 
24 mu_0       0.6       1.21   0.677       0             9.28
25 mu_0       0.7       1.21   0.943       0             6.96
26 mu_0       0.8       1.22   1.02        0             6.83
27 mu_0       0.9       1.20   0.638       0             9.50
[1] "Total run time was 77.486 seconds"
