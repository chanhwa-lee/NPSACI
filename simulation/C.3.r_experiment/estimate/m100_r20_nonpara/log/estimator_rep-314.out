
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1274"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  2  9  8  6  4  6  2  8  6  3  8  8 11  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02988 0.33038 0.60785 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
780 494 
[1] "treatment indicator table: "

  0   1 
450 824 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 80.572 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.342 0.222
 2 mu         0.1   0.2 0.376 0.199
 3 mu         0.1   0.3 0.375 0.171
 4 mu         0.1   0.4 0.391 0.165
 5 mu         0.1   0.5 0.440 0.134
 6 mu         0.2   0.1 0.333 0.113
 7 mu         0.2   0.2 0.393 0.109
 8 mu         0.2   0.3 0.421 0.109
 9 mu         0.2   0.4 0.440 0.117
10 mu         0.2   0.5 0.463 0.120
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.657       0.0703 0.00000217     12.2 
 2 mu         0.2      0.890       0.472  0.000886        9.38
 3 mu         0.3      0.972       0.829  0.0187          4.53
 4 mu         0.4      0.999       0.940  0.112           2.55
 5 mu         0.5      1.01        0.965  0.333           1.85
 6 mu         0.6      1.02        1.01   0.614           1.68
 7 mu         0.7      1.00        1.01   0.688           1.36
 8 mu         0.8      0.957       0.960  0.226           1.72
 9 mu         0.9      0.844       0.868  0.0116          2.50
10 mu_1       0.1      0.789       0.221  0.0000121      14.8 
11 mu_1       0.2      0.940       0.674  0.00248         7.07
12 mu_1       0.3      0.987       0.918  0.0353          3.41
13 mu_1       0.4      1.01        0.984  0.163           2.22
14 mu_1       0.5      1.02        0.993  0.411           1.79
15 mu_1       0.6      1.02        1.01   0.661           1.61
16 mu_1       0.7      0.997       1.01   0.642           1.43
17 mu_1       0.8      0.947       0.952  0.181           1.88
18 mu_1       0.9      0.833       0.853  0.00847         2.65
19 mu_0       0.1      0.642       0.0549 0.00000107     12.0 
20 mu_0       0.2      0.878       0.406  0.000489       10.1 
21 mu_0       0.3      0.966       0.797  0.0116          5.12
22 mu_0       0.4      0.993       0.939  0.0776          2.76
23 mu_0       0.5      1.01        0.966  0.254           2.07
24 mu_0       0.6      1.01        0.990  0.539           1.79
25 mu_0       0.7      1.01        1.00   0.703           1.51
26 mu_0       0.8      0.993       0.993  0.403           1.53
27 mu_0       0.9      0.946       1.01   0.0397          2.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.346    0.000112   6.84e-15     10.7 
 2 mu         0.2      0.859    0.00796    1.42e- 9     23.0 
 3 mu         0.3      1.27     0.103      1.47e- 6     20.4 
 4 mu         0.4      1.35     0.360      1.26e- 4     13.0 
 5 mu         0.5      1.20     0.853      3.73e- 3      9.61
 6 mu         0.6      1.12     1.05       2.20e- 2      3.85
 7 mu         0.7      1.21     1.03       7.26e- 4      6.36
 8 mu         0.8      1.36     0.902      4.24e- 6      9.45
 9 mu         0.9      1.30     0.224      4.14e-10     20.9 
10 mu_1       0.1      0.714    0.000747   6.15e-14     21.6 
11 mu_1       0.2      1.16     0.0250     6.37e- 9     26.6 
12 mu_1       0.3      1.39     0.221      4.62e- 6     15.7 
13 mu_1       0.4      1.33     0.593      2.97e- 4     13.0 
14 mu_1       0.5      1.18     1.10       7.01e- 3      7.69
15 mu_1       0.6      1.14     1.06       8.14e- 3      4.35
16 mu_1       0.7      1.25     0.999      2.30e- 4      6.56
17 mu_1       0.8      1.39     0.757      1.18e- 6     11.4 
18 mu_1       0.9      1.29     0.169      1.02e-10     23.2 
19 mu_0       0.1      0.305    0.0000267  0            10.4 
20 mu_0       0.2      0.785    0.00359    0            22.1 
21 mu_0       0.3      1.23     0.0374     0            22.5 
22 mu_0       0.4      1.36     0.173      0            13.3 
23 mu_0       0.5      1.23     0.544      0            11.5 
24 mu_0       0.6      1.09     1.06       0             5.78
25 mu_0       0.7      1.11     1.03       0             5.89
26 mu_0       0.8      1.27     1.01       0             8.86
27 mu_0       0.9      1.43     0.454      0            12.7 
[1] "Total run time was 84.76 seconds"
