
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1350"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  7  5  6  3  4 12  2  6  8  6  8  7 11  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01923 0.31157 0.57118 0.97815 5.00000 
[1] "event indicator table: "

  0   1 
812 538 
[1] "treatment indicator table: "

  0   1 
493 857 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 679
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.486 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.384 0.114 
 2 mu         0.1   0.2 0.625 0.0949
 3 mu         0.1   0.3 0.637 0.0999
 4 mu         0.1   0.4 0.653 0.109 
 5 mu         0.1   0.5 0.651 0.127 
 6 mu         0.2   0.1 0.352 0.0805
 7 mu         0.2   0.2 0.528 0.0656
 8 mu         0.2   0.3 0.545 0.0682
 9 mu         0.2   0.4 0.573 0.0752
10 mu         0.2   0.5 0.581 0.0871
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.18         0.801 0.000111       4.93
 2 mu         0.2      1.07         1.07  0.0171         2.55
 3 mu         0.3      1.04         1.06  0.176          2.20
 4 mu         0.4      1.00         1.01  0.392          1.85
 5 mu         0.5      0.988        0.991 0.507          1.39
 6 mu         0.6      0.987        0.972 0.553          1.40
 7 mu         0.7      0.981        0.967 0.543          1.39
 8 mu         0.8      0.976        0.962 0.379          1.57
 9 mu         0.9      0.979        0.934 0.155          1.87
10 mu_1       0.1      1.11         1.07  0.000503       3.20
11 mu_1       0.2      1.06         1.05  0.0393         2.37
12 mu_1       0.3      1.02         0.986 0.276          2.18
13 mu_1       0.4      0.991        0.996 0.515          1.59
14 mu_1       0.5      0.983        0.973 0.470          1.39
15 mu_1       0.6      0.985        0.972 0.570          1.42
16 mu_1       0.7      0.980        0.969 0.547          1.39
17 mu_1       0.8      0.977        0.953 0.347          1.59
18 mu_1       0.9      0.979        0.916 0.138          1.92
19 mu_0       0.1      1.18         0.728 0.0000673      5.33
20 mu_0       0.2      1.08         1.08  0.0116         2.59
21 mu_0       0.3      1.04         1.06  0.133          2.21
22 mu_0       0.4      1.01         1.01  0.303          2.02
23 mu_0       0.5      0.994        1.00  0.534          1.41
24 mu_0       0.6      0.990        0.982 0.492          1.38
25 mu_0       0.7      0.984        0.974 0.535          1.44
26 mu_0       0.8      0.972        0.942 0.506          1.49
27 mu_0       0.9      0.977        0.961 0.0944         1.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.670   0.0000257   2.45e-19     20.1 
 2 mu         0.2      0.839   0.00439     2.57e-13     15.7 
 3 mu         0.3      0.929   0.0799      8.56e-10      8.08
 4 mu         0.4      0.990   0.368       2.70e- 7      4.16
 5 mu         0.5      0.992   0.844       2.34e- 5      3.55
 6 mu         0.6      0.978   0.912       8.97e- 4      2.88
 7 mu         0.7      0.997   0.978       3.92e- 3      2.87
 8 mu         0.8      1.07    0.770       4.66e- 5      4.12
 9 mu         0.9      1.23    0.0938      5.76e- 9      7.71
10 mu_1       0.1      0.962   0.000148    2.45e-18     22.4 
11 mu_1       0.2      0.842   0.0147      1.29e-12      8.71
12 mu_1       0.3      0.914   0.164       2.85e- 9      5.36
13 mu_1       0.4      0.976   0.551       6.75e- 7      4.34
14 mu_1       0.5      0.978   0.812       4.68e- 5      3.14
15 mu_1       0.6      0.976   0.895       1.50e- 3      3.12
16 mu_1       0.7      1.01    0.965       6.07e- 4      2.97
17 mu_1       0.8      1.09    0.607       1.58e- 5      4.24
18 mu_1       0.9      1.26    0.0672      1.92e- 9      8.43
19 mu_0       0.1      0.638   0.00000898  0            19.9 
20 mu_0       0.2      0.838   0.00205     0            17.4 
21 mu_0       0.3      0.935   0.0313      0            10.3 
22 mu_0       0.4      0.999   0.217       0             4.65
23 mu_0       0.5      1.01    0.683       0             4.14
24 mu_0       0.6      0.980   0.831       0             2.70
25 mu_0       0.7      0.965   0.844       0             3.32
26 mu_0       0.8      0.970   0.772       0             3.64
27 mu_0       0.9      0.980   0.0826      0             6.39
[1] "Total run time was 64.465 seconds"
