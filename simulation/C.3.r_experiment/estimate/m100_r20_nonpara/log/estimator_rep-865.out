
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1232"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  3  7 11  7 11  3  3  7  4 10  5  6  4  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04024 0.35788 0.61178 1.00000 5.12700 
[1] "event indicator table: "

  0   1 
739 493 
[1] "treatment indicator table: "

  0   1 
452 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 95.552 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.166 0.0772
 2 mu         0.1   0.2 0.162 0.103 
 3 mu         0.1   0.3 0.151 0.112 
 4 mu         0.1   0.4 0.156 0.110 
 5 mu         0.1   0.5 0.140 0.120 
 6 mu         0.2   0.1 0.212 0.0749
 7 mu         0.2   0.2 0.231 0.101 
 8 mu         0.2   0.3 0.237 0.111 
 9 mu         0.2   0.4 0.259 0.109 
10 mu         0.2   0.5 0.255 0.117 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.456       0.0501 0.00000243      4.58
 2 mu         0.2      0.701       0.369  0.00100         5.65
 3 mu         0.3      0.869       0.747  0.0216          3.84
 4 mu         0.4      0.976       0.958  0.133           2.30
 5 mu         0.5      1.02        0.989  0.401           1.74
 6 mu         0.6      1.02        0.994  0.651           1.53
 7 mu         0.7      1.01        0.999  0.659           1.68
 8 mu         0.8      0.976       0.948  0.297           2.43
 9 mu         0.9      0.967       0.822  0.0297          5.74
10 mu_1       0.1      0.673       0.182  0.0000135       7.44
11 mu_1       0.2      0.828       0.617  0.00281         4.94
12 mu_1       0.3      0.951       0.904  0.0410          3.04
13 mu_1       0.4      1.01        0.968  0.195           1.92
14 mu_1       0.5      1.03        1.01   0.495           1.66
15 mu_1       0.6      1.02        1.02   0.654           1.50
16 mu_1       0.7      1.00        0.995  0.542           1.79
17 mu_1       0.8      0.971       0.921  0.252           2.53
18 mu_1       0.9      0.969       0.784  0.0230          6.28
19 mu_0       0.1      0.432       0.0352 0.00000120      4.47
20 mu_0       0.2      0.670       0.299  0.000552        5.82
21 mu_0       0.3      0.834       0.647  0.0133          4.33
22 mu_0       0.4      0.950       0.896  0.0914          2.65
23 mu_0       0.5      1.00        0.962  0.241           1.83
24 mu_0       0.6      1.02        0.996  0.434           1.59
25 mu_0       0.7      1.02        1.01   0.642           1.53
26 mu_0       0.8      0.993       0.993  0.480           2.01
27 mu_0       0.9      0.946       0.936  0.0907          3.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.82    0.0000807  3.55e-19    212.  
 2 mu         0.2       5.04    0.00472    3.72e-13    232.  
 3 mu         0.3       3.49    0.0794     1.24e- 9    120.  
 4 mu         0.4       1.96    0.382      3.90e- 7     39.3 
 5 mu         0.5       1.28    0.789      3.38e- 5      8.64
 6 mu         0.6       1.11    1.02       1.30e- 3      3.52
 7 mu         0.7       1.24    1.08       2.43e- 3      7.93
 8 mu         0.8       2.14    0.624      1.08e- 5     43.2 
 9 mu         0.9       6.15    0.0941     5.94e-10    360.  
10 mu_1       0.1       6.37    0.000591   3.55e-18    327.  
11 mu_1       0.2       4.57    0.0169     1.86e-12    179.  
12 mu_1       0.3       2.48    0.162      4.12e- 9     61.7 
13 mu_1       0.4       1.44    0.589      9.75e- 7     15.1 
14 mu_1       0.5       1.13    0.912      6.77e- 5      5.47
15 mu_1       0.6       1.10    1.08       2.16e- 3      2.74
16 mu_1       0.7       1.31    1.03       8.67e- 4      9.54
17 mu_1       0.8       2.36    0.523      3.38e- 6     53.9 
18 mu_1       0.9       6.62    0.0669     1.65e-10    400.  
19 mu_0       0.1       3.53    0.0000195  0           200.  
20 mu_0       0.2       5.16    0.00171    0           246.  
21 mu_0       0.3       3.92    0.0407     0           146.  
22 mu_0       0.4       2.30    0.229      0            55.4 
23 mu_0       0.5       1.43    0.647      0            14.4 
24 mu_0       0.6       1.14    0.929      0             4.70
25 mu_0       0.7       1.07    1.13       0             4.18
26 mu_0       0.8       1.23    0.764      0            15.7 
27 mu_0       0.9       1.89    0.131      0            36.5 
[1] "Total run time was 100.425 seconds"
