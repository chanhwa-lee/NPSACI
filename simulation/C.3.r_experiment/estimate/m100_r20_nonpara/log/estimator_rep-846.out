
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  4  4 12  5  7  7 10  6  5  5  5  5  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03188 0.33945 0.59249 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
755 497 
[1] "treatment indicator table: "

  0   1 
468 784 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.436 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.397 0.100 
 2 mu         0.1   0.2 0.453 0.102 
 3 mu         0.1   0.3 0.587 0.148 
 4 mu         0.1   0.4 0.599 0.133 
 5 mu         0.1   0.5 0.629 0.127 
 6 mu         0.2   0.1 0.373 0.0639
 7 mu         0.2   0.2 0.454 0.0766
 8 mu         0.2   0.3 0.553 0.102 
 9 mu         0.2   0.4 0.575 0.0914
10 mu         0.2   0.5 0.608 0.0895
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.848        0.340  0.000405      6.13
 2 mu         0.2      0.946        0.792  0.0133        5.32
 3 mu         0.3      0.971        0.940  0.0748        3.47
 4 mu         0.4      0.972        0.948  0.206         1.84
 5 mu         0.5      0.978        0.967  0.396         1.44
 6 mu         0.6      0.994        0.993  0.644         1.34
 7 mu         0.7      1.01         1.01   0.689         1.52
 8 mu         0.8      1.01         0.999  0.578         1.54
 9 mu         0.9      0.990        0.977  0.161         2.78
10 mu_1       0.1      0.941        0.685  0.00190       5.72
11 mu_1       0.2      0.980        0.924  0.0321        5.01
12 mu_1       0.3      0.979        0.962  0.127         2.56
13 mu_1       0.4      0.977        0.969  0.281         1.80
14 mu_1       0.5      0.984        0.980  0.479         1.34
15 mu_1       0.6      1.00         1.01   0.690         1.36
16 mu_1       0.7      1.02         1.01   0.654         1.54
17 mu_1       0.8      1.01         1.00   0.557         1.59
18 mu_1       0.9      0.988        0.961  0.141         2.98
19 mu_0       0.1      0.837        0.298  0.000238      6.24
20 mu_0       0.2      0.937        0.729  0.00854       5.39
21 mu_0       0.3      0.967        0.937  0.0526        3.86
22 mu_0       0.4      0.969        0.961  0.156         2.01
23 mu_0       0.5      0.972        0.975  0.312         1.60
24 mu_0       0.6      0.984        0.980  0.512         1.37
25 mu_0       0.7      1.00         1.01   0.653         1.47
26 mu_0       0.8      1.01         1.03   0.575         1.56
27 mu_0       0.9      1.01         0.994  0.317         1.96
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.507    0.000187   6.19e-17     13.4 
 2 mu         0.2      0.961    0.0207     2.88e-11     18.5 
 3 mu         0.3      1.28     0.156      5.59e- 8     14.9 
 4 mu         0.4      1.36     0.622      1.13e- 5     12.1 
 5 mu         0.5      1.23     1.18       6.55e- 4      6.45
 6 mu         0.6      1.04     1.13       1.68e- 2      2.99
 7 mu         0.7      0.971    0.969      1.38e- 3      2.53
 8 mu         0.8      1.11     0.593      2.73e- 5      4.57
 9 mu         0.9      1.47     0.0594     3.00e- 8     13.2 
10 mu_1       0.1      0.943    0.000994   5.88e-16     24.3 
11 mu_1       0.2      1.20     0.0603     1.37e-10     19.4 
12 mu_1       0.3      1.37     0.348      1.77e- 7     12.6 
13 mu_1       0.4      1.34     0.795      2.69e- 5     11.1 
14 mu_1       0.5      1.17     1.13       1.25e- 3      4.76
15 mu_1       0.6      1.01     1.05       3.18e- 3      3.07
16 mu_1       0.7      0.972    0.805      1.79e- 4      2.93
17 mu_1       0.8      1.14     0.456      3.11e- 6      4.76
18 mu_1       0.9      1.50     0.0348     3.03e- 9     13.9 
19 mu_0       0.1      0.458    0.0000654  0            12.2 
20 mu_0       0.2      0.900    0.00731    0            19.0 
21 mu_0       0.3      1.24     0.0860     0            16.4 
22 mu_0       0.4      1.37     0.417      0            12.7 
23 mu_0       0.5      1.28     1.04       0             8.15
24 mu_0       0.6      1.10     1.07       0             4.01
25 mu_0       0.7      0.970    0.978      0             3.12
26 mu_0       0.8      0.991    0.738      0             3.98
27 mu_0       0.9      1.22     0.152      0             8.00
[1] "Total run time was 54.408 seconds"
