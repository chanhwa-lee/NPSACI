
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1198"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  4  9  6  7 10  6  3  4  5  2  6  9  5  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04223 0.32306 0.58713 0.95006 6.00000 
[1] "event indicator table: "

  0   1 
673 525 
[1] "treatment indicator table: "

  0   1 
423 775 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 578
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 64.667 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.590 0.186
 2 mu         0.1   0.2 0.558 0.153
 3 mu         0.1   0.3 0.681 0.178
 4 mu         0.1   0.4 0.687 0.171
 5 mu         0.1   0.5 0.697 0.168
 6 mu         0.2   0.1 0.632 0.176
 7 mu         0.2   0.2 0.651 0.175
 8 mu         0.2   0.3 0.811 0.211
 9 mu         0.2   0.4 0.850 0.220
10 mu         0.2   0.5 0.879 0.229
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.900       0.0634 0.000000365     14.1 
 2 mu         0.2      1.32        0.341  0.000331        32.0 
 3 mu         0.3      1.22        0.639  0.0110          19.2 
 4 mu         0.4      1.06        0.911  0.0826           8.15
 5 mu         0.5      1.02        0.985  0.294            3.53
 6 mu         0.6      1.02        1.01   0.623            1.46
 7 mu         0.7      1.01        1.01   0.728            1.52
 8 mu         0.8      1.03        1.01   0.324            2.14
 9 mu         0.9      1.18        0.914  0.0308          13.9 
10 mu_1       0.1      1.23        0.230  0.00000213      26.3 
11 mu_1       0.2      1.34        0.550  0.000977        32.0 
12 mu_1       0.3      1.13        0.775  0.0224          12.8 
13 mu_1       0.4      1.02        0.925  0.129            6.32
14 mu_1       0.5      1.01        1.00   0.378            2.52
15 mu_1       0.6      1.02        1.01   0.704            1.38
16 mu_1       0.7      1.01        1.02   0.655            1.61
17 mu_1       0.8      1.04        0.988  0.281            2.32
18 mu_1       0.9      1.20        0.903  0.0247          15.4 
19 mu_0       0.1      0.863       0.0437 0.000000169     13.9 
20 mu_0       0.2      1.31        0.273  0.000169        32.0 
21 mu_0       0.3      1.26        0.549  0.00609         21.9 
22 mu_0       0.4      1.09        0.836  0.0517           9.37
23 mu_0       0.5      1.03        0.944  0.209            4.53
24 mu_0       0.6      1.02        1.02   0.502            1.81
25 mu_0       0.7      1.01        0.996  0.711            1.42
26 mu_0       0.8      0.990       1.00   0.497            1.76
27 mu_0       0.9      1.02        0.994  0.0858           2.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      58.7     0.0000841  1.59e-14   5651.  
 2 mu         0.2      32.4     0.00746    1.85e- 9   2750.  
 3 mu         0.3      13.3     0.0773     1.60e- 6    831.  
 4 mu         0.4       5.17    0.259      1.82e- 4    174.  
 5 mu         0.5       2.23    0.671      6.74e- 3     35.8 
 6 mu         0.6       1.27    1.05       1.20e- 1      8.64
 7 mu         0.7       1.11    1.08       7.44e- 2      3.33
 8 mu         0.8       1.41    0.796      6.56e- 4     14.1 
 9 mu         0.9       2.21    0.162      1.80e- 7     51.5 
10 mu_1       0.1      48.3     0.000601   1.50e-13   4347.  
11 mu_1       0.2      16.3     0.0243     8.74e- 9   1058.  
12 mu_1       0.3       6.41    0.174      5.03e- 6    213.  
13 mu_1       0.4       2.94    0.463      4.30e- 4     55.9 
14 mu_1       0.5       1.60    0.932      1.27e- 2     14.3 
15 mu_1       0.6       1.13    0.994      1.88e- 1      5.40
16 mu_1       0.7       1.13    1.04       8.18e- 3      4.63
17 mu_1       0.8       1.50    0.651      6.30e- 5     17.6 
18 mu_1       0.9       2.31    0.113      1.54e- 8     57.2 
19 mu_0       0.1      59.9     0.0000278  0          5796.  
20 mu_0       0.2      36.4     0.00346    0          3173.  
21 mu_0       0.3      16.2     0.0309     0          1096.  
22 mu_0       0.4       6.65    0.122      0           268.  
23 mu_0       0.5       2.87    0.379      0            57.3 
24 mu_0       0.6       1.49    0.875      0            17.3 
25 mu_0       0.7       1.06    0.990      0             3.14
26 mu_0       0.8       1.07    0.911      0             4.06
27 mu_0       0.9       1.35    0.276      0            16.4 
[1] "Total run time was 68.814 seconds"
