
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1353"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  4  5  8  5  5  5  5  4 11  5  7 10  6  6 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05952 0.39747 0.65082 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
823 530 
[1] "treatment indicator table: "

  0   1 
442 911 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 695
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.537 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.222 0.0984
 2 mu         0.1   0.2 0.287 0.125 
 3 mu         0.1   0.3 0.436 0.177 
 4 mu         0.1   0.4 0.507 0.213 
 5 mu         0.1   0.5 0.598 0.209 
 6 mu         0.2   0.1 0.279 0.0535
 7 mu         0.2   0.2 0.349 0.0702
 8 mu         0.2   0.3 0.489 0.105 
 9 mu         0.2   0.4 0.552 0.124 
10 mu         0.2   0.5 0.647 0.119 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.870       0.0897 0.000000128      36.8 
 2 mu         0.2      1.04        0.406  0.000219         18.0 
 3 mu         0.3      1.06        0.866  0.0106            5.77
 4 mu         0.4      1.06        1.03   0.110             2.73
 5 mu         0.5      1.05        0.980  0.324             2.55
 6 mu         0.6      1.02        1.00   0.516             1.83
 7 mu         0.7      1.00        0.983  0.716             1.71
 8 mu         0.8      0.985       0.976  0.516             1.81
 9 mu         0.9      0.971       0.901  0.0944            2.53
10 mu_1       0.1      1.10        0.288  0.000000769      28.3 
11 mu_1       0.2      1.06        0.680  0.000663          7.14
12 mu_1       0.3      1.05        0.968  0.0216            3.37
13 mu_1       0.4      1.05        0.984  0.169             2.72
14 mu_1       0.5      1.03        0.995  0.373             2.38
15 mu_1       0.6      1.01        0.996  0.583             1.87
16 mu_1       0.7      0.996       0.978  0.731             1.61
17 mu_1       0.8      0.980       0.973  0.466             1.85
18 mu_1       0.9      0.968       0.902  0.0788            2.70
19 mu_0       0.1      0.845       0.0660 0.0000000563     37.8 
20 mu_0       0.2      1.04        0.336  0.000108         20.8 
21 mu_0       0.3      1.07        0.801  0.00592           7.45
22 mu_0       0.4      1.07        0.993  0.0702            2.99
23 mu_0       0.5      1.06        0.977  0.275             2.71
24 mu_0       0.6      1.03        1.01   0.416             1.94
25 mu_0       0.7      1.02        0.995  0.659             1.97
26 mu_0       0.8      1.00        0.988  0.610             1.78
27 mu_0       0.9      0.990       0.927  0.234             2.22
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.200   0.0000131   1.43e-18     11.8 
 2 mu         0.2      0.671   0.00251     1.49e-12     17.8 
 3 mu         0.3      1.05    0.0335      4.97e- 9     31.2 
 4 mu         0.4      1.12    0.181       1.57e- 6     24.1 
 5 mu         0.5      1.02    0.583       1.36e- 4     10.3 
 6 mu         0.6      0.938   0.876       5.21e- 3      7.12
 7 mu         0.7      0.960   0.860       1.58e- 3      4.36
 8 mu         0.8      1.11    0.754       7.03e- 6     13.4 
 9 mu         0.9      1.78    0.177       3.87e-10     49.6 
10 mu_1       0.1      0.469   0.0000838   1.43e-17     21.4 
11 mu_1       0.2      0.959   0.0102      7.47e-12     27.9 
12 mu_1       0.3      1.16    0.0789      1.66e- 8     32.5 
13 mu_1       0.4      1.11    0.309       3.92e- 6     18.8 
14 mu_1       0.5      0.998   0.689       2.72e- 4     10.3 
15 mu_1       0.6      0.940   0.779       8.69e- 3      5.93
16 mu_1       0.7      0.981   0.854       5.64e- 4      4.57
17 mu_1       0.8      1.16    0.795       2.20e- 6     15.8 
18 mu_1       0.9      1.88    0.135       1.07e-10     52.0 
19 mu_0       0.1      0.170   0.00000244  0            10.7 
20 mu_0       0.2      0.599   0.000779    0            16.7 
21 mu_0       0.3      1.00    0.0146      0            30.6 
22 mu_0       0.4      1.12    0.0984      0            27.6 
23 mu_0       0.5      1.04    0.389       0            13.6 
24 mu_0       0.6      0.935   0.779       0             8.89
25 mu_0       0.7      0.910   0.817       0             3.88
26 mu_0       0.8      0.931   0.779       0             4.99
27 mu_0       0.9      0.921   0.288       0            27.5 
[1] "Total run time was 59.783 seconds"
