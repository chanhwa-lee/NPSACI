
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1200"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  4 13  7  6  8  6  5  4  6  6  4  8  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04251 0.36817 0.62226 1.00000 5.06306 
[1] "event indicator table: "

  0   1 
729 471 
[1] "treatment indicator table: "

  0   1 
421 779 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 590
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 142.874 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.0716 0.0893
 2 mu         0.1   0.2 0.103  0.0947
 3 mu         0.1   0.3 0.124  0.0780
 4 mu         0.1   0.4 0.122  0.0881
 5 mu         0.1   0.5 0.148  0.0908
 6 mu         0.2   0.1 0.163  0.0850
 7 mu         0.2   0.2 0.207  0.0925
 8 mu         0.2   0.3 0.240  0.0776
 9 mu         0.2   0.4 0.256  0.0879
10 mu         0.2   0.5 0.309  0.0873
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.378       0.0404 0.00000264      4.40
 2 mu         0.2      0.700       0.257  0.00118         6.08
 3 mu         0.3      0.896       0.676  0.0180          4.91
 4 mu         0.4      0.964       0.880  0.0845          3.54
 5 mu         0.5      0.978       0.967  0.243           1.86
 6 mu         0.6      0.991       0.997  0.505           1.18
 7 mu         0.7      1.00        1.00   0.713           1.71
 8 mu         0.8      1.00        0.947  0.323           2.82
 9 mu         0.9      0.978       0.755  0.0256          6.81
10 mu_1       0.1      0.634       0.147  0.0000148       7.34
11 mu_1       0.2      0.869       0.481  0.00334         5.13
12 mu_1       0.3      0.964       0.875  0.0395          4.82
13 mu_1       0.4      0.982       0.967  0.143           2.90
14 mu_1       0.5      0.985       0.977  0.340           1.52
15 mu_1       0.6      0.997       1.01   0.615           1.16
16 mu_1       0.7      1.01        0.985  0.646           1.85
17 mu_1       0.8      0.996       0.935  0.288           3.07
18 mu_1       0.9      0.973       0.736  0.0196          7.51
19 mu_0       0.1      0.349       0.0275 0.00000129      4.08
20 mu_0       0.2      0.658       0.199  0.000638        6.31
21 mu_0       0.3      0.867       0.603  0.00873         4.94
22 mu_0       0.4      0.953       0.840  0.0456          3.97
23 mu_0       0.5      0.971       0.931  0.146           2.21
24 mu_0       0.6      0.983       0.984  0.340           1.29
25 mu_0       0.7      1.00        1.01   0.623           1.39
26 mu_0       0.8      1.01        0.994  0.463           2.29
27 mu_0       0.9      1.02        0.957  0.0796          4.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.82    0.0000223   7.77e-15    111.  
 2 mu         0.2      5.87    0.00308     1.61e- 9    303.  
 3 mu         0.3      5.39    0.0435      1.82e- 6    249.  
 4 mu         0.4      2.95    0.235       2.37e- 4    124.  
 5 mu         0.5      1.51    0.612       9.15e- 3     33.9 
 6 mu         0.6      1.07    0.928       1.56e- 1      7.78
 7 mu         0.7      1.09    1.03        1.85e- 2      3.68
 8 mu         0.8      1.38    0.606       7.22e- 5     10.6 
 9 mu         0.9      1.78    0.0925      3.53e- 9     24.4 
10 mu_1       0.1      4.18    0.000198    6.99e-14    233.  
11 mu_1       0.2      6.95    0.0102      7.24e- 9    319.  
12 mu_1       0.3      4.58    0.0991      5.46e- 6    208.  
13 mu_1       0.4      2.24    0.391       5.34e- 4     77.4 
14 mu_1       0.5      1.27    0.799       1.65e- 2     17.0 
15 mu_1       0.6      1.05    0.977       1.85e- 1      4.72
16 mu_1       0.7      1.15    1.00        5.57e- 3      4.33
17 mu_1       0.8      1.46    0.501       1.90e- 5     12.2 
18 mu_1       0.9      1.82    0.0664      8.25e-10     25.2 
19 mu_0       0.1      1.56    0.00000496  0            97.1 
20 mu_0       0.2      5.61    0.00119     0           299.  
21 mu_0       0.3      5.73    0.0212      0           267.  
22 mu_0       0.4      3.42    0.110       0           155.  
23 mu_0       0.5      1.75    0.336       0            50.9 
24 mu_0       0.6      1.10    0.710       0            12.4 
25 mu_0       0.7      0.954   0.923       0             4.08
26 mu_0       0.8      1.06    0.860       0             6.25
27 mu_0       0.9      1.44    0.269       0            17.4 
[1] "Total run time was 147.794 seconds"
