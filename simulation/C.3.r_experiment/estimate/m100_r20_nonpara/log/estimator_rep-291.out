
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1262"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  3  9  6  4  9  9  7  5  3  7 13  5  6  9  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.07809 0.45896 0.67936 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
794 468 
[1] "treatment indicator table: "

  0   1 
430 832 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 54.06 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 1.52  1.30 
 2 mu         0.1   0.2 1.69  1.48 
 3 mu         0.1   0.3 2.10  1.87 
 4 mu         0.1   0.4 2.39  2.06 
 5 mu         0.1   0.5 2.74  2.41 
 6 mu         0.2   0.1 0.678 0.403
 7 mu         0.2   0.2 0.743 0.458
 8 mu         0.2   0.3 0.911 0.586
 9 mu         0.2   0.4 1.07  0.642
10 mu         0.2   0.5 1.20  0.756
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      5.65        0.104  0.000000129     501.  
 2 mu         0.2      2.53        0.536  0.0000894       154.  
 3 mu         0.3      1.50        0.827  0.00320          40.6 
 4 mu         0.4      1.13        0.886  0.0320            8.87
 5 mu         0.5      1.02        0.972  0.152             3.10
 6 mu         0.6      1.01        0.980  0.429             2.10
 7 mu         0.7      1.01        1.01   0.568             1.58
 8 mu         0.8      1.03        1.03   0.535             1.94
 9 mu         0.9      1.03        0.957  0.192             2.62
10 mu_1       0.1      0.899       0.304  0.000000830      10.7 
11 mu_1       0.2      1.14        0.746  0.000294         15.0 
12 mu_1       0.3      1.12        0.897  0.00713           7.24
13 mu_1       0.4      1.04        0.916  0.0546            3.83
14 mu_1       0.5      1.01        0.981  0.212             2.70
15 mu_1       0.6      1.01        0.989  0.517             1.91
16 mu_1       0.7      1.02        1.01   0.569             1.66
17 mu_1       0.8      1.04        1.03   0.491             1.96
18 mu_1       0.9      1.02        0.955  0.169             2.65
19 mu_0       0.1      6.18        0.0809 0.0000000513    556.  
20 mu_0       0.2      2.88        0.463  0.0000384       193.  
21 mu_0       0.3      1.66        0.722  0.00151          58.0 
22 mu_0       0.4      1.20        0.856  0.0170           14.6 
23 mu_0       0.5      1.04        0.933  0.0916            3.82
24 mu_0       0.6      1.01        0.998  0.296             2.44
25 mu_0       0.7      1.01        0.986  0.565             1.68
26 mu_0       0.8      1.01        1.01   0.547             1.84
27 mu_0       0.9      1.05        1.04   0.396             2.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.01   0.0000228   5.65e-16    472.  
 2 mu         0.2       9.90   0.00347     1.32e-10    918.  
 3 mu         0.3       7.37   0.0461      1.70e- 7    624.  
 4 mu         0.4       3.71   0.255       1.81e- 5    233.  
 5 mu         0.5       1.91   0.824       6.44e- 4     51.0 
 6 mu         0.6       1.34   1.01        1.19e- 2      6.31
 7 mu         0.7       1.16   1.05        1.84e- 3      5.23
 8 mu         0.8       1.17   0.918       1.41e- 5      7.09
 9 mu         0.9       1.47   0.169       2.46e- 9     14.0 
10 mu_1       0.1      10.1    0.000175    5.36e-15    943.  
11 mu_1       0.2      10.2    0.0125      6.24e-10    918.  
12 mu_1       0.3       5.48   0.103       5.38e- 7    416.  
13 mu_1       0.4       2.59   0.442       4.53e- 5    116.  
14 mu_1       0.5       1.56   1.01        1.29e- 3     20.4 
15 mu_1       0.6       1.25   0.957       1.53e- 2      6.55
16 mu_1       0.7       1.15   1.09        4.94e- 4      5.46
17 mu_1       0.8       1.20   0.829       3.31e- 6      7.00
18 mu_1       0.9       1.52   0.127       5.12e-10     15.6 
19 mu_0       0.1       4.45   0.00000462  0           419.  
20 mu_0       0.2       9.83   0.00116     0           918.  
21 mu_0       0.3       8.18   0.0224      0           713.  
22 mu_0       0.4       4.46   0.131       0           310.  
23 mu_0       0.5       2.27   0.609       0            81.5 
24 mu_0       0.6       1.48   0.898       0            12.1 
25 mu_0       0.7       1.20   0.916       0             6.54
26 mu_0       0.8       1.07   0.925       0             7.47
27 mu_0       0.9       1.04   0.326       0             6.90
[1] "Total run time was 57.265 seconds"
