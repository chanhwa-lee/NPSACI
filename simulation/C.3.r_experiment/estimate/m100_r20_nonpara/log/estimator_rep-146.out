
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1189"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  8  8  6 10  6  4  5 10  7  4  5  5  9  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03608 0.34516 0.61800 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
711 478 
[1] "treatment indicator table: "

  0   1 
399 790 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 48.771 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.363 0.0961
 2 mu         0.1   0.2 0.403 0.107 
 3 mu         0.1   0.3 0.442 0.123 
 4 mu         0.1   0.4 0.453 0.135 
 5 mu         0.1   0.5 0.458 0.137 
 6 mu         0.2   0.1 0.314 0.0712
 7 mu         0.2   0.2 0.339 0.0794
 8 mu         0.2   0.3 0.346 0.101 
 9 mu         0.2   0.4 0.352 0.116 
10 mu         0.2   0.5 0.363 0.117 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.730       0.0991 0.000000492      9.19
 2 mu         0.2      0.696       0.450  0.000416         3.16
 3 mu         0.3      0.785       0.722  0.0135           4.91
 4 mu         0.4      0.895       0.891  0.106            3.88
 5 mu         0.5      0.972       0.966  0.322            1.93
 6 mu         0.6      1.00        0.991  0.549            1.40
 7 mu         0.7      1.00        0.999  0.781            1.42
 8 mu         0.8      1.01        0.988  0.531            1.70
 9 mu         0.9      0.999       0.980  0.110            2.87
10 mu_1       0.1      0.627       0.281  0.00000286       3.61
11 mu_1       0.2      0.720       0.550  0.00122          4.35
12 mu_1       0.3      0.845       0.804  0.0265           5.08
13 mu_1       0.4      0.943       0.942  0.160            3.17
14 mu_1       0.5      0.995       0.990  0.387            1.58
15 mu_1       0.6      1.01        1.00   0.603            1.32
16 mu_1       0.7      1.00        0.996  0.788            1.48
17 mu_1       0.8      1.01        0.980  0.472            1.78
18 mu_1       0.9      0.996       0.968  0.0928           3.01
19 mu_0       0.1      0.742       0.0766 0.000000229      9.98
20 mu_0       0.2      0.690       0.364  0.000216         3.61
21 mu_0       0.3      0.760       0.659  0.00787          4.83
22 mu_0       0.4      0.863       0.816  0.0707           4.34
23 mu_0       0.5      0.949       0.950  0.257            2.39
24 mu_0       0.6      0.994       0.996  0.468            1.51
25 mu_0       0.7      1.01        0.994  0.676            1.36
26 mu_0       0.8      1.02        0.995  0.695            1.59
27 mu_0       0.9      1.03        0.981  0.266            2.15
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.00    0.0000440  1.27e-15    369.  
 2 mu         0.2      11.8     0.00414    1.66e-10    896.  
 3 mu         0.3       7.70    0.0407     1.63e- 7    536.  
 4 mu         0.4       3.09    0.222      2.17e- 5    144.  
 5 mu         0.5       1.44    0.589      9.65e- 4     19.0 
 6 mu         0.6       1.14    1.08       2.14e- 2      4.13
 7 mu         0.7       1.15    1.10       2.06e- 2      3.93
 8 mu         0.8       1.30    0.946      5.34e- 5     11.6 
 9 mu         0.9       1.73    0.213      1.31e- 9     42.9 
10 mu_1       0.1      10.7     0.000348   1.27e-14    738.  
11 mu_1       0.2      11.6     0.0148     8.29e-10    896.  
12 mu_1       0.3       5.41    0.103      5.45e- 7    357.  
13 mu_1       0.4       2.04    0.363      5.43e- 5     71.9 
14 mu_1       0.5       1.20    0.846      1.93e- 3      7.59
15 mu_1       0.6       1.11    1.02       3.57e- 2      4.05
16 mu_1       0.7       1.16    1.10       5.88e- 3      3.74
17 mu_1       0.8       1.33    0.803      1.34e- 5     13.7 
18 mu_1       0.9       1.75    0.146      2.90e-10     45.1 
19 mu_0       0.1       5.48    0.0000132  0           328.  
20 mu_0       0.2      11.8     0.00133    0           896.  
21 mu_0       0.3       8.68    0.0174     0           612.  
22 mu_0       0.4       3.80    0.104      0           192.  
23 mu_0       0.5       1.69    0.331      0            30.4 
24 mu_0       0.6       1.20    0.800      0             5.10
25 mu_0       0.7       1.13    1.10       0             4.37
26 mu_0       0.8       1.18    1.14       0             4.60
27 mu_0       0.9       1.47    0.409      0            23.9 
[1] "Total run time was 52.006 seconds"
