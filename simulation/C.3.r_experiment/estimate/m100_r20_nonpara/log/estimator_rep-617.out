
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1240"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3 10  8  6  8  8  5  3  5  6  5  5 11  5  3  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0463  0.3666  0.6277  1.0000  7.0000 
[1] "event indicator table: "

  0   1 
741 499 
[1] "treatment indicator table: "

  0   1 
434 806 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.602 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.105 0.119 
 2 mu         0.1   0.2 0.172 0.143 
 3 mu         0.1   0.3 0.391 0.142 
 4 mu         0.1   0.4 0.390 0.135 
 5 mu         0.1   0.5 0.389 0.137 
 6 mu         0.2   0.1 0.222 0.0963
 7 mu         0.2   0.2 0.326 0.118 
 8 mu         0.2   0.3 0.472 0.118 
 9 mu         0.2   0.4 0.498 0.123 
10 mu         0.2   0.5 0.519 0.133 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.645       0.0322 0.0000000434     20.0 
 2 mu         0.2      0.927       0.275  0.0000596        21.0 
 3 mu         0.3      0.981       0.568  0.00314          14.4 
 4 mu         0.4      0.941       0.842  0.0405            4.78
 5 mu         0.5      0.952       0.935  0.225             2.53
 6 mu         0.6      0.996       0.983  0.668             1.68
 7 mu         0.7      1.02        1.01   0.759             1.35
 8 mu         0.8      1.04        0.978  0.543             3.00
 9 mu         0.9      1.08        0.801  0.0818           10.4 
10 mu_1       0.1      0.921       0.132  0.000000288      16.2 
11 mu_1       0.2      1.05        0.499  0.000201         22.1 
12 mu_1       0.3      0.999       0.773  0.00717          10.2 
13 mu_1       0.4      0.954       0.913  0.0703            3.75
14 mu_1       0.5      0.976       0.971  0.316             2.21
15 mu_1       0.6      1.01        0.996  0.716             1.56
16 mu_1       0.7      1.03        1.01   0.690             1.46
17 mu_1       0.8      1.04        0.970  0.486             3.39
18 mu_1       0.9      1.07        0.773  0.0672           10.9 
19 mu_0       0.1      0.615       0.0223 0.0000000162     20.9 
20 mu_0       0.2      0.897       0.210  0.0000242        20.7 
21 mu_0       0.3      0.974       0.484  0.00141          16.2 
22 mu_0       0.4      0.932       0.785  0.0207            6.13
23 mu_0       0.5      0.929       0.902  0.134             2.86
24 mu_0       0.6      0.974       0.984  0.477             1.85
25 mu_0       0.7      1.01        1.00   0.784             1.32
26 mu_0       0.8      1.03        1.03   0.715             1.61
27 mu_0       0.9      1.09        0.960  0.213             5.82
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.445   0.0000303   3.55e-16     22.8 
 2 mu         0.2      0.646   0.00378     1.86e-10     17.7 
 3 mu         0.3      1.01    0.0493      4.13e- 7     11.3 
 4 mu         0.4      1.33    0.262       9.77e- 5     11.5 
 5 mu         0.5      1.33    0.683       6.78e- 3     11.7 
 6 mu         0.6      1.16    0.978       1.30e- 1      7.60
 7 mu         0.7      1.26    1.18        2.43e- 2      4.05
 8 mu         0.8      2.46    0.806       1.08e- 3     51.2 
 9 mu         0.9      9.70    0.175       9.52e- 7    480.  
10 mu_1       0.1      0.675   0.000234    3.55e-15     25.3 
11 mu_1       0.2      0.815   0.0119      9.32e-10     12.0 
12 mu_1       0.3      1.19    0.110       1.38e- 6     13.2 
13 mu_1       0.4      1.39    0.415       2.44e- 4     13.0 
14 mu_1       0.5      1.27    0.829       1.36e- 2     10.6 
15 mu_1       0.6      1.14    0.964       3.85e- 2      5.76
16 mu_1       0.7      1.35    1.11        3.85e- 3      5.79
17 mu_1       0.8      2.81    0.672       1.50e- 4     64.0 
18 mu_1       0.9     10.6     0.138       4.23e- 7    533.  
19 mu_0       0.1      0.419   0.00000799  0            22.5 
20 mu_0       0.2      0.604   0.00141     0            19.7 
21 mu_0       0.3      0.926   0.0210      0            13.9 
22 mu_0       0.4      1.29    0.123       0            12.0 
23 mu_0       0.5      1.39    0.426       0            12.7 
24 mu_0       0.6      1.21    0.831       0            10.4 
25 mu_0       0.7      1.05    1.02        0             5.32
26 mu_0       0.8      1.06    0.893       0             5.49
27 mu_0       0.9      1.29    0.187       0            32.2 
[1] "Total run time was 62.6 seconds"
