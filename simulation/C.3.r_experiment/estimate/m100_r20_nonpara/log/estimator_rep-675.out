
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1260"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  7  8  4  6  8  6  8 10  4  4  4  6  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02661 0.33721 0.60343 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
769 491 
[1] "treatment indicator table: "

  0   1 
455 805 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.925 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.600 0.242 
 2 mu         0.1   0.2 0.769 0.297 
 3 mu         0.1   0.3 0.921 0.353 
 4 mu         0.1   0.4 0.961 0.379 
 5 mu         0.1   0.5 1.02  0.405 
 6 mu         0.2   0.1 0.458 0.0804
 7 mu         0.2   0.2 0.596 0.105 
 8 mu         0.2   0.3 0.712 0.140 
 9 mu         0.2   0.4 0.741 0.141 
10 mu         0.2   0.5 0.799 0.143 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.60         0.290 0.0000275     66.4 
 2 mu         0.2      1.29         0.808 0.00390       18.1 
 3 mu         0.3      1.12         1.00  0.0521         3.45
 4 mu         0.4      1.05         1.02  0.253          2.26
 5 mu         0.5      1.02         1.00  0.540          1.55
 6 mu         0.6      1.00         1.00  0.584          1.27
 7 mu         0.7      0.995        1.00  0.690          1.43
 8 mu         0.8      0.961        0.993 0.300          2.21
 9 mu         0.9      0.838        0.841 0.0416         3.49
10 mu_1       0.1      1.48         0.677 0.000159      36.9 
11 mu_1       0.2      1.16         0.991 0.0114         5.32
12 mu_1       0.3      1.07         0.989 0.104          2.75
13 mu_1       0.4      1.02         1.00  0.387          2.03
14 mu_1       0.5      1.01         1.01  0.538          1.40
15 mu_1       0.6      1.00         1.00  0.603          1.30
16 mu_1       0.7      0.992        1.01  0.611          1.44
17 mu_1       0.8      0.951        0.984 0.249          2.38
18 mu_1       0.9      0.823        0.822 0.0320         3.51
19 mu_0       0.1      1.62         0.242 0.0000129     69.7 
20 mu_0       0.2      1.32         0.722 0.00201       21.3 
21 mu_0       0.3      1.15         1.04  0.0300         4.33
22 mu_0       0.4      1.07         1.01  0.163          2.42
23 mu_0       0.5      1.02         1.01  0.485          1.69
24 mu_0       0.6      1.01         1.01  0.524          1.35
25 mu_0       0.7      1.00         1.00  0.708          1.39
26 mu_0       0.8      0.998        1.00  0.454          1.53
27 mu_0       0.9      0.972        0.999 0.127          3.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.19    0.0000183   2.81e-13    289.  
 2 mu         0.2      2.28    0.00411     4.61e- 9    141.  
 3 mu         0.3      1.62    0.0428      1.35e- 6     42.5 
 4 mu         0.4      1.23    0.222       7.55e- 5      8.91
 5 mu         0.5      1.02    0.626       1.72e- 3      4.27
 6 mu         0.6      1.01    0.888       2.20e- 2      5.32
 7 mu         0.7      1.14    1.17        3.81e- 3      3.62
 8 mu         0.8      1.44    0.762       3.35e- 5     17.5 
 9 mu         0.9      2.39    0.0930      4.50e- 9    102.  
10 mu_1       0.1      2.96    0.000132    2.81e-12    222.  
11 mu_1       0.2      1.76    0.0139      2.30e- 8     54.1 
12 mu_1       0.3      1.36    0.119       4.48e- 6     11.7 
13 mu_1       0.4      1.08    0.389       1.89e- 4      5.96
14 mu_1       0.5      0.966   0.785       3.43e- 3      4.94
15 mu_1       0.6      1.02    1.01        1.32e- 2      5.13
16 mu_1       0.7      1.18    1.16        4.19e- 4      3.53
17 mu_1       0.8      1.53    0.629       3.23e- 6     21.9 
18 mu_1       0.9      2.51    0.0591      7.88e-10    114.  
19 mu_0       0.1      3.22    0.00000534  0           297.  
20 mu_0       0.2      2.41    0.00134     0           162.  
21 mu_0       0.3      1.73    0.0165      0            56.1 
22 mu_0       0.4      1.32    0.101       0            13.7 
23 mu_0       0.5      1.08    0.371       0             4.70
24 mu_0       0.6      0.994   0.811       0             5.60
25 mu_0       0.7      1.02    0.931       0             4.07
26 mu_0       0.8      1.11    1.02        0             4.07
27 mu_0       0.9      1.28    0.142       0            13.4 
[1] "Total run time was 65.641 seconds"
