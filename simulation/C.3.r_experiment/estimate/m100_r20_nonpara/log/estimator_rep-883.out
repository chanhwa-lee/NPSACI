
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1281"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  3  5  9  4  5  9  4  9  6  4  7 11 10  7  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0418  0.3624  0.6308  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
768 513 
[1] "treatment indicator table: "

  0   1 
504 777 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 77.823 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.530 0.175 
 2 mu         0.1   0.2 0.719 0.177 
 3 mu         0.1   0.3 0.778 0.189 
 4 mu         0.1   0.4 0.902 0.229 
 5 mu         0.1   0.5 0.944 0.227 
 6 mu         0.2   0.1 0.380 0.101 
 7 mu         0.2   0.2 0.530 0.0909
 8 mu         0.2   0.3 0.589 0.0924
 9 mu         0.2   0.4 0.670 0.115 
10 mu         0.2   0.5 0.713 0.112 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.38         0.360 0.0000139      23.4 
 2 mu         0.2      1.14         0.776 0.00312        12.7 
 3 mu         0.3      1.03         0.969 0.0489          4.45
 4 mu         0.4      1.00         0.993 0.225           1.90
 5 mu         0.5      0.999        0.982 0.502           1.61
 6 mu         0.6      1.01         1.01  0.618           1.41
 7 mu         0.7      1.00         1.00  0.575           1.33
 8 mu         0.8      1.00         0.942 0.403           1.70
 9 mu         0.9      1.02         0.915 0.178           3.45
10 mu_1       0.1      1.13         0.692 0.0000743      21.6 
11 mu_1       0.2      1.03         0.909 0.00846         7.65
12 mu_1       0.3      1.01         0.988 0.0906          2.41
13 mu_1       0.4      1.00         1.00  0.299           1.65
14 mu_1       0.5      1.00         0.999 0.580           1.59
15 mu_1       0.6      1.00         1.01  0.557           1.40
16 mu_1       0.7      1.00         0.989 0.542           1.37
17 mu_1       0.8      0.999        0.939 0.371           1.81
18 mu_1       0.9      1.02         0.911 0.145           3.66
19 mu_0       0.1      1.41         0.303 0.00000719     25.8 
20 mu_0       0.2      1.17         0.713 0.00178        13.9 
21 mu_0       0.3      1.04         0.935 0.0311          5.32
22 mu_0       0.4      1.00         0.982 0.174           2.12
23 mu_0       0.5      0.997        1.00  0.423           1.63
24 mu_0       0.6      1.01         0.999 0.579           1.59
25 mu_0       0.7      1.01         1.03  0.477           1.32
26 mu_0       0.8      1.01         0.988 0.530           1.50
27 mu_0       0.9      1.01         0.971 0.370           2.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.75     0.000216   9.11e-17    113.  
 2 mu         0.2      1.71     0.0126     2.39e-11     32.0 
 3 mu         0.3      1.51     0.126      3.53e- 8     21.8 
 4 mu         0.4      1.27     0.376      6.26e- 6     11.7 
 5 mu         0.5      1.06     0.716      3.45e- 4      5.31
 6 mu         0.6      0.949    0.917      6.97e- 4      3.98
 7 mu         0.7      1.01     0.940      6.11e- 6      3.70
 8 mu         0.8      1.28     0.816      7.09e- 9      8.37
 9 mu         0.9      1.84     0.195      6.08e-14     14.6 
10 mu_1       0.1      1.93     0.00134    9.11e-16     62.6 
11 mu_1       0.2      1.74     0.0420     1.19e-10     32.0 
12 mu_1       0.3      1.43     0.271      1.18e- 7     15.4 
13 mu_1       0.4      1.20     0.627      1.56e- 5      7.97
14 mu_1       0.5      1.03     0.763      6.90e- 4      4.87
15 mu_1       0.6      0.958    0.840      6.45e- 5      3.51
16 mu_1       0.7      1.06     1.04       4.85e- 7      3.81
17 mu_1       0.8      1.33     0.677      4.92e-10      9.23
18 mu_1       0.9      1.88     0.145      3.75e-15     16.2 
19 mu_0       0.1      1.73     0.0000856  0           118.  
20 mu_0       0.2      1.71     0.00560    0            35.9 
21 mu_0       0.3      1.54     0.0460     0            24.9 
22 mu_0       0.4      1.31     0.210      0            14.2 
23 mu_0       0.5      1.10     0.593      0             7.72
24 mu_0       0.6      0.935    0.652      0             4.68
25 mu_0       0.7      0.907    0.820      0             3.42
26 mu_0       0.8      1.08     0.752      0             5.36
27 mu_0       0.9      1.43     0.116      0            14.4 
[1] "Total run time was 82.11 seconds"
