
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1251"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  6  3  9  7  8 10  5  4  9  6  3  5  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02366 0.32178 0.57829 0.94185 5.00000 
[1] "event indicator table: "

  0   1 
720 531 
[1] "treatment indicator table: "

  0   1 
496 755 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.625 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.667 0.376
 2 mu         0.1   0.2 0.761 0.471
 3 mu         0.1   0.3 0.903 0.538
 4 mu         0.1   0.4 1.01  0.599
 5 mu         0.1   0.5 1.20  0.671
 6 mu         0.2   0.1 0.418 0.110
 7 mu         0.2   0.2 0.466 0.136
 8 mu         0.2   0.3 0.574 0.156
 9 mu         0.2   0.4 0.635 0.168
10 mu         0.2   0.5 0.750 0.190
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.90         0.138  0.000987    109.  
 2 mu         0.2      1.24         0.559  0.0417       29.7 
 3 mu         0.3      1.03         0.866  0.212         5.23
 4 mu         0.4      1.01         0.975  0.447         1.87
 5 mu         0.5      1.00         1.02   0.594         1.48
 6 mu         0.6      0.992        0.999  0.708         1.31
 7 mu         0.7      0.991        0.969  0.658         1.44
 8 mu         0.8      1.03         0.987  0.258         2.98
 9 mu         0.9      1.15         0.822  0.0317        9.29
10 mu_1       0.1      1.60         0.413  0.00409      60.8 
11 mu_1       0.2      1.08         0.845  0.0875        8.55
12 mu_1       0.3      1.02         0.930  0.307         2.46
13 mu_1       0.4      1.01         0.998  0.508         1.60
14 mu_1       0.5      1.00         1.02   0.628         1.47
15 mu_1       0.6      0.989        0.985  0.714         1.31
16 mu_1       0.7      0.993        0.971  0.569         1.55
17 mu_1       0.8      1.04         0.997  0.209         3.39
18 mu_1       0.9      1.16         0.788  0.0242        9.66
19 mu_0       0.1      1.93         0.112  0.000642    115.  
20 mu_0       0.2      1.28         0.463  0.0302       35.0 
21 mu_0       0.3      1.04         0.788  0.164         6.75
22 mu_0       0.4      1.00         0.969  0.395         2.06
23 mu_0       0.5      1.00         1.01   0.561         1.49
24 mu_0       0.6      0.997        0.992  0.640         1.40
25 mu_0       0.7      0.985        0.988  0.678         1.36
26 mu_0       0.8      0.989        0.972  0.454         1.63
27 mu_0       0.9      1.04         0.964  0.0994        5.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.20     0.000105   1.73e-11     80.2 
 2 mu         0.2      1.72     0.00875    3.09e- 7     78.0 
 3 mu         0.3      1.47     0.0824     7.89e- 5     35.4 
 4 mu         0.4      1.16     0.320      3.80e- 3     10.7 
 5 mu         0.5      0.997    0.765      4.43e- 2      3.81
 6 mu         0.6      0.987    0.979      4.43e- 2      2.29
 7 mu         0.7      1.11     1.07       1.10e- 3      4.80
 8 mu         0.8      1.39     0.551      4.28e- 6     20.7 
 9 mu         0.9      2.05     0.0814     2.09e-10     64.6 
10 mu_1       0.1      2.05     0.000839   1.44e-10    115.  
11 mu_1       0.2      1.73     0.0279     1.44e- 6     55.7 
12 mu_1       0.3      1.29     0.180      2.46e- 4     16.8 
13 mu_1       0.4      1.05     0.567      8.86e- 3      8.43
14 mu_1       0.5      0.979    0.902      8.87e- 2      3.05
15 mu_1       0.6      1.02     1.09       1.56e- 2      2.23
16 mu_1       0.7      1.16     1.01       3.30e- 4      6.40
17 mu_1       0.8      1.47     0.436      1.13e- 6     24.2 
18 mu_1       0.9      2.13     0.0552     4.89e-11     71.8 
19 mu_0       0.1      1.10     0.0000278  0            76.3 
20 mu_0       0.2      1.71     0.00235    0            83.6 
21 mu_0       0.3      1.54     0.0410     0            43.3 
22 mu_0       0.4      1.22     0.200      0            14.1 
23 mu_0       0.5      1.02     0.597      0             5.21
24 mu_0       0.6      0.940    0.951      0             2.62
25 mu_0       0.7      0.973    0.981      0             2.70
26 mu_0       0.8      1.08     0.971      0             6.91
27 mu_0       0.9      1.29     0.188      0            36.0 
[1] "Total run time was 60.594 seconds"
