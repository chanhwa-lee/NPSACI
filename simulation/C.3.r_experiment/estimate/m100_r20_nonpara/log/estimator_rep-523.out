
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1218"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4 10  6  8  9  2  8  3  8  3  9  7  8  2  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0278  0.3386  0.6360  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
726 492 
[1] "treatment indicator table: "

  0   1 
473 745 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.219 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.392 0.0815
 2 mu         0.1   0.2 0.451 0.128 
 3 mu         0.1   0.3 0.483 0.149 
 4 mu         0.1   0.4 0.495 0.150 
 5 mu         0.1   0.5 0.697 0.142 
 6 mu         0.2   0.1 0.399 0.0648
 7 mu         0.2   0.2 0.473 0.104 
 8 mu         0.2   0.3 0.516 0.126 
 9 mu         0.2   0.4 0.538 0.128 
10 mu         0.2   0.5 0.736 0.125 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.914        0.194 0.000112       6.02
 2 mu         0.2      1.09         0.661 0.0128         8.26
 3 mu         0.3      1.07         0.947 0.0945         4.48
 4 mu         0.4      1.03         0.993 0.303          2.52
 5 mu         0.5      1.01         0.999 0.570          1.58
 6 mu         0.6      0.997        0.998 0.623          1.40
 7 mu         0.7      1.00         0.995 0.413          1.56
 8 mu         0.8      1.03         0.980 0.100          3.40
 9 mu         0.9      1.08         0.953 0.00431        5.89
10 mu_1       0.1      1.08         0.473 0.000506      10.0 
11 mu_1       0.2      1.08         0.890 0.0299         6.93
12 mu_1       0.3      1.04         0.996 0.156          3.15
13 mu_1       0.4      1.01         1.00  0.406          2.18
14 mu_1       0.5      0.998        1.00  0.615          1.37
15 mu_1       0.6      0.992        0.992 0.584          1.42
16 mu_1       0.7      1.00         0.996 0.336          1.67
17 mu_1       0.8      1.04         0.972 0.0756         3.60
18 mu_1       0.9      1.08         0.951 0.00296        6.48
19 mu_0       0.1      0.896        0.155 0.0000681      6.55
20 mu_0       0.2      1.09         0.586 0.00857        8.59
21 mu_0       0.3      1.09         0.900 0.0681         5.06
22 mu_0       0.4      1.05         0.993 0.235          2.95
23 mu_0       0.5      1.02         0.991 0.511          1.79
24 mu_0       0.6      1.00         1.01  0.678          1.43
25 mu_0       0.7      0.995        0.989 0.558          1.47
26 mu_0       0.8      1.01         1.01  0.200          2.61
27 mu_0       0.9      1.06         0.999 0.0165         4.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      8.64     0.0000928  2.50e-14    754.  
 2 mu         0.2      3.79     0.00979    1.46e- 9    258.  
 3 mu         0.3      1.64     0.0957     8.37e- 7     52.2 
 4 mu         0.4      1.15     0.396      7.16e- 5      6.89
 5 mu         0.5      1.04     0.752      2.12e- 3      3.90
 6 mu         0.6      1.06     1.03       1.24e- 2      3.55
 7 mu         0.7      1.52     0.919      2.25e- 4     14.2 
 8 mu         0.8      3.32     0.667      6.71e- 7     89.4 
 9 mu         0.9      9.33     0.0985     2.59e-11    523.  
10 mu_1       0.1      6.26     0.000559   2.35e-13    471.  
11 mu_1       0.2      2.02     0.0338     6.85e- 9     80.5 
12 mu_1       0.3      1.21     0.223      2.63e- 6     10.9 
13 mu_1       0.4      1.07     0.610      1.68e- 4      4.98
14 mu_1       0.5      1.03     0.869      3.99e- 3      3.06
15 mu_1       0.6      1.12     1.03       2.42e- 3      5.92
16 mu_1       0.7      1.73     0.957      3.28e- 5     20.3 
17 mu_1       0.8      3.79     0.517      7.50e- 8    112.  
18 mu_1       0.9     10.1      0.0680     2.29e-12    581.  
19 mu_0       0.1      8.91     0.0000453  0           785.  
20 mu_0       0.2      4.24     0.00454    0           302.  
21 mu_0       0.3      1.83     0.0389     0            69.8 
22 mu_0       0.4      1.21     0.267      0            10.8 
23 mu_0       0.5      1.06     0.706      0             5.57
24 mu_0       0.6      0.976    0.834      0             3.28
25 mu_0       0.7      1.02     0.883      0             5.75
26 mu_0       0.8      1.42     0.648      0            24.7 
27 mu_0       0.9      2.30     0.114      0            45.8 
[1] "Total run time was 58.436 seconds"
