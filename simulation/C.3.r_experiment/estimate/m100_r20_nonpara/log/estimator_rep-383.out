
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1270"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  6  7  5  8  8  3 12  1 10  6 10  7  6  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01643 0.24658 0.54474 0.88393 6.00000 
[1] "event indicator table: "

  0   1 
739 531 
[1] "treatment indicator table: "

  0   1 
515 755 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 679
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 63.779 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.128 0.169 
 2 mu         0.1   0.2 0.203 0.194 
 3 mu         0.1   0.3 0.410 0.0974
 4 mu         0.1   0.4 0.425 0.105 
 5 mu         0.1   0.5 0.425 0.119 
 6 mu         0.2   0.1 0.258 0.0945
 7 mu         0.2   0.2 0.358 0.112 
 8 mu         0.2   0.3 0.489 0.0723
 9 mu         0.2   0.4 0.521 0.0745
10 mu         0.2   0.5 0.539 0.0844
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.780        0.168 0.0000542      7.81
 2 mu         0.2      0.970        0.599 0.00287        7.05
 3 mu         0.3      1.02         0.919 0.0261         3.98
 4 mu         0.4      1.02         1.01  0.113          2.09
 5 mu         0.5      1.01         1.00  0.316          1.56
 6 mu         0.6      0.996        0.995 0.656          1.30
 7 mu         0.7      0.990        0.990 0.641          1.66
 8 mu         0.8      0.981        0.947 0.425          2.59
 9 mu         0.9      0.953        0.821 0.0673         4.16
10 mu_1       0.1      0.942        0.413 0.000299      10.1 
11 mu_1       0.2      1.02         0.859 0.00928        5.42
12 mu_1       0.3      1.02         0.982 0.0583         2.90
13 mu_1       0.4      1.00         1.02  0.195          1.56
14 mu_1       0.5      0.996        0.993 0.453          1.53
15 mu_1       0.6      0.990        0.998 0.680          1.21
16 mu_1       0.7      0.988        0.991 0.558          1.85
17 mu_1       0.8      0.977        0.922 0.372          2.77
18 mu_1       0.9      0.949        0.803 0.0559         4.30
19 mu_0       0.1      0.762        0.137 0.0000226      7.56
20 mu_0       0.2      0.957        0.541 0.00127        7.45
21 mu_0       0.3      1.02         0.884 0.0123         4.45
22 mu_0       0.4      1.02         0.988 0.0580         2.44
23 mu_0       0.5      1.02         1.01  0.180          1.59
24 mu_0       0.6      1.00         1.01  0.419          1.44
25 mu_0       0.7      0.995        0.983 0.699          1.28
26 mu_0       0.8      0.993        0.995 0.460          1.86
27 mu_0       0.9      0.986        0.916 0.168          2.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.760    0.000221   1.81e-14     38.9 
 2 mu         0.2      1.04     0.0160     3.76e- 9     30.3 
 3 mu         0.3      1.10     0.137      2.66e- 6     15.6 
 4 mu         0.4      1.05     0.482      1.99e- 4      8.82
 5 mu         0.5      0.941    0.889      5.66e- 3      3.32
 6 mu         0.6      0.858    0.894      3.70e- 3      2.46
 7 mu         0.7      0.937    0.829      4.42e- 5      3.28
 8 mu         0.8      1.44     0.390      6.69e- 8     16.1 
 9 mu         0.9      2.37     0.0525     7.27e-13     38.4 
10 mu_1       0.1      1.10     0.00138    1.63e-13     43.2 
11 mu_1       0.2      1.09     0.0516     1.69e- 8     16.8 
12 mu_1       0.3      1.09     0.281      8.87e- 6     12.3 
13 mu_1       0.4      1.02     0.666      4.98e- 4      6.96
14 mu_1       0.5      0.915    0.974      1.13e- 2      2.66
15 mu_1       0.6      0.863    0.847      9.25e- 4      2.73
16 mu_1       0.7      0.995    0.705      9.46e- 6      4.22
17 mu_1       0.8      1.55     0.290      1.25e- 8     18.2 
18 mu_1       0.9      2.42     0.0335     1.21e-13     42.4 
19 mu_0       0.1      0.722    0.0000988  0            38.4 
20 mu_0       0.2      1.03     0.00706    0            33.7 
21 mu_0       0.3      1.11     0.0811     0            19.8 
22 mu_0       0.4      1.07     0.318      0            10.1 
23 mu_0       0.5      0.968    0.744      0             4.30
24 mu_0       0.6      0.851    0.819      0             2.14
25 mu_0       0.7      0.804    0.764      0             2.97
26 mu_0       0.8      1.02     0.413      0             8.07
27 mu_0       0.9      1.88     0.0442     0            33.6 
[1] "Total run time was 67.791 seconds"
