
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1262"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  7  3  8  8  9  5  7  3  8 11  2  6 14  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04167 0.35454 0.59557 0.99392 4.00000 
[1] "event indicator table: "

  0   1 
743 519 
[1] "treatment indicator table: "

  0   1 
473 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.002 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.170 0.0619
 2 mu         0.1   0.2 0.213 0.0859
 3 mu         0.1   0.3 0.220 0.0887
 4 mu         0.1   0.4 0.256 0.0772
 5 mu         0.1   0.5 0.289 0.0771
 6 mu         0.2   0.1 0.238 0.0524
 7 mu         0.2   0.2 0.297 0.0641
 8 mu         0.2   0.3 0.339 0.0758
 9 mu         0.2   0.4 0.394 0.0704
10 mu         0.2   0.5 0.436 0.0731
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.465       0.0893 0.0000131       5.22
 2 mu         0.2      0.790       0.452  0.00320         7.80
 3 mu         0.3      0.895       0.754  0.0527          4.96
 4 mu         0.4      0.939       0.921  0.215           2.37
 5 mu         0.5      0.979       0.975  0.444           1.65
 6 mu         0.6      1.01        1.02   0.631           1.53
 7 mu         0.7      1.03        1.02   0.638           1.51
 8 mu         0.8      1.02        1.04   0.414           1.76
 9 mu         0.9      1.03        0.963  0.0638          2.45
10 mu_1       0.1      0.795       0.303  0.0000682       8.81
11 mu_1       0.2      0.924       0.668  0.00848         7.29
12 mu_1       0.3      0.941       0.882  0.0918          3.62
13 mu_1       0.4      0.965       0.959  0.310           1.84
14 mu_1       0.5      0.999       0.979  0.555           1.71
15 mu_1       0.6      1.02        1.03   0.602           1.45
16 mu_1       0.7      1.03        1.02   0.622           1.55
17 mu_1       0.8      1.02        1.04   0.357           1.87
18 mu_1       0.9      1.04        0.957  0.0524          2.55
19 mu_0       0.1      0.428       0.0682 0.00000665      4.83
20 mu_0       0.2      0.756       0.371  0.00188         7.98
21 mu_0       0.3      0.875       0.702  0.0345          5.53
22 mu_0       0.4      0.921       0.889  0.152           2.73
23 mu_0       0.5      0.960       0.950  0.333           1.76
24 mu_0       0.6      0.998       0.992  0.578           1.66
25 mu_0       0.7      1.02        0.984  0.572           1.44
26 mu_0       0.8      1.02        1.01   0.477           1.63
27 mu_0       0.9      1.01        1.01   0.166           2.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.522    0.000101   8.89e-15     13.0 
 2 mu         0.2      1.18     0.00619    1.04e- 9     18.4 
 3 mu         0.3      1.33     0.0862     8.93e- 7     13.1 
 4 mu         0.4      1.16     0.329      1.02e- 4      7.62
 5 mu         0.5      1.09     0.840      3.77e- 3      3.90
 6 mu         0.6      1.13     0.990      5.77e- 2      5.53
 7 mu         0.7      1.12     0.991      1.96e- 3      5.53
 8 mu         0.8      1.11     0.768      8.72e- 6      5.83
 9 mu         0.9      1.42     0.0775     4.79e-10     21.3 
10 mu_1       0.1      1.10     0.000693   8.40e-14     21.6 
11 mu_1       0.2      1.42     0.0228     4.89e- 9     18.4 
12 mu_1       0.3      1.26     0.178      2.81e- 6     11.7 
13 mu_1       0.4      1.08     0.540      2.40e- 4      5.87
14 mu_1       0.5      1.09     0.846      7.12e- 3      4.55
15 mu_1       0.6      1.15     1.06       2.82e- 2      5.63
16 mu_1       0.7      1.12     1.00       6.99e- 4      5.41
17 mu_1       0.8      1.13     0.616      2.72e- 6      7.29
18 mu_1       0.9      1.46     0.0525     1.33e-10     23.7 
19 mu_0       0.1      0.458    0.0000281  0            12.0 
20 mu_0       0.2      1.12     0.00199    0            18.4 
21 mu_0       0.3      1.36     0.0322     0            14.3 
22 mu_0       0.4      1.22     0.181      0             9.49
23 mu_0       0.5      1.09     0.593      0             5.72
24 mu_0       0.6      1.11     0.969      0             5.38
25 mu_0       0.7      1.12     1.00       0             5.83
26 mu_0       0.8      1.03     0.926      0             4.35
27 mu_0       0.9      1.01     0.183      0             9.15
[1] "Total run time was 62.172 seconds"
