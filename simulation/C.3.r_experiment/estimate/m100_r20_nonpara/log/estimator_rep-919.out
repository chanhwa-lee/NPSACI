
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1278"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  6  9  5  7  7  6  2 12  6  7  8  6  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06416 0.44281 0.65325 1.00000 4.96352 
[1] "event indicator table: "

  0   1 
784 494 
[1] "treatment indicator table: "

  0   1 
400 878 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 693
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 122.402 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.379 0.0779
 2 mu         0.1   0.2 0.442 0.0909
 3 mu         0.1   0.3 0.459 0.0900
 4 mu         0.1   0.4 0.468 0.0918
 5 mu         0.1   0.5 0.517 0.134 
 6 mu         0.2   0.1 0.356 0.0613
 7 mu         0.2   0.2 0.414 0.0739
 8 mu         0.2   0.3 0.447 0.0675
 9 mu         0.2   0.4 0.465 0.0650
10 mu         0.2   0.5 0.509 0.0977
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.944        0.311 0.000000720      8.67
 2 mu         0.2      1.01         0.644 0.000548         5.33
 3 mu         0.3      0.956        0.838 0.0166           3.27
 4 mu         0.4      0.927        0.879 0.106            1.82
 5 mu         0.5      0.959        0.961 0.199            1.74
 6 mu         0.6      1.00         0.992 0.345            1.60
 7 mu         0.7      1.01         1.01  0.578            1.56
 8 mu         0.8      1.01         0.998 0.493            1.50
 9 mu         0.9      1.03         1.04  0.542            1.86
10 mu_1       0.1      1.10         0.593 0.00000397       6.67
11 mu_1       0.2      0.989        0.762 0.00153          4.38
12 mu_1       0.3      0.924        0.821 0.0317           2.24
13 mu_1       0.4      0.929        0.926 0.190            1.71
14 mu_1       0.5      0.976        0.993 0.197            1.75
15 mu_1       0.6      1.01         1.01  0.415            1.64
16 mu_1       0.7      1.01         1.02  0.542            1.55
17 mu_1       0.8      1.01         0.989 0.503            1.47
18 mu_1       0.9      1.03         1.03  0.513            1.88
19 mu_0       0.1      0.927        0.271 0.000000359      9.00
20 mu_0       0.2      1.02         0.584 0.000303         5.57
21 mu_0       0.3      0.970        0.841 0.0102           3.71
22 mu_0       0.4      0.926        0.804 0.0500           1.99
23 mu_0       0.5      0.942        0.923 0.153            1.74
24 mu_0       0.6      0.986        0.973 0.242            1.71
25 mu_0       0.7      1.01         1.01  0.547            1.71
26 mu_0       0.8      1.01         1.01  0.453            1.65
27 mu_0       0.9      1.01         0.984 0.550            1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.70   0.00000510   1.49e-19    138.  
 2 mu         0.2      1.89   0.00129      1.56e-13     59.7 
 3 mu         0.3      1.22   0.0285       5.18e-10     16.8 
 4 mu         0.4      1.02   0.157        1.63e- 7      7.02
 5 mu         0.5      1.03   0.500        1.42e- 5      4.48
 6 mu         0.6      1.08   0.941        5.44e- 4      4.17
 7 mu         0.7      1.13   0.965        6.06e- 4      4.89
 8 mu         0.8      1.11   0.946        3.56e- 6      5.32
 9 mu         0.9      1.05   0.363        4.78e-10      6.49
10 mu_1       0.1      2.61   0.0000475    1.49e-18     98.6 
11 mu_1       0.2      1.33   0.00506      7.80e-13     21.3 
12 mu_1       0.3      0.987  0.0650       1.73e- 9      8.72
13 mu_1       0.4      0.976  0.283        4.09e- 7      5.27
14 mu_1       0.5      1.04   0.616        2.84e- 5      4.48
15 mu_1       0.6      1.09   0.953        9.06e- 4      3.97
16 mu_1       0.7      1.13   0.936        6.18e- 5      5.24
17 mu_1       0.8      1.10   0.991        3.18e- 7      5.55
18 mu_1       0.9      1.05   0.289        3.88e-11      6.73
19 mu_0       0.1      2.71   0.000000844  0           142.  
20 mu_0       0.2      2.03   0.000443     0            69.3 
21 mu_0       0.3      1.32   0.0107       0            21.9 
22 mu_0       0.4      1.05   0.0745       0             8.31
23 mu_0       0.5      1.02   0.296        0             5.36
24 mu_0       0.6      1.07   0.695        0             4.47
25 mu_0       0.7      1.12   0.958        0             4.08
26 mu_0       0.8      1.15   0.880        0             6.03
27 mu_0       0.9      1.08   0.579        0             6.49
[1] "Total run time was 129.569 seconds"
