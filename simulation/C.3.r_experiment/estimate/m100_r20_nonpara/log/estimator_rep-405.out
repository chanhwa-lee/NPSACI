
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1292"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  5  7  6 10  5  7  6  3  8  7 11  4  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03291 0.37357 0.60688 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
782 510 
[1] "treatment indicator table: "

  0   1 
480 812 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.438 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.344 0.101 
 2 mu         0.1   0.2 0.415 0.137 
 3 mu         0.1   0.3 0.420 0.160 
 4 mu         0.1   0.4 0.573 0.115 
 5 mu         0.1   0.5 0.625 0.133 
 6 mu         0.2   0.1 0.336 0.0628
 7 mu         0.2   0.2 0.416 0.0883
 8 mu         0.2   0.3 0.430 0.101 
 9 mu         0.2   0.4 0.550 0.0563
10 mu         0.2   0.5 0.590 0.0712
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.323 0.0000552     15.9 
 2 mu         0.2      1.09         0.845 0.00900        5.70
 3 mu         0.3      1.05         0.986 0.101          3.02
 4 mu         0.4      1.00         1.01  0.364          1.87
 5 mu         0.5      0.977        0.957 0.557          1.49
 6 mu         0.6      0.976        0.983 0.619          1.43
 7 mu         0.7      0.987        0.998 0.674          1.31
 8 mu         0.8      0.998        0.988 0.530          1.84
 9 mu         0.9      1.01         0.985 0.127          2.37
10 mu_1       0.1      1.13         0.679 0.000251       6.86
11 mu_1       0.2      1.08         0.969 0.0209         4.74
12 mu_1       0.3      1.03         1.01  0.161          2.21
13 mu_1       0.4      0.992        0.959 0.402          1.78
14 mu_1       0.5      0.977        0.982 0.601          1.48
15 mu_1       0.6      0.980        0.989 0.592          1.44
16 mu_1       0.7      0.991        0.995 0.681          1.44
17 mu_1       0.8      1.00         0.984 0.496          1.90
18 mu_1       0.9      1.02         0.989 0.109          2.41
19 mu_0       0.1      1.07         0.278 0.0000334     17.7 
20 mu_0       0.2      1.09         0.778 0.00602        5.94
21 mu_0       0.3      1.06         1.00  0.0746         3.37
22 mu_0       0.4      1.01         1.01  0.297          2.00
23 mu_0       0.5      0.978        0.964 0.469          1.60
24 mu_0       0.6      0.969        0.952 0.659          1.43
25 mu_0       0.7      0.978        1.01  0.591          1.36
26 mu_0       0.8      0.985        0.993 0.610          1.57
27 mu_0       0.9      1.01         1.01  0.286          2.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.39     0.0000357  7.64e-15    253.  
 2 mu         0.2      2.35     0.00390    5.00e-10    122.  
 3 mu         0.3      1.36     0.0508     3.29e- 7     24.7 
 4 mu         0.4      1.08     0.255      3.28e- 5      8.62
 5 mu         0.5      0.983    0.567      1.17e- 3      4.99
 6 mu         0.6      0.940    0.882      4.17e- 3      3.45
 7 mu         0.7      1.00     0.971      3.20e- 5      2.78
 8 mu         0.8      1.16     0.820      2.83e- 8      7.59
 9 mu         0.9      1.28     0.111      1.37e-13     14.2 
10 mu_1       0.1      3.78     0.000262   7.64e-14    253.  
11 mu_1       0.2      1.78     0.0140     2.50e- 9     60.8 
12 mu_1       0.3      1.17     0.109      1.10e- 6     10.4 
13 mu_1       0.4      1.03     0.459      8.20e- 5      7.61
14 mu_1       0.5      0.949    0.734      2.33e- 3      4.99
15 mu_1       0.6      0.933    0.868      6.95e- 4      2.88
16 mu_1       0.7      1.02     0.888      4.57e- 6      3.06
17 mu_1       0.8      1.17     0.665      3.54e- 9      8.37
18 mu_1       0.9      1.28     0.0768     1.52e-14     15.7 
19 mu_0       0.1      3.34     0.0000128  0           253.  
20 mu_0       0.2      2.49     0.00134    0           137.  
21 mu_0       0.3      1.44     0.0245     0            31.8 
22 mu_0       0.4      1.11     0.155      0             9.30
23 mu_0       0.5      1.02     0.460      0             5.73
24 mu_0       0.6      0.951    0.878      0             4.32
25 mu_0       0.7      0.962    0.930      0             2.85
26 mu_0       0.8      1.09     0.899      0             4.46
27 mu_0       0.9      1.31     0.315      0            13.1 
[1] "Total run time was 55.28 seconds"
