
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1229"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  6  5  5 10  7 12  9  5  6  5  4  8  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02218 0.28369 0.56816 0.95068 7.00000 
[1] "event indicator table: "

  0   1 
689 540 
[1] "treatment indicator table: "

  0   1 
516 713 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 91.33 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.296 0.0733
 2 mu         0.1   0.2 0.330 0.0571
 3 mu         0.1   0.3 0.401 0.0737
 4 mu         0.1   0.4 0.415 0.0734
 5 mu         0.1   0.5 0.519 0.106 
 6 mu         0.2   0.1 0.295 0.0400
 7 mu         0.2   0.2 0.355 0.0394
 8 mu         0.2   0.3 0.408 0.0463
 9 mu         0.2   0.4 0.442 0.0487
10 mu         0.2   0.5 0.528 0.0645
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.679        0.500  0.000939      5.52
 2 mu         0.2      0.841        0.764  0.0308        2.33
 3 mu         0.3      0.961        0.937  0.171         1.94
 4 mu         0.4      1.01         1.00   0.444         1.54
 5 mu         0.5      1.02         1.04   0.594         1.60
 6 mu         0.6      1.02         1.03   0.654         1.70
 7 mu         0.7      1.00         1.01   0.624         1.45
 8 mu         0.8      0.981        0.993  0.287         1.68
 9 mu         0.9      0.989        0.967  0.0504        2.22
10 mu_1       0.1      0.815        0.680  0.00442       2.72
11 mu_1       0.2      0.939        0.917  0.0746        2.06
12 mu_1       0.3      1.01         1.01   0.286         1.87
13 mu_1       0.4      1.02         1.05   0.546         1.45
14 mu_1       0.5      1.02         1.04   0.637         1.71
15 mu_1       0.6      1.01         1.02   0.611         1.66
16 mu_1       0.7      0.996        1.00   0.568         1.46
17 mu_1       0.8      0.981        0.985  0.232         1.71
18 mu_1       0.9      0.994        0.960  0.0392        2.43
19 mu_0       0.1      0.664        0.454  0.000552      6.08
20 mu_0       0.2      0.816        0.747  0.0199        2.72
21 mu_0       0.3      0.941        0.907  0.122         1.99
22 mu_0       0.4      0.998        0.995  0.348         1.67
23 mu_0       0.5      1.02         1.03   0.549         1.50
24 mu_0       0.6      1.02         1.04   0.644         1.75
25 mu_0       0.7      1.01         1.00   0.543         1.61
26 mu_0       0.8      0.984        0.974  0.507         1.62
27 mu_0       0.9      0.945        0.916  0.128         2.11
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.757     0.000396  1.23e-14     23.8 
 2 mu         0.2      1.36      0.0227    1.61e- 9     23.2 
 3 mu         0.3      1.46      0.193     1.59e- 6     14.0 
 4 mu         0.4      1.27      0.723     2.11e- 4     11.1 
 5 mu         0.5      1.06      1.02      9.37e- 3      5.24
 6 mu         0.6      1.01      0.895     2.95e- 2      3.67
 7 mu         0.7      1.13      0.838     1.01e- 3      4.57
 8 mu         0.8      1.54      0.389     5.87e- 6     27.6 
 9 mu         0.9      3.28      0.0297    5.74e-10    205.  
10 mu_1       0.1      1.38      0.00261   1.23e-13     34.0 
11 mu_1       0.2      1.63      0.0776    8.04e- 9     16.6 
12 mu_1       0.3      1.44      0.375     5.28e- 6     14.4 
13 mu_1       0.4      1.16      0.989     5.27e- 4      8.52
14 mu_1       0.5      0.991     0.942     1.87e- 2      3.22
15 mu_1       0.6      1.01      0.835     4.47e- 3      3.67
16 mu_1       0.7      1.18      0.835     2.52e- 4      6.53
17 mu_1       0.8      1.65      0.283     1.63e- 6     34.6 
18 mu_1       0.9      3.51      0.0188    1.42e-10    227.  
19 mu_0       0.1      0.688     0.000176  0            22.7 
20 mu_0       0.2      1.29      0.0115    0            24.8 
21 mu_0       0.3      1.47      0.112     0            13.9 
22 mu_0       0.4      1.34      0.499     0            12.8 
23 mu_0       0.5      1.13      0.965     0             7.26
24 mu_0       0.6      1.01      0.936     0             3.67
25 mu_0       0.7      1.00      0.893     0             3.72
26 mu_0       0.8      1.09      0.622     0             6.14
27 mu_0       0.9      1.21      0.0814    0            17.4 
[1] "Total run time was 95.592 seconds"
