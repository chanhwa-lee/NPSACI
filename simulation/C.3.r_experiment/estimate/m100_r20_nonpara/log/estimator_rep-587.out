
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1157"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
15  7  4  4  6  7  8  8  8  3  4  6  5  4  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06135 0.41461 0.65184 1.00000 5.73992 
[1] "event indicator table: "

  0   1 
697 460 
[1] "treatment indicator table: "

  0   1 
415 742 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 563
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.464 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.157 0.0429
 2 mu         0.1   0.2 0.228 0.0936
 3 mu         0.1   0.3 0.364 0.0890
 4 mu         0.1   0.4 0.346 0.0883
 5 mu         0.1   0.5 0.376 0.141 
 6 mu         0.2   0.1 0.165 0.0365
 7 mu         0.2   0.2 0.280 0.0700
 8 mu         0.2   0.3 0.421 0.0693
 9 mu         0.2   0.4 0.418 0.0651
10 mu         0.2   0.5 0.475 0.115 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.636       0.0954 0.00000905     17.5 
 2 mu         0.2      0.798       0.424  0.00131        10.8 
 3 mu         0.3      0.937       0.746  0.0182          4.39
 4 mu         0.4      0.996       0.953  0.0959          1.99
 5 mu         0.5      0.997       0.999  0.293           1.54
 6 mu         0.6      0.984       1.00   0.571           1.23
 7 mu         0.7      0.997       0.987  0.739           1.53
 8 mu         0.8      1.08        0.977  0.489           4.37
 9 mu         0.9      1.28        0.795  0.115          14.2 
10 mu_1       0.1      0.729       0.317  0.0000523      15.9 
11 mu_1       0.2      0.869       0.692  0.00385         4.98
12 mu_1       0.3      0.978       0.896  0.0368          2.97
13 mu_1       0.4      1.00        0.985  0.151           1.76
14 mu_1       0.5      0.989       1.00   0.388           1.42
15 mu_1       0.6      0.979       0.999  0.616           1.20
16 mu_1       0.7      1.00        0.984  0.664           1.71
17 mu_1       0.8      1.09        0.963  0.415           4.99
18 mu_1       0.9      1.30        0.784  0.0942         14.7 
19 mu_0       0.1      0.626       0.0732 0.00000424     17.7 
20 mu_0       0.2      0.780       0.352  0.000670       12.3 
21 mu_0       0.3      0.920       0.693  0.0102          5.63
22 mu_0       0.4      0.992       0.913  0.0590          2.34
23 mu_0       0.5      1.00        0.999  0.197           1.69
24 mu_0       0.6      0.992       0.982  0.461           1.38
25 mu_0       0.7      0.988       0.994  0.753           1.34
26 mu_0       0.8      1.02        1.01   0.302           2.19
27 mu_0       0.9      1.15        0.991  0.0336          9.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.47     0.000112   4.99e-13    103.  
 2 mu         0.2      2.07     0.00891    3.26e- 8    141.  
 3 mu         0.3      1.45     0.0951     1.09e- 5     64.1 
 4 mu         0.4      1.08     0.340      5.88e- 4     15.0 
 5 mu         0.5      1.02     0.837      8.56e- 3      3.70
 6 mu         0.6      1.04     1.03       7.43e- 2      2.40
 7 mu         0.7      1.18     1.02       2.46e- 3      4.30
 8 mu         0.8      1.57     0.641      8.39e- 6     17.1 
 9 mu         0.9      1.89     0.107      3.64e-10     50.1 
10 mu_1       0.1      2.54     0.000697   4.25e-12    172.  
11 mu_1       0.2      1.97     0.0295     1.44e- 7    117.  
12 mu_1       0.3      1.21     0.215      3.22e- 5     35.6 
13 mu_1       0.4      1.00     0.559      1.33e- 3      6.27
14 mu_1       0.5      0.998    0.914      1.71e- 2      2.83
15 mu_1       0.6      1.05     1.08       3.22e- 2      2.53
16 mu_1       0.7      1.23     0.940      5.86e- 4      5.23
17 mu_1       0.8      1.64     0.496      1.75e- 6     20.1 
18 mu_1       0.9      1.90     0.0731     6.75e-11     52.2 
19 mu_0       0.1      1.35     0.0000330  0            95.3 
20 mu_0       0.2      2.09     0.00431    0           147.  
21 mu_0       0.3      1.56     0.0413     0            76.3 
22 mu_0       0.4      1.13     0.222      0            20.9 
23 mu_0       0.5      1.04     0.612      0             5.44
24 mu_0       0.6      1.02     0.952      0             2.90
25 mu_0       0.7      1.06     1.07       0             2.50
26 mu_0       0.8      1.30     1.01       0             9.26
27 mu_0       0.9      1.80     0.256      0            31.3 
[1] "Total run time was 53.466 seconds"
