
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4  8  4  7  7  7  5 10  1  6  6  4  8 10  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03477 0.32157 0.61147 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
787 482 
[1] "treatment indicator table: "

  0   1 
455 814 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.949 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.278 0.110 
 2 mu         0.1   0.2 0.400 0.0993
 3 mu         0.1   0.3 0.457 0.105 
 4 mu         0.1   0.4 0.492 0.107 
 5 mu         0.1   0.5 0.497 0.111 
 6 mu         0.2   0.1 0.278 0.0783
 7 mu         0.2   0.2 0.354 0.0662
 8 mu         0.2   0.3 0.457 0.102 
 9 mu         0.2   0.4 0.469 0.0927
10 mu         0.2   0.5 0.499 0.113 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.691        0.220 0.0000000263     11.1 
 2 mu         0.2      0.753        0.621 0.0000532         3.43
 3 mu         0.3      0.880        0.822 0.00315           6.32
 4 mu         0.4      0.961        0.931 0.0411            4.71
 5 mu         0.5      0.990        0.962 0.220             2.23
 6 mu         0.6      1.00         1.00  0.624             1.61
 7 mu         0.7      1.02         1.00  0.675             1.84
 8 mu         0.8      1.05         0.967 0.310             5.29
 9 mu         0.9      1.21         0.864 0.0318           26.8 
10 mu_1       0.1      0.719        0.537 0.000000168       4.75
11 mu_1       0.2      0.858        0.774 0.000171          5.18
12 mu_1       0.3      0.954        0.879 0.00683           6.49
13 mu_1       0.4      0.990        0.976 0.0679            3.87
14 mu_1       0.5      0.998        1.00  0.297             1.79
15 mu_1       0.6      1.00         1.01  0.639             1.62
16 mu_1       0.7      1.02         0.986 0.669             2.03
17 mu_1       0.8      1.06         0.993 0.269             6.42
18 mu_1       0.9      1.22         0.831 0.0257           29.7 
19 mu_0       0.1      0.688        0.171 0.0000000106     12.3 
20 mu_0       0.2      0.726        0.524 0.0000238         3.10
21 mu_0       0.3      0.849        0.769 0.00157           6.25
22 mu_0       0.4      0.941        0.886 0.0233            5.28
23 mu_0       0.5      0.982        0.942 0.143             2.67
24 mu_0       0.6      0.998        0.984 0.471             1.60
25 mu_0       0.7      1.01         1.01  0.650             1.60
26 mu_0       0.8      1.03         1.02  0.475             2.65
27 mu_0       0.9      1.05         0.951 0.0861            5.21
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      48.0     0.0000471  5.02e-17   2116.  
 2 mu         0.2      43.4     0.00540    5.26e-11   2554.  
 3 mu         0.3      22.3     0.0639     1.75e- 7   1527.  
 4 mu         0.4       6.81    0.283      5.52e- 5    410.  
 5 mu         0.5       1.95    0.691      3.34e- 3     54.1 
 6 mu         0.6       1.18    0.959      3.57e- 2      3.76
 7 mu         0.7       1.29    1.03       2.99e- 3      6.46
 8 mu         0.8       2.20    0.877      2.29e- 5     57.9 
 9 mu         0.9       8.66    0.217      3.72e- 9    610.  
10 mu_1       0.1      36.1     0.000326   0          2102.  
11 mu_1       0.2      30.9     0.0171     0          2554.  
12 mu_1       0.3      12.4     0.129      0          1018.  
13 mu_1       0.4       3.42    0.457      0           205.  
14 mu_1       0.5       1.36    0.923      0            21.6 
15 mu_1       0.6       1.16    1.01       0             4.17
16 mu_1       0.7       1.38    1.08       0             9.23
17 mu_1       0.8       2.45    0.756      0            72.4 
18 mu_1       0.9       9.48    0.165      0           678.  
19 mu_0       0.1      49.3     0.0000158  0          2351.  
20 mu_0       0.2      46.5     0.00206    0          2554.  
21 mu_0       0.3      26.5     0.0318     0          1745.  
22 mu_0       0.4       9.07    0.160      0           546.  
23 mu_0       0.5       2.54    0.450      0            86.5 
24 mu_0       0.6       1.21    0.856      0             6.61
25 mu_0       0.7       1.11    1.03       0             4.44
26 mu_0       0.8       1.19    0.980      0             4.73
27 mu_0       0.9       1.26    0.235      0            16.5 
[1] "Total run time was 69.273 seconds"
