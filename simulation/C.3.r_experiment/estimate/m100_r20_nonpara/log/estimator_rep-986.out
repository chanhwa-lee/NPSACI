
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1261"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  3  4  5  7  4 12  8  4  7  7  4  4  4  5 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03143 0.32952 0.56618 0.94616 5.00000 
[1] "event indicator table: "

  0   1 
732 529 
[1] "treatment indicator table: "

  0   1 
483 778 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 62.813 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.297 0.161
 2 mu         0.1   0.2 0.438 0.217
 3 mu         0.1   0.3 0.486 0.240
 4 mu         0.1   0.4 0.550 0.293
 5 mu         0.1   0.5 0.567 0.321
 6 mu         0.2   0.1 0.295 0.133
 7 mu         0.2   0.2 0.415 0.180
 8 mu         0.2   0.3 0.468 0.200
 9 mu         0.2   0.4 0.545 0.247
10 mu         0.2   0.5 0.571 0.271
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.36        0.124  0.0000000479     67.6 
 2 mu         0.2      1.33        0.439  0.0000856        58.5 
 3 mu         0.3      1.05        0.768  0.00444          23.3 
 4 mu         0.4      0.951       0.895  0.0503            5.99
 5 mu         0.5      0.961       0.939  0.232             1.85
 6 mu         0.6      0.994       0.989  0.576             1.32
 7 mu         0.7      1.02        0.996  0.644             1.84
 8 mu         0.8      1.03        0.986  0.453             4.21
 9 mu         0.9      1.11        0.867  0.102            11.6 
10 mu_1       0.1      1.58        0.333  0.000000289      90.1 
11 mu_1       0.2      1.15        0.652  0.000261         39.0 
12 mu_1       0.3      0.951       0.795  0.00914          10.6 
13 mu_1       0.4      0.941       0.906  0.0793            2.42
14 mu_1       0.5      0.976       0.973  0.301             1.55
15 mu_1       0.6      1.01        0.989  0.623             1.32
16 mu_1       0.7      1.02        0.981  0.624             2.01
17 mu_1       0.8      1.04        0.983  0.424             4.66
18 mu_1       0.9      1.12        0.854  0.0866           12.1 
19 mu_0       0.1      1.33        0.0954 0.0000000210     65.1 
20 mu_0       0.2      1.38        0.366  0.0000417        63.3 
21 mu_0       0.3      1.10        0.711  0.00242          28.8 
22 mu_0       0.4      0.958       0.838  0.0310            8.37
23 mu_0       0.5      0.946       0.910  0.163             2.15
24 mu_0       0.6      0.976       0.973  0.461             1.57
25 mu_0       0.7      1.00        0.993  0.598             1.49
26 mu_0       0.8      1.01        0.982  0.571             2.38
27 mu_0       0.9      1.02        0.979  0.238             7.13
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     350.      0.000140   2.46e-13  34873.  
 2 mu         0.2     170.      0.0158     8.15e- 9  16742.  
 3 mu         0.3      37.9     0.119      2.38e- 6   3405.  
 4 mu         0.4       7.46    0.374      1.34e- 4    378.  
 5 mu         0.5       2.47    0.835      3.04e- 3     54.4 
 6 mu         0.6       1.26    0.921      3.90e- 2     10.9 
 7 mu         0.7       1.10    1.08       4.41e- 3      3.53
 8 mu         0.8       1.26    0.758      3.90e- 6      8.20
 9 mu         0.9       1.38    0.111      1.88e-11     15.0 
10 mu_1       0.1     351.      0.000892   2.09e-12  34873.  
11 mu_1       0.2      86.8     0.0448     4.08e- 8   8371.  
12 mu_1       0.3      15.4     0.268      7.94e- 6   1135.  
13 mu_1       0.4       4.23    0.653      3.34e- 4    107.  
14 mu_1       0.5       1.90    0.901      6.08e- 3     38.1 
15 mu_1       0.6       1.15    1.04       6.50e- 2      7.06
16 mu_1       0.7       1.12    1.02       6.30e- 4      3.96
17 mu_1       0.8       1.29    0.597      4.87e- 7      9.40
18 mu_1       0.9       1.39    0.0789     2.09e-12     15.3 
19 mu_0       0.1     350.      0.0000458  0         34873.  
20 mu_0       0.2     191.      0.00625    0         18834.  
21 mu_0       0.3      47.5     0.0422     0          4378.  
22 mu_0       0.4       9.61    0.227      0           566.  
23 mu_0       0.5       3.04    0.693      0            70.7 
24 mu_0       0.6       1.44    0.922      0            17.4 
25 mu_0       0.7       1.06    1.03       0             3.07
26 mu_0       0.8       1.16    1.00       0             4.87
27 mu_0       0.9       1.27    0.207      0            12.5 
[1] "Total run time was 66.005 seconds"
