
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1223"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  9  8  6  8  4  5  7  5  5  8  5  4  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03694 0.34347 0.60459 1.00000 5.83200 
[1] "event indicator table: "

  0   1 
713 510 
[1] "treatment indicator table: "

  0   1 
435 788 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.33 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.228 0.143 
 2 mu         0.1   0.2 0.274 0.133 
 3 mu         0.1   0.3 0.340 0.107 
 4 mu         0.1   0.4 0.409 0.0994
 5 mu         0.1   0.5 0.493 0.129 
 6 mu         0.2   0.1 0.223 0.101 
 7 mu         0.2   0.2 0.305 0.0984
 8 mu         0.2   0.3 0.387 0.0745
 9 mu         0.2   0.4 0.471 0.0746
10 mu         0.2   0.5 0.554 0.112 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.540       0.0942 0.0000000940      5.88
 2 mu         0.2      0.709       0.449  0.0000993         4.20
 3 mu         0.3      0.857       0.781  0.00409           3.42
 4 mu         0.4      0.957       0.954  0.0417            2.48
 5 mu         0.5      0.996       0.999  0.185             1.80
 6 mu         0.6      1.00        1.01   0.454             1.47
 7 mu         0.7      0.999       1.01   0.377             1.53
 8 mu         0.8      0.994       0.958  0.274             1.66
 9 mu         0.9      0.996       0.864  0.0579            2.72
10 mu_1       0.1      0.648       0.310  0.000000610       5.25
11 mu_1       0.2      0.803       0.700  0.000324          4.18
12 mu_1       0.3      0.915       0.924  0.00894           2.86
13 mu_1       0.4      0.977       0.962  0.0690            2.21
14 mu_1       0.5      0.998       0.991  0.249             1.77
15 mu_1       0.6      1.00        1.01   0.519             1.44
16 mu_1       0.7      0.997       0.997  0.352             1.55
17 mu_1       0.8      0.994       0.949  0.220             1.73
18 mu_1       0.9      0.994       0.852  0.0436            2.90
19 mu_0       0.1      0.528       0.0686 0.0000000367      6.25
20 mu_0       0.2      0.685       0.403  0.0000432         4.79
21 mu_0       0.3      0.832       0.729  0.00201           3.68
22 mu_0       0.4      0.943       0.902  0.0236            2.89
23 mu_0       0.5      0.995       0.987  0.122             2.08
24 mu_0       0.6      1.01        0.994  0.349             1.59
25 mu_0       0.7      1.00        0.991  0.436             1.50
26 mu_0       0.8      0.997       0.987  0.303             1.66
27 mu_0       0.9      1.01        0.970  0.187             2.22
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    1189.      0.000114   4.45e-16 118821.  
 2 mu         0.2     256.      0.0121     5.83e-11  25353.  
 3 mu         0.3      33.2     0.0917     5.74e- 8   3008.  
 4 mu         0.4       4.76    0.365      7.64e- 6    214.  
 5 mu         0.5       1.86    0.819      3.39e- 4     26.6 
 6 mu         0.6       1.28    1.06       7.53e- 3      5.46
 7 mu         0.7       1.13    1.13       7.16e- 4      3.28
 8 mu         0.8       1.26    0.833      3.69e- 7      7.67
 9 mu         0.9       1.67    0.161      7.92e-13     31.5 
10 mu_1       0.1     596.      0.000710   4.45e-15  59411.  
11 mu_1       0.2      66.6     0.0368     2.91e-10   6338.  
12 mu_1       0.3       8.17    0.220      1.91e- 7    501.  
13 mu_1       0.4       2.57    0.576      1.91e- 5     51.8 
14 mu_1       0.5       1.58    1.05       6.79e- 4     17.7 
15 mu_1       0.6       1.21    1.17       5.03e- 3      3.96
16 mu_1       0.7       1.14    1.01       5.11e- 5      3.45
17 mu_1       0.8       1.31    0.672      2.31e- 8      9.59
18 mu_1       0.9       1.73    0.122      4.40e-14     35.0 
19 mu_0       0.1    1255.      0.0000479  0        125422.  
20 mu_0       0.2     303.      0.00467    0         30106.  
21 mu_0       0.3      44.0     0.0368     0          4082.  
22 mu_0       0.4       6.22    0.194      0           339.  
23 mu_0       0.5       2.15    0.580      0            35.5 
24 mu_0       0.6       1.38    0.888      0             9.10
25 mu_0       0.7       1.10    1.19       0             3.82
26 mu_0       0.8       1.06    0.955      0             4.70
27 mu_0       0.9       1.17    0.244      0            10.8 
[1] "Total run time was 62.658 seconds"
