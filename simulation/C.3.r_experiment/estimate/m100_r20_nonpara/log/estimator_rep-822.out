
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1261"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  9  3  2  4  1 10 14  6  7  3  6  8 11  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04329 0.36245 0.60256 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
741 520 
[1] "treatment indicator table: "

  0   1 
457 804 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.657 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.246 0.109 
 2 mu         0.1   0.2 0.299 0.0776
 3 mu         0.1   0.3 0.450 0.134 
 4 mu         0.1   0.4 0.467 0.131 
 5 mu         0.1   0.5 0.456 0.118 
 6 mu         0.2   0.1 0.277 0.0920
 7 mu         0.2   0.2 0.347 0.0599
 8 mu         0.2   0.3 0.490 0.111 
 9 mu         0.2   0.4 0.517 0.109 
10 mu         0.2   0.5 0.510 0.0946
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.594       0.108  0.000000110       8.80
 2 mu         0.2      0.762       0.486  0.000120          5.98
 3 mu         0.3      0.869       0.755  0.00509           2.78
 4 mu         0.4      0.951       0.942  0.0535            2.33
 5 mu         0.5      0.988       0.964  0.242             1.78
 6 mu         0.6      0.993       0.983  0.562             1.42
 7 mu         0.7      0.988       1.00   0.388             1.38
 8 mu         0.8      1.00        0.984  0.0832            2.52
 9 mu         0.9      1.03        0.854  0.00322           6.85
10 mu_1       0.1      0.772       0.300  0.000000713       9.59
11 mu_1       0.2      0.843       0.715  0.000391          4.26
12 mu_1       0.3      0.922       0.882  0.0112            2.27
13 mu_1       0.4      0.978       0.977  0.0890            2.28
14 mu_1       0.5      0.997       0.979  0.325             1.72
15 mu_1       0.6      0.994       1.00   0.580             1.35
16 mu_1       0.7      0.987       0.976  0.311             1.49
17 mu_1       0.8      1.00        0.989  0.0628            2.79
18 mu_1       0.9      1.02        0.858  0.00225           7.14
19 mu_0       0.1      0.574       0.0811 0.0000000425      8.71
20 mu_0       0.2      0.741       0.416  0.0000516         6.42
21 mu_0       0.3      0.846       0.703  0.00247           3.29
22 mu_0       0.4      0.933       0.896  0.0299            2.36
23 mu_0       0.5      0.980       0.958  0.159             1.98
24 mu_0       0.6      0.991       0.974  0.459             1.54
25 mu_0       0.7      0.989       1.01   0.568             1.32
26 mu_0       0.8      1.00        0.993  0.165             1.91
27 mu_0       0.9      1.06        1.03   0.0119            4.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.95    0.0000709  2.29e-14    145.  
 2 mu         0.2       4.08    0.0113     2.37e- 9    281.  
 3 mu         0.3       5.44    0.0918     1.79e- 6    376.  
 4 mu         0.4       3.90    0.335      1.75e- 4    214.  
 5 mu         0.5       1.94    0.835      5.40e- 3     60.9 
 6 mu         0.6       1.15    0.998      2.30e- 2      8.33
 7 mu         0.7       1.07    0.947      6.38e- 4      3.23
 8 mu         0.8       1.17    0.886      3.74e- 6     11.1 
 9 mu         0.9       1.26    0.169      5.14e-10     20.5 
10 mu_1       0.1       2.44    0.000558   2.05e-13    113.  
11 mu_1       0.2       5.19    0.0308     1.06e- 8    390.  
12 mu_1       0.3       5.35    0.245      5.34e- 6    348.  
13 mu_1       0.4       3.21    0.539      3.92e- 4    148.  
14 mu_1       0.5       1.59    0.917      9.66e- 3     33.8 
15 mu_1       0.6       1.09    1.02       2.74e- 3      4.81
16 mu_1       0.7       1.08    0.912      6.51e- 5      3.39
17 mu_1       0.8       1.19    0.716      3.34e- 7     12.4 
18 mu_1       0.9       1.27    0.128      4.08e-11     20.4 
19 mu_0       0.1       1.90    0.0000275  0           150.  
20 mu_0       0.2       3.80    0.00457    0           254.  
21 mu_0       0.3       5.49    0.0335     0           388.  
22 mu_0       0.4       4.36    0.186      0           257.  
23 mu_0       0.5       2.29    0.627      0            88.0 
24 mu_0       0.6       1.23    0.971      0            15.0 
25 mu_0       0.7       1.03    0.879      0             3.37
26 mu_0       0.8       1.07    0.940      0             5.84
27 mu_0       0.9       1.17    0.222      0            21.6 
[1] "Total run time was 61.94 seconds"
