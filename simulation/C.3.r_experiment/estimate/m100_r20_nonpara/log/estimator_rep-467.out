
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1298"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  4  5  8  7 10  8  2  3  9  8  8  3  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0165  0.2758  0.5580  0.9565  6.0000 
[1] "event indicator table: "

  0   1 
790 508 
[1] "treatment indicator table: "

  0   1 
503 795 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 693
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 102.069 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.418 0.112 
 2 mu         0.1   0.2 0.541 0.124 
 3 mu         0.1   0.3 0.610 0.113 
 4 mu         0.1   0.4 0.712 0.121 
 5 mu         0.1   0.5 0.772 0.142 
 6 mu         0.2   0.1 0.389 0.0662
 7 mu         0.2   0.2 0.504 0.0670
 8 mu         0.2   0.3 0.569 0.0578
 9 mu         0.2   0.4 0.654 0.0568
10 mu         0.2   0.5 0.713 0.0669
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.11         0.729  0.000709     11.2 
 2 mu         0.2      1.07         1.03   0.0537        2.91
 3 mu         0.3      1.05         1.04   0.306         1.88
 4 mu         0.4      1.04         1.01   0.620         1.70
 5 mu         0.5      1.02         1.02   0.642         1.47
 6 mu         0.6      0.992        0.997  0.677         1.26
 7 mu         0.7      0.957        0.959  0.555         1.32
 8 mu         0.8      0.953        0.916  0.368         1.60
 9 mu         0.9      1.04         0.919  0.135         3.54
10 mu_1       0.1      1.11         1.01   0.00289       5.77
11 mu_1       0.2      1.07         1.09   0.112         2.10
12 mu_1       0.3      1.05         1.03   0.439         1.85
13 mu_1       0.4      1.04         1.01   0.663         1.58
14 mu_1       0.5      1.02         1.02   0.638         1.43
15 mu_1       0.6      0.981        0.991  0.629         1.25
16 mu_1       0.7      0.949        0.949  0.521         1.35
17 mu_1       0.8      0.954        0.924  0.307         1.63
18 mu_1       0.9      1.05         0.912  0.108         3.83
19 mu_0       0.1      1.11         0.687  0.000467     11.8 
20 mu_0       0.2      1.07         1.03   0.0391        3.31
21 mu_0       0.3      1.05         1.05   0.249         1.89
22 mu_0       0.4      1.04         1.03   0.543         1.85
23 mu_0       0.5      1.03         1.00   0.645         1.57
24 mu_0       0.6      1.01         1.01   0.649         1.32
25 mu_0       0.7      0.975        0.991  0.546         1.31
26 mu_0       0.8      0.951        0.975  0.506         1.49
27 mu_0       0.9      0.946        0.885  0.368         2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.734   0.0000310   4.67e-17     32.0 
 2 mu         0.2      0.897   0.00582     2.17e-11     17.5 
 3 mu         0.3      0.906   0.0776      4.22e- 8      6.05
 4 mu         0.4      0.914   0.384       8.55e- 6      4.13
 5 mu         0.5      0.976   0.819       4.94e- 4      3.28
 6 mu         0.6      1.05    1.02        4.50e- 3      2.95
 7 mu         0.7      1.10    1.12        7.17e- 5      3.34
 8 mu         0.8      1.19    0.862       1.63e- 7      5.03
 9 mu         0.9      1.47    0.0847      3.54e-12     15.4 
10 mu_1       0.1      0.990   0.000196    4.43e-16     26.7 
11 mu_1       0.2      0.903   0.0193      1.03e-10      8.63
12 mu_1       0.3      0.889   0.163       1.34e- 7      5.74
13 mu_1       0.4      0.920   0.517       2.03e- 5      3.66
14 mu_1       0.5      1.00    0.924       9.40e- 4      3.11
15 mu_1       0.6      1.07    1.01        1.19e- 3      3.28
16 mu_1       0.7      1.12    1.08        1.62e- 5      3.44
17 mu_1       0.8      1.23    0.684       3.22e- 8      5.05
18 mu_1       0.9      1.52    0.0635      6.21e-13     17.1 
19 mu_0       0.1      0.705   0.00000985  0            32.6 
20 mu_0       0.2      0.895   0.00206     0            20.1 
21 mu_0       0.3      0.914   0.0371      0             7.92
22 mu_0       0.4      0.910   0.229       0             4.71
23 mu_0       0.5      0.952   0.715       0             3.47
24 mu_0       0.6      1.02    0.999       0             3.14
25 mu_0       0.7      1.05    0.982       0             3.71
26 mu_0       0.8      1.02    0.724       0             5.03
27 mu_0       0.9      1.02    0.0846      0             7.50
[1] "Total run time was 106.727 seconds"
