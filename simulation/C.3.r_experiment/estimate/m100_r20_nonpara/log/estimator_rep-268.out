
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1264"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  6  9  9  6  3  4  6  7  6  7  3  9  4 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03368 0.30165 0.58191 0.98134 5.00000 
[1] "event indicator table: "

  0   1 
719 545 
[1] "treatment indicator table: "

  0   1 
510 754 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.578 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.354 0.0677
 2 mu         0.1   0.2 0.398 0.0814
 3 mu         0.1   0.3 0.452 0.0847
 4 mu         0.1   0.4 0.480 0.103 
 5 mu         0.1   0.5 0.551 0.103 
 6 mu         0.2   0.1 0.385 0.0492
 7 mu         0.2   0.2 0.438 0.0631
 8 mu         0.2   0.3 0.512 0.0633
 9 mu         0.2   0.4 0.560 0.0790
10 mu         0.2   0.5 0.631 0.0754
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.744        0.274 0.00000226     11.1 
 2 mu         0.2      0.919        0.699 0.000893        6.99
 3 mu         0.3      0.962        0.949 0.0187          3.12
 4 mu         0.4      0.976        0.995 0.113           2.37
 5 mu         0.5      0.985        1.00  0.331           1.98
 6 mu         0.6      0.991        1.01  0.608           1.33
 7 mu         0.7      0.988        1.00  0.464           1.43
 8 mu         0.8      0.940        0.892 0.109           1.79
 9 mu         0.9      0.794        0.662 0.00415         3.08
10 mu_1       0.1      0.973        0.575 0.0000120      10.1 
11 mu_1       0.2      0.982        0.882 0.00240         4.00
12 mu_1       0.3      0.980        1.01  0.0344          2.28
13 mu_1       0.4      0.983        1.01  0.162           2.40
14 mu_1       0.5      0.987        1.01  0.401           1.73
15 mu_1       0.6      0.991        1.01  0.650           1.30
16 mu_1       0.7      0.985        0.976 0.393           1.45
17 mu_1       0.8      0.928        0.857 0.0849          1.87
18 mu_1       0.9      0.780        0.615 0.00303         3.29
19 mu_0       0.1      0.719        0.238 0.00000118     11.2 
20 mu_0       0.2      0.903        0.637 0.000515        7.87
21 mu_0       0.3      0.955        0.936 0.0119          3.85
22 mu_0       0.4      0.972        0.982 0.0798          2.34
23 mu_0       0.5      0.983        1.01  0.260           2.24
24 mu_0       0.6      0.990        0.991 0.523           1.51
25 mu_0       0.7      0.996        1.01  0.624           1.40
26 mu_0       0.8      0.988        0.988 0.203           1.56
27 mu_0       0.9      0.925        0.898 0.0142          2.25
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      19.0     0.000185   9.58e-15   1715.  
 2 mu         0.2      13.3     0.0142     1.52e- 9    939.  
 3 mu         0.3       7.06    0.123      1.00e- 6    324.  
 4 mu         0.4       3.28    0.557      9.98e- 5     79.3 
 5 mu         0.5       1.60    1.03       3.11e- 3     19.6 
 6 mu         0.6       1.13    1.12       2.13e- 2      3.21
 7 mu         0.7       1.19    1.11       8.04e- 4      4.45
 8 mu         0.8       1.65    0.512      6.17e- 6     12.8 
 9 mu         0.9       2.57    0.0441     1.07e- 9     55.0 
10 mu_1       0.1      18.1     0.00117    8.62e-14   1430.  
11 mu_1       0.2       8.32    0.0461     7.62e- 9    391.  
12 mu_1       0.3       4.17    0.273      3.34e- 6     90.1 
13 mu_1       0.4       2.10    0.801      2.50e- 4     43.3 
14 mu_1       0.5       1.27    1.06       6.22e- 3     12.4 
15 mu_1       0.6       1.09    1.10       6.66e- 3      2.81
16 mu_1       0.7       1.24    0.974      2.15e- 4      5.40
17 mu_1       0.8       1.73    0.404      1.45e- 6     13.6 
18 mu_1       0.9       2.66    0.0290     2.23e-10     61.1 
19 mu_0       0.1      19.1     0.0000648  0          1747.  
20 mu_0       0.2      14.5     0.00621    0          1076.  
21 mu_0       0.3       8.31    0.0690     0           425.  
22 mu_0       0.4       4.07    0.380      0           121.  
23 mu_0       0.5       1.92    0.910      0            26.8 
24 mu_0       0.6       1.18    1.07       0             6.12
25 mu_0       0.7       1.07    1.00       0             2.68
26 mu_0       0.8       1.31    0.716      0             9.57
27 mu_0       0.9       1.74    0.0684     0            17.8 
[1] "Total run time was 61.842 seconds"
