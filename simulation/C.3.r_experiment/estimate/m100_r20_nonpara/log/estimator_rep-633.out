
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1229"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  8  6  7  2 13  4  5  3  5  4 10  2  5  7 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03876 0.36337 0.61298 1.00000 7.14348 
[1] "event indicator table: "

  0   1 
712 517 
[1] "treatment indicator table: "

  0   1 
447 782 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 97.129 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.211 0.0912
 2 mu         0.1   0.2 0.340 0.139 
 3 mu         0.1   0.3 0.386 0.109 
 4 mu         0.1   0.4 0.417 0.0979
 5 mu         0.1   0.5 0.407 0.105 
 6 mu         0.2   0.1 0.277 0.0705
 7 mu         0.2   0.2 0.381 0.0955
 8 mu         0.2   0.3 0.439 0.0780
 9 mu         0.2   0.4 0.487 0.0718
10 mu         0.2   0.5 0.507 0.0791
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.826        0.255 0.0000596      5.72
 2 mu         0.2      1.01         0.732 0.00678        5.39
 3 mu         0.3      1.06         0.958 0.0731         3.64
 4 mu         0.4      1.04         1.03  0.292          2.18
 5 mu         0.5      1.01         1.01  0.567          1.55
 6 mu         0.6      0.988        0.982 0.402          1.40
 7 mu         0.7      0.986        0.979 0.605          1.36
 8 mu         0.8      1.02         1.00  0.612          1.72
 9 mu         0.9      1.05         1.02  0.187          2.34
10 mu_1       0.1      1.02         0.551 0.000301       7.50
11 mu_1       0.2      1.05         0.916 0.0175         4.36
12 mu_1       0.3      1.05         1.01  0.130          2.48
13 mu_1       0.4      1.02         1.03  0.408          1.83
14 mu_1       0.5      0.996        1.01  0.498          1.38
15 mu_1       0.6      0.983        0.979 0.396          1.37
16 mu_1       0.7      0.987        0.993 0.682          1.45
17 mu_1       0.8      1.02         1.00  0.571          1.79
18 mu_1       0.9      1.05         1.01  0.169          2.43
19 mu_0       0.1      0.805        0.214 0.0000327      5.52
20 mu_0       0.2      1.00         0.670 0.00410        5.77
21 mu_0       0.3      1.06         0.913 0.0488         4.29
22 mu_0       0.4      1.06         1.06  0.215          2.76
23 mu_0       0.5      1.02         1.03  0.537          1.87
24 mu_0       0.6      0.995        0.993 0.410          1.44
25 mu_0       0.7      0.981        0.971 0.427          1.31
26 mu_0       0.8      0.993        0.987 0.614          1.54
27 mu_0       0.9      1.05         0.999 0.351          2.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.911    0.0000631  4.84e-16     43.7 
 2 mu         0.2      1.16     0.00616    1.13e-10     30.3 
 3 mu         0.3      1.17     0.0686     1.46e- 7     14.2 
 4 mu         0.4      1.03     0.301      2.22e- 5      9.63
 5 mu         0.5      0.975    0.879      1.03e- 3      3.80
 6 mu         0.6      1.02     0.875      2.19e- 2      4.10
 7 mu         0.7      1.03     1.04       1.30e- 2      2.61
 8 mu         0.8      1.03     0.708      1.30e- 4      3.23
 9 mu         0.9      1.29     0.143      2.86e- 8     21.2 
10 mu_1       0.1      1.26     0.000505   4.59e-15     43.7 
11 mu_1       0.2      1.17     0.0245     5.34e-10     15.3 
12 mu_1       0.3      1.07     0.159      4.61e- 7     13.6 
13 mu_1       0.4      0.969    0.548      5.25e- 5      6.88
14 mu_1       0.5      0.987    0.947      1.94e- 3      3.81
15 mu_1       0.6      1.04     0.996      2.95e- 2      3.96
16 mu_1       0.7      1.04     1.09       2.22e- 3      2.51
17 mu_1       0.8      1.05     0.529      4.51e- 5      4.02
18 mu_1       0.9      1.32     0.102      8.82e- 9     23.5 
19 mu_0       0.1      0.872    0.0000128  0            43.7 
20 mu_0       0.2      1.16     0.00175    0            34.0 
21 mu_0       0.3      1.21     0.0279     0            17.5 
22 mu_0       0.4      1.07     0.189      0            11.5 
23 mu_0       0.5      0.963    0.689      0             5.42
24 mu_0       0.6      0.981    0.880      0             4.32
25 mu_0       0.7      1.00     0.957      0             3.14
26 mu_0       0.8      0.954    1.06       0             2.97
27 mu_0       0.9      0.980    0.251      0             5.67
[1] "Total run time was 101.467 seconds"
