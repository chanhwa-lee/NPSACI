
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1271"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  4  7  6  2  7 12  6  8  8  5  5 10  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03053 0.34770 0.57590 0.98574 4.00000 
[1] "event indicator table: "

  0   1 
739 532 
[1] "treatment indicator table: "

  0   1 
508 763 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 242.232 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.326 0.196
 2 mu         0.1   0.2 0.405 0.246
 3 mu         0.1   0.3 0.445 0.306
 4 mu         0.1   0.4 0.505 0.266
 5 mu         0.1   0.5 0.556 0.243
 6 mu         0.2   0.1 0.280 0.137
 7 mu         0.2   0.2 0.342 0.168
 8 mu         0.2   0.3 0.375 0.216
 9 mu         0.2   0.4 0.431 0.172
10 mu         0.2   0.5 0.480 0.141
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.843       0.104  0.000000325     25.3 
 2 mu         0.2      0.774       0.441  0.000302        10.4 
 3 mu         0.3      0.855       0.783  0.0108           5.18
 4 mu         0.4      0.954       0.936  0.0955           2.65
 5 mu         0.5      0.995       0.981  0.256            1.64
 6 mu         0.6      0.994       1.00   0.477            1.42
 7 mu         0.7      0.995       1.00   0.631            1.54
 8 mu         0.8      0.986       0.911  0.243            2.60
 9 mu         0.9      1.02        0.667  0.0179           6.68
10 mu_1       0.1      0.674       0.245  0.00000182      14.2 
11 mu_1       0.2      0.750       0.668  0.000866         3.94
12 mu_1       0.3      0.884       0.882  0.0212           2.70
13 mu_1       0.4      0.972       0.977  0.144            1.68
14 mu_1       0.5      0.996       0.980  0.299            1.60
15 mu_1       0.6      0.994       0.997  0.563            1.33
16 mu_1       0.7      0.996       0.975  0.567            1.62
17 mu_1       0.8      0.983       0.910  0.205            2.98
18 mu_1       0.9      1.03        0.624  0.0142           7.22
19 mu_0       0.1      0.861       0.0855 0.000000158     26.5 
20 mu_0       0.2      0.780       0.372  0.000161        12.7 
21 mu_0       0.3      0.843       0.720  0.00638          6.98
22 mu_0       0.4      0.942       0.913  0.0629           3.77
23 mu_0       0.5      0.995       0.983  0.214            2.11
24 mu_0       0.6      0.995       0.982  0.301            1.55
25 mu_0       0.7      0.992       1.01   0.556            1.42
26 mu_0       0.8      0.997       0.993  0.394            1.75
27 mu_0       0.9      0.936       0.901  0.0510           2.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       9.25    0.000142   2.15e-15    479.  
 2 mu         0.2       6.68    0.0114     4.44e-10    291.  
 3 mu         0.3       3.44    0.107      5.03e- 7     77.3 
 4 mu         0.4       2.04    0.444      6.55e- 5     18.4 
 5 mu         0.5       1.50    0.958      2.53e- 3     17.7 
 6 mu         0.6       1.29    1.02       4.00e- 2      8.18
 7 mu         0.7       1.34    1.03       5.45e- 4      7.80
 8 mu         0.8       1.69    0.456      1.08e- 6     10.8 
 9 mu         0.9       2.09    0.0258     2.09e-11     22.4 
10 mu_1       0.1      10.1     0.000887   1.93e-14    532.  
11 mu_1       0.2       4.58    0.0342     2.00e- 9    162.  
12 mu_1       0.3       2.39    0.245      1.51e- 6     28.6 
13 mu_1       0.4       1.67    0.702      1.47e- 4     20.4 
14 mu_1       0.5       1.37    0.943      4.55e- 3     15.7 
15 mu_1       0.6       1.28    1.08       7.40e- 3      7.82
16 mu_1       0.7       1.41    0.976      8.65e- 5      7.43
17 mu_1       0.8       1.79    0.337      1.51e- 7     12.2 
18 mu_1       0.9       2.13    0.0175     2.58e-12     23.0 
19 mu_0       0.1       9.16    0.0000494  0           473.  
20 mu_0       0.2       7.21    0.00433    0           323.  
21 mu_0       0.3       3.89    0.0512     0            98.1 
22 mu_0       0.4       2.28    0.304      0            24.4 
23 mu_0       0.5       1.63    0.906      0            19.7 
24 mu_0       0.6       1.32    0.883      0            11.4 
25 mu_0       0.7       1.20    0.892      0             8.67
26 mu_0       0.8       1.30    0.686      0             6.51
27 mu_0       0.9       1.78    0.0636     0            22.4 
[1] "Total run time was 248.202 seconds"
