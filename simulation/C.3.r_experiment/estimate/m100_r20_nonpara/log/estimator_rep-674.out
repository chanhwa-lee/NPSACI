
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1318"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  8  5  6  7  5  5  4  6  5  8  9  5  9  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02428 0.31999 0.60455 1.00000 5.39613 
[1] "event indicator table: "

  0   1 
780 538 
[1] "treatment indicator table: "

  0   1 
509 809 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 52.323 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.360 0.0707
 2 mu         0.1   0.2 0.403 0.0778
 3 mu         0.1   0.3 0.451 0.0981
 4 mu         0.1   0.4 0.456 0.106 
 5 mu         0.1   0.5 0.459 0.110 
 6 mu         0.2   0.1 0.361 0.0476
 7 mu         0.2   0.2 0.407 0.0507
 8 mu         0.2   0.3 0.464 0.0661
 9 mu         0.2   0.4 0.483 0.0707
10 mu         0.2   0.5 0.490 0.0721
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.826        0.241 0.000102      10.4 
 2 mu         0.2      0.895        0.599 0.0101         7.99
 3 mu         0.3      0.912        0.841 0.0901         2.87
 4 mu         0.4      0.961        0.949 0.279          1.54
 5 mu         0.5      0.994        1.01  0.500          1.43
 6 mu         0.6      0.994        1.00  0.693          1.27
 7 mu         0.7      0.989        0.994 0.545          1.36
 8 mu         0.8      1.01         0.972 0.349          1.95
 9 mu         0.9      1.09         0.919 0.111          4.81
10 mu_1       0.1      1.01         0.596 0.000486      13.0 
11 mu_1       0.2      0.922        0.803 0.0245         5.01
12 mu_1       0.3      0.940        0.933 0.148          1.70
13 mu_1       0.4      0.984        0.995 0.356          1.47
14 mu_1       0.5      1.00         1.00  0.544          1.43
15 mu_1       0.6      0.993        0.999 0.638          1.27
16 mu_1       0.7      0.990        0.977 0.445          1.38
17 mu_1       0.8      1.02         0.985 0.302          2.15
18 mu_1       0.9      1.10         0.877 0.0885         5.16
19 mu_0       0.1      0.806        0.204 0.0000595     10.1 
20 mu_0       0.2      0.888        0.535 0.00657        8.74
21 mu_0       0.3      0.900        0.776 0.0655         3.53
22 mu_0       0.4      0.946        0.926 0.227          1.74
23 mu_0       0.5      0.987        1.00  0.434          1.44
24 mu_0       0.6      0.996        0.996 0.629          1.39
25 mu_0       0.7      0.988        0.994 0.575          1.30
26 mu_0       0.8      0.993        0.963 0.538          1.48
27 mu_0       0.9      1.01         1.01  0.283          2.32
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.33     0.000122   4.57e-18     42.6 
 2 mu         0.2      2.38     0.0111     4.80e-12    103.  
 3 mu         0.3      2.09     0.0890     1.59e- 8     61.9 
 4 mu         0.4      1.46     0.375      5.03e- 6     16.6 
 5 mu         0.5      1.09     0.795      4.36e- 4      7.04
 6 mu         0.6      1.03     1.09       1.67e- 2      2.25
 7 mu         0.7      1.12     1.14       2.38e- 3      2.88
 8 mu         0.8      1.23     0.795      6.17e- 6      7.65
 9 mu         0.9      1.78     0.0777     1.51e-10     55.6 
10 mu_1       0.1      2.35     0.000936   4.57e-17     85.2 
11 mu_1       0.2      2.47     0.0378     2.40e-11    103.  
12 mu_1       0.3      1.77     0.232      5.32e- 8     41.2 
13 mu_1       0.4      1.24     0.578      1.26e- 5     13.7 
14 mu_1       0.5      1.03     0.920      8.72e- 4      4.70
15 mu_1       0.6      1.05     1.11       1.45e- 2      1.98
16 mu_1       0.7      1.15     1.16       6.79e- 4      3.14
17 mu_1       0.8      1.26     0.658      1.54e- 6      9.56
18 mu_1       0.9      1.86     0.0597     3.35e-11     61.8 
19 mu_0       0.1      1.22     0.0000444  0            37.9 
20 mu_0       0.2      2.35     0.00494    0           103.  
21 mu_0       0.3      2.22     0.0424     0            70.7 
22 mu_0       0.4      1.61     0.198      0            22.1 
23 mu_0       0.5      1.15     0.545      0             9.39
24 mu_0       0.6      0.986    0.970      0             3.18
25 mu_0       0.7      1.03     1.12       0             2.29
26 mu_0       0.8      1.12     1.01       0             4.54
27 mu_0       0.9      1.07     0.182      0             7.14
[1] "Total run time was 55.414 seconds"
