
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1156"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3 14  8  9  6  4  7  5  8 10  5  4  6  2  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02893 0.27347 0.56076 0.93998 4.65740 
[1] "event indicator table: "

  0   1 
687 469 
[1] "treatment indicator table: "

  0   1 
453 703 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 569
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 69.15 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.650 0.444
 2 mu         0.1   0.2 0.804 0.518
 3 mu         0.1   0.3 0.891 0.613
 4 mu         0.1   0.4 0.979 0.657
 5 mu         0.1   0.5 1.03  0.674
 6 mu         0.2   0.1 0.562 0.305
 7 mu         0.2   0.2 0.693 0.354
 8 mu         0.2   0.3 0.782 0.419
 9 mu         0.2   0.4 0.840 0.451
10 mu         0.2   0.5 0.871 0.463
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.92         0.322 0.000000424    118.  
 2 mu         0.2      1.68         0.691 0.000313        80.6 
 3 mu         0.3      1.22         0.975 0.00909         25.0 
 4 mu         0.4      1.06         1.01  0.0689           5.24
 5 mu         0.5      1.04         1.04  0.256            1.91
 6 mu         0.6      1.03         1.02  0.612            1.41
 7 mu         0.7      0.983        0.995 0.287            1.47
 8 mu         0.8      0.878        0.893 0.0606           1.46
 9 mu         0.9      0.741        0.665 0.00225          3.74
10 mu_1       0.1      2.20         0.654 0.00000233     138.  
11 mu_1       0.2      1.44         0.948 0.000870        47.6 
12 mu_1       0.3      1.11         1.02  0.0172          10.4 
13 mu_1       0.4      1.04         1.01  0.102            2.36
14 mu_1       0.5      1.04         1.04  0.325            1.76
15 mu_1       0.6      1.02         1.02  0.568            1.45
16 mu_1       0.7      0.962        0.991 0.230            1.50
17 mu_1       0.8      0.854        0.870 0.0454           1.57
18 mu_1       0.9      0.726        0.623 0.00157          4.12
19 mu_0       0.1      1.89         0.277 0.000000211    115.  
20 mu_0       0.2      1.74         0.634 0.000174        88.8 
21 mu_0       0.3      1.27         0.958 0.00562         31.3 
22 mu_0       0.4      1.07         1.02  0.0468           7.23
23 mu_0       0.5      1.04         1.02  0.188            2.06
24 mu_0       0.6      1.04         1.05  0.488            1.56
25 mu_0       0.7      1.03         1.03  0.419            1.48
26 mu_0       0.8      0.976        1.01  0.121            1.55
27 mu_0       0.9      0.879        0.942 0.00837          1.96
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.77     0.000411  1.25e-13    284.  
 2 mu         0.2       4.89     0.0243    1.15e- 8    350.  
 3 mu         0.3       3.45     0.195     7.62e- 6    207.  
 4 mu         0.4       2.06     0.597     4.55e- 4     78.8 
 5 mu         0.5       1.32     0.915     8.62e- 3     19.9 
 6 mu         0.6       1.08     0.882     3.20e- 3      4.17
 7 mu         0.7       1.32     0.972     5.81e- 5     14.7 
 8 mu         0.8       2.12     0.677     1.73e- 7     42.1 
 9 mu         0.9       2.69     0.0899    6.70e-12    107.  
10 mu_1       0.1       6.43     0.00273   1.07e-12    473.  
11 mu_1       0.2       4.52     0.0723    4.91e- 8    292.  
12 mu_1       0.3       2.52     0.367     2.16e- 5    115.  
13 mu_1       0.4       1.51     0.832     1.06e- 3     32.8 
14 mu_1       0.5       1.10     0.834     1.48e- 2      6.98
15 mu_1       0.6       1.05     0.983     6.27e- 4      4.43
16 mu_1       0.7       1.41     0.981     9.77e- 6     17.8 
17 mu_1       0.8       2.23     0.532     2.55e- 8     44.8 
18 mu_1       0.9       2.69     0.0618    8.75e-13    112.  
19 mu_0       0.1       3.47     0.000164  0           263.  
20 mu_0       0.2       4.98     0.0113    0           364.  
21 mu_0       0.3       3.85     0.105     0           247.  
22 mu_0       0.4       2.42     0.352     0           109.  
23 mu_0       0.5       1.54     0.730     0            33.1 
24 mu_0       0.6       1.13     0.906     0             6.64
25 mu_0       0.7       1.12     0.822     0             7.34
26 mu_0       0.8       1.65     0.876     0            31.6 
27 mu_0       0.9       2.66     0.205     0            63.0 
[1] "Total run time was 73.573 seconds"
