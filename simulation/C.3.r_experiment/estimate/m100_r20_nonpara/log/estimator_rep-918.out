
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1262"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8 10  4  1  8  2 13  6  6  7  5  8  7  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04649 0.37201 0.63304 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
716 546 
[1] "treatment indicator table: "

  0   1 
460 802 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 173.232 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.567 0.270
 2 mu         0.1   0.2 0.748 0.341
 3 mu         0.1   0.3 0.905 0.385
 4 mu         0.1   0.4 0.954 0.417
 5 mu         0.1   0.5 1.02  0.414
 6 mu         0.2   0.1 0.406 0.141
 7 mu         0.2   0.2 0.536 0.174
 8 mu         0.2   0.3 0.650 0.194
 9 mu         0.2   0.4 0.701 0.217
10 mu         0.2   0.5 0.755 0.208
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.71         0.315 0.00000154      61.1 
 2 mu         0.2      1.38         0.850 0.000630        35.1 
 3 mu         0.3      1.17         0.966 0.0134          13.7 
 4 mu         0.4      1.08         1.03  0.0838           4.51
 5 mu         0.5      1.04         1.02  0.275            2.02
 6 mu         0.6      1.01         1.00  0.617            1.75
 7 mu         0.7      0.988        0.989 0.540            1.47
 8 mu         0.8      1.01         0.986 0.383            2.61
 9 mu         0.9      1.17         1.02  0.123           12.1 
10 mu_1       0.1      1.36         0.576 0.00000857      52.1 
11 mu_1       0.2      1.14         0.892 0.00176         16.4 
12 mu_1       0.3      1.08         1.03  0.0255           5.21
13 mu_1       0.4      1.05         1.01  0.124            2.34
14 mu_1       0.5      1.03         1.03  0.350            2.10
15 mu_1       0.6      1.00         1.00  0.705            1.61
16 mu_1       0.7      0.989        0.982 0.486            1.48
17 mu_1       0.8      1.02         0.986 0.322            3.03
18 mu_1       0.9      1.19         1.03  0.102           13.3 
19 mu_0       0.1      1.75         0.261 0.000000760     62.1 
20 mu_0       0.2      1.44         0.757 0.000347        39.8 
21 mu_0       0.3      1.22         0.956 0.00826         17.3 
22 mu_0       0.4      1.10         1.01  0.0569           6.17
23 mu_0       0.5      1.05         1.06  0.201            2.28
24 mu_0       0.6      1.02         1.02  0.483            1.97
25 mu_0       0.7      0.985        0.973 0.625            1.47
26 mu_0       0.8      0.965        0.963 0.469            1.51
27 mu_0       0.9      0.984        0.944 0.312            2.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.01     0.0000420  5.52e-18    161.  
 2 mu         0.2      4.49     0.00774    2.90e-12    314.  
 3 mu         0.3      4.22     0.0680     6.42e- 9    214.  
 4 mu         0.4      2.78     0.287      1.52e- 6    100.  
 5 mu         0.5      1.59     0.714      1.05e- 4     51.6 
 6 mu         0.6      1.08     0.906      3.37e- 3     13.2 
 7 mu         0.7      1.03     1.08       5.47e- 3      2.83
 8 mu         0.8      1.20     0.808      3.73e- 5      6.11
 9 mu         0.9      1.51     0.155      3.64e- 9     28.3 
10 mu_1       0.1      4.10     0.000333   5.52e-17    323.  
11 mu_1       0.2      5.03     0.0241     1.45e-11    314.  
12 mu_1       0.3      3.70     0.154      2.14e- 8    142.  
13 mu_1       0.4      2.24     0.481      3.80e- 6     88.7 
14 mu_1       0.5      1.35     0.814      2.11e- 4     36.4 
15 mu_1       0.6      1.04     1.02       5.61e- 3      7.78
16 mu_1       0.7      1.06     1.04       1.40e- 3      3.04
17 mu_1       0.8      1.23     0.684      1.04e- 5      7.64
18 mu_1       0.9      1.54     0.108      8.99e-10     31.4 
19 mu_0       0.1      1.78     0.0000170  0           143.  
20 mu_0       0.2      4.36     0.00164    0           314.  
21 mu_0       0.3      4.45     0.0252     0           244.  
22 mu_0       0.4      3.13     0.135      0           108.  
23 mu_0       0.5      1.83     0.476      0            66.8 
24 mu_0       0.6      1.14     0.707      0            21.4 
25 mu_0       0.7      0.966    0.890      0             3.20
26 mu_0       0.8      1.05     0.961      0             3.46
27 mu_0       0.9      1.22     0.286      0             6.16
[1] "Total run time was 181.675 seconds"
