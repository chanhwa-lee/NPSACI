
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  9  6  4  6  9  7 11  5  4  7  6  7  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03005 0.34277 0.62404 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
693 513 
[1] "treatment indicator table: "

  0   1 
439 767 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.954 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 1.32  0.894
 2 mu         0.1   0.2 1.57  1.03 
 3 mu         0.1   0.3 1.72  1.15 
 4 mu         0.1   0.4 1.93  1.28 
 5 mu         0.1   0.5 2.07  1.38 
 6 mu         0.2   0.1 0.875 0.404
 7 mu         0.2   0.2 1.02  0.467
 8 mu         0.2   0.3 1.15  0.518
 9 mu         0.2   0.4 1.26  0.580
10 mu         0.2   0.5 1.37  0.625
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      3.56         0.140 0.00000196     228.  
 2 mu         0.2      2.36         0.466 0.000569        87.7 
 3 mu         0.3      1.42         0.849 0.0115          29.8 
 4 mu         0.4      1.08         0.980 0.0743           7.61
 5 mu         0.5      1.01         0.997 0.252            1.94
 6 mu         0.6      1.00         0.993 0.583            1.65
 7 mu         0.7      0.992        0.986 0.558            1.57
 8 mu         0.8      0.986        0.963 0.186            2.77
 9 mu         0.9      0.978        0.938 0.0158           4.27
10 mu_1       0.1      3.05         0.353 0.0000113      152.  
11 mu_1       0.2      1.73         0.733 0.00168         54.1 
12 mu_1       0.3      1.17         0.951 0.0231          16.8 
13 mu_1       0.4      1.03         1.01  0.116            3.73
14 mu_1       0.5      1.01         0.989 0.331            1.75
15 mu_1       0.6      0.999        1.00  0.641            1.61
16 mu_1       0.7      0.992        0.979 0.486            1.75
17 mu_1       0.8      0.988        0.973 0.154            2.95
18 mu_1       0.9      0.977        0.937 0.0123           4.41
19 mu_0       0.1      3.61         0.106 0.000000922    236.  
20 mu_0       0.2      2.52         0.401 0.000292       102.  
21 mu_0       0.3      1.53         0.798 0.00650         35.3 
22 mu_0       0.4      1.11         0.959 0.0466          10.2 
23 mu_0       0.5      1.02         0.990 0.174            2.46
24 mu_0       0.6      1.00         0.991 0.428            1.70
25 mu_0       0.7      0.991        0.983 0.627            1.54
26 mu_0       0.8      0.981        0.971 0.313            2.02
27 mu_0       0.9      0.989        0.950 0.0472           3.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.95    0.0000545  1.94e-18    375.  
 2 mu         0.2       7.63    0.00565    1.02e-12    330.  
 3 mu         0.3       4.41    0.0752     2.25e- 9    172.  
 4 mu         0.4       2.07    0.335      5.32e- 7     47.0 
 5 mu         0.5       1.22    0.802      3.69e- 5      7.15
 6 mu         0.6       1.12    0.999      1.18e- 3      3.25
 7 mu         0.7       1.40    1.22       2.45e- 5      5.60
 8 mu         0.8       2.27    0.927      8.39e- 8     19.7 
 9 mu         0.9       3.88    0.202      5.12e-12     81.1 
10 mu_1       0.1       8.96    0.000286   0           378.  
11 mu_1       0.2       5.99    0.0185     0           291.  
12 mu_1       0.3       2.89    0.154      0           101.  
13 mu_1       0.4       1.49    0.515      0            20.7 
14 mu_1       0.5       1.13    0.968      0             3.83
15 mu_1       0.6       1.16    1.13       0             3.44
16 mu_1       0.7       1.51    1.02       0             7.06
17 mu_1       0.8       2.47    0.763      0            24.7 
18 mu_1       0.9       4.03    0.144      0            90.1 
19 mu_0       0.1       7.84    0.0000166  0           379.  
20 mu_0       0.2       8.04    0.00265    0           339.  
21 mu_0       0.3       5.06    0.0374     0           202.  
22 mu_0       0.4       2.46    0.196      0            64.5 
23 mu_0       0.5       1.32    0.556      0            11.8 
24 mu_0       0.6       1.07    1.03       0             4.06
25 mu_0       0.7       1.13    1.12       0             3.66
26 mu_0       0.8       1.48    1.11       0            10.8 
27 mu_0       0.9       2.48    0.487      0            33.5 
[1] "Total run time was 72.161 seconds"
