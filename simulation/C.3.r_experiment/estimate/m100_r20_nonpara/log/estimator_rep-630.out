
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1187"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7 12  5 15  4  4  3  6  5  4  8  6  7  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01519 0.32595 0.60240 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
715 472 
[1] "treatment indicator table: "

  0   1 
459 728 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 97.53 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.236 0.0657
 2 mu         0.1   0.2 0.242 0.0777
 3 mu         0.1   0.3 0.321 0.0574
 4 mu         0.1   0.4 0.321 0.0584
 5 mu         0.1   0.5 0.322 0.0589
 6 mu         0.2   0.1 0.285 0.0619
 7 mu         0.2   0.2 0.302 0.0678
 8 mu         0.2   0.3 0.368 0.0483
 9 mu         0.2   0.4 0.370 0.0470
10 mu         0.2   0.5 0.374 0.0442
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.565        0.153 0.0000271      5.13
 2 mu         0.2      0.676        0.430 0.00269        3.20
 3 mu         0.3      0.780        0.752 0.0256         2.31
 4 mu         0.4      0.872        0.893 0.105          1.65
 5 mu         0.5      0.948        0.964 0.280          1.58
 6 mu         0.6      1.00         1.01  0.578          1.63
 7 mu         0.7      1.03         1.02  0.589          1.71
 8 mu         0.8      1.01         1.02  0.357          2.56
 9 mu         0.9      0.963        0.892 0.0388         4.62
10 mu_1       0.1      0.681        0.393 0.000126       4.88
11 mu_1       0.2      0.775        0.690 0.00754        2.47
12 mu_1       0.3      0.846        0.856 0.0495         2.13
13 mu_1       0.4      0.916        0.952 0.161          1.71
14 mu_1       0.5      0.976        1.00  0.369          1.50
15 mu_1       0.6      1.02         1.02  0.601          1.68
16 mu_1       0.7      1.03         1.03  0.553          1.81
17 mu_1       0.8      1.01         0.998 0.310          2.99
18 mu_1       0.9      0.957        0.871 0.0316         5.01
19 mu_0       0.1      0.552        0.121 0.0000156      5.62
20 mu_0       0.2      0.652        0.356 0.00148        3.41
21 mu_0       0.3      0.751        0.668 0.0153         2.39
22 mu_0       0.4      0.842        0.861 0.0680         1.83
23 mu_0       0.5      0.921        0.922 0.190          1.66
24 mu_0       0.6      0.982        0.993 0.409          1.56
25 mu_0       0.7      1.02         1.02  0.597          1.69
26 mu_0       0.8      1.03         1.03  0.492          2.02
27 mu_0       0.9      1.02         1.01  0.103          2.31
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      21.4     0.000319   1.75e-14   1397.  
 2 mu         0.2      32.7     0.0116     2.04e- 9   1910.  
 3 mu         0.3      21.5     0.106      1.76e- 6    870.  
 4 mu         0.4       9.47    0.380      2.00e- 4    394.  
 5 mu         0.5       3.50    0.879      7.41e- 3    108.  
 6 mu         0.6       1.61    1.18       1.17e- 1     15.4 
 7 mu         0.7       1.29    1.02       2.74e- 2      4.90
 8 mu         0.8       1.30    0.692      1.14e- 4      8.74
 9 mu         0.9       1.50    0.111      4.95e- 9     32.4 
10 mu_1       0.1      35.5     0.00200    1.65e-13   2329.  
11 mu_1       0.2      30.5     0.0426     9.61e- 9   1592.  
12 mu_1       0.3      15.1     0.234      5.53e- 6    661.  
13 mu_1       0.4       5.93    0.609      4.73e- 4    246.  
14 mu_1       0.5       2.34    1.03       1.40e- 2     54.0 
15 mu_1       0.6       1.39    1.17       4.58e- 2      6.41
16 mu_1       0.7       1.29    1.11       7.95e- 3      5.44
17 mu_1       0.8       1.32    0.557      2.37e- 5     10.3 
18 mu_1       0.9       1.54    0.0752     9.16e-10     34.0 
19 mu_0       0.1      19.9     0.0000851  0          1294.  
20 mu_0       0.2      33.2     0.00362    0          1990.  
21 mu_0       0.3      24.2     0.0392     0          1036.  
22 mu_0       0.4      11.8     0.227      0           493.  
23 mu_0       0.5       4.66    0.705      0           162.  
24 mu_0       0.6       1.93    1.03       0            28.8 
25 mu_0       0.7       1.29    1.10       0             4.58
26 mu_0       0.8       1.21    0.919      0             7.00
27 mu_0       0.9       1.13    0.209      0            18.0 
[1] "Total run time was 102.802 seconds"
