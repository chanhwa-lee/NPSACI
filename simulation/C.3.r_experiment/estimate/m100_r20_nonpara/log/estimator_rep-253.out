
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1260"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  7  6 10  5  9  7  3  3  4  5  8 13  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04524 0.44014 0.67094 1.00000 4.33979 
[1] "event indicator table: "

  0   1 
757 503 
[1] "treatment indicator table: "

  0   1 
405 855 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 676
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 272.375 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.772 0.241
 2 mu         0.1   0.2 0.808 0.235
 3 mu         0.1   0.3 0.823 0.234
 4 mu         0.1   0.4 0.849 0.236
 5 mu         0.1   0.5 0.867 0.239
 6 mu         0.2   0.1 0.681 0.159
 7 mu         0.2   0.2 0.736 0.155
 8 mu         0.2   0.3 0.757 0.153
 9 mu         0.2   0.4 0.797 0.155
10 mu         0.2   0.5 0.826 0.156
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.29        0.0862 0.00000147      30.3 
 2 mu         0.2      1.33        0.562  0.000614        16.6 
 3 mu         0.3      1.17        0.917  0.0126           5.88
 4 mu         0.4      1.06        1.02   0.0829           2.28
 5 mu         0.5      0.996       1.04   0.287            1.67
 6 mu         0.6      0.983       0.972  0.599            1.44
 7 mu         0.7      1.01        0.995  0.756            1.52
 8 mu         0.8      1.02        0.999  0.536            1.70
 9 mu         0.9      0.982       0.967  0.297            1.82
10 mu_1       0.1      1.50        0.258  0.00000817      25.3 
11 mu_1       0.2      1.22        0.775  0.00173          7.29
12 mu_1       0.3      1.09        0.989  0.0255           3.24
13 mu_1       0.4      1.02        1.03   0.130            2.16
14 mu_1       0.5      0.983       0.988  0.364            1.49
15 mu_1       0.6      0.985       0.974  0.664            1.41
16 mu_1       0.7      1.01        0.991  0.756            1.57
17 mu_1       0.8      1.02        0.986  0.508            1.71
18 mu_1       0.9      0.978       0.953  0.252            1.87
19 mu_0       0.1      1.27        0.0671 0.000000722     30.9 
20 mu_0       0.2      1.35        0.468  0.000324        19.0 
21 mu_0       0.3      1.21        0.844  0.00713          7.61
22 mu_0       0.4      1.08        1.02   0.0515           2.50
23 mu_0       0.5      1.01        1.03   0.197            1.85
24 mu_0       0.6      0.980       0.985  0.492            1.48
25 mu_0       0.7      0.993       0.960  0.650            1.42
26 mu_0       0.8      1.02        0.984  0.651            1.67
27 mu_0       0.9      1.02        1.01   0.388            1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.519   0.00000863  5.19e-17     25.7 
 2 mu         0.2      0.767   0.00144     1.36e-11     28.1 
 3 mu         0.3      0.920   0.0252      2.01e- 8     16.6 
 4 mu         0.4      0.934   0.142       3.56e- 6     10.9 
 5 mu         0.5      0.911   0.560       1.98e- 4      5.58
 6 mu         0.6      0.986   0.937       5.27e- 3      2.94
 7 mu         0.7      1.06    1.02        1.06e- 2      3.32
 8 mu         0.8      1.01    1.04        1.06e- 4      2.78
 9 mu         0.9      1.02    0.210       2.34e- 8      7.78
10 mu_1       0.1      0.778   0.0000628   5.19e-16     38.1 
11 mu_1       0.2      0.846   0.00557     6.80e-11     23.4 
12 mu_1       0.3      0.952   0.0571      6.70e- 8     12.4 
13 mu_1       0.4      0.939   0.274       8.91e- 6      9.59
14 mu_1       0.5      0.940   0.728       3.96e- 4      3.94
15 mu_1       0.6      1.03    0.983       8.78e- 3      3.26
16 mu_1       0.7      1.08    1.02        4.21e- 3      3.16
17 mu_1       0.8      1.01    0.933       3.69e- 5      3.12
18 mu_1       0.9      1.03    0.153       7.22e- 9      8.65
19 mu_0       0.1      0.490   0.00000115  0            25.4 
20 mu_0       0.2      0.748   0.000372    0            29.3 
21 mu_0       0.3      0.906   0.00886     0            19.8 
22 mu_0       0.4      0.931   0.0707      0            11.7 
23 mu_0       0.5      0.881   0.312       0             7.22
24 mu_0       0.6      0.920   0.741       0             2.81
25 mu_0       0.7      1.02    0.958       0             3.69
26 mu_0       0.8      1.00    0.937       0             2.53
27 mu_0       0.9      0.882   0.353       0             4.01
[1] "Total run time was 277.002 seconds"
