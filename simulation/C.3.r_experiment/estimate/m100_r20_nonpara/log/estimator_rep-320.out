
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1148"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7 10 12  6  5 11  2  3  7  8  3  9  5  2  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05122 0.38329 0.61339 1.00000 5.81972 
[1] "event indicator table: "

  0   1 
655 493 
[1] "treatment indicator table: "

  0   1 
425 723 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 538
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.785 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.391 0.154 
 2 mu         0.1   0.2 0.414 0.147 
 3 mu         0.1   0.3 0.471 0.174 
 4 mu         0.1   0.4 0.457 0.148 
 5 mu         0.1   0.5 0.506 0.148 
 6 mu         0.2   0.1 0.352 0.0882
 7 mu         0.2   0.2 0.400 0.0994
 8 mu         0.2   0.3 0.447 0.115 
 9 mu         0.2   0.4 0.461 0.100 
10 mu         0.2   0.5 0.547 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.558       0.0764 0.00000105       8.64
 2 mu         0.2      0.826       0.361  0.000295        11.9 
 3 mu         0.3      0.914       0.640  0.00600          5.82
 4 mu         0.4      0.945       0.877  0.0411           3.18
 5 mu         0.5      0.970       0.974  0.154            1.71
 6 mu         0.6      0.988       1.01   0.390            1.26
 7 mu         0.7      0.990       1.00   0.674            1.37
 8 mu         0.8      0.984       0.985  0.292            2.13
 9 mu         0.9      1.06        0.870  0.0352           6.63
10 mu_1       0.1      0.816       0.186  0.00000638      14.4 
11 mu_1       0.2      0.915       0.583  0.000906        10.0 
12 mu_1       0.3      0.927       0.777  0.0126           4.77
13 mu_1       0.4      0.951       0.950  0.0669           2.36
14 mu_1       0.5      0.980       0.986  0.210            1.37
15 mu_1       0.6      0.997       0.998  0.470            1.33
16 mu_1       0.7      0.994       1.00   0.600            1.52
17 mu_1       0.8      0.991       0.973  0.249            2.41
18 mu_1       0.9      1.07        0.839  0.0282           6.97
19 mu_0       0.1      0.529       0.0574 0.000000463      8.00
20 mu_0       0.2      0.804       0.293  0.000143        12.4 
21 mu_0       0.3      0.909       0.557  0.00318          6.77
22 mu_0       0.4      0.940       0.828  0.0238           3.72
23 mu_0       0.5      0.960       0.935  0.0973           2.20
24 mu_0       0.6      0.974       1.00   0.270            1.34
25 mu_0       0.7      0.979       0.995  0.566            1.41
26 mu_0       0.8      0.960       0.974  0.464            1.41
27 mu_0       0.9      0.919       0.896  0.0982           3.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07     0.000115   1.47e-13     36.4 
 2 mu         0.2      2.95     0.00774    1.52e- 8    110.  
 3 mu         0.3      3.36     0.0932     1.15e- 5    147.  
 4 mu         0.4      2.49     0.382      9.10e- 4     99.5 
 5 mu         0.5      1.63     0.801      1.51e- 2     39.2 
 6 mu         0.6      1.25     1.03       1.24e- 1      8.73
 7 mu         0.7      1.31     1.08       4.94e- 3      4.29
 8 mu         0.8      2.15     0.586      1.92e- 5     29.8 
 9 mu         0.9      5.15     0.0827     9.40e-10    175.  
10 mu_1       0.1      2.36     0.000796   1.31e-12     64.0 
11 mu_1       0.2      3.77     0.0257     6.79e- 8    158.  
12 mu_1       0.3      3.17     0.194      3.42e- 5    140.  
13 mu_1       0.4      2.05     0.604      2.09e- 3     71.1 
14 mu_1       0.5      1.39     1.01       2.64e- 2     22.4 
15 mu_1       0.6      1.20     1.12       7.00e- 2      4.56
16 mu_1       0.7      1.41     0.988      1.48e- 3      6.13
17 mu_1       0.8      2.42     0.462      5.06e- 6     37.3 
18 mu_1       0.9      5.58     0.0579     2.20e-10    194.  
19 mu_0       0.1      0.928    0.0000331  0            34.6 
20 mu_0       0.2      2.75     0.00312    0            98.6 
21 mu_0       0.3      3.44     0.0432     0           150.  
22 mu_0       0.4      2.78     0.238      0           118.  
23 mu_0       0.5      1.87     0.583      0            56.0 
24 mu_0       0.6      1.32     0.934      0            15.6 
25 mu_0       0.7      1.09     1.11       0             3.84
26 mu_0       0.8      1.08     0.704      0             8.58
27 mu_0       0.9      1.35     0.121      0            31.8 
[1] "Total run time was 69.181 seconds"
