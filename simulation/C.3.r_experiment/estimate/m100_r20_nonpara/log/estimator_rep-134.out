
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1286"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  6  5  5  6  9  4  5  9  9  5  4  6  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03614 0.34819 0.61630 1.00000 6.84505 
[1] "event indicator table: "

  0   1 
763 523 
[1] "treatment indicator table: "

  0   1 
461 825 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 701
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.481 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.359 0.119 
 2 mu         0.1   0.2 0.414 0.139 
 3 mu         0.1   0.3 0.425 0.152 
 4 mu         0.1   0.4 0.469 0.164 
 5 mu         0.1   0.5 0.484 0.171 
 6 mu         0.2   0.1 0.329 0.0639
 7 mu         0.2   0.2 0.386 0.0712
 8 mu         0.2   0.3 0.407 0.0835
 9 mu         0.2   0.4 0.463 0.0809
10 mu         0.2   0.5 0.481 0.0888
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.892        0.141 0.000000120      28.4 
 2 mu         0.2      0.924        0.556 0.000206          7.86
 3 mu         0.3      0.984        0.877 0.0102            3.06
 4 mu         0.4      1.01         0.974 0.108             1.94
 5 mu         0.5      1.03         1.03  0.461             1.69
 6 mu         0.6      1.02         1.02  0.694             1.37
 7 mu         0.7      0.995        0.987 0.598             1.42
 8 mu         0.8      0.956        0.942 0.494             1.77
 9 mu         0.9      0.913        0.863 0.111             2.60
10 mu_1       0.1      0.854        0.332 0.000000721      15.8 
11 mu_1       0.2      0.947        0.779 0.000624          4.35
12 mu_1       0.3      1.00         0.965 0.0207            2.68
13 mu_1       0.4      1.02         0.994 0.168             1.80
14 mu_1       0.5      1.03         1.02  0.586             1.62
15 mu_1       0.6      1.02         1.02  0.647             1.35
16 mu_1       0.7      0.989        0.976 0.615             1.45
17 mu_1       0.8      0.950        0.939 0.438             1.91
18 mu_1       0.9      0.911        0.846 0.0925            2.74
19 mu_0       0.1      0.897        0.116 0.0000000527     29.8 
20 mu_0       0.2      0.919        0.472 0.000101          9.20
21 mu_0       0.3      0.977        0.825 0.00562           3.44
22 mu_0       0.4      1.01         0.950 0.0683            2.30
23 mu_0       0.5      1.02         1.02  0.335             1.76
24 mu_0       0.6      1.02         1.01  0.637             1.45
25 mu_0       0.7      1.01         1.00  0.560             1.37
26 mu_0       0.8      0.983        0.988 0.561             1.52
27 mu_0       0.9      0.938        0.926 0.223             1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.610   0.0000237   5.13e-15     15.4 
 2 mu         0.2      1.60    0.00410     1.06e- 9     42.2 
 3 mu         0.3      1.69    0.0603      1.20e- 6     28.9 
 4 mu         0.4      1.27    0.276       1.17e- 4     14.2 
 5 mu         0.5      1.03    0.750       2.67e- 3      4.04
 6 mu         0.6      1.01    1.00        3.42e- 2      3.72
 7 mu         0.7      1.05    1.12        2.58e- 3      2.71
 8 mu         0.8      1.14    0.742       1.01e- 5      4.73
 9 mu         0.9      1.23    0.151       4.92e-10     13.6 
10 mu_1       0.1      1.31    0.000151    4.62e-14     32.5 
11 mu_1       0.2      1.94    0.0128      4.78e- 9     44.5 
12 mu_1       0.3      1.59    0.153       3.61e- 6     23.1 
13 mu_1       0.4      1.15    0.500       2.93e- 4      9.83
14 mu_1       0.5      1.01    0.954       5.33e- 3      3.38
15 mu_1       0.6      1.03    1.00        1.79e- 2      3.79
16 mu_1       0.7      1.07    1.10        7.77e- 4      2.40
17 mu_1       0.8      1.16    0.584       2.65e- 6      5.91
18 mu_1       0.9      1.23    0.100       1.15e-10     15.2 
19 mu_0       0.1      0.532   0.00000678  0            13.7 
20 mu_0       0.2      1.52    0.00178     0            41.7 
21 mu_0       0.3      1.74    0.0271      0            32.5 
22 mu_0       0.4      1.35    0.159       0            17.2 
23 mu_0       0.5      1.04    0.557       0             5.83
24 mu_0       0.6      0.986   0.831       0             3.62
25 mu_0       0.7      1.01    0.957       0             3.51
26 mu_0       0.8      1.06    1.09        0             3.02
27 mu_0       0.9      1.20    0.296       0             9.51
[1] "Total run time was 70.122 seconds"
