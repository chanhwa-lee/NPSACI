
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1228"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  2  5  8  7  7  8  7  6  6  6  5  3  7  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06868 0.38470 0.65074 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
744 484 
[1] "treatment indicator table: "

  0   1 
407 821 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.116 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.482 0.147 
 2 mu         0.1   0.2 0.517 0.166 
 3 mu         0.1   0.3 0.588 0.181 
 4 mu         0.1   0.4 0.631 0.192 
 5 mu         0.1   0.5 0.639 0.199 
 6 mu         0.2   0.1 0.389 0.0825
 7 mu         0.2   0.2 0.420 0.0771
 8 mu         0.2   0.3 0.491 0.0875
 9 mu         0.2   0.4 0.531 0.0892
10 mu         0.2   0.5 0.538 0.0905
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.998       0.107  0.00000900     29.0 
 2 mu         0.2      0.932       0.454  0.00361         9.38
 3 mu         0.3      0.980       0.788  0.0626          5.97
 4 mu         0.4      1.03        0.920  0.245           5.80
 5 mu         0.5      1.05        1.01   0.435           3.50
 6 mu         0.6      1.03        1.01   0.622           1.89
 7 mu         0.7      0.998       0.981  0.649           1.38
 8 mu         0.8      0.990       0.957  0.508           2.93
 9 mu         0.9      1.08        0.972  0.120           7.43
10 mu_1       0.1      0.738       0.289  0.0000478       5.29
11 mu_1       0.2      0.910       0.684  0.00970         4.87
12 mu_1       0.3      0.996       0.859  0.104           6.75
13 mu_1       0.4      1.04        0.964  0.323           5.11
14 mu_1       0.5      1.05        1.02   0.482           2.83
15 mu_1       0.6      1.02        1.01   0.644           1.67
16 mu_1       0.7      0.992       0.967  0.661           1.58
17 mu_1       0.8      0.992       0.952  0.451           3.28
18 mu_1       0.9      1.09        0.957  0.101           7.97
19 mu_0       0.1      1.03        0.0780 0.00000469     31.8 
20 mu_0       0.2      0.938       0.378  0.00208        10.8 
21 mu_0       0.3      0.972       0.730  0.0447          5.63
22 mu_0       0.4      1.02        0.921  0.175           6.27
23 mu_0       0.5      1.05        1.00   0.388           4.29
24 mu_0       0.6      1.04        1.01   0.534           2.21
25 mu_0       0.7      1.01        1.01   0.622           1.44
26 mu_0       0.8      0.981       0.976  0.591           1.55
27 mu_0       0.9      0.987       0.951  0.287           2.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.734   0.0000258   2.12e-18     25.5 
 2 mu         0.2      1.30    0.00234     2.22e-12     24.8 
 3 mu         0.3      1.50    0.0372      5.42e- 9     47.8 
 4 mu         0.4      1.39    0.214       1.28e- 6     43.2 
 5 mu         0.5      1.21    0.595       8.89e- 5     21.3 
 6 mu         0.6      1.14    1.14        2.84e- 3      5.68
 7 mu         0.7      1.15    1.06        2.35e- 3      3.45
 8 mu         0.8      1.14    0.916       1.88e- 5      5.72
 9 mu         0.9      1.45    0.189       1.84e- 9     25.8 
10 mu_1       0.1      1.25    0.000165    2.12e-17     36.4 
11 mu_1       0.2      1.54    0.00945     1.11e-11     39.9 
12 mu_1       0.3      1.52    0.0854      1.81e- 8     53.2 
13 mu_1       0.4      1.33    0.361       3.20e- 6     36.0 
14 mu_1       0.5      1.18    0.791       1.78e- 4     14.2 
15 mu_1       0.6      1.14    1.20        4.74e- 3      3.16
16 mu_1       0.7      1.16    1.09        4.80e- 4      3.65
17 mu_1       0.8      1.14    0.764       4.22e- 6      7.14
18 mu_1       0.9      1.50    0.148       4.54e-10     28.6 
19 mu_0       0.1      0.677   0.00000361  0            24.3 
20 mu_0       0.2      1.24    0.000860    0            26.6 
21 mu_0       0.3      1.49    0.0162      0            45.6 
22 mu_0       0.4      1.43    0.108       0            47.9 
23 mu_0       0.5      1.24    0.372       0            28.4 
24 mu_0       0.6      1.13    0.905       0             9.47
25 mu_0       0.7      1.15    1.16        0             3.20
26 mu_0       0.8      1.14    0.982       0             4.15
27 mu_0       0.9      0.944   0.380       0             7.47
[1] "Total run time was 61.266 seconds"
