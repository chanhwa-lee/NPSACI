
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1207"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
13  3  5 12  5 10  3  3  4  3  5 10  6  2  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04526 0.40484 0.65086 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
690 517 
[1] "treatment indicator table: "

  0   1 
446 761 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 86.126 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.611 0.197
 2 mu         0.1   0.2 0.600 0.169
 3 mu         0.1   0.3 0.640 0.173
 4 mu         0.1   0.4 0.678 0.196
 5 mu         0.1   0.5 0.699 0.176
 6 mu         0.2   0.1 0.438 0.143
 7 mu         0.2   0.2 0.454 0.123
 8 mu         0.2   0.3 0.499 0.128
 9 mu         0.2   0.4 0.547 0.144
10 mu         0.2   0.5 0.556 0.132
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.810        0.280 0.000000901      8.18
 2 mu         0.2      0.844        0.722 0.000752         6.69
 3 mu         0.3      0.905        0.916 0.0235           4.01
 4 mu         0.4      0.942        0.927 0.174            2.43
 5 mu         0.5      0.969        0.957 0.487            1.63
 6 mu         0.6      0.989        0.985 0.740            1.22
 7 mu         0.7      0.994        1.00  0.674            1.31
 8 mu         0.8      0.997        0.986 0.458            2.14
 9 mu         0.9      1.00         0.901 0.111            3.29
10 mu_1       0.1      0.815        0.582 0.00000502       9.27
11 mu_1       0.2      0.877        0.895 0.00212          4.21
12 mu_1       0.3      0.927        0.938 0.0448           2.99
13 mu_1       0.4      0.953        0.947 0.253            2.14
14 mu_1       0.5      0.976        0.970 0.574            1.45
15 mu_1       0.6      0.991        0.990 0.697            1.25
16 mu_1       0.7      0.992        1.01  0.658            1.37
17 mu_1       0.8      0.998        0.982 0.422            2.29
18 mu_1       0.9      1.00         0.909 0.0948           3.32
19 mu_0       0.1      0.809        0.235 0.000000444      8.06
20 mu_0       0.2      0.836        0.642 0.000410         7.31
21 mu_0       0.3      0.896        0.907 0.0144           4.77
22 mu_0       0.4      0.935        0.903 0.122            2.83
23 mu_0       0.5      0.961        0.933 0.399            1.81
24 mu_0       0.6      0.986        0.977 0.707            1.35
25 mu_0       0.7      0.997        0.984 0.664            1.30
26 mu_0       0.8      0.994        0.990 0.558            1.50
27 mu_0       0.9      1.00         0.971 0.252            2.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.42     0.000319  6.10e-18     85.8 
 2 mu         0.2       3.29     0.0161    6.39e-12    148.  
 3 mu         0.3       3.51     0.113     2.13e- 8     88.3 
 4 mu         0.4       2.44     0.404     6.71e- 6     46.1 
 5 mu         0.5       1.46     0.830     5.82e- 4     15.8 
 6 mu         0.6       1.10     1.16      2.23e- 2      2.70
 7 mu         0.7       1.10     1.04      1.05e- 3      2.78
 8 mu         0.8       1.50     0.819     4.67e- 6     22.6 
 9 mu         0.9       3.68     0.190     2.57e-10    149.  
10 mu_1       0.1       2.81     0.00199   6.10e-17    161.  
11 mu_1       0.2       3.88     0.0555    3.20e-11    139.  
12 mu_1       0.3       3.21     0.268     7.09e- 8     68.2 
13 mu_1       0.4       2.00     0.668     1.68e- 5     33.9 
14 mu_1       0.5       1.28     1.02      1.16e- 3      9.28
15 mu_1       0.6       1.08     1.14      1.51e- 2      2.42
16 mu_1       0.7       1.13     1.15      3.74e- 4      3.82
17 mu_1       0.8       1.60     0.652     1.46e- 6     28.3 
18 mu_1       0.9       3.93     0.130     7.13e-11    166.  
19 mu_0       0.1       1.27     0.000141  0            77.4 
20 mu_0       0.2       3.15     0.00582   0           151.  
21 mu_0       0.3       3.64     0.0438    0           102.  
22 mu_0       0.4       2.73     0.233     0            54.2 
23 mu_0       0.5       1.65     0.616     0            22.3 
24 mu_0       0.6       1.13     1.12      0             4.76
25 mu_0       0.7       1.04     1.02      0             2.44
26 mu_0       0.8       1.11     0.977     0             3.80
27 mu_0       0.9       1.41     0.279     0            22.2 
[1] "Total run time was 91.37 seconds"
