
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1322"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  2  7  1  3  7  9  8 14  6  5  8  5  4 10  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03413 0.35337 0.60791 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
797 525 
[1] "treatment indicator table: "

  0   1 
491 831 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 68.539 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.634 0.178 
 2 mu         0.1   0.2 0.731 0.178 
 3 mu         0.1   0.3 0.709 0.179 
 4 mu         0.1   0.4 0.749 0.189 
 5 mu         0.1   0.5 0.762 0.197 
 6 mu         0.2   0.1 0.464 0.0870
 7 mu         0.2   0.2 0.549 0.0830
 8 mu         0.2   0.3 0.543 0.0806
 9 mu         0.2   0.4 0.576 0.0838
10 mu         0.2   0.5 0.601 0.0849
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.18         0.270  0.000185     28.9 
 2 mu         0.2      1.01         0.730  0.0126        7.98
 3 mu         0.3      0.980        0.934  0.105         3.69
 4 mu         0.4      0.988        0.984  0.350         2.22
 5 mu         0.5      0.997        0.987  0.581         1.51
 6 mu         0.6      1.00         1.01   0.621         1.54
 7 mu         0.7      1.01         1.00   0.707         1.29
 8 mu         0.8      1.02         1.02   0.407         1.65
 9 mu         0.9      0.992        0.966  0.0717        2.48
10 mu_1       0.1      1.02         0.563  0.000898     15.8 
11 mu_1       0.2      0.959        0.892  0.0316        5.12
12 mu_1       0.3      0.973        0.933  0.182         2.87
13 mu_1       0.4      0.993        1.01   0.452         1.87
14 mu_1       0.5      1.00         0.993  0.680         1.46
15 mu_1       0.6      1.01         1.02   0.612         1.53
16 mu_1       0.7      1.02         1.02   0.672         1.35
17 mu_1       0.8      1.02         1.03   0.363         1.74
18 mu_1       0.9      0.989        0.984  0.0607        2.51
19 mu_0       0.1      1.20         0.217  0.000106     30.3 
20 mu_0       0.2      1.02         0.641  0.00785       9.21
21 mu_0       0.3      0.983        0.947  0.0720        4.04
22 mu_0       0.4      0.985        0.947  0.264         2.45
23 mu_0       0.5      0.990        0.983  0.482         1.67
24 mu_0       0.6      0.994        0.991  0.634         1.55
25 mu_0       0.7      1.00         1.02   0.672         1.40
26 mu_0       0.8      1.02         0.998  0.583         1.43
27 mu_0       0.9      1.03         0.971  0.170         2.23
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04    0.0000196   5.09e-15     63.3 
 2 mu         0.2      1.37    0.00432     5.93e-10     39.0 
 3 mu         0.3      1.22    0.0805      5.11e- 7     22.0 
 4 mu         0.4      1.01    0.389       5.83e- 5      5.91
 5 mu         0.5      0.949   0.861       2.16e- 3      3.74
 6 mu         0.6      0.967   0.928       3.83e- 2      2.61
 7 mu         0.7      1.02    0.950       8.45e- 4      4.11
 8 mu         0.8      1.15    0.828       2.20e- 6      4.61
 9 mu         0.9      1.13    0.138       5.37e-11     10.6 
10 mu_1       0.1      1.37    0.000131    4.81e-14     57.6 
11 mu_1       0.2      1.34    0.0129      2.80e- 9     36.8 
12 mu_1       0.3      1.10    0.164       1.61e- 6     14.7 
13 mu_1       0.4      0.960   0.641       1.38e- 4      4.43
14 mu_1       0.5      0.957   0.947       4.07e- 3      3.28
15 mu_1       0.6      0.987   1.00        1.52e- 2      2.81
16 mu_1       0.7      1.05    0.972       2.41e- 4      4.24
17 mu_1       0.8      1.16    0.690       5.49e- 7      5.28
18 mu_1       0.9      1.11    0.104       1.19e-11     11.7 
19 mu_0       0.1      1.01    0.00000727  0            64.0 
20 mu_0       0.2      1.38    0.00170     0            44.3 
21 mu_0       0.3      1.28    0.0406      0            25.2 
22 mu_0       0.4      1.04    0.219       0             7.87
23 mu_0       0.5      0.940   0.711       0             4.21
24 mu_0       0.6      0.937   0.894       0             2.62
25 mu_0       0.7      0.969   0.986       0             3.80
26 mu_0       0.8      1.09    1.03        0             4.26
27 mu_0       0.9      1.34    0.443       0             7.01
[1] "Total run time was 72.205 seconds"
