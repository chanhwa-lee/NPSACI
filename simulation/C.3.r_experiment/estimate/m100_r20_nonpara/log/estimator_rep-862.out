
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1226"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  5  8  3  9  8  4  7  8  8 14  4  2  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06421 0.40316 0.66850 1.00000 5.86961 
[1] "event indicator table: "

  0   1 
738 488 
[1] "treatment indicator table: "

  0   1 
411 815 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 85.991 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.202 0.0623
 2 mu         0.1   0.2 0.296 0.0787
 3 mu         0.1   0.3 0.334 0.0994
 4 mu         0.1   0.4 0.424 0.0889
 5 mu         0.1   0.5 0.501 0.0965
 6 mu         0.2   0.1 0.233 0.0374
 7 mu         0.2   0.2 0.332 0.0452
 8 mu         0.2   0.3 0.375 0.0528
 9 mu         0.2   0.4 0.431 0.0554
10 mu         0.2   0.5 0.483 0.0584
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.898        0.283 0.0000495      9.59
 2 mu         0.2      0.994        0.727 0.00909        3.53
 3 mu         0.3      1.03         0.927 0.0887         2.99
 4 mu         0.4      1.02         0.958 0.233          2.39
 5 mu         0.5      1.00         0.958 0.452          1.77
 6 mu         0.6      0.986        0.977 0.516          1.69
 7 mu         0.7      0.977        0.983 0.600          1.36
 8 mu         0.8      0.993        0.990 0.489          1.47
 9 mu         0.9      1.02         0.985 0.276          2.33
10 mu_1       0.1      0.968        0.581 0.000228       4.84
11 mu_1       0.2      1.02         0.877 0.0215         3.75
12 mu_1       0.3      1.02         0.935 0.155          2.61
13 mu_1       0.4      1.01         0.957 0.334          2.23
14 mu_1       0.5      0.994        0.974 0.549          1.83
15 mu_1       0.6      0.982        0.985 0.542          1.62
16 mu_1       0.7      0.978        0.975 0.623          1.37
17 mu_1       0.8      0.997        0.997 0.460          1.55
18 mu_1       0.9      1.03         0.974 0.240          2.38
19 mu_0       0.1      0.890        0.241 0.0000296     10.6 
20 mu_0       0.2      0.988        0.648 0.00566        3.70
21 mu_0       0.3      1.03         0.897 0.0604         3.18
22 mu_0       0.4      1.03         0.969 0.166          2.49
23 mu_0       0.5      1.01         0.960 0.340          2.00
24 mu_0       0.6      0.992        0.976 0.476          1.78
25 mu_0       0.7      0.977        0.985 0.546          1.45
26 mu_0       0.8      0.973        0.973 0.606          1.41
27 mu_0       0.9      0.998        0.974 0.254          1.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.40   0.0000217   1.01e-13     66.3 
 2 mu         0.2       1.47   0.00282     9.33e- 9     51.0 
 3 mu         0.3       1.19   0.0412      4.95e- 6     17.7 
 4 mu         0.4       1.09   0.203       3.17e- 4      7.46
 5 mu         0.5       1.05   0.508       7.37e- 3      7.86
 6 mu         0.6       1.03   0.842       5.20e- 3      4.48
 7 mu         0.7       1.07   0.978       9.46e- 5      5.28
 8 mu         0.8       1.20   1.12        2.82e- 7      4.09
 9 mu         0.9       1.26   0.335       1.09e-11     10.1 
10 mu_1       0.1       1.93   0.000159    8.62e-13     82.9 
11 mu_1       0.2       1.39   0.00988     3.97e- 8     31.9 
12 mu_1       0.3       1.16   0.101       1.55e- 5      9.26
13 mu_1       0.4       1.10   0.342       7.44e- 4      7.74
14 mu_1       0.5       1.05   0.725       1.41e- 2      7.45
15 mu_1       0.6       1.03   0.849       1.02e- 3      4.07
16 mu_1       0.7       1.09   0.960       1.59e- 5      5.28
17 mu_1       0.8       1.22   1.12        4.15e- 8      4.24
18 mu_1       0.9       1.27   0.279       1.43e-12     10.6 
19 mu_0       0.1       1.34   0.00000660  0            64.5 
20 mu_0       0.2       1.50   0.00106     0            55.8 
21 mu_0       0.3       1.21   0.0133      0            22.1 
22 mu_0       0.4       1.09   0.0743      0             8.71
23 mu_0       0.5       1.05   0.250       0             8.28
24 mu_0       0.6       1.02   0.528       0             5.73
25 mu_0       0.7       1.01   0.896       0             5.28
26 mu_0       0.8       1.08   0.954       0             4.51
27 mu_0       0.9       1.24   0.404       0             6.34
[1] "Total run time was 90.335 seconds"
