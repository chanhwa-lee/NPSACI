
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1142"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6 10  8  8  5  5 10  9  6  6  8  5  5  2  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02517 0.30137 0.55496 0.96656 5.00000 
[1] "event indicator table: "

  0   1 
666 476 
[1] "treatment indicator table: "

  0   1 
431 711 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 548
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.198 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.483 0.105 
 2 mu         0.1   0.2 0.514 0.109 
 3 mu         0.1   0.3 0.557 0.120 
 4 mu         0.1   0.4 0.579 0.138 
 5 mu         0.1   0.5 0.645 0.145 
 6 mu         0.2   0.1 0.459 0.0708
 7 mu         0.2   0.2 0.500 0.0656
 8 mu         0.2   0.3 0.540 0.0626
 9 mu         0.2   0.4 0.564 0.0709
10 mu         0.2   0.5 0.628 0.0746
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.12         0.325 0.000128      19.6 
 2 mu         0.2      1.08         0.767 0.00808        7.05
 3 mu         0.3      1.09         0.989 0.0658         3.73
 4 mu         0.4      1.08         1.04  0.230          2.41
 5 mu         0.5      1.05         1.05  0.506          1.54
 6 mu         0.6      1.02         1.04  0.743          1.31
 7 mu         0.7      0.990        0.990 0.698          1.40
 8 mu         0.8      0.957        0.939 0.459          1.52
 9 mu         0.9      0.891        0.805 0.0901         2.36
10 mu_1       0.1      1.06         0.577 0.000647       8.08
11 mu_1       0.2      1.09         0.923 0.0209         6.23
12 mu_1       0.3      1.10         1.04  0.118          3.04
13 mu_1       0.4      1.07         1.07  0.327          2.09
14 mu_1       0.5      1.04         1.05  0.577          1.49
15 mu_1       0.6      1.01         1.03  0.739          1.25
16 mu_1       0.7      0.981        0.988 0.649          1.44
17 mu_1       0.8      0.947        0.918 0.389          1.59
18 mu_1       0.9      0.881        0.783 0.0719         2.38
19 mu_0       0.1      1.12         0.273 0.0000702     21.8 
20 mu_0       0.2      1.08         0.723 0.00487        7.25
21 mu_0       0.3      1.09         0.935 0.0435         4.35
22 mu_0       0.4      1.09         1.05  0.165          2.72
23 mu_0       0.5      1.07         1.06  0.394          1.74
24 mu_0       0.6      1.04         1.04  0.617          1.47
25 mu_0       0.7      1.01         1.01  0.723          1.33
26 mu_0       0.8      0.995        0.994 0.611          1.50
27 mu_0       0.9      0.976        0.954 0.253          2.13
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     14.3       0.000332  5.93e-18   1387.  
 2 mu         0.2      6.17      0.0210    6.21e-12    533.  
 3 mu         0.3      2.24      0.165     2.07e- 8    123.  
 4 mu         0.4      1.20      0.520     6.52e- 6     19.0 
 5 mu         0.5      1.02      0.934     5.65e- 4      3.31
 6 mu         0.6      0.982     1.01      2.17e- 2      2.27
 7 mu         0.7      0.977     0.962     2.03e- 3      2.77
 8 mu         0.8      1.09      0.618     7.95e- 6      6.83
 9 mu         0.9      1.86      0.0791    5.46e-10     72.1 
10 mu_1       0.1     10.1       0.00197   5.93e-17    925.  
11 mu_1       0.2      2.84      0.0606    3.11e-11    178.  
12 mu_1       0.3      1.34      0.306     6.89e- 8     27.4 
13 mu_1       0.4      1.06      0.784     1.63e- 5      7.12
14 mu_1       0.5      0.996     0.889     1.13e- 3      3.00
15 mu_1       0.6      0.966     1.01      1.09e- 2      2.16
16 mu_1       0.7      0.973     0.972     1.93e- 4      2.96
17 mu_1       0.8      1.13      0.472     6.62e- 7      8.54
18 mu_1       0.9      1.96      0.0564    4.04e-11     80.1 
19 mu_0       0.1     14.7       0.000146  0          1439.  
20 mu_0       0.2      7.00      0.00841   0           622.  
21 mu_0       0.3      2.63      0.0987    0           165.  
22 mu_0       0.4      1.30      0.323     0            29.6 
23 mu_0       0.5      1.04      0.723     0             4.68
24 mu_0       0.6      1.01      1.06      0             2.58
25 mu_0       0.7      0.986     1.01      0             2.31
26 mu_0       0.8      0.958     0.922     0             3.71
27 mu_0       0.9      0.944     0.229     0             6.87
[1] "Total run time was 54.126 seconds"
