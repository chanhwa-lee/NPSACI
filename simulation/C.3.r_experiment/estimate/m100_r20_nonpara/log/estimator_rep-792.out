
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1267"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  6  3  5  3  6 10  9  3  7  7  6  7  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03097 0.34774 0.58944 0.96957 5.00000 
[1] "event indicator table: "

  0   1 
724 543 
[1] "treatment indicator table: "

  0   1 
495 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 78.098 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.541 0.102 
 2 mu         0.1   0.2 0.631 0.102 
 3 mu         0.1   0.3 0.651 0.0966
 4 mu         0.1   0.4 0.663 0.0957
 5 mu         0.1   0.5 0.678 0.0947
 6 mu         0.2   0.1 0.431 0.0607
 7 mu         0.2   0.2 0.510 0.0635
 8 mu         0.2   0.3 0.547 0.0591
 9 mu         0.2   0.4 0.566 0.0589
10 mu         0.2   0.5 0.584 0.0571
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.603   0.00348      7.43
 2 mu         0.2      1.01         0.893   0.0613       2.58
 3 mu         0.3      0.975        0.948   0.237        1.90
 4 mu         0.4      0.989        1.00    0.479        1.63
 5 mu         0.5      1.01         1.01    0.457        1.50
 6 mu         0.6      1.01         1.02    0.587        1.28
 7 mu         0.7      0.985        0.999   0.613        1.36
 8 mu         0.8      0.988        0.976   0.508        1.55
 9 mu         0.9      1.06         1.04    0.165        2.90
10 mu_1       0.1      1.04         0.778   0.0151       3.98
11 mu_1       0.2      0.995        0.964   0.137        2.22
12 mu_1       0.3      0.983        0.996   0.289        1.67
13 mu_1       0.4      1.00         1.02    0.473        1.59
14 mu_1       0.5      1.02         1.03    0.464        1.42
15 mu_1       0.6      1.01         1.00    0.641        1.31
16 mu_1       0.7      0.981        0.983   0.551        1.37
17 mu_1       0.8      0.992        0.967   0.466        1.59
18 mu_1       0.9      1.07         1.04    0.143        3.02
19 mu_0       0.1      1.08         0.545   0.00219      8.17
20 mu_0       0.2      1.01         0.879   0.0423       2.74
21 mu_0       0.3      0.972        0.921   0.180        2.00
22 mu_0       0.4      0.979        0.981   0.399        1.85
23 mu_0       0.5      1.01         0.991   0.450        1.57
24 mu_0       0.6      1.02         1.01    0.507        1.43
25 mu_0       0.7      0.995        1.00    0.672        1.39
26 mu_0       0.8      0.973        0.987   0.441        1.39
27 mu_0       0.9      1.01         0.948   0.369        2.11
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.573    0.0000784  2.94e-15     20.4 
 2 mu         0.2      0.727    0.0104     6.09e-10     12.2 
 3 mu         0.3      0.843    0.123      6.89e- 7      5.31
 4 mu         0.4      0.911    0.535      8.97e- 5      4.10
 5 mu         0.5      0.970    0.954      3.07e- 3      2.91
 6 mu         0.6      1.03     0.980      1.64e- 2      2.48
 7 mu         0.7      1.08     1.01       8.07e- 4      4.32
 8 mu         0.8      1.12     0.658      5.25e- 6      5.46
 9 mu         0.9      1.08     0.0771     5.13e-10      9.28
10 mu_1       0.1      0.782    0.000447   2.64e-14     17.9 
11 mu_1       0.2      0.821    0.0331     2.74e- 9      6.45
12 mu_1       0.3      0.888    0.260      2.07e- 6      5.53
13 mu_1       0.4      0.932    0.706      2.02e- 4      3.40
14 mu_1       0.5      0.987    0.980      6.13e- 3      2.91
15 mu_1       0.6      1.04     1.02       2.28e- 3      2.95
16 mu_1       0.7      1.09     0.918      9.61e- 5      4.45
17 mu_1       0.8      1.12     0.493      1.11e- 6      5.97
18 mu_1       0.9      1.08     0.0543     1.27e-10     10.3 
19 mu_0       0.1      0.550    0.0000291  0            20.8 
20 mu_0       0.2      0.704    0.00446    0            13.8 
21 mu_0       0.3      0.823    0.0647     0             6.23
22 mu_0       0.4      0.897    0.334      0             4.70
23 mu_0       0.5      0.952    0.687      0             3.03
24 mu_0       0.6      1.00     1.04       0             2.67
25 mu_0       0.7      1.06     1.06       0             4.00
26 mu_0       0.8      1.11     0.742      0             4.48
27 mu_0       0.9      1.08     0.190      0             8.87
[1] "Total run time was 81.86 seconds"
