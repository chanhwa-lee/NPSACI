
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1240"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4 10  5  7  3  7  9  6  8  6  7  7  4  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0236  0.3564  0.6250  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
759 481 
[1] "treatment indicator table: "

  0   1 
412 828 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.866 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.433 0.0686
 2 mu         0.1   0.2 0.544 0.0929
 3 mu         0.1   0.3 0.630 0.120 
 4 mu         0.1   0.4 0.653 0.113 
 5 mu         0.1   0.5 0.715 0.111 
 6 mu         0.2   0.1 0.419 0.0506
 7 mu         0.2   0.2 0.526 0.0617
 8 mu         0.2   0.3 0.600 0.0774
 9 mu         0.2   0.4 0.629 0.0710
10 mu         0.2   0.5 0.714 0.0754
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.381 0.0000560      6.23
 2 mu         0.2      1.13         0.929 0.00910        3.82
 3 mu         0.3      1.08         1.04  0.0970         2.18
 4 mu         0.4      1.04         1.06  0.286          1.80
 5 mu         0.5      1.03         1.05  0.546          1.71
 6 mu         0.6      1.01         0.998 0.671          1.31
 7 mu         0.7      0.987        0.977 0.531          1.36
 8 mu         0.8      0.977        0.981 0.587          1.72
 9 mu         0.9      0.943        0.917 0.276          1.94
10 mu_1       0.1      1.12         0.725 0.000256       4.85
11 mu_1       0.2      1.08         1.00  0.0211         3.20
12 mu_1       0.3      1.03         1.04  0.156          2.05
13 mu_1       0.4      1.02         1.03  0.415          1.70
14 mu_1       0.5      1.01         1.01  0.584          1.65
15 mu_1       0.6      0.997        0.995 0.664          1.29
16 mu_1       0.7      0.981        0.982 0.485          1.44
17 mu_1       0.8      0.973        0.965 0.534          1.74
18 mu_1       0.9      0.939        0.908 0.241          2.02
19 mu_0       0.1      1.03         0.334 0.0000339      6.70
20 mu_0       0.2      1.14         0.893 0.00611        3.98
21 mu_0       0.3      1.10         0.986 0.0606         2.37
22 mu_0       0.4      1.06         1.04  0.199          1.90
23 mu_0       0.5      1.04         1.03  0.424          1.77
24 mu_0       0.6      1.02         1.01  0.635          1.42
25 mu_0       0.7      1.00         1.01  0.613          1.34
26 mu_0       0.8      0.994        0.994 0.426          1.65
27 mu_0       0.9      0.980        0.958 0.459          1.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.774    0.0000477  7.90e-19     23.6 
 2 mu         0.2      1.16     0.00521    8.29e-13     26.7 
 3 mu         0.3      1.09     0.0491     2.76e- 9     18.2 
 4 mu         0.4      1.01     0.259      8.69e- 7      8.79
 5 mu         0.5      0.997    0.597      7.54e- 5      4.41
 6 mu         0.6      0.986    1.02       2.44e- 3      2.36
 7 mu         0.7      0.983    1.01       1.76e- 3      2.26
 8 mu         0.8      1.00     0.952      1.35e- 5      3.89
 9 mu         0.9      1.17     0.198      2.35e- 9      9.61
10 mu_1       0.1      1.38     0.000426   7.90e-18     33.7 
11 mu_1       0.2      1.23     0.0186     4.14e-12     26.7 
12 mu_1       0.3      1.02     0.125      9.19e- 9     12.1 
13 mu_1       0.4      0.977    0.425      2.17e- 6      4.22
14 mu_1       0.5      0.976    0.778      1.51e- 4      2.69
15 mu_1       0.6      0.972    1.00       4.07e- 3      2.27
16 mu_1       0.7      0.978    1.01       4.43e- 4      2.38
17 mu_1       0.8      1.00     0.821      3.17e- 6      4.00
18 mu_1       0.9      1.19     0.156      4.90e-10     10.7 
19 mu_0       0.1      0.706    0.0000105  0            22.4 
20 mu_0       0.2      1.14     0.00141    0            26.7 
21 mu_0       0.3      1.11     0.0201     0            20.8 
22 mu_0       0.4      1.04     0.145      0            12.2 
23 mu_0       0.5      1.02     0.422      0             7.36
24 mu_0       0.6      1.01     0.807      0             3.62
25 mu_0       0.7      0.995    1.11       0             2.37
26 mu_0       0.8      0.996    1.02       0             3.43
27 mu_0       0.9      0.970    0.317      0             4.46
[1] "Total run time was 54.001 seconds"
