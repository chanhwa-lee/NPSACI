
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5  7  4  5  5  8  8  9  9  7  6  6  5  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03487 0.33375 0.63394 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
727 479 
[1] "treatment indicator table: "

  0   1 
482 724 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 134.095 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.437 0.118 
 2 mu         0.1   0.2 0.526 0.142 
 3 mu         0.1   0.3 0.570 0.151 
 4 mu         0.1   0.4 0.627 0.158 
 5 mu         0.1   0.5 0.694 0.173 
 6 mu         0.2   0.1 0.383 0.0566
 7 mu         0.2   0.2 0.479 0.0678
 8 mu         0.2   0.3 0.514 0.0698
 9 mu         0.2   0.4 0.573 0.0721
10 mu         0.2   0.5 0.635 0.0798
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10         0.290  0.000438     19.0 
 2 mu         0.2      1.08         0.739  0.0231        8.40
 3 mu         0.3      1.04         0.927  0.128         3.06
 4 mu         0.4      1.02         0.995  0.379         2.05
 5 mu         0.5      1.01         0.997  0.653         1.56
 6 mu         0.6      1.00         1.00   0.783         1.19
 7 mu         0.7      0.988        0.989  0.607         1.40
 8 mu         0.8      0.976        0.960  0.283         1.85
 9 mu         0.9      0.981        0.821  0.0512        3.61
10 mu_1       0.1      1.15         0.679  0.00189      14.0 
11 mu_1       0.2      1.06         1.00   0.0528        5.25
12 mu_1       0.3      1.02         1.01   0.213         2.32
13 mu_1       0.4      1.01         1.00   0.523         1.90
14 mu_1       0.5      1.01         1.00   0.689         1.42
15 mu_1       0.6      1.00         1.00   0.783         1.28
16 mu_1       0.7      0.987        0.995  0.529         1.44
17 mu_1       0.8      0.977        0.918  0.248         1.95
18 mu_1       0.9      0.980        0.801  0.0427        3.95
19 mu_0       0.1      1.09         0.244  0.000276     19.9 
20 mu_0       0.2      1.09         0.689  0.0157        9.18
21 mu_0       0.3      1.05         0.902  0.0920        3.67
22 mu_0       0.4      1.02         0.985  0.284         2.16
23 mu_0       0.5      1.01         0.994  0.578         1.69
24 mu_0       0.6      1.00         1.00   0.689         1.27
25 mu_0       0.7      0.989        0.997  0.732         1.37
26 mu_0       0.8      0.975        0.990  0.424         1.52
27 mu_0       0.9      0.987        0.952  0.128         2.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.563    0.000107   5.11e-12     26.0 
 2 mu         0.2      1.17     0.0111     7.44e- 8     28.4 
 3 mu         0.3      1.26     0.113      1.90e- 5     17.1 
 4 mu         0.4      1.05     0.405      9.14e- 4      6.37
 5 mu         0.5      0.913    0.873      1.73e- 2      2.39
 6 mu         0.6      0.948    1.02       7.13e- 2      2.13
 7 mu         0.7      1.10     1.10       2.06e- 3      3.88
 8 mu         0.8      1.26     0.586      9.16e- 6      6.52
 9 mu         0.9      1.19     0.0772     5.04e-10     13.0 
10 mu_1       0.1      1.12     0.000772   4.77e-11     39.9 
11 mu_1       0.2      1.40     0.0343     3.47e- 7     25.1 
12 mu_1       0.3      1.23     0.239      5.91e- 5     11.4 
13 mu_1       0.4      0.987    0.670      2.13e- 3      4.46
14 mu_1       0.5      0.908    0.894      3.23e- 2      2.39
15 mu_1       0.6      0.986    1.09       2.97e- 2      2.17
16 mu_1       0.7      1.15     1.07       7.35e- 4      4.50
17 mu_1       0.8      1.28     0.460      2.86e- 6      6.79
18 mu_1       0.9      1.18     0.0572     1.40e-10     13.5 
19 mu_0       0.1      0.502    0.0000449  0            24.4 
20 mu_0       0.2      1.11     0.00506    0            30.1 
21 mu_0       0.3      1.28     0.0462     0            19.5 
22 mu_0       0.4      1.10     0.228      0             8.50
23 mu_0       0.5      0.917    0.687      0             2.98
24 mu_0       0.6      0.889    0.905      0             2.36
25 mu_0       0.7      0.988    1.05       0             2.89
26 mu_0       0.8      1.16     0.975      0             6.12
27 mu_0       0.9      1.34     0.261      0             9.31
[1] "Total run time was 137.799 seconds"
