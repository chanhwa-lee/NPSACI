
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1364"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  4 10  7  2  1  5 11  4  3  4 10  8  6 14  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05064 0.41862 0.65816 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
821 543 
[1] "treatment indicator table: "

  0   1 
449 915 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 721
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 137.902 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.675 0.277
 2 mu         0.1   0.2 0.714 0.316
 3 mu         0.1   0.3 0.743 0.344
 4 mu         0.1   0.4 0.749 0.368
 5 mu         0.1   0.5 0.782 0.399
 6 mu         0.2   0.1 0.471 0.122
 7 mu         0.2   0.2 0.496 0.132
 8 mu         0.2   0.3 0.526 0.145
 9 mu         0.2   0.4 0.550 0.163
10 mu         0.2   0.5 0.573 0.174
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.55        0.0352 0.000000383     62.2 
 2 mu         0.2      1.15        0.293  0.000204        22.1 
 3 mu         0.3      1.06        0.690  0.00570         15.4 
 4 mu         0.4      1.01        0.926  0.0458           5.39
 5 mu         0.5      0.988       0.981  0.179            2.08
 6 mu         0.6      0.988       1.01   0.439            1.26
 7 mu         0.7      0.995       0.993  0.657            1.28
 8 mu         0.8      0.988       0.977  0.472            1.92
 9 mu         0.9      0.957       0.864  0.0898           4.06
10 mu_1       0.1      0.966       0.134  0.00000240      18.7 
11 mu_1       0.2      1.07        0.545  0.000643        23.3 
12 mu_1       0.3      1.03        0.842  0.0121          11.0 
13 mu_1       0.4      0.999       0.954  0.0744           3.24
14 mu_1       0.5      0.986       1.01   0.241            1.57
15 mu_1       0.6      0.989       0.987  0.518            1.29
16 mu_1       0.7      0.993       0.999  0.669            1.34
17 mu_1       0.8      0.984       0.965  0.423            2.10
18 mu_1       0.9      0.953       0.858  0.0742           4.33
19 mu_0       0.1      1.61        0.0242 0.000000158     69.1 
20 mu_0       0.2      1.17        0.256  0.0000938       21.7 
21 mu_0       0.3      1.07        0.599  0.00295         17.2 
22 mu_0       0.4      1.02        0.859  0.0267           6.82
23 mu_0       0.5      0.990       0.951  0.118            2.60
24 mu_0       0.6      0.987       1.01   0.321            1.46
25 mu_0       0.7      0.998       1.01   0.629            1.31
26 mu_0       0.8      1.01        1.01   0.586            1.34
27 mu_0       0.9      0.989       0.934  0.231            2.31
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.08   0.00000408  8.69e-17    690.  
 2 mu         0.2       5.09   0.00250     4.05e-11    425.  
 3 mu         0.3       3.42   0.0344      7.85e- 8    168.  
 4 mu         0.4       2.36   0.196       1.59e- 5     63.7 
 5 mu         0.5       1.54   0.596       9.21e- 4     28.4 
 6 mu         0.6       1.12   0.982       2.35e- 2      5.59
 7 mu         0.7       1.06   1.10        4.57e- 2      2.32
 8 mu         0.8       1.22   1.03        4.58e- 4      4.45
 9 mu         0.9       1.45   0.176       1.01e- 7     22.7 
10 mu_1       0.1       6.70   0.0000246   8.25e-16    627.  
11 mu_1       0.2       3.25   0.00780     1.92e-10    193.  
12 mu_1       0.3       2.53   0.0787      2.49e- 7     73.6 
13 mu_1       0.4       1.94   0.344       3.78e- 5     55.8 
14 mu_1       0.5       1.35   0.816       1.75e- 3     19.9 
15 mu_1       0.6       1.06   1.05        3.73e- 2      3.59
16 mu_1       0.7       1.07   1.06        1.06e- 2      2.73
17 mu_1       0.8       1.25   0.866       1.59e- 4      5.45
18 mu_1       0.9       1.47   0.143       3.11e- 8     25.2 
19 mu_0       0.1       7.12   0.00000163  0           697.  
20 mu_0       0.2       5.56   0.000592    0           483.  
21 mu_0       0.3       3.80   0.0165      0           218.  
22 mu_0       0.4       2.65   0.0914      0            72.5 
23 mu_0       0.5       1.73   0.371       0            36.9 
24 mu_0       0.6       1.21   0.956       0             9.09
25 mu_0       0.7       1.05   1.03        0             3.55
26 mu_0       0.8       1.11   1.12        0             3.93
27 mu_0       0.9       1.31   0.415       0             6.52
[1] "Total run time was 141.702 seconds"
