
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1174"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 20 
10  8  4  8  6  7  7  5  7  7  8  6  4  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03718 0.33428 0.61106 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
680 494 
[1] "treatment indicator table: "

  0   1 
436 738 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 550
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 162.969 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.425 0.137 
 2 mu         0.1   0.2 0.513 0.165 
 3 mu         0.1   0.3 0.596 0.187 
 4 mu         0.1   0.4 0.691 0.211 
 5 mu         0.1   0.5 0.714 0.229 
 6 mu         0.2   0.1 0.393 0.0628
 7 mu         0.2   0.2 0.470 0.0709
 8 mu         0.2   0.3 0.538 0.0808
 9 mu         0.2   0.4 0.622 0.0840
10 mu         0.2   0.5 0.652 0.0895
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.988        0.177 0.000000473     34.3 
 2 mu         0.2      0.929        0.577 0.000385        11.0 
 3 mu         0.3      0.958        0.827 0.0120           3.61
 4 mu         0.4      0.971        0.903 0.0927           2.20
 5 mu         0.5      0.990        0.969 0.321            1.57
 6 mu         0.6      1.01         1.01  0.611            1.50
 7 mu         0.7      1.01         1.02  0.673            1.49
 8 mu         0.8      1.01         1.03  0.210            2.68
 9 mu         0.9      1.00         0.905 0.0141           5.20
10 mu_1       0.1      0.840        0.460 0.00000263       8.32
11 mu_1       0.2      0.941        0.813 0.00108          3.59
12 mu_1       0.3      0.974        0.921 0.0230           2.54
13 mu_1       0.4      0.979        0.961 0.136            1.98
14 mu_1       0.5      0.997        0.991 0.397            1.54
15 mu_1       0.6      1.01         1.01  0.673            1.47
16 mu_1       0.7      1.02         1.03  0.584            1.59
17 mu_1       0.8      1.02         1.04  0.168            2.90
18 mu_1       0.9      1.00         0.871 0.0106           5.32
19 mu_0       0.1      1.00         0.147 0.000000234     38.1 
20 mu_0       0.2      0.926        0.476 0.000211        13.6 
21 mu_0       0.3      0.952        0.757 0.00734          4.73
22 mu_0       0.4      0.966        0.892 0.0634           2.34
23 mu_0       0.5      0.982        0.938 0.244            1.73
24 mu_0       0.6      1.00         0.987 0.518            1.55
25 mu_0       0.7      1.01         0.995 0.603            1.45
26 mu_0       0.8      1.00         1.02  0.378            1.82
27 mu_0       0.9      0.990        0.954 0.0459           4.07
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.35     0.000172   3.50e-18     69.8 
 2 mu         0.2      1.54     0.0125     3.67e-12     41.8 
 3 mu         0.3      1.49     0.110      1.22e- 8     21.8 
 4 mu         0.4      1.37     0.462      3.85e- 6     11.2 
 5 mu         0.5      1.15     0.833      3.34e- 4      6.41
 6 mu         0.6      1.01     0.993      4.91e- 3      3.03
 7 mu         0.7      1.16     1.01       1.02e- 4      4.69
 8 mu         0.8      1.83     0.682      4.00e- 7     16.1 
 9 mu         0.9      3.56     0.114      2.74e-11     74.5 
10 mu_1       0.1      1.81     0.00141    3.50e-17     48.0 
11 mu_1       0.2      1.61     0.0390     1.84e-11     36.9 
12 mu_1       0.3      1.46     0.239      4.07e- 8     12.9 
13 mu_1       0.4      1.29     0.691      9.62e- 6      9.78
14 mu_1       0.5      1.08     0.912      6.68e- 4      5.28
15 mu_1       0.6      1.01     0.996      5.46e- 4      3.25
16 mu_1       0.7      1.25     1.07       9.72e- 6      5.58
17 mu_1       0.8      2.01     0.554      3.33e- 8     20.1 
18 mu_1       0.9      3.77     0.0809     2.03e-12     82.8 
19 mu_0       0.1      1.30     0.0000588  0            72.4 
20 mu_0       0.2      1.53     0.00525    0            43.0 
21 mu_0       0.3      1.51     0.0532     0            25.6 
22 mu_0       0.4      1.43     0.267      0            12.1 
23 mu_0       0.5      1.22     0.563      0             7.54
24 mu_0       0.6      0.998    0.959      0             3.67
25 mu_0       0.7      0.943    0.908      0             3.43
26 mu_0       0.8      1.13     0.757      0             8.58
27 mu_0       0.9      1.66     0.152      0            27.6 
[1] "Total run time was 168.572 seconds"
