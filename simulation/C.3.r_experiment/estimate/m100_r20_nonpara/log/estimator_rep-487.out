
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1289"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6 10  4  3  7  4  3  4  8  6 11 10  6  2  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03084 0.35628 0.62394 1.00000 4.89168 
[1] "event indicator table: "

  0   1 
763 526 
[1] "treatment indicator table: "

  0   1 
428 861 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 149.813 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.542 0.107 
 2 mu         0.1   0.2 0.590 0.104 
 3 mu         0.1   0.3 0.621 0.103 
 4 mu         0.1   0.4 0.804 0.137 
 5 mu         0.1   0.5 0.813 0.136 
 6 mu         0.2   0.1 0.499 0.0697
 7 mu         0.2   0.2 0.561 0.0638
 8 mu         0.2   0.3 0.606 0.0603
 9 mu         0.2   0.4 0.749 0.0803
10 mu         0.2   0.5 0.756 0.0783
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.414  0.00110       8.89
 2 mu         0.2      1.05         0.877  0.0412        3.74
 3 mu         0.3      0.999        0.992  0.160         2.08
 4 mu         0.4      0.979        0.944  0.373         1.87
 5 mu         0.5      0.982        0.982  0.545         1.95
 6 mu         0.6      0.995        1.01   0.457         1.91
 7 mu         0.7      1.00         1.02   0.537         1.47
 8 mu         0.8      0.999        1.00   0.546         1.50
 9 mu         0.9      0.997        0.949  0.401         1.80
10 mu_1       0.1      1.15         0.775  0.00459       5.94
11 mu_1       0.2      1.06         1.01   0.0948        2.64
12 mu_1       0.3      0.996        0.999  0.291         2.16
13 mu_1       0.4      0.983        0.966  0.507         1.74
14 mu_1       0.5      0.987        1.00   0.541         2.04
15 mu_1       0.6      0.997        1.01   0.446         1.82
16 mu_1       0.7      1.00         1.01   0.572         1.52
17 mu_1       0.8      0.996        0.997  0.476         1.48
18 mu_1       0.9      0.996        0.940  0.388         1.90
19 mu_0       0.1      1.02         0.364  0.000709      9.21
20 mu_0       0.2      1.05         0.868  0.0251        4.09
21 mu_0       0.3      1.00         0.985  0.104         2.04
22 mu_0       0.4      0.976        0.956  0.261         1.99
23 mu_0       0.5      0.978        0.973  0.490         1.89
24 mu_0       0.6      0.991        0.982  0.475         2.05
25 mu_0       0.7      1.01         1.01   0.455         1.72
26 mu_0       0.8      1.01         1.00   0.636         1.66
27 mu_0       0.9      1.00         1.01   0.375         1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.896   0.0000249   4.27e-16     45.8 
 2 mu         0.2      1.34    0.00336     9.95e-11     34.0 
 3 mu         0.3      1.15    0.0487      1.29e- 7     20.2 
 4 mu         0.4      0.969   0.220       1.96e- 5      9.16
 5 mu         0.5      0.954   0.563       5.75e- 4      5.10
 6 mu         0.6      1.00    0.885       3.83e- 3      4.28
 7 mu         0.7      1.05    1.01        5.22e- 5      4.07
 8 mu         0.8      1.07    0.949       1.04e- 7      3.75
 9 mu         0.9      1.06    0.278       2.00e-12      7.12
10 mu_1       0.1      1.46    0.000154    4.04e-15     50.9 
11 mu_1       0.2      1.44    0.0124      4.71e-10     31.9 
12 mu_1       0.3      1.11    0.122       4.06e- 7     12.9 
13 mu_1       0.4      0.966   0.368       4.63e- 5      6.55
14 mu_1       0.5      0.972   0.734       1.15e- 3      4.53
15 mu_1       0.6      1.02    0.951       7.08e- 4      4.59
16 mu_1       0.7      1.05    1.01        8.28e- 6      3.74
17 mu_1       0.8      1.07    0.909       1.44e- 8      4.22
18 mu_1       0.9      1.04    0.210       2.47e-13      7.49
19 mu_0       0.1      0.833   0.00000690  0            45.3 
20 mu_0       0.2      1.31    0.00123     0            34.5 
21 mu_0       0.3      1.17    0.0169      0            23.5 
22 mu_0       0.4      0.971   0.104       0            10.9 
23 mu_0       0.5      0.936   0.364       0             5.67
24 mu_0       0.6      0.981   0.685       0             4.81
25 mu_0       0.7      1.03    0.913       0             4.84
26 mu_0       0.8      1.10    1.09        0             3.51
27 mu_0       0.9      1.18    0.583       0             5.41
[1] "Total run time was 153.488 seconds"
