
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1242"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5  3 10  7  6  6  8  3  4  9  5  5  4  6 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02928 0.36590 0.62177 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
789 453 
[1] "treatment indicator table: "

  0   1 
427 815 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 99.125 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.202 0.0501
 2 mu         0.1   0.2 0.277 0.0749
 3 mu         0.1   0.3 0.404 0.143 
 4 mu         0.1   0.4 0.429 0.129 
 5 mu         0.1   0.5 0.465 0.141 
 6 mu         0.2   0.1 0.254 0.0399
 7 mu         0.2   0.2 0.344 0.0593
 8 mu         0.2   0.3 0.464 0.113 
 9 mu         0.2   0.4 0.487 0.104 
10 mu         0.2   0.5 0.543 0.114 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.608        0.238 0.00000514      4.95
 2 mu         0.2      0.878        0.806 0.00164         4.54
 3 mu         0.3      0.995        0.936 0.0263          3.70
 4 mu         0.4      1.01         0.958 0.119           2.88
 5 mu         0.5      0.984        0.980 0.303           1.70
 6 mu         0.6      0.969        0.969 0.475           1.51
 7 mu         0.7      0.964        0.971 0.612           1.62
 8 mu         0.8      0.959        0.953 0.513           1.71
 9 mu         0.9      0.961        0.939 0.208           1.70
10 mu_1       0.1      0.826        0.591 0.0000257       6.12
11 mu_1       0.2      0.987        0.858 0.00413         4.19
12 mu_1       0.3      1.03         0.970 0.0446          3.56
13 mu_1       0.4      1.01         0.977 0.159           2.23
14 mu_1       0.5      0.978        0.970 0.365           1.57
15 mu_1       0.6      0.966        0.957 0.516           1.55
16 mu_1       0.7      0.962        0.970 0.603           1.62
17 mu_1       0.8      0.958        0.953 0.487           1.71
18 mu_1       0.9      0.962        0.934 0.187           1.69
19 mu_0       0.1      0.584        0.195 0.00000286      5.21
20 mu_0       0.2      0.851        0.727 0.00102         4.75
21 mu_0       0.3      0.981        0.956 0.0184          3.76
22 mu_0       0.4      1.01         0.945 0.0921          3.31
23 mu_0       0.5      0.990        0.970 0.241           2.17
24 mu_0       0.6      0.973        0.980 0.413           1.54
25 mu_0       0.7      0.971        0.967 0.541           1.62
26 mu_0       0.8      0.966        0.962 0.551           1.73
27 mu_0       0.9      0.944        0.950 0.317           1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.27    0.0000382  5.16e-18    683.  
 2 mu         0.2       2.21    0.00452    2.70e-12    146.  
 3 mu         0.3       1.43    0.0589     5.99e- 9     18.0 
 4 mu         0.4       1.69    0.310      1.42e- 6     19.0 
 5 mu         0.5       1.73    0.698      9.84e- 5     28.3 
 6 mu         0.6       1.51    1.06       8.34e- 4     18.8 
 7 mu         0.7       1.37    1.13       4.12e- 6     12.5 
 8 mu         0.8       1.34    0.872      2.12e- 9     18.4 
 9 mu         0.9       1.15    0.281      4.55e-15      6.97
10 mu_1       0.1       4.13    0.000244   5.16e-17    342.  
11 mu_1       0.2       1.36    0.0143     1.35e-11     36.5 
12 mu_1       0.3       1.54    0.140      2.00e- 8     21.5 
13 mu_1       0.4       1.79    0.540      3.54e- 6     23.5 
14 mu_1       0.5       1.70    0.959      1.97e- 4     28.3 
15 mu_1       0.6       1.46    0.917      6.95e- 5     15.7 
16 mu_1       0.7       1.36    1.14       2.94e- 7     14.1 
17 mu_1       0.8       1.33    0.828      1.33e-10     18.1 
18 mu_1       0.9       1.14    0.207      2.53e-16      7.74
19 mu_0       0.1       7.62    0.0000109  0           721.  
20 mu_0       0.2       2.42    0.00183    0           173.  
21 mu_0       0.3       1.38    0.0249     0            23.5 
22 mu_0       0.4       1.63    0.124      0            20.3 
23 mu_0       0.5       1.77    0.406      0            28.3 
24 mu_0       0.6       1.60    0.922      0            23.5 
25 mu_0       0.7       1.39    1.05       0             8.80
26 mu_0       0.8       1.39    0.937      0            19.3 
27 mu_0       0.9       1.23    0.254      0            14.1 
[1] "Total run time was 103.944 seconds"
