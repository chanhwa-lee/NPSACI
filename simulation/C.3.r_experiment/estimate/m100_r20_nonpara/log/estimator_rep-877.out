
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1272"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  8  5  7  6  4  6  4  6 12  9  5  7  8  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04831 0.40898 0.66132 1.00000 4.40329 
[1] "event indicator table: "

  0   1 
785 487 
[1] "treatment indicator table: "

  0   1 
440 832 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 86.305 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.232 0.0655
 2 mu         0.1   0.2 0.246 0.0788
 3 mu         0.1   0.3 0.245 0.0871
 4 mu         0.1   0.4 0.303 0.0972
 5 mu         0.1   0.5 0.352 0.102 
 6 mu         0.2   0.1 0.279 0.0586
 7 mu         0.2   0.2 0.320 0.0768
 8 mu         0.2   0.3 0.341 0.0856
 9 mu         0.2   0.4 0.399 0.0967
10 mu         0.2   0.5 0.469 0.0999
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.676       0.0320 0.00000355     10.2 
 2 mu         0.2      0.936       0.279  0.00151        17.7 
 3 mu         0.3      1.01        0.685  0.0300         10.6 
 4 mu         0.4      1.02        0.903  0.173           3.57
 5 mu         0.5      1.03        1.02   0.408           2.77
 6 mu         0.6      1.01        0.997  0.527           1.63
 7 mu         0.7      0.989       0.970  0.589           1.60
 8 mu         0.8      1.04        0.961  0.291           3.69
 9 mu         0.9      1.19        0.885  0.0305         13.8 
10 mu_1       0.1      0.893       0.112  0.0000198      19.2 
11 mu_1       0.2      1.02        0.560  0.00426        16.6 
12 mu_1       0.3      1.03        0.906  0.0559          6.67
13 mu_1       0.4      1.04        0.989  0.248           3.38
14 mu_1       0.5      1.03        1.03   0.467           2.42
15 mu_1       0.6      1.00        0.993  0.559           1.37
16 mu_1       0.7      0.989       0.964  0.532           1.73
17 mu_1       0.8      1.05        0.952  0.245           4.03
18 mu_1       0.9      1.21        0.864  0.0229         15.3 
19 mu_0       0.1      0.652       0.0203 0.00000174      9.80
20 mu_0       0.2      0.915       0.213  0.000828       18.0 
21 mu_0       0.3      0.996       0.573  0.0189         12.3 
22 mu_0       0.4      1.02        0.857  0.121           4.70
23 mu_0       0.5      1.03        0.969  0.349           3.13
24 mu_0       0.6      1.02        1.03   0.479           2.04
25 mu_0       0.7      0.988       0.986  0.634           1.46
26 mu_0       0.8      0.975       0.961  0.442           2.36
27 mu_0       0.9      1.06        0.959  0.0890          6.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.149    0.0000449  6.55e-15      6.49
 2 mu         0.2      0.543    0.00570    1.53e- 9      8.10
 3 mu         0.3      1.10     0.0720     1.97e- 6      9.39
 4 mu         0.4      1.46     0.275      2.24e- 4     11.8 
 5 mu         0.5      1.48     0.740      8.30e- 3      9.62
 6 mu         0.6      1.43     1.19       1.13e- 1      5.92
 7 mu         0.7      2.08     1.20       2.75e- 2     21.5 
 8 mu         0.8      5.09     0.850      4.72e- 4    122.  
 9 mu         0.9     13.5      0.104      2.33e- 7    564.  
10 mu_1       0.1      0.412    0.000295   6.21e-14     13.0 
11 mu_1       0.2      0.915    0.0177     7.23e- 9      8.44
12 mu_1       0.3      1.38     0.146      6.19e- 6     12.5 
13 mu_1       0.4      1.52     0.456      5.29e- 4     11.8 
14 mu_1       0.5      1.43     0.925      1.57e- 2      7.70
15 mu_1       0.6      1.47     1.18       1.65e- 1      5.23
16 mu_1       0.7      2.39     1.21       1.31e- 2     30.7 
17 mu_1       0.8      5.81     0.703      1.97e- 4    153.  
18 mu_1       0.9     14.4      0.0769     8.65e- 8    627.  
19 mu_0       0.1      0.120    0.0000162  0             5.77
20 mu_0       0.2      0.450    0.00173    0             8.10
21 mu_0       0.3      0.985    0.0271     0             8.36
22 mu_0       0.4      1.41     0.131      0            11.8 
23 mu_0       0.5      1.52     0.467      0            11.5 
24 mu_0       0.6      1.38     0.898      0             7.85
25 mu_0       0.7      1.37     1.16       0             6.19
26 mu_0       0.8      2.19     0.974      0            21.7 
27 mu_0       0.9      5.60     0.293      0           113.  
[1] "Total run time was 90.739 seconds"
