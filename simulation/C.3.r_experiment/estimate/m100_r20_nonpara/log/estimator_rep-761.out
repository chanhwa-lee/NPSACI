
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1196"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 10  4  7  6  8  9  9  7  5  6  5 10  3  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02714 0.35210 0.58606 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
718 478 
[1] "treatment indicator table: "

  0   1 
463 733 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 590
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 88.292 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.367 0.106 
 2 mu         0.1   0.2 0.471 0.167 
 3 mu         0.1   0.3 0.490 0.162 
 4 mu         0.1   0.4 0.583 0.183 
 5 mu         0.1   0.5 0.600 0.179 
 6 mu         0.2   0.1 0.361 0.0657
 7 mu         0.2   0.2 0.451 0.0957
 8 mu         0.2   0.3 0.496 0.0959
 9 mu         0.2   0.4 0.573 0.106 
10 mu         0.2   0.5 0.616 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.970        0.317  0.000336     17.7 
 2 mu         0.2      1.09         0.729  0.0264        9.55
 3 mu         0.3      1.06         0.953  0.175         3.97
 4 mu         0.4      1.04         1.01   0.427         2.39
 5 mu         0.5      1.03         1.02   0.513         1.93
 6 mu         0.6      1.00         1.02   0.415         1.43
 7 mu         0.7      0.984        1.00   0.518         1.27
 8 mu         0.8      0.991        0.985  0.298         1.70
 9 mu         0.9      1.03         0.919  0.0489        3.87
10 mu_1       0.1      1.20         0.713  0.00147      17.9 
11 mu_1       0.2      1.09         0.921  0.0571        6.29
12 mu_1       0.3      1.05         0.996  0.266         2.64
13 mu_1       0.4      1.04         1.01   0.523         2.26
14 mu_1       0.5      1.02         1.01   0.418         1.83
15 mu_1       0.6      0.999        1.02   0.458         1.33
16 mu_1       0.7      0.981        0.985  0.534         1.34
17 mu_1       0.8      0.992        0.980  0.256         1.82
18 mu_1       0.9      1.03         0.914  0.0390        4.07
19 mu_0       0.1      0.944        0.270  0.000206     17.7 
20 mu_0       0.2      1.08         0.651  0.0187       10.5 
21 mu_0       0.3      1.06         0.902  0.136         4.78
22 mu_0       0.4      1.04         1.02   0.363         2.48
23 mu_0       0.5      1.03         1.00   0.544         2.03
24 mu_0       0.6      1.01         1.01   0.350         1.64
25 mu_0       0.7      0.992        1.00   0.480         1.30
26 mu_0       0.8      0.984        1.00   0.464         1.44
27 mu_0       0.9      1.02         0.984  0.138         2.11
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05      0.000343  4.00e-16     54.0 
 2 mu         0.2      1.34      0.0171    1.05e-10     37.4 
 3 mu         0.3      1.39      0.139     1.55e- 7     19.1 
 4 mu         0.4      1.31      0.488     2.75e- 5      8.31
 5 mu         0.5      1.16      0.970     1.52e- 3      6.65
 6 mu         0.6      1.04      1.02      4.06e- 2      3.84
 7 mu         0.7      1.04      1.06      9.80e- 3      2.99
 8 mu         0.8      1.20      0.606     7.48e- 5      8.26
 9 mu         0.9      1.72      0.0666    9.25e- 9     60.0 
10 mu_1       0.1      1.47      0.00229   4.00e-15     54.0 
11 mu_1       0.2      1.36      0.0551    5.24e-10     26.4 
12 mu_1       0.3      1.32      0.292     5.16e- 7     13.6 
13 mu_1       0.4      1.24      0.810     6.87e- 5      6.77
14 mu_1       0.5      1.11      0.937     3.05e- 3      6.26
15 mu_1       0.6      1.02      1.02      3.66e- 2      3.01
16 mu_1       0.7      1.06      1.02      2.75e- 3      3.05
17 mu_1       0.8      1.24      0.495     2.80e- 5      9.58
18 mu_1       0.9      1.77      0.0420    3.08e- 9     66.7 
19 mu_0       0.1      0.998     0.000140  0            54.0 
20 mu_0       0.2      1.33      0.00697   0            42.1 
21 mu_0       0.3      1.41      0.0753    0            21.7 
22 mu_0       0.4      1.36      0.292     0            10.9 
23 mu_0       0.5      1.21      0.782     0             7.04
24 mu_0       0.6      1.05      0.948     0             5.08
25 mu_0       0.7      0.988     0.964     0             2.85
26 mu_0       0.8      1.06      0.958     0             4.16
27 mu_0       0.9      1.32      0.223     0            13.7 
[1] "Total run time was 93.285 seconds"
