
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1226"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  3  4 10  8  8  5  8  6  6  5  6  4  8  8  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01656 0.28837 0.55370 0.94116 5.00000 
[1] "event indicator table: "

  0   1 
737 489 
[1] "treatment indicator table: "

  0   1 
473 753 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 583
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 62.92 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.398 0.126 
 2 mu         0.1   0.2 0.499 0.144 
 3 mu         0.1   0.3 0.558 0.151 
 4 mu         0.1   0.4 0.585 0.155 
 5 mu         0.1   0.5 0.645 0.164 
 6 mu         0.2   0.1 0.371 0.0728
 7 mu         0.2   0.2 0.441 0.0775
 8 mu         0.2   0.3 0.504 0.0755
 9 mu         0.2   0.4 0.531 0.0770
10 mu         0.2   0.5 0.579 0.0815
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17         0.309 0.0000698     17.1 
 2 mu         0.2      1.05         0.780 0.0112         5.87
 3 mu         0.3      1.01         0.967 0.0933         2.61
 4 mu         0.4      1.00         0.985 0.272          1.90
 5 mu         0.5      0.999        0.993 0.514          1.46
 6 mu         0.6      0.997        0.998 0.667          1.39
 7 mu         0.7      1.01         1.01  0.642          1.54
 8 mu         0.8      1.02         0.997 0.308          1.77
 9 mu         0.9      0.973        0.829 0.0881         2.78
10 mu_1       0.1      1.10         0.645 0.000331      10.7 
11 mu_1       0.2      0.997        0.904 0.0268         2.97
12 mu_1       0.3      1.00         0.986 0.168          2.43
13 mu_1       0.4      1.00         1.00  0.382          1.55
14 mu_1       0.5      0.995        1.00  0.571          1.46
15 mu_1       0.6      0.996        0.995 0.681          1.34
16 mu_1       0.7      1.01         0.990 0.517          1.56
17 mu_1       0.8      1.02         1.00  0.246          1.90
18 mu_1       0.9      0.965        0.790 0.0705         2.87
19 mu_0       0.1      1.18         0.251 0.0000408     17.8 
20 mu_0       0.2      1.07         0.685 0.00735        6.86
21 mu_0       0.3      1.01         0.930 0.0613         3.03
22 mu_0       0.4      1.01         0.966 0.198          2.13
23 mu_0       0.5      1.00         0.994 0.408          1.64
24 mu_0       0.6      0.999        1.01  0.541          1.47
25 mu_0       0.7      1.01         1.01  0.680          1.50
26 mu_0       0.8      1.03         1.04  0.558          1.51
27 mu_0       0.9      1.04         1.01  0.246          2.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.69     0.000184   1.48e-18    131.  
 2 mu         0.2      1.42     0.0104     1.55e-12     50.3 
 3 mu         0.3      1.17     0.102      5.16e- 9     11.6 
 4 mu         0.4      1.03     0.399      1.63e- 6      6.42
 5 mu         0.5      0.965    0.795      1.41e- 4      3.39
 6 mu         0.6      0.997    1.02       5.41e- 3      3.41
 7 mu         0.7      1.08     1.17       1.92e- 4      3.29
 8 mu         0.8      1.10     0.695      7.50e- 7      5.27
 9 mu         0.9      1.23     0.0842     5.15e-11     20.8 
10 mu_1       0.1      1.72     0.000972   1.48e-17     87.3 
11 mu_1       0.2      1.33     0.0339     7.76e-12     19.4 
12 mu_1       0.3      1.13     0.224      1.72e- 8      8.08
13 mu_1       0.4      1.01     0.648      4.07e- 6      5.35
14 mu_1       0.5      0.969    0.865      2.82e- 4      3.17
15 mu_1       0.6      1.02     1.05       1.02e- 3      3.29
16 mu_1       0.7      1.10     1.09       1.82e- 5      3.52
17 mu_1       0.8      1.09     0.561      6.25e- 8      5.55
18 mu_1       0.9      1.26     0.0608     3.81e-12     23.1 
19 mu_0       0.1      1.69     0.0000672  0           136.  
20 mu_0       0.2      1.44     0.00452    0            58.7 
21 mu_0       0.3      1.19     0.0444     0            15.5 
22 mu_0       0.4      1.04     0.249      0             7.14
23 mu_0       0.5      0.962    0.596      0             3.95
24 mu_0       0.6      0.959    0.948      0             3.59
25 mu_0       0.7      1.05     1.04       0             2.89
26 mu_0       0.8      1.13     1.04       0             4.16
27 mu_0       0.9      1.04     0.263      0             8.36
[1] "Total run time was 66.479 seconds"
