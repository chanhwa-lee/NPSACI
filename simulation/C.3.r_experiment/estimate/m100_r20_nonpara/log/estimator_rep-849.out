
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1240"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  6  7  7  8  8  4  1  6  6  5  6  7  8  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0428  0.3456  0.6366  1.0000  7.0000 
[1] "event indicator table: "

  0   1 
734 506 
[1] "treatment indicator table: "

  0   1 
412 828 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 109.881 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.414 0.124 
 2 mu         0.1   0.2 0.563 0.159 
 3 mu         0.1   0.3 0.585 0.172 
 4 mu         0.1   0.4 0.615 0.179 
 5 mu         0.1   0.5 0.626 0.183 
 6 mu         0.2   0.1 0.336 0.0961
 7 mu         0.2   0.2 0.485 0.113 
 8 mu         0.2   0.3 0.521 0.123 
 9 mu         0.2   0.4 0.532 0.134 
10 mu         0.2   0.5 0.547 0.144 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.818       0.0971 0.0000000301     21.4 
 2 mu         0.2      0.884       0.432  0.0000562        16.8 
 3 mu         0.3      0.930       0.678  0.00305           8.92
 4 mu         0.4      0.958       0.879  0.0365            7.08
 5 mu         0.5      0.963       0.954  0.144             4.12
 6 mu         0.6      0.980       0.989  0.359             1.60
 7 mu         0.7      0.996       0.988  0.652             1.45
 8 mu         0.8      0.968       0.976  0.392             1.56
 9 mu         0.9      0.898       0.891  0.0605            2.91
10 mu_1       0.1      0.873       0.278  0.000000190      23.8 
11 mu_1       0.2      0.867       0.634  0.000179          9.51
12 mu_1       0.3      0.922       0.869  0.00652           7.27
13 mu_1       0.4      0.949       0.953  0.0592            6.60
14 mu_1       0.5      0.961       0.976  0.212             3.22
15 mu_1       0.6      0.984       1.00   0.463             1.32
16 mu_1       0.7      0.995       0.988  0.527             1.45
17 mu_1       0.8      0.961       0.964  0.327             1.70
18 mu_1       0.9      0.894       0.877  0.0490            3.13
19 mu_0       0.1      0.812       0.0788 0.0000000123     21.1 
20 mu_0       0.2      0.889       0.387  0.0000256        18.6 
21 mu_0       0.3      0.934       0.628  0.00157          11.1 
22 mu_0       0.4      0.964       0.834  0.0210            7.40
23 mu_0       0.5      0.965       0.950  0.0754            5.01
24 mu_0       0.6      0.973       0.989  0.203             2.06
25 mu_0       0.7      0.997       1.01   0.449             1.44
26 mu_0       0.8      0.995       0.990  0.653             1.45
27 mu_0       0.9      0.934       0.947  0.163             1.68
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.82    0.0000326  3.39e-15    143.  
 2 mu         0.2       6.08    0.00349    3.95e-10    237.  
 3 mu         0.3       8.11    0.0519     3.40e- 7    474.  
 4 mu         0.4       6.79    0.318      3.88e- 5    428.  
 5 mu         0.5       3.74    0.660      1.44e- 3    211.  
 6 mu         0.6       1.70    1.07       2.55e- 2     56.3 
 7 mu         0.7       1.14    0.971      2.17e- 2      6.85
 8 mu         0.8       1.35    0.751      4.89e- 4     12.3 
 9 mu         0.9       2.20    0.193      4.30e- 7     64.1 
10 mu_1       0.1       5.52    0.000261   3.20e-14    260.  
11 mu_1       0.2       7.66    0.0113     1.86e- 9    395.  
12 mu_1       0.3       7.98    0.129      1.07e- 6    527.  
13 mu_1       0.4       5.47    0.504      9.16e- 5    356.  
14 mu_1       0.5       2.71    0.926      2.71e- 3    141.  
15 mu_1       0.6       1.36    1.08       4.01e- 2     31.3 
16 mu_1       0.7       1.12    0.855      9.68e- 3      5.38
17 mu_1       0.8       1.44    0.624      1.91e- 4     15.4 
18 mu_1       0.9       2.31    0.142      1.49e- 7     71.2 
19 mu_0       0.1       2.52    0.0000103  0           130.  
20 mu_0       0.2       5.68    0.00146    0           203.  
21 mu_0       0.3       8.16    0.0246     0           451.  
22 mu_0       0.4       7.67    0.132      0           475.  
23 mu_0       0.5       4.78    0.385      0           281.  
24 mu_0       0.6       2.23    0.850      0            93.9 
25 mu_0       0.7       1.17    0.993      0            15.2 
26 mu_0       0.8       1.02    0.873      0             5.01
27 mu_0       0.9       1.19    0.303      0            13.9 
[1] "Total run time was 114.595 seconds"
