
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1275"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  5  8  4  6  5  5  6  7  6  7  8  6  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04578 0.36508 0.61475 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
756 519 
[1] "treatment indicator table: "

  0   1 
469 806 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 95.365 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.524 0.110 
 2 mu         0.1   0.2 0.685 0.135 
 3 mu         0.1   0.3 0.718 0.135 
 4 mu         0.1   0.4 0.776 0.148 
 5 mu         0.1   0.5 0.866 0.172 
 6 mu         0.2   0.1 0.435 0.0669
 7 mu         0.2   0.2 0.583 0.0801
 8 mu         0.2   0.3 0.613 0.0816
 9 mu         0.2   0.4 0.675 0.0962
10 mu         0.2   0.5 0.749 0.111 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.21         0.537   0.00228     11.2 
 2 mu         0.2      1.15         0.968   0.0482       4.09
 3 mu         0.3      1.07         1.02    0.179        2.62
 4 mu         0.4      1.04         1.02    0.372        1.91
 5 mu         0.5      1.00         0.977   0.607        1.58
 6 mu         0.6      0.980        0.970   0.401        1.26
 7 mu         0.7      0.983        1.00    0.463        1.39
 8 mu         0.8      0.989        0.999   0.336        1.52
 9 mu         0.9      0.968        0.983   0.120        2.06
10 mu_1       0.1      1.27         0.833   0.00860      8.10
11 mu_1       0.2      1.10         1.06    0.0932       2.84
12 mu_1       0.3      1.05         1.01    0.251        2.35
13 mu_1       0.4      1.03         0.982   0.417        1.90
14 mu_1       0.5      0.995        0.980   0.488        1.53
15 mu_1       0.6      0.978        0.997   0.411        1.31
16 mu_1       0.7      0.985        1.01    0.423        1.43
17 mu_1       0.8      0.989        1.00    0.295        1.58
18 mu_1       0.9      0.965        0.986   0.0966       2.12
19 mu_0       0.1      1.20         0.472   0.00158     11.8 
20 mu_0       0.2      1.16         0.915   0.0369       4.54
21 mu_0       0.3      1.08         1.04    0.149        2.74
22 mu_0       0.4      1.05         1.02    0.316        1.92
23 mu_0       0.5      1.01         0.983   0.522        1.73
24 mu_0       0.6      0.982        0.973   0.388        1.37
25 mu_0       0.7      0.978        0.982   0.483        1.38
26 mu_0       0.8      0.993        1.01    0.356        1.58
27 mu_0       0.9      0.994        0.971   0.284        1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.30     0.0000308  6.77e-16     73.9 
 2 mu         0.2      1.20     0.00479    8.87e-11     39.9 
 3 mu         0.3      1.11     0.0643     8.74e- 8      9.28
 4 mu         0.4      1.16     0.359      1.16e- 5      7.14
 5 mu         0.5      1.11     0.838      5.17e- 4      5.96
 6 mu         0.6      0.990    0.869      2.74e- 3      4.13
 7 mu         0.7      0.947    1.01       2.80e- 5      2.58
 8 mu         0.8      1.05     0.859      3.72e- 8      4.16
 9 mu         0.9      1.46     0.213      3.59e-13     13.7 
10 mu_1       0.1      1.68     0.000232   6.77e-15     77.8 
11 mu_1       0.2      1.16     0.0168     4.44e-10     21.0 
12 mu_1       0.3      1.15     0.136      2.91e- 7      7.85
13 mu_1       0.4      1.17     0.519      2.91e- 5      7.52
14 mu_1       0.5      1.07     0.829      1.03e- 3      5.96
15 mu_1       0.6      0.975    0.902      4.81e- 4      3.44
16 mu_1       0.7      0.965    1.05       4.22e- 6      2.63
17 mu_1       0.8      1.10     0.764      4.89e- 9      4.89
18 mu_1       0.9      1.51     0.164      4.20e-14     14.3 
19 mu_0       0.1      1.26     0.0000119  0            73.5 
20 mu_0       0.2      1.21     0.00162    0            44.6 
21 mu_0       0.3      1.09     0.0294     0            11.9 
22 mu_0       0.4      1.16     0.207      0             6.89
23 mu_0       0.5      1.14     0.564      0             6.63
24 mu_0       0.6      1.01     0.788      0             5.16
25 mu_0       0.7      0.904    0.798      0             2.61
26 mu_0       0.8      0.887    0.709      0             2.77
27 mu_0       0.9      0.957    0.0849     0             8.05
[1] "Total run time was 100.119 seconds"
