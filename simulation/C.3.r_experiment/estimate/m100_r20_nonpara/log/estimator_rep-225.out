
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1218"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  6  7  3  9  9  6  5  5  6  9  6  6  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0177  0.3032  0.5733  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
740 478 
[1] "treatment indicator table: "

  0   1 
468 750 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.6 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.404 0.129 
 2 mu         0.1   0.2 0.509 0.178 
 3 mu         0.1   0.3 0.525 0.157 
 4 mu         0.1   0.4 0.522 0.132 
 5 mu         0.1   0.5 0.541 0.121 
 6 mu         0.2   0.1 0.350 0.0926
 7 mu         0.2   0.2 0.450 0.128 
 8 mu         0.2   0.3 0.485 0.110 
 9 mu         0.2   0.4 0.498 0.0868
10 mu         0.2   0.5 0.529 0.0754
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.796        0.254 0.0000636      7.98
 2 mu         0.2      0.884        0.785 0.0115         3.67
 3 mu         0.3      0.982        1.01  0.111          2.30
 4 mu         0.4      1.01         1.03  0.305          1.60
 5 mu         0.5      1.01         1.01  0.556          1.60
 6 mu         0.6      1.00         0.997 0.698          1.40
 7 mu         0.7      0.992        0.992 0.678          1.32
 8 mu         0.8      0.980        0.979 0.478          1.71
 9 mu         0.9      1.03         0.978 0.182          3.10
10 mu_1       0.1      0.792        0.551 0.000293       4.66
11 mu_1       0.2      0.948        0.944 0.0271         2.82
12 mu_1       0.3      1.02         0.991 0.208          1.93
13 mu_1       0.4      1.02         1.03  0.422          1.58
14 mu_1       0.5      1.01         1.00  0.614          1.59
15 mu_1       0.6      0.998        1.00  0.702          1.35
16 mu_1       0.7      0.987        0.989 0.641          1.39
17 mu_1       0.8      0.979        0.977 0.402          1.89
18 mu_1       0.9      1.04         0.990 0.152          3.39
19 mu_0       0.1      0.796        0.212 0.0000382      8.85
20 mu_0       0.2      0.868        0.716 0.00757        3.88
21 mu_0       0.3      0.966        0.967 0.0696         2.51
22 mu_0       0.4      1.01         1.03  0.206          1.71
23 mu_0       0.5      1.01         1.02  0.434          1.62
24 mu_0       0.6      1.01         1.00  0.649          1.51
25 mu_0       0.7      1.00         1.01  0.661          1.34
26 mu_0       0.8      0.985        0.989 0.601          1.46
27 mu_0       0.9      0.955        0.944 0.389          2.13
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.69     0.000177   9.91e-15    434.  
 2 mu         0.2      2.06     0.00940    6.50e-10    117.  
 3 mu         0.3      1.27     0.0932     4.27e- 7     18.1 
 4 mu         0.4      1.07     0.355      4.26e- 5      5.94
 5 mu         0.5      1.02     0.718      1.51e- 3      6.16
 6 mu         0.6      1.04     1.03       2.68e- 3      4.44
 7 mu         0.7      1.12     1.19       2.35e- 5      3.08
 8 mu         0.8      1.21     0.888      2.73e- 8      5.11
 9 mu         0.9      1.18     0.120      2.34e-13     18.4 
10 mu_1       0.1      3.18     0.00122    9.91e-14    241.  
11 mu_1       0.2      1.47     0.0313     3.25e- 9     32.5 
12 mu_1       0.3      1.16     0.217      1.42e- 6      8.85
13 mu_1       0.4      1.04     0.605      1.06e- 4      5.55
14 mu_1       0.5      1.03     0.925      3.02e- 3      6.16
15 mu_1       0.6      1.07     1.05       2.48e- 4      3.70
16 mu_1       0.7      1.15     1.24       1.86e- 6      3.30
17 mu_1       0.8      1.22     0.719      1.89e- 9      5.58
18 mu_1       0.9      1.17     0.0910     1.44e-14     20.4 
19 mu_0       0.1      4.86     0.0000474  0           455.  
20 mu_0       0.2      2.21     0.00391    0           138.  
21 mu_0       0.3      1.32     0.0409     0            24.5 
22 mu_0       0.4      1.09     0.186      0             6.94
23 mu_0       0.5      1.01     0.561      0             6.16
24 mu_0       0.6      0.996    0.924      0             5.55
25 mu_0       0.7      1.05     1.07       0             2.63
26 mu_0       0.8      1.17     1.14       0             3.77
27 mu_0       0.9      1.32     0.296      0             8.30
[1] "Total run time was 61.294 seconds"
