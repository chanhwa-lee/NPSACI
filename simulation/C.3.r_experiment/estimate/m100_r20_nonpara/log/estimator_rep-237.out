
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1297"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  3  4  8  8 11  3  5  7  5  5 12  5  9  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02521 0.33082 0.60837 1.00000 6.50437 
[1] "event indicator table: "

  0   1 
747 550 
[1] "treatment indicator table: "

  0   1 
519 778 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 94.475 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.478 0.160 
 2 mu         0.1   0.2 0.478 0.154 
 3 mu         0.1   0.3 0.479 0.158 
 4 mu         0.1   0.4 0.608 0.186 
 5 mu         0.1   0.5 0.602 0.189 
 6 mu         0.2   0.1 0.422 0.110 
 7 mu         0.2   0.2 0.436 0.0966
 8 mu         0.2   0.3 0.451 0.0876
 9 mu         0.2   0.4 0.555 0.103 
10 mu         0.2   0.5 0.557 0.105 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.823       0.0659 0.00000988     21.5 
 2 mu         0.2      0.852       0.436  0.00221         9.69
 3 mu         0.3      0.929       0.791  0.0358          4.36
 4 mu         0.4      0.983       0.927  0.193           2.61
 5 mu         0.5      1.00        0.987  0.455           1.72
 6 mu         0.6      1.01        0.986  0.419           1.38
 7 mu         0.7      1.01        1.01   0.190           1.58
 8 mu         0.8      1.01        1.01   0.0530          3.05
 9 mu         0.9      1.01        0.822  0.00460         6.21
10 mu_1       0.1      0.838       0.232  0.0000503       9.50
11 mu_1       0.2      0.872       0.688  0.00579         4.29
12 mu_1       0.3      0.951       0.893  0.0653          3.24
13 mu_1       0.4      0.992       0.956  0.278           2.22
14 mu_1       0.5      1.01        0.987  0.519           1.61
15 mu_1       0.6      1.01        1.01   0.312           1.43
16 mu_1       0.7      1.01        1.01   0.134           1.72
17 mu_1       0.8      1.01        0.995  0.0354          3.24
18 mu_1       0.9      1.01        0.774  0.00290         6.87
19 mu_0       0.1      0.821       0.0492 0.00000538     23.6 
20 mu_0       0.2      0.847       0.329  0.00131        11.7 
21 mu_0       0.3      0.920       0.711  0.0232          5.61
22 mu_0       0.4      0.977       0.915  0.136           2.88
23 mu_0       0.5      0.998       0.969  0.390           1.84
24 mu_0       0.6      1.00        0.988  0.545           1.52
25 mu_0       0.7      1.00        1.00   0.320           1.45
26 mu_0       0.8      0.999       1.00   0.123           2.30
27 mu_0       0.9      1.01        0.920  0.0198          4.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      42.8     0.0000666  2.05e-17   4084.  
 2 mu         0.2      13.1     0.0109     2.15e-11   1103.  
 3 mu         0.3       3.30    0.105      7.15e- 8    171.  
 4 mu         0.4       1.51    0.373      2.26e- 5     16.6 
 5 mu         0.5       1.22    0.825      1.96e- 3      6.49
 6 mu         0.6       1.16    0.958      2.52e- 2      6.43
 7 mu         0.7       1.35    1.02       2.21e- 4      8.43
 8 mu         0.8       2.04    0.384      2.57e- 7     23.7 
 9 mu         0.9       5.57    0.0409     2.20e-12    249.  
10 mu_1       0.1      25.5     0.000437   2.05e-16   2269.  
11 mu_1       0.2       4.97    0.0356     1.08e-10    306.  
12 mu_1       0.3       1.76    0.222      2.38e- 7     31.6 
13 mu_1       0.4       1.30    0.579      5.64e- 5      8.01
14 mu_1       0.5       1.18    0.965      3.91e- 3      5.68
15 mu_1       0.6       1.19    1.05       2.34e- 3      7.41
16 mu_1       0.7       1.44    0.974      1.76e- 5      9.64
17 mu_1       0.8       2.21    0.301      1.78e- 8     29.6 
18 mu_1       0.9       6.01    0.0237     1.36e-13    277.  
19 mu_0       0.1      44.7     0.0000308  0          4285.  
20 mu_0       0.2      15.1     0.00453    0          1302.  
21 mu_0       0.3       3.97    0.0574     0           231.  
22 mu_0       0.4       1.65    0.266      0            26.1 
23 mu_0       0.5       1.25    0.672      0             7.30
24 mu_0       0.6       1.12    1.00       0             4.94
25 mu_0       0.7       1.14    1.04       0             8.35
26 mu_0       0.8       1.36    0.675      0            12.4 
27 mu_0       0.9       1.66    0.102      0            21.9 
[1] "Total run time was 99.595 seconds"
