
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1279"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  5  5  7  3 12  5  6  5  7 13  5  8  6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0204  0.3052  0.5863  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
757 522 
[1] "treatment indicator table: "

  0   1 
512 767 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 210.229 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.240 0.0621
 2 mu         0.1   0.2 0.428 0.0639
 3 mu         0.1   0.3 0.449 0.0635
 4 mu         0.1   0.4 0.530 0.0748
 5 mu         0.1   0.5 0.518 0.0784
 6 mu         0.2   0.1 0.274 0.0423
 7 mu         0.2   0.2 0.406 0.0400
 8 mu         0.2   0.3 0.441 0.0353
 9 mu         0.2   0.4 0.508 0.0436
10 mu         0.2   0.5 0.506 0.0462
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.877        0.496  0.000898      6.26
 2 mu         0.2      0.924        0.795  0.0431        3.03
 3 mu         0.3      0.959        0.982  0.251         1.98
 4 mu         0.4      0.991        0.964  0.446         1.67
 5 mu         0.5      1.00         1.01   0.570         1.42
 6 mu         0.6      1.00         1.01   0.595         1.49
 7 mu         0.7      0.989        0.982  0.504         1.55
 8 mu         0.8      0.954        0.926  0.239         1.92
 9 mu         0.9      0.907        0.858  0.0195        2.93
10 mu_1       0.1      0.988        0.906  0.00396       4.41
11 mu_1       0.2      0.954        0.917  0.0964        2.70
12 mu_1       0.3      0.981        0.936  0.384         1.84
13 mu_1       0.4      0.999        0.994  0.493         1.67
14 mu_1       0.5      1.00         1.00   0.632         1.51
15 mu_1       0.6      1.00         1.00   0.508         1.57
16 mu_1       0.7      0.982        0.964  0.485         1.51
17 mu_1       0.8      0.946        0.924  0.194         2.00
18 mu_1       0.9      0.902        0.843  0.0145        3.22
19 mu_0       0.1      0.864        0.443  0.000558      6.92
20 mu_0       0.2      0.917        0.763  0.0298        3.12
21 mu_0       0.3      0.950        0.960  0.194         2.16
22 mu_0       0.4      0.986        0.971  0.414         1.67
23 mu_0       0.5      1.00         0.988  0.508         1.53
24 mu_0       0.6      1.01         1.03   0.624         1.51
25 mu_0       0.7      1.01         1.01   0.491         1.66
26 mu_0       0.8      0.987        0.986  0.416         1.59
27 mu_0       0.9      0.955        0.935  0.0644        2.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.919     0.000390  1.55e-14     50.4 
 2 mu         0.2      0.959     0.0270    1.61e- 9     21.8 
 3 mu         0.3      0.970     0.237     1.21e- 6      8.23
 4 mu         0.4      1.02      0.780     1.19e- 4      5.09
 5 mu         0.5      1.05      1.01      3.66e- 3      5.10
 6 mu         0.6      1.07      1.06      7.98e- 3      4.38
 7 mu         0.7      1.17      1.01      2.21e- 4      3.29
 8 mu         0.8      1.57      0.534     1.30e- 6     12.5 
 9 mu         0.9      3.25      0.0413    1.78e-10     82.0 
10 mu_1       0.1      1.14      0.00224   1.39e-13     36.0 
11 mu_1       0.2      0.973     0.0797    7.20e- 9     11.1 
12 mu_1       0.3      0.991     0.491     3.62e- 6      5.06
13 mu_1       0.4      1.04      0.775     2.65e- 4      5.72
14 mu_1       0.5      1.05      1.02      6.55e- 3      4.59
15 mu_1       0.6      1.08      1.04      9.50e- 4      4.47
16 mu_1       0.7      1.21      0.858     2.26e- 5      3.80
17 mu_1       0.8      1.67      0.407     1.16e- 7     15.6 
18 mu_1       0.9      3.47      0.0246    1.42e-11     91.1 
19 mu_0       0.1      0.895     0.000164  0            52.0 
20 mu_0       0.2      0.955     0.0139    0            25.3 
21 mu_0       0.3      0.961     0.128     0             9.62
22 mu_0       0.4      1.02      0.543     0             4.98
23 mu_0       0.5      1.05      0.971     0             5.61
24 mu_0       0.6      1.06      0.948     0             4.26
25 mu_0       0.7      1.09      1.02      0             4.13
26 mu_0       0.8      1.18      0.712     0             5.38
27 mu_0       0.9      1.31      0.0992    0            14.0 
[1] "Total run time was 216.898 seconds"
