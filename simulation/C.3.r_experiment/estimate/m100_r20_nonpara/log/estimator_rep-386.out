
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1215"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4  6  7 10  8  9  8  4  5  5  4  5  1 11  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03352 0.32965 0.60664 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
724 491 
[1] "treatment indicator table: "

  0   1 
455 760 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 567
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 75.901 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.366 0.130 
 2 mu         0.1   0.2 0.406 0.166 
 3 mu         0.1   0.3 0.405 0.136 
 4 mu         0.1   0.4 0.434 0.132 
 5 mu         0.1   0.5 0.407 0.136 
 6 mu         0.2   0.1 0.338 0.110 
 7 mu         0.2   0.2 0.395 0.148 
 8 mu         0.2   0.3 0.408 0.112 
 9 mu         0.2   0.4 0.439 0.0920
10 mu         0.2   0.5 0.429 0.0917
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.711       0.0692 0.00000457     15.7 
 2 mu         0.2      0.831       0.360  0.000755       12.6 
 3 mu         0.3      0.863       0.657  0.0119          5.70
 4 mu         0.4      0.907       0.869  0.0697          2.56
 5 mu         0.5      0.947       0.951  0.229           1.91
 6 mu         0.6      0.969       0.973  0.405           1.53
 7 mu         0.7      0.964       0.964  0.170           1.59
 8 mu         0.8      0.917       0.949  0.0332          2.10
 9 mu         0.9      0.819       0.760  0.000824        3.09
10 mu_1       0.1      0.944       0.226  0.0000286      19.0 
11 mu_1       0.2      0.876       0.646  0.00240         8.79
12 mu_1       0.3      0.888       0.828  0.0258          3.18
13 mu_1       0.4      0.927       0.936  0.116           2.18
14 mu_1       0.5      0.958       0.968  0.309           1.67
15 mu_1       0.6      0.971       0.944  0.346           1.47
16 mu_1       0.7      0.957       0.962  0.139           1.64
17 mu_1       0.8      0.905       0.952  0.0251          2.19
18 mu_1       0.9      0.810       0.723  0.000569        3.27
19 mu_0       0.1      0.686       0.0512 0.00000190     16.0 
20 mu_0       0.2      0.820       0.303  0.000344       13.5 
21 mu_0       0.3      0.853       0.596  0.00599         6.78
22 mu_0       0.4      0.894       0.817  0.0390          2.81
23 mu_0       0.5      0.936       0.945  0.143           2.15
24 mu_0       0.6      0.967       0.967  0.325           1.67
25 mu_0       0.7      0.980       0.956  0.241           1.49
26 mu_0       0.8      0.964       0.972  0.0654          1.81
27 mu_0       0.9      0.894       0.867  0.00312         2.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      82.4     0.000200   4.09e-14    8146. 
 2 mu         0.2      58.1     0.0154     2.68e- 9    5644. 
 3 mu         0.3      27.4     0.0998     1.76e- 6    2545. 
 4 mu         0.4      10.1     0.348      1.76e- 4     848. 
 5 mu         0.5       3.46    0.788      5.62e- 3     205. 
 6 mu         0.6       1.74    0.913      2.46e- 2      33.1
 7 mu         0.7       1.89    1.09       1.21e- 3      36.4
 8 mu         0.8       2.59    0.948      1.60e- 5      80.0
 9 mu         0.9       3.01    0.172      8.78e- 9      75.8
10 mu_1       0.1      83.0     0.00128    4.09e-13    8146. 
11 mu_1       0.2      30.2     0.0476     1.34e- 8    2822. 
12 mu_1       0.3      10.3     0.266      5.87e- 6     848. 
13 mu_1       0.4       3.65    0.541      4.39e- 4     212. 
14 mu_1       0.5       1.75    0.869      9.92e- 3      41.1
15 mu_1       0.6       1.52    1.02       3.41e- 3      11.9
16 mu_1       0.7       2.01    1.01       1.44e- 4      43.4
17 mu_1       0.8       2.70    0.836      1.67e- 6      83.4
18 mu_1       0.9       3.06    0.127      8.13e-10      84.2
19 mu_0       0.1      82.3     0.0000707  0           8146. 
20 mu_0       0.2      65.1     0.00527    0           6350. 
21 mu_0       0.3      34.7     0.0387     0           3273. 
22 mu_0       0.4      14.5     0.193      0           1271. 
23 mu_0       0.5       5.16    0.707      0            370. 
24 mu_0       0.6       2.07    0.738      0             74.4
25 mu_0       0.7       1.63    0.880      0             20.2
26 mu_0       0.8       2.15    0.829      0             66.7
27 mu_0       0.9       2.55    0.222      0             97.6
[1] "Total run time was 79.771 seconds"
