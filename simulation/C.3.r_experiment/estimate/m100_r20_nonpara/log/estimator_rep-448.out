
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1235"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
13  4  2  8 10  5  4  5  5  5  5  8  4  5 12  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02453 0.33760 0.60814 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
719 516 
[1] "treatment indicator table: "

  0   1 
509 726 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.283 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.441 0.142 
 2 mu         0.1   0.2 0.529 0.165 
 3 mu         0.1   0.3 0.625 0.181 
 4 mu         0.1   0.4 0.759 0.204 
 5 mu         0.1   0.5 0.772 0.204 
 6 mu         0.2   0.1 0.356 0.0914
 7 mu         0.2   0.2 0.427 0.0975
 8 mu         0.2   0.3 0.500 0.0952
 9 mu         0.2   0.4 0.585 0.108 
10 mu         0.2   0.5 0.601 0.105 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.137 0.0000551     26.8 
 2 mu         0.2      0.887        0.611 0.00984       10.5 
 3 mu         0.3      0.903        0.854 0.116          3.95
 4 mu         0.4      0.958        0.963 0.363          1.78
 5 mu         0.5      0.990        0.988 0.642          1.42
 6 mu         0.6      1.01         0.995 0.762          1.52
 7 mu         0.7      1.01         1.01  0.507          1.62
 8 mu         0.8      0.978        0.937 0.166          3.01
 9 mu         0.9      0.884        0.748 0.0126         7.16
10 mu_1       0.1      0.756        0.332 0.000254       9.21
11 mu_1       0.2      0.810        0.799 0.0232         3.69
12 mu_1       0.3      0.910        0.910 0.188          1.82
13 mu_1       0.4      0.972        0.972 0.448          1.72
14 mu_1       0.5      0.998        0.985 0.723          1.48
15 mu_1       0.6      1.01         1.00  0.716          1.57
16 mu_1       0.7      1.01         1.01  0.425          1.62
17 mu_1       0.8      0.970        0.922 0.128          3.33
18 mu_1       0.9      0.875        0.703 0.00887        7.44
19 mu_0       0.1      1.08         0.108 0.0000330     29.4 
20 mu_0       0.2      0.906        0.530 0.00651       12.8 
21 mu_0       0.3      0.900        0.809 0.0807         5.21
22 mu_0       0.4      0.948        0.934 0.273          2.20
23 mu_0       0.5      0.981        0.980 0.538          1.52
24 mu_0       0.6      1.00         0.989 0.756          1.50
25 mu_0       0.7      1.02         1.02  0.681          1.61
26 mu_0       0.8      1.01         1.01  0.317          1.74
27 mu_0       0.9      0.961        0.939 0.0460         4.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     21.0       0.000378  4.64e-14   1979.  
 2 mu         0.2     11.2       0.0195    4.80e- 9    950.  
 3 mu         0.3      3.53      0.132     3.62e- 6    193.  
 4 mu         0.4      1.49      0.552     3.54e- 4     21.4 
 5 mu         0.5      1.08      0.973     1.09e- 2      3.81
 6 mu         0.6      1.00      0.952     3.26e- 2      2.78
 7 mu         0.7      1.15      0.877     2.50e- 4      7.69
 8 mu         0.8      1.76      0.315     2.21e- 7     49.8 
 9 mu         0.9      3.99      0.0335    1.07e-12    259.  
10 mu_1       0.1     21.8       0.00199   4.15e-13   1979.  
11 mu_1       0.2      6.59      0.0639    2.15e- 8    475.  
12 mu_1       0.3      2.06      0.295     1.08e- 5     64.4 
13 mu_1       0.4      1.18      0.762     7.92e- 4      8.69
14 mu_1       0.5      1.00      0.954     1.95e- 2      2.66
15 mu_1       0.6      1.01      0.945     5.44e- 3      2.92
16 mu_1       0.7      1.23      0.708     3.58e- 5     11.0 
17 mu_1       0.8      1.95      0.211     2.76e- 8     62.3 
18 mu_1       0.9      4.31      0.0179    1.19e-13    288.  
19 mu_0       0.1     20.9       0.000157  0          1979.  
20 mu_0       0.2     12.4       0.00675   0          1069.  
21 mu_0       0.3      4.17      0.0793    0           248.  
22 mu_0       0.4      1.70      0.366     0            32.1 
23 mu_0       0.5      1.15      0.827     0             5.71
24 mu_0       0.6      0.992     1.03      0             2.56
25 mu_0       0.7      0.956     0.846     0             2.99
26 mu_0       0.8      1.03      0.474     0             6.56
27 mu_0       0.9      1.04      0.0544    0            10.4 
[1] "Total run time was 56.406 seconds"
