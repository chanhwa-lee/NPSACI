
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1335"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  6  3  1  7  7  5  2  6  4 10 10  7 10  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04963 0.42391 0.65387 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
805 530 
[1] "treatment indicator table: "

  0   1 
445 890 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.975 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.398 0.119 
 2 mu         0.1   0.2 0.507 0.132 
 3 mu         0.1   0.3 0.641 0.155 
 4 mu         0.1   0.4 0.706 0.171 
 5 mu         0.1   0.5 0.797 0.196 
 6 mu         0.2   0.1 0.303 0.0599
 7 mu         0.2   0.2 0.399 0.0596
 8 mu         0.2   0.3 0.539 0.0760
 9 mu         0.2   0.4 0.597 0.0854
10 mu         0.2   0.5 0.660 0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.27         0.279 0.0000103      24.5 
 2 mu         0.2      1.11         0.638 0.00209         8.48
 3 mu         0.3      0.996        0.825 0.0253          3.71
 4 mu         0.4      0.995        0.967 0.111           2.48
 5 mu         0.5      1.03         1.02  0.281           1.87
 6 mu         0.6      1.05         1.03  0.441           1.75
 7 mu         0.7      1.03         0.988 0.601           1.83
 8 mu         0.8      0.998        0.980 0.374           1.92
 9 mu         0.9      0.977        0.962 0.157           2.35
10 mu_1       0.1      1.34         0.561 0.0000581      17.4 
11 mu_1       0.2      1.05         0.800 0.00576         4.44
12 mu_1       0.3      0.984        0.901 0.0474          3.32
13 mu_1       0.4      1.01         1.02  0.162           2.03
14 mu_1       0.5      1.05         1.03  0.351           1.93
15 mu_1       0.6      1.05         1.01  0.480           1.66
16 mu_1       0.7      1.02         0.981 0.556           1.84
17 mu_1       0.8      0.993        0.953 0.353           2.01
18 mu_1       0.9      0.975        0.960 0.143           2.43
19 mu_0       0.1      1.27         0.231 0.00000495     25.8 
20 mu_0       0.2      1.13         0.595 0.00118         9.48
21 mu_0       0.3      1.00         0.799 0.0158          3.88
22 mu_0       0.4      0.984        0.936 0.0770          2.78
23 mu_0       0.5      1.02         1.00  0.211           1.80
24 mu_0       0.6      1.05         1.05  0.383           1.88
25 mu_0       0.7      1.04         1.01  0.598           1.80
26 mu_0       0.8      1.02         0.985 0.460           1.81
27 mu_0       0.9      0.990        0.917 0.284           2.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.53    0.000116   8.69e-19    134.  
 2 mu         0.2       2.31    0.00710    9.11e-13    130.  
 3 mu         0.3       2.44    0.104      3.03e- 9     59.0 
 4 mu         0.4       2.15    0.455      9.55e- 7     42.6 
 5 mu         0.5       1.69    0.909      8.28e- 5     22.8 
 6 mu         0.6       1.40    0.978      2.55e- 3      7.38
 7 mu         0.7       1.31    1.10       1.66e- 3      6.26
 8 mu         0.8       1.63    0.975      1.46e- 5     12.3 
 9 mu         0.9       3.51    0.146      1.67e- 9     99.3 
10 mu_1       0.1       2.44    0.000788   8.69e-18    191.  
11 mu_1       0.2       2.51    0.0260     4.55e-12     93.0 
12 mu_1       0.3       2.44    0.240      1.01e- 8     44.4 
13 mu_1       0.4       2.03    0.747      2.39e- 6     39.3 
14 mu_1       0.5       1.58    0.981      1.66e- 4     16.8 
15 mu_1       0.6       1.34    0.991      4.26e- 3      7.77
16 mu_1       0.7       1.31    1.15       5.59e- 4      6.28
17 mu_1       0.8       1.73    0.779      4.28e- 6     13.9 
18 mu_1       0.9       3.73    0.101      4.65e-10    110.  
19 mu_0       0.1       1.43    0.0000410  0           127.  
20 mu_0       0.2       2.26    0.00275    0           139.  
21 mu_0       0.3       2.44    0.0427     0            72.2 
22 mu_0       0.4       2.22    0.280      0            44.9 
23 mu_0       0.5       1.80    0.647      0            28.8 
24 mu_0       0.6       1.49    0.854      0             9.57
25 mu_0       0.7       1.32    0.955      0             7.69
26 mu_0       0.8       1.27    1.02       0             6.20
27 mu_0       0.9       1.56    0.235      0            18.1 
[1] "Total run time was 62.548 seconds"
