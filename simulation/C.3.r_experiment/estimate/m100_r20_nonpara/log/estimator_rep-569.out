
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1331"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  5  5  6  4  8  4  8 10  5  7  6  5  7 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03016 0.33605 0.57669 0.97287 4.00000 
[1] "event indicator table: "

  0   1 
797 534 
[1] "treatment indicator table: "

  0   1 
490 841 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 690
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 81.684 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.429 0.0902
 2 mu         0.1   0.2 0.502 0.0998
 3 mu         0.1   0.3 0.510 0.111 
 4 mu         0.1   0.4 0.665 0.195 
 5 mu         0.1   0.5 0.682 0.196 
 6 mu         0.2   0.1 0.346 0.0442
 7 mu         0.2   0.2 0.419 0.0510
 8 mu         0.2   0.3 0.450 0.0585
 9 mu         0.2   0.4 0.542 0.0945
10 mu         0.2   0.5 0.578 0.0949
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.378 0.0000695     10.4 
 2 mu         0.2      0.977        0.816 0.0116         6.37
 3 mu         0.3      0.974        0.942 0.134          2.62
 4 mu         0.4      1.00         0.979 0.438          1.75
 5 mu         0.5      1.03         1.03  0.567          1.81
 6 mu         0.6      1.02         1.01  0.724          1.33
 7 mu         0.7      1.01         1.01  0.612          1.46
 8 mu         0.8      0.983        0.992 0.329          1.48
 9 mu         0.9      0.897        0.892 0.0676         1.89
10 mu_1       0.1      0.980        0.767 0.000317      11.2 
11 mu_1       0.2      0.989        0.912 0.0272         4.16
12 mu_1       0.3      0.988        0.935 0.217          2.00
13 mu_1       0.4      1.01         1.01  0.540          1.76
14 mu_1       0.5      1.03         1.01  0.594          1.75
15 mu_1       0.6      1.02         1.03  0.685          1.42
16 mu_1       0.7      1.01         1.01  0.595          1.43
17 mu_1       0.8      0.975        0.973 0.305          1.47
18 mu_1       0.9      0.888        0.897 0.0532         1.95
19 mu_0       0.1      1.06         0.336 0.0000420     10.4 
20 mu_0       0.2      0.974        0.771 0.00774        6.92
21 mu_0       0.3      0.968        0.903 0.0991         2.93
22 mu_0       0.4      0.992        0.964 0.369          1.85
23 mu_0       0.5      1.02         1.02  0.527          1.87
24 mu_0       0.6      1.03         1.00  0.578          1.44
25 mu_0       0.7      1.02         1.03  0.607          1.53
26 mu_0       0.8      1.01         1.01  0.424          1.52
27 mu_0       0.9      0.979        0.989 0.177          1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.366    0.000119   3.33e-18     10.5 
 2 mu         0.2      0.770    0.0134     1.75e-12     10.3 
 3 mu         0.3      1.10     0.112      3.87e- 9      7.60
 4 mu         0.4      1.20     0.419      9.15e- 7      5.50
 5 mu         0.5      1.15     0.875      6.35e- 5      4.83
 6 mu         0.6      1.11     0.981      2.03e- 3      4.73
 7 mu         0.7      1.09     0.971      1.34e- 3      3.97
 8 mu         0.8      1.06     0.774      5.97e- 6      4.28
 9 mu         0.9      1.17     0.0800     3.28e-10      9.29
10 mu_1       0.1      0.703    0.000636   3.33e-17     15.0 
11 mu_1       0.2      1.00     0.0442     8.73e-12      8.94
12 mu_1       0.3      1.18     0.260      1.29e- 8      6.91
13 mu_1       0.4      1.18     0.670      2.29e- 6      4.82
14 mu_1       0.5      1.12     1.02       1.27e- 4      5.27
15 mu_1       0.6      1.09     0.977      3.38e- 3      4.30
16 mu_1       0.7      1.08     0.976      4.79e- 4      4.15
17 mu_1       0.8      1.06     0.621      1.87e- 6      4.76
18 mu_1       0.9      1.19     0.0573     9.12e-11     10.3 
19 mu_0       0.1      0.328    0.0000586  0             9.97
20 mu_0       0.2      0.713    0.00492    0            11.1 
21 mu_0       0.3      1.06     0.0429     0             8.51
22 mu_0       0.4      1.21     0.227      0             6.36
23 mu_0       0.5      1.19     0.802      0             4.39
24 mu_0       0.6      1.13     0.971      0             5.37
25 mu_0       0.7      1.10     1.03       0             4.29
26 mu_0       0.8      1.07     0.811      0             4.54
27 mu_0       0.9      1.02     0.152      0             7.83
[1] "Total run time was 85.848 seconds"
