
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1235"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  5  6  9  6  4  1  5  7 10  4  7  2 11  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05445 0.45114 0.63949 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
768 467 
[1] "treatment indicator table: "

  0   1 
446 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 75.961 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.319 0.0475
 2 mu         0.1   0.2 0.414 0.0622
 3 mu         0.1   0.3 0.424 0.0654
 4 mu         0.1   0.4 0.512 0.0869
 5 mu         0.1   0.5 0.517 0.0885
 6 mu         0.2   0.1 0.297 0.0356
 7 mu         0.2   0.2 0.371 0.0452
 8 mu         0.2   0.3 0.408 0.0460
 9 mu         0.2   0.4 0.471 0.0523
10 mu         0.2   0.5 0.482 0.0530
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.621  0.000258      5.65
 2 mu         0.2      0.994        0.919  0.0231        2.75
 3 mu         0.3      0.999        0.941  0.170         2.53
 4 mu         0.4      1.00         0.964  0.329         2.01
 5 mu         0.5      0.996        1.01   0.446         1.47
 6 mu         0.6      0.989        0.979  0.629         1.37
 7 mu         0.7      0.990        0.993  0.485         1.52
 8 mu         0.8      0.997        1.01   0.506         1.38
 9 mu         0.9      1.02         0.992  0.404         2.06
10 mu_1       0.1      1.04         1.00   0.00121       3.29
11 mu_1       0.2      0.978        0.916  0.0544        2.70
12 mu_1       0.3      0.994        0.956  0.185         2.41
13 mu_1       0.4      0.996        1.02   0.403         1.83
14 mu_1       0.5      0.989        0.987  0.483         1.37
15 mu_1       0.6      0.988        0.970  0.518         1.45
16 mu_1       0.7      0.991        0.983  0.477         1.51
17 mu_1       0.8      1.00         1.02   0.481         1.38
18 mu_1       0.9      1.02         0.991  0.386         2.14
19 mu_0       0.1      1.01         0.555  0.000151      5.98
20 mu_0       0.2      0.997        0.936  0.0152        2.99
21 mu_0       0.3      1.00         0.928  0.127         2.59
22 mu_0       0.4      1.01         0.982  0.278         2.12
23 mu_0       0.5      1.00         1.00   0.410         1.60
24 mu_0       0.6      0.991        1.01   0.553         1.36
25 mu_0       0.7      0.986        0.975  0.505         1.54
26 mu_0       0.8      0.986        1.01   0.480         1.49
27 mu_0       0.9      1.01         1.00   0.312         1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.590    0.0000443  2.72e-17     33.5 
 2 mu         0.2      0.821    0.00542    7.13e-12     11.5 
 3 mu         0.3      1.06     0.0580     1.05e- 8      9.73
 4 mu         0.4      1.16     0.302      1.87e- 6      5.26
 5 mu         0.5      1.11     0.804      1.04e- 4      3.79
 6 mu         0.6      0.965    0.930      1.05e- 3      2.81
 7 mu         0.7      0.868    0.760      1.63e- 5      2.33
 8 mu         0.8      0.903    0.859      4.27e- 8      2.86
 9 mu         0.9      1.05     0.202      1.46e-12      6.26
10 mu_1       0.1      0.861    0.000384   2.72e-16     20.9 
11 mu_1       0.2      1.06     0.0194     3.56e-11     12.6 
12 mu_1       0.3      1.17     0.136      3.51e- 8      7.49
13 mu_1       0.4      1.15     0.522      4.67e- 6      4.58
14 mu_1       0.5      1.05     0.838      2.07e- 4      3.69
15 mu_1       0.6      0.920    0.868      1.09e- 4      2.77
16 mu_1       0.7      0.864    0.751      1.46e- 6      2.30
17 mu_1       0.8      0.926    0.727      3.33e- 9      2.90
18 mu_1       0.9      1.06     0.159      1.02e-13      6.57
19 mu_0       0.1      0.559    0.0000103  0            34.9 
20 mu_0       0.2      0.761    0.00192    0            13.4 
21 mu_0       0.3      1.01     0.0270     0            10.7 
22 mu_0       0.4      1.17     0.171      0             6.33
23 mu_0       0.5      1.17     0.521      0             4.34
24 mu_0       0.6      1.03     0.897      0             3.19
25 mu_0       0.7      0.879    0.801      0             2.75
26 mu_0       0.8      0.815    0.621      0             2.68
27 mu_0       0.9      0.890    0.0958     0             4.17
[1] "Total run time was 79.596 seconds"
