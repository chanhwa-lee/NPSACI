
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1312"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  3  5  8  5  7  8  2  5  7  6  6 14 10  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01464 0.29242 0.57078 0.97554 4.00000 
[1] "event indicator table: "

  0   1 
792 520 
[1] "treatment indicator table: "

  0   1 
514 798 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 682
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 78.503 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.465 0.0961
 2 mu         0.1   0.2 0.551 0.104 
 3 mu         0.1   0.3 0.602 0.104 
 4 mu         0.1   0.4 0.623 0.106 
 5 mu         0.1   0.5 0.637 0.109 
 6 mu         0.2   0.1 0.374 0.0589
 7 mu         0.2   0.2 0.448 0.0598
 8 mu         0.2   0.3 0.510 0.0604
 9 mu         0.2   0.4 0.533 0.0604
10 mu         0.2   0.5 0.548 0.0594
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.964        0.343 0.0000118       9.96
 2 mu         0.2      0.876        0.841 0.00383         3.31
 3 mu         0.3      0.904        0.914 0.0631          1.75
 4 mu         0.4      0.960        0.950 0.290           1.75
 5 mu         0.5      0.997        0.996 0.483           1.81
 6 mu         0.6      1.02         1.02  0.660           1.50
 7 mu         0.7      1.03         1.02  0.656           1.56
 8 mu         0.8      1.05         1.03  0.449           1.97
 9 mu         0.9      1.05         0.955 0.184           2.64
10 mu_1       0.1      0.879        0.595 0.0000588       5.94
11 mu_1       0.2      0.880        0.873 0.00965         1.83
12 mu_1       0.3      0.942        0.954 0.108           1.86
13 mu_1       0.4      0.989        0.991 0.366           1.94
14 mu_1       0.5      1.01         1.02  0.523           1.70
15 mu_1       0.6      1.02         1.01  0.722           1.50
16 mu_1       0.7      1.04         1.04  0.624           1.66
17 mu_1       0.8      1.05         1.02  0.422           2.00
18 mu_1       0.9      1.05         0.957 0.161           2.77
19 mu_0       0.1      0.974        0.291 0.00000652     10.4 
20 mu_0       0.2      0.875        0.828 0.00237         3.80
21 mu_0       0.3      0.888        0.872 0.0439          1.71
22 mu_0       0.4      0.940        0.924 0.226           1.79
23 mu_0       0.5      0.984        0.974 0.378           1.92
24 mu_0       0.6      1.01         1.02  0.564           1.49
25 mu_0       0.7      1.03         1.01  0.695           1.47
26 mu_0       0.8      1.05         1.03  0.508           1.86
27 mu_0       0.9      1.04         1.02  0.332           2.22
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.98     0.000135   6.56e-16     70.0 
 2 mu         0.2      2.26     0.0125     1.53e-10     40.6 
 3 mu         0.3      1.81     0.118      1.98e- 7     26.6 
 4 mu         0.4      1.44     0.458      3.01e- 5     16.1 
 5 mu         0.5      1.17     0.772      1.12e- 3      9.40
 6 mu         0.6      1.02     0.919      1.90e- 2      3.44
 7 mu         0.7      1.04     1.03       5.38e- 4      3.08
 8 mu         0.8      1.25     0.739      2.75e- 6      5.16
 9 mu         0.9      1.69     0.108      1.97e-10     18.1 
10 mu_1       0.1      2.70     0.000997   6.22e-15     62.6 
11 mu_1       0.2      2.06     0.0436     7.25e-10     33.5 
12 mu_1       0.3      1.57     0.287      6.25e- 7     19.7 
13 mu_1       0.4      1.31     0.706      7.12e- 5     14.1 
14 mu_1       0.5      1.11     0.948      2.24e- 3      7.52
15 mu_1       0.6      1.01     1.01       5.59e- 3      3.37
16 mu_1       0.7      1.07     1.01       1.36e- 4      3.52
17 mu_1       0.8      1.30     0.574      6.07e- 7      5.76
18 mu_1       0.9      1.73     0.0787     4.60e-11     19.4 
19 mu_0       0.1      1.90     0.0000545  0            71.2 
20 mu_0       0.2      2.31     0.00513    0            44.0 
21 mu_0       0.3      1.92     0.0608     0            29.5 
22 mu_0       0.4      1.53     0.275      0            20.8 
23 mu_0       0.5      1.24     0.605      0            11.3 
24 mu_0       0.6      1.03     0.873      0             4.16
25 mu_0       0.7      0.979    0.924      0             2.94
26 mu_0       0.8      1.09     0.789      0             5.16
27 mu_0       0.9      1.35     0.177      0            10.0 
[1] "Total run time was 82.783 seconds"
