
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1322"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  4  4  3  6  6  7  6  4  5 11  7  8 11  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0566  0.3732  0.6436  1.0000  4.6932 
[1] "event indicator table: "

  0   1 
788 534 
[1] "treatment indicator table: "

  0   1 
479 843 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.52 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.261 0.0637
 2 mu         0.1   0.2 0.298 0.0720
 3 mu         0.1   0.3 0.309 0.0821
 4 mu         0.1   0.4 0.416 0.0825
 5 mu         0.1   0.5 0.420 0.0882
 6 mu         0.2   0.1 0.331 0.0428
 7 mu         0.2   0.2 0.399 0.0509
 8 mu         0.2   0.3 0.435 0.0547
 9 mu         0.2   0.4 0.514 0.0511
10 mu         0.2   0.5 0.534 0.0544
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.782        0.234  0.000178      7.07
 2 mu         0.2      1.03         0.755  0.0172        4.66
 3 mu         0.3      1.12         1.06   0.139         3.24
 4 mu         0.4      1.12         1.10   0.368         2.17
 5 mu         0.5      1.07         1.05   0.479         1.87
 6 mu         0.6      1.02         0.999  0.690         1.64
 7 mu         0.7      0.976        0.981  0.666         1.27
 8 mu         0.8      0.951        0.946  0.509         1.46
 9 mu         0.9      0.943        0.870  0.171         2.22
10 mu_1       0.1      1.00         0.584  0.000805      6.64
11 mu_1       0.2      1.14         0.991  0.0402        4.05
12 mu_1       0.3      1.15         1.12   0.237         2.97
13 mu_1       0.4      1.11         1.07   0.410         1.96
14 mu_1       0.5      1.05         1.03   0.518         1.92
15 mu_1       0.6      1.00         0.991  0.691         1.52
16 mu_1       0.7      0.966        0.954  0.657         1.28
17 mu_1       0.8      0.947        0.948  0.446         1.48
18 mu_1       0.9      0.942        0.859  0.151         2.31
19 mu_0       0.1      0.757        0.189  0.000108      7.81
20 mu_0       0.2      0.999        0.683  0.0115        4.93
21 mu_0       0.3      1.11         1.03   0.0965        3.59
22 mu_0       0.4      1.13         1.11   0.294         2.43
23 mu_0       0.5      1.10         1.05   0.440         1.95
24 mu_0       0.6      1.04         1.01   0.599         1.83
25 mu_0       0.7      0.999        1.01   0.686         1.30
26 mu_0       0.8      0.966        0.969  0.593         1.36
27 mu_0       0.9      0.952        0.969  0.325         2.06
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.963   0.0000178   2.50e-15     42.5 
 2 mu         0.2      1.95    0.00214     5.17e-10     37.9 
 3 mu         0.3      2.21    0.0502      5.29e- 7     50.7 
 4 mu         0.4      1.75    0.273       6.03e- 5     28.8 
 5 mu         0.5      1.28    0.772       2.23e- 3      8.22
 6 mu         0.6      1.05    0.982       3.96e- 2      3.94
 7 mu         0.7      1.01    0.897       1.95e- 3      3.35
 8 mu         0.8      1.16    0.941       8.69e- 6      4.44
 9 mu         0.9      1.31    0.207       4.78e-10     11.0 
10 mu_1       0.1      1.68    0.000117    2.25e-14     47.2 
11 mu_1       0.2      2.30    0.00879     2.33e- 9     52.6 
12 mu_1       0.3      2.09    0.111       1.67e- 6     47.0 
13 mu_1       0.4      1.52    0.466       1.42e- 4     20.0 
14 mu_1       0.5      1.15    0.848       4.22e- 3      4.86
15 mu_1       0.6      1.01    0.844       2.82e- 2      4.15
16 mu_1       0.7      1.03    0.967       6.97e- 4      3.32
17 mu_1       0.8      1.19    0.773       2.72e- 6      4.94
18 mu_1       0.9      1.31    0.167       1.33e-10     11.4 
19 mu_0       0.1      0.882   0.00000255  0            42.0 
20 mu_0       0.2      1.86    0.000854    0            36.8 
21 mu_0       0.3      2.27    0.0221      0            52.3 
22 mu_0       0.4      1.91    0.139       0            34.7 
23 mu_0       0.5      1.40    0.563       0            11.9 
24 mu_0       0.6      1.10    0.843       0             3.63
25 mu_0       0.7      0.975   0.792       0             4.11
26 mu_0       0.8      1.02    0.860       0             4.08
27 mu_0       0.9      1.30    0.260       0             7.34
[1] "Total run time was 69.446 seconds"
