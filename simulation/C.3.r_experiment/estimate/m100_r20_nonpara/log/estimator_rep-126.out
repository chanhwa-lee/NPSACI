
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1199"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3 10  7  7 12  6  6  4  7  3  5  6 10  6  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04545 0.37067 0.62868 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
667 532 
[1] "treatment indicator table: "

  0   1 
435 764 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.112 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.168 0.104
 2 mu         0.1   0.2 0.231 0.125
 3 mu         0.1   0.3 0.356 0.171
 4 mu         0.1   0.4 0.485 0.192
 5 mu         0.1   0.5 0.468 0.193
 6 mu         0.2   0.1 0.246 0.107
 7 mu         0.2   0.2 0.330 0.129
 8 mu         0.2   0.3 0.468 0.173
 9 mu         0.2   0.4 0.607 0.195
10 mu         0.2   0.5 0.603 0.197
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.588       0.0411 0.00000191      26.2 
 2 mu         0.2      0.874       0.231  0.000864        28.8 
 3 mu         0.3      0.996       0.585  0.0202          15.2 
 4 mu         0.4      1.02        0.885  0.132            5.77
 5 mu         0.5      1.01        1.00   0.388            2.40
 6 mu         0.6      0.997       1.00   0.742            1.26
 7 mu         0.7      0.985       0.984  0.591            1.36
 8 mu         0.8      0.953       0.930  0.264            2.11
 9 mu         0.9      0.880       0.627  0.0384           4.62
10 mu_1       0.1      0.880       0.137  0.0000102       40.3 
11 mu_1       0.2      0.989       0.455  0.00237         22.3 
12 mu_1       0.3      1.02        0.816  0.0380           8.33
13 mu_1       0.4      1.02        0.984  0.192            4.37
14 mu_1       0.5      1.00        1.01   0.481            1.71
15 mu_1       0.6      0.994       0.986  0.801            1.28
16 mu_1       0.7      0.982       0.974  0.499            1.52
17 mu_1       0.8      0.949       0.916  0.224            2.27
18 mu_1       0.9      0.876       0.588  0.0305           4.78
19 mu_0       0.1      0.556       0.0279 0.000000983     24.6 
20 mu_0       0.2      0.845       0.173  0.000487        30.4 
21 mu_0       0.3      0.984       0.509  0.0126          18.2 
22 mu_0       0.4      1.02        0.824  0.0917           7.40
23 mu_0       0.5      1.01        0.985  0.287            3.08
24 mu_0       0.6      1.00        1.01   0.542            1.47
25 mu_0       0.7      0.990       0.979  0.750            1.22
26 mu_0       0.8      0.970       0.953  0.427            1.65
27 mu_0       0.9      0.912       0.892  0.110            3.11
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      19.5     0.0000855  2.21e-13   1486.  
 2 mu         0.2      23.4     0.00603    1.29e- 8   1628.  
 3 mu         0.3      13.6     0.0510     7.41e- 6    843.  
 4 mu         0.4       5.74    0.237      6.34e- 4    275.  
 5 mu         0.5       2.24    0.591      1.88e- 2     57.8 
 6 mu         0.6       1.21    0.953      2.78e- 1      7.15
 7 mu         0.7       1.19    0.981      4.38e- 2      6.24
 8 mu         0.8       1.74    0.584      3.36e- 4     21.0 
 9 mu         0.9       3.15    0.111      5.84e- 8     97.3 
10 mu_1       0.1      31.0     0.000642   2.08e-12   2287.  
11 mu_1       0.2      19.3     0.0208     6.07e- 8   1252.  
12 mu_1       0.3       8.33    0.122      2.33e- 5    432.  
13 mu_1       0.4       3.31    0.401      1.49e- 3    106.  
14 mu_1       0.5       1.54    0.764      3.53e- 2     17.8 
15 mu_1       0.6       1.10    1.01       2.92e- 1      3.09
16 mu_1       0.7       1.25    0.894      1.17e- 2      7.80
17 mu_1       0.8       1.87    0.469      7.88e- 5     26.3 
18 mu_1       0.9       3.29    0.0828     1.22e- 8    108.  
19 mu_0       0.1      18.3     0.0000238  0          1398.  
20 mu_0       0.2      24.4     0.00164    0          1721.  
21 mu_0       0.3      15.9     0.0244     0          1019.  
22 mu_0       0.4       7.36    0.124      0           388.  
23 mu_0       0.5       2.95    0.377      0            97.9 
24 mu_0       0.6       1.37    0.802      0            15.1 
25 mu_0       0.7       1.04    1.04       0             4.30
26 mu_0       0.8       1.21    0.940      0            11.2 
27 mu_0       0.9       1.83    0.349      0            29.2 
[1] "Total run time was 59.161 seconds"
