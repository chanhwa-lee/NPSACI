
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1199"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  9 10  8  7  7  8  3  4  5  4  6  5  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02207 0.30010 0.58369 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
711 488 
[1] "treatment indicator table: "

  0   1 
444 755 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 567
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 80.797 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.496 0.104 
 2 mu         0.1   0.2 0.625 0.130 
 3 mu         0.1   0.3 0.685 0.137 
 4 mu         0.1   0.4 0.694 0.139 
 5 mu         0.1   0.5 0.784 0.151 
 6 mu         0.2   0.1 0.435 0.0628
 7 mu         0.2   0.2 0.538 0.0772
 8 mu         0.2   0.3 0.591 0.0771
 9 mu         0.2   0.4 0.607 0.0749
10 mu         0.2   0.5 0.689 0.0747
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.28         0.365 0.0000297     14.6 
 2 mu         0.2      1.15         0.947 0.00561        6.65
 3 mu         0.3      1.08         1.05  0.0703         2.60
 4 mu         0.4      1.04         1.04  0.269          1.88
 5 mu         0.5      1.01         1.00  0.500          1.52
 6 mu         0.6      0.983        0.976 0.653          1.35
 7 mu         0.7      0.968        0.960 0.482          1.49
 8 mu         0.8      0.966        0.963 0.182          1.49
 9 mu         0.9      0.964        0.967 0.0303         1.73
10 mu_1       0.1      1.19         0.648 0.000137      10.9 
11 mu_1       0.2      1.11         0.952 0.0133         4.32
12 mu_1       0.3      1.06         1.06  0.115          2.19
13 mu_1       0.4      1.03         1.02  0.347          1.72
14 mu_1       0.5      1.00         0.989 0.610          1.38
15 mu_1       0.6      0.977        0.982 0.631          1.33
16 mu_1       0.7      0.969        0.954 0.403          1.52
17 mu_1       0.8      0.968        0.966 0.153          1.47
18 mu_1       0.9      0.964        0.964 0.0244         1.80
19 mu_0       0.1      1.29         0.310 0.0000177     15.2 
20 mu_0       0.2      1.17         0.893 0.00368        7.23
21 mu_0       0.3      1.08         1.04  0.0512         2.87
22 mu_0       0.4      1.04         1.06  0.190          1.99
23 mu_0       0.5      1.02         1.03  0.352          1.70
24 mu_0       0.6      0.992        0.989 0.538          1.40
25 mu_0       0.7      0.967        0.969 0.570          1.41
26 mu_0       0.8      0.960        0.966 0.296          1.58
27 mu_0       0.9      0.967        0.974 0.0831         1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.991    0.000221   6.69e-17     27.2 
 2 mu         0.2      1.52     0.00996    1.75e-11     29.4 
 3 mu         0.3      1.35     0.0978     2.59e- 8     12.0 
 4 mu         0.4      1.18     0.296      4.59e- 6      5.65
 5 mu         0.5      1.07     0.758      2.55e- 4      4.99
 6 mu         0.6      0.984    0.923      6.05e- 3      4.88
 7 mu         0.7      0.950    0.835      7.22e- 5      2.92
 8 mu         0.8      0.984    0.817      1.09e- 7      4.29
 9 mu         0.9      1.16     0.129      1.19e-12     10.0 
10 mu_1       0.1      1.77     0.00152    6.69e-16     40.8 
11 mu_1       0.2      1.63     0.0349     8.76e-11     22.0 
12 mu_1       0.3      1.30     0.261      8.63e- 8      8.59
13 mu_1       0.4      1.13     0.530      1.15e- 5      4.44
14 mu_1       0.5      1.01     0.882      5.10e- 4      5.44
15 mu_1       0.6      0.949    0.904      1.51e- 3      4.44
16 mu_1       0.7      0.939    0.900      1.55e- 5      3.39
17 mu_1       0.8      0.996    0.601      2.05e- 8      4.39
18 mu_1       0.9      1.19     0.0848     1.98e-13     11.2 
19 mu_0       0.1      0.905    0.0000779  0            25.7 
20 mu_0       0.2      1.49     0.00429    0            31.2 
21 mu_0       0.3      1.38     0.0294     0            14.3 
22 mu_0       0.4      1.22     0.177      0             6.85
23 mu_0       0.5      1.12     0.593      0             5.07
24 mu_0       0.6      1.04     0.847      0             5.55
25 mu_0       0.7      0.975    0.927      0             4.43
26 mu_0       0.8      0.936    0.804      0             4.05
27 mu_0       0.9      0.920    0.120      0             5.63
[1] "Total run time was 85.114 seconds"
