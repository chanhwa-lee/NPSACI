
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1246"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 
 7  5  8  8  4  8  8  7  1 13  6  6  8  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05434 0.41201 0.65944 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
752 494 
[1] "treatment indicator table: "

  0   1 
454 792 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 64.195 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.264 0.149 
 2 mu         0.1   0.2 0.261 0.170 
 3 mu         0.1   0.3 0.292 0.198 
 4 mu         0.1   0.4 0.300 0.225 
 5 mu         0.1   0.5 0.435 0.250 
 6 mu         0.2   0.1 0.251 0.101 
 7 mu         0.2   0.2 0.248 0.0980
 8 mu         0.2   0.3 0.277 0.117 
 9 mu         0.2   0.4 0.282 0.129 
10 mu         0.2   0.5 0.405 0.139 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.796       0.0418 0.000000183      46.4 
 2 mu         0.2      0.761       0.254  0.000193         20.8 
 3 mu         0.3      0.849       0.646  0.00746           8.68
 4 mu         0.4      0.944       0.892  0.0595            3.57
 5 mu         0.5      0.994       0.983  0.211             2.50
 6 mu         0.6      0.995       0.979  0.431             2.06
 7 mu         0.7      0.970       0.988  0.523             1.42
 8 mu         0.8      0.947       0.931  0.142             2.88
 9 mu         0.9      0.900       0.724  0.00727           6.88
10 mu_1       0.1      0.518       0.149  0.00000113        4.36
11 mu_1       0.2      0.704       0.529  0.000606          3.08
12 mu_1       0.3      0.869       0.831  0.0142            3.84
13 mu_1       0.4      0.966       0.997  0.0893            2.55
14 mu_1       0.5      1.00        0.995  0.280             2.52
15 mu_1       0.6      0.989       0.991  0.510             1.87
16 mu_1       0.7      0.961       0.966  0.434             1.51
17 mu_1       0.8      0.940       0.909  0.106             3.19
18 mu_1       0.9      0.889       0.695  0.00501           7.11
19 mu_0       0.1      0.827       0.0282 0.0000000773     51.5 
20 mu_0       0.2      0.775       0.185  0.0000901        25.7 
21 mu_0       0.3      0.840       0.526  0.00415          12.0 
22 mu_0       0.4      0.929       0.867  0.0380            5.31
23 mu_0       0.5      0.988       0.960  0.141             2.49
24 mu_0       0.6      1.00        0.986  0.312             2.34
25 mu_0       0.7      0.992       1.00   0.549             1.54
26 mu_0       0.8      0.976       0.983  0.284             1.75
27 mu_0       0.9      0.999       0.954  0.0276            4.86
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     119.      0.000114   1.37e-14    7515. 
 2 mu         0.2      87.8     0.00495    2.83e- 9    5886. 
 3 mu         0.3      37.0     0.0627     3.21e- 6    2680. 
 4 mu         0.4      11.8     0.228      4.18e- 4     629. 
 5 mu         0.5       4.12    0.567      7.76e- 3      79.8
 6 mu         0.6       1.85    0.833      5.50e- 2      23.8
 7 mu         0.7       1.36    0.969      1.78e- 3      11.1
 8 mu         0.8       1.86    0.573      9.57e- 6      27.8
 9 mu         0.9       2.47    0.101      3.29e-10      38.0
10 mu_1       0.1     121.      0.000829   1.23e-13    7175. 
11 mu_1       0.2      61.7     0.0206     1.27e- 8    4905. 
12 mu_1       0.3      21.4     0.123      9.62e- 6    1489. 
13 mu_1       0.4       7.07    0.415      9.40e- 4     262. 
14 mu_1       0.5       2.91    0.749      1.55e- 2      43.8
15 mu_1       0.6       1.53    0.902      1.22e- 2      15.2
16 mu_1       0.7       1.39    0.929      3.27e- 4      13.3
17 mu_1       0.8       1.99    0.459      7.48e- 7      29.3
18 mu_1       0.9       2.51    0.0762     2.28e-11      39.4
19 mu_0       0.1     119.      0.0000339  0           7828. 
20 mu_0       0.2      94.4     0.00214    0           6131. 
21 mu_0       0.3      43.7     0.0243     0           3191. 
22 mu_0       0.4      15.0     0.0873     0            874. 
23 mu_0       0.5       5.32    0.345      0            133. 
24 mu_0       0.6       2.32    0.782      0             36.6
25 mu_0       0.7       1.29    0.887      0             10.5
26 mu_0       0.8       1.36    0.782      0             21.9
27 mu_0       0.9       2.05    0.160      0             36.1
[1] "Total run time was 67.866 seconds"
