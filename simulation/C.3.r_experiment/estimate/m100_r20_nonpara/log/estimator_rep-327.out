
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1263"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  1 12 11  7  1  7  8  4  7  4  6  6  5 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03574 0.34206 0.61232 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
729 534 
[1] "treatment indicator table: "

  0   1 
482 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 74.585 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.331 0.227
 2 mu         0.1   0.2 0.320 0.192
 3 mu         0.1   0.3 0.352 0.155
 4 mu         0.1   0.4 0.380 0.179
 5 mu         0.1   0.5 0.373 0.181
 6 mu         0.2   0.1 0.361 0.196
 7 mu         0.2   0.2 0.371 0.163
 8 mu         0.2   0.3 0.415 0.130
 9 mu         0.2   0.4 0.459 0.149
10 mu         0.2   0.5 0.463 0.150
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.658       0.111  0.000000318      8.75
 2 mu         0.2      0.862       0.555  0.000302         4.19
 3 mu         0.3      0.952       0.895  0.0108           2.57
 4 mu         0.4      0.996       0.989  0.0943           2.24
 5 mu         0.5      1.01        1.02   0.357            1.86
 6 mu         0.6      1.02        1.01   0.639            1.51
 7 mu         0.7      1.02        1.01   0.544            1.45
 8 mu         0.8      1.02        0.978  0.284            2.07
 9 mu         0.9      0.955       0.836  0.0382           4.01
10 mu_1       0.1      0.876       0.336  0.00000179       7.09
11 mu_1       0.2      0.933       0.889  0.000866         3.01
12 mu_1       0.3      0.975       0.949  0.0212           2.50
13 mu_1       0.4      1.00        1.01   0.142            2.10
14 mu_1       0.5      1.01        0.990  0.448            1.65
15 mu_1       0.6      1.01        1.01   0.614            1.58
16 mu_1       0.7      1.02        1.00   0.512            1.56
17 mu_1       0.8      1.02        0.979  0.255            2.22
18 mu_1       0.9      0.946       0.788  0.0314           4.39
19 mu_0       0.1      0.633       0.0845 0.000000155      9.66
20 mu_0       0.2      0.844       0.467  0.000160         4.60
21 mu_0       0.3      0.942       0.832  0.00640          2.67
22 mu_0       0.4      0.993       0.970  0.0625           2.34
23 mu_0       0.5      1.01        1.02   0.266            2.18
24 mu_0       0.6      1.02        1.00   0.647            1.70
25 mu_0       0.7      1.02        1.02   0.592            1.62
26 mu_0       0.8      1.03        1.02   0.403            1.55
27 mu_0       0.9      1.03        0.998  0.0995           3.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.43    0.0000754  1.21e-14    348.  
 2 mu         0.2       4.57    0.00634    1.41e- 9    301.  
 3 mu         0.3       2.71    0.103      1.22e- 6    119.  
 4 mu         0.4       1.62    0.416      1.39e- 4     28.6 
 5 mu         0.5       1.29    0.946      5.14e- 3      8.18
 6 mu         0.6       1.25    1.03       6.18e- 2      7.37
 7 mu         0.7       1.28    1.21       2.04e- 3      6.84
 8 mu         0.8       1.69    0.622      1.19e- 5     33.6 
 9 mu         0.9       2.66    0.0570     1.17e- 9     70.0 
10 mu_1       0.1       6.43    0.000527   1.15e-13    463.  
11 mu_1       0.2       3.75    0.0200     6.67e- 9    200.  
12 mu_1       0.3       1.96    0.225      3.84e- 6     53.0 
13 mu_1       0.4       1.34    0.699      3.28e- 4      9.52
14 mu_1       0.5       1.23    1.07       9.71e- 3      8.72
15 mu_1       0.6       1.24    1.11       2.29e- 2      6.55
16 mu_1       0.7       1.31    1.19       6.48e- 4      8.79
17 mu_1       0.8       1.78    0.496      3.31e- 6     37.8 
18 mu_1       0.9       2.73    0.0415     2.88e-10     70.0 
19 mu_0       0.1       4.21    0.0000234  0           335.  
20 mu_0       0.2       4.77    0.00261    0           326.  
21 mu_0       0.3       3.04    0.0539     0           148.  
22 mu_0       0.4       1.81    0.234      0            41.3 
23 mu_0       0.5       1.36    0.762      0             8.09
24 mu_0       0.6       1.26    1.11       0             8.60
25 mu_0       0.7       1.21    1.11       0             5.85
26 mu_0       0.8       1.32    0.929      0            16.8 
27 mu_0       0.9       2.00    0.0989     0            70.0 
[1] "Total run time was 78.496 seconds"
