
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1240"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8 11  5  2  6  6  5  5  3  4  9  8 13  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02038 0.32526 0.58933 0.98943 5.34926 
[1] "event indicator table: "

  0   1 
731 509 
[1] "treatment indicator table: "

  0   1 
494 746 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.789 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.331 0.0637
 2 mu         0.1   0.2 0.476 0.0968
 3 mu         0.1   0.3 0.536 0.108 
 4 mu         0.1   0.4 0.535 0.106 
 5 mu         0.1   0.5 0.593 0.107 
 6 mu         0.2   0.1 0.372 0.0530
 7 mu         0.2   0.2 0.534 0.0859
 8 mu         0.2   0.3 0.620 0.0975
 9 mu         0.2   0.4 0.628 0.0965
10 mu         0.2   0.5 0.704 0.0938
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.765        0.219 0.0000678     11.7 
 2 mu         0.2      0.984        0.585 0.0122         9.99
 3 mu         0.3      1.01         0.882 0.0790         3.99
 4 mu         0.4      1.00         0.992 0.253          1.79
 5 mu         0.5      0.998        0.957 0.552          1.62
 6 mu         0.6      0.991        0.983 0.707          1.49
 7 mu         0.7      0.996        0.989 0.529          1.67
 8 mu         0.8      1.01         1.00  0.270          1.96
 9 mu         0.9      1.02         0.877 0.0381         2.87
10 mu_1       0.1      1.01         0.530 0.000340      15.1 
11 mu_1       0.2      1.05         0.834 0.0265         6.97
12 mu_1       0.3      1.02         0.968 0.125          2.76
13 mu_1       0.4      1.01         0.967 0.338          1.86
14 mu_1       0.5      0.998        0.985 0.613          1.49
15 mu_1       0.6      0.992        0.987 0.688          1.54
16 mu_1       0.7      0.998        0.995 0.493          1.76
17 mu_1       0.8      1.01         0.989 0.246          1.99
18 mu_1       0.9      1.02         0.847 0.0287         2.95
19 mu_0       0.1      0.738        0.182 0.0000376     11.3 
20 mu_0       0.2      0.967        0.521 0.00770       10.7 
21 mu_0       0.3      0.999        0.870 0.0592         4.78
22 mu_0       0.4      0.998        0.991 0.196          1.96
23 mu_0       0.5      0.998        0.973 0.452          1.75
24 mu_0       0.6      0.991        0.958 0.681          1.43
25 mu_0       0.7      0.990        0.999 0.597          1.59
26 mu_0       0.8      0.997        1.00  0.369          1.82
27 mu_0       0.9      1.01         1.00  0.110          2.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.00      0.000366  3.36e-13    367.  
 2 mu         0.2      4.10      0.0123    3.09e- 8    223.  
 3 mu         0.3      2.07      0.124     2.04e- 5     59.3 
 4 mu         0.4      1.25      0.438     1.71e- 3      9.10
 5 mu         0.5      1.08      0.818     2.58e- 2      5.02
 6 mu         0.6      1.13      1.00      1.96e- 2      8.15
 7 mu         0.7      1.21      1.03      4.18e- 4      6.78
 8 mu         0.8      1.13      0.733     8.31e- 7      8.29
 9 mu         0.9      0.778     0.114     1.61e-11     16.6 
10 mu_1       0.1      6.36      0.00227   2.85e-12    408.  
11 mu_1       0.2      3.07      0.0456    1.31e- 7    124.  
12 mu_1       0.3      1.49      0.275     5.78e- 5     22.0 
13 mu_1       0.4      1.07      0.687     3.63e- 3      4.74
14 mu_1       0.5      1.04      0.927     4.28e- 2      6.28
15 mu_1       0.6      1.13      0.916     5.67e- 3      8.49
16 mu_1       0.7      1.20      1.01      6.64e- 5      6.05
17 mu_1       0.8      1.09      0.599     1.15e- 7      8.81
18 mu_1       0.9      0.749     0.0828    1.98e-12     18.4 
19 mu_0       0.1      4.85      0.000113  0           363.  
20 mu_0       0.2      4.36      0.00517   0           248.  
21 mu_0       0.3      2.33      0.0501    0            75.3 
22 mu_0       0.4      1.37      0.255     0            13.3 
23 mu_0       0.5      1.12      0.693     0             4.54
24 mu_0       0.6      1.13      0.926     0             7.64
25 mu_0       0.7      1.23      0.995     0             8.47
26 mu_0       0.8      1.27      1.05      0             6.22
27 mu_0       0.9      1.04      0.332     0            11.5 
[1] "Total run time was 56.855 seconds"
