
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1271"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  4  5  9  8  6  8  5  6  5  9  6  3  5 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04119 0.34657 0.59796 1.00000 5.98967 
[1] "event indicator table: "

  0   1 
725 546 
[1] "treatment indicator table: "

  0   1 
486 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 674
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 110.53 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.329 0.0690
 2 mu         0.1   0.2 0.423 0.0865
 3 mu         0.1   0.3 0.535 0.122 
 4 mu         0.1   0.4 0.560 0.122 
 5 mu         0.1   0.5 0.581 0.115 
 6 mu         0.2   0.1 0.323 0.0479
 7 mu         0.2   0.2 0.426 0.0625
 8 mu         0.2   0.3 0.523 0.0861
 9 mu         0.2   0.4 0.554 0.0863
10 mu         0.2   0.5 0.585 0.0791
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.814        0.349  0.000585      7.20
 2 mu         0.2      0.921        0.781  0.0439        2.68
 3 mu         0.3      0.978        0.929  0.173         2.47
 4 mu         0.4      0.997        0.982  0.413         1.66
 5 mu         0.5      1.01         1.01   0.647         1.50
 6 mu         0.6      1.02         1.02   0.396         1.52
 7 mu         0.7      1.02         1.04   0.421         1.42
 8 mu         0.8      1.01         0.997  0.423         1.57
 9 mu         0.9      0.983        0.978  0.117         1.93
10 mu_1       0.1      0.878        0.707  0.00238       3.19
11 mu_1       0.2      0.962        0.930  0.0932        2.83
12 mu_1       0.3      0.993        0.967  0.334         2.24
13 mu_1       0.4      1.00         0.995  0.522         1.66
14 mu_1       0.5      1.01         0.998  0.652         1.47
15 mu_1       0.6      1.02         1.02   0.359         1.49
16 mu_1       0.7      1.02         1.05   0.452         1.42
17 mu_1       0.8      1.00         1.00   0.381         1.63
18 mu_1       0.9      0.985        0.993  0.102         2.00
19 mu_0       0.1      0.807        0.307  0.000386      7.80
20 mu_0       0.2      0.911        0.755  0.0246        2.69
21 mu_0       0.3      0.971        0.910  0.103         2.56
22 mu_0       0.4      0.994        0.969  0.267         1.83
23 mu_0       0.5      1.00         1.02   0.522         1.59
24 mu_0       0.6      1.02         1.01   0.451         1.56
25 mu_0       0.7      1.03         1.04   0.347         1.47
26 mu_0       0.8      1.02         1.01   0.433         1.53
27 mu_0       0.9      0.966        0.948  0.257         1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.738    0.0000648  3.26e-15     18.7 
 2 mu         0.2      1.16     0.00614    6.75e-10     20.2 
 3 mu         0.3      0.992    0.0679     4.95e- 7      8.55
 4 mu         0.4      0.869    0.403      3.70e- 5      3.69
 5 mu         0.5      0.883    0.635      1.05e- 3      3.05
 6 mu         0.6      0.936    0.799      3.11e- 3      2.72
 7 mu         0.7      1.01     1.03       3.72e- 5      2.64
 8 mu         0.8      1.16     1.11       5.63e- 8      3.01
 9 mu         0.9      1.30     0.191      6.12e-13      7.83
10 mu_1       0.1      1.28     0.000520   2.93e-14     28.0 
11 mu_1       0.2      1.18     0.0229     3.04e- 9     15.1 
12 mu_1       0.3      0.928    0.151      1.65e- 6      6.48
13 mu_1       0.4      0.879    0.598      9.25e- 5      3.23
14 mu_1       0.5      0.922    0.642      2.10e- 3      3.21
15 mu_1       0.6      0.972    0.899      7.79e- 4      2.93
16 mu_1       0.7      1.05     1.03       7.97e- 6      2.47
17 mu_1       0.8      1.20     0.928      1.06e- 8      3.51
18 mu_1       0.9      1.30     0.143      1.02e-13      8.12
19 mu_0       0.1      0.678    0.0000268  0            17.6 
20 mu_0       0.2      1.16     0.00215    0            21.4 
21 mu_0       0.3      1.02     0.0335     0            10.2 
22 mu_0       0.4      0.861    0.214      0             4.52
23 mu_0       0.5      0.844    0.524      0             2.88
24 mu_0       0.6      0.883    0.590      0             3.00
25 mu_0       0.7      0.922    0.846      0             3.11
26 mu_0       0.8      1.02     0.934      0             2.86
27 mu_0       0.9      1.28     0.280      0             6.04
[1] "Total run time was 115.334 seconds"
