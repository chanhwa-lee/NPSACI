
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1223"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  8  5  9  7  4  5 10  7  6  7  5  9  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03911 0.34559 0.58602 0.99327 6.00000 
[1] "event indicator table: "

  0   1 
754 469 
[1] "treatment indicator table: "

  0   1 
434 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 75.257 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.335 0.0931
 2 mu         0.1   0.2 0.340 0.0712
 3 mu         0.1   0.3 0.377 0.0999
 4 mu         0.1   0.4 0.446 0.0936
 5 mu         0.1   0.5 0.573 0.173 
 6 mu         0.2   0.1 0.368 0.0763
 7 mu         0.2   0.2 0.419 0.0770
 8 mu         0.2   0.3 0.495 0.106 
 9 mu         0.2   0.4 0.541 0.0997
10 mu         0.2   0.5 0.630 0.123 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.652        0.150 0.0000205      6.35
 2 mu         0.2      0.930        0.516 0.00417       12.4 
 3 mu         0.3      1.03         0.818 0.0572         8.69
 4 mu         0.4      1.03         0.899 0.248          3.71
 5 mu         0.5      1.02         0.985 0.537          2.22
 6 mu         0.6      1.01         1.01  0.550          1.55
 7 mu         0.7      1.00         0.991 0.494          1.58
 8 mu         0.8      1.01         0.949 0.361          3.16
 9 mu         0.9      1.02         0.808 0.0500        11.2 
10 mu_1       0.1      0.919        0.414 0.0000993     12.7 
11 mu_1       0.2      1.05         0.786 0.0104        12.5 
12 mu_1       0.3      1.05         0.901 0.0976         6.02
13 mu_1       0.4      1.03         0.935 0.334          2.77
14 mu_1       0.5      1.02         0.998 0.524          1.92
15 mu_1       0.6      1.01         1.01  0.525          1.52
16 mu_1       0.7      1.00         0.976 0.503          1.62
17 mu_1       0.8      1.01         0.938 0.312          3.59
18 mu_1       0.9      1.01         0.797 0.0404        11.8 
19 mu_0       0.1      0.622        0.116 0.0000117      5.64
20 mu_0       0.2      0.901        0.432 0.00262       12.4 
21 mu_0       0.3      1.02         0.780 0.0399         9.83
22 mu_0       0.4      1.03         0.871 0.191          4.68
23 mu_0       0.5      1.02         0.950 0.413          2.52
24 mu_0       0.6      1.02         0.996 0.517          1.65
25 mu_0       0.7      1.01         1.01  0.472          1.50
26 mu_0       0.8      1.02         1.01  0.529          1.68
27 mu_0       0.9      1.09         1.01  0.136          6.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      72.5     0.0000775  1.26e-13   7209.  
 2 mu         0.2      50.1     0.00423    6.55e- 9   4928.  
 3 mu         0.3      16.2     0.0670     3.29e- 6   1496.  
 4 mu         0.4       3.95    0.325      2.41e- 4    263.  
 5 mu         0.5       1.42    0.754      5.95e- 3     26.7 
 6 mu         0.6       1.06    0.960      7.05e- 2      3.51
 7 mu         0.7       1.35    0.933      2.46e- 2      6.65
 8 mu         0.8       2.54    0.681      7.34e- 5     43.2 
 9 mu         0.9       5.73    0.129      2.84e- 9    224.  
10 mu_1       0.1      85.6     0.000504   1.12e-12   8481.  
11 mu_1       0.2      30.1     0.0167     2.91e- 8   2899.  
12 mu_1       0.3       7.20    0.143      9.76e- 6    587.  
13 mu_1       0.4       2.03    0.486      5.36e- 4     77.5 
14 mu_1       0.5       1.13    0.872      1.06e- 2      6.29
15 mu_1       0.6       1.05    0.974      1.04e- 1      3.15
16 mu_1       0.7       1.48    1.05       4.14e- 3      9.51
17 mu_1       0.8       2.83    0.526      1.08e- 5     53.9 
18 mu_1       0.9       6.11    0.0948     3.71e-10    249.  
19 mu_0       0.1      71.0     0.0000235  0          7068.  
20 mu_0       0.2      55.1     0.00192    0          5435.  
21 mu_0       0.3      20.0     0.0285     0          1886.  
22 mu_0       0.4       5.23    0.195      0           387.  
23 mu_0       0.5       1.71    0.572      0            47.1 
24 mu_0       0.6       1.08    0.980      0             4.05
25 mu_0       0.7       1.04    1.02       0             3.18
26 mu_0       0.8       1.38    0.934      0             7.14
27 mu_0       0.9       2.29    0.245      0            47.0 
[1] "Total run time was 79.701 seconds"
