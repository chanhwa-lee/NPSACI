
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1257"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  6  4  8 13  7  2  7  6  5  4  8 10  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05924 0.39516 0.65501 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
762 495 
[1] "treatment indicator table: "

  0   1 
424 833 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 95.092 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.370 0.0905
 2 mu         0.1   0.2 0.501 0.120 
 3 mu         0.1   0.3 0.611 0.146 
 4 mu         0.1   0.4 0.676 0.172 
 5 mu         0.1   0.5 0.748 0.172 
 6 mu         0.2   0.1 0.364 0.0405
 7 mu         0.2   0.2 0.475 0.0568
 8 mu         0.2   0.3 0.574 0.0772
 9 mu         0.2   0.4 0.636 0.0938
10 mu         0.2   0.5 0.725 0.0880
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.05         0.320 0.00000513     23.6 
 2 mu         0.2      1.12         0.814 0.00211         6.22
 3 mu         0.3      1.12         1.09  0.0303          4.09
 4 mu         0.4      1.05         1.04  0.119           2.57
 5 mu         0.5      0.996        0.998 0.311           1.74
 6 mu         0.6      0.987        0.994 0.466           1.49
 7 mu         0.7      0.999        0.993 0.627           1.42
 8 mu         0.8      0.995        0.999 0.412           1.48
 9 mu         0.9      0.975        0.955 0.146           1.99
10 mu_1       0.1      1.06         0.769 0.0000262       6.51
11 mu_1       0.2      1.14         1.09  0.00554         5.38
12 mu_1       0.3      1.09         1.11  0.0576          3.19
13 mu_1       0.4      1.02         1.02  0.180           2.03
14 mu_1       0.5      0.982        1.01  0.350           1.48
15 mu_1       0.6      0.985        0.984 0.527           1.49
16 mu_1       0.7      0.997        0.984 0.580           1.46
17 mu_1       0.8      0.990        0.997 0.379           1.51
18 mu_1       0.9      0.973        0.938 0.126           2.02
19 mu_0       0.1      1.05         0.267 0.00000279     26.0 
20 mu_0       0.2      1.12         0.723 0.00126         7.29
21 mu_0       0.3      1.14         1.08  0.0185          4.47
22 mu_0       0.4      1.07         1.08  0.0777          2.93
23 mu_0       0.5      1.01         1.02  0.211           2.01
24 mu_0       0.6      0.991        0.993 0.374           1.48
25 mu_0       0.7      1.00         1.01  0.601           1.46
26 mu_0       0.8      1.01         0.994 0.543           1.64
27 mu_0       0.9      0.989        1.00  0.324           1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.235   0.0000251   5.45e-17     13.5 
 2 mu         0.2      0.677   0.00453     1.43e-11     21.0 
 3 mu         0.3      0.990   0.0570      2.11e- 8     16.3 
 4 mu         0.4      1.08    0.303       3.47e- 6      8.43
 5 mu         0.5      1.08    0.928       1.54e- 4      4.04
 6 mu         0.6      1.07    0.979       3.42e- 3      4.00
 7 mu         0.7      1.02    1.03        6.09e- 3      2.49
 8 mu         0.8      1.05    0.824       5.34e- 5      4.40
 9 mu         0.9      1.18    0.162       1.04e- 8      8.57
10 mu_1       0.1      0.566   0.000177    5.45e-16     27.0 
11 mu_1       0.2      0.960   0.0146      7.14e-11     21.0 
12 mu_1       0.3      1.11    0.133       7.04e- 8     10.9 
13 mu_1       0.4      1.10    0.506       8.67e- 6      6.82
14 mu_1       0.5      1.08    1.05        3.08e- 4      3.62
15 mu_1       0.6      1.06    1.07        5.69e- 3      3.92
16 mu_1       0.7      1.02    1.04        2.05e- 3      2.71
17 mu_1       0.8      1.07    0.637       1.57e- 5      5.28
18 mu_1       0.9      1.19    0.113       2.73e- 9      9.52
19 mu_0       0.1      0.198   0.00000940  0            12.0 
20 mu_0       0.2      0.606   0.00185     0            21.0 
21 mu_0       0.3      0.939   0.0271      0            18.6 
22 mu_0       0.4      1.07    0.187       0            11.2 
23 mu_0       0.5      1.08    0.663       0             5.50
24 mu_0       0.6      1.08    1.07        0             4.12
25 mu_0       0.7      1.03    1.06        0             3.42
26 mu_0       0.8      0.970   0.890       0             2.68
27 mu_0       0.9      1.07    0.220       0             8.04
[1] "Total run time was 99.688 seconds"
