
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1295"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  9  2  5  5 11  2  6  8  7  5  5  8  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01898 0.32227 0.57665 0.97917 4.00000 
[1] "event indicator table: "

  0   1 
744 551 
[1] "treatment indicator table: "

  0   1 
529 766 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 681
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.639 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.244 0.185 
 2 mu         0.1   0.2 0.238 0.226 
 3 mu         0.1   0.3 0.280 0.242 
 4 mu         0.1   0.4 0.578 0.259 
 5 mu         0.1   0.5 0.568 0.267 
 6 mu         0.2   0.1 0.272 0.0744
 7 mu         0.2   0.2 0.304 0.0942
 8 mu         0.2   0.3 0.356 0.0868
 9 mu         0.2   0.4 0.483 0.0753
10 mu         0.2   0.5 0.495 0.0800
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.945        0.291 0.0000839     38.8 
 2 mu         0.2      0.902        0.805 0.00928        6.49
 3 mu         0.3      0.955        0.929 0.0976         2.10
 4 mu         0.4      0.970        0.982 0.373          1.53
 5 mu         0.5      0.986        0.978 0.560          1.42
 6 mu         0.6      1.01         1.01  0.713          1.43
 7 mu         0.7      1.02         1.00  0.651          1.40
 8 mu         0.8      1.05         0.996 0.447          1.94
 9 mu         0.9      1.08         0.954 0.0548         4.98
10 mu_1       0.1      0.821        0.627 0.000369       3.53
11 mu_1       0.2      0.944        0.954 0.0216         2.45
12 mu_1       0.3      0.966        0.980 0.160          1.88
13 mu_1       0.4      0.972        0.985 0.461          1.48
14 mu_1       0.5      0.991        0.968 0.602          1.38
15 mu_1       0.6      1.01         1.01  0.734          1.45
16 mu_1       0.7      1.03         0.997 0.618          1.44
17 mu_1       0.8      1.05         1.01  0.385          2.13
18 mu_1       0.9      1.09         0.928 0.0445         5.32
19 mu_0       0.1      0.959        0.249 0.0000522     43.0 
20 mu_0       0.2      0.891        0.721 0.00621        7.75
21 mu_0       0.3      0.950        0.926 0.0708         2.20
22 mu_0       0.4      0.969        0.966 0.294          1.72
23 mu_0       0.5      0.982        0.980 0.519          1.48
24 mu_0       0.6      1.00         0.990 0.666          1.40
25 mu_0       0.7      1.02         1.02  0.706          1.47
26 mu_0       0.8      1.04         1.01  0.513          1.59
27 mu_0       0.9      1.06         1.00  0.147          2.21
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.454     0.000784  2.26e-16     34.5 
 2 mu         0.2      0.687     0.0307    1.05e-10     21.2 
 3 mu         0.3      1.02      0.197     2.05e- 7      8.38
 4 mu         0.4      1.17      0.650     4.15e- 5      5.29
 5 mu         0.5      1.08      0.977     2.40e- 3      3.73
 6 mu         0.6      1.01      0.987     6.13e- 2      2.29
 7 mu         0.7      1.10      1.03      4.09e- 3      3.76
 8 mu         0.8      1.34      0.456     7.68e- 5      8.54
 9 mu         0.9      1.77      0.0561    3.00e- 8     34.0 
10 mu_1       0.1      0.619     0.00443   2.15e-15     31.3 
11 mu_1       0.2      0.864     0.0932    5.01e-10      9.65
12 mu_1       0.3      1.16      0.425     6.48e- 7      7.24
13 mu_1       0.4      1.19      0.951     9.85e- 5      5.29
14 mu_1       0.5      1.06      1.02      4.56e- 3      3.26
15 mu_1       0.6      1.02      0.967     9.43e- 3      2.78
16 mu_1       0.7      1.14      0.929     5.31e- 4      4.03
17 mu_1       0.8      1.39      0.343     9.20e- 6      9.34
18 mu_1       0.9      1.80      0.0346    8.35e- 9     35.8 
19 mu_0       0.1      0.436     0.000328  0            34.8 
20 mu_0       0.2      0.643     0.0148    0            24.1 
21 mu_0       0.3      0.958     0.113     0            10.9 
22 mu_0       0.4      1.16      0.436     0             6.12
23 mu_0       0.5      1.10      0.875     0             4.25
24 mu_0       0.6      0.994     1.01      0             2.52
25 mu_0       0.7      1.02      0.866     0             3.13
26 mu_0       0.8      1.16      0.811     0             5.84
27 mu_0       0.9      1.52      0.182     0            17.0 
[1] "Total run time was 62.836 seconds"
