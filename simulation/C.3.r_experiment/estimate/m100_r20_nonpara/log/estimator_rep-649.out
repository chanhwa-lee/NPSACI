
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1153"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 18 19 20 
 7  9 11 11  5  2  5 12  4  7  4  6  3  5  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01067 0.27191 0.54148 0.91510 4.00000 
[1] "event indicator table: "

  0   1 
683 470 
[1] "treatment indicator table: "

  0   1 
484 669 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 555
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 73.984 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.611 0.214
 2 mu         0.1   0.2 0.722 0.243
 3 mu         0.1   0.3 0.756 0.269
 4 mu         0.1   0.4 0.796 0.289
 5 mu         0.1   0.5 0.865 0.303
 6 mu         0.2   0.1 0.515 0.175
 7 mu         0.2   0.2 0.635 0.202
 8 mu         0.2   0.3 0.671 0.228
 9 mu         0.2   0.4 0.714 0.243
10 mu         0.2   0.5 0.794 0.256
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.42         0.212 0.0000524     40.0 
 2 mu         0.2      1.38         0.645 0.00893       43.2 
 3 mu         0.3      1.10         0.917 0.109         15.2 
 4 mu         0.4      1.01         0.965 0.429          2.98
 5 mu         0.5      1.00         0.991 0.720          1.28
 6 mu         0.6      1.00         0.999 0.846          1.23
 7 mu         0.7      0.997        0.980 0.613          1.86
 8 mu         0.8      0.981        0.880 0.326          2.83
 9 mu         0.9      0.928        0.572 0.0483         5.45
10 mu_1       0.1      1.63         0.524 0.000239      59.9 
11 mu_1       0.2      1.26         0.874 0.0210        32.4 
12 mu_1       0.3      1.04         0.940 0.178          7.75
13 mu_1       0.4      1.00         0.997 0.555          1.53
14 mu_1       0.5      1.01         1.00  0.717          1.25
15 mu_1       0.6      1.00         0.998 0.778          1.39
16 mu_1       0.7      0.995        0.975 0.546          2.05
17 mu_1       0.8      0.978        0.844 0.276          3.03
18 mu_1       0.9      0.922        0.526 0.0395         5.99
19 mu_0       0.1      1.39         0.180 0.0000317     37.7 
20 mu_0       0.2      1.41         0.580 0.00592       45.9 
21 mu_0       0.3      1.12         0.855 0.0791        18.4 
22 mu_0       0.4      1.01         0.953 0.344          4.01
23 mu_0       0.5      0.998        0.987 0.697          1.46
24 mu_0       0.6      1.00         1.00  0.793          1.25
25 mu_0       0.7      1.00         0.995 0.719          1.40
26 mu_0       0.8      0.997        0.990 0.527          2.06
27 mu_0       0.9      0.982        0.853 0.128          3.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.83      0.00108   1.00e-15    243.  
 2 mu         0.2      4.10      0.0350    4.68e-10    112.  
 3 mu         0.3      2.40      0.211     9.08e- 7     44.3 
 4 mu         0.4      1.38      0.539     1.84e- 4     12.6 
 5 mu         0.5      0.952     0.908     1.06e- 2      4.17
 6 mu         0.6      0.928     0.886     8.21e- 2      2.11
 7 mu         0.7      1.26      1.01      5.40e- 3      5.50
 8 mu         0.8      2.21      0.560     5.32e- 5     32.2 
 9 mu         0.9      4.34      0.0830    6.58e- 9    151.  
10 mu_1       0.1      4.13      0.00559   0           166.  
11 mu_1       0.2      2.44      0.0975    0            51.0 
12 mu_1       0.3      1.46      0.399     0            20.2 
13 mu_1       0.4      1.00      0.767     0             5.64
14 mu_1       0.5      0.864     0.871     0             3.75
15 mu_1       0.6      0.973     1.03      0             2.43
16 mu_1       0.7      1.38      0.878     0             7.85
17 mu_1       0.8      2.41      0.420     0            38.2 
18 mu_1       0.9      4.50      0.0527    0           159.  
19 mu_0       0.1      6.02      0.000363  0           271.  
20 mu_0       0.2      4.51      0.0179    0           127.  
21 mu_0       0.3      2.81      0.107     0            57.5 
22 mu_0       0.4      1.64      0.347     0            19.1 
23 mu_0       0.5      1.04      0.695     0             4.64
24 mu_0       0.6      0.860     0.892     0             2.54
25 mu_0       0.7      0.982     0.971     0             2.74
26 mu_0       0.8      1.45      0.788     0             9.74
27 mu_0       0.9      2.86      0.223     0            75.4 
[1] "Total run time was 78.368 seconds"
