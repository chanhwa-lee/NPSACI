
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1207"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 
 5  5  8  6 10  6  8  5  7  6  8  7  6  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04382 0.36734 0.62202 1.00000 6.67448 
[1] "event indicator table: "

  0   1 
731 476 
[1] "treatment indicator table: "

  0   1 
428 779 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 575
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.464 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau    est     se
   <chr>    <dbl> <dbl>  <dbl>  <dbl>
 1 mu         0.1   0.1 0.0679 0.143 
 2 mu         0.1   0.2 0.192  0.0849
 3 mu         0.1   0.3 0.313  0.0729
 4 mu         0.1   0.4 0.376  0.104 
 5 mu         0.1   0.5 0.439  0.141 
 6 mu         0.2   0.1 0.208  0.0874
 7 mu         0.2   0.2 0.338  0.0768
 8 mu         0.2   0.3 0.424  0.0685
 9 mu         0.2   0.4 0.506  0.0920
10 mu         0.2   0.5 0.549  0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.579       0.120  0.00000162       5.83
 2 mu         0.2      0.855       0.519  0.000718         7.54
 3 mu         0.3      0.993       0.817  0.0175          11.2 
 4 mu         0.4      1.02        0.931  0.126            8.86
 5 mu         0.5      1.02        0.988  0.441            3.99
 6 mu         0.6      1.04        1.03   0.705            1.74
 7 mu         0.7      1.03        1.00   0.653            1.57
 8 mu         0.8      1.00        0.969  0.250            3.18
 9 mu         0.9      1.08        0.890  0.0295          19.5 
10 mu_1       0.1      0.775       0.363  0.00000865       6.61
11 mu_1       0.2      0.962       0.759  0.00197          8.75
12 mu_1       0.3      1.03        0.896  0.0333          11.9 
13 mu_1       0.4      1.03        0.977  0.188            7.25
14 mu_1       0.5      1.03        0.998  0.552            3.01
15 mu_1       0.6      1.04        1.03   0.743            1.51
16 mu_1       0.7      1.03        1.00   0.572            1.76
17 mu_1       0.8      1.00        0.969  0.204            3.79
18 mu_1       0.9      1.10        0.850  0.0230          21.6 
19 mu_0       0.1      0.557       0.0958 0.000000836      5.75
20 mu_0       0.2      0.828       0.455  0.000404         7.38
21 mu_0       0.3      0.978       0.735  0.0107          10.9 
22 mu_0       0.4      1.01        0.914  0.0843           9.93
23 mu_0       0.5      1.01        0.970  0.329            4.96
24 mu_0       0.6      1.03        1.02   0.642            2.09
25 mu_0       0.7      1.03        1.02   0.752            1.33
26 mu_0       0.8      1.01        0.990  0.433            1.68
27 mu_0       0.9      0.965       0.963  0.0884           2.27
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.17    0.0000913  3.30e-15     80.9 
 2 mu         0.2       3.08    0.00723    7.69e-10    124.  
 3 mu         0.3       2.52    0.0667     9.94e- 7     84.0 
 4 mu         0.4       1.71    0.281      1.51e- 4     31.3 
 5 mu         0.5       1.28    0.673      6.32e- 3      8.62
 6 mu         0.6       1.22    1.10       7.79e- 2      4.17
 7 mu         0.7       1.68    1.20       9.68e- 3     30.9 
 8 mu         0.8       3.88    0.737      1.27e- 4    175.  
 9 mu         0.9      12.6     0.115      4.98e- 8    811.  
10 mu_1       0.1       3.53    0.000630   3.12e-14    127.  
11 mu_1       0.2       2.99    0.0226     3.64e- 9    124.  
12 mu_1       0.3       1.97    0.159      3.14e- 6     56.0 
13 mu_1       0.4       1.35    0.471      3.58e- 4     15.7 
14 mu_1       0.5       1.15    0.890      1.19e- 2      6.53
15 mu_1       0.6       1.26    1.15       2.07e- 2      6.95
16 mu_1       0.7       1.92    1.22       1.55e- 3     44.2 
17 mu_1       0.8       4.56    0.595      3.98e- 5    219.  
18 mu_1       0.9      13.9     0.0794     1.38e- 8    902.  
19 mu_0       0.1       2.02    0.0000315  0            78.7 
20 mu_0       0.2       3.10    0.00185    0           124.  
21 mu_0       0.3       2.76    0.0273     0            96.0 
22 mu_0       0.4       1.96    0.147      0            41.8 
23 mu_0       0.5       1.40    0.442      0            11.6 
24 mu_0       0.6       1.17    0.924      0             5.96
25 mu_0       0.7       1.13    1.20       0             2.96
26 mu_0       0.8       1.19    1.04       0            10.3 
27 mu_0       0.9       1.38    0.272      0            29.0 
[1] "Total run time was 56.533 seconds"
