
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1254"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 12  4  5  6  4  6  5  6  6  9  6  8  7  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04277 0.39698 0.67271 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
782 472 
[1] "treatment indicator table: "

  0   1 
388 866 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 89.962 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.482 0.158
 2 mu         0.1   0.2 0.550 0.185
 3 mu         0.1   0.3 0.549 0.184
 4 mu         0.1   0.4 0.516 0.196
 5 mu         0.1   0.5 0.517 0.198
 6 mu         0.2   0.1 0.466 0.113
 7 mu         0.2   0.2 0.580 0.156
 8 mu         0.2   0.3 0.617 0.154
 9 mu         0.2   0.4 0.619 0.159
10 mu         0.2   0.5 0.637 0.159
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.705      0.0103   1.43e- 9     19.6 
 2 mu         0.2      0.876      0.159    3.55e- 6     12.2 
 3 mu         0.3      0.943      0.484    2.66e- 4      7.84
 4 mu         0.4      0.998      0.874    4.58e- 3      6.87
 5 mu         0.5      1.03       0.967    3.40e- 2      3.87
 6 mu         0.6      1.03       0.992    1.43e- 1      2.21
 7 mu         0.7      1.01       1.02     3.95e- 1      1.37
 8 mu         0.8      0.952      0.947    2.99e- 1      1.70
 9 mu         0.9      0.849      0.805    3.77e- 2      2.44
10 mu_1       0.1      0.958      0.0408   1.01e- 8     17.9 
11 mu_1       0.2      0.917      0.303    1.27e- 5     10.1 
12 mu_1       0.3      0.959      0.683    6.41e- 4      8.46
13 mu_1       0.4      1.01       0.931    8.39e- 3      5.97
14 mu_1       0.5      1.03       0.980    5.08e- 2      3.19
15 mu_1       0.6      1.03       1.02     1.84e- 1      1.94
16 mu_1       0.7      0.998      1.01     4.54e- 1      1.44
17 mu_1       0.8      0.939      0.950    2.36e- 1      1.76
18 mu_1       0.9      0.836      0.802    2.72e- 2      2.51
19 mu_0       0.1      0.677      0.00633  4.61e-10     19.8 
20 mu_0       0.2      0.866      0.122    1.26e- 6     13.8 
21 mu_0       0.3      0.937      0.389    1.05e- 4      7.97
22 mu_0       0.4      0.990      0.808    2.03e- 3      7.47
23 mu_0       0.5      1.03       0.936    1.71e- 2      4.55
24 mu_0       0.6      1.04       1.00     8.20e- 2      2.62
25 mu_0       0.7      1.03       1.00     2.59e- 1      1.69
26 mu_0       0.8      1.00       1.01     5.53e- 1      1.47
27 mu_0       0.9      0.964      0.962    1.32e- 1      2.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.402  0.00000466   6.28e-18     27.6 
 2 mu         0.2      1.63   0.00132      3.30e-12    108.  
 3 mu         0.3      2.44   0.0206       7.30e- 9    110.  
 4 mu         0.4      2.29   0.121        1.38e- 6     54.6 
 5 mu         0.5      1.66   0.406        6.11e- 5     16.7 
 6 mu         0.6      1.22   0.913        1.35e- 3      6.41
 7 mu         0.7      1.15   1.10         1.86e- 2      4.03
 8 mu         0.8      1.19   0.969        1.64e- 3      4.45
 9 mu         0.9      1.28   0.312        5.86e- 7     11.6 
10 mu_1       0.1      1.04   0.0000419    6.28e-17     69.1 
11 mu_1       0.2      2.32   0.00474      1.65e-11    135.  
12 mu_1       0.3      2.61   0.0535       2.43e- 8     91.5 
13 mu_1       0.4      2.11   0.242        3.44e- 6     34.1 
14 mu_1       0.5      1.47   0.630        1.22e- 4     13.7 
15 mu_1       0.6      1.16   0.954        2.26e- 3      4.40
16 mu_1       0.7      1.16   1.11         2.66e- 2      4.06
17 mu_1       0.8      1.20   0.936        5.13e- 4      5.20
18 mu_1       0.9      1.31   0.235        1.78e- 7     12.0 
19 mu_0       0.1      0.331  0.000000843  0            23.0 
20 mu_0       0.2      1.46   0.000384     0           101.  
21 mu_0       0.3      2.37   0.00614      0           118.  
22 mu_0       0.4      2.41   0.0445       0            68.2 
23 mu_0       0.5      1.85   0.207        0            22.4 
24 mu_0       0.6      1.32   0.671        0             9.45
25 mu_0       0.7      1.14   0.943        0             4.14
26 mu_0       0.8      1.14   1.08         0             4.21
27 mu_0       0.9      1.03   0.426        0             8.34
[1] "Total run time was 94.739 seconds"
