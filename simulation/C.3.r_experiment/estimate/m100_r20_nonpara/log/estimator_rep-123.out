
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1347"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  3  9  1  6  6  6  7  7  6  6  7  9 12  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0354  0.3348  0.6351  1.0000  4.9334 
[1] "event indicator table: "

  0   1 
799 548 
[1] "treatment indicator table: "

  0   1 
507 840 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 699
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 88.355 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.112 0.0994
 2 mu         0.1   0.2 0.336 0.103 
 3 mu         0.1   0.3 0.361 0.121 
 4 mu         0.1   0.4 0.376 0.113 
 5 mu         0.1   0.5 0.368 0.0955
 6 mu         0.2   0.1 0.217 0.0665
 7 mu         0.2   0.2 0.382 0.0734
 8 mu         0.2   0.3 0.395 0.0806
 9 mu         0.2   0.4 0.444 0.0866
10 mu         0.2   0.5 0.449 0.0801
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.479       0.0326 0.000000429      9.02
 2 mu         0.2      0.711       0.244  0.000394         7.51
 3 mu         0.3      0.872       0.638  0.0140           4.65
 4 mu         0.4      0.967       0.917  0.0860           3.60
 5 mu         0.5      1.00        1.00   0.254            2.10
 6 mu         0.6      0.991       0.964  0.412            1.75
 7 mu         0.7      0.972       0.975  0.185            1.64
 8 mu         0.8      0.961       0.973  0.0457           2.65
 9 mu         0.9      0.948       0.786  0.00207          3.59
10 mu_1       0.1      0.687       0.106  0.00000251      10.5 
11 mu_1       0.2      0.806       0.456  0.00117          4.72
12 mu_1       0.3      0.925       0.843  0.0281           4.75
13 mu_1       0.4      0.990       0.947  0.119            2.96
14 mu_1       0.5      1.00        0.995  0.319            1.97
15 mu_1       0.6      0.984       0.987  0.352            1.67
16 mu_1       0.7      0.966       0.976  0.152            1.80
17 mu_1       0.8      0.957       0.977  0.0353           2.83
18 mu_1       0.9      0.944       0.750  0.00147          3.60
19 mu_0       0.1      0.456       0.0245 0.000000198      8.86
20 mu_0       0.2      0.687       0.194  0.000201         8.20
21 mu_0       0.3      0.849       0.542  0.00798          5.28
22 mu_0       0.4      0.952       0.861  0.0594           4.04
23 mu_0       0.5      0.999       0.971  0.189            2.28
24 mu_0       0.6      1.00        1.00   0.412            2.14
25 mu_0       0.7      0.986       0.972  0.263            1.69
26 mu_0       0.8      0.975       0.977  0.0872           1.94
27 mu_0       0.9      0.982       0.962  0.00749          3.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      57.0    0.0000313   2.18e-16    5109. 
 2 mu         0.2      53.3    0.00584     1.01e-10    2486. 
 3 mu         0.3      44.1    0.0661      1.70e- 7    3154. 
 4 mu         0.4      26.0    0.334       2.58e- 5    2134. 
 5 mu         0.5      10.9    0.896       1.19e- 3     841. 
 6 mu         0.6       4.80   1.12        2.54e- 2     187. 
 7 mu         0.7       4.60   1.13        5.12e- 3     302. 
 8 mu         0.8       4.71   0.714       3.93e- 5     339. 
 9 mu         0.9       2.50   0.0729      6.83e- 9      98.0
10 mu_1       0.1      55.8    0.000226    2.07e-15    3930. 
11 mu_1       0.2      49.3    0.0171      4.82e-10    3383. 
12 mu_1       0.3      36.5    0.151       5.36e- 7    3004. 
13 mu_1       0.4      18.2    0.505       6.12e- 5    1524. 
14 mu_1       0.5       7.09   1.02        2.26e- 3     481. 
15 mu_1       0.6       4.09   1.04        4.02e- 2     164. 
16 mu_1       0.7       4.74   0.942       1.37e- 3     330. 
17 mu_1       0.8       4.57   0.626       9.21e- 6     324. 
18 mu_1       0.9       2.35   0.0488      1.42e- 9      83.2
19 mu_0       0.1      57.2    0.00000873  0           5240. 
20 mu_0       0.2      54.2    0.00197     0           2869. 
21 mu_0       0.3      47.4    0.0304      0           3218. 
22 mu_0       0.4      31.3    0.169       0           2540. 
23 mu_0       0.5      14.7    0.665       0           1202. 
24 mu_0       0.6       5.85   0.969       0            335. 
25 mu_0       0.7       4.28   1.09        0            237. 
26 mu_0       0.8       5.27   1.00        0            399. 
27 mu_0       0.9       3.79   0.185       0            231. 
[1] "Total run time was 92.622 seconds"
