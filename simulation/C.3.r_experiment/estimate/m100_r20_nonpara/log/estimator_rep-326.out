
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1249"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  1 11  3  6  7 10  5  8  7  3  9  6  5 10  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02115 0.34565 0.60830 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
752 497 
[1] "treatment indicator table: "

  0   1 
469 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 89.873 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.539 0.117 
 2 mu         0.1   0.2 0.715 0.151 
 3 mu         0.1   0.3 0.832 0.182 
 4 mu         0.1   0.4 0.978 0.194 
 5 mu         0.1   0.5 0.992 0.198 
 6 mu         0.2   0.1 0.378 0.0442
 7 mu         0.2   0.2 0.496 0.0544
 8 mu         0.2   0.3 0.576 0.0570
 9 mu         0.2   0.4 0.663 0.0621
10 mu         0.2   0.5 0.678 0.0592
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.65         0.729 0.00000383     26.5 
 2 mu         0.2      1.15         1.00  0.00159         5.80
 3 mu         0.3      1.04         0.986 0.0337          2.65
 4 mu         0.4      0.995        0.951 0.199           1.89
 5 mu         0.5      0.972        0.966 0.446           1.58
 6 mu         0.6      0.969        0.972 0.551           1.54
 7 mu         0.7      0.986        0.985 0.476           1.59
 8 mu         0.8      1.00         0.991 0.508           1.53
 9 mu         0.9      1.03         1.01  0.238           2.01
10 mu_1       0.1      1.06         0.901 0.0000204       4.46
11 mu_1       0.2      1.02         0.978 0.00430         3.25
12 mu_1       0.3      1.00         0.923 0.0621          2.54
13 mu_1       0.4      0.984        0.943 0.283           1.77
14 mu_1       0.5      0.970        0.972 0.540           1.48
15 mu_1       0.6      0.973        0.971 0.555           1.63
16 mu_1       0.7      0.990        0.989 0.452           1.53
17 mu_1       0.8      1.01         1.00  0.477           1.58
18 mu_1       0.9      1.03         0.999 0.198           2.07
19 mu_0       0.1      1.72         0.683 0.00000199     29.4 
20 mu_0       0.2      1.18         0.986 0.000911        7.21
21 mu_0       0.3      1.05         0.992 0.0216          2.71
22 mu_0       0.4      1.00         0.975 0.143           2.09
23 mu_0       0.5      0.974        0.967 0.352           1.69
24 mu_0       0.6      0.963        0.940 0.544           1.40
25 mu_0       0.7      0.976        0.975 0.532           1.71
26 mu_0       0.8      0.998        1.01  0.364           1.55
27 mu_0       0.9      1.01         0.973 0.344           1.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.39    0.0000415   1.84e-15     65.8 
 2 mu         0.2      1.25    0.00374     1.21e-10     28.5 
 3 mu         0.3      1.12    0.0747      7.92e- 8      7.53
 4 mu         0.4      1.04    0.401       7.90e- 6      5.22
 5 mu         0.5      1.02    0.798       2.81e- 4      4.18
 6 mu         0.6      1.05    0.955       5.19e- 3      3.11
 7 mu         0.7      1.03    1.01        2.62e- 4      2.81
 8 mu         0.8      0.999   0.855       1.17e- 6      3.19
 9 mu         0.9      0.976   0.131       9.06e-11      5.69
10 mu_1       0.1      1.54    0.000350    1.84e-14     47.0 
11 mu_1       0.2      1.17    0.0113      6.03e-10     12.3 
12 mu_1       0.3      1.07    0.170       2.64e- 7      7.25
13 mu_1       0.4      1.02    0.459       1.98e- 5      4.33
14 mu_1       0.5      1.03    0.840       5.61e- 4      3.96
15 mu_1       0.6      1.06    1.06        1.24e- 3      3.11
16 mu_1       0.7      1.03    1.03        2.95e- 5      2.82
17 mu_1       0.8      0.997   0.715       1.52e- 7      3.27
18 mu_1       0.9      0.972   0.0940      1.26e-11      6.32
19 mu_0       0.1      1.37    0.00000607  0            67.9 
20 mu_0       0.2      1.27    0.00197     0            33.1 
21 mu_0       0.3      1.14    0.0377      0             9.99
22 mu_0       0.4      1.05    0.210       0             5.95
23 mu_0       0.5      1.02    0.577       0             4.40
24 mu_0       0.6      1.04    0.866       0             3.37
25 mu_0       0.7      1.04    0.982       0             3.28
26 mu_0       0.8      1.01    1.07        0             3.33
27 mu_0       0.9      1.02    0.294       0             4.28
[1] "Total run time was 93.77 seconds"
