
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1250"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  3  6  9  6  3  4  6 10 17  6  5  2  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03058 0.33146 0.57896 1.00000 5.67274 
[1] "event indicator table: "

  0   1 
741 509 
[1] "treatment indicator table: "

  0   1 
511 739 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 124.082 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.544 0.123 
 2 mu         0.1   0.2 0.593 0.117 
 3 mu         0.1   0.3 0.610 0.118 
 4 mu         0.1   0.4 0.613 0.116 
 5 mu         0.1   0.5 0.626 0.114 
 6 mu         0.2   0.1 0.460 0.0749
 7 mu         0.2   0.2 0.528 0.0758
 8 mu         0.2   0.3 0.556 0.0799
 9 mu         0.2   0.4 0.576 0.0762
10 mu         0.2   0.5 0.604 0.0714
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.319 0.000106      13.6 
 2 mu         0.2      1.07         0.830 0.0106         6.58
 3 mu         0.3      1.03         0.982 0.100          2.19
 4 mu         0.4      0.996        1.00  0.348          1.58
 5 mu         0.5      0.980        0.974 0.599          1.34
 6 mu         0.6      0.989        1.00  0.669          1.32
 7 mu         0.7      1.00         1.03  0.584          1.45
 8 mu         0.8      1.00         0.984 0.316          1.71
 9 mu         0.9      0.957        0.889 0.0462         2.46
10 mu_1       0.1      1.09         0.697 0.000505      10.8 
11 mu_1       0.2      1.03         0.959 0.0257         3.09
12 mu_1       0.3      1.00         0.983 0.168          1.78
13 mu_1       0.4      0.986        0.977 0.461          1.52
14 mu_1       0.5      0.982        0.981 0.595          1.32
15 mu_1       0.6      0.996        1.01  0.638          1.35
16 mu_1       0.7      1.01         1.03  0.446          1.53
17 mu_1       0.8      1.00         0.974 0.231          1.72
18 mu_1       0.9      0.949        0.854 0.0385         2.54
19 mu_0       0.1      1.03         0.274 0.0000619     13.9 
20 mu_0       0.2      1.08         0.834 0.00683        7.45
21 mu_0       0.3      1.04         0.988 0.0711         2.67
22 mu_0       0.4      1.00         1.01  0.273          1.65
23 mu_0       0.5      0.978        0.964 0.593          1.41
24 mu_0       0.6      0.978        0.985 0.648          1.27
25 mu_0       0.7      0.997        1.02  0.612          1.36
26 mu_0       0.8      1.01         1.03  0.552          1.71
27 mu_0       0.9      1.02         1.00  0.116          1.99
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.870    0.000279   3.52e-18     27.6 
 2 mu         0.2      1.26     0.0190     3.69e-12     21.2 
 3 mu         0.3      1.20     0.150      1.23e- 8     12.0 
 4 mu         0.4      1.06     0.594      3.87e- 6      5.71
 5 mu         0.5      0.968    1.03       3.35e- 4      2.70
 6 mu         0.6      0.969    0.940      1.16e- 2      2.50
 7 mu         0.7      1.04     1.10       2.82e- 4      2.65
 8 mu         0.8      1.15     0.454      1.26e- 6      7.65
 9 mu         0.9      1.49     0.0650     9.76e-11     42.8 
10 mu_1       0.1      1.49     0.00165    3.52e-17     34.5 
11 mu_1       0.2      1.36     0.0537     1.84e-11     16.9 
12 mu_1       0.3      1.13     0.319      4.09e- 8      7.43
13 mu_1       0.4      0.982    0.812      9.67e- 6      4.40
14 mu_1       0.5      0.938    0.917      6.71e- 4      2.18
15 mu_1       0.6      0.982    1.05       2.43e- 3      2.60
16 mu_1       0.7      1.07     0.966      5.04e- 5      3.14
17 mu_1       0.8      1.18     0.330      1.97e- 7      8.88
18 mu_1       0.9      1.53     0.0409     1.36e-11     47.5 
19 mu_0       0.1      0.801    0.0000960  0            26.8 
20 mu_0       0.2      1.24     0.00685    0            23.2 
21 mu_0       0.3      1.24     0.0771     0            14.3 
22 mu_0       0.4      1.11     0.366      0             6.59
23 mu_0       0.5      0.999    0.794      0             3.74
24 mu_0       0.6      0.950    0.985      0             2.40
25 mu_0       0.7      0.976    0.916      0             2.94
26 mu_0       0.8      1.03     0.697      0             4.82
27 mu_0       0.9      1.13     0.0873     0            12.6 
[1] "Total run time was 131.59 seconds"
