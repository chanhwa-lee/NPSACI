
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1333"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  3  2  7  8  6  9  7  6  5  6  4  7 12  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03065 0.31409 0.59574 1.00000 4.86581 
[1] "event indicator table: "

  0   1 
788 545 
[1] "treatment indicator table: "

  0   1 
507 826 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 688
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 75.756 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.505 0.190 
 2 mu         0.1   0.2 0.677 0.229 
 3 mu         0.1   0.3 0.770 0.231 
 4 mu         0.1   0.4 0.796 0.246 
 5 mu         0.1   0.5 0.904 0.262 
 6 mu         0.2   0.1 0.403 0.0831
 7 mu         0.2   0.2 0.527 0.0967
 8 mu         0.2   0.3 0.585 0.0902
 9 mu         0.2   0.4 0.618 0.0976
10 mu         0.2   0.5 0.696 0.104 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.38         0.175 0.0000273     34.8 
 2 mu         0.2      1.12         0.695 0.00513       10.0 
 3 mu         0.3      1.02         0.821 0.0684         6.22
 4 mu         0.4      0.995        0.945 0.294          2.75
 5 mu         0.5      1.01         0.996 0.550          1.88
 6 mu         0.6      1.02         1.02  0.717          1.50
 7 mu         0.7      1.02         1.02  0.665          1.49
 8 mu         0.8      0.999        0.974 0.294          2.15
 9 mu         0.9      0.987        0.936 0.0398         3.19
10 mu_1       0.1      1.08         0.432 0.000137      11.2 
11 mu_1       0.2      1.02         0.834 0.0130         8.61
12 mu_1       0.3      0.992        0.896 0.119          4.90
13 mu_1       0.4      0.998        0.984 0.421          1.99
14 mu_1       0.5      1.02         1.00  0.683          1.83
15 mu_1       0.6      1.02         1.01  0.694          1.39
16 mu_1       0.7      1.01         1.01  0.596          1.57
17 mu_1       0.8      0.996        0.960 0.247          2.31
18 mu_1       0.9      0.987        0.933 0.0312         3.45
19 mu_0       0.1      1.41         0.142 0.0000151     38.7 
20 mu_0       0.2      1.14         0.607 0.00315       12.3 
21 mu_0       0.3      1.03         0.791 0.0465         6.79
22 mu_0       0.4      0.992        0.921 0.204          3.26
23 mu_0       0.5      1.00         0.988 0.411          1.92
24 mu_0       0.6      1.02         1.02  0.667          1.67
25 mu_0       0.7      1.03         1.04  0.694          1.38
26 mu_0       0.8      1.01         1.01  0.483          1.75
27 mu_0       0.9      0.990        0.903 0.117          2.89
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.27     0.0000761  4.49e-16     52.4 
 2 mu         0.2      1.90     0.00483    2.09e-10     46.0 
 3 mu         0.3      1.75     0.0814     4.06e- 7     34.6 
 4 mu         0.4      1.36     0.371      8.22e- 5     12.6 
 5 mu         0.5      1.07     0.774      4.76e- 3      4.28
 6 mu         0.6      0.920    0.877      1.44e- 2      2.04
 7 mu         0.7      0.939    0.819      3.49e- 4      3.96
 8 mu         0.8      1.40     0.585      1.56e- 6     14.4 
 9 mu         0.9      3.11     0.0582     1.21e-10     67.4 
10 mu_1       0.1      2.00     0.000620   4.26e-15     65.5 
11 mu_1       0.2      1.95     0.0216     9.93e-10     49.3 
12 mu_1       0.3      1.54     0.169      1.28e- 6     25.7 
13 mu_1       0.4      1.19     0.525      1.95e- 4      8.16
14 mu_1       0.5      0.983    0.716      9.04e- 3      3.18
15 mu_1       0.6      0.896    0.906      3.00e- 3      2.24
16 mu_1       0.7      0.978    0.871      6.23e- 5      4.40
17 mu_1       0.8      1.52     0.481      2.44e- 7     17.1 
18 mu_1       0.9      3.28     0.0431     1.68e-11     71.1 
19 mu_0       0.1      1.19     0.0000109  0            51.0 
20 mu_0       0.2      1.89     0.00188    0            50.3 
21 mu_0       0.3      1.84     0.0432     0            38.5 
22 mu_0       0.4      1.48     0.155      0            17.9 
23 mu_0       0.5      1.16     0.525      0             7.49
24 mu_0       0.6      0.955    0.803      0             3.06
25 mu_0       0.7      0.849    0.860      0             2.94
26 mu_0       0.8      0.928    0.629      0             6.09
27 mu_0       0.9      1.54     0.0780     0            33.7 
[1] "Total run time was 79.976 seconds"
