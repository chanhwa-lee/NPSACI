
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1296"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  7  5  6  8  6  4  7  3  9  8  7  9  3  8  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01931 0.32169 0.57672 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
752 544 
[1] "treatment indicator table: "

  0   1 
526 770 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 586
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.719 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.396 0.133 
 2 mu         0.1   0.2 0.492 0.172 
 3 mu         0.1   0.3 0.625 0.204 
 4 mu         0.1   0.4 0.644 0.224 
 5 mu         0.1   0.5 0.706 0.238 
 6 mu         0.2   0.1 0.322 0.0517
 7 mu         0.2   0.2 0.415 0.0665
 8 mu         0.2   0.3 0.510 0.0791
 9 mu         0.2   0.4 0.531 0.0835
10 mu         0.2   0.5 0.570 0.0895
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.30         0.606  0.00128      38.1 
 2 mu         0.2      1.07         0.873  0.0497       12.7 
 3 mu         0.3      0.999        0.943  0.221         3.77
 4 mu         0.4      0.978        0.970  0.463         1.84
 5 mu         0.5      0.985        0.979  0.623         1.32
 6 mu         0.6      1.01         0.988  0.610         1.57
 7 mu         0.7      1.01         1.01   0.601         1.64
 8 mu         0.8      0.997        0.985  0.202         2.53
 9 mu         0.9      1.04         0.866  0.0174        7.68
10 mu_1       0.1      1.16         0.852  0.00529      22.8 
11 mu_1       0.2      1.02         0.930  0.0947        4.99
12 mu_1       0.3      0.994        0.966  0.304         2.20
13 mu_1       0.4      0.981        0.978  0.541         1.53
14 mu_1       0.5      0.992        0.981  0.644         1.35
15 mu_1       0.6      1.01         0.990  0.599         1.62
16 mu_1       0.7      1.00         1.01   0.514         1.61
17 mu_1       0.8      0.996        0.978  0.164         2.95
18 mu_1       0.9      1.05         0.858  0.0131        8.45
19 mu_0       0.1      1.32         0.569  0.000837     39.7 
20 mu_0       0.2      1.08         0.906  0.0377       14.6 
21 mu_0       0.3      1.00         0.955  0.186         4.44
22 mu_0       0.4      0.977        0.955  0.411         2.04
23 mu_0       0.5      0.978        0.973  0.602         1.40
24 mu_0       0.6      1.00         1.00   0.628         1.48
25 mu_0       0.7      1.02         1.02   0.625         1.70
26 mu_0       0.8      1.00         1.02   0.355         1.61
27 mu_0       0.9      0.981        1.01   0.0562        2.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.960     0.000245  2.09e-14     43.0 
 2 mu         0.2      1.10      0.0157    1.37e- 9     37.2 
 3 mu         0.3      1.05      0.161     8.99e- 7     14.7 
 4 mu         0.4      1.00      0.504     8.97e- 5      5.77
 5 mu         0.5      0.976     0.960     3.19e- 3      2.92
 6 mu         0.6      1.01      0.911     6.79e- 4      3.03
 7 mu         0.7      1.14      0.996     1.06e- 5      5.94
 8 mu         0.8      1.40      0.474     2.76e- 8      7.34
 9 mu         0.9      2.00      0.0339    9.49e-13     38.7 
10 mu_1       0.1      1.34      0.00147   2.09e-13     57.3 
11 mu_1       0.2      1.12      0.0465    6.84e- 9     24.8 
12 mu_1       0.3      1.02      0.306     3.00e- 6      6.67
13 mu_1       0.4      0.972     0.772     2.24e- 4      5.05
14 mu_1       0.5      0.960     0.979     2.01e- 3      3.08
15 mu_1       0.6      1.02      0.956     7.07e- 5      3.55
16 mu_1       0.7      1.17      0.987     9.45e- 7      6.26
17 mu_1       0.8      1.46      0.352     2.16e- 9      8.03
18 mu_1       0.9      2.08      0.0229    6.59e-14     43.0 
19 mu_0       0.1      0.918     0.000100  0            41.4 
20 mu_0       0.2      1.10      0.00724   0            40.3 
21 mu_0       0.3      1.06      0.0940    0            18.3 
22 mu_0       0.4      1.02      0.320     0             6.25
23 mu_0       0.5      0.991     0.712     0             3.34
24 mu_0       0.6      0.995     0.995     0             3.25
25 mu_0       0.7      1.06      0.919     0             5.21
26 mu_0       0.8      1.19      0.697     0             6.68
27 mu_0       0.9      1.28      0.0791    0            11.9 
[1] "Total run time was 62.986 seconds"
