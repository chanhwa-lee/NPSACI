
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1271"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  8  3  4  6 12  5  6  2  7  7  7  8 11  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03632 0.36038 0.60162 1.00000 4.77884 
[1] "event indicator table: "

  0   1 
728 543 
[1] "treatment indicator table: "

  0   1 
509 762 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.93 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.430 0.124 
 2 mu         0.1   0.2 0.476 0.129 
 3 mu         0.1   0.3 0.497 0.122 
 4 mu         0.1   0.4 0.495 0.120 
 5 mu         0.1   0.5 0.496 0.118 
 6 mu         0.2   0.1 0.385 0.104 
 7 mu         0.2   0.2 0.440 0.107 
 8 mu         0.2   0.3 0.475 0.0978
 9 mu         0.2   0.4 0.479 0.0937
10 mu         0.2   0.5 0.482 0.0875
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.707        0.233 0.00000406      8.47
 2 mu         0.2      0.748        0.649 0.00113         4.38
 3 mu         0.3      0.853        0.858 0.0223          2.49
 4 mu         0.4      0.945        0.929 0.141           1.80
 5 mu         0.5      0.990        0.988 0.456           1.43
 6 mu         0.6      0.999        0.984 0.474           1.50
 7 mu         0.7      1.01         0.985 0.596           1.36
 8 mu         0.8      1.05         0.999 0.451           1.86
 9 mu         0.9      1.12         1.06  0.0984          2.77
10 mu_1       0.1      0.696        0.548 0.0000233       2.77
11 mu_1       0.2      0.800        0.708 0.00332         2.36
12 mu_1       0.3      0.907        0.863 0.0447          2.03
13 mu_1       0.4      0.975        0.978 0.219           1.65
14 mu_1       0.5      0.999        0.993 0.586           1.45
15 mu_1       0.6      1.00         0.987 0.453           1.48
16 mu_1       0.7      1.01         0.984 0.614           1.52
17 mu_1       0.8      1.06         1.01  0.375           2.02
18 mu_1       0.9      1.13         1.07  0.0764          2.88
19 mu_0       0.1      0.708        0.194 0.00000192      9.20
20 mu_0       0.2      0.735        0.638 0.000585        5.06
21 mu_0       0.3      0.830        0.775 0.0127          2.96
22 mu_0       0.4      0.925        0.904 0.0896          1.99
23 mu_0       0.5      0.982        0.967 0.327           1.58
24 mu_0       0.6      0.996        1.00  0.507           1.52
25 mu_0       0.7      0.988        0.977 0.495           1.40
26 mu_0       0.8      0.988        0.959 0.510           1.72
27 mu_0       0.9      1.02         0.960 0.278           2.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.73     0.000456  2.27e-18    183.  
 2 mu         0.2       4.42     0.0222    2.38e-12    282.  
 3 mu         0.3       3.37     0.153     7.92e- 9    147.  
 4 mu         0.4       2.19     0.515     2.50e- 6     40.2 
 5 mu         0.5       1.51     0.999     2.17e- 4     11.9 
 6 mu         0.6       1.15     1.04      6.38e- 3      4.74
 7 mu         0.7       1.07     0.895     2.36e- 4      3.78
 8 mu         0.8       1.40     0.483     1.90e- 6     15.7 
 9 mu         0.9       2.62     0.0666    2.94e-10     58.2 
10 mu_1       0.1       4.87     0.00292   2.27e-17    323.  
11 mu_1       0.2       4.41     0.0711    1.19e-11    249.  
12 mu_1       0.3       2.77     0.337     2.64e- 8     86.3 
13 mu_1       0.4       1.81     0.704     6.25e- 6     17.7 
14 mu_1       0.5       1.31     1.08      4.33e- 4      9.83
15 mu_1       0.6       1.08     1.00      8.18e- 4      3.15
16 mu_1       0.7       1.09     0.879     2.59e- 5      4.68
17 mu_1       0.8       1.48     0.383     2.00e- 7     18.5 
18 mu_1       0.9       2.72     0.0410    4.35e-11     61.0 
19 mu_0       0.1       2.49     0.000205  0           168.  
20 mu_0       0.2       4.43     0.0104    0           290.  
21 mu_0       0.3       3.62     0.0734    0           173.  
22 mu_0       0.4       2.45     0.363     0            55.2 
23 mu_0       0.5       1.71     0.778     0            14.3 
24 mu_0       0.6       1.26     1.02      0             8.46
25 mu_0       0.7       1.05     0.986     0             3.64
26 mu_0       0.8       1.09     0.848     0             6.35
27 mu_0       0.9       1.77     0.169     0            32.3 
[1] "Total run time was 53.813 seconds"
