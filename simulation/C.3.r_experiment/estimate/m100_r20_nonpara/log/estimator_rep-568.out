
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1197"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  8  7  5  8  6  6  4  7  5  6  5  6  8  8  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05864 0.43846 0.65659 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
736 461 
[1] "treatment indicator table: "

  0   1 
350 847 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 105.492 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.221 0.163 
 2 mu         0.1   0.2 0.238 0.136 
 3 mu         0.1   0.3 0.202 0.118 
 4 mu         0.1   0.4 0.128 0.0849
 5 mu         0.1   0.5 0.116 0.0708
 6 mu         0.2   0.1 0.276 0.117 
 7 mu         0.2   0.2 0.277 0.0966
 8 mu         0.2   0.3 0.283 0.0895
 9 mu         0.2   0.4 0.244 0.0719
10 mu         0.2   0.5 0.242 0.0636
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1     0.123       0.00993 0.0000000531      1.68
 2 mu         0.2     0.395       0.114   0.0000972         4.85
 3 mu         0.3     0.672       0.391   0.00470           5.25
 4 mu         0.4     0.865       0.680   0.0394            4.70
 5 mu         0.5     0.977       0.898   0.164             3.07
 6 mu         0.6     1.01        1.00    0.434             1.75
 7 mu         0.7     1.00        0.999   0.828             1.27
 8 mu         0.8     1.00        1.01    0.596             1.34
 9 mu         0.9     1.02        0.967   0.170             2.19
10 mu_1       0.1     0.339       0.0445  0.000000336       4.24
11 mu_1       0.2     0.626       0.270   0.000308          6.23
12 mu_1       0.3     0.824       0.579   0.0101            5.30
13 mu_1       0.4     0.944       0.826   0.0648            4.27
14 mu_1       0.5     1.01        0.982   0.224             2.51
15 mu_1       0.6     1.02        1.02    0.520             1.50
16 mu_1       0.7     1.00        0.999   0.782             1.26
17 mu_1       0.8     1.00        1.02    0.556             1.37
18 mu_1       0.9     1.03        0.956   0.145             2.30
19 mu_0       0.1     0.0988      0.00579 0.0000000217      1.39
20 mu_0       0.2     0.337       0.0786  0.0000445         4.51
21 mu_0       0.3     0.607       0.282   0.00240           5.52
22 mu_0       0.4     0.813       0.567   0.0224            4.99
23 mu_0       0.5     0.946       0.817   0.104             3.63
24 mu_0       0.6     1.01        0.992   0.304             2.13
25 mu_0       0.7     1.00        1.00    0.608             1.36
26 mu_0       0.8     0.991       0.985   0.686             1.35
27 mu_0       0.9     0.999       1.01    0.368             1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.450   0.00000918  1.24e-16     15.0 
 2 mu         0.2      1.03    0.00160     5.79e-11     43.5 
 3 mu         0.3      1.56    0.0199      1.12e- 7     57.6 
 4 mu         0.4      1.84    0.115       2.28e- 5     46.4 
 5 mu         0.5      1.71    0.402       1.32e- 3     29.7 
 6 mu         0.6      1.38    0.777       3.37e- 2     11.0 
 7 mu         0.7      1.14    1.07        3.84e- 1      2.44
 8 mu         0.8      1.10    0.849       5.35e- 2      4.34
 9 mu         0.9      1.38    0.202       6.71e- 5     22.8 
10 mu_1       0.1      1.11    0.0000714   1.18e-15     37.2 
11 mu_1       0.2      1.52    0.00700     2.75e-10     65.2 
12 mu_1       0.3      1.76    0.0519      3.56e- 7     57.6 
13 mu_1       0.4      1.79    0.218       5.41e- 5     39.0 
14 mu_1       0.5      1.55    0.594       2.50e- 3     25.0 
15 mu_1       0.6      1.25    0.930       5.33e- 2      7.70
16 mu_1       0.7      1.09    1.06        1.03e- 1      2.31
17 mu_1       0.8      1.11    0.740       1.36e- 2      5.42
18 mu_1       0.9      1.42    0.150       3.14e- 5     25.4 
19 mu_0       0.1      0.377   0.00000166  0            13.9 
20 mu_0       0.2      0.912   0.000300    0            38.0 
21 mu_0       0.3      1.47    0.00644     0            57.6 
22 mu_0       0.4      1.87    0.0513      0            54.1 
23 mu_0       0.5      1.88    0.204       0            35.4 
24 mu_0       0.6      1.57    0.536       0            16.0 
25 mu_0       0.7      1.26    1.05        0             4.53
26 mu_0       0.8      1.08    1.13        0             3.55
27 mu_0       0.9      1.02    0.468       0             9.33
[1] "Total run time was 110.59 seconds"
