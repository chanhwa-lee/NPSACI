
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1287"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  4  7  9  7  8  2  6  8  8  5  9  4  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04345 0.33209 0.61482 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
779 508 
[1] "treatment indicator table: "

  0   1 
460 827 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 55.219 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.463 0.133 
 2 mu         0.1   0.2 0.596 0.179 
 3 mu         0.1   0.3 0.662 0.215 
 4 mu         0.1   0.4 0.667 0.217 
 5 mu         0.1   0.5 0.716 0.215 
 6 mu         0.2   0.1 0.421 0.0688
 7 mu         0.2   0.2 0.542 0.101 
 8 mu         0.2   0.3 0.617 0.124 
 9 mu         0.2   0.4 0.628 0.122 
10 mu         0.2   0.5 0.681 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06         0.356 0.0000371     26.0 
 2 mu         0.2      1.07         0.721 0.00508        8.06
 3 mu         0.3      1.05         0.903 0.0490         5.85
 4 mu         0.4      1.04         0.999 0.188          3.25
 5 mu         0.5      1.02         1.00  0.441          1.83
 6 mu         0.6      1.01         0.994 0.510          2.03
 7 mu         0.7      1.00         0.977 0.561          1.78
 8 mu         0.8      0.988        0.949 0.463          1.71
 9 mu         0.9      0.980        0.894 0.132          3.30
10 mu_1       0.1      1.19         0.591 0.000177      15.4 
11 mu_1       0.2      1.09         0.889 0.0123         7.51
12 mu_1       0.3      1.06         0.983 0.0832         4.04
13 mu_1       0.4      1.04         0.971 0.258          2.11
14 mu_1       0.5      1.02         1.01  0.528          1.89
15 mu_1       0.6      1.01         0.992 0.510          2.05
16 mu_1       0.7      1.00         0.985 0.579          1.67
17 mu_1       0.8      0.983        0.946 0.392          1.73
18 mu_1       0.9      0.981        0.875 0.104          3.58
19 mu_0       0.1      1.05         0.321 0.0000216     27.2 
20 mu_0       0.2      1.06         0.701 0.00327        9.43
21 mu_0       0.3      1.05         0.868 0.0343         6.63
22 mu_0       0.4      1.04         0.994 0.132          4.02
23 mu_0       0.5      1.03         1.01  0.281          2.18
24 mu_0       0.6      1.02         0.996 0.497          2.00
25 mu_0       0.7      1.01         0.998 0.521          2.04
26 mu_0       0.8      1.01         0.997 0.562          1.81
27 mu_0       0.9      0.970        0.944 0.306          2.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      31.5    0.0000254   3.16e-16   2604.  
 2 mu         0.2      16.0    0.00360     7.36e-11   1001.  
 3 mu         0.3       6.34   0.0669      9.52e- 8    232.  
 4 mu         0.4       2.54   0.264       1.45e- 5     72.0 
 5 mu         0.5       1.39   0.669       6.70e- 4     15.8 
 6 mu         0.6       1.22   0.911       1.43e- 2      5.88
 7 mu         0.7       1.41   1.06        3.81e- 3     14.1 
 8 mu         0.8       1.61   1.06        1.49e- 5     13.8 
 9 mu         0.9       1.54   0.276       1.02e- 9     29.7 
10 mu_1       0.1      24.5    0.000164    2.99e-15   1736.  
11 mu_1       0.2       8.46   0.0144      3.49e-10    334.  
12 mu_1       0.3       3.33   0.156       3.01e- 7    129.  
13 mu_1       0.4       1.64   0.500       3.43e- 5     36.0 
14 mu_1       0.5       1.19   0.728       1.27e- 3      6.31
15 mu_1       0.6       1.23   1.01        2.04e- 2      7.35
16 mu_1       0.7       1.45   1.14        3.63e- 4     15.1 
17 mu_1       0.8       1.62   0.950       1.24e- 6     12.9 
18 mu_1       0.9       1.52   0.198       7.59e-11     33.0 
19 mu_0       0.1      32.3    0.00000809  0          2701.  
20 mu_0       0.2      17.9    0.00110     0          1168.  
21 mu_0       0.3       7.62   0.0221      0           309.  
22 mu_0       0.4       3.14   0.107       0            96.0 
23 mu_0       0.5       1.58   0.433       0            25.2 
24 mu_0       0.6       1.22   0.647       0             7.12
25 mu_0       0.7       1.31   1.03        0            11.7 
26 mu_0       0.8       1.58   1.08        0            17.2 
27 mu_0       0.9       1.68   0.398       0            10.3 
[1] "Total run time was 58.326 seconds"
