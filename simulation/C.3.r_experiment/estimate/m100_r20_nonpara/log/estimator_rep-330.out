
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1270"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  7  9  5  6  9  7  5  6  3  5 11  4  3 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03667 0.33733 0.62330 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
748 522 
[1] "treatment indicator table: "

  0   1 
473 797 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 70.145 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.588 0.400
 2 mu         0.1   0.2 0.824 0.547
 3 mu         0.1   0.3 0.982 0.647
 4 mu         0.1   0.4 1.02  0.670
 5 mu         0.1   0.5 1.15  0.753
 6 mu         0.2   0.1 0.338 0.107
 7 mu         0.2   0.2 0.448 0.134
 8 mu         0.2   0.3 0.572 0.152
 9 mu         0.2   0.4 0.598 0.162
10 mu         0.2   0.5 0.702 0.187
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      2.10        0.0814 0.00000342    136.  
 2 mu         0.2      1.37        0.484  0.00139        33.3 
 3 mu         0.3      1.13        0.896  0.0286          9.81
 4 mu         0.4      1.03        1.02   0.163           6.05
 5 mu         0.5      1.00        0.987  0.395           2.93
 6 mu         0.6      1.01        1.00   0.675           1.56
 7 mu         0.7      1.01        1.03   0.625           1.66
 8 mu         0.8      0.987       0.916  0.267           3.85
 9 mu         0.9      0.953       0.622  0.0247         13.3 
10 mu_1       0.1      1.15        0.233  0.0000190      22.9 
11 mu_1       0.2      1.13        0.707  0.00387        11.3 
12 mu_1       0.3      1.06        1.00   0.0537          8.73
13 mu_1       0.4      1.01        0.990  0.235           4.55
14 mu_1       0.5      0.998       0.981  0.485           2.27
15 mu_1       0.6      1.01        0.999  0.750           1.36
16 mu_1       0.7      1.01        0.995  0.576           1.79
17 mu_1       0.8      0.980       0.893  0.227           4.38
18 mu_1       0.9      0.947       0.592  0.0192         13.9 
19 mu_0       0.1      2.21        0.0642 0.00000169    151.  
20 mu_0       0.2      1.43        0.406  0.000766       41.6 
21 mu_0       0.3      1.16        0.833  0.0179         10.3 
22 mu_0       0.4      1.05        0.990  0.114           7.06
23 mu_0       0.5      1.01        0.995  0.305           3.60
24 mu_0       0.6      1.01        1.02   0.564           1.86
25 mu_0       0.7      1.03        1.02   0.740           1.35
26 mu_0       0.8      1.01        0.991  0.428           2.03
27 mu_0       0.9      1.01        0.872  0.0738          7.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.75    0.0000840  4.02e-13    283.  
 2 mu         0.2       5.90    0.00692    3.70e- 8    249.  
 3 mu         0.3       3.70    0.0736     2.34e- 5    146.  
 4 mu         0.4       2.07    0.336      1.50e- 3     66.4 
 5 mu         0.5       1.28    0.775      3.06e- 2     23.1 
 6 mu         0.6       1.07    0.976      1.90e- 1      5.83
 7 mu         0.7       1.26    1.10       8.38e- 3      4.11
 8 mu         0.8       2.01    0.664      7.35e- 5     19.4 
 9 mu         0.9       3.49    0.105      1.44e- 8     89.8 
10 mu_1       0.1       7.97    0.000473   3.42e-12    354.  
11 mu_1       0.2       4.06    0.0231     1.57e- 7    155.  
12 mu_1       0.3       2.16    0.158      6.92e- 5     61.0 
13 mu_1       0.4       1.32    0.549      3.52e- 3     20.7 
14 mu_1       0.5       1.04    0.871      5.63e- 2      5.79
15 mu_1       0.6       1.05    1.08       5.04e- 2      3.56
16 mu_1       0.7       1.34    1.06       2.82e- 3      4.99
17 mu_1       0.8       2.16    0.510      2.16e- 5     24.3 
18 mu_1       0.9       3.63    0.0749     3.76e- 9     99.7 
19 mu_0       0.1       6.62    0.0000317  0           276.  
20 mu_0       0.2       6.36    0.00218    0           272.  
21 mu_0       0.3       4.36    0.0331     0           183.  
22 mu_0       0.4       2.57    0.169      0            96.8 
23 mu_0       0.5       1.52    0.521      0            40.5 
24 mu_0       0.6       1.09    0.886      0            12.7 
25 mu_0       0.7       1.07    1.13       0             3.30
26 mu_0       0.8       1.42    1.09       0             8.84
27 mu_0       0.9       2.21    0.318      0            30.0 
[1] "Total run time was 73.588 seconds"
