
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1249"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  3  9  8  6  7  4  8  2  5  7  7  4  7  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01835 0.33400 0.62087 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
753 496 
[1] "treatment indicator table: "

  0   1 
490 759 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.512 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.334 0.115 
 2 mu         0.1   0.2 0.470 0.111 
 3 mu         0.1   0.3 0.480 0.115 
 4 mu         0.1   0.4 0.491 0.105 
 5 mu         0.1   0.5 0.483 0.101 
 6 mu         0.2   0.1 0.275 0.0818
 7 mu         0.2   0.2 0.402 0.0857
 8 mu         0.2   0.3 0.409 0.0813
 9 mu         0.2   0.4 0.424 0.0685
10 mu         0.2   0.5 0.421 0.0643
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.754        0.140 0.0000000597      7.29
 2 mu         0.2      0.718        0.563 0.0000608         3.99
 3 mu         0.3      0.789        0.847 0.00241           2.51
 4 mu         0.4      0.875        0.920 0.0239            1.63
 5 mu         0.5      0.932        0.956 0.106             1.49
 6 mu         0.6      0.957        0.961 0.282             1.81
 7 mu         0.7      0.956        0.960 0.470             1.94
 8 mu         0.8      0.930        0.935 0.189             2.67
 9 mu         0.9      0.859        0.799 0.00957           3.03
10 mu_1       0.1      0.642        0.412 0.000000387       4.18
11 mu_1       0.2      0.724        0.718 0.000197          1.98
12 mu_1       0.3      0.824        0.876 0.00524           1.65
13 mu_1       0.4      0.899        0.939 0.0393            1.54
14 mu_1       0.5      0.942        0.948 0.143             1.67
15 mu_1       0.6      0.958        0.944 0.335             1.78
16 mu_1       0.7      0.955        0.946 0.392             2.11
17 mu_1       0.8      0.928        0.921 0.144             2.64
18 mu_1       0.9      0.856        0.762 0.00682           3.19
19 mu_0       0.1      0.767        0.110 0.0000000234      7.81
20 mu_0       0.2      0.716        0.495 0.0000267         4.72
21 mu_0       0.3      0.774        0.792 0.00120           3.20
22 mu_0       0.4      0.859        0.899 0.0136            2.15
23 mu_0       0.5      0.923        0.972 0.0687            1.52
24 mu_0       0.6      0.954        0.973 0.202             1.85
25 mu_0       0.7      0.957        0.945 0.422             1.57
26 mu_0       0.8      0.937        0.947 0.330             2.77
27 mu_0       0.9      0.884        0.865 0.0343            2.25
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    9007.      0.0000704  4.15e-15  900615. 
 2 mu         0.2    3898.      0.00742    8.60e-10  389571. 
 3 mu         0.3    1033.      0.107      9.73e- 7  102987. 
 4 mu         0.4     189.      0.468      1.22e- 4   18510. 
 5 mu         0.5      24.5     0.932      3.48e- 3    2163. 
 6 mu         0.6       3.38    1.06       1.49e- 2     143. 
 7 mu         0.7       1.51    1.07       4.20e- 4      12.3
 8 mu         0.8       1.79    0.685      2.01e- 6      53.1
 9 mu         0.9       2.43    0.171      4.91e-11      98.3
10 mu_1       0.1    6434.      0.000485   3.74e-14  643296. 
11 mu_1       0.2    1395.      0.0237     3.87e- 9  139132. 
12 mu_1       0.3     249.      0.210      2.92e- 6   24521. 
13 mu_1       0.4      36.6     0.654      2.85e- 4    3305. 
14 mu_1       0.5       5.72    1.11       6.96e- 3     309. 
15 mu_1       0.6       1.93    1.12       4.37e- 3      28.1
16 mu_1       0.7       1.46    0.976      1.06e- 4      15.8
17 mu_1       0.8       1.87    0.537      4.74e- 7      59.4
18 mu_1       0.9       2.46    0.123      1.09e-11      97.7
19 mu_0       0.1    9293.      0.0000251  0         929206. 
20 mu_0       0.2    4524.      0.00389    0         452180. 
21 mu_0       0.3    1369.      0.0580     0         136615. 
22 mu_0       0.4     290.      0.333      0          28647. 
23 mu_0       0.5      43.4     0.713      0           4016. 
24 mu_0       0.6       5.56    1.04       0            331. 
25 mu_0       0.7       1.63    0.903      0             22.3
26 mu_0       0.8       1.48    0.913      0             27.9
27 mu_0       0.9       2.21    0.314      0            103. 
[1] "Total run time was 61.681 seconds"
