
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1186"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
12  7  9  6  5  6  4  4  6  9  4  3  5  7  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03653 0.38155 0.63146 1.00000 6.92746 
[1] "event indicator table: "

  0   1 
720 466 
[1] "treatment indicator table: "

  0   1 
402 784 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 581
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 71.894 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.371 0.0698
 2 mu         0.1   0.2 0.398 0.0585
 3 mu         0.1   0.3 0.425 0.0586
 4 mu         0.1   0.4 0.502 0.0758
 5 mu         0.1   0.5 0.525 0.0826
 6 mu         0.2   0.1 0.352 0.0548
 7 mu         0.2   0.2 0.391 0.0505
 8 mu         0.2   0.3 0.446 0.0574
 9 mu         0.2   0.4 0.536 0.0613
10 mu         0.2   0.5 0.579 0.0667
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.944        0.486 0.00000262      6.50
 2 mu         0.2      1.07         0.808 0.00118         7.24
 3 mu         0.3      1.04         0.970 0.0267          4.69
 4 mu         0.4      0.999        0.996 0.121           3.67
 5 mu         0.5      0.986        0.969 0.282           2.65
 6 mu         0.6      0.986        1.01  0.530           1.64
 7 mu         0.7      0.987        0.995 0.591           1.50
 8 mu         0.8      0.995        0.986 0.284           1.80
 9 mu         0.9      0.997        1.02  0.0398          2.45
10 mu_1       0.1      1.20         0.866 0.0000141       9.17
11 mu_1       0.2      1.09         0.958 0.00324         6.33
12 mu_1       0.3      1.01         1.01  0.0468          4.10
13 mu_1       0.4      0.986        0.960 0.160           3.53
14 mu_1       0.5      0.985        0.984 0.330           2.26
15 mu_1       0.6      0.988        0.997 0.552           1.60
16 mu_1       0.7      0.990        0.999 0.558           1.49
17 mu_1       0.8      0.998        1.00  0.246           1.88
18 mu_1       0.9      0.999        1.02  0.0339          2.51
19 mu_0       0.1      0.915        0.427 0.00000135      6.82
20 mu_0       0.2      1.06         0.766 0.000670        7.47
21 mu_0       0.3      1.04         0.895 0.0169          5.29
22 mu_0       0.4      1.01         1.01  0.0952          4.14
23 mu_0       0.5      0.987        0.988 0.219           3.05
24 mu_0       0.6      0.984        1.00  0.337           1.84
25 mu_0       0.7      0.982        1.01  0.485           1.60
26 mu_0       0.8      0.983        0.968 0.433           1.50
27 mu_0       0.9      0.978        0.939 0.0934          2.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.45    0.000128   1.10e-15    549.  
 2 mu         0.2       3.74    0.00583    2.55e-10    132.  
 3 mu         0.3       2.41    0.0839     3.30e- 7     56.4 
 4 mu         0.4       1.83    0.352      5.02e- 5     25.6 
 5 mu         0.5       1.42    0.750      1.22e- 3     12.1 
 6 mu         0.6       1.16    1.02       1.51e- 3      5.73
 7 mu         0.7       1.12    1.00       9.93e- 6      3.92
 8 mu         0.8       1.18    0.986      7.68e- 9      4.70
 9 mu         0.9       1.26    0.269      3.29e-14     18.3 
10 mu_1       0.1       5.94    0.000892   1.04e-14    289.  
11 mu_1       0.2       2.71    0.0238     1.21e- 9     59.9 
12 mu_1       0.3       1.89    0.200      1.04e- 6     23.5 
13 mu_1       0.4       1.48    0.516      1.19e- 4     13.8 
14 mu_1       0.5       1.21    0.825      2.44e- 3      6.94
15 mu_1       0.6       1.08    0.959      1.32e- 4      3.79
16 mu_1       0.7       1.11    0.966      7.46e- 7      3.95
17 mu_1       0.8       1.19    1.03       5.05e-10      5.20
18 mu_1       0.9       1.27    0.215      1.93e-15     19.2 
19 mu_0       0.1       7.62    0.0000326  0           578.  
20 mu_0       0.2       4.00    0.00248    0           156.  
21 mu_0       0.3       2.64    0.0367     0            70.5 
22 mu_0       0.4       2.06    0.145      0            37.3 
23 mu_0       0.5       1.63    0.450      0            17.3 
24 mu_0       0.6       1.29    0.859      0            10.2 
25 mu_0       0.7       1.14    1.03       0             4.40
26 mu_0       0.8       1.16    1.02       0             4.95
27 mu_0       0.9       1.17    0.315      0             9.62
[1] "Total run time was 76.369 seconds"
