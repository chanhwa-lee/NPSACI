
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1132"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9 11  6  3  7  8  9 10  9  4  3  3  6  5  5  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0419  0.3415  0.6025  0.9895  5.4026 
[1] "event indicator table: "

  0   1 
683 449 
[1] "treatment indicator table: "

  0   1 
394 738 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 586
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 546
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 85.299 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.647 0.280 
 2 mu         0.1   0.2 0.814 0.344 
 3 mu         0.1   0.3 0.933 0.393 
 4 mu         0.1   0.4 1.11  0.466 
 5 mu         0.1   0.5 1.29  0.512 
 6 mu         0.2   0.1 0.401 0.0869
 7 mu         0.2   0.2 0.505 0.104 
 8 mu         0.2   0.3 0.592 0.129 
 9 mu         0.2   0.4 0.693 0.140 
10 mu         0.2   0.5 0.781 0.153 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.88         0.235 0.0000269     65.9 
 2 mu         0.2      1.23         0.652 0.00593       16.7 
 3 mu         0.3      1.05         0.873 0.0877         4.58
 4 mu         0.4      1.01         0.982 0.234          2.25
 5 mu         0.5      1.01         0.985 0.395          1.67
 6 mu         0.6      1.00         1.00  0.647          1.42
 7 mu         0.7      1.00         0.999 0.741          1.42
 8 mu         0.8      0.988        1.01  0.494          1.79
 9 mu         0.9      0.937        0.917 0.132          2.22
10 mu_1       0.1      1.13         0.536 0.000132      16.5 
11 mu_1       0.2      1.04         0.844 0.0149         6.05
12 mu_1       0.3      1.01         0.973 0.151          3.27
13 mu_1       0.4      1.01         0.974 0.283          1.84
14 mu_1       0.5      1.01         1.01  0.452          1.58
15 mu_1       0.6      1.00         1.01  0.691          1.40
16 mu_1       0.7      0.999        1.00  0.745          1.47
17 mu_1       0.8      0.984        0.995 0.436          1.83
18 mu_1       0.9      0.930        0.910 0.110          2.24
19 mu_0       0.1      1.96         0.191 0.0000153     72.8 
20 mu_0       0.2      1.28         0.578 0.00368       20.2 
21 mu_0       0.3      1.06         0.835 0.0602         5.80
22 mu_0       0.4      1.01         0.958 0.200          2.58
23 mu_0       0.5      1.01         0.980 0.339          1.80
24 mu_0       0.6      1.01         1.00  0.480          1.53
25 mu_0       0.7      1.00         1.01  0.590          1.41
26 mu_0       0.8      1.00         1.01  0.569          1.63
27 mu_0       0.9      1.00         0.994 0.337          2.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.430    0.000125   4.62e-17      9.32
 2 mu         0.2      1.22     0.00573    1.21e-11     23.7 
 3 mu         0.3      1.50     0.0713     1.79e- 8     21.2 
 4 mu         0.4      1.33     0.271      3.18e- 6     13.2 
 5 mu         0.5      1.09     0.757      1.76e- 4      5.20
 6 mu         0.6      0.995    0.971      4.69e- 3      2.67
 7 mu         0.7      1.04     1.03       1.03e- 2      3.53
 8 mu         0.8      1.11     1.05       9.05e- 5      4.37
 9 mu         0.9      1.24     0.243      1.77e- 8     11.2 
10 mu_1       0.1      1.04     0.00115    4.62e-16     16.7 
11 mu_1       0.2      1.62     0.0201     6.06e-11     27.9 
12 mu_1       0.3      1.51     0.159      5.97e- 8     18.6 
13 mu_1       0.4      1.23     0.520      7.94e- 6      9.43
14 mu_1       0.5      1.03     0.852      3.53e- 4      4.12
15 mu_1       0.6      1.01     0.917      7.82e- 3      3.05
16 mu_1       0.7      1.07     1.11       3.47e- 3      3.45
17 mu_1       0.8      1.12     1.00       2.66e- 5      4.89
18 mu_1       0.9      1.26     0.179      4.62e- 9     12.5 
19 mu_0       0.1      0.363    0.0000264  0             8.63
20 mu_0       0.2      1.12     0.00227    0            22.7 
21 mu_0       0.3      1.50     0.0275     0            23.1 
22 mu_0       0.4      1.40     0.140      0            15.7 
23 mu_0       0.5      1.14     0.499      0             7.43
24 mu_0       0.6      0.980    0.928      0             3.06
25 mu_0       0.7      0.991    0.843      0             3.72
26 mu_0       0.8      1.04     1.08       0             2.78
27 mu_0       0.9      1.03     0.525      0             8.53
[1] "Total run time was 90.081 seconds"
