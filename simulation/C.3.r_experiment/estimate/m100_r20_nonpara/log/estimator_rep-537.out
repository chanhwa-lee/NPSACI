
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1192"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9 10  3  6  6  6  3  9 11  9  4  3  5  6  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02795 0.36622 0.62627 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
720 472 
[1] "treatment indicator table: "

  0   1 
425 767 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 61.271 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.674 0.307
 2 mu         0.1   0.2 0.883 0.396
 3 mu         0.1   0.3 0.924 0.424
 4 mu         0.1   0.4 1.00  0.468
 5 mu         0.1   0.5 1.02  0.482
 6 mu         0.2   0.1 0.748 0.361
 7 mu         0.2   0.2 0.971 0.454
 8 mu         0.2   0.3 1.05  0.495
 9 mu         0.2   0.4 1.13  0.550
10 mu         0.2   0.5 1.17  0.574
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1       1.48       0.0498 0.0000000556     81.0 
 2 mu         0.2       1.93       0.349  0.0000957        98.5 
 3 mu         0.3       1.43       0.741  0.00337          39.5 
 4 mu         0.4       1.11       0.960  0.0258            8.65
 5 mu         0.5       1.04       1.02   0.105             1.94
 6 mu         0.6       1.04       1.03   0.217             2.25
 7 mu         0.7       1.07       0.998  0.0511            3.36
 8 mu         0.8       1.13       0.923  0.00496           6.01
 9 mu         0.9       1.22       0.774  0.0000612         9.94
10 mu_1       0.1       2.06       0.166  0.000000335     128.  
11 mu_1       0.2       1.84       0.604  0.000290         77.8 
12 mu_1       0.3       1.27       0.891  0.00754          21.1 
13 mu_1       0.4       1.07       0.983  0.0443            4.03
14 mu_1       0.5       1.04       1.02   0.149             2.07
15 mu_1       0.6       1.05       1.03   0.140             2.94
16 mu_1       0.7       1.09       0.971  0.0299            4.20
17 mu_1       0.8       1.15       0.924  0.00265           6.32
18 mu_1       0.9       1.24       0.741  0.0000303        10.7 
19 mu_0       0.1       1.42       0.0375 0.0000000245     75.8 
20 mu_0       0.2       1.96       0.281  0.0000471       104.  
21 mu_0       0.3       1.50       0.639  0.00158          47.4 
22 mu_0       0.4       1.14       0.928  0.0135           11.7 
23 mu_0       0.5       1.04       0.991  0.0611            2.47
24 mu_0       0.6       1.02       1.03   0.182             1.66
25 mu_0       0.7       1.03       1.01   0.101             2.12
26 mu_0       0.8       1.06       0.987  0.0142            4.79
27 mu_0       0.9       1.06       0.874  0.000339          8.27
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      41.2    0.0000655   1.69e-16    3760. 
 2 mu         0.2      22.4    0.00524     8.86e-11    1626. 
 3 mu         0.3      10.7    0.0714      1.96e- 7     430. 
 4 mu         0.4       6.57   0.292       4.64e- 5     358. 
 5 mu         0.5       4.54   0.663       3.22e- 3     265. 
 6 mu         0.6       3.36   0.903       9.78e- 2     106. 
 7 mu         0.7       3.33   1.11        4.04e- 3      82.8
 8 mu         0.8       4.12   0.956       2.07e- 5      93.2
 9 mu         0.9       6.73   0.284       1.80e- 9     228. 
10 mu_1       0.1      33.5    0.000472    1.69e-15    2685. 
11 mu_1       0.2      12.4    0.0209      4.43e-10     581. 
12 mu_1       0.3       7.14   0.152       6.54e- 7     340. 
13 mu_1       0.4       5.40   0.566       1.16e- 4     358. 
14 mu_1       0.5       3.95   0.912       6.44e- 3     212. 
15 mu_1       0.6       3.26   0.909       4.20e- 2      70.7
16 mu_1       0.7       3.51   1.26        1.02e- 3      90.9
17 mu_1       0.8       4.36   0.758       4.56e- 6      91.8
18 mu_1       0.9       7.11   0.218       3.52e-10     254. 
19 mu_0       0.1      42.1    0.00000686  0           3879. 
20 mu_0       0.2      24.9    0.00197     0           1888. 
21 mu_0       0.3      12.2    0.0275      0            570. 
22 mu_0       0.4       7.35   0.132       0            358. 
23 mu_0       0.5       5.12   0.426       0            318. 
24 mu_0       0.6       3.51   0.743       0            159. 
25 mu_0       0.7       2.89   0.869       0             63.7
26 mu_0       0.8       3.14   1.09        0            108. 
27 mu_0       0.9       3.36   0.376       0             87.3
[1] "Total run time was 65.186 seconds"
