
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1240"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  2  9  7 11  3  6  4  6  6  4  9  7  8  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0298  0.3406  0.6222  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
744 496 
[1] "treatment indicator table: "

  0   1 
432 808 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.378 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.190 0.0566
 2 mu         0.1   0.2 0.250 0.0728
 3 mu         0.1   0.3 0.271 0.0746
 4 mu         0.1   0.4 0.287 0.0685
 5 mu         0.1   0.5 0.340 0.0799
 6 mu         0.2   0.1 0.244 0.0463
 7 mu         0.2   0.2 0.303 0.0576
 8 mu         0.2   0.3 0.362 0.0587
 9 mu         0.2   0.4 0.408 0.0572
10 mu         0.2   0.5 0.437 0.0676
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.428       0.0523 0.000000876      5.89
 2 mu         0.2      0.648       0.462  0.000454         3.19
 3 mu         0.3      0.842       0.838  0.0123           3.39
 4 mu         0.4      0.948       0.960  0.0923           2.90
 5 mu         0.5      0.984       1.00   0.290            2.26
 6 mu         0.6      0.993       0.995  0.506            2.46
 7 mu         0.7      0.988       0.991  0.181            2.56
 8 mu         0.8      0.969       0.984  0.0196           2.67
 9 mu         0.9      0.921       0.914  0.000138         4.02
10 mu_1       0.1      0.633       0.182  0.00000548       4.01
11 mu_1       0.2      0.786       0.742  0.00143          3.43
12 mu_1       0.3      0.909       0.939  0.0258           3.32
13 mu_1       0.4      0.965       0.980  0.147            2.92
14 mu_1       0.5      0.985       0.992  0.396            1.97
15 mu_1       0.6      0.992       0.986  0.440            2.62
16 mu_1       0.7      0.986       0.983  0.140            2.52
17 mu_1       0.8      0.965       0.970  0.0134           2.60
18 mu_1       0.9      0.914       0.894  0.0000844        4.36
19 mu_0       0.1      0.405       0.0357 0.000000364      6.13
20 mu_0       0.2      0.613       0.361  0.000211         3.75
21 mu_0       0.3      0.814       0.795  0.00645          3.41
22 mu_0       0.4      0.936       0.927  0.0557           2.89
23 mu_0       0.5      0.983       0.979  0.183            2.55
24 mu_0       0.6      0.994       1.01   0.372            2.23
25 mu_0       0.7      0.991       0.978  0.275            2.81
26 mu_0       0.8      0.984       0.986  0.0442           2.95
27 mu_0       0.9      0.979       0.992  0.000622         2.54
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.52   0.0000323   8.90e-15     317. 
 2 mu         0.2       3.41   0.00395     9.25e-10     152. 
 3 mu         0.3       2.41   0.0688      6.98e- 7      62.0
 4 mu         0.4       1.85   0.302       6.82e- 5      44.6
 5 mu         0.5       1.57   0.745       2.10e- 3      29.3
 6 mu         0.6       2.59   0.874       5.22e- 3     148. 
 7 mu         0.7       4.99   0.905       4.01e- 5     355. 
 8 mu         0.8       5.67   0.759       3.54e- 8     346. 
 9 mu         0.9       3.46   0.144       1.71e-13      68.7
10 mu_1       0.1       5.15   0.000212    7.99e-14     317. 
11 mu_1       0.2       2.71   0.0133      4.14e- 9      76.1
12 mu_1       0.3       2.25   0.147       2.08e- 6      62.0
13 mu_1       0.4       1.68   0.503       1.53e- 4      37.2
14 mu_1       0.5       1.61   0.873       3.76e- 3      44.0
15 mu_1       0.6       2.99   0.938       8.71e- 4     185. 
16 mu_1       0.7       5.38   0.943       5.73e- 6     380. 
17 mu_1       0.8       5.62   0.654       4.43e- 9     325. 
18 mu_1       0.9       3.44   0.104       1.90e-14      76.4
19 mu_0       0.1       5.56   0.00000473  0            317. 
20 mu_0       0.2       3.59   0.00164     0            171. 
21 mu_0       0.3       2.48   0.0303      0             62.0
22 mu_0       0.4       1.97   0.171       0             49.6
23 mu_0       0.5       1.54   0.494       0             25.5
24 mu_0       0.6       2.00   0.813       0             92.6
25 mu_0       0.7       4.06   0.844       0            296. 
26 mu_0       0.8       5.89   0.823       0            433. 
27 mu_0       0.9       3.63   0.248       0            158. 
[1] "Total run time was 63.61 seconds"
