
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1262"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  4 10 13  9  2  5  7  9  1  5  4  6  8  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02665 0.31382 0.59497 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
782 480 
[1] "treatment indicator table: "

  0   1 
486 776 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 53.967 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.258 0.0795
 2 mu         0.1   0.2 0.334 0.0987
 3 mu         0.1   0.3 0.390 0.0825
 4 mu         0.1   0.4 0.423 0.0829
 5 mu         0.1   0.5 0.452 0.0857
 6 mu         0.2   0.1 0.302 0.0605
 7 mu         0.2   0.2 0.383 0.0714
 8 mu         0.2   0.3 0.430 0.0656
 9 mu         0.2   0.4 0.460 0.0649
10 mu         0.2   0.5 0.494 0.0673
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.698        0.522 0.0000702      3.56
 2 mu         0.2      0.826        0.793 0.0119         3.22
 3 mu         0.3      0.918        0.915 0.134          2.42
 4 mu         0.4      0.972        0.957 0.346          1.84
 5 mu         0.5      1.01         1.02  0.485          1.53
 6 mu         0.6      1.03         1.03  0.574          1.42
 7 mu         0.7      1.02         1.03  0.527          1.44
 8 mu         0.8      1.01         1.03  0.400          1.54
 9 mu         0.9      0.985        1.00  0.172          2.01
10 mu_1       0.1      0.827        0.727 0.000320       4.28
11 mu_1       0.2      0.895        0.875 0.0278         2.83
12 mu_1       0.3      0.947        0.914 0.206          2.15
13 mu_1       0.4      0.987        0.971 0.386          1.71
14 mu_1       0.5      1.02         1.03  0.499          1.38
15 mu_1       0.6      1.03         1.05  0.577          1.44
16 mu_1       0.7      1.02         1.04  0.508          1.41
17 mu_1       0.8      1.00         1.03  0.397          1.59
18 mu_1       0.9      0.981        0.978 0.152          2.08
19 mu_0       0.1      0.684        0.460 0.0000424      3.48
20 mu_0       0.2      0.809        0.754 0.00787        3.41
21 mu_0       0.3      0.905        0.904 0.103          2.53
22 mu_0       0.4      0.962        0.930 0.285          2.11
23 mu_0       0.5      1.00         0.991 0.470          1.70
24 mu_0       0.6      1.03         1.03  0.542          1.42
25 mu_0       0.7      1.03         1.02  0.569          1.50
26 mu_0       0.8      1.02         1.04  0.411          1.50
27 mu_0       0.9      1.02         1.06  0.217          1.80
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.58    0.000221   3.70e-19     82.0 
 2 mu         0.2       1.62    0.0134     3.88e-13     49.8 
 3 mu         0.3       1.45    0.128      1.29e- 9     19.0 
 4 mu         0.4       1.35    0.520      4.07e- 7      8.42
 5 mu         0.5       1.19    1.08       3.53e- 5      4.55
 6 mu         0.6       1.06    0.981      1.35e- 3      3.09
 7 mu         0.7       1.05    0.902      9.33e- 5      3.33
 8 mu         0.8       1.09    0.724      1.86e- 7      3.92
 9 mu         0.9       1.37    0.100      3.58e-12     36.7 
10 mu_1       0.1       2.09    0.00148    3.70e-18     91.1 
11 mu_1       0.2       1.52    0.0455     1.94e-12     27.7 
12 mu_1       0.3       1.39    0.274      4.30e- 9     11.5 
13 mu_1       0.4       1.30    0.761      1.02e- 6      6.11
14 mu_1       0.5       1.14    1.03       7.06e- 5      4.04
15 mu_1       0.6       1.05    0.839      1.27e- 3      3.03
16 mu_1       0.7       1.06    0.949      1.48e- 5      3.40
17 mu_1       0.8       1.09    0.557      2.58e- 8      4.90
18 mu_1       0.9       1.40    0.0743     4.42e-13     40.8 
19 mu_0       0.1       1.52    0.0000592  0            80.9 
20 mu_0       0.2       1.65    0.00588    0            55.3 
21 mu_0       0.3       1.47    0.0589     0            22.2 
22 mu_0       0.4       1.39    0.320      0            11.5 
23 mu_0       0.5       1.25    0.785      0             5.05
24 mu_0       0.6       1.09    1.01       0             4.29
25 mu_0       0.7       1.04    0.827      0             3.17
26 mu_0       0.8       1.07    0.899      0             3.74
27 mu_0       0.9       1.07    0.239      0             7.19
[1] "Total run time was 57.111 seconds"
