
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1255"
[1] "cluster size dist'n: "

 5  6  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6 11  8  9  4  6  5  9  8  3  4  8  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02607 0.31783 0.59352 0.99161 5.00000 
[1] "event indicator table: "

  0   1 
734 521 
[1] "treatment indicator table: "

  0   1 
478 777 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 233.329 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.295 0.0911
 2 mu         0.1   0.2 0.360 0.0951
 3 mu         0.1   0.3 0.381 0.0926
 4 mu         0.1   0.4 0.439 0.0771
 5 mu         0.1   0.5 0.448 0.0776
 6 mu         0.2   0.1 0.325 0.0698
 7 mu         0.2   0.2 0.403 0.0681
 8 mu         0.2   0.3 0.434 0.0648
 9 mu         0.2   0.4 0.489 0.0585
10 mu         0.2   0.5 0.515 0.0582
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.705        0.294  0.000500      6.02
 2 mu         0.2      0.876        0.773  0.0302        3.91
 3 mu         0.3      0.986        0.896  0.189         2.35
 4 mu         0.4      1.02         0.994  0.425         1.91
 5 mu         0.5      1.02         1.02   0.520         1.66
 6 mu         0.6      1.01         1.02   0.634         1.37
 7 mu         0.7      0.985        1.00   0.558         1.38
 8 mu         0.8      0.971        0.996  0.240         1.74
 9 mu         0.9      0.962        0.863  0.0344        3.11
10 mu_1       0.1      0.800        0.589  0.00161       4.44
11 mu_1       0.2      0.975        0.840  0.0683        3.50
12 mu_1       0.3      1.03         1.00   0.254         2.30
13 mu_1       0.4      1.03         1.02   0.495         1.81
14 mu_1       0.5      1.02         1.03   0.545         1.50
15 mu_1       0.6      1.00         1.02   0.643         1.37
16 mu_1       0.7      0.980        0.988  0.498         1.41
17 mu_1       0.8      0.970        0.982  0.202         1.84
18 mu_1       0.9      0.962        0.849  0.0272        3.33
19 mu_0       0.1      0.695        0.244  0.000326      6.69
20 mu_0       0.2      0.852        0.755  0.0207        4.01
21 mu_0       0.3      0.969        0.862  0.142         2.59
22 mu_0       0.4      1.01         0.977  0.344         1.97
23 mu_0       0.5      1.02         1.00   0.409         1.81
24 mu_0       0.6      1.02         1.02   0.520         1.61
25 mu_0       0.7      0.997        1.02   0.621         1.37
26 mu_0       0.8      0.972        0.982  0.394         1.51
27 mu_0       0.9      0.965        0.969  0.0993        2.25
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.538    0.0000749  2.91e-16     36.5 
 2 mu         0.2      1.16     0.00719    3.81e-11     49.9 
 3 mu         0.3      1.22     0.0840     3.75e- 8     22.7 
 4 mu         0.4      1.09     0.384      4.99e- 6      8.77
 5 mu         0.5      1.01     0.704      2.22e- 4      3.38
 6 mu         0.6      1.04     0.986      4.92e- 3      3.76
 7 mu         0.7      1.13     1.04       8.72e- 4      3.65
 8 mu         0.8      1.32     0.676      2.97e- 6      8.17
 9 mu         0.9      1.80     0.0788     1.29e-10     33.6 
10 mu_1       0.1      1.07     0.000541   2.91e-15     60.8 
11 mu_1       0.2      1.38     0.0237     1.90e-10     41.6 
12 mu_1       0.3      1.25     0.174      1.25e- 7     12.6 
13 mu_1       0.4      1.08     0.637      1.25e- 5      6.92
14 mu_1       0.5      1.01     0.882      4.43e- 4      3.38
15 mu_1       0.6      1.06     0.965      8.20e- 3      4.06
16 mu_1       0.7      1.16     0.993      2.08e- 4      3.74
17 mu_1       0.8      1.37     0.575      6.19e- 7     10.2 
18 mu_1       0.9      1.85     0.0536     2.39e-11     37.3 
19 mu_0       0.1      0.478    0.0000314  0            33.8 
20 mu_0       0.2      1.10     0.00357    0            52.0 
21 mu_0       0.3      1.21     0.0398     0            27.0 
22 mu_0       0.4      1.10     0.233      0            10.0 
23 mu_0       0.5      1.01     0.666      0             4.76
24 mu_0       0.6      1.00     0.839      0             3.59
25 mu_0       0.7      1.06     1.01       0             4.30
26 mu_0       0.8      1.13     0.992      0             4.07
27 mu_0       0.9      1.39     0.206      0            11.4 
[1] "Total run time was 241.393 seconds"
