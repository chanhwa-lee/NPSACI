
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1213"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 12  9  5  3  7  9  6  4  7  3  4  5  6  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02598 0.31011 0.58531 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
728 485 
[1] "treatment indicator table: "

  0   1 
429 784 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 588
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 56.881 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.260 0.0867
 2 mu         0.1   0.2 0.329 0.0816
 3 mu         0.1   0.3 0.395 0.107 
 4 mu         0.1   0.4 0.431 0.130 
 5 mu         0.1   0.5 0.463 0.125 
 6 mu         0.2   0.1 0.282 0.0650
 7 mu         0.2   0.2 0.363 0.0579
 8 mu         0.2   0.3 0.413 0.0786
 9 mu         0.2   0.4 0.461 0.0969
10 mu         0.2   0.5 0.506 0.0908
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.683       0.122  0.0000000594     12.5 
 2 mu         0.2      0.748       0.428  0.000103          4.28
 3 mu         0.3      0.812       0.790  0.00521           2.92
 4 mu         0.4      0.873       0.877  0.0493            3.13
 5 mu         0.5      0.922       0.933  0.198             1.98
 6 mu         0.6      0.975       0.986  0.492             1.36
 7 mu         0.7      1.03        1.01   0.707             1.52
 8 mu         0.8      1.06        1.00   0.559             2.01
 9 mu         0.9      1.04        0.976  0.159             4.08
10 mu_1       0.1      0.765       0.329  0.000000358       4.42
11 mu_1       0.2      0.801       0.715  0.000313          2.72
12 mu_1       0.3      0.853       0.885  0.0107            3.45
13 mu_1       0.4      0.903       0.952  0.0785            2.85
14 mu_1       0.5      0.946       0.956  0.263             1.64
15 mu_1       0.6      0.994       1.02   0.574             1.27
16 mu_1       0.7      1.04        1.01   0.708             1.57
17 mu_1       0.8      1.06        1.01   0.485             2.23
18 mu_1       0.9      1.03        0.960  0.130             4.38
19 mu_0       0.1      0.674       0.0877 0.0000000262     13.6 
20 mu_0       0.2      0.735       0.372  0.0000505         4.97
21 mu_0       0.3      0.794       0.692  0.00286           2.69
22 mu_0       0.4      0.852       0.865  0.0299            3.31
23 mu_0       0.5      0.899       0.901  0.132             2.32
24 mu_0       0.6      0.947       0.945  0.370             1.48
25 mu_0       0.7      1.01        1.02   0.626             1.39
26 mu_0       0.8      1.05        1.03   0.677             1.71
27 mu_0       0.9      1.07        1.08   0.389             1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.39    0.0000462  9.92e-14    290.  
 2 mu         0.2      10.6     0.00512    6.68e- 9    338.  
 3 mu         0.3       8.69    0.0471     2.56e- 6    273.  
 4 mu         0.4       4.56    0.209      1.64e- 4    162.  
 5 mu         0.5       2.13    0.564      3.89e- 3     61.2 
 6 mu         0.6       1.33    1.11       3.84e- 2     14.2 
 7 mu         0.7       1.19    1.17       9.52e- 4      3.04
 8 mu         0.8       1.20    0.908      3.71e- 6      4.89
 9 mu         0.9       1.05    0.137      1.81e-10      7.73
10 mu_1       0.1      10.3     0.000385   8.44e-13    447.  
11 mu_1       0.2      11.4     0.0181     3.13e- 8    356.  
12 mu_1       0.3       6.83    0.114      8.00e- 6    228.  
13 mu_1       0.4       3.15    0.389      3.85e- 4    101.  
14 mu_1       0.5       1.62    0.809      7.30e- 3     30.6 
15 mu_1       0.6       1.22    1.13       1.35e- 2      5.92
16 mu_1       0.7       1.19    1.15       2.86e- 4      3.60
17 mu_1       0.8       1.21    0.787      9.76e- 7      5.41
18 mu_1       0.9       1.03    0.0981     4.24e-11      7.81
19 mu_0       0.1       4.84    0.0000127  0           273.  
20 mu_0       0.2      10.5     0.00139    0           336.  
21 mu_0       0.3       9.49    0.0182     0           293.  
22 mu_0       0.4       5.49    0.0944     0           202.  
23 mu_0       0.5       2.64    0.334      0            91.9 
24 mu_0       0.6       1.48    0.810      0            26.6 
25 mu_0       0.7       1.18    1.10       0             4.23
26 mu_0       0.8       1.18    1.16       0             4.52
27 mu_0       0.9       1.24    0.405      0             7.03
[1] "Total run time was 60.011 seconds"
