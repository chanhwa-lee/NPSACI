
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1239"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  8 13  4  1  7  4 10  3  5  4  9  6  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03312 0.32259 0.58337 0.95690 4.60098 
[1] "event indicator table: "

  0   1 
719 520 
[1] "treatment indicator table: "

  0   1 
483 756 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 596
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.831 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.343 0.0722
 2 mu         0.1   0.2 0.424 0.103 
 3 mu         0.1   0.3 0.457 0.0982
 4 mu         0.1   0.4 0.455 0.106 
 5 mu         0.1   0.5 0.484 0.103 
 6 mu         0.2   0.1 0.347 0.0573
 7 mu         0.2   0.2 0.444 0.0877
 8 mu         0.2   0.3 0.469 0.0842
 9 mu         0.2   0.4 0.487 0.0913
10 mu         0.2   0.5 0.514 0.0890
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.837        0.177  0.000521     12.2 
 2 mu         0.2      0.966        0.635  0.0311       12.1 
 3 mu         0.3      1.01         0.830  0.201         5.99
 4 mu         0.4      1.03         0.961  0.446         2.30
 5 mu         0.5      1.04         1.01   0.501         1.75
 6 mu         0.6      1.03         1.02   0.523         1.64
 7 mu         0.7      1.01         1.01   0.583         1.51
 8 mu         0.8      0.995        0.998  0.382         1.86
 9 mu         0.9      0.927        0.819  0.125         3.32
10 mu_1       0.1      1.00         0.457  0.00235      17.5 
11 mu_1       0.2      1.00         0.824  0.0736        8.93
12 mu_1       0.3      1.02         0.958  0.301         3.33
13 mu_1       0.4      1.04         1.00   0.524         1.84
14 mu_1       0.5      1.04         1.02   0.497         1.78
15 mu_1       0.6      1.03         1.02   0.537         1.57
16 mu_1       0.7      1.01         1.01   0.578         1.59
17 mu_1       0.8      0.992        0.981  0.353         2.04
18 mu_1       0.9      0.919        0.798  0.100         3.50
19 mu_0       0.1      0.819        0.144  0.000318     11.6 
20 mu_0       0.2      0.958        0.533  0.0205       12.9 
21 mu_0       0.3      1.00         0.770  0.158         7.13
22 mu_0       0.4      1.03         0.924  0.355         2.93
23 mu_0       0.5      1.04         1.01   0.506         1.73
24 mu_0       0.6      1.03         1.02   0.502         1.73
25 mu_0       0.7      1.02         1.01   0.480         1.48
26 mu_0       0.8      1.01         1.02   0.495         1.57
27 mu_0       0.9      1.01         0.995  0.293         2.01
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.461     0.000341  2.43e-15     13.9 
 2 mu         0.2      1.29      0.0220    5.66e-10     34.1 
 3 mu         0.3      1.62      0.153     7.32e- 7     30.3 
 4 mu         0.4      1.41      0.509     1.11e- 4     15.4 
 5 mu         0.5      1.17      0.928     5.15e- 3      4.85
 6 mu         0.6      1.12      1.02      3.88e- 3      5.81
 7 mu         0.7      1.20      1.03      6.17e- 5      8.96
 8 mu         0.8      1.44      0.586     1.40e- 7     12.9 
 9 mu         0.9      2.36      0.0689    3.05e-12     47.7 
10 mu_1       0.1      1.05      0.00227   2.30e-14     32.0 
11 mu_1       0.2      1.70      0.0670    2.68e- 9     39.4 
12 mu_1       0.3      1.65      0.314     2.31e- 6     23.3 
13 mu_1       0.4      1.32      0.791     2.64e- 4      8.87
14 mu_1       0.5      1.13      1.05      9.75e- 3      3.98
15 mu_1       0.6      1.12      1.03      1.02e- 3      6.78
16 mu_1       0.7      1.21      0.992     1.39e- 5      8.96
17 mu_1       0.8      1.49      0.444     2.77e- 8     15.2 
18 mu_1       0.9      2.45      0.0445    5.34e-13     50.1 
19 mu_0       0.1      0.396     0.000154  0            11.8 
20 mu_0       0.2      1.19      0.00924   0            32.8 
21 mu_0       0.3      1.60      0.0885    0            33.3 
22 mu_0       0.4      1.47      0.320     0            19.7 
23 mu_0       0.5      1.21      0.726     0             7.46
24 mu_0       0.6      1.12      1.02      0             4.36
25 mu_0       0.7      1.16      1.08      0             8.96
26 mu_0       0.8      1.24      1.02      0             7.65
27 mu_0       0.9      1.56      0.204     0            26.5 
[1] "Total run time was 60.778 seconds"
