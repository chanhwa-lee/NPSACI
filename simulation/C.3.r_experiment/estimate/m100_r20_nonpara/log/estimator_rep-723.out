
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1215"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8 10  5  7  3  8  4  5  8  5  4 14  5  3  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02589 0.34184 0.60513 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
717 498 
[1] "treatment indicator table: "

  0   1 
474 741 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 68.235 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.243 0.0714
 2 mu         0.1   0.2 0.304 0.0684
 3 mu         0.1   0.3 0.334 0.0752
 4 mu         0.1   0.4 0.406 0.0828
 5 mu         0.1   0.5 0.445 0.106 
 6 mu         0.2   0.1 0.281 0.0664
 7 mu         0.2   0.2 0.356 0.0638
 8 mu         0.2   0.3 0.392 0.0710
 9 mu         0.2   0.4 0.464 0.0764
10 mu         0.2   0.5 0.505 0.0920
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.707        0.138 0.0000192      6.08
 2 mu         0.2      0.893        0.424 0.00656        9.97
 3 mu         0.3      0.940        0.752 0.110          6.55
 4 mu         0.4      0.967        0.904 0.336          2.42
 5 mu         0.5      1.00         0.993 0.617          1.80
 6 mu         0.6      1.02         1.02  0.661          1.37
 7 mu         0.7      1.02         1.01  0.753          1.41
 8 mu         0.8      1.03         1.00  0.366          2.42
 9 mu         0.9      1.12         0.883 0.0333        11.9 
10 mu_1       0.1      0.896        0.393 0.0000963     10.2 
11 mu_1       0.2      0.939        0.671 0.0167         9.80
12 mu_1       0.3      0.946        0.865 0.180          4.41
13 mu_1       0.4      0.976        0.956 0.444          2.03
14 mu_1       0.5      1.01         0.998 0.566          1.55
15 mu_1       0.6      1.02         1.03  0.712          1.43
16 mu_1       0.7      1.02         1.01  0.696          1.48
17 mu_1       0.8      1.04         0.982 0.313          2.83
18 mu_1       0.9      1.13         0.857 0.0268        13.1 
19 mu_0       0.1      0.686        0.111 0.0000106      6.07
20 mu_0       0.2      0.882        0.361 0.00403       10.0 
21 mu_0       0.3      0.938        0.651 0.0781         7.46
22 mu_0       0.4      0.961        0.842 0.265          3.14
23 mu_0       0.5      0.992        0.960 0.502          2.04
24 mu_0       0.6      1.02         1.02  0.572          1.59
25 mu_0       0.7      1.02         1.03  0.669          1.49
26 mu_0       0.8      1.03         1.03  0.578          1.50
27 mu_0       0.9      1.03         0.991 0.0920         2.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.70    0.000238   1.18e-13    576.  
 2 mu         0.2       6.89    0.00771    1.09e- 8    443.  
 3 mu         0.3       4.29    0.104      7.18e- 6    154.  
 4 mu         0.4       2.48    0.422      5.88e- 4     31.6 
 5 mu         0.5       1.54    0.966      1.34e- 2     17.4 
 6 mu         0.6       1.13    0.969      2.24e- 2      8.39
 7 mu         0.7       1.14    1.09       4.16e- 4      5.09
 8 mu         0.8       1.46    0.612      1.08e- 6      9.98
 9 mu         0.9       1.86    0.0708     2.64e-11     50.1 
10 mu_1       0.1       9.27    0.00196    1.00e-12    720.  
11 mu_1       0.2       5.78    0.0299     4.62e- 8    277.  
12 mu_1       0.3       3.26    0.222      2.03e- 5     64.0 
13 mu_1       0.4       1.99    0.653      1.28e- 3     20.6 
14 mu_1       0.5       1.33    0.980      2.58e- 2     15.3 
15 mu_1       0.6       1.08    1.00       7.47e- 3      6.12
16 mu_1       0.7       1.18    1.11       1.19e- 4      6.15
17 mu_1       0.8       1.52    0.480      2.70e- 7     12.1 
18 mu_1       0.9       1.90    0.0434     5.87e-12     55.7 
19 mu_0       0.1       6.41    0.0000440  0           560.  
20 mu_0       0.2       7.17    0.00320    0           484.  
21 mu_0       0.3       4.73    0.0490     0           192.  
22 mu_0       0.4       2.81    0.267      0            46.0 
23 mu_0       0.5       1.74    0.665      0            19.6 
24 mu_0       0.6       1.21    1.02       0            11.8 
25 mu_0       0.7       1.04    0.994      0             3.48
26 mu_0       0.8       1.19    1.04       0             7.56
27 mu_0       0.9       1.55    0.172      0            17.2 
[1] "Total run time was 72.252 seconds"
