
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1246"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  1  9  7  3 13  9  5 11  5  8  1  7 10  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0364  0.3693  0.6347  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
738 508 
[1] "treatment indicator table: "

  0   1 
455 791 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 100.218 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.699 0.186
 2 mu         0.1   0.2 0.814 0.227
 3 mu         0.1   0.3 0.910 0.256
 4 mu         0.1   0.4 0.952 0.246
 5 mu         0.1   0.5 0.964 0.246
 6 mu         0.2   0.1 0.494 0.114
 7 mu         0.2   0.2 0.589 0.143
 8 mu         0.2   0.3 0.672 0.160
 9 mu         0.2   0.4 0.694 0.140
10 mu         0.2   0.5 0.702 0.135
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.47         0.269 0.0000130      21.2 
 2 mu         0.2      1.13         0.730 0.00312         5.91
 3 mu         0.3      1.06         0.920 0.0522          3.26
 4 mu         0.4      1.02         0.975 0.223           2.14
 5 mu         0.5      0.988        0.986 0.393           1.59
 6 mu         0.6      0.983        0.987 0.635           1.38
 7 mu         0.7      1.00         0.996 0.685           1.59
 8 mu         0.8      1.04         0.992 0.324           1.90
 9 mu         0.9      1.09         1.01  0.0437          3.63
10 mu_1       0.1      1.05         0.608 0.0000666       9.04
11 mu_1       0.2      1.04         0.894 0.00826         3.66
12 mu_1       0.3      1.03         0.980 0.0954          2.81
13 mu_1       0.4      0.997        0.978 0.272           1.80
14 mu_1       0.5      0.980        0.994 0.457           1.45
15 mu_1       0.6      0.983        0.989 0.661           1.32
16 mu_1       0.7      1.00         0.989 0.647           1.66
17 mu_1       0.8      1.04         1.01  0.276           2.03
18 mu_1       0.9      1.10         1.02  0.0356          3.87
19 mu_0       0.1      1.51         0.230 0.00000693     23.5 
20 mu_0       0.2      1.16         0.665 0.00183         6.90
21 mu_0       0.3      1.07         0.886 0.0337          4.10
22 mu_0       0.4      1.03         0.973 0.191           2.45
23 mu_0       0.5      0.996        0.980 0.329           1.76
24 mu_0       0.6      0.983        0.977 0.554           1.48
25 mu_0       0.7      0.989        0.975 0.647           1.43
26 mu_0       0.8      1.01         1.02  0.515           1.88
27 mu_0       0.9      1.06         0.996 0.117           2.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.35     0.0000836  4.49e-16    203.  
 2 mu         0.2      2.12     0.00861    1.05e-10    139.  
 3 mu         0.3      1.46     0.0905     1.22e- 7     42.2 
 4 mu         0.4      1.20     0.364      1.62e- 5     11.1 
 5 mu         0.5      1.07     0.801      7.21e- 4      7.55
 6 mu         0.6      0.980    0.855      1.60e- 2      4.12
 7 mu         0.7      0.983    0.895      6.94e- 4      2.80
 8 mu         0.8      1.20     0.645      2.07e- 6      7.38
 9 mu         0.9      2.04     0.0527     8.00e-11     43.2 
10 mu_1       0.1      3.08     0.000501   4.25e-15    239.  
11 mu_1       0.2      1.81     0.0273     4.96e-10     81.8 
12 mu_1       0.3      1.30     0.202      4.07e- 7     16.5 
13 mu_1       0.4      1.13     0.583      4.06e- 5     10.1 
14 mu_1       0.5      1.01     0.776      1.44e- 3      5.85
15 mu_1       0.6      0.955    0.939      7.49e- 3      3.92
16 mu_1       0.7      0.996    0.925      1.17e- 4      3.24
17 mu_1       0.8      1.26     0.509      3.05e- 7      9.23
18 mu_1       0.9      2.15     0.0375     1.05e-11     48.0 
19 mu_0       0.1      2.27     0.0000311  0           199.  
20 mu_0       0.2      2.19     0.00414    0           153.  
21 mu_0       0.3      1.52     0.0427     0            53.2 
22 mu_0       0.4      1.25     0.196      0            11.7 
23 mu_0       0.5      1.12     0.628      0             9.60
24 mu_0       0.6      1.02     0.738      0             5.22
25 mu_0       0.7      0.955    0.948      0             3.59
26 mu_0       0.8      0.964    0.769      0             4.58
27 mu_0       0.9      1.09     0.142      0            13.2 
[1] "Total run time was 104.646 seconds"
