
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1365"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  9  1  2  4 10  6  5  6  7  2  8 13 11  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03264 0.36089 0.60987 1.00000 4.63255 
[1] "event indicator table: "

  0   1 
827 538 
[1] "treatment indicator table: "

  0   1 
487 878 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 693
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 672
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 100.666 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.395 0.148
 2 mu         0.1   0.2 0.508 0.177
 3 mu         0.1   0.3 0.559 0.173
 4 mu         0.1   0.4 0.577 0.178
 5 mu         0.1   0.5 0.623 0.182
 6 mu         0.2   0.1 0.335 0.109
 7 mu         0.2   0.2 0.438 0.128
 8 mu         0.2   0.3 0.489 0.109
 9 mu         0.2   0.4 0.510 0.103
10 mu         0.2   0.5 0.550 0.100
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.07        0.0505 0.00000135      19.9 
 2 mu         0.2      1.01        0.414  0.000402        10.2 
 3 mu         0.3      1.04        0.767  0.00839          8.89
 4 mu         0.4      1.04        0.946  0.0565           5.41
 5 mu         0.5      1.03        1.02   0.198            2.35
 6 mu         0.6      0.999       0.973  0.457            2.11
 7 mu         0.7      0.960       0.984  0.399            1.59
 8 mu         0.8      0.939       0.910  0.167            1.66
 9 mu         0.9      0.954       0.851  0.0128           3.68
10 mu_1       0.1      0.765       0.144  0.00000824      13.8 
11 mu_1       0.2      0.904       0.688  0.00124          9.11
12 mu_1       0.3      0.992       0.928  0.0176           8.34
13 mu_1       0.4      1.01        1.01   0.0911           4.00
14 mu_1       0.5      1.01        0.994  0.265            2.37
15 mu_1       0.6      0.985       0.967  0.499            1.98
16 mu_1       0.7      0.951       0.972  0.396            1.53
17 mu_1       0.8      0.939       0.906  0.138            1.71
18 mu_1       0.9      0.956       0.878  0.00986          4.00
19 mu_0       0.1      1.10        0.0372 0.000000588     22.0 
20 mu_0       0.2      1.04        0.345  0.000192        12.5 
21 mu_0       0.3      1.06        0.734  0.00444          9.13
22 mu_0       0.4      1.06        0.891  0.0334           6.35
23 mu_0       0.5      1.05        1.02   0.131            2.70
24 mu_0       0.6      1.02        1.01   0.333            2.31
25 mu_0       0.7      0.982       0.980  0.408            1.71
26 mu_0       0.8      0.941       0.953  0.286            1.73
27 mu_0       0.9      0.937       0.907  0.0390           2.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      73.9    0.0000193   1.43e-17   6651.  
 2 mu         0.2      46.6    0.00277     3.75e-12   3641.  
 3 mu         0.3      20.1    0.0555      5.54e- 9   1257.  
 4 mu         0.4       6.77   0.303       9.83e- 7    308.  
 5 mu         0.5       2.38   0.750       5.46e- 5     51.7 
 6 mu         0.6       1.46   1.01        1.45e- 3      9.75
 7 mu         0.7       1.36   1.08        5.74e- 3     15.0 
 8 mu         0.8       1.54   0.711       3.83e- 5     13.3 
 9 mu         0.9       2.66   0.133       4.22e- 9    111.  
10 mu_1       0.1      65.8    0.000111    1.43e-16   5543.  
11 mu_1       0.2      24.4    0.0105      1.87e-11   1517.  
12 mu_1       0.3       8.71   0.133       1.85e- 8    349.  
13 mu_1       0.4       3.10   0.466       2.46e- 6     78.9 
14 mu_1       0.5       1.61   0.923       1.09e- 4     12.0 
15 mu_1       0.6       1.36   1.02        2.42e- 3     11.4 
16 mu_1       0.7       1.38   1.05        2.16e- 3     15.0 
17 mu_1       0.8       1.61   0.569       1.26e- 5     16.6 
18 mu_1       0.9       2.81   0.0911      1.23e- 9    123.  
19 mu_0       0.1      74.8    0.00000436  0          6775.  
20 mu_0       0.2      52.2    0.00103     0          4172.  
21 mu_0       0.3      24.9    0.0221      0          1646.  
22 mu_0       0.4       9.23   0.171       0           470.  
23 mu_0       0.5       3.15   0.544       0            94.9 
24 mu_0       0.6       1.59   0.967       0            12.2 
25 mu_0       0.7       1.32   0.969       0            15.0 
26 mu_0       0.8       1.25   0.843       0            12.8 
27 mu_0       0.9       1.32   0.163       0            20.5 
[1] "Total run time was 105.612 seconds"
