
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1207"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  5  5  7  8  9  8  3  4  3  9  5  5  9  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03393 0.33126 0.59534 0.94060 6.00000 
[1] "event indicator table: "

  0   1 
732 475 
[1] "treatment indicator table: "

  0   1 
431 776 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.034 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.371 0.103 
 2 mu         0.1   0.2 0.422 0.130 
 3 mu         0.1   0.3 0.553 0.165 
 4 mu         0.1   0.4 0.571 0.177 
 5 mu         0.1   0.5 0.591 0.188 
 6 mu         0.2   0.1 0.346 0.0591
 7 mu         0.2   0.2 0.402 0.0784
 8 mu         0.2   0.3 0.525 0.0995
 9 mu         0.2   0.4 0.555 0.108 
10 mu         0.2   0.5 0.597 0.116 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.983        0.410 0.0000659     16.2 
 2 mu         0.2      1.07         0.851 0.0112         7.18
 3 mu         0.3      1.05         0.989 0.128          3.02
 4 mu         0.4      1.01         0.991 0.329          1.88
 5 mu         0.5      0.999        0.985 0.414          1.65
 6 mu         0.6      0.998        0.993 0.690          1.44
 7 mu         0.7      0.993        0.994 0.616          1.54
 8 mu         0.8      0.975        0.964 0.412          1.59
 9 mu         0.9      0.982        0.983 0.0577         2.68
10 mu_1       0.1      1.04         0.615 0.000301      11.5 
11 mu_1       0.2      1.05         0.981 0.0262         3.66
12 mu_1       0.3      1.02         1.01  0.205          2.16
13 mu_1       0.4      0.997        0.990 0.298          1.89
14 mu_1       0.5      0.995        0.994 0.486          1.52
15 mu_1       0.6      0.998        0.991 0.696          1.50
16 mu_1       0.7      0.991        0.996 0.601          1.53
17 mu_1       0.8      0.971        0.960 0.332          1.62
18 mu_1       0.9      0.984        0.981 0.0422         2.86
19 mu_0       0.1      0.977        0.352 0.0000397     16.8 
20 mu_0       0.2      1.07         0.811 0.00746        8.06
21 mu_0       0.3      1.07         0.985 0.0852         3.48
22 mu_0       0.4      1.03         1.01  0.314          2.18
23 mu_0       0.5      1.00         0.983 0.342          1.78
24 mu_0       0.6      0.997        0.998 0.621          1.42
25 mu_0       0.7      0.999        1.00  0.651          1.57
26 mu_0       0.8      0.990        1.00  0.587          1.48
27 mu_0       0.9      0.968        0.974 0.197          1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.686    0.0000498  4.66e-15     43.4 
 2 mu         0.2      1.02     0.00578    4.17e-10     37.6 
 3 mu         0.3      1.15     0.0931     1.83e- 7     14.9 
 4 mu         0.4      1.13     0.324      1.37e- 5      6.18
 5 mu         0.5      1.05     0.741      3.88e- 4      4.20
 6 mu         0.6      1.01     0.956      5.98e- 3      3.54
 7 mu         0.7      1.01     1.10       1.33e- 3      2.62
 8 mu         0.8      1.09     0.890      8.96e- 6      4.14
 9 mu         0.9      1.34     0.154      1.38e- 9     15.8 
10 mu_1       0.1      1.20     0.000352   4.19e-14     57.9 
11 mu_1       0.2      1.20     0.0205     2.08e- 9     25.0 
12 mu_1       0.3      1.19     0.181      6.09e- 7      8.58
13 mu_1       0.4      1.10     0.563      3.42e- 5      5.68
14 mu_1       0.5      1.02     0.974      7.77e- 4      3.36
15 mu_1       0.6      1.00     1.00       9.17e- 3      3.54
16 mu_1       0.7      1.02     1.08       2.54e- 4      2.49
17 mu_1       0.8      1.11     0.759      1.49e- 6      4.66
18 mu_1       0.9      1.36     0.117      2.05e-10     17.6 
19 mu_0       0.1      0.629    0.0000184  0            41.8 
20 mu_0       0.2      0.979    0.00239    0            40.7 
21 mu_0       0.3      1.13     0.0358     0            18.4 
22 mu_0       0.4      1.16     0.170      0             7.04
23 mu_0       0.5      1.08     0.497      0             5.04
24 mu_0       0.6      1.02     0.869      0             3.54
25 mu_0       0.7      0.998    0.971      0             3.36
26 mu_0       0.8      0.990    1.10       0             3.12
27 mu_0       0.9      1.13     0.292      0             8.63
[1] "Total run time was 63.331 seconds"
