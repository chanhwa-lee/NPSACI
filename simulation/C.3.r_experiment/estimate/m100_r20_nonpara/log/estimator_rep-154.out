
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1205"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6 12  2  5  7  9  5  3  8  7  8  5  5  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02307 0.33330 0.59693 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
704 501 
[1] "treatment indicator table: "

  0   1 
495 710 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.942 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.448 0.0791
 2 mu         0.1   0.2 0.529 0.0773
 3 mu         0.1   0.3 0.539 0.0740
 4 mu         0.1   0.4 0.632 0.114 
 5 mu         0.1   0.5 0.650 0.109 
 6 mu         0.2   0.1 0.408 0.0612
 7 mu         0.2   0.2 0.512 0.0677
 8 mu         0.2   0.3 0.541 0.0673
 9 mu         0.2   0.4 0.593 0.0759
10 mu         0.2   0.5 0.632 0.0772
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.856        0.440  0.000496      5.49
 2 mu         0.2      0.960        0.803  0.0267        2.63
 3 mu         0.3      0.966        0.914  0.181         2.05
 4 mu         0.4      0.993        0.978  0.506         1.88
 5 mu         0.5      1.02         1.02   0.721         1.42
 6 mu         0.6      1.02         1.02   0.677         1.29
 7 mu         0.7      0.995        0.998  0.629         1.44
 8 mu         0.8      0.972        0.942  0.390         2.01
 9 mu         0.9      0.975        0.814  0.0367        5.63
10 mu_1       0.1      1.07         0.919  0.00221       3.72
11 mu_1       0.2      0.990        0.929  0.0615        2.05
12 mu_1       0.3      0.986        0.980  0.289         1.98
13 mu_1       0.4      1.01         1.02   0.644         1.75
14 mu_1       0.5      1.02         1.04   0.670         1.39
15 mu_1       0.6      1.01         1.01   0.691         1.34
16 mu_1       0.7      0.985        0.984  0.604         1.53
17 mu_1       0.8      0.967        0.913  0.327         2.26
18 mu_1       0.9      0.972        0.791  0.0282        5.83
19 mu_0       0.1      0.833        0.395  0.000304      5.72
20 mu_0       0.2      0.953        0.756  0.0180        2.96
21 mu_0       0.3      0.958        0.900  0.134         2.08
22 mu_0       0.4      0.981        0.955  0.405         1.97
23 mu_0       0.5      1.01         0.996  0.709         1.62
24 mu_0       0.6      1.03         1.04   0.656         1.38
25 mu_0       0.7      1.02         1.04   0.682         1.29
26 mu_0       0.8      0.992        0.987  0.568         1.63
27 mu_0       0.9      1.00         0.936  0.113         3.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.340     0.000322  5.09e-13      7.22
 2 mu         0.2      0.759     0.0173    2.64e- 8     10.4 
 3 mu         0.3      0.940     0.153     1.33e- 5      8.17
 4 mu         0.4      0.938     0.517     9.72e- 4      4.64
 5 mu         0.5      0.935     0.894     1.86e- 2      2.43
 6 mu         0.6      1.01      1.07      2.56e- 2      2.53
 7 mu         0.7      1.13      1.16      6.34e- 4      3.05
 8 mu         0.8      1.22      0.638     2.47e- 6      7.20
 9 mu         0.9      1.31      0.0807    1.21e-10     23.4 
10 mu_1       0.1      0.710     0.00215   4.52e-12     12.0 
11 mu_1       0.2      0.971     0.0533    1.17e- 7     10.9 
12 mu_1       0.3      0.991     0.323     3.93e- 5      7.57
13 mu_1       0.4      0.941     0.739     2.16e- 3      3.47
14 mu_1       0.5      0.952     1.04      3.72e- 2      2.29
15 mu_1       0.6      1.04      1.10      8.98e- 3      2.58
16 mu_1       0.7      1.15      1.07      1.91e- 4      3.12
17 mu_1       0.8      1.24      0.477     6.50e- 7      9.00
18 mu_1       0.9      1.33      0.0590    2.82e-11     26.0 
19 mu_0       0.1      0.298     0.000130  0             6.69
20 mu_0       0.2      0.705     0.00829   0            10.2 
21 mu_0       0.3      0.918     0.0831    0             8.43
22 mu_0       0.4      0.936     0.318     0             5.59
23 mu_0       0.5      0.918     0.744     0             3.50
24 mu_0       0.6      0.969     1.05      0             2.46
25 mu_0       0.7      1.07      1.09      0             2.91
26 mu_0       0.8      1.13      0.954     0             4.06
27 mu_0       0.9      1.09      0.224     0            12.9 
[1] "Total run time was 62.235 seconds"
