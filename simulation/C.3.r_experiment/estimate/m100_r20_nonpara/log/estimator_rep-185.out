
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1356"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  6  7  4  1  8  7  4  9  6  3  6  8 10  8 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0256  0.2942  0.5533  0.9302  4.8042 
[1] "event indicator table: "

  0   1 
792 564 
[1] "treatment indicator table: "

  0   1 
537 819 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 722
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 99.318 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.608 0.127 
 2 mu         0.1   0.2 0.721 0.160 
 3 mu         0.1   0.3 0.821 0.178 
 4 mu         0.1   0.4 0.856 0.184 
 5 mu         0.1   0.5 0.869 0.184 
 6 mu         0.2   0.1 0.444 0.0516
 7 mu         0.2   0.2 0.532 0.0649
 8 mu         0.2   0.3 0.615 0.0786
 9 mu         0.2   0.4 0.645 0.0836
10 mu         0.2   0.5 0.667 0.0813
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.45         0.458 0.000110      19.2 
 2 mu         0.2      1.17         0.874 0.0124         5.69
 3 mu         0.3      1.01         0.889 0.127          2.21
 4 mu         0.4      0.984        1.02  0.262          1.68
 5 mu         0.5      0.991        1.01  0.467          1.73
 6 mu         0.6      0.995        0.989 0.600          1.38
 7 mu         0.7      0.993        0.971 0.549          1.59
 8 mu         0.8      0.998        0.980 0.333          1.78
 9 mu         0.9      1.01         0.980 0.106          2.92
10 mu_1       0.1      1.32         0.758 0.000506      10.8 
11 mu_1       0.2      1.03         0.943 0.0296         2.90
12 mu_1       0.3      0.979        0.983 0.212          2.06
13 mu_1       0.4      0.988        1.02  0.283          1.66
14 mu_1       0.5      0.998        1.00  0.576          1.71
15 mu_1       0.6      0.997        0.981 0.593          1.42
16 mu_1       0.7      0.992        0.970 0.480          1.64
17 mu_1       0.8      0.997        0.984 0.262          1.82
18 mu_1       0.9      1.01         0.973 0.0796         3.08
19 mu_0       0.1      1.46         0.387 0.0000658     20.2 
20 mu_0       0.2      1.20         0.847 0.00805        6.56
21 mu_0       0.3      1.02         0.908 0.0913         2.39
22 mu_0       0.4      0.981        0.982 0.248          1.82
23 mu_0       0.5      0.984        0.999 0.349          1.75
24 mu_0       0.6      0.992        1.00  0.596          1.54
25 mu_0       0.7      0.996        0.984 0.578          1.47
26 mu_0       0.8      1.00         1.01  0.445          1.78
27 mu_0       0.9      1.02         1.01  0.236          1.83
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.520    0.0000789  6.57e-15     21.8 
 2 mu         0.2      1.05     0.00966    7.65e-10     29.8 
 3 mu         0.3      1.23     0.130      6.60e- 7     14.9 
 4 mu         0.4      1.25     0.631      7.52e- 5      6.94
 5 mu         0.5      1.18     1.07       2.78e- 3      6.44
 6 mu         0.6      1.08     0.996      2.46e- 2      4.97
 7 mu         0.7      1.05     0.931      5.21e- 4      6.43
 8 mu         0.8      1.21     0.466      1.78e- 6      8.07
 9 mu         0.9      1.42     0.0315     7.72e-11     16.8 
10 mu_1       0.1      0.982    0.000525   6.20e-14     36.4 
11 mu_1       0.2      1.25     0.0306     3.61e- 9     24.9 
12 mu_1       0.3      1.28     0.265      2.08e- 6     11.7 
13 mu_1       0.4      1.24     0.852      1.78e- 4      7.43
14 mu_1       0.5      1.15     1.03       5.26e- 3      5.72
15 mu_1       0.6      1.06     0.918      6.83e- 3      5.70
16 mu_1       0.7      1.06     0.924      1.24e- 4      6.31
17 mu_1       0.8      1.24     0.299      3.70e- 7      9.07
18 mu_1       0.9      1.43     0.0217     1.43e-11     16.8 
19 mu_0       0.1      0.469    0.0000347  0            20.2 
20 mu_0       0.2      0.994    0.00465    0            31.1 
21 mu_0       0.3      1.21     0.0796     0            16.2 
22 mu_0       0.4      1.25     0.369      0             8.17
23 mu_0       0.5      1.21     0.977      0             7.15
24 mu_0       0.6      1.12     0.936      0             4.13
25 mu_0       0.7      1.03     0.893      0             6.70
26 mu_0       0.8      1.08     0.543      0             7.22
27 mu_0       0.9      1.33     0.0485     0            16.8 
[1] "Total run time was 103.937 seconds"
