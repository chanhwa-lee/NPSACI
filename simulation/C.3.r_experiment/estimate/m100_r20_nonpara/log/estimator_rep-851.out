
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1302"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  9  5  8  4  5  4  7  5  5  8  8  4  3 10 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04555 0.40613 0.64422 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
746 556 
[1] "treatment indicator table: "

  0   1 
442 860 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 112.589 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.278 0.0536
 2 mu         0.1   0.2 0.308 0.0576
 3 mu         0.1   0.3 0.374 0.0744
 4 mu         0.1   0.4 0.377 0.0820
 5 mu         0.1   0.5 0.484 0.105 
 6 mu         0.2   0.1 0.274 0.0310
 7 mu         0.2   0.2 0.307 0.0339
 8 mu         0.2   0.3 0.382 0.0511
 9 mu         0.2   0.4 0.396 0.0573
10 mu         0.2   0.5 0.503 0.0799
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.717        0.230 0.000000284      9.80
 2 mu         0.2      0.821        0.615 0.000128         2.63
 3 mu         0.3      0.940        0.869 0.00301          3.61
 4 mu         0.4      1.00         0.966 0.0204           2.54
 5 mu         0.5      1.02         0.988 0.0744           2.04
 6 mu         0.6      1.01         0.992 0.209            3.41
 7 mu         0.7      0.989        0.990 0.159            3.11
 8 mu         0.8      0.947        1.01  0.0261           1.94
 9 mu         0.9      0.886        0.885 0.000736         2.41
10 mu_1       0.1      0.774        0.550 0.00000167       3.80
11 mu_1       0.2      0.910        0.825 0.000379         3.05
12 mu_1       0.3      0.995        0.944 0.00597          3.64
13 mu_1       0.4      1.02         1.00  0.0314           2.18
14 mu_1       0.5      1.02         0.990 0.0989           2.56
15 mu_1       0.6      1.01         1.01  0.256            3.59
16 mu_1       0.7      0.982        0.985 0.110            2.87
17 mu_1       0.8      0.939        0.992 0.0165           2.01
18 mu_1       0.9      0.880        0.867 0.000429         2.42
19 mu_0       0.1      0.710        0.198 0.000000130     10.9 
20 mu_0       0.2      0.798        0.569 0.0000659        2.94
21 mu_0       0.3      0.916        0.810 0.00174          3.60
22 mu_0       0.4      0.991        0.941 0.0131           2.87
23 mu_0       0.5      1.02         0.993 0.0499           2.05
24 mu_0       0.6      1.02         0.974 0.138            3.13
25 mu_0       0.7      1.01         0.973 0.274            3.66
26 mu_0       0.8      0.979        0.960 0.0647           2.25
27 mu_0       0.9      0.939        0.951 0.00350          2.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.63   0.0000217   3.22e-18     201. 
 2 mu         0.2       7.10   0.00738     1.69e-12     391. 
 3 mu         0.3       5.98   0.0733      3.75e- 9     266. 
 4 mu         0.4       3.51   0.343       8.86e- 7      99.1
 5 mu         0.5       1.97   0.787       6.15e- 5      31.8
 6 mu         0.6       1.47   0.750       1.96e- 3      23.6
 7 mu         0.7       1.41   0.907       9.06e- 4      30.5
 8 mu         0.8       1.44   0.775       4.03e- 6      17.5
 9 mu         0.9       1.51   0.378       2.22e-10      20.4
10 mu_1       0.1       7.44   0.000160    3.22e-17     402. 
11 mu_1       0.2       7.62   0.0212      8.45e-12     391. 
12 mu_1       0.3       4.72   0.189       1.25e- 8     177. 
13 mu_1       0.4       2.52   0.609       2.22e- 6      49.6
14 mu_1       0.5       1.59   0.980       1.23e- 4      17.2
15 mu_1       0.6       1.40   0.842       3.27e- 3      27.0
16 mu_1       0.7       1.40   0.933       3.24e- 4      30.0
17 mu_1       0.8       1.44   0.711       1.26e- 6      15.0
18 mu_1       0.9       1.51   0.279       6.16e-11      20.3
19 mu_0       0.1       3.21   0.00000790  0            179. 
20 mu_0       0.2       6.97   0.00266     0            391. 
21 mu_0       0.3       6.53   0.0237      0            304. 
22 mu_0       0.4       4.18   0.181       0            132. 
23 mu_0       0.5       2.35   0.541       0             50.8
24 mu_0       0.6       1.57   0.708       0             18.4
25 mu_0       0.7       1.42   0.836       0             31.8
26 mu_0       0.8       1.43   0.773       0             27.3
27 mu_0       0.9       1.48   0.236       0             21.5
[1] "Total run time was 116.731 seconds"
