
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1287"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  3  4  7  7 10  9 10  4  6  4  2 10  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03239 0.33860 0.61426 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
780 507 
[1] "treatment indicator table: "

  0   1 
507 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.756 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.524 0.0927
 2 mu         0.1   0.2 0.612 0.106 
 3 mu         0.1   0.3 0.723 0.117 
 4 mu         0.1   0.4 0.845 0.129 
 5 mu         0.1   0.5 0.926 0.151 
 6 mu         0.2   0.1 0.395 0.0582
 7 mu         0.2   0.2 0.495 0.0635
 8 mu         0.2   0.3 0.577 0.0684
 9 mu         0.2   0.4 0.661 0.0733
10 mu         0.2   0.5 0.699 0.0739
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.20         0.564   0.00156     10.9 
 2 mu         0.2      1.07         0.933   0.0769       4.75
 3 mu         0.3      1.04         0.952   0.305        2.78
 4 mu         0.4      1.03         1.00    0.364        2.06
 5 mu         0.5      1.01         1.02    0.462        1.84
 6 mu         0.6      0.999        0.976   0.556        1.69
 7 mu         0.7      0.986        1.00    0.603        1.48
 8 mu         0.8      0.973        0.952   0.474        1.51
 9 mu         0.9      0.973        0.937   0.224        1.99
10 mu_1       0.1      1.02         0.805   0.00631      6.24
11 mu_1       0.2      1.04         0.951   0.151        3.92
12 mu_1       0.3      1.04         0.971   0.344        2.05
13 mu_1       0.4      1.03         1.03    0.387        2.01
14 mu_1       0.5      1.01         1.02    0.511        1.83
15 mu_1       0.6      0.996        0.987   0.558        1.63
16 mu_1       0.7      0.981        0.975   0.610        1.49
17 mu_1       0.8      0.970        0.947   0.439        1.57
18 mu_1       0.9      0.973        0.948   0.200        2.05
19 mu_0       0.1      1.22         0.513   0.00103     11.7 
20 mu_0       0.2      1.08         0.902   0.0556       4.95
21 mu_0       0.3      1.04         0.975   0.254        3.13
22 mu_0       0.4      1.03         0.974   0.348        2.10
23 mu_0       0.5      1.02         1.02    0.414        1.86
24 mu_0       0.6      1.00         0.984   0.552        1.78
25 mu_0       0.7      0.996        0.989   0.532        1.50
26 mu_0       0.8      0.985        1.00    0.591        1.50
27 mu_0       0.9      0.975        0.939   0.242        1.80
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.09     0.000266   4.39e-16     42.6 
 2 mu         0.2      1.06     0.0117     1.02e-10     25.9 
 3 mu         0.3      1.11     0.119      1.32e- 7      6.88
 4 mu         0.4      1.21     0.468      1.74e- 5      7.03
 5 mu         0.5      1.15     0.867      6.43e- 4      6.49
 6 mu         0.6      1.02     0.962      2.53e- 3      4.50
 7 mu         0.7      0.964    0.806      4.02e- 5      2.89
 8 mu         0.8      1.00     0.675      9.14e- 8      4.14
 9 mu         0.9      0.995    0.0635     1.86e-12      7.32
10 mu_1       0.1      1.27     0.00168    4.16e-15     47.4 
11 mu_1       0.2      1.03     0.0401     4.84e-10     14.4 
12 mu_1       0.3      1.19     0.258      4.18e- 7      6.62
13 mu_1       0.4      1.24     0.617      4.10e- 5      7.68
14 mu_1       0.5      1.13     0.937      1.21e- 3      5.68
15 mu_1       0.6      1.01     0.919      6.59e- 4      4.00
16 mu_1       0.7      0.971    0.829      7.70e- 6      3.41
17 mu_1       0.8      1.01     0.527      1.34e- 8      4.44
18 mu_1       0.9      0.977    0.0379     2.30e-13      7.70
19 mu_0       0.1      1.07     0.0000666  0            42.1 
20 mu_0       0.2      1.07     0.00522    0            28.8 
21 mu_0       0.3      1.08     0.0609     0             8.74
22 mu_0       0.4      1.19     0.295      0             6.59
23 mu_0       0.5      1.16     0.658      0             7.30
24 mu_0       0.6      1.04     0.711      0             5.25
25 mu_0       0.7      0.946    0.841      0             3.42
26 mu_0       0.8      0.979    0.891      0             3.68
27 mu_0       0.9      1.16     0.231      0             6.00
[1] "Total run time was 61.94 seconds"
