
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1215"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  3  7  6 14 13  7  5  3  5  5  4  6  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01703 0.32638 0.56741 0.96836 4.00000 
[1] "event indicator table: "

  0   1 
694 521 
[1] "treatment indicator table: "

  0   1 
531 684 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 67.014 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.449 0.0424
 2 mu         0.1   0.2 0.486 0.0461
 3 mu         0.1   0.3 0.535 0.0629
 4 mu         0.1   0.4 0.574 0.0894
 5 mu         0.1   0.5 0.600 0.0944
 6 mu         0.2   0.1 0.406 0.0260
 7 mu         0.2   0.2 0.446 0.0320
 8 mu         0.2   0.3 0.518 0.0395
 9 mu         0.2   0.4 0.568 0.0517
10 mu         0.2   0.5 0.607 0.0548
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.809    0.0205      4.21
 2 mu         0.2      1.08         0.990    0.140       2.46
 3 mu         0.3      1.05         1.03     0.292       1.83
 4 mu         0.4      1.03         1.02     0.437       1.55
 5 mu         0.5      1.01         1.01     0.682       1.57
 6 mu         0.6      0.994        0.989    0.640       1.46
 7 mu         0.7      0.982        0.965    0.463       1.57
 8 mu         0.8      0.979        0.965    0.219       1.78
 9 mu         0.9      0.961        0.904    0.0346      2.46
10 mu_1       0.1      1.10         0.982    0.0288      3.18
11 mu_1       0.2      1.07         1.04     0.264       2.15
12 mu_1       0.3      1.03         1.00     0.336       1.65
13 mu_1       0.4      1.02         1.01     0.511       1.48
14 mu_1       0.5      1.00         1.00     0.735       1.60
15 mu_1       0.6      0.989        0.981    0.537       1.47
16 mu_1       0.7      0.982        0.950    0.421       1.64
17 mu_1       0.8      0.980        0.962    0.164       1.80
18 mu_1       0.9      0.962        0.882    0.0250      2.61
19 mu_0       0.1      1.05         0.762    0.0158      4.45
20 mu_0       0.2      1.08         0.976    0.109       2.55
21 mu_0       0.3      1.06         1.02     0.239       1.94
22 mu_0       0.4      1.04         1.02     0.380       1.61
23 mu_0       0.5      1.02         1.01     0.542       1.54
24 mu_0       0.6      1.00         0.991    0.717       1.57
25 mu_0       0.7      0.983        0.992    0.560       1.52
26 mu_0       0.8      0.976        0.961    0.428       1.69
27 mu_0       0.9      0.951        0.962    0.121       2.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.692     0.00141   2.84e-18     16.4 
 2 mu         0.2      1.01      0.0456    2.98e-12     11.3 
 3 mu         0.3      1.11      0.399     9.92e- 9      6.21
 4 mu         0.4      1.09      0.996     3.13e- 6      4.03
 5 mu         0.5      1.04      1.02      2.71e- 4      3.44
 6 mu         0.6      0.996     0.982     5.80e- 3      3.05
 7 mu         0.7      1.01      0.908     1.41e- 4      2.82
 8 mu         0.8      1.16      0.502     6.29e- 7      7.12
 9 mu         0.9      1.56      0.0435    4.86e-11     34.6 
10 mu_1       0.1      1.06      0.00731   2.84e-17     17.2 
11 mu_1       0.2      1.13      0.141     1.49e-11      6.60
12 mu_1       0.3      1.13      0.694     3.31e- 8      6.21
13 mu_1       0.4      1.08      0.972     7.82e- 6      3.38
14 mu_1       0.5      1.03      1.02      5.42e- 4      3.26
15 mu_1       0.6      0.999     0.894     1.21e- 3      3.21
16 mu_1       0.7      1.02      0.675     2.51e- 5      3.23
17 mu_1       0.8      1.18      0.345     9.83e- 8      8.01
18 mu_1       0.9      1.58      0.0296    6.75e-12     38.4 
19 mu_0       0.1      0.651     0.000459  0            16.4 
20 mu_0       0.2      0.979     0.0247    0            12.8 
21 mu_0       0.3      1.10      0.263     0             6.58
22 mu_0       0.4      1.10      0.755     0             4.70
23 mu_0       0.5      1.04      0.932     0             3.62
24 mu_0       0.6      0.993     0.916     0             2.81
25 mu_0       0.7      0.982     0.795     0             3.18
26 mu_0       0.8      1.06      0.813     0             4.70
27 mu_0       0.9      1.37      0.119     0            14.8 
[1] "Total run time was 70.277 seconds"
