
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1298"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  6  7  6  7  4  6  5  5  2 11  7  8  5 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0315  0.3529  0.5850  0.9939  4.8043 
[1] "event indicator table: "

  0   1 
754 544 
[1] "treatment indicator table: "

  0   1 
527 771 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 81.387 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.519 0.130 
 2 mu         0.1   0.2 0.595 0.134 
 3 mu         0.1   0.3 0.616 0.154 
 4 mu         0.1   0.4 0.714 0.157 
 5 mu         0.1   0.5 0.797 0.168 
 6 mu         0.2   0.1 0.341 0.0609
 7 mu         0.2   0.2 0.401 0.0564
 8 mu         0.2   0.3 0.412 0.0696
 9 mu         0.2   0.4 0.493 0.0634
10 mu         0.2   0.5 0.552 0.0658
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.44         0.437 0.0000831     18.2 
 2 mu         0.2      1.09         0.800 0.0143         6.54
 3 mu         0.3      0.990        0.949 0.160          2.50
 4 mu         0.4      0.995        0.975 0.341          1.80
 5 mu         0.5      0.995        0.998 0.534          1.45
 6 mu         0.6      0.991        0.996 0.693          1.29
 7 mu         0.7      0.994        0.993 0.470          1.41
 8 mu         0.8      1.01         1.02  0.213          1.88
 9 mu         0.9      1.03         0.985 0.0634         2.71
10 mu_1       0.1      1.14         0.755 0.000381      11.5 
11 mu_1       0.2      0.976        0.952 0.0335         3.12
12 mu_1       0.3      0.982        0.977 0.254          1.76
13 mu_1       0.4      0.998        0.972 0.384          1.80
14 mu_1       0.5      0.995        0.991 0.610          1.35
15 mu_1       0.6      0.991        0.986 0.695          1.29
16 mu_1       0.7      0.995        0.986 0.414          1.45
17 mu_1       0.8      1.01         1.01  0.197          1.98
18 mu_1       0.9      1.03         0.922 0.0562         2.81
19 mu_0       0.1      1.47         0.384 0.0000500     19.0 
20 mu_0       0.2      1.11         0.769 0.00953        7.56
21 mu_0       0.3      0.994        0.939 0.120          2.82
22 mu_0       0.4      0.992        0.964 0.313          1.80
23 mu_0       0.5      0.996        0.969 0.458          1.59
24 mu_0       0.6      0.991        0.983 0.690          1.36
25 mu_0       0.7      0.989        0.990 0.601          1.36
26 mu_0       0.8      0.994        0.973 0.277          1.57
27 mu_0       0.9      1.01         0.996 0.129          2.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.348     0.000468  1.26e-16     10.8 
 2 mu         0.2      0.809     0.0263    5.87e-11     16.7 
 3 mu         0.3      1.07      0.210     1.14e- 7      8.68
 4 mu         0.4      1.16      0.670     2.31e- 5      4.95
 5 mu         0.5      1.13      1.11      1.33e- 3      4.76
 6 mu         0.6      1.05      1.02      2.75e- 2      3.27
 7 mu         0.7      1.04      0.956     7.77e- 4      4.99
 8 mu         0.8      1.25      0.313     3.97e- 6      8.02
 9 mu         0.9      1.83      0.0180    3.45e-10     26.4 
10 mu_1       0.1      0.778     0.00259   1.20e-15     19.1 
11 mu_1       0.2      1.07      0.0924    2.79e-10     14.7 
12 mu_1       0.3      1.16      0.401     3.60e- 7      5.95
13 mu_1       0.4      1.17      0.989     5.48e- 5      5.50
14 mu_1       0.5      1.10      1.14      2.53e- 3      4.23
15 mu_1       0.6      1.03      1.10      8.08e- 3      3.21
16 mu_1       0.7      1.06      0.835     1.96e- 4      5.71
17 mu_1       0.8      1.30      0.217     8.77e- 7      9.43
18 mu_1       0.9      1.87      0.0114    6.77e-11     27.6 
19 mu_0       0.1      0.300     0.000261  0             9.92
20 mu_0       0.2      0.745     0.0103    0            17.2 
21 mu_0       0.3      1.03      0.118     0            10.2 
22 mu_0       0.4      1.16      0.468     0             4.58
23 mu_0       0.5      1.16      1.02      0             5.29
24 mu_0       0.6      1.08      1.16      0             3.37
25 mu_0       0.7      0.998     0.960     0             3.33
26 mu_0       0.8      1.03      0.513     0             7.35
27 mu_0       0.9      1.43      0.0509    0            15.5 
[1] "Total run time was 85.055 seconds"
