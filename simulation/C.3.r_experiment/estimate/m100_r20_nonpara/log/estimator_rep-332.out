
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1278"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5  4  4  6  7  5  5  8  5  7  6 13  4  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05664 0.39745 0.62908 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
721 557 
[1] "treatment indicator table: "

  0   1 
450 828 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 94.608 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.557 0.280 
 2 mu         0.1   0.2 0.707 0.336 
 3 mu         0.1   0.3 0.792 0.374 
 4 mu         0.1   0.4 0.882 0.412 
 5 mu         0.1   0.5 0.914 0.450 
 6 mu         0.2   0.1 0.280 0.0862
 7 mu         0.2   0.2 0.386 0.107 
 8 mu         0.2   0.3 0.443 0.116 
 9 mu         0.2   0.4 0.487 0.135 
10 mu         0.2   0.5 0.497 0.154 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.46        0.0254 0.000000133      54.2 
 2 mu         0.2      0.896       0.265  0.000218         13.4 
 3 mu         0.3      0.791       0.594  0.0101            5.62
 4 mu         0.4      0.859       0.873  0.0902            2.46
 5 mu         0.5      0.937       0.961  0.321             1.71
 6 mu         0.6      0.983       1.00   0.648             1.30
 7 mu         0.7      0.979       0.986  0.534             1.33
 8 mu         0.8      0.932       0.956  0.207             2.14
 9 mu         0.9      0.863       0.732  0.0263            3.48
10 mu_1       0.1      0.920       0.0921 0.000000801      27.1 
11 mu_1       0.2      0.694       0.501  0.000656          5.71
12 mu_1       0.3      0.784       0.786  0.0203            2.16
13 mu_1       0.4      0.888       0.949  0.141             1.84
14 mu_1       0.5      0.956       0.985  0.413             1.62
15 mu_1       0.6      0.986       0.992  0.696             1.27
16 mu_1       0.7      0.973       0.988  0.459             1.43
17 mu_1       0.8      0.926       0.932  0.172             2.30
18 mu_1       0.9      0.859       0.688  0.0205            3.54
19 mu_0       0.1      1.52        0.0177 0.0000000591     57.2 
20 mu_0       0.2      0.946       0.204  0.000108         16.6 
21 mu_0       0.3      0.794       0.495  0.00569           7.72
22 mu_0       0.4      0.840       0.792  0.0562            3.51
23 mu_0       0.5      0.918       0.928  0.218             1.81
24 mu_0       0.6      0.977       0.997  0.424             1.45
25 mu_0       0.7      0.995       1.01   0.661             1.34
26 mu_0       0.8      0.958       0.959  0.350             1.50
27 mu_0       0.9      0.896       0.901  0.0787            2.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    2492.     0.0000233   4.21e-15 249012.  
 2 mu         0.2    1917.     0.00370     8.73e-10 191490.  
 3 mu         0.3     668.     0.0440      9.88e- 7  66442.  
 4 mu         0.4     140.     0.224       1.29e- 4  13648.  
 5 mu         0.5      18.8    0.632       4.96e- 3   1661.  
 6 mu         0.6       2.44   1.08        8.45e- 2    105.  
 7 mu         0.7       1.21   0.980       1.71e- 1      3.18
 8 mu         0.8       1.40   0.623       1.13e- 2      9.38
 9 mu         0.9       1.61   0.0652      8.82e- 7     38.5 
10 mu_1       0.1    3113.     0.000133    0        311265.  
11 mu_1       0.2    1199.     0.00823     0        119681.  
12 mu_1       0.3     280.     0.0869      0         27684.  
13 mu_1       0.4      45.6    0.353       0          4265.  
14 mu_1       0.5       6.00   0.826       0           415.  
15 mu_1       0.6       1.47   1.08        0            21.9 
16 mu_1       0.7       1.19   0.934       0             3.86
17 mu_1       0.8       1.44   0.479       0            11.7 
18 mu_1       0.9       1.61   0.0461      0            42.8 
19 mu_0       0.1    2423.     0.00000609  0        242095.  
20 mu_0       0.2    2097.     0.000981    0        209442.  
21 mu_0       0.3     834.     0.0172      0         83052.  
22 mu_0       0.4     203.     0.114       0         19903.  
23 mu_0       0.5      31.7    0.423       0          2907.  
24 mu_0       0.6       3.89   0.942       0           230.  
25 mu_0       0.7       1.24   1.17        0             7.44
26 mu_0       0.8       1.23   0.993       0             6.85
27 mu_0       0.9       1.60   0.260       0            14.5 
[1] "Total run time was 99.134 seconds"
