
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1313"
[1] "cluster size dist'n: "

 5  6  7  9 10 11 12 13 14 15 16 17 18 19 20 
 9  8  2  4  1 12  7  7  6  6  7 11  6  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03556 0.38837 0.65509 1.00000 5.62016 
[1] "event indicator table: "

  0   1 
775 538 
[1] "treatment indicator table: "

  0   1 
489 824 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.082 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.335 0.131 
 2 mu         0.1   0.2 0.432 0.170 
 3 mu         0.1   0.3 0.445 0.168 
 4 mu         0.1   0.4 0.476 0.174 
 5 mu         0.1   0.5 0.483 0.168 
 6 mu         0.2   0.1 0.311 0.0722
 7 mu         0.2   0.2 0.391 0.0906
 8 mu         0.2   0.3 0.407 0.0901
 9 mu         0.2   0.4 0.432 0.0927
10 mu         0.2   0.5 0.460 0.0874
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.858        0.264 0.000000554     25.1 
 2 mu         0.2      0.855        0.596 0.000475        10.9 
 3 mu         0.3      0.875        0.815 0.0154           3.15
 4 mu         0.4      0.923        0.914 0.0952           1.77
 5 mu         0.5      0.967        0.973 0.273            1.62
 6 mu         0.6      0.987        0.993 0.511            1.49
 7 mu         0.7      0.985        0.986 0.456            1.58
 8 mu         0.8      0.998        0.943 0.140            5.40
 9 mu         0.9      1.16         0.908 0.00965         28.4 
10 mu_1       0.1      0.916        0.554 0.00000322      18.0 
11 mu_1       0.2      0.851        0.765 0.00139          4.03
12 mu_1       0.3      0.890        0.930 0.0303           2.36
13 mu_1       0.4      0.941        0.951 0.142            1.85
14 mu_1       0.5      0.976        0.987 0.335            1.59
15 mu_1       0.6      0.988        0.988 0.577            1.56
16 mu_1       0.7      0.983        0.988 0.388            1.76
17 mu_1       0.8      1.00         0.918 0.111            6.56
18 mu_1       0.9      1.19         0.894 0.00708         31.5 
19 mu_0       0.1      0.852        0.218 0.000000257     25.9 
20 mu_0       0.2      0.856        0.558 0.000246        12.7 
21 mu_0       0.3      0.869        0.756 0.00904          4.03
22 mu_0       0.4      0.911        0.863 0.0644           2.00
23 mu_0       0.5      0.957        0.924 0.210            1.71
24 mu_0       0.6      0.987        0.991 0.412            1.59
25 mu_0       0.7      0.990        0.984 0.574            1.61
26 mu_0       0.8      0.975        1.00  0.258            1.72
27 mu_0       0.9      0.953        0.889 0.0327           2.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.05   0.0000249   1.79e-16    114.  
 2 mu         0.2       1.96   0.00330     4.18e-11     50.1 
 3 mu         0.3       1.71   0.0624      5.41e- 8     31.4 
 4 mu         0.4       1.49   0.333       8.22e- 6      9.81
 5 mu         0.5       1.34   0.810       3.80e- 4     11.3 
 6 mu         0.6       1.27   1.05        8.10e- 3      6.91
 7 mu         0.7       2.01   0.976       2.72e- 3     59.8 
 8 mu         0.8       6.51   0.579       1.09e- 5    388.  
 9 mu         0.9      26.6    0.0457      5.35e-10   2016.  
10 mu_1       0.1       1.23   0.000136    0            35.3 
11 mu_1       0.2       1.56   0.00865     0            48.3 
12 mu_1       0.3       1.44   0.112       0            22.0 
13 mu_1       0.4       1.35   0.456       0            11.1 
14 mu_1       0.5       1.26   0.872       0            10.7 
15 mu_1       0.6       1.31   0.992       0            11.5 
16 mu_1       0.7       2.42   0.997       0            85.4 
17 mu_1       0.8       7.85   0.445       0           485.  
18 mu_1       0.9      29.3    0.0269      0          2240.  
19 mu_0       0.1       2.14   0.00000469  0           127.  
20 mu_0       0.2       2.06   0.00160     0            62.6 
21 mu_0       0.3       1.82   0.0332      0            35.4 
22 mu_0       0.4       1.58   0.180       0            12.9 
23 mu_0       0.5       1.41   0.590       0            11.9 
24 mu_0       0.6       1.20   0.847       0             8.22
25 mu_0       0.7       1.04   0.861       0             3.73
26 mu_0       0.8       1.19   0.618       0            14.0 
27 mu_0       0.9       1.75   0.0641      0            46.0 
[1] "Total run time was 69.695 seconds"
