
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1204"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 14  2  8  7  5  5  8  6  6  7  7  3  6  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04245 0.35793 0.63137 1.00000 6.09891 
[1] "event indicator table: "

  0   1 
724 480 
[1] "treatment indicator table: "

  0   1 
442 762 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 550
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 51.124 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.321 0.128 
 2 mu         0.1   0.2 0.410 0.146 
 3 mu         0.1   0.3 0.412 0.176 
 4 mu         0.1   0.4 0.425 0.205 
 5 mu         0.1   0.5 0.494 0.205 
 6 mu         0.2   0.1 0.304 0.0716
 7 mu         0.2   0.2 0.410 0.0752
 8 mu         0.2   0.3 0.423 0.0944
 9 mu         0.2   0.4 0.452 0.122 
10 mu         0.2   0.5 0.507 0.105 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.953        0.187 0.0000119      33.6 
 2 mu         0.2      0.956        0.577 0.00256         8.57
 3 mu         0.3      0.997        0.859 0.0377          3.35
 4 mu         0.4      1.02         0.979 0.173           2.82
 5 mu         0.5      1.02         1.01  0.404           2.03
 6 mu         0.6      1.01         0.998 0.620           1.43
 7 mu         0.7      0.995        0.968 0.676           1.58
 8 mu         0.8      0.999        0.991 0.418           2.16
 9 mu         0.9      1.03         0.982 0.0477          4.91
10 mu_1       0.1      1.04         0.525 0.0000636      17.8 
11 mu_1       0.2      1.00         0.879 0.00689         3.65
12 mu_1       0.3      1.02         0.987 0.0685          3.30
13 mu_1       0.4      1.03         1.02  0.242           2.43
14 mu_1       0.5      1.02         1.01  0.475           1.72
15 mu_1       0.6      1.00         0.979 0.663           1.37
16 mu_1       0.7      0.993        0.978 0.655           1.74
17 mu_1       0.8      1.00         1.00  0.347           2.29
18 mu_1       0.9      1.03         0.956 0.0375          5.10
19 mu_0       0.1      0.943        0.152 0.00000620     35.3 
20 mu_0       0.2      0.944        0.508 0.00148         9.98
21 mu_0       0.3      0.987        0.798 0.0245          3.84
22 mu_0       0.4      1.02         0.968 0.127           3.09
23 mu_0       0.5      1.03         1.03  0.314           2.33
24 mu_0       0.6      1.02         0.997 0.520           1.67
25 mu_0       0.7      1.00         0.985 0.714           1.40
26 mu_0       0.8      0.995        0.974 0.563           1.78
27 mu_0       0.9      1.02         0.967 0.140           3.26
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.44    0.000169   2.24e-16    194.  
 2 mu         0.2       4.59    0.00576    5.87e-11    335.  
 3 mu         0.3       3.74    0.0595     8.68e- 8    199.  
 4 mu         0.4       2.35    0.324      1.54e- 5     63.7 
 5 mu         0.5       1.48    0.885      8.55e- 4     20.0 
 6 mu         0.6       1.14    0.962      2.28e- 2      5.54
 7 mu         0.7       1.12    1.09       1.04e- 3      5.29
 8 mu         0.8       1.27    0.722      4.03e- 6      7.01
 9 mu         0.9       1.71    0.138      1.97e-10     33.6 
10 mu_1       0.1       4.68    0.00136    2.24e-15    363.  
11 mu_1       0.2       4.81    0.0229     2.94e-10    314.  
12 mu_1       0.3       3.13    0.145      2.89e- 7    125.  
13 mu_1       0.4       1.91    0.515      3.85e- 5     38.9 
14 mu_1       0.5       1.30    0.899      1.71e- 3     13.3 
15 mu_1       0.6       1.10    1.03       1.35e- 2      4.11
16 mu_1       0.7       1.13    1.05       3.11e- 4      5.29
17 mu_1       0.8       1.30    0.572      1.06e- 6      7.79
18 mu_1       0.9       1.75    0.0938     4.61e-11     37.4 
19 mu_0       0.1       2.19    0.0000348  0           175.  
20 mu_0       0.2       4.53    0.00169    0           340.  
21 mu_0       0.3       4.01    0.0262     0           231.  
22 mu_0       0.4       2.65    0.191      0            86.2 
23 mu_0       0.5       1.67    0.633      0            26.6 
24 mu_0       0.6       1.21    0.856      0             7.70
25 mu_0       0.7       1.09    0.978      0             5.29
26 mu_0       0.8       1.13    1.05       0             4.52
27 mu_0       0.9       1.38    0.299      0            12.8 
[1] "Total run time was 54.311 seconds"
