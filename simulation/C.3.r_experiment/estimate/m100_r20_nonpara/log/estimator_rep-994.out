
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1247"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8 10  7  3  4  3  8  4  8  7  3 10  6  5  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01898 0.28772 0.57126 0.99036 5.00000 
[1] "event indicator table: "

  0   1 
741 506 
[1] "treatment indicator table: "

  0   1 
489 758 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 87.442 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.596 0.156 
 2 mu         0.1   0.2 0.681 0.152 
 3 mu         0.1   0.3 0.701 0.156 
 4 mu         0.1   0.4 0.728 0.163 
 5 mu         0.1   0.5 0.799 0.177 
 6 mu         0.2   0.1 0.475 0.0836
 7 mu         0.2   0.2 0.562 0.0761
 8 mu         0.2   0.3 0.599 0.0734
 9 mu         0.2   0.4 0.625 0.0735
10 mu         0.2   0.5 0.683 0.0835
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.23         0.588   0.00230     18.2 
 2 mu         0.2      1.13         1.01    0.0738       5.53
 3 mu         0.3      1.04         1.07    0.319        2.27
 4 mu         0.4      1.01         1.01    0.518        1.68
 5 mu         0.5      1.01         1.00    0.606        1.60
 6 mu         0.6      0.994        0.990   0.680        1.34
 7 mu         0.7      0.984        0.981   0.641        1.55
 8 mu         0.8      0.984        0.976   0.282        1.76
 9 mu         0.9      0.974        0.906   0.0247       2.55
10 mu_1       0.1      1.28         0.977   0.00270     11.8 
11 mu_1       0.2      1.08         1.10    0.0732       2.91
12 mu_1       0.3      1.02         0.971   0.315        2.02
13 mu_1       0.4      1.00         0.970   0.521        1.66
14 mu_1       0.5      0.999        0.995   0.634        1.53
15 mu_1       0.6      0.989        0.982   0.706        1.39
16 mu_1       0.7      0.982        0.993   0.597        1.57
17 mu_1       0.8      0.984        0.980   0.230        1.81
18 mu_1       0.9      0.970        0.901   0.0186       2.69
19 mu_0       0.1      1.22         0.514   0.00160     18.9 
20 mu_0       0.2      1.14         0.974   0.0508       6.33
21 mu_0       0.3      1.05         1.07    0.274        2.40
22 mu_0       0.4      1.02         1.02    0.452        1.69
23 mu_0       0.5      1.01         0.986   0.551        1.66
24 mu_0       0.6      1.00         0.995   0.606        1.33
25 mu_0       0.7      0.988        0.985   0.677        1.50
26 mu_0       0.8      0.987        1.01    0.488        1.62
27 mu_0       0.9      1.01         1.00    0.0799       2.10
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.457     0.000375  5.33e-15     15.4 
 2 mu         0.2      0.690     0.0232    6.21e-10     11.4 
 3 mu         0.3      0.907     0.231     5.35e- 7      6.71
 4 mu         0.4      1.06      0.747     6.10e- 5      4.73
 5 mu         0.5      1.11      1.05      2.26e- 3      3.36
 6 mu         0.6      1.05      1.08      3.15e- 2      2.45
 7 mu         0.7      0.969     0.887     1.11e- 3      3.22
 8 mu         0.8      1.09      0.380     4.93e- 6      9.71
 9 mu         0.9      1.55      0.0226    2.71e-10     20.2 
10 mu_1       0.1      0.709     0.00186   5.03e-14     16.2 
11 mu_1       0.2      0.815     0.0857    2.93e- 9      7.11
12 mu_1       0.3      0.995     0.422     1.68e- 6      5.19
13 mu_1       0.4      1.10      0.967     1.44e- 4      4.55
14 mu_1       0.5      1.11      1.03      4.27e- 3      2.92
15 mu_1       0.6      1.03      1.06      1.04e- 2      2.51
16 mu_1       0.7      0.972     0.843     3.96e- 4      3.25
17 mu_1       0.8      1.13      0.293     1.54e- 6     10.9 
18 mu_1       0.9      1.59      0.0163    7.54e-11     20.2 
19 mu_0       0.1      0.429     0.000210  0            15.4 
20 mu_0       0.2      0.659     0.00893   0            12.5 
21 mu_0       0.3      0.870     0.122     0             8.38
22 mu_0       0.4      1.03      0.489     0             4.87
23 mu_0       0.5      1.12      1.07      0             4.13
24 mu_0       0.6      1.09      1.22      0             2.67
25 mu_0       0.7      0.960     0.859     0             3.16
26 mu_0       0.8      0.895     0.479     0             4.85
27 mu_0       0.9      1.21      0.0481    0            20.2 
[1] "Total run time was 92.523 seconds"
