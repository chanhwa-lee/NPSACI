
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1209"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  5 10  6  6  5  7  8  5  8  8  8  1  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05836 0.40497 0.67649 1.00000 4.75577 
[1] "event indicator table: "

  0   1 
721 488 
[1] "treatment indicator table: "

  0   1 
416 793 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 74.598 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.334 0.0652
 2 mu         0.1   0.2 0.381 0.0913
 3 mu         0.1   0.3 0.422 0.0950
 4 mu         0.1   0.4 0.477 0.105 
 5 mu         0.1   0.5 0.526 0.0996
 6 mu         0.2   0.1 0.332 0.0404
 7 mu         0.2   0.2 0.368 0.0634
 8 mu         0.2   0.3 0.407 0.0698
 9 mu         0.2   0.4 0.458 0.0700
10 mu         0.2   0.5 0.524 0.0684
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.789        0.202 0.0000308      9.45
 2 mu         0.2      0.950        0.615 0.00598        6.32
 3 mu         0.3      0.982        0.863 0.0795         4.05
 4 mu         0.4      0.984        0.929 0.299          2.77
 5 mu         0.5      1.00         0.982 0.561          1.76
 6 mu         0.6      1.02         1.02  0.717          1.61
 7 mu         0.7      1.02         1.01  0.725          1.64
 8 mu         0.8      1.01         1.00  0.297          1.43
 9 mu         0.9      1.00         1.01  0.0180         2.81
10 mu_1       0.1      0.966        0.544 0.000149       8.55
11 mu_1       0.2      0.998        0.843 0.0147         5.17
12 mu_1       0.3      0.986        0.929 0.135          3.67
13 mu_1       0.4      0.988        0.968 0.390          2.27
14 mu_1       0.5      1.01         0.987 0.572          1.71
15 mu_1       0.6      1.03         1.00  0.737          1.61
16 mu_1       0.7      1.02         1.00  0.705          1.62
17 mu_1       0.8      1.01         1.01  0.246          1.47
18 mu_1       0.9      1.01         1.02  0.0136         3.02
19 mu_0       0.1      0.770        0.165 0.0000177     10.3 
20 mu_0       0.2      0.938        0.551 0.00379        6.61
21 mu_0       0.3      0.981        0.809 0.0557         4.32
22 mu_0       0.4      0.982        0.923 0.239          3.10
23 mu_0       0.5      0.996        0.958 0.482          1.96
24 mu_0       0.6      1.02         1.01  0.622          1.60
25 mu_0       0.7      1.03         0.999 0.658          1.70
26 mu_0       0.8      1.01         1.01  0.498          1.57
27 mu_0       0.9      0.986        0.978 0.0579         1.80
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.266    0.0000901  1.39e-15      6.94
 2 mu         0.2      0.930    0.00730    2.87e-10     19.9 
 3 mu         0.3      1.40     0.0734     3.25e- 7     25.4 
 4 mu         0.4      1.43     0.292      4.23e- 5     18.2 
 5 mu         0.5      1.24     0.713      1.63e- 3      9.31
 6 mu         0.6      1.07     0.909      2.78e- 2      5.36
 7 mu         0.7      1.01     0.956      3.25e- 3      4.45
 8 mu         0.8      1.10     0.929      1.90e- 5      5.41
 9 mu         0.9      1.18     0.208      1.86e- 9      8.61
10 mu_1       0.1      0.660    0.000623   1.25e-14     14.4 
11 mu_1       0.2      1.34     0.0239     1.29e- 9     23.3 
12 mu_1       0.3      1.56     0.174      9.75e- 7     25.4 
13 mu_1       0.4      1.41     0.535      9.53e- 5     14.0 
14 mu_1       0.5      1.19     0.889      2.94e- 3      8.15
15 mu_1       0.6      1.04     1.01       2.09e- 2      5.58
16 mu_1       0.7      1.01     0.935      1.03e- 3      3.98
17 mu_1       0.8      1.11     0.791      5.28e- 6      5.72
18 mu_1       0.9      1.17     0.146      4.59e-10      8.56
19 mu_0       0.1      0.222    0.0000309  0             6.42
20 mu_0       0.2      0.826    0.00264    0            19.4 
21 mu_0       0.3      1.33     0.0342     0            25.4 
22 mu_0       0.4      1.44     0.135      0            21.0 
23 mu_0       0.5      1.29     0.424      0            11.9 
24 mu_0       0.6      1.12     0.889      0             6.30
25 mu_0       0.7      1.03     0.934      0             5.57
26 mu_0       0.8      1.04     0.899      0             4.16
27 mu_0       0.9      1.23     0.456      0             9.07
[1] "Total run time was 78.714 seconds"
