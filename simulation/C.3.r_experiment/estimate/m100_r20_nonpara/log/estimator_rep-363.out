
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1346"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  4  6  6  3  7  5  2  6  9  7  6 10 10  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06358 0.36825 0.62237 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
784 562 
[1] "treatment indicator table: "

  0   1 
474 872 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 701
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 57.386 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.835 0.384
 2 mu         0.1   0.2 0.915 0.456
 3 mu         0.1   0.3 1.10  0.554
 4 mu         0.1   0.4 1.18  0.614
 5 mu         0.1   0.5 1.23  0.654
 6 mu         0.2   0.1 0.429 0.108
 7 mu         0.2   0.2 0.449 0.118
 8 mu         0.2   0.3 0.543 0.162
 9 mu         0.2   0.4 0.597 0.160
10 mu         0.2   0.5 0.621 0.169
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      2.24        0.0878 0.000000407    107.  
 2 mu         0.2      1.24        0.429  0.000350        17.9 
 3 mu         0.3      1.05        0.789  0.0117           5.04
 4 mu         0.4      0.982       0.952  0.0961           2.28
 5 mu         0.5      0.967       0.953  0.352            1.68
 6 mu         0.6      0.971       0.953  0.639            1.34
 7 mu         0.7      0.996       0.986  0.719            1.52
 8 mu         0.8      1.04        1.05   0.476            1.67
 9 mu         0.9      1.04        0.940  0.0780           2.73
10 mu_1       0.1      1.22        0.280  0.00000237      29.5 
11 mu_1       0.2      1.09        0.691  0.00103          8.88
12 mu_1       0.3      1.01        0.889  0.0227           3.45
13 mu_1       0.4      0.978       0.950  0.143            2.06
14 mu_1       0.5      0.970       0.962  0.440            1.49
15 mu_1       0.6      0.977       0.970  0.682            1.40
16 mu_1       0.7      1.00        0.997  0.663            1.58
17 mu_1       0.8      1.04        1.08   0.405            1.81
18 mu_1       0.9      1.03        0.940  0.0611           2.75
19 mu_0       0.1      2.36        0.0650 0.000000189    118.  
20 mu_0       0.2      1.28        0.354  0.000181        20.8 
21 mu_0       0.3      1.06        0.737  0.00676          6.51
22 mu_0       0.4      0.985       0.922  0.0629           2.42
23 mu_0       0.5      0.964       0.954  0.260            1.86
24 mu_0       0.6      0.962       0.945  0.575            1.42
25 mu_0       0.7      0.974       0.960  0.738            1.49
26 mu_0       0.8      1.01        0.999  0.567            1.71
27 mu_0       0.9      1.07        1.07   0.230            2.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.39  0.00000251   9.35e-17    209.  
 2 mu         0.2       3.05  0.00134      4.36e-11    204.  
 3 mu         0.3       2.47  0.0358       8.45e- 8     92.4 
 4 mu         0.4       1.69  0.228        1.71e- 5     25.8 
 5 mu         0.5       1.19  0.683        9.91e- 4      7.21
 6 mu         0.6       1.06  1.11         2.53e- 2      2.50
 7 mu         0.7       1.08  1.08         1.42e- 2      2.29
 8 mu         0.8       1.13  0.797        1.42e- 4      5.75
 9 mu         0.9       1.26  0.0963       2.35e- 8     16.0 
10 mu_1       0.1       3.69  0.0000156    8.88e-16    299.  
11 mu_1       0.2       2.89  0.00406      2.07e-10    146.  
12 mu_1       0.3       2.09  0.0814       2.68e- 7     44.0 
13 mu_1       0.4       1.42  0.398        4.07e- 5     16.0 
14 mu_1       0.5       1.09  0.916        1.88e- 3      4.55
15 mu_1       0.6       1.05  1.05         4.01e- 2      2.36
16 mu_1       0.7       1.09  1.15         3.94e- 3      2.57
17 mu_1       0.8       1.15  0.649        3.47e- 5      6.29
18 mu_1       0.9       1.27  0.0716       7.83e- 9     17.8 
19 mu_0       0.1       2.25  0.000000574  0           200.  
20 mu_0       0.2       3.08  0.000489     0           218.  
21 mu_0       0.3       2.64  0.0167       0           113.  
22 mu_0       0.4       1.87  0.102        0            36.9 
23 mu_0       0.5       1.29  0.444        0             9.86
24 mu_0       0.6       1.07  1.02         0             3.18
25 mu_0       0.7       1.07  1.06         0             2.39
26 mu_0       0.8       1.08  1.08         0             3.59
27 mu_0       0.9       1.18  0.292        0             9.34
[1] "Total run time was 60.446 seconds"
