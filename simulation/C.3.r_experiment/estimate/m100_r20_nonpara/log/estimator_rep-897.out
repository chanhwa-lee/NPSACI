
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1203"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7  7  8  8  6  5  7  4  3 10  6  8  4  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02189 0.29969 0.55379 0.93347 4.00000 
[1] "event indicator table: "

  0   1 
694 509 
[1] "treatment indicator table: "

  0   1 
509 694 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 69.458 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.697 0.264
 2 mu         0.1   0.2 0.801 0.307
 3 mu         0.1   0.3 0.856 0.331
 4 mu         0.1   0.4 1.05  0.388
 5 mu         0.1   0.5 1.06  0.399
 6 mu         0.2   0.1 0.435 0.108
 7 mu         0.2   0.2 0.526 0.127
 8 mu         0.2   0.3 0.573 0.132
 9 mu         0.2   0.4 0.713 0.152
10 mu         0.2   0.5 0.717 0.157
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.57         0.290 0.0000000239      58.8 
 2 mu         0.2      1.21         0.751 0.0000464         23.1 
 3 mu         0.3      1.07         0.969 0.00264            8.24
 4 mu         0.4      1.03         1.01  0.0336             2.90
 5 mu         0.5      1.01         1.01  0.179              1.54
 6 mu         0.6      1.00         1.00  0.519              1.33
 7 mu         0.7      0.982        0.979 0.506              1.62
 8 mu         0.8      0.954        0.947 0.174              2.60
 9 mu         0.9      0.891        0.805 0.0144             5.36
10 mu_1       0.1      0.992        0.585 0.000000152       13.3 
11 mu_1       0.2      0.974        0.922 0.000148           5.31
12 mu_1       0.3      0.998        0.987 0.00569            3.57
13 mu_1       0.4      1.01         1.01  0.0553             1.65
14 mu_1       0.5      1.01         1.02  0.242              1.48
15 mu_1       0.6      0.999        1.00  0.608              1.35
16 mu_1       0.7      0.977        0.967 0.434              1.81
17 mu_1       0.8      0.949        0.928 0.138              2.95
18 mu_1       0.9      0.883        0.750 0.0105             5.85
19 mu_0       0.1      1.64         0.255 0.00000000972     65.3 
20 mu_0       0.2      1.26         0.681 0.0000209         28.7 
21 mu_0       0.3      1.10         0.923 0.00133           11.5 
22 mu_0       0.4      1.04         1.01  0.0192             4.32
23 mu_0       0.5      1.02         1.02  0.116              1.77
24 mu_0       0.6      1.01         1.02  0.386              1.39
25 mu_0       0.7      0.991        1.02  0.625              1.31
26 mu_0       0.8      0.974        0.977 0.315              1.73
27 mu_0       0.9      0.966        0.979 0.0491             2.11
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       9.58     0.00100   4.06e-14    575.  
 2 mu         0.2      14.6      0.0369    4.21e- 9   1119.  
 3 mu         0.3      10.1      0.235     3.17e- 6    761.  
 4 mu         0.4       4.68     0.705     3.10e- 4    284.  
 5 mu         0.5       2.02     1.03      9.38e- 3     62.1 
 6 mu         0.6       1.22     1.06      7.32e- 3     10.9 
 7 mu         0.7       1.26     0.917     1.78e- 4      9.77
 8 mu         0.8       1.99     0.399     7.94e- 7     55.4 
 9 mu         0.9       4.25     0.0547    6.14e-11    256.  
10 mu_1       0.1      15.9      0.00580   3.63e-13   1150.  
11 mu_1       0.2      13.7      0.117     1.88e- 8   1119.  
12 mu_1       0.3       6.95     0.483     9.46e- 6    507.  
13 mu_1       0.4       3.00     0.942     6.94e- 4    142.  
14 mu_1       0.5       1.54     1.12      1.71e- 2     24.8 
15 mu_1       0.6       1.16     1.01      1.53e- 3      7.64
16 mu_1       0.7       1.34     0.847     3.17e- 5     14.0 
17 mu_1       0.8       2.19     0.292     1.24e- 7     69.3 
18 mu_1       0.9       4.56     0.0304    8.52e-12    285.  
19 mu_0       0.1       8.88     0.000478  0           511.  
20 mu_0       0.2      14.8      0.0179    0          1119.  
21 mu_0       0.3      11.4      0.135     0           869.  
22 mu_0       0.4       5.80     0.505     0           378.  
23 mu_0       0.5       2.51     0.957     0            99.4 
24 mu_0       0.6       1.32     0.993     0            15.8 
25 mu_0       0.7       1.06     1.06      0             4.86
26 mu_0       0.8       1.19     0.505     0            14.0 
27 mu_0       0.9       1.44     0.0553    0            28.3 
[1] "Total run time was 73.809 seconds"
