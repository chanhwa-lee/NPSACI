
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1249"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  5  8  8  5  7  7  9  4  6  5  9  4  3  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02863 0.31246 0.59419 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
734 515 
[1] "treatment indicator table: "

  0   1 
472 777 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 60.275 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.250 0.0650
 2 mu         0.1   0.2 0.295 0.0589
 3 mu         0.1   0.3 0.309 0.0624
 4 mu         0.1   0.4 0.330 0.0653
 5 mu         0.1   0.5 0.334 0.0682
 6 mu         0.2   0.1 0.345 0.111 
 7 mu         0.2   0.2 0.466 0.167 
 8 mu         0.2   0.3 0.517 0.202 
 9 mu         0.2   0.4 0.548 0.216 
10 mu         0.2   0.5 0.596 0.233 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.573       0.0840 0.0000000300      8.25
 2 mu         0.2      1.18        0.405  0.0000544        54.6 
 3 mu         0.3      1.62        0.732  0.00289          83.6 
 4 mu         0.4      1.45        0.910  0.0343           55.6 
 5 mu         0.5      1.15        0.963  0.172            19.5 
 6 mu         0.6      1.02        0.986  0.483             4.09
 7 mu         0.7      0.998       0.994  0.656             1.42
 8 mu         0.8      1.01        0.985  0.387             2.57
 9 mu         0.9      1.04        0.817  0.0790            8.42
10 mu_1       0.1      0.760       0.253  0.000000181      20.6 
11 mu_1       0.2      1.53        0.694  0.000167         80.3 
12 mu_1       0.3      1.68        0.850  0.00599          82.0 
13 mu_1       0.4      1.34        0.970  0.0546           41.1 
14 mu_1       0.5      1.09        0.990  0.227            11.8 
15 mu_1       0.6      1.01        0.999  0.560             2.48
16 mu_1       0.7      1.00        0.993  0.661             1.45
17 mu_1       0.8      1.02        0.994  0.348             3.10
18 mu_1       0.9      1.05        0.788  0.0659            9.34
19 mu_0       0.1      0.552       0.0652 0.0000000132      8.90
20 mu_0       0.2      1.09        0.328  0.0000264        48.2 
21 mu_0       0.3      1.60        0.635  0.00156          84.3 
22 mu_0       0.4      1.52        0.820  0.0207           65.3 
23 mu_0       0.5      1.21        0.949  0.116            27.2 
24 mu_0       0.6      1.03        0.971  0.367             6.51
25 mu_0       0.7      0.987       0.994  0.643             1.45
26 mu_0       0.8      0.981       0.991  0.479             1.54
27 mu_0       0.9      0.972       0.955  0.178             2.10
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      12.1     0.000242   2.58e-16    669.  
 2 mu         0.2      18.7     0.0186     1.20e-10   1077.  
 3 mu         0.3      14.7     0.132      2.33e- 7    961.  
 4 mu         0.4       7.15    0.463      4.73e- 5    409.  
 5 mu         0.5       2.87    0.910      2.74e- 3     93.4 
 6 mu         0.6       1.45    1.04       4.58e- 2     11.8 
 7 mu         0.7       1.20    1.03       4.50e- 3      3.66
 8 mu         0.8       1.38    0.736      3.44e- 5      8.27
 9 mu         0.9       1.99    0.129      4.25e- 9     38.8 
10 mu_1       0.1      17.4     0.00146    2.45e-15    732.  
11 mu_1       0.2      18.9     0.0595     5.72e-10   1267.  
12 mu_1       0.3      11.3     0.305      7.39e- 7    754.  
13 mu_1       0.4       4.76    0.754      1.12e- 4    241.  
14 mu_1       0.5       2.05    1.02       5.20e- 3     44.0 
15 mu_1       0.6       1.27    1.12       4.51e- 2      8.90
16 mu_1       0.7       1.21    1.02       1.93e- 3      3.93
17 mu_1       0.8       1.45    0.582      1.29e- 5      9.82
18 mu_1       0.9       2.07    0.0936     1.05e- 9     40.9 
19 mu_0       0.1      11.5     0.0000951  0           681.  
20 mu_0       0.2      18.7     0.00660    0          1030.  
21 mu_0       0.3      16.2     0.0652     0          1050.  
22 mu_0       0.4       8.74    0.274      0           522.  
23 mu_0       0.5       3.69    0.683      0           143.  
24 mu_0       0.6       1.72    1.02       0            22.2 
25 mu_0       0.7       1.16    1.06       0             7.18
26 mu_0       0.8       1.12    0.934      0             4.73
27 mu_0       0.9       1.26    0.208      0            19.4 
[1] "Total run time was 63.618 seconds"
