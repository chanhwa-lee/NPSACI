
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1279"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  6  5  3  5 10 10  4  8  5  5  5  6  6 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0270  0.3495  0.6310  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
766 513 
[1] "treatment indicator table: "

  0   1 
444 835 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 69.502 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.365 0.132
 2 mu         0.1   0.2 0.526 0.181
 3 mu         0.1   0.3 0.552 0.194
 4 mu         0.1   0.4 0.606 0.217
 5 mu         0.1   0.5 0.613 0.226
 6 mu         0.2   0.1 0.374 0.124
 7 mu         0.2   0.2 0.513 0.165
 8 mu         0.2   0.3 0.550 0.179
 9 mu         0.2   0.4 0.592 0.196
10 mu         0.2   0.5 0.614 0.208
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.948       0.0952 0.00000173      39.1 
 2 mu         0.2      1.06        0.503  0.00129         38.1 
 3 mu         0.3      1.01        0.820  0.0364          17.3 
 4 mu         0.4      1.01        0.920  0.232            5.02
 5 mu         0.5      1.01        0.963  0.569            1.69
 6 mu         0.6      1.01        1.01   0.750            1.36
 7 mu         0.7      1.01        1.01   0.669            1.27
 8 mu         0.8      1.01        1.01   0.454            1.45
 9 mu         0.9      1.03        0.990  0.164            2.43
10 mu_1       0.1      1.23        0.322  0.00000955      55.9 
11 mu_1       0.2      1.07        0.776  0.00359         27.2 
12 mu_1       0.3      1.01        0.905  0.0681           8.30
13 mu_1       0.4      1.01        0.948  0.332            2.03
14 mu_1       0.5      1.01        1.00   0.632            1.58
15 mu_1       0.6      1.01        1.01   0.708            1.25
16 mu_1       0.7      1.00        0.997  0.643            1.28
17 mu_1       0.8      1.01        1.01   0.436            1.48
18 mu_1       0.9      1.04        0.993  0.145            2.62
19 mu_0       0.1      0.917       0.0703 0.000000861     37.3 
20 mu_0       0.2      1.06        0.429  0.000719        40.8 
21 mu_0       0.3      1.01        0.748  0.0229          21.2 
22 mu_0       0.4      1.00        0.897  0.165            7.02
23 mu_0       0.5      1.01        0.947  0.442            1.83
24 mu_0       0.6      1.01        1.01   0.666            1.64
25 mu_0       0.7      1.01        1.01   0.649            1.47
26 mu_0       0.8      0.998       1.01   0.529            1.36
27 mu_0       0.9      1.00        0.972  0.328            1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.07    0.0000109   7.12e-17    235.  
 2 mu         0.2      5.89    0.00177     3.32e-11    322.  
 3 mu         0.3      3.94    0.0358      6.44e- 8    147.  
 4 mu         0.4      2.08    0.202       1.31e- 5     39.3 
 5 mu         0.5      1.27    0.649       7.55e- 4      8.96
 6 mu         0.6      1.05    0.960       1.93e- 2      3.00
 7 mu         0.7      1.06    1.07        5.63e- 3      3.00
 8 mu         0.8      1.20    0.851       1.92e- 5      8.14
 9 mu         0.9      1.48    0.101       8.34e-10     26.8 
10 mu_1       0.1      6.73    0.0000815   6.77e-16    392.  
11 mu_1       0.2      5.42    0.00661     1.58e-10    268.  
12 mu_1       0.3      2.83    0.0755      2.04e- 7     81.4 
13 mu_1       0.4      1.49    0.375       3.10e- 5     23.1 
14 mu_1       0.5      1.06    0.855       1.43e- 3      5.53
15 mu_1       0.6      0.998   0.964       3.06e- 2      2.57
16 mu_1       0.7      1.07    1.09        1.34e- 3      3.22
17 mu_1       0.8      1.23    0.726       4.00e- 6      9.58
18 mu_1       0.9      1.50    0.0680      1.54e-10     28.0 
19 mu_0       0.1      3.78    0.00000278  0           218.  
20 mu_0       0.2      6.01    0.000502    0           335.  
21 mu_0       0.3      4.41    0.0171      0           174.  
22 mu_0       0.4      2.48    0.0964      0            50.1 
23 mu_0       0.5      1.48    0.443       0            13.7 
24 mu_0       0.6      1.12    0.911       0             5.17
25 mu_0       0.7      1.03    1.09        0             2.55
26 mu_0       0.8      1.08    1.00        0             3.67
27 mu_0       0.9      1.32    0.269       0            15.8 
[1] "Total run time was 73.757 seconds"
