
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1201"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  7 10  9  7  7  6  7  7  4  4  7  4  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02926 0.35738 0.61004 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
683 518 
[1] "treatment indicator table: "

  0   1 
484 717 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 583
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.574 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.633 0.247 
 2 mu         0.1   0.2 0.759 0.308 
 3 mu         0.1   0.3 0.812 0.305 
 4 mu         0.1   0.4 0.856 0.322 
 5 mu         0.1   0.5 0.875 0.324 
 6 mu         0.2   0.1 0.447 0.0998
 7 mu         0.2   0.2 0.549 0.139 
 8 mu         0.2   0.3 0.622 0.129 
 9 mu         0.2   0.4 0.663 0.128 
10 mu         0.2   0.5 0.689 0.125 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.20         0.291 0.0000638     38.5 
 2 mu         0.2      1.10         0.782 0.00771        8.90
 3 mu         0.3      1.10         0.944 0.0854         3.66
 4 mu         0.4      1.08         1.02  0.330          3.14
 5 mu         0.5      1.04         1.01  0.595          1.79
 6 mu         0.6      1.02         1.00  0.732          1.66
 7 mu         0.7      1.02         1.00  0.592          1.88
 8 mu         0.8      1.01         0.928 0.192          3.26
 9 mu         0.9      0.936        0.707 0.0123         4.80
10 mu_1       0.1      0.893        0.578 0.000301       8.67
11 mu_1       0.2      1.06         0.941 0.0209         5.07
12 mu_1       0.3      1.08         0.998 0.156          3.37
13 mu_1       0.4      1.06         1.01  0.453          2.87
14 mu_1       0.5      1.03         1.02  0.689          1.73
15 mu_1       0.6      1.02         0.993 0.676          1.67
16 mu_1       0.7      1.02         0.987 0.520          2.09
17 mu_1       0.8      1.01         0.905 0.150          3.51
18 mu_1       0.9      0.929        0.675 0.00897        4.84
19 mu_0       0.1      1.23         0.243 0.0000328     42.7 
20 mu_0       0.2      1.11         0.715 0.00441       10.9 
21 mu_0       0.3      1.11         0.931 0.0550         4.03
22 mu_0       0.4      1.09         1.01  0.244          3.31
23 mu_0       0.5      1.06         1.03  0.473          2.12
24 mu_0       0.6      1.03         1.02  0.613          1.72
25 mu_0       0.7      1.02         1.00  0.631          1.67
26 mu_0       0.8      1.01         0.979 0.356          2.26
27 mu_0       0.9      0.998        0.894 0.0423         4.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.93     0.000333  4.22e-12     83.7 
 2 mu         0.2       2.28     0.0190    1.09e- 7    102.  
 3 mu         0.3       1.63     0.209     3.66e- 5     40.5 
 4 mu         0.4       1.31     0.630     2.01e- 3     12.8 
 5 mu         0.5       1.18     0.872     3.66e- 2      7.59
 6 mu         0.6       1.13     1.02      6.83e- 3      3.97
 7 mu         0.7       1.49     0.896     9.32e- 5     14.6 
 8 mu         0.8       3.41     0.469     1.85e- 7     82.9 
 9 mu         0.9      10.6      0.0697    3.58e-12    383.  
10 mu_1       0.1       2.91     0.00209   3.72e-11    132.  
11 mu_1       0.2       2.16     0.0624    4.82e- 7     80.3 
12 mu_1       0.3       1.48     0.378     1.08e- 4     21.3 
13 mu_1       0.4       1.25     0.836     4.44e- 3     11.5 
14 mu_1       0.5       1.15     0.954     3.75e- 2      5.42
15 mu_1       0.6       1.15     1.07      1.27e- 3      4.14
16 mu_1       0.7       1.69     0.808     1.48e- 5     20.9 
17 mu_1       0.8       3.96     0.357     2.57e- 8    104.  
18 mu_1       0.9      11.6      0.0460    4.42e-13    426.  
19 mu_0       0.1       1.82     0.000144  0            80.9 
20 mu_0       0.2       2.31     0.0108    0           107.  
21 mu_0       0.3       1.69     0.121     0            48.7 
22 mu_0       0.4       1.35     0.420     0            13.7 
23 mu_0       0.5       1.22     0.703     0             9.76
24 mu_0       0.6       1.09     0.958     0             4.07
25 mu_0       0.7       1.01     1.03      0             4.13
26 mu_0       0.8       1.20     0.374     0            12.1 
27 mu_0       0.9       1.72     0.0328    0            49.9 
[1] "Total run time was 62.532 seconds"
