
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1254"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  3  8  9 10  5  7  6  3  7  9  6  6  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02208 0.32150 0.60359 0.98109 6.00000 
[1] "event indicator table: "

  0   1 
692 562 
[1] "treatment indicator table: "

  0   1 
517 737 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 82.006 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.237 0.0932
 2 mu         0.1   0.2 0.259 0.0757
 3 mu         0.1   0.3 0.374 0.0794
 4 mu         0.1   0.4 0.502 0.183 
 5 mu         0.1   0.5 0.496 0.177 
 6 mu         0.2   0.1 0.295 0.0682
 7 mu         0.2   0.2 0.330 0.0542
 8 mu         0.2   0.3 0.444 0.0589
 9 mu         0.2   0.4 0.558 0.139 
10 mu         0.2   0.5 0.564 0.134 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.547        0.215 0.0000386      5.51
 2 mu         0.2      0.791        0.612 0.00765        3.15
 3 mu         0.3      0.965        0.866 0.102          4.26
 4 mu         0.4      1.02         0.943 0.327          3.48
 5 mu         0.5      1.02         0.998 0.586          1.99
 6 mu         0.6      1.02         1.02  0.686          1.37
 7 mu         0.7      1.00         1.00  0.571          1.83
 8 mu         0.8      0.960        0.929 0.170          3.30
 9 mu         0.9      0.874        0.684 0.00813       10.4 
10 mu_1       0.1      0.698        0.471 0.000195       3.29
11 mu_1       0.2      0.937        0.787 0.0195         3.78
12 mu_1       0.3      1.02         0.944 0.176          4.48
13 mu_1       0.4      1.03         0.977 0.448          2.88
14 mu_1       0.5      1.03         1.02  0.624          1.66
15 mu_1       0.6      1.02         1.02  0.671          1.45
16 mu_1       0.7      0.996        0.996 0.497          1.94
17 mu_1       0.8      0.952        0.886 0.133          3.95
18 mu_1       0.9      0.872        0.659 0.00578       11.5 
19 mu_0       0.1      0.530        0.171 0.0000212      6.07
20 mu_0       0.2      0.754        0.534 0.00468        3.20
21 mu_0       0.3      0.940        0.841 0.0699         4.17
22 mu_0       0.4      1.01         0.930 0.246          3.89
23 mu_0       0.5      1.02         0.961 0.473          2.32
24 mu_0       0.6      1.02         1.02  0.613          1.47
25 mu_0       0.7      1.01         1.02  0.649          1.57
26 mu_0       0.8      0.990        0.953 0.316          2.40
27 mu_0       0.9      0.897        0.857 0.0293         2.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       8.40    0.000120   3.47e-13    526.  
 2 mu         0.2       8.59    0.0132     1.01e- 8    404.  
 3 mu         0.3       5.69    0.136      3.87e- 6    140.  
 4 mu         0.4       3.20    0.520      2.48e- 4     57.1 
 5 mu         0.5       1.69    0.973      5.88e- 3     23.5 
 6 mu         0.6       1.17    1.01       3.00e- 2      5.04
 7 mu         0.7       1.31    0.959      1.97e- 3     13.8 
 8 mu         0.8       1.82    0.426      2.15e- 5     37.5 
 9 mu         0.9       3.54    0.0423     1.86e- 9    219.  
10 mu_1       0.1      11.7     0.000849   3.25e-12    657.  
11 mu_1       0.2       7.11    0.0373     4.73e- 8    253.  
12 mu_1       0.3       4.09    0.279      1.21e- 5     77.0 
13 mu_1       0.4       2.24    0.756      5.82e- 4     44.6 
14 mu_1       0.5       1.31    0.935      1.10e- 2     14.7 
15 mu_1       0.6       1.12    0.975      4.54e- 3      6.53
16 mu_1       0.7       1.38    0.900      2.56e- 4     15.3 
17 mu_1       0.8       1.94    0.319      3.77e- 6     46.9 
18 mu_1       0.9       3.80    0.0242     2.59e-10    244.  
19 mu_0       0.1       8.04    0.0000423  0           511.  
20 mu_0       0.2       8.96    0.00560    0           442.  
21 mu_0       0.3       6.38    0.0809     0           175.  
22 mu_0       0.4       3.84    0.326      0            66.2 
23 mu_0       0.5       2.07    0.742      0            32.3 
24 mu_0       0.6       1.23    0.965      0             8.72
25 mu_0       0.7       1.13    0.883      0            10.2 
26 mu_0       0.8       1.34    0.577      0            19.6 
27 mu_0       0.9       1.23    0.0650     0            15.7 
[1] "Total run time was 86.572 seconds"
