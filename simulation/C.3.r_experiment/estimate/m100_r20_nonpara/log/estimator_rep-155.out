
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1230"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  6  5  5 10  6  6  9  5  9  2  5  9  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02709 0.34979 0.61415 1.00000 5.96537 
[1] "event indicator table: "

  0   1 
737 493 
[1] "treatment indicator table: "

  0   1 
479 751 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 58.861 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.391 0.0645
 2 mu         0.1   0.2 0.432 0.0626
 3 mu         0.1   0.3 0.514 0.0772
 4 mu         0.1   0.4 0.575 0.0790
 5 mu         0.1   0.5 0.654 0.100 
 6 mu         0.2   0.1 0.357 0.0402
 7 mu         0.2   0.2 0.405 0.0414
 8 mu         0.2   0.3 0.489 0.0538
 9 mu         0.2   0.4 0.568 0.0593
10 mu         0.2   0.5 0.625 0.0692
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.948        0.545 0.000119       5.75
 2 mu         0.2      1.05         0.992 0.0121         3.37
 3 mu         0.3      1.04         0.989 0.108          2.34
 4 mu         0.4      1.02         0.987 0.351          1.78
 5 mu         0.5      1.02         1.02  0.615          1.49
 6 mu         0.6      1.02         1.01  0.741          1.38
 7 mu         0.7      1.01         1.00  0.623          1.39
 8 mu         0.8      1.01         1.00  0.309          1.86
 9 mu         0.9      1.00         0.931 0.0316         3.04
10 mu_1       0.1      1.09         0.884 0.000567       4.42
11 mu_1       0.2      1.05         0.969 0.0288         3.04
12 mu_1       0.3      1.02         0.989 0.173          2.11
13 mu_1       0.4      1.01         1.01  0.455          1.53
14 mu_1       0.5      1.02         1.01  0.659          1.45
15 mu_1       0.6      1.02         1.01  0.686          1.34
16 mu_1       0.7      1.01         1.00  0.638          1.44
17 mu_1       0.8      1.00         1.00  0.266          1.95
18 mu_1       0.9      0.996        0.925 0.0253         3.11
19 mu_0       0.1      0.932        0.476 0.0000690      5.94
20 mu_0       0.2      1.05         0.954 0.00780        3.46
21 mu_0       0.3      1.04         0.976 0.0798         2.55
22 mu_0       0.4      1.02         0.965 0.282          1.96
23 mu_0       0.5      1.02         1.01  0.554          1.57
24 mu_0       0.6      1.03         1.03  0.631          1.45
25 mu_0       0.7      1.02         0.991 0.588          1.38
26 mu_0       0.8      1.02         1.01  0.485          1.62
27 mu_0       0.9      1.04         1.04  0.0885         2.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.275    0.000135   1.20e-16      6.89
 2 mu         0.2      0.773    0.00782    5.60e-11     10.8 
 3 mu         0.3      1.09     0.0921     1.09e- 7     10.5 
 4 mu         0.4      1.14     0.446      2.20e- 5      6.95
 5 mu         0.5      1.07     0.865      1.27e- 3      6.74
 6 mu         0.6      1.05     0.978      2.68e- 2      5.06
 7 mu         0.7      1.11     1.15       6.64e- 4      3.12
 8 mu         0.8      1.18     0.710      2.59e- 6      8.03
 9 mu         0.9      1.16     0.127      1.26e-10     18.0 
10 mu_1       0.1      0.652    0.00105    1.14e-15     13.8 
11 mu_1       0.2      1.06     0.0277     2.66e-10     11.4 
12 mu_1       0.3      1.18     0.218      3.44e- 7     10.3 
13 mu_1       0.4      1.13     0.599      5.23e- 5      6.52
14 mu_1       0.5      1.06     0.967      2.42e- 3      6.74
15 mu_1       0.6      1.07     1.00       9.41e- 3      4.22
16 mu_1       0.7      1.13     1.13       2.00e- 4      3.40
17 mu_1       0.8      1.19     0.582      6.81e- 7      8.53
18 mu_1       0.9      1.16     0.0857     2.96e-11     19.0 
19 mu_0       0.1      0.234    0.0000348  0             6.13
20 mu_0       0.2      0.702    0.00317    0            10.7 
21 mu_0       0.3      1.06     0.0469     0            10.6 
22 mu_0       0.4      1.15     0.270      0             8.18
23 mu_0       0.5      1.08     0.675      0             6.74
24 mu_0       0.6      1.02     0.912      0             6.33
25 mu_0       0.7      1.05     1.05       0             3.31
26 mu_0       0.8      1.12     0.865      0             6.02
27 mu_0       0.9      1.16     0.235      0            11.2 
[1] "Total run time was 62.146 seconds"
