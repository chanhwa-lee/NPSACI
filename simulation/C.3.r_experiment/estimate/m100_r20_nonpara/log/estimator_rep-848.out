
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1312"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  5  5  8  6  8  5  6  5  9  4 10  7 10  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05003 0.38281 0.64009 1.00000 5.43516 
[1] "event indicator table: "

  0   1 
778 534 
[1] "treatment indicator table: "

  0   1 
488 824 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 50.695 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.228 0.0768
 2 mu         0.1   0.2 0.333 0.124 
 3 mu         0.1   0.3 0.305 0.125 
 4 mu         0.1   0.4 0.302 0.124 
 5 mu         0.1   0.5 0.305 0.120 
 6 mu         0.2   0.1 0.268 0.0538
 7 mu         0.2   0.2 0.425 0.0860
 8 mu         0.2   0.3 0.420 0.0773
 9 mu         0.2   0.4 0.417 0.0747
10 mu         0.2   0.5 0.446 0.0690
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.535       0.107  0.000000812     13.1 
 2 mu         0.2      0.758       0.554  0.000684         5.23
 3 mu         0.3      0.922       0.800  0.0219           2.65
 4 mu         0.4      0.996       0.935  0.169            2.33
 5 mu         0.5      1.01        0.996  0.547            1.68
 6 mu         0.6      1.00        1.01   0.685            1.38
 7 mu         0.7      0.992       0.988  0.533            1.45
 8 mu         0.8      1.00        0.968  0.177            1.96
 9 mu         0.9      1.05        0.919  0.0137           4.37
10 mu_1       0.1      0.677       0.312  0.00000472       3.75
11 mu_1       0.2      0.872       0.786  0.00200          2.84
12 mu_1       0.3      0.976       0.919  0.0430           2.75
13 mu_1       0.4      1.01        0.987  0.252            1.97
14 mu_1       0.5      1.01        1.00   0.605            1.55
15 mu_1       0.6      0.995       0.994  0.726            1.40
16 mu_1       0.7      0.991       0.980  0.469            1.46
17 mu_1       0.8      1.01        0.967  0.146            2.25
18 mu_1       0.9      1.06        0.891  0.0106           4.73
19 mu_0       0.1      0.519       0.0823 0.000000378     14.5 
20 mu_0       0.2      0.730       0.490  0.000355         6.25
21 mu_0       0.3      0.899       0.750  0.0129           2.94
22 mu_0       0.4      0.987       0.888  0.114            2.57
23 mu_0       0.5      1.01        0.992  0.428            1.91
24 mu_0       0.6      1.01        1.00   0.624            1.43
25 mu_0       0.7      0.993       0.990  0.651            1.45
26 mu_0       0.8      0.979       0.993  0.302            1.48
27 mu_0       0.9      0.977       0.937  0.0417           2.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03    0.0000435   5.20e-16     26.0 
 2 mu         0.2      1.36    0.00286     1.21e-10     35.6 
 3 mu         0.3      1.23    0.0574      1.57e- 7     16.2 
 4 mu         0.4      1.13    0.328       2.38e- 5      9.77
 5 mu         0.5      1.07    0.770       1.10e- 3      6.10
 6 mu         0.6      1.04    0.968       2.35e- 2      3.06
 7 mu         0.7      1.07    1.01        6.22e- 4      3.78
 8 mu         0.8      1.24    0.656       2.12e- 6     13.5 
 9 mu         0.9      1.84    0.0651      9.21e-11     79.3 
10 mu_1       0.1      1.56    0.000273    4.92e-15     43.3 
11 mu_1       0.2      1.30    0.0111      5.74e-10     29.6 
12 mu_1       0.3      1.12    0.122       4.95e- 7     10.2 
13 mu_1       0.4      1.09    0.537       5.64e- 5      9.00
14 mu_1       0.5      1.06    0.854       2.09e- 3      5.23
15 mu_1       0.6      1.05    0.980       8.14e- 3      2.98
16 mu_1       0.7      1.11    1.04        1.48e- 4      4.42
17 mu_1       0.8      1.29    0.526       4.41e- 7     16.9 
18 mu_1       0.9      1.92    0.0419      1.71e-11     88.1 
19 mu_0       0.1      0.967   0.00000456  0            24.5 
20 mu_0       0.2      1.38    0.00133     0            37.0 
21 mu_0       0.3      1.27    0.0307      0            19.3 
22 mu_0       0.4      1.15    0.165       0            10.3 
23 mu_0       0.5      1.09    0.587       0             6.97
24 mu_0       0.6      1.03    0.916       0             4.37
25 mu_0       0.7      0.999   0.993       0             3.63
26 mu_0       0.8      1.04    0.927       0             5.08
27 mu_0       0.9      1.20    0.196       0             7.33
[1] "Total run time was 53.61 seconds"
