
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1301"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  8  5  6  6  3  7  8 10  2  8 10  8  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03763 0.34176 0.62480 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
788 513 
[1] "treatment indicator table: "

  0   1 
448 853 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 59.424 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.373 0.182 
 2 mu         0.1   0.2 0.454 0.247 
 3 mu         0.1   0.3 0.522 0.279 
 4 mu         0.1   0.4 0.650 0.318 
 5 mu         0.1   0.5 0.633 0.326 
 6 mu         0.2   0.1 0.258 0.0667
 7 mu         0.2   0.2 0.346 0.0863
 8 mu         0.2   0.3 0.399 0.0940
 9 mu         0.2   0.4 0.455 0.113 
10 mu         0.2   0.5 0.449 0.116 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.989       0.0304 0.0000000199      47.2 
 2 mu         0.2      0.812       0.258  0.0000419         12.0 
 3 mu         0.3      0.809       0.632  0.00259            6.06
 4 mu         0.4      0.860       0.856  0.0354             3.46
 5 mu         0.5      0.924       0.959  0.198              1.65
 6 mu         0.6      0.976       0.988  0.581              1.41
 7 mu         0.7      1.00        1.00   0.604              1.42
 8 mu         0.8      1.02        1.01   0.461              2.03
 9 mu         0.9      1.02        0.889  0.0763             3.55
10 mu_1       0.1      0.962       0.124  0.000000133       25.0 
11 mu_1       0.2      0.819       0.472  0.000141           7.69
12 mu_1       0.3      0.838       0.808  0.00582            4.85
13 mu_1       0.4      0.889       0.917  0.0602             2.34
14 mu_1       0.5      0.947       0.971  0.273              1.45
15 mu_1       0.6      0.989       0.994  0.665              1.45
16 mu_1       0.7      1.01        1.00   0.552              1.39
17 mu_1       0.8      1.02        1.01   0.413              2.18
18 mu_1       0.9      1.02        0.883  0.0610             3.79
19 mu_0       0.1      0.992       0.0222 0.00000000732     49.7 
20 mu_0       0.2      0.811       0.198  0.0000172         14.0 
21 mu_0       0.3      0.797       0.529  0.00120            6.57
22 mu_0       0.4      0.840       0.801  0.0188             4.21
23 mu_0       0.5      0.900       0.925  0.122              2.10
24 mu_0       0.6      0.958       0.968  0.426              1.37
25 mu_0       0.7      0.994       0.997  0.603              1.50
26 mu_0       0.8      1.01        1.02   0.557              1.53
27 mu_0       0.9      1.04        1.00   0.214              3.01
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.888   0.0000296   5.93e-16     27.8 
 2 mu         0.2      2.06    0.00309     7.78e-11     30.9 
 3 mu         0.3      2.90    0.0369      7.66e- 8     51.5 
 4 mu         0.4      2.84    0.217       1.02e- 5     55.3 
 5 mu         0.5      2.15    0.609       4.53e- 4     37.7 
 6 mu         0.6      1.41    1.00        1.00e- 2     16.4 
 7 mu         0.7      1.12    0.996       9.66e- 2      4.05
 8 mu         0.8      1.28    0.808       2.17e- 3     11.4 
 9 mu         0.9      1.56    0.115       1.36e- 6     23.3 
10 mu_1       0.1      1.95    0.000212    5.93e-15     46.4 
11 mu_1       0.2      2.80    0.0108      3.89e-10     47.1 
12 mu_1       0.3      3.00    0.0840      2.55e- 7     62.4 
13 mu_1       0.4      2.51    0.350       2.55e- 5     50.3 
14 mu_1       0.5      1.77    0.851       9.05e- 4     27.4 
15 mu_1       0.6      1.22    0.992       1.67e- 2      9.93
16 mu_1       0.7      1.10    1.00        2.91e- 2      4.52
17 mu_1       0.8      1.33    0.688       1.08e- 3     13.1 
18 mu_1       0.9      1.58    0.0832      6.03e- 7     23.9 
19 mu_0       0.1      0.770   0.00000664  0            25.8 
20 mu_0       0.2      1.88    0.00115     0            32.2 
21 mu_0       0.3      2.85    0.0171      0            46.8 
22 mu_0       0.4      3.07    0.129       0            58.6 
23 mu_0       0.5      2.52    0.413       0            47.9 
24 mu_0       0.6      1.70    0.919       0            26.1 
25 mu_0       0.7      1.15    1.00        0             8.59
26 mu_0       0.8      1.08    0.957       0             4.37
27 mu_0       0.9      1.35    0.285       0            17.9 
[1] "Total run time was 62.76 seconds"
