
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1257"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  7  4  8  3  7 11  5  8 10  7  3  7  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02364 0.30845 0.56705 0.97612 5.00000 
[1] "event indicator table: "

  0   1 
732 525 
[1] "treatment indicator table: "

  0   1 
525 732 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 137.424 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.651 0.258
 2 mu         0.1   0.2 0.777 0.291
 3 mu         0.1   0.3 0.817 0.306
 4 mu         0.1   0.4 0.887 0.330
 5 mu         0.1   0.5 0.897 0.337
 6 mu         0.2   0.1 0.567 0.200
 7 mu         0.2   0.2 0.686 0.228
 8 mu         0.2   0.3 0.720 0.239
 9 mu         0.2   0.4 0.796 0.260
10 mu         0.2   0.5 0.806 0.264
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.30         0.259 0.00000169      44.8 
 2 mu         0.2      1.20         0.631 0.00128         38.1 
 3 mu         0.3      1.04         0.897 0.0306          15.0 
 4 mu         0.4      0.969        0.949 0.138            3.92
 5 mu         0.5      0.964        0.976 0.363            1.48
 6 mu         0.6      0.991        0.988 0.387            1.40
 7 mu         0.7      1.03         1.02  0.118            2.21
 8 mu         0.8      1.03         1.00  0.0148           2.27
 9 mu         0.9      1.02         0.971 0.000232         4.84
10 mu_1       0.1      1.40         0.653 0.00000931      58.4 
11 mu_1       0.2      1.14         0.962 0.00355         26.0 
12 mu_1       0.3      0.997        0.975 0.0576           7.27
13 mu_1       0.4      0.962        0.966 0.204            1.81
14 mu_1       0.5      0.970        0.973 0.455            1.33
15 mu_1       0.6      1.00         1.00  0.295            1.62
16 mu_1       0.7      1.03         1.01  0.0820           2.34
17 mu_1       0.8      1.03         1.02  0.00935          2.21
18 mu_1       0.9      1.01         0.927 0.000134         5.04
19 mu_0       0.1      1.29         0.208 0.000000838     43.2 
20 mu_0       0.2      1.22         0.574 0.000708        41.2 
21 mu_0       0.3      1.05         0.889 0.0190          18.4 
22 mu_0       0.4      0.973        0.937 0.0945           5.33
23 mu_0       0.5      0.959        0.963 0.270            1.66
24 mu_0       0.6      0.976        0.972 0.524            1.37
25 mu_0       0.7      1.01         1.02  0.203            1.91
26 mu_0       0.8      1.03         1.01  0.0368           2.65
27 mu_0       0.9      1.04         0.978 0.00111          3.04
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.77     0.000414  1.82e-16    276.  
 2 mu         0.2       6.72     0.0268    8.50e-11    326.  
 3 mu         0.3       3.61     0.163     1.65e- 7    148.  
 4 mu         0.4       1.79     0.550     3.34e- 5     34.9 
 5 mu         0.5       1.29     0.937     1.93e- 3     10.6 
 6 mu         0.6       1.23     1.10      7.02e- 3     13.6 
 7 mu         0.7       1.41     0.987     1.28e- 4     40.8 
 8 mu         0.8       1.97     0.394     3.81e- 7     90.5 
 9 mu         0.9       2.75     0.0357    1.47e-11    131.  
10 mu_1       0.1       8.84     0.00255   1.73e-15    397.  
11 mu_1       0.2       5.47     0.0724    4.04e-10    272.  
12 mu_1       0.3       2.41     0.393     5.22e- 7     82.5 
13 mu_1       0.4       1.44     0.774     7.94e- 5     14.5 
14 mu_1       0.5       1.26     1.09      3.67e- 3      9.28
15 mu_1       0.6       1.28     1.18      1.38e- 3     20.4 
16 mu_1       0.7       1.53     0.922     2.15e- 5     52.5 
17 mu_1       0.8       2.11     0.271     5.60e- 8    102.  
18 mu_1       0.9       2.78     0.0214    1.92e-12    131.  
19 mu_0       0.1       5.43     0.000173  0           263.  
20 mu_0       0.2       7.03     0.00859   0           340.  
21 mu_0       0.3       4.12     0.104     0           177.  
22 mu_0       0.4       2.02     0.410     0            48.6 
23 mu_0       0.5       1.33     0.751     0            11.9 
24 mu_0       0.6       1.15     0.923     0             7.18
25 mu_0       0.7       1.12     0.936     0            13.6 
26 mu_0       0.8       1.39     0.654     0            45.3 
27 mu_0       0.9       2.44     0.0656    0           131.  
[1] "Total run time was 142.337 seconds"
