
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1241"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 11  7  6  5  6  5  7  6  7  2  6  8  9  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01144 0.29702 0.56284 0.95944 6.47908 
[1] "event indicator table: "

  0   1 
728 513 
[1] "treatment indicator table: "

  0   1 
516 725 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 111.971 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.726 0.293 
 2 mu         0.1   0.2 0.791 0.345 
 3 mu         0.1   0.3 0.850 0.384 
 4 mu         0.1   0.4 0.858 0.397 
 5 mu         0.1   0.5 0.870 0.410 
 6 mu         0.2   0.1 0.453 0.0776
 7 mu         0.2   0.2 0.490 0.0792
 8 mu         0.2   0.3 0.529 0.0865
 9 mu         0.2   0.4 0.546 0.0894
10 mu         0.2   0.5 0.566 0.0918
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.42         0.331  0.000202     63.7 
 2 mu         0.2      1.02         0.782  0.0130       11.7 
 3 mu         0.3      0.931        0.894  0.0820        2.27
 4 mu         0.4      0.929        0.901  0.179         1.64
 5 mu         0.5      0.954        0.955  0.316         1.56
 6 mu         0.6      0.987        0.975  0.658         1.43
 7 mu         0.7      1.03         1.01   0.743         1.44
 8 mu         0.8      1.07         1.03   0.447         2.41
 9 mu         0.9      1.06         0.955  0.0470        3.22
10 mu_1       0.1      0.968        0.703  0.000814      6.14
11 mu_1       0.2      0.937        0.897  0.0282        2.89
12 mu_1       0.3      0.919        0.900  0.115         1.79
13 mu_1       0.4      0.936        0.944  0.208         1.55
14 mu_1       0.5      0.965        0.950  0.370         1.59
15 mu_1       0.6      1.00         0.997  0.721         1.38
16 mu_1       0.7      1.05         1.02   0.685         1.54
17 mu_1       0.8      1.08         1.02   0.385         2.57
18 mu_1       0.9      1.05         0.928  0.0370        3.19
19 mu_0       0.1      1.47         0.292  0.000134     70.4 
20 mu_0       0.2      1.04         0.712  0.00813      14.2 
21 mu_0       0.3      0.936        0.899  0.0575        2.91
22 mu_0       0.4      0.924        0.900  0.159         1.76
23 mu_0       0.5      0.942        0.947  0.263         1.53
24 mu_0       0.6      0.967        0.961  0.519         1.53
25 mu_0       0.7      1.00         0.996  0.734         1.41
26 mu_0       0.8      1.05         1.02   0.629         1.78
27 mu_0       0.9      1.09         0.988  0.137         3.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.847     0.00130   5.97e-14     34.2 
 2 mu         0.2      1.36      0.0621    3.48e- 9     37.4 
 3 mu         0.3      1.36      0.333     2.00e- 6     19.4 
 4 mu         0.4      1.22      0.794     1.71e- 4      7.38
 5 mu         0.5      1.08      1.11      5.06e- 3      3.90
 6 mu         0.6      0.987     0.957     2.84e- 2      2.45
 7 mu         0.7      1.01      0.815     5.27e- 4      3.61
 8 mu         0.8      1.08      0.293     1.37e- 6      5.39
 9 mu         0.9      1.01      0.0300    3.34e-11     12.8 
10 mu_1       0.1      1.46      0.00629   5.62e-13     52.6 
11 mu_1       0.2      1.52      0.172     1.64e- 8     28.8 
12 mu_1       0.3      1.33      0.610     6.27e- 6      9.94
13 mu_1       0.4      1.15      1.06      4.02e- 4      5.77
14 mu_1       0.5      1.02      1.05      9.53e- 3      2.67
15 mu_1       0.6      0.958     0.871     9.45e- 3      2.82
16 mu_1       0.7      1.01      0.701     1.50e- 4      3.64
17 mu_1       0.8      1.09      0.208     3.42e- 7      6.74
18 mu_1       0.9      1.01      0.0152    7.43e-12     14.3 
19 mu_0       0.1      0.779     0.000744  0            32.1 
20 mu_0       0.2      1.32      0.0295    0            39.6 
21 mu_0       0.3      1.37      0.209     0            23.4 
22 mu_0       0.4      1.26      0.572     0             8.91
23 mu_0       0.5      1.13      0.998     0             5.20
24 mu_0       0.6      1.03      1.14      0             3.84
25 mu_0       0.7      1.01      0.918     0             3.54
26 mu_0       0.8      1.07      0.642     0             4.28
27 mu_0       0.9      0.999     0.0935    0             7.23
[1] "Total run time was 117.637 seconds"
