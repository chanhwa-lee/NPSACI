
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7 12  3  9  5  3  6  4  8  4  6  2  5  6 12  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05442 0.41097 0.67442 1.00000 5.41354 
[1] "event indicator table: "

  0   1 
753 499 
[1] "treatment indicator table: "

  0   1 
448 804 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 66.168 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.521 0.204
 2 mu         0.1   0.2 0.663 0.266
 3 mu         0.1   0.3 0.672 0.291
 4 mu         0.1   0.4 0.734 0.317
 5 mu         0.1   0.5 0.796 0.333
 6 mu         0.2   0.1 0.469 0.136
 7 mu         0.2   0.2 0.607 0.177
 8 mu         0.2   0.3 0.618 0.194
 9 mu         0.2   0.4 0.676 0.208
10 mu         0.2   0.5 0.736 0.217
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      1.32        0.106  0.0000000307     60.1 
 2 mu         0.2      1.25        0.426  0.0000603        38.8 
 3 mu         0.3      1.00        0.788  0.00345          11.9 
 4 mu         0.4      0.916       0.926  0.0379            3.54
 5 mu         0.5      0.937       0.958  0.166             2.20
 6 mu         0.6      0.978       0.985  0.416             1.44
 7 mu         0.7      0.986       1.01   0.587             1.31
 8 mu         0.8      0.940       0.969  0.270             1.92
 9 mu         0.9      0.895       0.847  0.0349            4.47
10 mu_1       0.1      1.54        0.350  0.000000195      67.8 
11 mu_1       0.2      1.10        0.675  0.000193         23.2 
12 mu_1       0.3      0.916       0.917  0.00745           5.32
13 mu_1       0.4      0.902       0.932  0.0624            1.94
14 mu_1       0.5      0.944       0.948  0.224             1.42
15 mu_1       0.6      0.982       0.988  0.483             1.28
16 mu_1       0.7      0.980       1.00   0.550             1.34
17 mu_1       0.8      0.933       0.940  0.214             2.16
18 mu_1       0.9      0.894       0.833  0.0253            4.87
19 mu_0       0.1      1.30        0.0796 0.0000000124     59.2 
20 mu_0       0.2      1.29        0.352  0.0000271        42.7 
21 mu_0       0.3      1.04        0.704  0.00174          14.7 
22 mu_0       0.4      0.926       0.900  0.0215            4.60
23 mu_0       0.5      0.930       0.948  0.109             3.07
24 mu_0       0.6      0.971       0.977  0.314             1.94
25 mu_0       0.7      0.999       1.01   0.579             1.36
26 mu_0       0.8      0.969       0.987  0.496             1.43
27 mu_0       0.9      0.897       0.903  0.121             1.98
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.21    0.000129   1.28e-18    175.  
 2 mu         0.2       3.01    0.00827    1.35e-12    150.  
 3 mu         0.3       4.13    0.0874     4.48e- 9    228.  
 4 mu         0.4       3.85    0.415      1.41e- 6    180.  
 5 mu         0.5       2.56    0.868      1.23e- 4     85.1 
 6 mu         0.6       1.48    0.934      4.70e- 3     23.7 
 7 mu         0.7       1.12    0.913      2.57e- 4      6.80
 8 mu         0.8       1.26    0.703      1.00e- 6     13.9 
 9 mu         0.9       1.80    0.127      6.90e-11     40.1 
10 mu_1       0.1       2.49    0.000917   1.28e-17    117.  
11 mu_1       0.2       3.88    0.0334     6.74e-12    230.  
12 mu_1       0.3       4.43    0.195      1.49e- 8    234.  
13 mu_1       0.4       3.44    0.538      3.53e- 6    138.  
14 mu_1       0.5       2.09    0.882      2.45e- 4     52.4 
15 mu_1       0.6       1.28    0.959      1.37e- 3     12.1 
16 mu_1       0.7       1.11    0.928      2.44e- 5      7.67
17 mu_1       0.8       1.31    0.567      8.37e- 8     17.4 
18 mu_1       0.9       1.87    0.0933     5.11e-12     44.5 
19 mu_0       0.1       2.17    0.0000433  0           182.  
20 mu_0       0.2       2.79    0.00378    0           130.  
21 mu_0       0.3       4.00    0.0454     0           225.  
22 mu_0       0.4       4.12    0.266      0           208.  
23 mu_0       0.5       3.03    0.585      0           118.  
24 mu_0       0.6       1.79    0.896      0            41.0 
25 mu_0       0.7       1.14    0.934      0             7.60
26 mu_0       0.8       1.05    0.881      0            10.5 
27 mu_0       0.9       1.10    0.247      0             9.40
[1] "Total run time was 70.484 seconds"
