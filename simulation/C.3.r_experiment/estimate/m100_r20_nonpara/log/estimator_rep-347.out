
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1262"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  9  3 10 10  4  3  7  5  6  7  7  6  8  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02202 0.33883 0.57226 0.96141 5.00000 
[1] "event indicator table: "

  0   1 
772 490 
[1] "treatment indicator table: "

  0   1 
472 790 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 92.92 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.179 0.0666
 2 mu         0.1   0.2 0.214 0.0752
 3 mu         0.1   0.3 0.289 0.0940
 4 mu         0.1   0.4 0.303 0.121 
 5 mu         0.1   0.5 0.332 0.110 
 6 mu         0.2   0.1 0.228 0.0533
 7 mu         0.2   0.2 0.286 0.0594
 8 mu         0.2   0.3 0.379 0.0674
 9 mu         0.2   0.4 0.427 0.0835
10 mu         0.2   0.5 0.457 0.0800
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.727        0.185 0.00000266     11.4 
 2 mu         0.2      0.882        0.662 0.000777       10.3 
 3 mu         0.3      0.955        0.827 0.0160          5.45
 4 mu         0.4      1.00         0.993 0.105           2.45
 5 mu         0.5      1.01         1.01  0.352           1.53
 6 mu         0.6      0.996        0.987 0.636           1.48
 7 mu         0.7      0.987        1.00  0.603           1.27
 8 mu         0.8      0.977        0.967 0.422           1.78
 9 mu         0.9      0.912        0.854 0.0544          2.74
10 mu_1       0.1      0.851        0.415 0.0000172      14.8 
11 mu_1       0.2      0.942        0.826 0.00251         7.87
12 mu_1       0.3      0.990        0.931 0.0346          3.66
13 mu_1       0.4      1.02         1.01  0.173           1.70
14 mu_1       0.5      1.01         1.01  0.471           1.58
15 mu_1       0.6      0.994        1.00  0.626           1.42
16 mu_1       0.7      0.986        0.992 0.575           1.34
17 mu_1       0.8      0.971        0.952 0.356           1.86
18 mu_1       0.9      0.902        0.833 0.0420          2.78
19 mu_0       0.1      0.714        0.146 0.00000105     11.0 
20 mu_0       0.2      0.867        0.579 0.000343       11.0 
21 mu_0       0.3      0.940        0.802 0.00797         6.22
22 mu_0       0.4      0.989        0.961 0.0600          2.95
23 mu_0       0.5      1.01         0.993 0.233           1.58
24 mu_0       0.6      0.999        1.01  0.564           1.56
25 mu_0       0.7      0.990        0.999 0.574           1.32
26 mu_0       0.8      1.00         1.01  0.508           1.48
27 mu_0       0.9      1.00         0.957 0.166           2.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.67    0.0000692  3.20e-14    355.  
 2 mu         0.2       6.86    0.00642    1.86e- 9    432.  
 3 mu         0.3       3.88    0.0536     1.07e- 6    172.  
 4 mu         0.4       1.80    0.263      9.16e- 5     34.6 
 5 mu         0.5       1.14    0.880      2.71e- 3      6.64
 6 mu         0.6       1.04    1.05       2.56e- 2      3.14
 7 mu         0.7       1.15    1.12       1.10e- 3      3.55
 8 mu         0.8       1.24    0.892      6.43e- 6      6.75
 9 mu         0.9       1.10    0.101      1.40e-10     15.6 
10 mu_1       0.1       7.92    0.000565   3.01e-13    561.  
11 mu_1       0.2       6.23    0.0248     8.77e- 9    341.  
12 mu_1       0.3       2.79    0.141      3.36e- 6     90.5 
13 mu_1       0.4       1.41    0.464      2.15e- 4     13.7 
14 mu_1       0.5       1.06    1.02       5.10e- 3      3.11
15 mu_1       0.6       1.05    1.05       6.10e- 3      3.49
16 mu_1       0.7       1.18    1.09       2.25e- 4      3.81
17 mu_1       0.8       1.24    0.751      1.27e- 6      7.83
18 mu_1       0.9       1.09    0.0761     2.45e-11     16.1 
19 mu_0       0.1       4.31    0.0000290  0           332.  
20 mu_0       0.2       7.02    0.00180    0           454.  
21 mu_0       0.3       4.35    0.0206     0           207.  
22 mu_0       0.4       2.06    0.143      0            48.6 
23 mu_0       0.5       1.22    0.586      0            10.4 
24 mu_0       0.6       1.03    0.932      0             3.50
25 mu_0       0.7       1.08    0.972      0             3.95
26 mu_0       0.8       1.21    1.05       0             5.57
27 mu_0       0.9       1.22    0.329      0            11.1 
[1] "Total run time was 97.473 seconds"
