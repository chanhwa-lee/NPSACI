
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1228"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  6  5  8  9  7  9  5 15  6  6  1  6  3  8  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04551 0.34700 0.61860 1.00000 5.48041 
[1] "event indicator table: "

  0   1 
750 478 
[1] "treatment indicator table: "

  0   1 
416 812 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 565
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 91.821 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.425 0.0758
 2 mu         0.1   0.2 0.512 0.0856
 3 mu         0.1   0.3 0.614 0.108 
 4 mu         0.1   0.4 0.617 0.117 
 5 mu         0.1   0.5 0.624 0.125 
 6 mu         0.2   0.1 0.398 0.0539
 7 mu         0.2   0.2 0.500 0.0628
 8 mu         0.2   0.3 0.625 0.0832
 9 mu         0.2   0.4 0.650 0.0795
10 mu         0.2   0.5 0.674 0.0789
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06         0.403 0.0000207      8.92
 2 mu         0.2      1.14         0.955 0.00377        5.32
 3 mu         0.3      1.12         1.09  0.0472         4.85
 4 mu         0.4      1.05         1.02  0.193          2.61
 5 mu         0.5      1.01         0.994 0.448          1.82
 6 mu         0.6      0.998        0.994 0.582          1.43
 7 mu         0.7      0.992        0.998 0.661          1.40
 8 mu         0.8      0.987        1.02  0.321          1.45
 9 mu         0.9      0.958        0.972 0.395          1.77
10 mu_1       0.1      1.10         0.656 0.000104       5.03
11 mu_1       0.2      1.13         1.09  0.00951        6.07
12 mu_1       0.3      1.07         1.00  0.0810         4.09
13 mu_1       0.4      1.02         1.03  0.261          1.99
14 mu_1       0.5      1.00         0.986 0.527          1.75
15 mu_1       0.6      0.995        0.976 0.625          1.42
16 mu_1       0.7      0.992        0.998 0.571          1.41
17 mu_1       0.8      0.984        0.998 0.315          1.48
18 mu_1       0.9      0.954        0.966 0.385          1.83
19 mu_0       0.1      1.06         0.341 0.0000115      9.91
20 mu_0       0.2      1.15         0.908 0.00234        5.13
21 mu_0       0.3      1.14         1.08  0.0327         5.17
22 mu_0       0.4      1.07         1.04  0.148          3.02
23 mu_0       0.5      1.02         1.01  0.365          1.90
24 mu_0       0.6      1.00         1.01  0.518          1.53
25 mu_0       0.7      0.993        0.987 0.590          1.37
26 mu_0       0.8      0.997        1.00  0.347          1.47
27 mu_0       0.9      0.996        1.02  0.376          1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.41    0.0000151   3.67e-17    215.  
 2 mu         0.2      1.66    0.00156     9.61e-12    103.  
 3 mu         0.3      1.18    0.0328      1.42e- 8     21.0 
 4 mu         0.4      1.15    0.194       2.52e- 6      6.17
 5 mu         0.5      1.07    0.555       1.40e- 4      4.38
 6 mu         0.6      0.950   0.814       3.55e- 3      2.43
 7 mu         0.7      0.942   0.922       2.72e- 5      2.12
 8 mu         0.8      1.01    1.14        2.41e- 8      2.79
 9 mu         0.9      1.02    0.302       1.16e-13      5.54
10 mu_1       0.1      2.75    0.0000900   3.50e-16    215.  
11 mu_1       0.2      1.43    0.00717     4.80e-11     51.7 
12 mu_1       0.3      1.18    0.0685      4.73e- 8      7.28
13 mu_1       0.4      1.13    0.377       6.30e- 6      5.93
14 mu_1       0.5      1.00    0.717       2.80e- 4      3.37
15 mu_1       0.6      0.916   0.873       5.92e- 4      2.21
16 mu_1       0.7      0.950   0.959       3.89e- 6      2.14
17 mu_1       0.8      1.02    1.03        3.01e- 9      2.99
18 mu_1       0.9      1.03    0.240       1.29e-14      6.11
19 mu_0       0.1      2.37    0.00000350  0           215.  
20 mu_0       0.2      1.72    0.000494    0           116.  
21 mu_0       0.3      1.18    0.0123      0            27.0 
22 mu_0       0.4      1.17    0.0845      0             6.32
23 mu_0       0.5      1.13    0.309       0             5.39
24 mu_0       0.6      1.00    0.792       0             3.07
25 mu_0       0.7      0.923   0.820       0             2.35
26 mu_0       0.8      0.971   0.697       0             2.92
27 mu_0       0.9      1.01    0.369       0             4.11
[1] "Total run time was 96.791 seconds"
