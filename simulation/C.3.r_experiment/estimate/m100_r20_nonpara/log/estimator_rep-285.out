
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1335"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5 10  6  2  7  2  3  5  7  8  6  4 11  9 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02977 0.33303 0.58431 1.00000 4.70411 
[1] "event indicator table: "

  0   1 
766 569 
[1] "treatment indicator table: "

  0   1 
517 818 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 68.376 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.507 0.105 
 2 mu         0.1   0.2 0.719 0.154 
 3 mu         0.1   0.3 0.847 0.206 
 4 mu         0.1   0.4 0.842 0.201 
 5 mu         0.1   0.5 0.855 0.196 
 6 mu         0.2   0.1 0.369 0.0522
 7 mu         0.2   0.2 0.528 0.0763
 8 mu         0.2   0.3 0.618 0.104 
 9 mu         0.2   0.4 0.616 0.101 
10 mu         0.2   0.5 0.640 0.0960
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.23         0.397  0.000429     17.9 
 2 mu         0.2      0.993        0.839  0.0260        3.96
 3 mu         0.3      0.974        0.912  0.195         2.59
 4 mu         0.4      0.974        0.952  0.366         1.70
 5 mu         0.5      0.991        0.985  0.598         1.46
 6 mu         0.6      1.01         1.02   0.738         1.33
 7 mu         0.7      1.01         1.02   0.609         1.45
 8 mu         0.8      1.01         0.990  0.432         1.71
 9 mu         0.9      1.06         1.05   0.0912        2.41
10 mu_1       0.1      1.00         0.739  0.00205       6.09
11 mu_1       0.2      0.976        0.897  0.0636        3.09
12 mu_1       0.3      0.977        0.935  0.280         2.29
13 mu_1       0.4      0.978        0.951  0.407         1.54
14 mu_1       0.5      0.998        0.999  0.675         1.48
15 mu_1       0.6      1.02         1.01   0.692         1.38
16 mu_1       0.7      1.01         1.02   0.578         1.49
17 mu_1       0.8      1.01         0.979  0.353         1.75
18 mu_1       0.9      1.06         1.02   0.0733        2.49
19 mu_0       0.1      1.25         0.350  0.000249     19.8 
20 mu_0       0.2      0.998        0.831  0.0166        4.33
21 mu_0       0.3      0.973        0.878  0.137         2.72
22 mu_0       0.4      0.972        0.918  0.338         1.89
23 mu_0       0.5      0.983        0.977  0.519         1.46
24 mu_0       0.6      1.01         1.02   0.672         1.43
25 mu_0       0.7      1.01         1.01   0.679         1.43
26 mu_0       0.8      0.989        1.01   0.468         1.53
27 mu_0       0.9      1.00         1.00   0.155         1.82
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.487    0.000107   1.20e-18     20.4 
 2 mu         0.2      0.631    0.0116     1.25e-12     13.9 
 3 mu         0.3      0.766    0.104      4.17e- 9      5.12
 4 mu         0.4      0.893    0.434      1.32e- 6      4.32
 5 mu         0.5      0.993    0.968      1.14e- 4      2.89
 6 mu         0.6      1.07     1.05       3.83e- 3      3.04
 7 mu         0.7      1.11     1.19       6.96e- 5      3.33
 8 mu         0.8      1.08     0.704      2.08e- 7      4.26
 9 mu         0.9      1.26     0.0824     8.02e-12     14.7 
10 mu_1       0.1      0.670    0.000739   1.20e-17     24.0 
11 mu_1       0.2      0.706    0.0361     6.27e-12      8.19
12 mu_1       0.3      0.850    0.251      1.39e- 8      5.12
13 mu_1       0.4      0.964    0.585      3.29e- 6      4.32
14 mu_1       0.5      1.04     1.02       2.28e- 4      3.02
15 mu_1       0.6      1.09     1.10       7.50e- 4      3.26
16 mu_1       0.7      1.11     1.09       1.17e- 5      3.70
17 mu_1       0.8      1.07     0.526      3.05e- 8      4.46
18 mu_1       0.9      1.29     0.0604     1.05e-12     16.3 
19 mu_0       0.1      0.467    0.0000368  0            20.0 
20 mu_0       0.2      0.612    0.00558    0            15.4 
21 mu_0       0.3      0.730    0.0470     0             6.33
22 mu_0       0.4      0.847    0.250      0             4.32
23 mu_0       0.5      0.945    0.716      0             3.47
24 mu_0       0.6      1.03     1.05       0             2.98
25 mu_0       0.7      1.11     1.21       0             3.44
26 mu_0       0.8      1.11     0.868      0             4.74
27 mu_0       0.9      0.982    0.173      0             7.14
[1] "Total run time was 72.148 seconds"
