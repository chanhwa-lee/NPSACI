
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1233"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  3  9  4 11  4  6  9  1  4  8  8  6  4  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03979 0.39313 0.63939 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
727 506 
[1] "treatment indicator table: "

  0   1 
433 800 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.112 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.691 0.160 
 2 mu         0.1   0.2 0.910 0.232 
 3 mu         0.1   0.3 0.924 0.214 
 4 mu         0.1   0.4 0.934 0.208 
 5 mu         0.1   0.5 0.961 0.203 
 6 mu         0.2   0.1 0.516 0.0940
 7 mu         0.2   0.2 0.625 0.124 
 8 mu         0.2   0.3 0.661 0.115 
 9 mu         0.2   0.4 0.672 0.108 
10 mu         0.2   0.5 0.726 0.101 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.28         0.351 0.000000436     18.1 
 2 mu         0.2      1.12         0.747 0.000240         7.79
 3 mu         0.3      1.07         1.00  0.00693          5.31
 4 mu         0.4      1.04         1.00  0.0564           2.50
 5 mu         0.5      1.01         1.01  0.220            1.94
 6 mu         0.6      0.987        0.998 0.510            1.60
 7 mu         0.7      0.974        0.983 0.339            1.45
 8 mu         0.8      0.972        0.992 0.199            1.61
 9 mu         0.9      0.938        0.896 0.0302           2.49
10 mu_1       0.1      1.08         0.631 0.00000261      10.2 
11 mu_1       0.2      1.05         0.932 0.000732         7.09
12 mu_1       0.3      1.03         1.02  0.0143           3.29
13 mu_1       0.4      1.02         1.02  0.0898           2.20
14 mu_1       0.5      0.999        1.00  0.291            1.81
15 mu_1       0.6      0.982        0.992 0.454            1.60
16 mu_1       0.7      0.976        0.972 0.317            1.53
17 mu_1       0.8      0.974        0.986 0.181            1.77
18 mu_1       0.9      0.933        0.875 0.0237           2.55
19 mu_0       0.1      1.30         0.309 0.000000195     19.7 
20 mu_0       0.2      1.14         0.698 0.000118         8.09
21 mu_0       0.3      1.09         0.972 0.00375          6.18
22 mu_0       0.4      1.06         0.988 0.0342           3.30
23 mu_0       0.5      1.03         1.02  0.150            2.07
24 mu_0       0.6      0.996        1.00  0.400            1.68
25 mu_0       0.7      0.971        0.974 0.390            1.50
26 mu_0       0.8      0.965        0.974 0.272            1.76
27 mu_0       0.9      0.984        1.01  0.0882           1.99
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.36    0.000113   3.45e-17    114.  
 2 mu         0.2       2.03    0.0128     1.61e-11     40.6 
 3 mu         0.3       1.82    0.103      3.12e- 8     35.2 
 4 mu         0.4       1.54    0.339      5.71e- 6     24.3 
 5 mu         0.5       1.25    0.710      2.54e- 4     11.0 
 6 mu         0.6       1.09    1.02       3.57e- 3      7.61
 7 mu         0.7       1.08    1.11       5.56e- 5      4.15
 8 mu         0.8       1.34    0.753      1.45e- 7      6.99
 9 mu         0.9       2.38    0.130      4.99e-12     29.7 
10 mu_1       0.1       2.49    0.000990   3.28e-16     71.3 
11 mu_1       0.2       1.93    0.0370     7.64e-11     41.4 
12 mu_1       0.3       1.70    0.245      9.88e- 8     32.0 
13 mu_1       0.4       1.38    0.599      1.43e- 5     16.6 
14 mu_1       0.5       1.15    0.850      5.07e- 4      7.07
15 mu_1       0.6       1.06    0.958      3.72e- 4      7.35
16 mu_1       0.7       1.09    1.11       4.97e- 6      3.44
17 mu_1       0.8       1.41    0.607      1.13e- 8      8.19
18 mu_1       0.9       2.48    0.0953     3.46e-13     33.0 
19 mu_0       0.1       2.34    0.0000302  0           119.  
20 mu_0       0.2       2.06    0.00593    0            46.2 
21 mu_0       0.3       1.88    0.0385     0            36.6 
22 mu_0       0.4       1.65    0.164      0            29.5 
23 mu_0       0.5       1.34    0.543      0            16.1 
24 mu_0       0.6       1.14    0.870      0             8.01
25 mu_0       0.7       1.06    1.05       0             5.83
26 mu_0       0.8       1.08    1.06       0             3.49
27 mu_0       0.9       1.53    0.221      0            12.8 
[1] "Total run time was 88.451 seconds"
