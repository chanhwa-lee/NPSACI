
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1302"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  4  6  8  6  4  5 10  7  3  5 13  6  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0309  0.3552  0.5901  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
767 535 
[1] "treatment indicator table: "

  0   1 
486 816 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 699
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 65.447 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.547 0.264
 2 mu         0.1   0.2 0.680 0.321
 3 mu         0.1   0.3 0.722 0.341
 4 mu         0.1   0.4 0.922 0.352
 5 mu         0.1   0.5 0.985 0.378
 6 mu         0.2   0.1 0.428 0.112
 7 mu         0.2   0.2 0.543 0.135
 8 mu         0.2   0.3 0.569 0.132
 9 mu         0.2   0.4 0.645 0.128
10 mu         0.2   0.5 0.719 0.151
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.52         0.201  0.000556     51.9 
 2 mu         0.2      1.23         0.716  0.0252       14.7 
 3 mu         0.3      1.10         0.971  0.139         4.36
 4 mu         0.4      1.04         0.979  0.323         2.08
 5 mu         0.5      1.02         1.01   0.518         1.61
 6 mu         0.6      1.01         1.02   0.703         1.38
 7 mu         0.7      1.00         1.00   0.626         1.50
 8 mu         0.8      0.971        0.964  0.378         1.83
 9 mu         0.9      0.883        0.829  0.0640        2.74
10 mu_1       0.1      1.47         0.480  0.00243      28.7 
11 mu_1       0.2      1.17         0.882  0.0556        6.80
12 mu_1       0.3      1.08         0.987  0.210         2.67
13 mu_1       0.4      1.03         1.03   0.395         1.68
14 mu_1       0.5      1.02         1.03   0.578         1.61
15 mu_1       0.6      1.01         1.00   0.704         1.29
16 mu_1       0.7      0.996        1.02   0.594         1.55
17 mu_1       0.8      0.962        0.959  0.340         1.92
18 mu_1       0.9      0.872        0.812  0.0515        2.80
19 mu_0       0.1      1.52         0.162  0.000347     54.5 
20 mu_0       0.2      1.24         0.653  0.0176       16.9 
21 mu_0       0.3      1.11         0.901  0.109         5.09
22 mu_0       0.4      1.04         0.969  0.275         2.59
23 mu_0       0.5      1.02         0.988  0.453         1.62
24 mu_0       0.6      1.01         1.03   0.623         1.52
25 mu_0       0.7      1.01         1.00   0.667         1.38
26 mu_0       0.8      1.01         1.02   0.531         1.71
27 mu_0       0.9      0.985        0.983  0.176         2.25
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.351    0.0000966  3.95e-15     19.4 
 2 mu         0.2      1.08     0.00901    3.96e-10     47.2 
 3 mu         0.3      1.39     0.107      2.60e- 7     28.2 
 4 mu         0.4      1.34     0.434      2.59e- 5     15.2 
 5 mu         0.5      1.18     0.956      9.21e- 4      5.43
 6 mu         0.6      1.08     1.06       1.70e- 2      2.86
 7 mu         0.7      1.07     0.921      1.08e- 3      3.19
 8 mu         0.8      1.17     0.607      2.81e- 6      6.16
 9 mu         0.9      1.30     0.0719     6.87e-11     11.4 
10 mu_1       0.1      0.797    0.000613   3.73e-14     38.8 
11 mu_1       0.2      1.42     0.0308     1.98e- 9     47.2 
12 mu_1       0.3      1.48     0.225      8.66e- 7     21.2 
13 mu_1       0.4      1.31     0.660      6.48e- 5     12.0 
14 mu_1       0.5      1.15     1.08       1.84e- 3      3.43
15 mu_1       0.6      1.07     1.01       1.94e- 2      3.07
16 mu_1       0.7      1.07     0.802      3.09e- 4      3.86
17 mu_1       0.8      1.19     0.483      7.03e- 7      6.52
18 mu_1       0.9      1.29     0.0468     1.53e-11     12.6 
19 mu_0       0.1      0.302    0.0000446  0            17.3 
20 mu_0       0.2      0.996    0.00452    0            47.2 
21 mu_0       0.3      1.35     0.0464     0            32.2 
22 mu_0       0.4      1.36     0.261      0            17.4 
23 mu_0       0.5      1.21     0.746      0             7.49
24 mu_0       0.6      1.09     1.06       0             3.06
25 mu_0       0.7      1.05     1.01       0             3.33
26 mu_0       0.8      1.10     0.657      0             4.74
27 mu_0       0.9      1.32     0.185      0             8.66
[1] "Total run time was 69.272 seconds"
