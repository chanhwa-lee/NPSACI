
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1203"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10  3  7 10 10  3  6  5  7  9  7  5  3  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05036 0.40619 0.66179 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
742 461 
[1] "treatment indicator table: "

  0   1 
387 816 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 87.55 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.473 0.164 
 2 mu         0.1   0.2 0.629 0.228 
 3 mu         0.1   0.3 0.707 0.250 
 4 mu         0.1   0.4 0.754 0.261 
 5 mu         0.1   0.5 0.771 0.269 
 6 mu         0.2   0.1 0.345 0.0696
 7 mu         0.2   0.2 0.452 0.103 
 8 mu         0.2   0.3 0.537 0.107 
 9 mu         0.2   0.4 0.580 0.107 
10 mu         0.2   0.5 0.592 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.25         0.144 0.0000145      36.5 
 2 mu         0.2      0.969        0.632 0.00447        11.6 
 3 mu         0.3      0.981        1.05  0.0332          2.90
 4 mu         0.4      1.02         1.04  0.119           1.77
 5 mu         0.5      1.01         1.00  0.284           1.68
 6 mu         0.6      0.996        0.996 0.460           1.65
 7 mu         0.7      0.991        0.988 0.563           1.41
 8 mu         0.8      1.00         1.00  0.628           1.43
 9 mu         0.9      1.02         1.01  0.277           1.64
10 mu_1       0.1      1.01         0.383 0.0000726      21.6 
11 mu_1       0.2      0.920        0.918 0.0117          4.02
12 mu_1       0.3      0.995        1.04  0.0694          1.92
13 mu_1       0.4      1.02         1.01  0.193           1.69
14 mu_1       0.5      1.00         0.999 0.375           1.73
15 mu_1       0.6      0.993        0.984 0.500           1.59
16 mu_1       0.7      0.992        0.982 0.573           1.43
17 mu_1       0.8      1.00         0.999 0.571           1.46
18 mu_1       0.9      1.02         1.02  0.262           1.68
19 mu_0       0.1      1.27         0.114 0.00000805     38.1 
20 mu_0       0.2      0.981        0.548 0.00216        13.5 
21 mu_0       0.3      0.975        0.998 0.0177          3.53
22 mu_0       0.4      1.02         1.05  0.0693          1.82
23 mu_0       0.5      1.02         1.03  0.180           1.63
24 mu_0       0.6      1.00         0.993 0.360           1.74
25 mu_0       0.7      0.989        0.989 0.540           1.54
26 mu_0       0.8      0.989        0.989 0.654           1.48
27 mu_0       0.9      1.03         1.02  0.413           1.72
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.402    0.0000697  2.47e-17     30.7 
 2 mu         0.2      0.754    0.00561    1.15e-11     23.6 
 3 mu         0.3      1.10     0.0483     2.23e- 8     11.0 
 4 mu         0.4      1.28     0.195      4.53e- 6     10.2 
 5 mu         0.5      1.24     0.467      2.62e- 4      7.88
 6 mu         0.6      1.10     0.876      6.69e- 3      5.39
 7 mu         0.7      1.02     1.02       3.15e- 4      3.23
 8 mu         0.8      1.06     1.05       1.41e- 6      3.83
 9 mu         0.9      1.14     0.383      1.09e-10      9.11
10 mu_1       0.1      0.682    0.000452   2.35e-16     38.4 
11 mu_1       0.2      1.02     0.0225     5.47e-11     14.8 
12 mu_1       0.3      1.29     0.134      7.07e- 8     10.0 
13 mu_1       0.4      1.34     0.369      1.07e- 5     10.5 
14 mu_1       0.5      1.22     0.740      4.97e- 4      6.49
15 mu_1       0.6      1.08     0.836      2.71e- 3      4.90
16 mu_1       0.7      1.02     0.988      5.62e- 5      2.97
17 mu_1       0.8      1.07     0.957      2.20e- 7      3.83
18 mu_1       0.9      1.13     0.285      1.51e-11     10.1 
19 mu_0       0.1      0.371    0.0000286  0            29.9 
20 mu_0       0.2      0.687    0.00132    0            25.9 
21 mu_0       0.3      1.02     0.0174     0            11.4 
22 mu_0       0.4      1.24     0.0755     0            10.0 
23 mu_0       0.5      1.26     0.224      0             9.27
24 mu_0       0.6      1.13     0.548      0             6.13
25 mu_0       0.7      1.01     0.760      0             4.89
26 mu_0       0.8      1.01     1.00       0             3.83
27 mu_0       0.9      1.17     0.726      0             4.57
[1] "Total run time was 92.247 seconds"
