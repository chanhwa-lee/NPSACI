
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1185"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  9  3  7 12  4  8  9  8  4  6  4  7  4  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01571 0.31537 0.59725 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
729 456 
[1] "treatment indicator table: "

  0   1 
457 728 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 553
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 85.256 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.217 0.229
 2 mu         0.1   0.2 0.365 0.165
 3 mu         0.1   0.3 0.384 0.173
 4 mu         0.1   0.4 0.434 0.152
 5 mu         0.1   0.5 0.455 0.165
 6 mu         0.2   0.1 0.273 0.166
 7 mu         0.2   0.2 0.401 0.119
 8 mu         0.2   0.3 0.448 0.129
 9 mu         0.2   0.4 0.505 0.117
10 mu         0.2   0.5 0.534 0.128
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.760        0.190 0.00000189       9.84
 2 mu         0.2      0.956        0.582 0.000950        15.1 
 3 mu         0.3      0.975        0.823 0.0244           7.91
 4 mu         0.4      0.954        0.940 0.144            2.30
 5 mu         0.5      0.958        0.970 0.353            1.87
 6 mu         0.6      0.978        0.968 0.595            1.57
 7 mu         0.7      1.01         1.02  0.590            1.36
 8 mu         0.8      1.06         1.02  0.278            2.33
 9 mu         0.9      1.14         0.957 0.0275           5.49
10 mu_1       0.1      0.968        0.496 0.0000112       17.4 
11 mu_1       0.2      1.03         0.821 0.00285         13.4 
12 mu_1       0.3      0.980        0.936 0.0439           4.69
13 mu_1       0.4      0.961        1.00  0.201            1.84
14 mu_1       0.5      0.969        0.971 0.436            1.84
15 mu_1       0.6      0.988        0.986 0.630            1.48
16 mu_1       0.7      1.02         1.03  0.517            1.48
17 mu_1       0.8      1.07         1.02  0.217            2.60
18 mu_1       0.9      1.16         0.953 0.0197           6.07
19 mu_0       0.1      0.737        0.151 0.000000853      9.01
20 mu_0       0.2      0.938        0.487 0.000475        15.6 
21 mu_0       0.3      0.972        0.798 0.0139           9.29
22 mu_0       0.4      0.950        0.921 0.0914           3.06
23 mu_0       0.5      0.948        0.949 0.215            1.90
24 mu_0       0.6      0.963        0.961 0.402            1.72
25 mu_0       0.7      0.984        0.985 0.573            1.46
26 mu_0       0.8      1.01         1.00  0.448            1.60
27 mu_0       0.9      1.01         0.941 0.0689           2.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.12    0.0000867  2.86e-15     67.5 
 2 mu         0.2       1.58    0.00773    3.75e-10     65.7 
 3 mu         0.3       1.49    0.107      3.70e- 7     29.8 
 4 mu         0.4       1.35    0.386      4.92e- 5     27.7 
 5 mu         0.5       1.20    0.722      2.18e- 3     17.1 
 6 mu         0.6       1.10    0.910      7.33e- 3      5.47
 7 mu         0.7       1.07    0.910      2.37e- 4      7.61
 8 mu         0.8       1.12    0.562      1.59e- 6     14.8 
 9 mu         0.9       1.47    0.0551     1.57e-10     47.7 
10 mu_1       0.1       1.88    0.000541   2.86e-14     96.5 
11 mu_1       0.2       1.69    0.0225     1.88e- 9     47.0 
12 mu_1       0.3       1.45    0.217      1.23e- 6     28.8 
13 mu_1       0.4       1.28    0.568      1.23e- 4     26.0 
14 mu_1       0.5       1.13    0.853      4.37e- 3     12.8 
15 mu_1       0.6       1.06    0.929      1.63e- 3      4.38
16 mu_1       0.7       1.07    0.849      4.52e- 5      9.66
17 mu_1       0.8       1.14    0.406      2.65e- 7     16.4 
18 mu_1       0.9       1.51    0.0364     3.64e-11     53.0 
19 mu_0       0.1       1.03    0.0000254  0            64.3 
20 mu_0       0.2       1.55    0.00415    0            70.4 
21 mu_0       0.3       1.51    0.0493     0            36.5 
22 mu_0       0.4       1.39    0.213      0            28.8 
23 mu_0       0.5       1.28    0.531      0            21.3 
24 mu_0       0.6       1.16    0.916      0             8.55
25 mu_0       0.7       1.08    1.04       0             3.10
26 mu_0       0.8       1.06    0.718      0             8.20
27 mu_0       0.9       1.06    0.152      0            21.0 
[1] "Total run time was 90.178 seconds"
