
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 20"
[1] "m: 100"
[1] "N_total: 1195"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  6  4  7  9  7 11  7  4  5  5  2  5 10  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02613 0.37035 0.60453 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
721 474 
[1] "treatment indicator table: "

  0   1 
450 745 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 91.886 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.351 0.127 
 2 mu         0.1   0.2 0.410 0.116 
 3 mu         0.1   0.3 0.417 0.122 
 4 mu         0.1   0.4 0.432 0.127 
 5 mu         0.1   0.5 0.432 0.129 
 6 mu         0.2   0.1 0.288 0.0567
 7 mu         0.2   0.2 0.367 0.0489
 8 mu         0.2   0.3 0.388 0.0575
 9 mu         0.2   0.4 0.420 0.0686
10 mu         0.2   0.5 0.428 0.0678
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.721        0.214 0.0000285     18.7 
 2 mu         0.2      0.794        0.567 0.00543        5.50
 3 mu         0.3      0.874        0.810 0.0713         2.61
 4 mu         0.4      0.925        0.930 0.222          1.78
 5 mu         0.5      0.954        0.983 0.362          1.53
 6 mu         0.6      0.973        0.978 0.514          1.53
 7 mu         0.7      1.00         1.00  0.500          1.83
 8 mu         0.8      1.04         1.00  0.175          2.39
 9 mu         0.9      1.03         0.904 0.0191         3.21
10 mu_1       0.1      0.762        0.510 0.000137       5.38
11 mu_1       0.2      0.864        0.800 0.0134         3.13
12 mu_1       0.3      0.924        0.906 0.121          2.28
13 mu_1       0.4      0.953        0.985 0.304          1.73
14 mu_1       0.5      0.967        0.986 0.434          1.46
15 mu_1       0.6      0.981        0.978 0.582          1.62
16 mu_1       0.7      1.01         1.01  0.408          1.93
17 mu_1       0.8      1.04         1.02  0.133          2.49
18 mu_1       0.9      1.03         0.903 0.0136         3.42
19 mu_0       0.1      0.717        0.170 0.0000164     20.2 
20 mu_0       0.2      0.776        0.476 0.00345        6.54
21 mu_0       0.3      0.852        0.763 0.0501         2.76
22 mu_0       0.4      0.906        0.877 0.139          1.87
23 mu_0       0.5      0.940        0.970 0.268          1.72
24 mu_0       0.6      0.960        0.983 0.412          1.41
25 mu_0       0.7      0.982        0.962 0.540          1.61
26 mu_0       0.8      1.02         1.01  0.344          1.98
27 mu_0       0.9      1.04         0.994 0.0684         3.16
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.33    0.000106   1.75e-17    353.  
 2 mu         0.2       5.80    0.0116     9.20e-12    429.  
 3 mu         0.3       3.18    0.124      2.04e- 8    171.  
 4 mu         0.4       1.62    0.468      4.82e- 6     34.4 
 5 mu         0.5       1.18    0.869      3.35e- 4      7.79
 6 mu         0.6       1.09    0.989      1.07e- 2      3.92
 7 mu         0.7       1.22    1.00       1.18e- 3      8.09
 8 mu         0.8       1.74    0.655      3.07e- 6     21.1 
 9 mu         0.9       3.98    0.0828     7.51e-11    169.  
10 mu_1       0.1       7.09    0.000746   1.75e-16    558.  
11 mu_1       0.2       5.10    0.0445     4.60e-11    339.  
12 mu_1       0.3       2.31    0.234      6.80e- 8     90.0 
13 mu_1       0.4       1.35    0.626      1.21e- 5     13.6 
14 mu_1       0.5       1.11    0.808      6.69e- 4      6.56
15 mu_1       0.6       1.09    1.01       1.78e- 2      3.68
16 mu_1       0.7       1.26    0.923      3.38e- 4      9.73
17 mu_1       0.8       1.87    0.479      7.68e- 7     26.3 
18 mu_1       0.9       4.26    0.0606     1.67e-11    188.  
19 mu_0       0.1       4.02    0.0000502  0           330.  
20 mu_0       0.2       5.98    0.00376    0           452.  
21 mu_0       0.3       3.56    0.0758     0           206.  
22 mu_0       0.4       1.80    0.284      0            48.3 
23 mu_0       0.5       1.24    0.689      0             9.69
24 mu_0       0.6       1.10    0.961      0             4.29
25 mu_0       0.7       1.11    0.960      0             4.53
26 mu_0       0.8       1.23    0.833      0            16.0 
27 mu_0       0.9       1.40    0.224      0            26.4 
[1] "Total run time was 96.555 seconds"
