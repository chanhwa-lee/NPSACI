
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1135"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  9  8  8  9  4  6  5  7  8  2  5  9  7  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0370  0.3550  0.6076  1.0000  4.0000 
[1] "event indicator table: "

  0   1 
676 459 
[1] "treatment indicator table: "

  0   1 
412 723 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 544
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 264.158 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.142 0.0895
 2 mu         0.1   0.2 0.227 0.114 
 3 mu         0.1   0.3 0.233 0.121 
 4 mu         0.1   0.4 0.246 0.129 
 5 mu         0.1   0.5 0.241 0.143 
 6 mu         0.2   0.1 0.178 0.0639
 7 mu         0.2   0.2 0.270 0.0787
 8 mu         0.2   0.3 0.291 0.0829
 9 mu         0.2   0.4 0.321 0.0897
10 mu         0.2   0.5 0.320 0.100 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.831        0.654   0.00257      4.19
 2 mu         0.2      0.914        1       0.0785       1.87
 3 mu         0.3      0.973        1       0.352        1.85
 4 mu         0.4      1.00         1       0.708        1.50
 5 mu         0.5      1.01         1       0.826        1.18
 6 mu         0.6      1.01         1       0.927        1.14
 7 mu         0.7      1.00         1       0.899        1.13
 8 mu         0.8      0.991        1       0.834        1.20
 9 mu         0.9      0.995        1       0.563        1.55
10 mu_1       0.1      0.900        0.984   0.00953      2.63
11 mu_1       0.2      0.960        1       0.153        1.75
12 mu_1       0.3      0.997        1       0.490        1.84
13 mu_1       0.4      1.01         1       0.734        1.36
14 mu_1       0.5      1.01         1       0.864        1.19
15 mu_1       0.6      1.01         1       0.936        1.12
16 mu_1       0.7      0.999        1       0.895        1.14
17 mu_1       0.8      0.989        1       0.780        1.24
18 mu_1       0.9      0.996        1       0.522        1.58
19 mu_0       0.1      0.823        0.607   0.00180      4.51
20 mu_0       0.2      0.903        1       0.0598       2.03
21 mu_0       0.3      0.963        1       0.293        1.85
22 mu_0       0.4      0.995        1       0.640        1.60
23 mu_0       0.5      1.01         1       0.787        1.20
24 mu_0       0.6      1.01         1       0.906        1.17
25 mu_0       0.7      1.01         1       0.903        1.13
26 mu_0       0.8      0.998        1       0.859        1.14
27 mu_0       0.9      0.988        1       0.778        1.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.18     0.000109   4.03e-13     62.9 
 2 mu         0.2      1.63     0.00804    1.17e- 8     77.5 
 3 mu         0.3      1.50     0.0731     4.49e- 6     45.9 
 4 mu         0.4      1.27     0.272      2.88e- 4     17.5 
 5 mu         0.5      1.11     0.757      6.83e- 3      4.41
 6 mu         0.6      1.04     0.954      8.41e- 2      4.52
 7 mu         0.7      1.01     0.954      5.17e- 2      3.11
 8 mu         0.8      1.06     0.558      1.17e- 3      4.88
 9 mu         0.9      1.20     0.0653     1.03e- 6     11.7 
10 mu_1       0.1      2.05     0.000736   3.77e-12    105.  
11 mu_1       0.2      1.66     0.0242     5.50e- 8     64.6 
12 mu_1       0.3      1.31     0.167      1.40e- 5     25.5 
13 mu_1       0.4      1.12     0.513      6.75e- 4      7.27
14 mu_1       0.5      1.04     0.879      1.28e- 2      4.10
15 mu_1       0.6      1.02     0.987      1.31e- 1      4.44
16 mu_1       0.7      1.01     0.920      1.24e- 2      3.18
17 mu_1       0.8      1.09     0.458      2.46e- 4      5.09
18 mu_1       0.9      1.22     0.0409     2.71e- 7     13.0 
19 mu_0       0.1      1.08     0.0000347  0            58.3 
20 mu_0       0.2      1.63     0.00298    0            80.7 
21 mu_0       0.3      1.58     0.0282     0            54.6 
22 mu_0       0.4      1.36     0.147      0            24.2 
23 mu_0       0.5      1.18     0.579      0             7.34
24 mu_0       0.6      1.08     0.969      0             4.66
25 mu_0       0.7      1.01     0.924      0             3.87
26 mu_0       0.8      0.948    0.878      0             4.07
27 mu_0       0.9      1.00     0.165      0             5.97
[1] "Total run time was 268.713 seconds"
