
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1234"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 
 5  8  1 10  9  7  6  3  5  6 10 10  6  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04296 0.42320 0.67467 1.00000 4.57555 
[1] "event indicator table: "

  0   1 
759 475 
[1] "treatment indicator table: "

  0   1 
438 796 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 590
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 365.028 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.416 0.114 
 2 mu         0.1   0.2 0.479 0.101 
 3 mu         0.1   0.3 0.534 0.0887
 4 mu         0.1   0.4 0.575 0.0917
 5 mu         0.1   0.5 0.588 0.0933
 6 mu         0.2   0.1 0.335 0.0790
 7 mu         0.2   0.2 0.404 0.0592
 8 mu         0.2   0.3 0.460 0.0446
 9 mu         0.2   0.4 0.501 0.0476
10 mu         0.2   0.5 0.517 0.0461
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.15         0.987    0.0191     15.3 
 2 mu         0.2      1.09         1        0.167       5.63
 3 mu         0.3      1.03         1        0.452       2.04
 4 mu         0.4      1.01         1.00     0.656       1.46
 5 mu         0.5      1.00         1        0.691       1.42
 6 mu         0.6      0.998        1        0.834       1.20
 7 mu         0.7      0.997        1        0.898       1.14
 8 mu         0.8      1.00         1        0.809       1.20
 9 mu         0.9      1.01         1        0.596       1.42
10 mu_1       0.1      1.13         1        0.0724     10.1 
11 mu_1       0.2      1.05         1        0.336       2.75
12 mu_1       0.3      1.02         1        0.593       1.79
13 mu_1       0.4      1.01         1        0.613       1.47
14 mu_1       0.5      1.00         1        0.726       1.38
15 mu_1       0.6      0.997        1        0.855       1.17
16 mu_1       0.7      0.998        1        0.885       1.16
17 mu_1       0.8      1.00         1        0.789       1.23
18 mu_1       0.9      1.01         1        0.561       1.46
19 mu_0       0.1      1.15         0.937    0.0132     15.9 
20 mu_0       0.2      1.10         1        0.125       6.53
21 mu_0       0.3      1.04         1        0.366       2.25
22 mu_0       0.4      1.02         1.00     0.619       1.56
23 mu_0       0.5      1.01         1        0.657       1.45
24 mu_0       0.6      0.999        1        0.772       1.28
25 mu_0       0.7      0.996        1        0.862       1.11
26 mu_0       0.8      0.998        1        0.856       1.19
27 mu_0       0.9      1.00         1        0.701       1.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.821   0.0000225   2.82e-14     35.1 
 2 mu         0.2      1.57    0.00416     2.92e- 9     60.7 
 3 mu         0.3      1.56    0.0558      1.83e- 6     36.1 
 4 mu         0.4      1.41    0.327       1.57e- 4     19.0 
 5 mu         0.5      1.31    0.722       4.63e- 3     14.1 
 6 mu         0.6      1.32    1.00        5.17e- 2     11.5 
 7 mu         0.7      1.39    1.18        1.71e- 3     12.8 
 8 mu         0.8      1.42    0.986       9.98e- 6      9.64
 9 mu         0.9      1.19    0.176       9.75e-10     11.3 
10 mu_1       0.1      1.66    0.000163    2.52e-13     65.8 
11 mu_1       0.2      1.80    0.0140      1.30e- 8     56.9 
12 mu_1       0.3      1.52    0.133       5.74e- 6     22.6 
13 mu_1       0.4      1.35    0.524       3.68e- 4     19.0 
14 mu_1       0.5      1.29    0.816       8.72e- 3     11.3 
15 mu_1       0.6      1.33    1.01        1.92e- 2     11.1 
16 mu_1       0.7      1.41    1.17        5.42e- 4     13.1 
17 mu_1       0.8      1.41    0.732       2.77e- 6      8.61
18 mu_1       0.9      1.16    0.126       2.41e-10     11.8 
19 mu_0       0.1      0.727   0.00000575  0            31.7 
20 mu_0       0.2      1.51    0.00125     0            61.6 
21 mu_0       0.3      1.58    0.0243      0            41.9 
22 mu_0       0.4      1.45    0.186       0            19.0 
23 mu_0       0.5      1.33    0.565       0            16.9 
24 mu_0       0.6      1.30    0.907       0            12.1 
25 mu_0       0.7      1.36    1.12        0            12.2 
26 mu_0       0.8      1.46    1.19        0            13.8 
27 mu_0       0.9      1.49    0.442       0             8.64
[1] "Total run time was 370.526 seconds"
