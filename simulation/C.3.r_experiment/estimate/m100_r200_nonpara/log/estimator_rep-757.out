
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1262"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  6  4  3 11  6  8  5  4  5  7  1 10 11  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04151 0.36847 0.62531 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
733 529 
[1] "treatment indicator table: "

  0   1 
460 802 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 271.769 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.317 0.0544
 2 mu         0.1   0.2 0.425 0.0860
 3 mu         0.1   0.3 0.477 0.104 
 4 mu         0.1   0.4 0.626 0.168 
 5 mu         0.1   0.5 0.641 0.161 
 6 mu         0.2   0.1 0.300 0.0246
 7 mu         0.2   0.2 0.412 0.0509
 8 mu         0.2   0.3 0.465 0.0604
 9 mu         0.2   0.4 0.601 0.122 
10 mu         0.2   0.5 0.617 0.114 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.927        0.704   0.00244     13.7 
 2 mu         0.2      0.957        0.951   0.0657       4.10
 3 mu         0.3      0.996        1       0.298        2.09
 4 mu         0.4      1.00         1       0.599        1.48
 5 mu         0.5      0.998        1       0.832        1.16
 6 mu         0.6      0.999        1       0.837        1.23
 7 mu         0.7      1.00         1       0.829        1.16
 8 mu         0.8      0.986        1       0.715        1.24
 9 mu         0.9      0.929        0.998   0.223        1.77
10 mu_1       0.1      0.855        0.906   0.00911      3.56
11 mu_1       0.2      0.972        1       0.131        2.26
12 mu_1       0.3      1.00         1       0.427        1.94
13 mu_1       0.4      1.00         1       0.703        1.27
14 mu_1       0.5      0.997        1       0.841        1.20
15 mu_1       0.6      0.999        1       0.827        1.23
16 mu_1       0.7      0.999        1       0.799        1.14
17 mu_1       0.8      0.983        1       0.692        1.27
18 mu_1       0.9      0.922        1       0.198        1.85
19 mu_0       0.1      0.935        0.665   0.00170     15.2 
20 mu_0       0.2      0.953        0.943   0.0494       4.98
21 mu_0       0.3      0.993        1       0.242        2.15
22 mu_0       0.4      1.00         1       0.530        1.62
23 mu_0       0.5      0.999        1       0.764        1.24
24 mu_0       0.6      0.998        1       0.850        1.23
25 mu_0       0.7      1.00         1       0.823        1.22
26 mu_0       0.8      1.00         1       0.808        1.17
27 mu_0       0.9      0.987        1       0.444        1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08     0.000127   2.86e-15     66.6 
 2 mu         0.2      1.54     0.0110     7.49e-10     64.8 
 3 mu         0.3      1.47     0.125      1.11e- 6     29.4 
 4 mu         0.4      1.31     0.517      1.96e- 4      9.39
 5 mu         0.5      1.19     1.03       3.04e- 3      5.57
 6 mu         0.6      1.19     1.06       2.71e- 2      3.66
 7 mu         0.7      1.51     1.15       6.14e- 3      8.90
 8 mu         0.8      3.03     0.703      6.18e- 5     51.4 
 9 mu         0.9     10.4      0.135      1.91e- 8    429.  
10 mu_1       0.1      1.84     0.000795   2.86e-14     95.1 
11 mu_1       0.2      1.61     0.0356     3.74e- 9     46.3 
12 mu_1       0.3      1.37     0.297      3.69e- 6     14.4 
13 mu_1       0.4      1.22     0.827      4.91e- 4      7.46
14 mu_1       0.5      1.15     1.08       6.07e- 3      5.02
15 mu_1       0.6      1.21     1.08       3.39e- 2      3.54
16 mu_1       0.7      1.63     1.06       1.25e- 3     12.7 
17 mu_1       0.8      3.42     0.558      1.10e- 5     64.3 
18 mu_1       0.9     11.3      0.0956     3.03e- 9    476.  
19 mu_0       0.1      0.997    0.0000532  0            63.4 
20 mu_0       0.2      1.52     0.00559    0            69.5 
21 mu_0       0.3      1.51     0.0537     0            36.0 
22 mu_0       0.4      1.37     0.344      0            11.7 
23 mu_0       0.5      1.22     0.849      0             6.13
24 mu_0       0.6      1.15     1.08       0             4.11
25 mu_0       0.7      1.22     1.08       0             3.70
26 mu_0       0.8      1.49     0.895      0             9.46
27 mu_0       0.9      2.08     0.252      0            28.1 
[1] "Total run time was 277.72 seconds"
