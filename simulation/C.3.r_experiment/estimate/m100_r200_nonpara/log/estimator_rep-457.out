
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1238"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  9  3  4  4  7  8 10  7  5  8  5  6  9  3  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0102  0.2683  0.5458  0.9136  4.5120 
[1] "event indicator table: "

  0   1 
743 495 
[1] "treatment indicator table: "

  0   1 
509 729 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 224.842 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.300 0.0638
 2 mu         0.1   0.2 0.463 0.0907
 3 mu         0.1   0.3 0.510 0.0640
 4 mu         0.1   0.4 0.537 0.0586
 5 mu         0.1   0.5 0.617 0.0430
 6 mu         0.2   0.1 0.301 0.0346
 7 mu         0.2   0.2 0.429 0.0580
 8 mu         0.2   0.3 0.467 0.0500
 9 mu         0.2   0.4 0.500 0.0409
10 mu         0.2   0.5 0.575 0.0324
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         1         0.178      3.03
 2 mu         0.2      0.998        1         0.564      1.42
 3 mu         0.3      1.00         1         0.672      1.37
 4 mu         0.4      0.996        1         0.747      1.30
 5 mu         0.5      0.992        0.998     0.851      1.18
 6 mu         0.6      0.990        1         0.895      1.13
 7 mu         0.7      0.996        1         0.890      1.16
 8 mu         0.8      1.00         1         0.831      1.23
 9 mu         0.9      1.00         1         0.652      1.38
10 mu_1       0.1      0.971        1         0.361      1.53
11 mu_1       0.2      0.998        1         0.615      1.41
12 mu_1       0.3      1.00         1         0.680      1.39
13 mu_1       0.4      0.996        1         0.783      1.25
14 mu_1       0.5      0.991        1         0.877      1.17
15 mu_1       0.6      0.991        0.999     0.900      1.12
16 mu_1       0.7      0.998        1         0.881      1.18
17 mu_1       0.8      1.01         1         0.804      1.26
18 mu_1       0.9      1.00         1         0.625      1.41
19 mu_0       0.1      1.01         1         0.158      3.32
20 mu_0       0.2      0.997        1         0.519      1.44
21 mu_0       0.3      1.00         1         0.669      1.36
22 mu_0       0.4      0.997        1         0.722      1.33
23 mu_0       0.5      0.992        1         0.824      1.19
24 mu_0       0.6      0.989        0.999     0.877      1.17
25 mu_0       0.7      0.992        1         0.894      1.13
26 mu_0       0.8      1.00         1         0.844      1.22
27 mu_0       0.9      1.01         1         0.775      1.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.47      0.000477  7.52e-18     54.6 
 2 mu         0.2      1.27      0.0261    3.94e-12     37.3 
 3 mu         0.3      1.04      0.234     8.73e- 9     11.3 
 4 mu         0.4      1.02      0.708     2.07e- 6      3.79
 5 mu         0.5      1.06      1.11      1.43e- 4      3.43
 6 mu         0.6      1.06      1.03      4.58e- 3      3.55
 7 mu         0.7      0.988     0.981     1.86e- 4      3.52
 8 mu         0.8      0.968     0.469     5.56e- 7      4.59
 9 mu         0.9      1.41      0.0427    2.15e-11     21.5 
10 mu_1       0.1      1.70      0.00266   7.52e-17     64.2 
11 mu_1       0.2      1.10      0.0846    1.97e-11     21.9 
12 mu_1       0.3      1.01      0.453     2.91e- 8      4.44
13 mu_1       0.4      1.04      0.859     5.16e- 6      3.37
14 mu_1       0.5      1.07      1.21      2.87e- 4      3.25
15 mu_1       0.6      1.05      1.02      9.76e- 4      3.85
16 mu_1       0.7      0.973     0.985     3.09e- 5      3.26
17 mu_1       0.8      0.984     0.366     8.18e- 8      5.45
18 mu_1       0.9      1.46      0.0263    2.81e-12     22.7 
19 mu_0       0.1      1.45      0.000199  0            53.5 
20 mu_0       0.2      1.32      0.0131    0            41.2 
21 mu_0       0.3      1.05      0.130     0            14.3 
22 mu_0       0.4      1.01      0.472     0             4.09
23 mu_0       0.5      1.05      0.965     0             3.61
24 mu_0       0.6      1.07      1.19      0             3.11
25 mu_0       0.7      1.02      0.845     0             4.10
26 mu_0       0.8      0.904     0.568     0             3.24
27 mu_0       0.9      0.880     0.0406    0            10.7 
[1] "Total run time was 228.533 seconds"
