
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1315"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  2  4  6  5  9  7  9  9  5  5  2  4  7 11  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03852 0.37578 0.61452 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
797 518 
[1] "treatment indicator table: "

  0   1 
489 826 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 217.261 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.282 0.0505
 2 mu         0.1   0.2 0.340 0.0680
 3 mu         0.1   0.3 0.344 0.0670
 4 mu         0.1   0.4 0.406 0.0645
 5 mu         0.1   0.5 0.422 0.0659
 6 mu         0.2   0.1 0.315 0.0503
 7 mu         0.2   0.2 0.391 0.0593
 8 mu         0.2   0.3 0.413 0.0539
 9 mu         0.2   0.4 0.462 0.0513
10 mu         0.2   0.5 0.502 0.0547
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.773        0.661  0.000331      4.18
 2 mu         0.2      0.940        0.917  0.0279        5.36
 3 mu         0.3      0.999        1      0.214         3.41
 4 mu         0.4      1.00         1      0.583         1.39
 5 mu         0.5      0.997        1      0.836         1.21
 6 mu         0.6      0.999        1      0.902         1.07
 7 mu         0.7      1.01         1      0.880         1.16
 8 mu         0.8      1.03         1.00   0.550         1.60
 9 mu         0.9      1.05         1      0.115         2.94
10 mu_1       0.1      0.891        0.930  0.00136       4.38
11 mu_1       0.2      1.00         0.992  0.0596        5.40
12 mu_1       0.3      1.01         1      0.320         2.44
13 mu_1       0.4      0.999        1      0.698         1.33
14 mu_1       0.5      0.997        0.999  0.851         1.16
15 mu_1       0.6      1.00         1      0.912         1.08
16 mu_1       0.7      1.01         1      0.848         1.22
17 mu_1       0.8      1.04         1.00   0.503         1.72
18 mu_1       0.9      1.04         1      0.0985        3.13
19 mu_0       0.1      0.760        0.628  0.000216      4.61
20 mu_0       0.2      0.925        0.930  0.0200        5.35
21 mu_0       0.3      0.995        1      0.169         3.82
22 mu_0       0.4      1.00         1      0.506         1.61
23 mu_0       0.5      0.998        1      0.816         1.25
24 mu_0       0.6      0.997        1.00   0.877         1.10
25 mu_0       0.7      0.998        1      0.899         1.09
26 mu_0       0.8      1.01         1      0.738         1.31
27 mu_0       0.9      1.05         1.01   0.267         2.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      45.0    0.0000237   2.89e-13   4248.  
 2 mu         0.2      22.8    0.00350     2.99e- 8   1838.  
 3 mu         0.3       8.56   0.0469      8.58e- 6    486.  
 4 mu         0.4       2.91   0.238       4.13e- 4     87.3 
 5 mu         0.5       1.28   0.693       7.82e- 3     12.8 
 6 mu         0.6       1.14   1.08        7.08e- 2      3.77
 7 mu         0.7       1.75   1.10        6.13e- 3     20.1 
 8 mu         0.8       3.49   0.782       6.04e- 5     87.0 
 9 mu         0.9       6.05   0.123       7.90e- 9    226.  
10 mu_1       0.1      34.7    0.000180    2.58e-12   3034.  
11 mu_1       0.2      11.1    0.0121      1.34e- 7    656.  
12 mu_1       0.3       4.09   0.107       2.67e- 5    129.  
13 mu_1       0.4       1.67   0.415       9.64e- 4     40.3 
14 mu_1       0.5       1.07   0.885       1.46e- 2      6.38
15 mu_1       0.6       1.21   1.13        5.52e- 2      4.82
16 mu_1       0.7       1.97   1.15        1.90e- 3     26.8 
17 mu_1       0.8       3.84   0.678       9.78e- 6    101.  
18 mu_1       0.9       6.21   0.0880      1.19e- 9    235.  
19 mu_0       0.1      46.1    0.00000758  0          4383.  
20 mu_0       0.2      25.7    0.00142     0          2133.  
21 mu_0       0.3      10.5    0.0202      0           644.  
22 mu_0       0.4       3.74   0.120       0           135.  
23 mu_0       0.5       1.49   0.494       0            19.1 
24 mu_0       0.6       1.04   0.962       0             4.24
25 mu_0       0.7       1.24   1.19        0             4.47
26 mu_0       0.8       2.10   1.05        0            29.0 
27 mu_0       0.9       4.61   0.257       0           151.  
[1] "Total run time was 220.415 seconds"
