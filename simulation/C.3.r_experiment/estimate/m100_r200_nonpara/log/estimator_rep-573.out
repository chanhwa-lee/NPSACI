
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1259"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  9  2  8  7  6  5  5  6  6  8  4  8  6 11  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04045 0.30873 0.60264 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
765 494 
[1] "treatment indicator table: "

  0   1 
493 766 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 250.061 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.207 0.0856
 2 mu         0.1   0.2 0.258 0.0851
 3 mu         0.1   0.3 0.274 0.106 
 4 mu         0.1   0.4 0.251 0.150 
 5 mu         0.1   0.5 0.335 0.0878
 6 mu         0.2   0.1 0.162 0.0838
 7 mu         0.2   0.2 0.219 0.101 
 8 mu         0.2   0.3 0.278 0.0837
 9 mu         0.2   0.4 0.302 0.0889
10 mu         0.2   0.5 0.347 0.0781
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.774        0.609  0.000440      4.82
 2 mu         0.2      0.868        0.875  0.0235        5.45
 3 mu         0.3      0.948        0.950  0.155         3.21
 4 mu         0.4      0.989        0.998  0.411         2.08
 5 mu         0.5      1.00         1      0.664         1.37
 6 mu         0.6      1.00         1      0.821         1.16
 7 mu         0.7      1.00         1      0.610         1.13
 8 mu         0.8      1.01         1      0.319         1.31
 9 mu         0.9      1.01         1      0.0661        1.98
10 mu_1       0.1      0.856        0.829  0.00207       7.46
11 mu_1       0.2      0.922        0.925  0.0560        4.40
12 mu_1       0.3      0.978        0.982  0.252         2.65
13 mu_1       0.4      1.00         1      0.526         1.74
14 mu_1       0.5      1.00         1      0.744         1.29
15 mu_1       0.6      1.00         1.01   0.773         1.12
16 mu_1       0.7      1.01         1.00   0.555         1.16
17 mu_1       0.8      1.01         1      0.275         1.34
18 mu_1       0.9      1.01         1      0.0541        2.10
19 mu_0       0.1      0.765        0.578  0.000259      4.69
20 mu_0       0.2      0.855        0.904  0.0154        5.71
21 mu_0       0.3      0.936        0.938  0.114         3.71
22 mu_0       0.4      0.982        0.992  0.334         2.31
23 mu_0       0.5      0.997        1      0.585         1.54
24 mu_0       0.6      1.00         1      0.784         1.24
25 mu_0       0.7      1.00         1      0.739         1.12
26 mu_0       0.8      1.00         1      0.492         1.24
27 mu_0       0.9      1.01         1      0.174         1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.31    0.0000859  2.58e-13    279.  
 2 mu         0.2       3.43    0.00628    1.33e- 8    141.  
 3 mu         0.3       3.39    0.0693     6.71e- 6    165.  
 4 mu         0.4       2.67    0.306      4.92e- 4     80.2 
 5 mu         0.5       1.86    0.797      1.21e- 2     36.0 
 6 mu         0.6       1.35    1.06       4.43e- 2     13.3 
 7 mu         0.7       1.29    1.15       1.23e- 3     12.7 
 8 mu         0.8       2.29    0.685      7.21e- 6    107.  
 9 mu         0.9       8.29    0.0536     9.90e-10    706.  
10 mu_1       0.1       3.26    0.000724   2.29e-12    200.  
11 mu_1       0.2       3.45    0.0215     5.93e- 8    185.  
12 mu_1       0.3       3.20    0.158      1.99e- 5    145.  
13 mu_1       0.4       2.39    0.505      1.09e- 3     52.8 
14 mu_1       0.5       1.68    0.931      2.16e- 2     30.3 
15 mu_1       0.6       1.29    1.09       5.27e- 3      9.33
16 mu_1       0.7       1.36    1.10       1.25e- 4     18.1 
17 mu_1       0.8       2.58    0.533      6.43e- 7    134.  
18 mu_1       0.9       9.05    0.0385     7.85e-11    785.  
19 mu_0       0.1       3.32    0.0000287  0           288.  
20 mu_0       0.2       3.42    0.00221    0           140.  
21 mu_0       0.3       3.47    0.0311     0           173.  
22 mu_0       0.4       2.85    0.164      0            98.5 
23 mu_0       0.5       2.04    0.556      0            41.7 
24 mu_0       0.6       1.43    0.900      0            19.2 
25 mu_0       0.7       1.13    1.07       0             3.72
26 mu_0       0.8       1.10    1.03       0             4.08
27 mu_0       0.9       1.37    0.151      0            13.2 
[1] "Total run time was 254.668 seconds"
