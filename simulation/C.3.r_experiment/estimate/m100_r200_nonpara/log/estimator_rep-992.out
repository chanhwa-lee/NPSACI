
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1242"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 11  6  2  6  8  6  8  5 10  4  5  9  5  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03696 0.36255 0.62749 1.00000 5.28065 
[1] "event indicator table: "

  0   1 
747 495 
[1] "treatment indicator table: "

  0   1 
424 818 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 199.342 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.464 0.105 
 2 mu         0.1   0.2 0.513 0.101 
 3 mu         0.1   0.3 0.535 0.104 
 4 mu         0.1   0.4 0.587 0.114 
 5 mu         0.1   0.5 0.614 0.118 
 6 mu         0.2   0.1 0.355 0.0641
 7 mu         0.2   0.2 0.430 0.0578
 8 mu         0.2   0.3 0.461 0.0541
 9 mu         0.2   0.4 0.498 0.0544
10 mu         0.2   0.5 0.519 0.0556
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.16         1        0.0235      9.97
 2 mu         0.2      1.01         1        0.185       2.42
 3 mu         0.3      0.994        1        0.490       1.60
 4 mu         0.4      1.01         1        0.771       1.42
 5 mu         0.5      1.01         1        0.781       1.27
 6 mu         0.6      1.01         1        0.861       1.16
 7 mu         0.7      1.00         1        0.910       1.13
 8 mu         0.8      0.992        1        0.880       1.15
 9 mu         0.9      0.984        0.999    0.661       1.35
10 mu_1       0.1      0.967        1        0.0666      2.49
11 mu_1       0.2      0.976        1        0.307       1.56
12 mu_1       0.3      0.996        1        0.641       1.60
13 mu_1       0.4      1.01         1        0.762       1.33
14 mu_1       0.5      1.02         1        0.794       1.25
15 mu_1       0.6      1.01         1        0.880       1.16
16 mu_1       0.7      0.997        1        0.894       1.14
17 mu_1       0.8      0.991        1        0.853       1.17
18 mu_1       0.9      0.983        1        0.633       1.38
19 mu_0       0.1      1.18         1        0.0187     11.0 
20 mu_0       0.2      1.02         1        0.154       2.73
21 mu_0       0.3      0.993        1        0.425       1.60
22 mu_0       0.4      1.00         1        0.723       1.48
23 mu_0       0.5      1.01         1        0.768       1.28
24 mu_0       0.6      1.01         1        0.831       1.19
25 mu_0       0.7      1.01         1        0.907       1.16
26 mu_0       0.8      0.996        1        0.876       1.18
27 mu_0       0.9      0.995        1        0.853       1.19
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.31   0.0000213   4.52e-17    485.  
 2 mu         0.2       2.48   0.00233     2.11e-11    147.  
 3 mu         0.3       1.62   0.0269      4.09e- 8     31.9 
 4 mu         0.4       1.40   0.156       8.28e- 6     15.5 
 5 mu         0.5       1.24   0.503       4.79e- 4      8.12
 6 mu         0.6       1.12   0.878       6.74e- 3      6.41
 7 mu         0.7       1.11   1.06        7.88e- 5      3.51
 8 mu         0.8       1.20   1.14        1.37e- 7      5.11
 9 mu         0.9       1.29   0.329       2.35e-12     24.0 
10 mu_1       0.1       3.77   0.000123    4.29e-16    285.  
11 mu_1       0.2       1.72   0.00999     1.00e-10     43.3 
12 mu_1       0.3       1.46   0.0671      1.29e- 7     28.0 
13 mu_1       0.4       1.31   0.290       1.97e- 5     10.2 
14 mu_1       0.5       1.17   0.711       9.10e- 4      6.96
15 mu_1       0.6       1.09   1.02        6.61e- 4      5.94
16 mu_1       0.7       1.12   1.10        6.62e- 6      4.01
17 mu_1       0.8       1.21   1.02        1.01e- 8      6.07
18 mu_1       0.9       1.30   0.238       1.54e-13     25.3 
19 mu_0       0.1       5.48   0.00000650  0           507.  
20 mu_0       0.2       2.67   0.000649    0           173.  
21 mu_0       0.3       1.69   0.00951     0            35.1 
22 mu_0       0.4       1.46   0.0728      0            19.1 
23 mu_0       0.5       1.31   0.279       0             9.28
24 mu_0       0.6       1.16   0.781       0             7.12
25 mu_0       0.7       1.07   0.986       0             4.44
26 mu_0       0.8       1.14   1.14        0             4.53
27 mu_0       0.9       1.28   0.590       0            12.0 
[1] "Total run time was 202.554 seconds"
