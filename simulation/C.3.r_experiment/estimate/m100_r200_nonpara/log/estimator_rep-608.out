
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1193"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6 10 10  4  3 11  4  5  6  7  9  4  6  5  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04356 0.38103 0.65103 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
693 500 
[1] "treatment indicator table: "

  0   1 
437 756 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 586
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 177.769 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.323 0.0552
 2 mu         0.1   0.2 0.387 0.0640
 3 mu         0.1   0.3 0.401 0.0879
 4 mu         0.1   0.4 0.548 0.167 
 5 mu         0.1   0.5 0.550 0.159 
 6 mu         0.2   0.1 0.302 0.0423
 7 mu         0.2   0.2 0.391 0.0540
 8 mu         0.2   0.3 0.418 0.0737
 9 mu         0.2   0.4 0.492 0.106 
10 mu         0.2   0.5 0.501 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.912        0.942   0.00493     12.0 
 2 mu         0.2      0.988        1       0.0903      10.5 
 3 mu         0.3      0.997        1       0.327        4.36
 4 mu         0.4      0.999        1       0.640        1.63
 5 mu         0.5      1.00         1       0.841        1.30
 6 mu         0.6      0.999        1       0.894        1.15
 7 mu         0.7      0.995        1       0.838        1.07
 8 mu         0.8      0.991        1       0.702        1.23
 9 mu         0.9      0.970        1       0.375        2.06
10 mu_1       0.1      1.01         0.983   0.0177      16.1 
11 mu_1       0.2      0.998        1       0.181        7.04
12 mu_1       0.3      0.996        1       0.478        2.31
13 mu_1       0.4      1.00         1       0.725        1.46
14 mu_1       0.5      1.00         1       0.888        1.24
15 mu_1       0.6      0.998        1       0.868        1.13
16 mu_1       0.7      0.994        1       0.820        1.09
17 mu_1       0.8      0.990        1       0.677        1.27
18 mu_1       0.9      0.967        1       0.350        2.17
19 mu_0       0.1      0.902        0.891   0.00351     11.6 
20 mu_0       0.2      0.985        0.995   0.0677      11.3 
21 mu_0       0.3      0.998        1       0.262        5.29
22 mu_0       0.4      0.998        1       0.560        1.89
23 mu_0       0.5      1.00         1       0.793        1.36
24 mu_0       0.6      1.00         1       0.890        1.18
25 mu_0       0.7      0.997        1       0.856        1.09
26 mu_0       0.8      0.996        1       0.796        1.15
27 mu_0       0.9      0.993        1       0.598        1.33
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      33.9     0.0000594  1.24e-14   2893.  
 2 mu         0.2      14.9     0.00841    1.63e- 9   1002.  
 3 mu         0.3       6.30    0.0902     1.61e- 6    301.  
 4 mu         0.4       2.74    0.299      2.14e- 4     75.2 
 5 mu         0.5       1.50    0.704      9.50e- 3     17.9 
 6 mu         0.6       1.13    1.01       6.16e- 2      5.50
 7 mu         0.7       1.14    1.06       1.48e- 2      3.35
 8 mu         0.8       1.71    0.640      2.95e- 4     28.0 
 9 mu         0.9       4.15    0.0966     5.12e- 8    208.  
10 mu_1       0.1       3.81    0.000288   0           335.  
11 mu_1       0.2       3.67    0.0219     0           290.  
12 mu_1       0.3       2.30    0.143      0           115.  
13 mu_1       0.4       1.56    0.514      0            27.5 
14 mu_1       0.5       1.21    0.855      0            13.9 
15 mu_1       0.6       1.08    1.01       0             3.56
16 mu_1       0.7       1.18    1.00       0             4.46
17 mu_1       0.8       1.85    0.504      0            35.0 
18 mu_1       0.9       4.43    0.0636     0           231.  
19 mu_0       0.1      37.2     0.0000270  0          3214.  
20 mu_0       0.2      17.7     0.00412    0          1253.  
21 mu_0       0.3       8.01    0.0349     0           430.  
22 mu_0       0.4       3.52    0.165      0           125.  
23 mu_0       0.5       1.80    0.503      0            29.2 
24 mu_0       0.6       1.22    0.907      0             8.40
25 mu_0       0.7       1.07    1.06       0             3.17
26 mu_0       0.8       1.14    0.920      0             6.83
27 mu_0       0.9       1.65    0.290      0            25.1 
[1] "Total run time was 180.967 seconds"
