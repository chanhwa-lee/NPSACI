
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1274"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  5  6  8  4  7  5  8  3  8 13  8  2  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0227  0.2835  0.5509  0.9117  5.1781 
[1] "event indicator table: "

  0   1 
716 558 
[1] "treatment indicator table: "

  0   1 
523 751 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 264.817 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.551 0.207 
 2 mu         0.1   0.2 0.578 0.257 
 3 mu         0.1   0.3 0.659 0.289 
 4 mu         0.1   0.4 0.680 0.314 
 5 mu         0.1   0.5 0.771 0.313 
 6 mu         0.2   0.1 0.430 0.0849
 7 mu         0.2   0.2 0.459 0.122 
 8 mu         0.2   0.3 0.545 0.130 
 9 mu         0.2   0.4 0.573 0.146 
10 mu         0.2   0.5 0.659 0.123 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.22         0.792   0.00145     45.9 
 2 mu         0.2      1.07         0.946   0.0597      18.1 
 3 mu         0.3      1.00         0.976   0.295        4.97
 4 mu         0.4      0.993        1       0.596        1.64
 5 mu         0.5      0.995        1       0.810        1.19
 6 mu         0.6      0.998        1       0.838        1.15
 7 mu         0.7      1.00         1       0.631        1.42
 8 mu         0.8      1.00         1       0.243        2.21
 9 mu         0.9      0.983        1       0.0222       4.22
10 mu_1       0.1      1.15         0.962   0.00533     30.8 
11 mu_1       0.2      0.996        0.999   0.115        6.65
12 mu_1       0.3      0.985        1       0.403        1.91
13 mu_1       0.4      0.992        1       0.678        1.26
14 mu_1       0.5      0.995        1       0.828        1.16
15 mu_1       0.6      0.998        1       0.819        1.15
16 mu_1       0.7      1.00         1       0.576        1.52
17 mu_1       0.8      1.00         1       0.208        2.29
18 mu_1       0.9      0.982        1       0.0179       4.55
19 mu_0       0.1      1.22         0.779   0.00102     47.6 
20 mu_0       0.2      1.09         0.932   0.0459      21.0 
21 mu_0       0.3      1.01         0.960   0.248        6.28
22 mu_0       0.4      0.993        1       0.541        1.98
23 mu_0       0.5      0.996        1       0.771        1.21
24 mu_0       0.6      0.998        1       0.853        1.16
25 mu_0       0.7      1.00         1       0.759        1.26
26 mu_0       0.8      1.01         1       0.382        1.89
27 mu_0       0.9      0.995        1       0.0612       2.79
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      79.5     0.000196   1.04e-15   7843.  
 2 mu         0.2      32.0     0.0152     4.87e-10   3016.  
 3 mu         0.3       8.57    0.114      9.44e- 7    698.  
 4 mu         0.4       2.36    0.418      1.91e- 4    107.  
 5 mu         0.5       1.25    0.849      1.11e- 2     10.5 
 6 mu         0.6       1.31    0.985      4.67e- 3     11.6 
 7 mu         0.7       3.62    0.977      8.49e- 5    163.  
 8 mu         0.8      20.7     0.370      2.53e- 7   1371.  
 9 mu         0.9      96.4     0.0288     9.79e-12   6427.  
10 mu_1       0.1      54.2     0.00141    9.92e-15   5229.  
11 mu_1       0.2      12.0     0.0460     2.31e- 9   1005.  
12 mu_1       0.3       3.02    0.263      2.99e- 6    155.  
13 mu_1       0.4       1.39    0.599      4.54e- 4     17.9 
14 mu_1       0.5       1.15    0.918      2.10e- 2      5.17
15 mu_1       0.6       1.45    1.08       9.16e- 4     18.4 
16 mu_1       0.7       4.59    0.857      1.43e- 5    221.  
17 mu_1       0.8      24.7     0.282      3.73e- 8   1628.  
18 mu_1       0.9     103.      0.0198     1.28e-12   6784.  
19 mu_0       0.1      82.3     0.0000832  0          8134.  
20 mu_0       0.2      37.0     0.00635    0          3518.  
21 mu_0       0.3      11.0     0.0613     0           930.  
22 mu_0       0.4       3.00    0.278      0           167.  
23 mu_0       0.5       1.35    0.661      0            19.5 
24 mu_0       0.6       1.11    0.964      0             5.14
25 mu_0       0.7       1.34    0.925      0            27.1 
26 mu_0       0.8       4.75    0.592      0           343.  
27 mu_0       0.9      34.8     0.0620     0          3213.  
[1] "Total run time was 269.563 seconds"
