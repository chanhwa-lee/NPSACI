
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1267"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  7  9  4  7  9  8  3  6  7  9  6  4  3  6 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03705 0.36380 0.62773 1.00000 4.50709 
[1] "event indicator table: "

  0   1 
761 506 
[1] "treatment indicator table: "

  0   1 
426 841 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 619
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 306.485 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.396 0.0613
 2 mu         0.1   0.2 0.500 0.0716
 3 mu         0.1   0.3 0.527 0.0734
 4 mu         0.1   0.4 0.553 0.0787
 5 mu         0.1   0.5 0.606 0.0878
 6 mu         0.2   0.1 0.403 0.0652
 7 mu         0.2   0.2 0.518 0.0802
 8 mu         0.2   0.3 0.561 0.0850
 9 mu         0.2   0.4 0.602 0.0929
10 mu         0.2   0.5 0.664 0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         0.849 0.0000878     13.6 
 2 mu         0.2      1.14         1     0.0146        16.6 
 3 mu         0.3      1.03         1     0.156          6.95
 4 mu         0.4      0.981        1     0.423          2.13
 5 mu         0.5      0.989        0.999 0.717          1.27
 6 mu         0.6      1.00         1     0.869          1.14
 7 mu         0.7      1.00         1     0.901          1.14
 8 mu         0.8      1.00         1     0.852          1.24
 9 mu         0.9      1.01         1     0.570          1.96
10 mu_1       0.1      1.18         1     0.000418      21.4 
11 mu_1       0.2      1.11         1     0.0351        13.2 
12 mu_1       0.3      0.996        1     0.253          3.99
13 mu_1       0.4      0.979        1     0.552          1.63
14 mu_1       0.5      0.995        1     0.811          1.19
15 mu_1       0.6      1.00         1     0.882          1.11
16 mu_1       0.7      1.00         1     0.904          1.14
17 mu_1       0.8      1.00         1     0.822          1.29
18 mu_1       0.9      1.01         1     0.537          2.05
19 mu_0       0.1      0.979        0.831 0.0000511     12.7 
20 mu_0       0.2      1.15         1     0.00953       17.4 
21 mu_0       0.3      1.05         1     0.114          8.22
22 mu_0       0.4      0.982        1     0.337          2.56
23 mu_0       0.5      0.984        1     0.623          1.34
24 mu_0       0.6      0.999        1     0.851          1.19
25 mu_0       0.7      1.00         1     0.891          1.14
26 mu_0       0.8      1.00         1     0.872          1.15
27 mu_0       0.9      0.996        1     0.796          1.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      36.0    0.0000181   6.29e-19   2918.  
 2 mu         0.2      63.5    0.00162     6.60e-13   5680.  
 3 mu         0.3      43.1    0.0358      2.19e- 9   3861.  
 4 mu         0.4      17.8    0.218       6.92e- 7   1439.  
 5 mu         0.5       5.89   0.630       6.00e- 5    315.  
 6 mu         0.6       2.19   1.02        2.30e- 3     51.0 
 7 mu         0.7       1.20   1.15        1.96e- 2     11.5 
 8 mu         0.8       1.09   0.839       1.31e- 4      7.05
 9 mu         0.9       1.43   0.166       2.03e- 8     20.6 
10 mu_1       0.1      67.9    0.000130    6.29e-18   5836.  
11 mu_1       0.2      62.3    0.00668     3.30e-12   5680.  
12 mu_1       0.3      29.4    0.0768      7.31e- 9   2574.  
13 mu_1       0.4      10.3    0.370       1.73e- 6    720.  
14 mu_1       0.5       3.67   0.873       1.20e- 4    126.  
15 mu_1       0.6       1.69   1.05        3.83e- 3     40.2 
16 mu_1       0.7       1.11   1.10        3.73e- 3      7.77
17 mu_1       0.8       1.10   0.698       2.19e- 5      8.26
18 mu_1       0.9       1.45   0.108       3.01e- 9     21.5 
19 mu_0       0.1      32.4    0.00000315  0          2594.  
20 mu_0       0.2      63.8    0.000588    0          5680.  
21 mu_0       0.3      48.9    0.0147      0          4413.  
22 mu_0       0.4      22.8    0.110       0          1919.  
23 mu_0       0.5       8.11   0.425       0           504.  
24 mu_0       0.6       2.92   0.929       0            74.9 
25 mu_0       0.7       1.40   1.03        0            20.2 
26 mu_0       0.8       1.06   1.02        0             3.56
27 mu_0       0.9       1.28   0.339       0            12.9 
[1] "Total run time was 310.758 seconds"
