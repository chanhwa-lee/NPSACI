
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1347"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  1  1  2  7 11  8  8 10  6  6  8 10  8  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04349 0.36184 0.63297 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
809 538 
[1] "treatment indicator table: "

  0   1 
488 859 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 699
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 29"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 207.077 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.338 0.0567
 2 mu         0.1   0.2 0.396 0.0740
 3 mu         0.1   0.3 0.469 0.0720
 4 mu         0.1   0.4 0.514 0.0794
 5 mu         0.1   0.5 0.538 0.0647
 6 mu         0.2   0.1 0.327 0.0486
 7 mu         0.2   0.2 0.410 0.0773
 8 mu         0.2   0.3 0.491 0.0717
 9 mu         0.2   0.4 0.535 0.0821
10 mu         0.2   0.5 0.578 0.0644
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.863        0.852  0.000261      6.23
 2 mu         0.2      1.01         0.959  0.0112        4.85
 3 mu         0.3      1.04         1      0.0785        4.64
 4 mu         0.4      1.02         0.999  0.251         2.28
 5 mu         0.5      0.998        1      0.515         1.44
 6 mu         0.6      1.00         1.00   0.768         1.34
 7 mu         0.7      1.00         1      0.783         1.20
 8 mu         0.8      0.995        1      0.638         1.38
 9 mu         0.9      0.992        0.995  0.207         2.17
10 mu_1       0.1      0.999        0.943  0.00121       6.50
11 mu_1       0.2      1.06         1      0.0276        5.84
12 mu_1       0.3      1.04         1      0.136         3.80
13 mu_1       0.4      1.01         0.994  0.349         1.73
14 mu_1       0.5      0.997        1.00   0.616         1.41
15 mu_1       0.6      1.00         1.00   0.753         1.28
16 mu_1       0.7      1.00         1      0.800         1.15
17 mu_1       0.8      0.993        1      0.599         1.43
18 mu_1       0.9      0.993        0.994  0.183         2.33
19 mu_0       0.1      0.848        0.840  0.000155      6.20
20 mu_0       0.2      0.999        0.954  0.00714       5.22
21 mu_0       0.3      1.04         0.999  0.0538        4.99
22 mu_0       0.4      1.02         1.00   0.186         2.77
23 mu_0       0.5      0.999        1.00   0.413         1.48
24 mu_0       0.6      0.999        1.00   0.683         1.43
25 mu_0       0.7      1.01         1.00   0.744         1.31
26 mu_0       0.8      1.00         1      0.786         1.19
27 mu_0       0.9      0.982        0.997  0.420         1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.95    0.0000391  2.94e-16    137.  
 2 mu         0.2       3.94    0.00553    1.37e-10    190.  
 3 mu         0.3       3.17    0.0585     2.66e- 7    128.  
 4 mu         0.4       2.19    0.312      2.85e- 5     57.0 
 5 mu         0.5       1.45    0.647      8.11e- 4     17.3 
 6 mu         0.6       1.09    0.958      1.25e- 2      5.58
 7 mu         0.7       1.04    0.768      4.55e- 4      7.27
 8 mu         0.8       1.23    0.804      2.04e- 6     12.2 
 9 mu         0.9       1.65    0.167      1.57e-10     44.1 
10 mu_1       0.1       5.09    0.000228   2.79e-15    249.  
11 mu_1       0.2       3.75    0.0190     6.50e-10    173.  
12 mu_1       0.3       2.48    0.131      8.41e- 7     77.9 
13 mu_1       0.4       1.68    0.474      7.14e- 5     25.9 
14 mu_1       0.5       1.21    0.821      1.62e- 3     10.6 
15 mu_1       0.6       1.01    0.959      3.91e- 3      3.30
16 mu_1       0.7       1.04    0.788      8.12e- 5      8.43
17 mu_1       0.8       1.26    0.777      3.18e- 7     12.4 
18 mu_1       0.9       1.67    0.123      2.18e-11     46.5 
19 mu_0       0.1       2.71    0.0000170  0           125.  
20 mu_0       0.2       3.99    0.00218    0           194.  
21 mu_0       0.3       3.47    0.0307     0           150.  
22 mu_0       0.4       2.52    0.188      0            77.8 
23 mu_0       0.5       1.70    0.479      0            28.3 
24 mu_0       0.6       1.21    0.826      0            11.2 
25 mu_0       0.7       1.04    0.887      0             5.49
26 mu_0       0.8       1.13    0.750      0            11.5 
27 mu_0       0.9       1.46    0.283      0            22.0 
[1] "Total run time was 210.292 seconds"
