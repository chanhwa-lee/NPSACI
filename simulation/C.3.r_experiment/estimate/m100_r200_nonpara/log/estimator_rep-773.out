
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1281"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  7  1  4  9  2  8 11  4  6  5  7  9  6  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03715 0.37741 0.63366 1.00000 4.95590 
[1] "event indicator table: "

  0   1 
763 518 
[1] "treatment indicator table: "

  0   1 
458 823 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 220.488 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.376 0.104 
 2 mu         0.1   0.2 0.583 0.104 
 3 mu         0.1   0.3 0.632 0.111 
 4 mu         0.1   0.4 0.683 0.127 
 5 mu         0.1   0.5 0.676 0.134 
 6 mu         0.2   0.1 0.351 0.0535
 7 mu         0.2   0.2 0.514 0.0524
 8 mu         0.2   0.3 0.583 0.0555
 9 mu         0.2   0.4 0.661 0.0656
10 mu         0.2   0.5 0.661 0.0643
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.11         0.859   0.00369     19.2 
 2 mu         0.2      1.06         1       0.0597       4.44
 3 mu         0.3      1.03         1       0.234        1.81
 4 mu         0.4      1.01         1       0.520        1.42
 5 mu         0.5      1.00         1       0.739        1.28
 6 mu         0.6      1.01         1       0.867        1.19
 7 mu         0.7      1.01         1       0.848        1.14
 8 mu         0.8      1.00         1       0.765        1.37
 9 mu         0.9      1.00         1       0.562        1.51
10 mu_1       0.1      1.06         1       0.0139       4.00
11 mu_1       0.2      1.04         1       0.122        2.36
12 mu_1       0.3      1.02         1       0.354        1.57
13 mu_1       0.4      1.00         1       0.623        1.34
14 mu_1       0.5      1.00         1       0.781        1.20
15 mu_1       0.6      1.01         1       0.874        1.18
16 mu_1       0.7      1.00         1       0.840        1.18
17 mu_1       0.8      0.999        1       0.756        1.39
18 mu_1       0.9      1.00         1       0.524        1.51
19 mu_0       0.1      1.11         0.813   0.00255     21.1 
20 mu_0       0.2      1.07         1       0.0441       5.21
21 mu_0       0.3      1.03         1       0.183        1.97
22 mu_0       0.4      1.01         1       0.429        1.48
23 mu_0       0.5      1.00         1       0.697        1.37
24 mu_0       0.6      1.01         1       0.841        1.21
25 mu_0       0.7      1.01         1       0.866        1.15
26 mu_0       0.8      1.00         1       0.799        1.28
27 mu_0       0.9      0.993        1       0.718        1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.371   0.0000202   4.37e-14     19.5 
 2 mu         0.2      0.926   0.00394     4.53e- 9     26.6 
 3 mu         0.3      1.29    0.0597      3.00e- 6     21.8 
 4 mu         0.4      1.34    0.282       2.24e- 4     17.2 
 5 mu         0.5      1.20    0.763       6.38e- 3      9.88
 6 mu         0.6      1.13    0.964       2.19e- 2      3.98
 7 mu         0.7      1.18    0.985       4.66e- 4      4.53
 8 mu         0.8      1.26    0.791       1.59e- 6      7.35
 9 mu         0.9      1.44    0.143       6.90e-11     43.0 
10 mu_1       0.1      0.793   0.000151    3.91e-13     32.5 
11 mu_1       0.2      1.26    0.0129      2.03e- 8     22.2 
12 mu_1       0.3      1.43    0.126       9.99e- 6     22.4 
13 mu_1       0.4      1.31    0.440       5.61e- 4     15.0 
14 mu_1       0.5      1.16    0.780       1.28e- 2      7.41
15 mu_1       0.6      1.13    0.955       6.09e- 3      3.79
16 mu_1       0.7      1.19    0.990       1.11e- 4      4.86
17 mu_1       0.8      1.27    0.644       3.31e- 7      9.19
18 mu_1       0.9      1.45    0.109       1.28e-11     47.8 
19 mu_0       0.1      0.324   0.00000619  0            18.0 
20 mu_0       0.2      0.842   0.00138     0            27.7 
21 mu_0       0.3      1.23    0.0238      0            21.6 
22 mu_0       0.4      1.35    0.134       0            19.9 
23 mu_0       0.5      1.24    0.516       0            12.3 
24 mu_0       0.6      1.13    0.950       0             4.98
25 mu_0       0.7      1.15    0.946       0             4.12
26 mu_0       0.8      1.25    1.08        0             5.97
27 mu_0       0.9      1.30    0.316       0            12.3 
[1] "Total run time was 224.792 seconds"
