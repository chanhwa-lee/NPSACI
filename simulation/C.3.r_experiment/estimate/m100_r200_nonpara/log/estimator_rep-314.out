
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1251"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 10  6  7  9  7  5  5  2  5  3  7  8  9  4  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03189 0.35094 0.60025 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
739 512 
[1] "treatment indicator table: "

  0   1 
468 783 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 678
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 573
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 189.846 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.322 0.0788
 2 mu         0.1   0.2 0.323 0.138 
 3 mu         0.1   0.3 0.388 0.130 
 4 mu         0.1   0.4 0.500 0.0850
 5 mu         0.1   0.5 0.470 0.119 
 6 mu         0.2   0.1 0.350 0.0756
 7 mu         0.2   0.2 0.393 0.107 
 8 mu         0.2   0.3 0.455 0.0939
 9 mu         0.2   0.4 0.542 0.0642
10 mu         0.2   0.5 0.530 0.0758
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.929        0.891   0.00994      7.14
 2 mu         0.2      0.962        1       0.137        2.07
 3 mu         0.3      0.997        1       0.464        1.87
 4 mu         0.4      1.00         1       0.627        1.33
 5 mu         0.5      0.995        1       0.845        1.21
 6 mu         0.6      0.994        1.00    0.794        1.15
 7 mu         0.7      1.00         1       0.873        1.11
 8 mu         0.8      1.01         1       0.819        1.22
 9 mu         0.9      1.01         1       0.642        1.55
10 mu_1       0.1      0.907        1       0.0305       2.33
11 mu_1       0.2      0.985        1       0.240        2.14
12 mu_1       0.3      1.00         1       0.531        1.69
13 mu_1       0.4      0.998        1       0.688        1.20
14 mu_1       0.5      0.993        1       0.832        1.20
15 mu_1       0.6      0.995        0.998   0.795        1.14
16 mu_1       0.7      1.00         1       0.847        1.12
17 mu_1       0.8      1.01         1       0.815        1.24
18 mu_1       0.9      1.01         1       0.609        1.59
19 mu_0       0.1      0.931        0.854   0.00766      7.87
20 mu_0       0.2      0.956        1       0.112        2.11
21 mu_0       0.3      0.995        1       0.399        1.94
22 mu_0       0.4      1.00         1       0.586        1.43
23 mu_0       0.5      0.997        1       0.808        1.21
24 mu_0       0.6      0.993        1       0.794        1.17
25 mu_0       0.7      0.997        1       0.820        1.13
26 mu_0       0.8      1.01         1       0.837        1.15
27 mu_0       0.9      1.02         1       0.799        1.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.60    0.000108   4.63e-17    193.  
 2 mu         0.2       3.01    0.0110     2.16e-11    123.  
 3 mu         0.3       2.04    0.116      4.18e- 8     55.8 
 4 mu         0.4       1.59    0.419      8.48e- 6     15.6 
 5 mu         0.5       1.37    0.842      4.90e- 4      9.90
 6 mu         0.6       1.24    0.957      5.67e- 3      5.72
 7 mu         0.7       1.19    1.03       1.03e- 4      4.79
 8 mu         0.8       1.18    0.728      3.08e- 7      7.01
 9 mu         0.9       1.08    0.119      1.19e-11      7.22
10 mu_1       0.1       4.08    0.000652   4.39e-16    181.  
11 mu_1       0.2       2.32    0.0300     1.02e-10     87.9 
12 mu_1       0.3       1.69    0.245      1.32e- 7     26.6 
13 mu_1       0.4       1.48    0.646      2.01e- 5     10.5 
14 mu_1       0.5       1.33    0.981      9.31e- 4      9.32
15 mu_1       0.6       1.23    1.02       1.11e- 3      5.39
16 mu_1       0.7       1.19    0.941      1.73e- 5      5.40
17 mu_1       0.8       1.19    0.578      4.53e- 8      6.92
18 mu_1       0.9       1.07    0.0853     1.55e-12      8.02
19 mu_0       0.1       3.54    0.0000443  0           196.  
20 mu_0       0.2       3.19    0.00546    0           132.  
21 mu_0       0.3       2.18    0.0541     0            68.3 
22 mu_0       0.4       1.66    0.238      0            22.3 
23 mu_0       0.5       1.41    0.566      0            10.5 
24 mu_0       0.6       1.27    0.945      0             7.57
25 mu_0       0.7       1.18    1.06       0             4.57
26 mu_0       0.8       1.17    0.894      0             7.38
27 mu_0       0.9       1.15    0.251      0             6.63
[1] "Total run time was 192.888 seconds"
