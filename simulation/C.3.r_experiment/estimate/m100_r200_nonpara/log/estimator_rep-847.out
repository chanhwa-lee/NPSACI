
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1199"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8 11  4  7  7  8  6  7  5  4  5  3  2  8  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03299 0.33890 0.62023 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
726 473 
[1] "treatment indicator table: "

  0   1 
394 805 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 442.617 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.417 0.101 
 2 mu         0.1   0.2 0.573 0.0701
 3 mu         0.1   0.3 0.592 0.0664
 4 mu         0.1   0.4 0.605 0.0693
 5 mu         0.1   0.5 0.620 0.0788
 6 mu         0.2   0.1 0.382 0.0606
 7 mu         0.2   0.2 0.518 0.0536
 8 mu         0.2   0.3 0.549 0.0495
 9 mu         0.2   0.4 0.576 0.0445
10 mu         0.2   0.5 0.604 0.0443
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01             1    0.0552      2.63
 2 mu         0.2      1.03             1    0.313       1.61
 3 mu         0.3      1.01             1    0.552       1.53
 4 mu         0.4      0.998            1    0.686       1.20
 5 mu         0.5      0.989            1    0.793       1.17
 6 mu         0.6      0.987            1    0.809       1.14
 7 mu         0.7      0.993            1    0.830       1.11
 8 mu         0.8      1.01             1    0.828       1.13
 9 mu         0.9      1.02             1    0.697       1.45
10 mu_1       0.1      1.04             1    0.134       2.03
11 mu_1       0.2      1.02             1    0.461       1.69
12 mu_1       0.3      1.00             1    0.624       1.42
13 mu_1       0.4      0.992            1    0.707       1.19
14 mu_1       0.5      0.987            1    0.782       1.17
15 mu_1       0.6      0.987            1    0.826       1.13
16 mu_1       0.7      0.995            1    0.833       1.10
17 mu_1       0.8      1.01             1    0.815       1.13
18 mu_1       0.9      1.02             1    0.679       1.48
19 mu_0       0.1      1.01             1    0.0465      2.79
20 mu_0       0.2      1.03             1    0.276       1.65
21 mu_0       0.3      1.02             1    0.522       1.58
22 mu_0       0.4      1.00             1    0.671       1.26
23 mu_0       0.5      0.992            1    0.780       1.18
24 mu_0       0.6      0.986            1    0.783       1.15
25 mu_0       0.7      0.987            1    0.811       1.13
26 mu_0       0.8      0.998            1    0.843       1.13
27 mu_0       0.9      1.02             1    0.760       1.19
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.393    0.0000901  3.65e-17     12.0 
 2 mu         0.2      0.974    0.00623    1.10e-11     27.8 
 3 mu         0.3      1.16     0.0953     1.63e- 8     21.7 
 4 mu         0.4      1.12     0.366      2.90e- 6      7.94
 5 mu         0.5      1.10     0.770      1.61e- 4      3.87
 6 mu         0.6      1.08     1.02       4.28e- 3      4.11
 7 mu         0.7      1.04     0.940      1.78e- 3      3.40
 8 mu         0.8      1.02     0.910      7.92e- 6      3.54
 9 mu         0.9      1.07     0.240      4.35e-10      6.33
10 mu_1       0.1      0.917    0.000551   3.47e-16     24.0 
11 mu_1       0.2      1.28     0.0213     5.52e-11     30.9 
12 mu_1       0.3      1.20     0.184      5.44e- 8     16.1 
13 mu_1       0.4      1.10     0.610      7.24e- 6      5.24
14 mu_1       0.5      1.08     0.882      3.22e- 4      4.27
15 mu_1       0.6      1.05     0.855      7.13e- 3      3.90
16 mu_1       0.7      1.02     0.966      6.35e- 4      3.65
17 mu_1       0.8      1.02     0.756      2.47e- 6      3.62
18 mu_1       0.9      1.08     0.171      1.21e-10      7.03
19 mu_0       0.1      0.335    0.0000298  0            10.7 
20 mu_0       0.2      0.898    0.00175    0            27.1 
21 mu_0       0.3      1.14     0.0397     0            24.1 
22 mu_0       0.4      1.13     0.148      0            10.3 
23 mu_0       0.5      1.12     0.488      0             4.65
24 mu_0       0.6      1.11     0.966      0             4.50
25 mu_0       0.7      1.07     0.971      0             3.20
26 mu_0       0.8      1.01     0.896      0             4.15
27 mu_0       0.9      0.999    0.265      0             4.65
[1] "Total run time was 447.602 seconds"
