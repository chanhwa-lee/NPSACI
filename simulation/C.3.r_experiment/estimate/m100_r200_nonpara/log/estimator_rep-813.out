
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1274"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  7  7  8  5  3  9  7  6 10  7  5  7  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04633 0.34968 0.63582 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
772 502 
[1] "treatment indicator table: "

  0   1 
485 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 228.709 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.173 0.0557
 2 mu         0.1   0.2 0.266 0.0755
 3 mu         0.1   0.3 0.330 0.0841
 4 mu         0.1   0.4 0.469 0.0866
 5 mu         0.1   0.5 0.520 0.0792
 6 mu         0.2   0.1 0.192 0.0632
 7 mu         0.2   0.2 0.269 0.0836
 8 mu         0.2   0.3 0.345 0.0788
 9 mu         0.2   0.4 0.485 0.0664
10 mu         0.2   0.5 0.551 0.0579
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.783        0.642   0.0131       7.41
 2 mu         0.2      0.946        0.977   0.155        3.62
 3 mu         0.3      1.00         1       0.426        2.02
 4 mu         0.4      1.00         1       0.669        1.32
 5 mu         0.5      1.00         1       0.832        1.14
 6 mu         0.6      1.00         1       0.902        1.08
 7 mu         0.7      0.999        1       0.855        1.11
 8 mu         0.8      1.00         1       0.705        1.22
 9 mu         0.9      1.01         1       0.532        1.80
10 mu_1       0.1      0.882        0.989   0.0427       3.40
11 mu_1       0.2      1.00         1       0.270        2.87
12 mu_1       0.3      1.01         1       0.548        1.61
13 mu_1       0.4      1.00         1       0.744        1.24
14 mu_1       0.5      1.00         1       0.875        1.13
15 mu_1       0.6      1.00         1       0.879        1.09
16 mu_1       0.7      0.998        1       0.842        1.11
17 mu_1       0.8      1.00         1       0.686        1.25
18 mu_1       0.9      1.02         1       0.500        1.88
19 mu_0       0.1      0.772        0.593   0.00979      7.99
20 mu_0       0.2      0.932        0.934   0.126        4.18
21 mu_0       0.3      0.996        1       0.373        2.25
22 mu_0       0.4      1.00         1       0.619        1.39
23 mu_0       0.5      1.00         1       0.790        1.19
24 mu_0       0.6      1.00         1       0.903        1.10
25 mu_0       0.7      0.999        1       0.864        1.13
26 mu_0       0.8      0.998        1       0.781        1.15
27 mu_0       0.9      0.997        1       0.495        1.23
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      22.2    0.0000312   2.62e-16   1891.  
 2 mu         0.2      19.0    0.00576     6.88e-11   1293.  
 3 mu         0.3       7.87   0.0926      1.02e- 7    392.  
 4 mu         0.4       2.53   0.344       1.80e- 5     69.1 
 5 mu         0.5       1.22   0.811       1.00e- 3      7.97
 6 mu         0.6       1.07   1.08        2.66e- 2      5.00
 7 mu         0.7       1.08   1.15        5.60e- 3      2.67
 8 mu         0.8       1.20   0.673       1.91e- 5      5.89
 9 mu         0.9       1.92   0.0890      7.44e-10     47.0 
10 mu_1       0.1      28.3    0.000234    2.62e-15   2225.  
11 mu_1       0.2      13.5    0.0159      3.44e-10    760.  
12 mu_1       0.3       4.48   0.187       3.39e- 7    154.  
13 mu_1       0.4       1.63   0.551       4.51e- 5     26.5 
14 mu_1       0.5       1.11   0.989       2.00e- 3      5.52
15 mu_1       0.6       1.08   1.08        4.44e- 2      4.59
16 mu_1       0.7       1.11   1.11        1.09e- 3      3.27
17 mu_1       0.8       1.25   0.544       2.83e- 6      7.05
18 mu_1       0.9       2.02   0.0664      9.72e-11     52.2 
19 mu_0       0.1      21.6    0.00000905  0          1854.  
20 mu_0       0.2      20.4    0.00247     0          1426.  
21 mu_0       0.3       9.32   0.0331      0           495.  
22 mu_0       0.4       3.13   0.215       0           102.  
23 mu_0       0.5       1.32   0.582       0            12.6 
24 mu_0       0.6       1.04   0.939       0             5.63
25 mu_0       0.7       1.02   1.04        0             3.07
26 mu_0       0.8       1.01   1.06        0             4.21
27 mu_0       0.9       1.10   0.210       0             8.65
[1] "Total run time was 232.318 seconds"
