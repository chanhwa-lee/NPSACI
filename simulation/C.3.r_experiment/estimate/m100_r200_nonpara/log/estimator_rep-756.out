
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1211"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  7  8  5  4  6  7  7  9  4  8  7  4  8  1  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04772 0.38397 0.62070 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
740 471 
[1] "treatment indicator table: "

  0   1 
439 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 561
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 319.619 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.348 0.158
 2 mu         0.1   0.2 0.462 0.154
 3 mu         0.1   0.3 0.473 0.186
 4 mu         0.1   0.4 0.461 0.193
 5 mu         0.1   0.5 0.455 0.193
 6 mu         0.2   0.1 0.377 0.149
 7 mu         0.2   0.2 0.476 0.155
 8 mu         0.2   0.3 0.523 0.176
 9 mu         0.2   0.4 0.526 0.171
10 mu         0.2   0.5 0.531 0.165
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.701        0.852 0.0000859      1.65
 2 mu         0.2      0.785        0.936 0.0138         1.68
 3 mu         0.3      0.886        0.955 0.147          1.65
 4 mu         0.4      0.963        1     0.428          1.85
 5 mu         0.5      0.996        1     0.691          1.52
 6 mu         0.6      1.00         1     0.876          1.21
 7 mu         0.7      1.00         1     0.856          1.18
 8 mu         0.8      0.999        1     0.655          1.33
 9 mu         0.9      1.03         1     0.158          2.19
10 mu_1       0.1      0.753        0.922 0.000391       2.12
11 mu_1       0.2      0.848        0.941 0.0319         1.80
12 mu_1       0.3      0.934        0.997 0.232          1.86
13 mu_1       0.4      0.985        1     0.547          1.80
14 mu_1       0.5      1.00         1     0.774          1.41
15 mu_1       0.6      1.00         1     0.862          1.17
16 mu_1       0.7      1.00         1     0.840          1.22
17 mu_1       0.8      0.999        1     0.593          1.34
18 mu_1       0.9      1.03         1     0.134          2.32
19 mu_0       0.1      0.696        0.819 0.0000520      1.67
20 mu_0       0.2      0.769        0.937 0.00926        1.65
21 mu_0       0.3      0.865        0.941 0.111          1.70
22 mu_0       0.4      0.948        0.996 0.350          1.88
23 mu_0       0.5      0.992        1     0.607          1.63
24 mu_0       0.6      1.00         1     0.818          1.28
25 mu_0       0.7      1.00         1     0.852          1.13
26 mu_0       0.8      1.00         1     0.789          1.31
27 mu_0       0.9      0.991        1     0.375          1.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value   max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>       <dbl>
 1 mu         0.1  839052.      0.0000388  2.80e-13 83905065.  
 2 mu         0.2  100707.      0.00339    7.55e- 9 10070308.  
 3 mu         0.3    9108.      0.0555     2.20e- 6   910307.  
 4 mu         0.4     572.      0.291      1.24e- 4    56773.  
 5 mu         0.5      23.7     0.723      2.81e- 3     2132.  
 6 mu         0.6       1.78    1.02       3.61e- 2       38.4 
 7 mu         0.7       1.17    0.971      3.23e- 2        5.03
 8 mu         0.8       1.35    0.705      1.47e- 4       13.5 
 9 mu         0.9       2.15    0.145      5.59e-10       70.0 
10 mu_1       0.1       3.50    0.000213   0             135.  
11 mu_1       0.2       5.66    0.0104     0             333.  
12 mu_1       0.3       5.03    0.110      0             296.  
13 mu_1       0.4       3.13    0.421      0             150.  
14 mu_1       0.5       1.73    0.828      0              47.3 
15 mu_1       0.6       1.19    0.899      0               8.78
16 mu_1       0.7       1.16    0.969      0               4.97
17 mu_1       0.8       1.42    0.562      0              16.8 
18 mu_1       0.9       2.25    0.107      0              77.8 
19 mu_0       0.1  932280.      0.0000107  0        93227850.  
20 mu_0       0.2  125883.      0.00124    0        12587886.  
21 mu_0       0.3   13010.      0.0243     0         1300438.  
22 mu_0       0.4     951.      0.170      0           94622.  
23 mu_0       0.5      45.7     0.551      0            4265.  
24 mu_0       0.6       2.66    0.923      0              96.0 
25 mu_0       0.7       1.19    0.911      0               5.16
26 mu_0       0.8       1.08    0.807      0               5.08
27 mu_0       0.9       1.18    0.164      0              10.2 
[1] "Total run time was 325.478 seconds"
