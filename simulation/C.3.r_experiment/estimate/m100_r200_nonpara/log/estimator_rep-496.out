
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1219"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8  7  4  4 10  6  9  8 10  7  3  1  5  9  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06337 0.38793 0.62030 1.00000 8.00000 
[1] "event indicator table: "

  0   1 
725 494 
[1] "treatment indicator table: "

  0   1 
452 767 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 638.298 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.322 0.0472
 2 mu         0.1   0.2 0.424 0.0854
 3 mu         0.1   0.3 0.466 0.0973
 4 mu         0.1   0.4 0.516 0.122 
 5 mu         0.1   0.5 0.574 0.0994
 6 mu         0.2   0.1 0.291 0.0368
 7 mu         0.2   0.2 0.395 0.0701
 8 mu         0.2   0.3 0.439 0.0766
 9 mu         0.2   0.4 0.490 0.0997
10 mu         0.2   0.5 0.544 0.0786
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02             1    0.0297      5.84
 2 mu         0.2      0.997            1    0.246       2.69
 3 mu         0.3      1.00             1    0.600       1.56
 4 mu         0.4      1.00             1    0.745       1.35
 5 mu         0.5      1.00             1    0.824       1.21
 6 mu         0.6      1.00             1    0.863       1.16
 7 mu         0.7      1.00             1    0.892       1.13
 8 mu         0.8      1.00             1    0.762       1.34
 9 mu         0.9      1.00             1    0.522       1.73
10 mu_1       0.1      0.990            1    0.0946      3.86
11 mu_1       0.2      0.993            1    0.429       1.86
12 mu_1       0.3      1.00             1    0.641       1.44
13 mu_1       0.4      1.00             1    0.807       1.28
14 mu_1       0.5      1.00             1    0.835       1.21
15 mu_1       0.6      1.00             1    0.881       1.15
16 mu_1       0.7      1.00             1    0.867       1.17
17 mu_1       0.8      1.00             1    0.722       1.39
18 mu_1       0.9      1.00             1    0.495       1.81
19 mu_0       0.1      1.02             1    0.0225      6.25
20 mu_0       0.2      0.998            1    0.201       2.90
21 mu_0       0.3      1.00             1    0.525       1.70
22 mu_0       0.4      1.00             1    0.685       1.40
23 mu_0       0.5      1.00             1    0.812       1.25
24 mu_0       0.6      0.999            1    0.837       1.18
25 mu_0       0.7      0.999            1    0.869       1.15
26 mu_0       0.8      1.00             1    0.848       1.15
27 mu_0       0.9      1.00             1    0.747       1.31
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.70     0.000109   2.35e-15    193.  
 2 mu         0.2      3.16     0.00668    5.47e-10    209.  
 3 mu         0.3      1.78     0.0710     7.07e- 7     72.8 
 4 mu         0.4      1.21     0.341      1.06e- 4     12.6 
 5 mu         0.5      1.06     0.724      2.42e- 3      4.34
 6 mu         0.6      0.988    0.950      9.55e- 3      2.67
 7 mu         0.7      1.09     1.07       1.52e- 4      2.59
 8 mu         0.8      1.60     0.824      3.46e- 7     10.2 
 9 mu         0.9      2.89     0.117      7.51e-12     47.2 
10 mu_1       0.1      4.20     0.000895   2.22e-14    290.  
11 mu_1       0.2      2.72     0.0278     2.59e- 9    157.  
12 mu_1       0.3      1.45     0.171      2.23e- 6     36.4 
13 mu_1       0.4      1.14     0.569      2.55e- 4      6.58
14 mu_1       0.5      1.04     0.973      4.84e- 3      3.38
15 mu_1       0.6      1.00     1.00       2.51e- 3      2.79
16 mu_1       0.7      1.16     1.13       3.43e- 5      3.17
17 mu_1       0.8      1.74     0.667      6.82e- 8     12.8 
18 mu_1       0.9      3.05     0.0869     1.32e-12     52.4 
19 mu_0       0.1      2.54     0.0000379  0           183.  
20 mu_0       0.2      3.26     0.00193    0           222.  
21 mu_0       0.3      1.92     0.0322     0            88.4 
22 mu_0       0.4      1.26     0.176      0            17.8 
23 mu_0       0.5      1.09     0.477      0             5.47
24 mu_0       0.6      0.970    0.924      0             3.36
25 mu_0       0.7      0.907    0.859      0             2.79
26 mu_0       0.8      1.03     0.761      0             4.08
27 mu_0       0.9      1.52     0.0881     0            20.6 
[1] "Total run time was 643.703 seconds"
