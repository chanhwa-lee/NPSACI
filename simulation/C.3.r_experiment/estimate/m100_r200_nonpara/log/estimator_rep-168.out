
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1302"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  8  7  5  3  7  7  7  4  7  9  7  8  5  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06308 0.46513 0.71640 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
763 539 
[1] "treatment indicator table: "

  0   1 
416 886 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 1326.996 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.155 0.0584
 2 mu         0.1   0.2 0.203 0.114 
 3 mu         0.1   0.3 0.288 0.0654
 4 mu         0.1   0.4 0.352 0.0660
 5 mu         0.1   0.5 0.389 0.122 
 6 mu         0.2   0.1 0.181 0.0517
 7 mu         0.2   0.2 0.210 0.0931
 8 mu         0.2   0.3 0.290 0.0619
 9 mu         0.2   0.4 0.379 0.0521
10 mu         0.2   0.5 0.409 0.0908
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.683        0.671 0.0000487      2.71
 2 mu         0.2      0.805        0.912 0.00843        2.45
 3 mu         0.3      0.894        0.948 0.0999         2.61
 4 mu         0.4      0.948        0.984 0.375          1.72
 5 mu         0.5      0.980        1     0.734          1.16
 6 mu         0.6      0.997        1     0.886          1.11
 7 mu         0.7      1.00         1     0.900          1.10
 8 mu         0.8      1.00         1     0.842          1.26
 9 mu         0.9      1.02         1.01  0.627          1.33
10 mu_1       0.1      0.775        0.904 0.000223       2.64
11 mu_1       0.2      0.869        0.969 0.0198         3.02
12 mu_1       0.3      0.927        0.965 0.162          2.33
13 mu_1       0.4      0.965        1     0.482          1.42
14 mu_1       0.5      0.989        0.999 0.814          1.15
15 mu_1       0.6      1.00         1     0.897          1.11
16 mu_1       0.7      1.00         1     0.886          1.12
17 mu_1       0.8      1.00         1     0.832          1.27
18 mu_1       0.9      1.02         1     0.598          1.39
19 mu_0       0.1      0.673        0.615 0.0000293      2.90
20 mu_0       0.2      0.789        0.900 0.00559        2.31
21 mu_0       0.3      0.879        0.947 0.0733         2.73
22 mu_0       0.4      0.937        0.965 0.305          1.92
23 mu_0       0.5      0.972        1     0.654          1.24
24 mu_0       0.6      0.992        1     0.837          1.14
25 mu_0       0.7      0.999        1     0.889          1.12
26 mu_0       0.8      0.998        1     0.848          1.19
27 mu_0       0.9      1.00         1     0.765          1.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.924   0.0000101   4.72e-19     44.6 
 2 mu         0.2      1.59    0.00160     4.95e-13     49.8 
 3 mu         0.3      1.89    0.0323      1.65e- 9     57.8 
 4 mu         0.4      1.79    0.172       5.19e- 7     39.9 
 5 mu         0.5      1.45    0.522       4.50e- 5     18.1 
 6 mu         0.6      1.15    0.950       1.73e- 3      5.26
 7 mu         0.7      1.05    1.05        4.12e- 3      3.14
 8 mu         0.8      1.31    0.937       4.14e- 5     16.3 
 9 mu         0.9      2.79    0.214       1.28e- 8     95.2 
10 mu_1       0.1      1.65    0.0000688   4.72e-18     63.8 
11 mu_1       0.2      1.87    0.00631     2.47e-12     68.0 
12 mu_1       0.3      1.89    0.0722      5.49e- 9     52.5 
13 mu_1       0.4      1.64    0.304       1.30e- 6     27.2 
14 mu_1       0.5      1.31    0.722       9.00e- 5      9.89
15 mu_1       0.6      1.08    1.05        2.88e- 3      3.31
16 mu_1       0.7      1.05    1.12        8.40e- 4      3.31
17 mu_1       0.8      1.38    0.788       7.40e- 6     20.3 
18 mu_1       0.9      2.97    0.161       2.03e- 9    106.  
19 mu_0       0.1      0.843   0.00000301  0            42.5 
20 mu_0       0.2      1.52    0.000610    0            46.6 
21 mu_0       0.3      1.89    0.00953     0            60.1 
22 mu_0       0.4      1.89    0.0832      0            48.4 
23 mu_0       0.5      1.59    0.307       0            26.4 
24 mu_0       0.6      1.26    0.742       0             9.56
25 mu_0       0.7      1.06    0.983       0             2.94
26 mu_0       0.8      1.02    1.13        0             3.53
27 mu_0       0.9      1.12    0.340       0            10.7 
[1] "Total run time was 1335.195 seconds"
