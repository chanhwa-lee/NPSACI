
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1345"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  2  6  6  5  4  6  6  7  3 10  9  6 13  8  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02332 0.29233 0.57524 0.97823 5.00000 
[1] "event indicator table: "

  0   1 
808 537 
[1] "treatment indicator table: "

  0   1 
502 843 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.513 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.437 0.0369
 2 mu         0.1   0.2 0.619 0.0868
 3 mu         0.1   0.3 0.706 0.0870
 4 mu         0.1   0.4 0.746 0.0800
 5 mu         0.1   0.5 0.787 0.0774
 6 mu         0.2   0.1 0.391 0.0313
 7 mu         0.2   0.2 0.525 0.0562
 8 mu         0.2   0.3 0.620 0.0741
 9 mu         0.2   0.4 0.661 0.0677
10 mu         0.2   0.5 0.699 0.0614
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         1        0.0738      5.58
 2 mu         0.2      1.00         1        0.426       1.76
 3 mu         0.3      1.00         1        0.704       1.55
 4 mu         0.4      1.00         1        0.729       1.35
 5 mu         0.5      1.01         1        0.827       1.18
 6 mu         0.6      1.00         1        0.838       1.14
 7 mu         0.7      0.994        1        0.871       1.10
 8 mu         0.8      0.992        1        0.801       1.21
 9 mu         0.9      0.999        1        0.560       1.68
10 mu_1       0.1      0.969        0.997    0.198       1.66
11 mu_1       0.2      0.989        1        0.608       1.64
12 mu_1       0.3      0.999        1        0.601       1.49
13 mu_1       0.4      1.01         1        0.791       1.29
14 mu_1       0.5      1.01         1        0.830       1.19
15 mu_1       0.6      1.00         1        0.835       1.13
16 mu_1       0.7      0.993        1        0.855       1.10
17 mu_1       0.8      0.992        1        0.793       1.24
18 mu_1       0.9      0.999        1        0.545       1.74
19 mu_0       0.1      1.06         0.992    0.0599      6.04
20 mu_0       0.2      1.01         1        0.375       2.04
21 mu_0       0.3      1.00         1        0.679       1.57
22 mu_0       0.4      1.00         1        0.688       1.39
23 mu_0       0.5      1.01         1        0.809       1.22
24 mu_0       0.6      1.01         1        0.836       1.17
25 mu_0       0.7      0.998        1        0.844       1.11
26 mu_0       0.8      0.990        1        0.821       1.13
27 mu_0       0.9      0.995        1        0.690       1.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.95    0.0000101   2.45e-15     92.3 
 2 mu         0.2      1.66    0.00224     2.86e-10     50.0 
 3 mu         0.3      1.08    0.0595      2.46e- 7     15.2 
 4 mu         0.4      0.911   0.349       2.81e- 5      6.79
 5 mu         0.5      0.989   0.853       1.04e- 3      4.06
 6 mu         0.6      1.13    1.07        3.42e- 3      3.34
 7 mu         0.7      1.17    1.21        3.50e- 5      4.52
 8 mu         0.8      1.06    0.716       4.64e- 8      5.10
 9 mu         0.9      0.940   0.0672      4.48e-13     13.3 
10 mu_1       0.1      2.43    0.0000658   2.31e-14     97.1 
11 mu_1       0.2      1.40    0.00704     1.35e- 9     29.4 
12 mu_1       0.3      0.969   0.118       7.75e- 7      7.84
13 mu_1       0.4      0.912   0.550       6.63e- 5      5.94
14 mu_1       0.5      1.03    0.967       1.96e- 3      3.79
15 mu_1       0.6      1.16    1.09        6.00e- 4      3.25
16 mu_1       0.7      1.17    1.15        5.26e- 6      4.97
17 mu_1       0.8      1.04    0.581       6.11e- 9      4.90
18 mu_1       0.9      0.937   0.0492      5.24e-14     14.8 
19 mu_0       0.1      1.89    0.00000240  0            91.7 
20 mu_0       0.2      1.72    0.00103     0            55.7 
21 mu_0       0.3      1.13    0.0318      0            19.1 
22 mu_0       0.4      0.911   0.216       0             7.35
23 mu_0       0.5      0.951   0.663       0             4.33
24 mu_0       0.6      1.10    1.02        0             3.71
25 mu_0       0.7      1.19    1.10        0             3.48
26 mu_0       0.8      1.15    0.965       0             5.88
27 mu_0       0.9      0.961   0.155       0             5.30
[1] "Total run time was 203.902 seconds"
