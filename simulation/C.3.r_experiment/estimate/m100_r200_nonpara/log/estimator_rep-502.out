
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1170"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  7 10  5 11  7  1  6  7  9  7  5  6  4  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02316 0.33884 0.62188 1.00000 5.21268 
[1] "event indicator table: "

  0   1 
700 470 
[1] "treatment indicator table: "

  0   1 
432 738 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 565
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 191.369 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.441 0.112
 2 mu         0.1   0.2 0.478 0.115
 3 mu         0.1   0.3 0.595 0.149
 4 mu         0.1   0.4 0.691 0.183
 5 mu         0.1   0.5 0.730 0.199
 6 mu         0.2   0.1 0.420 0.103
 7 mu         0.2   0.2 0.471 0.109
 8 mu         0.2   0.3 0.565 0.134
 9 mu         0.2   0.4 0.644 0.164
10 mu         0.2   0.5 0.690 0.183
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.797        0.720  0.000185      6.95
 2 mu         0.2      0.914        1      0.0199        6.84
 3 mu         0.3      0.983        1      0.194         4.01
 4 mu         0.4      1.01         1      0.497         3.15
 5 mu         0.5      1.02         1      0.669         2.36
 6 mu         0.6      1.01         1      0.802         1.50
 7 mu         0.7      1.01         1      0.897         1.19
 8 mu         0.8      1.00         1      0.719         1.40
 9 mu         0.9      0.991        1      0.327         2.19
10 mu_1       0.1      0.878        0.943  0.000930      7.65
11 mu_1       0.2      0.975        1      0.0505        6.22
12 mu_1       0.3      1.01         1      0.330         3.31
13 mu_1       0.4      1.02         1      0.614         3.00
14 mu_1       0.5      1.02         1      0.743         2.03
15 mu_1       0.6      1.01         1      0.852         1.32
16 mu_1       0.7      1.01         1      0.843         1.23
17 mu_1       0.8      1.00         1      0.666         1.43
18 mu_1       0.9      0.989        1      0.301         2.28
19 mu_0       0.1      0.788        0.664  0.000102      7.62
20 mu_0       0.2      0.899        1      0.0122        7.00
21 mu_0       0.3      0.971        1      0.134         4.56
22 mu_0       0.4      1.01         1      0.419         3.25
23 mu_0       0.5      1.02         1      0.594         2.69
24 mu_0       0.6      1.01         1      0.728         1.76
25 mu_0       0.7      1.01         1      0.835         1.24
26 mu_0       0.8      1.01         1      0.847         1.29
27 mu_0       0.9      1.01         1      0.568         1.65
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value   max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>       <dbl>
 1 mu         0.1  316188.      0.0000695  4.47e-15 31618193.  
 2 mu         0.2  151799.      0.00753    5.86e-10 15179296.  
 3 mu         0.3   30878.      0.0758     5.77e- 7  3087302.  
 4 mu         0.4    3426.      0.331      7.67e- 5   342306.  
 5 mu         0.5     203.      0.742      3.41e- 3    20090.  
 6 mu         0.6       6.64    0.998      7.56e- 2      521.  
 7 mu         0.7       1.28    1.08       5.61e- 2        4.05
 8 mu         0.8       1.54    0.694      1.90e- 3       10.1 
 9 mu         0.9       2.91    0.0908     1.71e- 8       74.5 
10 mu_1       0.1  316189.      0.000540   4.47e-14 31618193.  
11 mu_1       0.2   75901.      0.0278     2.93e- 9  7589648.  
12 mu_1       0.3   10295.      0.171      1.92e- 6  1029101.  
13 mu_1       0.4     858.      0.519      1.92e- 4    85576.  
14 mu_1       0.5      41.8     0.919      6.82e- 3     4018.  
15 mu_1       0.6       2.17    1.11       1.26e- 1       86.9 
16 mu_1       0.7       1.26    1.06       2.67e- 2        4.36
17 mu_1       0.8       1.64    0.526      4.42e- 4       12.6 
18 mu_1       0.9       3.08    0.0569     1.90e- 9       82.8 
19 mu_0       0.1  316188.      0.0000236  0        31618193.  
20 mu_0       0.2  170773.      0.00289    0        17076708.  
21 mu_0       0.3   39699.      0.0392     0         3969388.  
22 mu_0       0.4    5138.      0.174      0          513459.  
23 mu_0       0.5     364.      0.538      0           36161.  
24 mu_0       0.6      13.4     0.952      0            1173.  
25 mu_0       0.7       1.34    1.05       0              12.0 
26 mu_0       0.8       1.16    0.781      0               5.62
27 mu_0       0.9       1.44    0.157      0              19.4 
[1] "Total run time was 194.69 seconds"
