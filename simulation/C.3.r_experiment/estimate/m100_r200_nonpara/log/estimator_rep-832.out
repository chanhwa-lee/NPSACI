
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1238"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4 12  8  5  3  7  7  7  2  7  5  4 10  8  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03735 0.30639 0.60693 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
730 508 
[1] "treatment indicator table: "

  0   1 
501 737 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 235.068 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.248 0.116 
 2 mu         0.1   0.2 0.293 0.139 
 3 mu         0.1   0.3 0.312 0.153 
 4 mu         0.1   0.4 0.400 0.188 
 5 mu         0.1   0.5 0.400 0.196 
 6 mu         0.2   0.1 0.284 0.0752
 7 mu         0.2   0.2 0.360 0.0687
 8 mu         0.2   0.3 0.390 0.0666
 9 mu         0.2   0.4 0.484 0.0992
10 mu         0.2   0.5 0.491 0.100 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.888        0.751  0.00102      10.2 
 2 mu         0.2      0.942        1      0.0426        3.08
 3 mu         0.3      0.980        1      0.229         1.88
 4 mu         0.4      0.995        1      0.517         1.40
 5 mu         0.5      0.998        1      0.757         1.14
 6 mu         0.6      1.00         1      0.898         1.09
 7 mu         0.7      1.01         1      0.859         1.21
 8 mu         0.8      1.01         1      0.703         1.48
 9 mu         0.9      0.999        1      0.429         2.05
10 mu_1       0.1      0.925        0.948  0.00371       5.74
11 mu_1       0.2      0.971        1      0.0829        2.23
12 mu_1       0.3      0.993        1      0.321         1.58
13 mu_1       0.4      0.998        1      0.602         1.24
14 mu_1       0.5      0.998        1      0.806         1.11
15 mu_1       0.6      1.00         1      0.888         1.11
16 mu_1       0.7      1.01         1      0.818         1.24
17 mu_1       0.8      1.01         1      0.666         1.54
18 mu_1       0.9      0.997        1      0.393         2.21
19 mu_0       0.1      0.884        0.708  0.000716     10.7 
20 mu_0       0.2      0.935        1      0.0325        3.53
21 mu_0       0.3      0.974        1      0.189         2.01
22 mu_0       0.4      0.994        1      0.461         1.55
23 mu_0       0.5      0.999        1      0.709         1.19
24 mu_0       0.6      0.999        1      0.877         1.10
25 mu_0       0.7      1.00         1      0.893         1.16
26 mu_0       0.8      1.01         1      0.848         1.29
27 mu_0       0.9      1.01         1      0.665         1.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      59.3     0.000146   6.01e-15   4888.  
 2 mu         0.2      11.8     0.0126     1.24e- 9    742.  
 3 mu         0.3       3.24    0.146      1.41e- 6     87.7 
 4 mu         0.4       1.71    0.527      1.70e- 4     27.2 
 5 mu         0.5       1.26    0.857      6.30e- 3      9.21
 6 mu         0.6       1.14    1.09       1.13e- 2      5.10
 7 mu         0.7       1.27    1.09       1.14e- 4      7.01
 8 mu         0.8       1.82    0.526      1.73e- 7     39.6 
 9 mu         0.9       3.51    0.0651     2.64e-12    130.  
10 mu_1       0.1       5.88    0.000741   0           515.  
11 mu_1       0.2       2.27    0.0254     0            78.2 
12 mu_1       0.3       1.76    0.175      0            41.9 
13 mu_1       0.4       1.39    0.733      0            20.4 
14 mu_1       0.5       1.17    0.958      0             8.73
15 mu_1       0.6       1.16    1.09       0             4.03
16 mu_1       0.7       1.34    1.00       0             9.42
17 mu_1       0.8       1.96    0.410      0            46.6 
18 mu_1       0.9       3.69    0.0412     0           136.  
19 mu_0       0.1      65.2     0.0000477  0          5431.  
20 mu_0       0.2      14.2     0.00677    0           928.  
21 mu_0       0.3       3.87    0.0807     0           125.  
22 mu_0       0.4       1.92    0.339      0            31.8 
23 mu_0       0.5       1.34    0.749      0            11.3 
24 mu_0       0.6       1.12    1.05       0             6.72
25 mu_0       0.7       1.10    1.04       0             4.03
26 mu_0       0.8       1.24    0.860      0            11.6 
27 mu_0       0.9       1.96    0.149      0            76.6 
[1] "Total run time was 239.677 seconds"
