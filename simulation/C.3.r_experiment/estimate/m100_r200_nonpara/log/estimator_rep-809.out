
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1307"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  7  2  6  8  6 10  2 10  8  7  5  7  7  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04586 0.34609 0.61068 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
771 536 
[1] "treatment indicator table: "

  0   1 
497 810 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 251.506 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.494 0.0799
 2 mu         0.1   0.2 0.586 0.0868
 3 mu         0.1   0.3 0.622 0.0716
 4 mu         0.1   0.4 0.629 0.0682
 5 mu         0.1   0.5 0.657 0.0604
 6 mu         0.2   0.1 0.404 0.0495
 7 mu         0.2   0.2 0.482 0.0580
 8 mu         0.2   0.3 0.526 0.0544
 9 mu         0.2   0.4 0.547 0.0633
10 mu         0.2   0.5 0.595 0.0419
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.999         1       0.0988      2.32
 2 mu         0.2      1.01          1.00    0.410       1.43
 3 mu         0.3      0.998         1       0.672       1.29
 4 mu         0.4      0.991         1       0.759       1.22
 5 mu         0.5      0.993         1.00    0.813       1.17
 6 mu         0.6      0.996         1       0.843       1.15
 7 mu         0.7      1.00          1       0.855       1.14
 8 mu         0.8      1.02          1.00    0.843       1.23
 9 mu         0.9      1.03          1       0.696       1.39
10 mu_1       0.1      1.00          1       0.244       1.84
11 mu_1       0.2      1.00          1       0.547       1.45
12 mu_1       0.3      0.993         1       0.754       1.28
13 mu_1       0.4      0.991         1       0.765       1.21
14 mu_1       0.5      0.993         1       0.825       1.14
15 mu_1       0.6      0.998         1       0.826       1.15
16 mu_1       0.7      1.01          1       0.871       1.16
17 mu_1       0.8      1.02          1.01    0.837       1.23
18 mu_1       0.9      1.03          1.00    0.664       1.42
19 mu_0       0.1      0.999         1       0.0826      2.42
20 mu_0       0.2      1.01          1.01    0.375       1.49
21 mu_0       0.3      0.999         1       0.625       1.32
22 mu_0       0.4      0.992         1       0.754       1.25
23 mu_0       0.5      0.992         1       0.775       1.20
24 mu_0       0.6      0.995         1       0.847       1.14
25 mu_0       0.7      0.999         1       0.816       1.13
26 mu_0       0.8      1.01          1       0.866       1.21
27 mu_0       0.9      1.03          1.01    0.824       1.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.921    0.0000874  2.65e-15     23.0 
 2 mu         0.2      1.02     0.0107     4.83e-10     18.1 
 3 mu         0.3      0.947    0.122      4.17e- 7     13.7 
 4 mu         0.4      0.966    0.552      4.75e- 5      5.94
 5 mu         0.5      1.00     0.911      1.69e- 3      2.80
 6 mu         0.6      0.999    0.998      2.73e- 3      2.95
 7 mu         0.7      0.989    0.871      3.26e- 5      3.32
 8 mu         0.8      1.07     0.666      4.94e- 8      4.66
 9 mu         0.9      1.52     0.0661     5.36e-13     20.6 
10 mu_1       0.1      1.23     0.000547   2.39e-14     27.9 
11 mu_1       0.2      1.00     0.0340     2.28e- 9     18.8 
12 mu_1       0.3      0.945    0.247      1.31e- 6      9.76
13 mu_1       0.4      0.986    0.600      1.12e- 4      3.50
14 mu_1       0.5      1.01     0.993      3.32e- 3      2.90
15 mu_1       0.6      0.996    1.02       6.83e- 4      2.85
16 mu_1       0.7      0.992    0.862      6.98e- 6      3.49
17 mu_1       0.8      1.10     0.510      9.26e- 9      5.18
18 mu_1       0.9      1.58     0.0438     8.94e-14     22.9 
19 mu_0       0.1      0.887    0.0000372  0            23.6 
20 mu_0       0.2      1.03     0.00496    0            19.6 
21 mu_0       0.3      0.947    0.0645     0            15.3 
22 mu_0       0.4      0.952    0.330      0             7.78
23 mu_0       0.5      0.993    0.749      0             3.49
24 mu_0       0.6      1.00     1.00       0             3.10
25 mu_0       0.7      0.983    0.908      0             2.91
26 mu_0       0.8      0.949    0.652      0             3.73
27 mu_0       0.9      0.998    0.117      0             7.25
[1] "Total run time was 256.789 seconds"
