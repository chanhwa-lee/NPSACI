
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1277"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  9  4  7  6  4  6  6 12  4  6 10  8  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0414  0.3691  0.6081  1.0000  5.2639 
[1] "event indicator table: "

  0   1 
762 515 
[1] "treatment indicator table: "

  0   1 
472 805 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 195.475 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.278 0.118 
 2 mu         0.1   0.2 0.358 0.151 
 3 mu         0.1   0.3 0.430 0.149 
 4 mu         0.1   0.4 0.458 0.128 
 5 mu         0.1   0.5 0.608 0.109 
 6 mu         0.2   0.1 0.319 0.0778
 7 mu         0.2   0.2 0.385 0.0949
 8 mu         0.2   0.3 0.472 0.0954
 9 mu         0.2   0.4 0.513 0.0823
10 mu         0.2   0.5 0.654 0.0735
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.744        0.550   0.00328      4.64
 2 mu         0.2      0.930        1       0.0801       3.40
 3 mu         0.3      0.981        1       0.296        2.08
 4 mu         0.4      0.991        1       0.501        1.44
 5 mu         0.5      0.996        1       0.695        1.18
 6 mu         0.6      0.997        1       0.890        1.07
 7 mu         0.7      0.994        1       0.903        1.10
 8 mu         0.8      0.994        1       0.686        1.42
 9 mu         0.9      0.992        1       0.320        1.88
10 mu_1       0.1      0.885        0.962   0.0126       4.09
11 mu_1       0.2      0.979        1       0.161        2.96
12 mu_1       0.3      0.991        1       0.407        1.69
13 mu_1       0.4      0.995        1       0.548        1.31
14 mu_1       0.5      0.997        1       0.753        1.14
15 mu_1       0.6      0.997        1       0.909        1.06
16 mu_1       0.7      0.994        1       0.875        1.15
17 mu_1       0.8      0.994        1       0.655        1.48
18 mu_1       0.9      0.992        1       0.293        1.92
19 mu_0       0.1      0.728        0.515   0.00224      5.05
20 mu_0       0.2      0.918        1       0.0600       3.51
21 mu_0       0.3      0.976        1       0.241        2.24
22 mu_0       0.4      0.988        1       0.470        1.52
23 mu_0       0.5      0.994        1       0.637        1.21
24 mu_0       0.6      0.997        1       0.836        1.11
25 mu_0       0.7      0.996        1       0.891        1.06
26 mu_0       0.8      0.991        1       0.807        1.19
27 mu_0       0.9      0.991        1       0.562        1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.60     0.0000272  1.01e-17    117.  
 2 mu         0.2      3.34     0.00685    1.06e-11    157.  
 3 mu         0.3      2.69     0.101      3.53e- 8    106.  
 4 mu         0.4      1.82     0.330      1.11e- 5     47.1 
 5 mu         0.5      1.26     0.904      9.65e- 4     14.3 
 6 mu         0.6      1.03     0.968      3.70e- 2      2.97
 7 mu         0.7      1.02     1.04       1.28e- 2      2.77
 8 mu         0.8      1.30     0.536      1.47e- 4     11.7 
 9 mu         0.9      2.71     0.0511     3.64e- 8    123.  
10 mu_1       0.1      4.22     0.000201   1.01e-16    206.  
11 mu_1       0.2      3.09     0.0211     5.31e-11    143.  
12 mu_1       0.3      2.00     0.248      1.18e- 7     64.4 
13 mu_1       0.4      1.35     0.577      2.78e- 5     21.4 
14 mu_1       0.5      1.06     0.965      1.93e- 3      5.19
15 mu_1       0.6      0.979    0.979      6.17e- 2      2.73
16 mu_1       0.7      1.03     1.01       5.34e- 3      3.39
17 mu_1       0.8      1.37     0.455      5.80e- 5     14.6 
18 mu_1       0.9      2.86     0.0375     1.28e- 8    137.  
19 mu_0       0.1      2.42     0.0000132  0           114.  
20 mu_0       0.2      3.41     0.00363    0           161.  
21 mu_0       0.3      2.99     0.0373     0           124.  
22 mu_0       0.4      2.14     0.187      0            64.3 
23 mu_0       0.5      1.46     0.656      0            23.4 
24 mu_0       0.6      1.11     1.06       0             5.64
25 mu_0       0.7      0.988    1.01       0             2.39
26 mu_0       0.8      1.02     0.911      0             4.36
27 mu_0       0.9      1.33     0.155      0            11.7 
[1] "Total run time was 201.75 seconds"
