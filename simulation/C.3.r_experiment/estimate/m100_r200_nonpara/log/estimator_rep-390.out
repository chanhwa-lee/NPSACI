
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1200"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5 10  5  5  6  9 10 14  5  9  2  3  6  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04769 0.36986 0.63248 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
714 486 
[1] "treatment indicator table: "

  0   1 
432 768 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 589
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 611
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 565.259 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.539 0.0811
 2 mu         0.1   0.2 0.571 0.0652
 3 mu         0.1   0.3 0.609 0.0523
 4 mu         0.1   0.4 0.635 0.0503
 5 mu         0.1   0.5 0.703 0.0693
 6 mu         0.2   0.1 0.420 0.0624
 7 mu         0.2   0.2 0.458 0.0510
 8 mu         0.2   0.3 0.505 0.0314
 9 mu         0.2   0.4 0.545 0.0286
10 mu         0.2   0.5 0.598 0.0467
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.14          1       0.113       4.26
 2 mu         0.2      1.05          1       0.369       2.07
 3 mu         0.3      1.02          1       0.644       1.61
 4 mu         0.4      1.00          1       0.781       1.34
 5 mu         0.5      1.00          1       0.838       1.21
 6 mu         0.6      0.998         1       0.905       1.15
 7 mu         0.7      0.997         1       0.913       1.10
 8 mu         0.8      0.993         1       0.722       1.15
 9 mu         0.9      0.995         1       0.653       1.48
10 mu_1       0.1      1.06          1       0.299       1.90
11 mu_1       0.2      1.02          1       0.573       1.63
12 mu_1       0.3      1.01          1       0.750       1.43
13 mu_1       0.4      1.00          1       0.780       1.30
14 mu_1       0.5      0.999         1       0.857       1.17
15 mu_1       0.6      0.998         1       0.909       1.15
16 mu_1       0.7      0.996         1       0.891       1.11
17 mu_1       0.8      0.993         1       0.701       1.16
18 mu_1       0.9      0.995         1       0.660       1.50
19 mu_0       0.1      1.15          1       0.0925      4.66
20 mu_0       0.2      1.06          1       0.313       2.19
21 mu_0       0.3      1.02          1.00    0.569       1.70
22 mu_0       0.4      1.01          1       0.746       1.41
23 mu_0       0.5      1.00          1       0.787       1.26
24 mu_0       0.6      0.999         1       0.877       1.18
25 mu_0       0.7      0.998         1       0.897       1.15
26 mu_0       0.8      0.996         1       0.809       1.14
27 mu_0       0.9      0.996         1       0.594       1.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.918    0.000154   5.22e-15     39.6 
 2 mu         0.2      1.04     0.0173     6.08e-10     24.4 
 3 mu         0.3      0.992    0.109      5.24e- 7     12.7 
 4 mu         0.4      1.05     0.476      5.98e- 5      7.16
 5 mu         0.5      1.14     0.921      2.21e- 3      4.75
 6 mu         0.6      1.12     1.15       2.12e- 2      3.20
 7 mu         0.7      1.03     1.10       6.86e- 4      2.86
 8 mu         0.8      1.00     0.730      4.60e- 6      4.09
 9 mu         0.9      1.24     0.105      7.11e-10     15.2 
10 mu_1       0.1      1.26     0.000823   4.93e-14     36.0 
11 mu_1       0.2      1.02     0.0557     2.87e- 9     16.5 
12 mu_1       0.3      0.979    0.268      1.65e- 6      9.74
13 mu_1       0.4      1.08     0.650      1.41e- 4      5.96
14 mu_1       0.5      1.15     1.01       4.18e- 3      4.39
15 mu_1       0.6      1.10     1.17       4.71e- 3      2.87
16 mu_1       0.7      1.00     1.06       1.31e- 4      2.81
17 mu_1       0.8      1.01     0.557      7.67e- 7      4.83
18 mu_1       0.9      1.26     0.0737     1.05e-10     15.9 
19 mu_0       0.1      0.879    0.0000757  0            40.0 
20 mu_0       0.2      1.04     0.00619    0            27.7 
21 mu_0       0.3      0.998    0.0521     0            13.9 
22 mu_0       0.4      1.03     0.320      0             8.24
23 mu_0       0.5      1.12     0.735      0             5.42
24 mu_0       0.6      1.16     1.10       0             3.69
25 mu_0       0.7      1.09     1.09       0             2.98
26 mu_0       0.8      0.978    1.03       0             2.89
27 mu_0       0.9      1.08     0.250      0             8.42
[1] "Total run time was 572.454 seconds"
