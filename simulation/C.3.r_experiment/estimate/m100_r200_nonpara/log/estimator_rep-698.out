
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1267"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  9  3  5  4  7  6 10  4  9  9  5  8  4  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02496 0.31634 0.56486 0.95107 4.00000 
[1] "event indicator table: "

  0   1 
745 522 
[1] "treatment indicator table: "

  0   1 
515 752 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 200.624 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.476 0.163 
 2 mu         0.1   0.2 0.584 0.186 
 3 mu         0.1   0.3 0.654 0.210 
 4 mu         0.1   0.4 0.662 0.223 
 5 mu         0.1   0.5 0.670 0.227 
 6 mu         0.2   0.1 0.358 0.0879
 7 mu         0.2   0.2 0.462 0.0820
 8 mu         0.2   0.3 0.512 0.0967
 9 mu         0.2   0.4 0.525 0.0988
10 mu         0.2   0.5 0.534 0.0995
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.20         0.811   0.00651     49.7 
 2 mu         0.2      1.01         0.947   0.139       17.5 
 3 mu         0.3      0.964        0.970   0.483        4.26
 4 mu         0.4      0.978        0.998   0.703        1.37
 5 mu         0.5      0.993        1       0.902        1.12
 6 mu         0.6      0.998        1       0.862        1.11
 7 mu         0.7      1.00         1       0.832        1.17
 8 mu         0.8      1.01         1       0.612        2.22
 9 mu         0.9      1.05         0.976   0.159       11.0 
10 mu_1       0.1      1.12         0.930   0.0226      31.3 
11 mu_1       0.2      0.957        0.987   0.253        6.05
12 mu_1       0.3      0.965        1.00    0.568        1.62
13 mu_1       0.4      0.984        0.993   0.775        1.16
14 mu_1       0.5      0.995        1.00    0.883        1.11
15 mu_1       0.6      0.998        1       0.865        1.12
16 mu_1       0.7      1.00         1       0.791        1.23
17 mu_1       0.8      1.01         1       0.573        2.52
18 mu_1       0.9      1.05         0.971   0.138       12.1 
19 mu_0       0.1      1.21         0.797   0.00472     51.7 
20 mu_0       0.2      1.03         0.921   0.110       20.3 
21 mu_0       0.3      0.964        0.969   0.420        5.40
22 mu_0       0.4      0.973        0.995   0.655        1.62
23 mu_0       0.5      0.990        0.996   0.859        1.14
24 mu_0       0.6      0.998        1       0.857        1.11
25 mu_0       0.7      0.999        1       0.872        1.15
26 mu_0       0.8      1.00         1       0.769        1.25
27 mu_0       0.9      0.986        1       0.342        2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       5.64     0.000367  5.21e-17    356.  
 2 mu         0.2       6.89     0.0237    2.43e-11    347.  
 3 mu         0.3       4.04     0.165     4.71e- 8    157.  
 4 mu         0.4       1.98     0.608     9.55e- 6     43.9 
 5 mu         0.5       1.19     0.984     5.52e- 4      7.69
 6 mu         0.6       1.05     0.996     1.41e- 2      2.29
 7 mu         0.7       1.75     0.666     9.14e- 3     28.1 
 8 mu         0.8       7.19     0.268     6.28e- 5    281.  
 9 mu         0.9      41.8      0.0271    5.46e- 9   2634.  
10 mu_1       0.1       8.92     0.00256   4.95e-16    509.  
11 mu_1       0.2       5.87     0.0631    1.15e-10    248.  
12 mu_1       0.3       2.74     0.338     1.49e- 7     80.6 
13 mu_1       0.4       1.44     0.843     2.27e- 5     16.6 
14 mu_1       0.5       1.04     0.948     1.05e- 3      2.65
15 mu_1       0.6       1.08     0.929     2.23e- 2      3.82
16 mu_1       0.7       2.06     0.546     2.37e- 3     38.1 
17 mu_1       0.8       8.56     0.180     1.39e- 5    351.  
18 mu_1       0.9      45.7      0.0165    1.07e- 9   2927.  
19 mu_0       0.1       5.28     0.000139  0           339.  
20 mu_0       0.2       7.15     0.00950   0           371.  
21 mu_0       0.3       4.60     0.0990    0           192.  
22 mu_0       0.4       2.35     0.437     0            62.7 
23 mu_0       0.5       1.35     0.910     0            13.2 
24 mu_0       0.6       1.01     0.989     0             2.55
25 mu_0       0.7       1.02     0.847     0             4.85
26 mu_0       0.8       1.69     0.347     0            59.2 
27 mu_0       0.9       6.79     0.0514    0           555.  
[1] "Total run time was 203.9 seconds"
