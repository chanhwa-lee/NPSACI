
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1231"
[1] "cluster size dist'n: "

 5  6  7  8 10 11 12 13 14 15 16 17 18 19 20 
 7  7  9 11  7  4  5  7  5  5  7  7  6  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04002 0.39309 0.63957 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
730 501 
[1] "treatment indicator table: "

  0   1 
420 811 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 191.643 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.363 0.0410
 2 mu         0.1   0.2 0.476 0.0624
 3 mu         0.1   0.3 0.523 0.0839
 4 mu         0.1   0.4 0.599 0.127 
 5 mu         0.1   0.5 0.630 0.117 
 6 mu         0.2   0.1 0.308 0.0325
 7 mu         0.2   0.2 0.422 0.0383
 8 mu         0.2   0.3 0.473 0.0515
 9 mu         0.2   0.4 0.534 0.0863
10 mu         0.2   0.5 0.573 0.0783
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05             1    0.0625      5.57
 2 mu         0.2      1.01             1    0.421       2.24
 3 mu         0.3      1.00             1    0.656       1.56
 4 mu         0.4      0.996            1    0.738       1.25
 5 mu         0.5      0.996            1    0.787       1.21
 6 mu         0.6      1.00             1    0.881       1.17
 7 mu         0.7      1.00             1    0.845       1.09
 8 mu         0.8      1.00             1    0.822       1.17
 9 mu         0.9      1.01             1    0.684       1.28
10 mu_1       0.1      1.01             1    0.179       3.06
11 mu_1       0.2      0.999            1    0.571       1.85
12 mu_1       0.3      0.995            1    0.727       1.35
13 mu_1       0.4      0.994            1    0.745       1.26
14 mu_1       0.5      0.998            1    0.811       1.22
15 mu_1       0.6      1.00             1    0.866       1.16
16 mu_1       0.7      1.00             1    0.843       1.10
17 mu_1       0.8      1.00             1    0.814       1.18
18 mu_1       0.9      1.01             1    0.666       1.29
19 mu_0       0.1      1.06             1    0.0496      6.06
20 mu_0       0.2      1.01             1    0.350       2.44
21 mu_0       0.3      1.00             1    0.592       1.65
22 mu_0       0.4      0.997            1    0.734       1.31
23 mu_0       0.5      0.995            1    0.763       1.22
24 mu_0       0.6      0.998            1    0.843       1.19
25 mu_0       0.7      0.999            1    0.850       1.13
26 mu_0       0.8      0.998            1    0.840       1.14
27 mu_0       0.9      1.00             1    0.753       1.22
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.431   0.0000488   3.32e-16     11.2 
 2 mu         0.2      1.20    0.00380     7.73e-11     24.7 
 3 mu         0.3      1.38    0.0732      1.00e- 7     22.1 
 4 mu         0.4      1.21    0.337       1.27e- 5      9.40
 5 mu         0.5      1.14    0.809       4.52e- 4      7.24
 6 mu         0.6      1.18    1.02        7.81e- 3      6.85
 7 mu         0.7      1.20    0.937       8.04e- 4      6.65
 8 mu         0.8      1.17    1.10        4.11e- 6      3.83
 9 mu         0.9      1.16    0.251       3.57e-10      9.89
10 mu_1       0.1      0.987   0.000453    3.14e-15     19.8 
11 mu_1       0.2      1.55    0.0122      3.66e-10     29.1 
12 mu_1       0.3      1.40    0.160       3.16e- 7     17.3 
13 mu_1       0.4      1.19    0.598       3.18e- 5      8.74
14 mu_1       0.5      1.15    0.917       9.05e- 4      6.20
15 mu_1       0.6      1.18    0.965       8.35e- 3      7.39
16 mu_1       0.7      1.19    0.977       2.03e- 4      6.14
17 mu_1       0.8      1.15    1.04        9.06e- 7      3.99
18 mu_1       0.9      1.16    0.194       7.00e-11     11.0 
19 mu_0       0.1      0.369   0.00000700  0            10.3 
20 mu_0       0.2      1.11    0.00144     0            23.6 
21 mu_0       0.3      1.36    0.0385      0            24.1 
22 mu_0       0.4      1.22    0.161       0            12.0 
23 mu_0       0.5      1.13    0.503       0             8.27
24 mu_0       0.6      1.17    0.946       0             6.04
25 mu_0       0.7      1.24    1.03        0             7.82
26 mu_0       0.8      1.23    1.09        0             4.47
27 mu_0       0.9      1.16    0.567       0             6.15
[1] "Total run time was 194.952 seconds"
