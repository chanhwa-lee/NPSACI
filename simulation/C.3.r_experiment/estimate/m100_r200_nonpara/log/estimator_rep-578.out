
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 200"
[1] "m: 100"
[1] "N_total: 1304"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  3  6 11  7  5  8  6  5  6  4  3 10  7 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05651 0.36035 0.64239 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
757 547 
[1] "treatment indicator table: "

  0   1 
446 858 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 629
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 229.737 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.464 0.112 
 2 mu         0.1   0.2 0.477 0.109 
 3 mu         0.1   0.3 0.571 0.0789
 4 mu         0.1   0.4 0.568 0.0810
 5 mu         0.1   0.5 0.559 0.100 
 6 mu         0.2   0.1 0.417 0.0681
 7 mu         0.2   0.2 0.464 0.0677
 8 mu         0.2   0.3 0.549 0.0504
 9 mu         0.2   0.4 0.557 0.0508
10 mu         0.2   0.5 0.580 0.0626
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.978        0.899    0.0255      6.64
 2 mu         0.2      0.996        0.982    0.211       2.98
 3 mu         0.3      0.999        1        0.541       1.66
 4 mu         0.4      0.990        1        0.703       1.38
 5 mu         0.5      0.987        0.990    0.751       1.34
 6 mu         0.6      0.991        1.00     0.739       1.25
 7 mu         0.7      0.999        1        0.815       1.19
 8 mu         0.8      1.01         1.00     0.771       1.15
 9 mu         0.9      0.993        1        0.520       1.33
10 mu_1       0.1      0.997        0.990    0.0844      4.76
11 mu_1       0.2      1.00         1        0.386       2.05
12 mu_1       0.3      0.999        1        0.605       1.54
13 mu_1       0.4      0.988        0.994    0.702       1.37
14 mu_1       0.5      0.987        0.999    0.781       1.31
15 mu_1       0.6      0.993        0.998    0.735       1.21
16 mu_1       0.7      1.00         1        0.795       1.19
17 mu_1       0.8      1.01         1.01     0.775       1.16
18 mu_1       0.9      0.990        1        0.490       1.34
19 mu_0       0.1      0.976        0.865    0.0189      6.85
20 mu_0       0.2      0.993        0.974    0.168       3.21
21 mu_0       0.3      0.999        1        0.467       1.77
22 mu_0       0.4      0.992        0.997    0.694       1.38
23 mu_0       0.5      0.987        0.990    0.716       1.38
24 mu_0       0.6      0.989        1        0.744       1.32
25 mu_0       0.7      0.996        1        0.753       1.22
26 mu_0       0.8      1.00         1        0.757       1.20
27 mu_0       0.9      1.01         1.01     0.725       1.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.775   0.0000261   2.78e-18     35.1 
 2 mu         0.2      1.15    0.00312     2.92e-12     27.4 
 3 mu         0.3      1.48    0.0464      9.70e- 9     14.6 
 4 mu         0.4      1.75    0.261       3.06e- 6     27.3 
 5 mu         0.5      1.72    0.713       2.65e- 4     25.2 
 6 mu         0.6      1.54    0.901       1.02e- 2     12.1 
 7 mu         0.7      1.43    1.19        1.04e- 3      6.84
 8 mu         0.8      1.56    1.10        4.06e- 6      8.12
 9 mu         0.9      2.22    0.257       1.98e-10     33.8 
10 mu_1       0.1      1.23    0.000202    2.78e-17     39.0 
11 mu_1       0.2      1.29    0.0122      1.46e-11     17.9 
12 mu_1       0.3      1.59    0.104       3.23e- 8     21.3 
13 mu_1       0.4      1.76    0.436       7.65e- 6     29.8 
14 mu_1       0.5      1.65    0.880       5.31e- 4     22.0 
15 mu_1       0.6      1.49    1.01        1.48e- 2     10.7 
16 mu_1       0.7      1.44    1.27        3.13e- 4      5.87
17 mu_1       0.8      1.62    0.975       1.07e- 6      9.14
18 mu_1       0.9      2.29    0.189       4.64e-11     37.6 
19 mu_0       0.1      0.724   0.00000351  0            34.7 
20 mu_0       0.2      1.12    0.00128     0            30.4 
21 mu_0       0.3      1.43    0.0208      0            17.9 
22 mu_0       0.4      1.73    0.144       0            25.6 
23 mu_0       0.5      1.79    0.490       0            28.3 
24 mu_0       0.6      1.61    0.742       0            17.0 
25 mu_0       0.7      1.42    1.05        0             9.12
26 mu_0       0.8      1.35    1.06        0             6.63
27 mu_0       0.9      1.58    0.207       0            16.9 
[1] "Total run time was 233.692 seconds"
