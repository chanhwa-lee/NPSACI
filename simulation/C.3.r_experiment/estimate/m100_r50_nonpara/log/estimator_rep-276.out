
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1207"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  4  3 15  5  4  5  5  9  7  5  8  4  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03423 0.36263 0.63674 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
676 531 
[1] "treatment indicator table: "

  0   1 
458 749 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 140.426 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.488 0.106 
 2 mu         0.1   0.2 0.551 0.0997
 3 mu         0.1   0.3 0.621 0.114 
 4 mu         0.1   0.4 0.631 0.0989
 5 mu         0.1   0.5 0.638 0.0946
 6 mu         0.2   0.1 0.391 0.0610
 7 mu         0.2   0.2 0.464 0.0510
 8 mu         0.2   0.3 0.540 0.0590
 9 mu         0.2   0.4 0.580 0.0528
10 mu         0.2   0.5 0.595 0.0497
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.909        0.937   0.00804      4.92
 2 mu         0.2      0.980        0.982   0.127        1.84
 3 mu         0.3      1.01         1.00    0.465        1.59
 4 mu         0.4      1.01         1       0.563        1.42
 5 mu         0.5      0.996        1       0.610        1.46
 6 mu         0.6      0.991        1       0.604        1.51
 7 mu         0.7      0.991        1       0.576        1.31
 8 mu         0.8      0.988        0.998   0.666        1.40
 9 mu         0.9      0.966        1       0.427        1.44
10 mu_1       0.1      0.948        0.889   0.0303       2.47
11 mu_1       0.2      1.01         1       0.257        1.85
12 mu_1       0.3      1.01         1       0.553        1.55
13 mu_1       0.4      1.00         1       0.578        1.43
14 mu_1       0.5      0.994        1       0.633        1.47
15 mu_1       0.6      0.991        1       0.583        1.49
16 mu_1       0.7      0.991        1       0.585        1.37
17 mu_1       0.8      0.986        1       0.637        1.38
18 mu_1       0.9      0.962        1       0.424        1.49
19 mu_0       0.1      0.904        0.891   0.00556      5.45
20 mu_0       0.2      0.973        0.965   0.0949       1.88
21 mu_0       0.3      1.00         1       0.374        1.67
22 mu_0       0.4      1.01         0.997   0.553        1.47
23 mu_0       0.5      0.999        1       0.587        1.46
24 mu_0       0.6      0.991        1       0.635        1.52
25 mu_0       0.7      0.990        1       0.553        1.44
26 mu_0       0.8      0.996        1       0.630        1.50
27 mu_0       0.9      1.00         1       0.454        1.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.73      0.000352  7.59e-19    135.  
 2 mu         0.2      1.33      0.0271    3.98e-13     41.1 
 3 mu         0.3      1.43      0.194     8.83e-10     11.6 
 4 mu         0.4      1.45      0.641     2.09e- 7      6.59
 5 mu         0.5      1.35      1.03      1.45e- 5      5.45
 6 mu         0.6      1.19      0.877     4.63e- 4      4.72
 7 mu         0.7      1.05      0.889     2.20e- 5      4.58
 8 mu         0.8      1.09      0.893     3.83e- 8      3.91
 9 mu         0.9      1.48      0.213     6.58e-13     14.0 
10 mu_1       0.1      1.55      0.00211   7.59e-18     79.6 
11 mu_1       0.2      1.38      0.0879    1.99e-12     12.1 
12 mu_1       0.3      1.52      0.427     2.94e- 9     10.7 
13 mu_1       0.4      1.46      0.911     5.22e- 7      5.70
14 mu_1       0.5      1.32      1.01      2.90e- 5      5.77
15 mu_1       0.6      1.16      0.825     1.85e- 4      4.16
16 mu_1       0.7      1.05      0.892     1.85e- 6      4.83
17 mu_1       0.8      1.12      0.788     2.82e- 9      3.78
18 mu_1       0.9      1.53      0.138     4.30e-14     15.5 
19 mu_0       0.1      1.75      0.000177  0           142.  
20 mu_0       0.2      1.32      0.0108    0            48.4 
21 mu_0       0.3      1.39      0.101     0            12.0 
22 mu_0       0.4      1.45      0.374     0             7.93
23 mu_0       0.5      1.37      0.767     0             5.13
24 mu_0       0.6      1.24      0.861     0             5.55
25 mu_0       0.7      1.07      0.775     0             4.02
26 mu_0       0.8      0.972     0.592     0             5.15
27 mu_0       0.9      1.07      0.103     0             5.19
[1] "Total run time was 145.472 seconds"
