
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1261"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5 11  3  8  7  7  4  5 10  5  7  7  8  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03127 0.33072 0.61143 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
738 523 
[1] "treatment indicator table: "

  0   1 
464 797 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 155.313 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.506 0.102 
 2 mu         0.1   0.2 0.611 0.116 
 3 mu         0.1   0.3 0.718 0.150 
 4 mu         0.1   0.4 0.736 0.149 
 5 mu         0.1   0.5 0.745 0.144 
 6 mu         0.2   0.1 0.388 0.0530
 7 mu         0.2   0.2 0.476 0.0644
 8 mu         0.2   0.3 0.567 0.0752
 9 mu         0.2   0.4 0.614 0.0709
10 mu         0.2   0.5 0.638 0.0689
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.936        0.803   0.00746      9.79
 2 mu         0.2      0.913        0.914   0.0983       3.85
 3 mu         0.3      0.946        0.936   0.314        1.86
 4 mu         0.4      0.984        0.980   0.562        1.62
 5 mu         0.5      0.994        1.00    0.692        1.30
 6 mu         0.6      0.988        0.984   0.803        1.24
 7 mu         0.7      0.992        0.989   0.649        1.30
 8 mu         0.8      1.01         1.02    0.504        1.50
 9 mu         0.9      1.03         1.02    0.214        1.93
10 mu_1       0.1      0.931        0.896   0.0263       6.54
11 mu_1       0.2      0.923        0.914   0.176        2.03
12 mu_1       0.3      0.969        0.953   0.432        1.83
13 mu_1       0.4      0.995        1.00    0.591        1.45
14 mu_1       0.5      0.995        1.00    0.730        1.26
15 mu_1       0.6      0.989        0.985   0.795        1.25
16 mu_1       0.7      0.995        0.992   0.615        1.36
17 mu_1       0.8      1.02         1.02    0.436        1.55
18 mu_1       0.9      1.03         1.02    0.185        2.01
19 mu_0       0.1      0.937        0.755   0.00504     10.1 
20 mu_0       0.2      0.911        0.912   0.0786       4.45
21 mu_0       0.3      0.936        0.925   0.263        1.87
22 mu_0       0.4      0.977        0.980   0.505        1.73
23 mu_0       0.5      0.992        0.991   0.625        1.41
24 mu_0       0.6      0.988        0.988   0.742        1.24
25 mu_0       0.7      0.984        0.986   0.727        1.26
26 mu_0       0.8      1.00         1       0.528        1.36
27 mu_0       0.9      1.03         1.03    0.470        1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.430    0.000113   2.28e-17      6.60
 2 mu         0.2      0.982    0.00604    5.99e-12     10.0 
 3 mu         0.3      1.39     0.0653     8.85e- 9     14.4 
 4 mu         0.4      1.44     0.393      1.57e- 6     19.7 
 5 mu         0.5      1.21     0.798      8.71e- 5     12.7 
 6 mu         0.6      1.02     0.933      2.32e- 3      4.38
 7 mu         0.7      1.04     0.861      1.51e- 3      5.62
 8 mu         0.8      1.24     0.685      6.73e- 6      9.55
 9 mu         0.9      1.59     0.0695     3.70e-10     21.2 
10 mu_1       0.1      0.938    0.000670   2.28e-16      9.93
11 mu_1       0.2      1.32     0.0243     2.99e-11     10.8 
12 mu_1       0.3      1.49     0.149      2.95e- 8     18.6 
13 mu_1       0.4      1.36     0.652      3.92e- 6     19.2 
14 mu_1       0.5      1.09     0.790      1.74e- 4      9.85
15 mu_1       0.6      0.971    0.735      3.87e- 3      4.32
16 mu_1       0.7      1.05     0.900      5.40e- 4      5.89
17 mu_1       0.8      1.28     0.523      2.10e- 6     10.6 
18 mu_1       0.9      1.61     0.0456     1.03e-10     22.4 
19 mu_0       0.1      0.374    0.0000372  0             6.28
20 mu_0       0.2      0.897    0.00171    0             9.87
21 mu_0       0.3      1.34     0.0318     0            12.5 
22 mu_0       0.4      1.50     0.176      0            20.1 
23 mu_0       0.5      1.33     0.603      0            15.5 
24 mu_0       0.6      1.09     0.887      0             5.96
25 mu_0       0.7      1.01     0.790      0             5.44
26 mu_0       0.8      1.11     0.807      0             6.43
27 mu_0       0.9      1.48     0.165      0            17.5 
[1] "Total run time was 160.881 seconds"
