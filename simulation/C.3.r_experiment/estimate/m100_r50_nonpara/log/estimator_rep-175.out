
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1143"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7 12  6  8 10  5  4  7  8  6  2  6  6  5  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03144 0.34589 0.60895 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
702 441 
[1] "treatment indicator table: "

  0   1 
422 721 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 550
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 89.402 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.473 0.166
 2 mu         0.1   0.2 0.470 0.128
 3 mu         0.1   0.3 0.538 0.162
 4 mu         0.1   0.4 0.573 0.147
 5 mu         0.1   0.5 0.563 0.133
 6 mu         0.2   0.1 0.482 0.154
 7 mu         0.2   0.2 0.497 0.121
 8 mu         0.2   0.3 0.555 0.139
 9 mu         0.2   0.4 0.598 0.125
10 mu         0.2   0.5 0.602 0.112
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.595        0.231 0.00000300      4.52
 2 mu         0.2      0.767        0.617 0.00126         3.97
 3 mu         0.3      0.880        0.825 0.0269          3.43
 4 mu         0.4      0.945        0.937 0.157           2.62
 5 mu         0.5      0.982        0.992 0.424           1.73
 6 mu         0.6      1.00         1     0.695           1.21
 7 mu         0.7      1.02         1     0.708           1.74
 8 mu         0.8      1.03         1.00  0.557           2.96
 9 mu         0.9      1.01         1     0.0999          3.83
10 mu_1       0.1      0.730        0.539 0.0000168       5.41
11 mu_1       0.2      0.855        0.805 0.00353         4.17
12 mu_1       0.3      0.926        0.938 0.0508          2.99
13 mu_1       0.4      0.968        0.976 0.226           1.90
14 mu_1       0.5      0.992        1.00  0.507           1.30
15 mu_1       0.6      1.01         1     0.746           1.30
16 mu_1       0.7      1.02         0.999 0.654           1.90
17 mu_1       0.8      1.03         1.00  0.514           3.11
18 mu_1       0.9      1.00         0.999 0.0837          4.17
19 mu_0       0.1      0.580        0.193 0.00000148      4.73
20 mu_0       0.2      0.745        0.546 0.000692        4.27
21 mu_0       0.3      0.860        0.785 0.0167          3.61
22 mu_0       0.4      0.930        0.916 0.111           3.10
23 mu_0       0.5      0.973        0.969 0.341           2.19
24 mu_0       0.6      0.998        1     0.619           1.44
25 mu_0       0.7      1.01         1.00  0.806           1.39
26 mu_0       0.8      1.04         1     0.595           2.39
27 mu_0       0.9      1.05         0.998 0.245           4.03
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     103.       0.000279  1.16e-15   7721.  
 2 mu         0.2     106.       0.0168    5.39e-10   8454.  
 3 mu         0.3      55.7      0.107     1.04e- 6   4378.  
 4 mu         0.4      20.3      0.390     1.05e- 4   1428.  
 5 mu         0.5       5.90     0.718     1.90e- 3    300.  
 6 mu         0.6       2.00     1.04      2.03e- 2     37.2 
 7 mu         0.7       1.74     1.07      4.62e- 4     22.7 
 8 mu         0.8       3.16     0.758     6.13e- 7     85.3 
 9 mu         0.9       5.51     0.186     5.92e-12    174.  
10 mu_1       0.1     150.       0.00179   1.10e-14  11878.  
11 mu_1       0.2      80.0      0.0527    2.56e- 9   6503.  
12 mu_1       0.3      29.4      0.259     3.31e- 6   2245.  
13 mu_1       0.4       9.01     0.618     2.61e- 4    549.  
14 mu_1       0.5       2.85     0.892     3.80e- 3     92.4 
15 mu_1       0.6       1.50     1.06      7.93e- 3     14.9 
16 mu_1       0.7       1.82     1.09      6.95e- 5     28.8 
17 mu_1       0.8       3.40     0.607     8.06e- 8     94.8 
18 mu_1       0.9       5.58     0.138     6.92e-13    183.  
19 mu_0       0.1      97.4      0.000101  0          7259.  
20 mu_0       0.2     112.       0.00506   0          8941.  
21 mu_0       0.3      66.9      0.0482    0          5293.  
22 mu_0       0.4      27.8      0.217     0          2014.  
23 mu_0       0.5       8.95     0.538     0           508.  
24 mu_0       0.6       2.76     0.961     0            78.6 
25 mu_0       0.7       1.53     1.06      0             9.95
26 mu_0       0.8       2.20     1.10      0            47.4 
27 mu_0       0.9       4.89     0.375     0           156.  
[1] "Total run time was 93.395 seconds"
