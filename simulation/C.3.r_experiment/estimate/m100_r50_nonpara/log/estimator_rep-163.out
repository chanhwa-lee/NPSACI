
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1222"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5 10  4  8  9  4  5  8  5 12  6  5  6  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0380  0.3589  0.6329  1.0000  4.0000 
[1] "event indicator table: "

  0   1 
708 514 
[1] "treatment indicator table: "

  0   1 
461 761 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 610
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 125.161 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.385 0.0689
 2 mu         0.1   0.2 0.482 0.114 
 3 mu         0.1   0.3 0.531 0.0911
 4 mu         0.1   0.4 0.541 0.0944
 5 mu         0.1   0.5 0.600 0.0858
 6 mu         0.2   0.1 0.336 0.0465
 7 mu         0.2   0.2 0.411 0.0735
 8 mu         0.2   0.3 0.485 0.0618
 9 mu         0.2   0.4 0.525 0.0639
10 mu         0.2   0.5 0.577 0.0578
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.941        0.473 0.000142       8.86
 2 mu         0.2      1.02         0.969 0.00620        6.11
 3 mu         0.3      1.01         0.989 0.0465         3.13
 4 mu         0.4      0.979        0.976 0.165          2.96
 5 mu         0.5      0.975        0.980 0.372          2.03
 6 mu         0.6      0.997        1     0.651          1.36
 7 mu         0.7      1.02         1.02  0.743          1.45
 8 mu         0.8      1.02         1.01  0.461          1.39
 9 mu         0.9      1.01         0.997 0.144          2.13
10 mu_1       0.1      0.954        0.857 0.000863       7.91
11 mu_1       0.2      1.00         0.936 0.0191         4.86
12 mu_1       0.3      0.987        0.972 0.0973         3.40
13 mu_1       0.4      0.972        0.958 0.233          2.65
14 mu_1       0.5      0.982        0.987 0.440          1.69
15 mu_1       0.6      1.01         1     0.716          1.42
16 mu_1       0.7      1.02         1.04  0.698          1.42
17 mu_1       0.8      1.02         1.00  0.393          1.48
18 mu_1       0.9      1.01         0.992 0.118          2.26
19 mu_0       0.1      0.940        0.417 0.0000621      9.54
20 mu_0       0.2      1.02         0.925 0.00298        6.43
21 mu_0       0.3      1.02         1.00  0.0247         3.07
22 mu_0       0.4      0.984        0.993 0.0978         3.17
23 mu_0       0.5      0.967        0.972 0.253          2.37
24 mu_0       0.6      0.981        0.996 0.488          1.49
25 mu_0       0.7      1.01         0.997 0.730          1.50
26 mu_0       0.8      1.02         1.04  0.665          1.37
27 mu_0       0.9      0.982        0.981 0.350          1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.83    0.0000424  4.63e-15    124.  
 2 mu         0.2       2.71    0.00594    9.58e-10    135.  
 3 mu         0.3       2.38    0.0738     6.19e- 7     70.2 
 4 mu         0.4       1.72    0.387      4.63e- 5     22.9 
 5 mu         0.5       1.25    0.872      1.32e- 3     12.0 
 6 mu         0.6       1.07    0.868      2.03e- 2      5.68
 7 mu         0.7       1.12    0.846      9.92e- 3      6.75
 8 mu         0.8       1.29    0.639      1.14e- 4      7.38
 9 mu         0.9       1.35    0.111      3.97e- 8     13.4 
10 mu_1       0.1       3.13    0.000324   4.16e-14    190.  
11 mu_1       0.2       2.82    0.0180     4.31e- 9    104.  
12 mu_1       0.3       2.05    0.161      2.06e- 6     36.0 
13 mu_1       0.4       1.43    0.599      1.16e- 4     17.3 
14 mu_1       0.5       1.11    0.749      2.63e- 3      6.87
15 mu_1       0.6       1.05    0.869      3.38e- 2      4.19
16 mu_1       0.7       1.15    0.905      2.83e- 3      7.23
17 mu_1       0.8       1.32    0.534      2.85e- 5      7.68
18 mu_1       0.9       1.34    0.0741     8.81e- 9     13.9 
19 mu_0       0.1       1.68    0.0000138  0           116.  
20 mu_0       0.2       2.69    0.00249    0           143.  
21 mu_0       0.3       2.52    0.0337     0            84.8 
22 mu_0       0.4       1.92    0.221      0            32.3 
23 mu_0       0.5       1.39    0.647      0            17.2 
24 mu_0       0.6       1.10    0.874      0            10.1 
25 mu_0       0.7       1.05    0.787      0             5.62
26 mu_0       0.8       1.17    0.745      0             8.27
27 mu_0       0.9       1.36    0.119      0             8.99
[1] "Total run time was 129.722 seconds"
