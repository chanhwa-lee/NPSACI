
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1332"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  3  6  3  8 10  8  7  2  8  8  7  8  4 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03277 0.35575 0.62237 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
781 551 
[1] "treatment indicator table: "

  0   1 
490 842 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 678
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 119.72 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.200 0.0972
 2 mu         0.1   0.2 0.281 0.159 
 3 mu         0.1   0.3 0.330 0.119 
 4 mu         0.1   0.4 0.493 0.183 
 5 mu         0.1   0.5 0.495 0.183 
 6 mu         0.2   0.1 0.193 0.0855
 7 mu         0.2   0.2 0.265 0.127 
 8 mu         0.2   0.3 0.331 0.0906
 9 mu         0.2   0.4 0.437 0.0948
10 mu         0.2   0.5 0.468 0.105 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.717        0.388 0.0000812      4.42
 2 mu         0.2      0.861        0.852 0.0150         3.06
 3 mu         0.3      0.952        0.969 0.119          1.97
 4 mu         0.4      0.985        1     0.302          1.50
 5 mu         0.5      1.00         1     0.546          1.34
 6 mu         0.6      1.02         1.00  0.775          1.25
 7 mu         0.7      1.02         1.02  0.761          1.57
 8 mu         0.8      1.04         1.03  0.627          1.77
 9 mu         0.9      1.04         1     0.337          2.32
10 mu_1       0.1      0.798        0.728 0.000390       4.19
11 mu_1       0.2      0.932        0.929 0.0365         2.28
12 mu_1       0.3      0.982        0.999 0.207          1.80
13 mu_1       0.4      0.997        0.997 0.424          1.43
14 mu_1       0.5      1.01         1     0.634          1.32
15 mu_1       0.6      1.02         1.01  0.834          1.33
16 mu_1       0.7      1.02         1.02  0.732          1.66
17 mu_1       0.8      1.04         1.02  0.596          1.75
18 mu_1       0.9      1.04         1     0.305          2.42
19 mu_0       0.1      0.708        0.339 0.0000469      4.45
20 mu_0       0.2      0.843        0.802 0.00958        3.36
21 mu_0       0.3      0.939        0.927 0.0810         2.05
22 mu_0       0.4      0.977        0.996 0.221          1.55
23 mu_0       0.5      0.998        0.998 0.432          1.37
24 mu_0       0.6      1.01         1     0.668          1.28
25 mu_0       0.7      1.01         1.01  0.828          1.37
26 mu_0       0.8      1.02         1.01  0.676          1.84
27 mu_0       0.9      1.06         1.02  0.523          2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     16.2      0.0000574  1.06e-15   1594.  
 2 mu         0.2      6.63     0.00748    1.39e-10    613.  
 3 mu         0.3      2.27     0.100      1.37e- 7    142.  
 4 mu         0.4      1.27     0.396      1.82e- 5     21.8 
 5 mu         0.5      1.10     0.857      8.08e- 4      6.06
 6 mu         0.6      1.04     0.949      1.79e- 2      3.80
 7 mu         0.7      1.04     0.956      1.10e- 3      3.80
 8 mu         0.8      1.25     0.780      4.91e- 6      5.90
 9 mu         0.9      1.85     0.0685     2.70e-10     21.8 
10 mu_1       0.1     11.0      0.000347   1.06e-14   1062.  
11 mu_1       0.2      2.75     0.0229     6.94e-10    204.  
12 mu_1       0.3      1.34     0.198      4.56e- 7     31.5 
13 mu_1       0.4      1.15     0.609      4.55e- 5      6.57
14 mu_1       0.5      1.08     0.956      1.62e- 3      5.60
15 mu_1       0.6      1.04     0.939      1.02e- 2      3.05
16 mu_1       0.7      1.08     0.920      2.22e- 4      4.24
17 mu_1       0.8      1.32     0.615      7.61e- 7      7.35
18 mu_1       0.9      1.91     0.0477     4.64e-11     22.9 
19 mu_0       0.1     16.7      0.0000173  0          1653.  
20 mu_0       0.2      7.60     0.00349    0           715.  
21 mu_0       0.3      2.68     0.0452     0           189.  
22 mu_0       0.4      1.35     0.199      0            34.0 
23 mu_0       0.5      1.12     0.670      0             6.53
24 mu_0       0.6      1.04     0.903      0             5.11
25 mu_0       0.7      0.968    0.882      0             3.73
26 mu_0       0.8      0.984    0.655      0             3.94
27 mu_0       0.9      1.29     0.129      0            12.1 
[1] "Total run time was 123.86 seconds"
