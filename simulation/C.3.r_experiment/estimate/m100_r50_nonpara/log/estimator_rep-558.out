
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1190"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7 10  3  4  8  5  9  4 11  9  7  7  8  3  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05307 0.38139 0.64706 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
700 490 
[1] "treatment indicator table: "

  0   1 
435 755 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 73.407 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.355 0.0774
 2 mu         0.1   0.2 0.490 0.0852
 3 mu         0.1   0.3 0.486 0.0743
 4 mu         0.1   0.4 0.554 0.0947
 5 mu         0.1   0.5 0.549 0.0871
 6 mu         0.2   0.1 0.381 0.0698
 7 mu         0.2   0.2 0.492 0.0680
 8 mu         0.2   0.3 0.504 0.0557
 9 mu         0.2   0.4 0.576 0.0745
10 mu         0.2   0.5 0.580 0.0658
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.869        0.444  0.000330      7.92
 2 mu         0.2      0.978        0.853  0.0229        4.27
 3 mu         0.3      0.992        0.983  0.182         2.11
 4 mu         0.4      0.992        1      0.549         1.53
 5 mu         0.5      0.992        0.998  0.713         1.25
 6 mu         0.6      0.996        0.997  0.791         1.17
 7 mu         0.7      1.00         1      0.757         1.26
 8 mu         0.8      0.992        0.999  0.505         1.55
 9 mu         0.9      0.918        0.844  0.110         2.34
10 mu_1       0.1      1.01         0.906  0.00153       6.33
11 mu_1       0.2      0.974        0.995  0.0551        2.51
12 mu_1       0.3      0.977        0.991  0.300         1.60
13 mu_1       0.4      0.984        0.992  0.671         1.33
14 mu_1       0.5      0.989        0.999  0.742         1.23
15 mu_1       0.6      0.996        1      0.787         1.18
16 mu_1       0.7      1.00         1      0.700         1.30
17 mu_1       0.8      0.988        0.999  0.450         1.66
18 mu_1       0.9      0.909        0.815  0.0927        2.43
19 mu_0       0.1      0.854        0.391  0.000196      8.10
20 mu_0       0.2      0.980        0.810  0.0149        4.80
21 mu_0       0.3      0.999        0.980  0.131         2.36
22 mu_0       0.4      0.997        1      0.442         1.67
23 mu_0       0.5      0.995        0.995  0.684         1.39
24 mu_0       0.6      0.996        0.996  0.794         1.22
25 mu_0       0.7      1.00         0.998  0.747         1.18
26 mu_0       0.8      1.01         1      0.697         1.39
27 mu_0       0.9      1.00         0.996  0.267         1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.620    0.000119   1.65e-13     26.3 
 2 mu         0.2      1.09     0.00910    5.40e- 9     40.5 
 3 mu         0.3      1.07     0.101      2.36e- 6     21.1 
 4 mu         0.4      0.988    0.337      1.77e- 4      8.26
 5 mu         0.5      0.979    0.767      5.02e- 3      4.54
 6 mu         0.6      1.03     1.07       6.67e- 2      2.62
 7 mu         0.7      1.16     1.18       1.89e- 3      2.90
 8 mu         0.8      1.37     0.792      9.65e- 6      8.25
 9 mu         0.9      1.61     0.137      8.39e-10     33.9 
10 mu_1       0.1      1.21     0.000867   1.65e-12     46.4 
11 mu_1       0.2      1.21     0.0289     2.70e- 8     35.7 
12 mu_1       0.3      1.01     0.227      7.88e- 6     12.4 
13 mu_1       0.4      0.947    0.624      4.42e- 4      5.63
14 mu_1       0.5      0.981    0.906      1.00e- 2      4.28
15 mu_1       0.6      1.06     1.11       1.96e- 2      2.42
16 mu_1       0.7      1.20     1.19       4.76e- 4      3.16
17 mu_1       0.8      1.41     0.660      2.13e- 6      9.10
18 mu_1       0.9      1.64     0.108      1.64e-10     37.7 
19 mu_0       0.1      0.555    0.0000409  0            24.1 
20 mu_0       0.2      1.06     0.00436    0            41.7 
21 mu_0       0.3      1.10     0.0429     0            24.8 
22 mu_0       0.4      1.02     0.182      0            10.0 
23 mu_0       0.5      0.977    0.545      0             5.50
24 mu_0       0.6      0.976    0.889      0             3.47
25 mu_0       0.7      1.05     1.00       0             2.57
26 mu_0       0.8      1.24     1.14       0             4.85
27 mu_0       0.9      1.39     0.368      0            14.2 
[1] "Total run time was 76.605 seconds"
