
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1283"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  7  5  4  8  9  7  4  4 12 12  5  6  2  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03842 0.39037 0.63890 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
768 515 
[1] "treatment indicator table: "

  0   1 
451 832 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 136.498 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.415 0.168 
 2 mu         0.1   0.2 0.519 0.197 
 3 mu         0.1   0.3 0.533 0.216 
 4 mu         0.1   0.4 0.564 0.242 
 5 mu         0.1   0.5 0.577 0.251 
 6 mu         0.2   0.1 0.333 0.0763
 7 mu         0.2   0.2 0.419 0.0849
 8 mu         0.2   0.3 0.434 0.0825
 9 mu         0.2   0.4 0.462 0.0857
10 mu         0.2   0.5 0.485 0.0909
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.892       0.119  0.0000000753     38.4 
 2 mu         0.2      0.788       0.480  0.0000785        11.1 
 3 mu         0.3      0.889       0.852  0.00321           3.51
 4 mu         0.4      0.974       0.976  0.0329            1.81
 5 mu         0.5      1.00        1      0.151             2.23
 6 mu         0.6      0.999       0.992  0.404             1.78
 7 mu         0.7      0.995       0.988  0.585             1.90
 8 mu         0.8      1.07        1      0.294             9.02
 9 mu         0.9      1.54        0.958  0.0239           52.5 
10 mu_1       0.1      0.692       0.340  0.000000488      10.5 
11 mu_1       0.2      0.832       0.750  0.000255          3.75
12 mu_1       0.3      0.941       0.950  0.00701           2.00
13 mu_1       0.4      0.992       1      0.0547            1.89
14 mu_1       0.5      1.00        0.997  0.206             2.27
15 mu_1       0.6      0.992       0.991  0.476             1.59
16 mu_1       0.7      0.995       0.987  0.488             2.32
17 mu_1       0.8      1.09        1      0.252            11.0 
18 mu_1       0.9      1.60        0.950  0.0181           58.2 
19 mu_0       0.1      0.914       0.0931 0.0000000294     41.5 
20 mu_0       0.2      0.777       0.420  0.0000343        12.9 
21 mu_0       0.3      0.867       0.780  0.00158           4.22
22 mu_0       0.4      0.962       0.983  0.0185            1.87
23 mu_0       0.5      1.01        1      0.0970            2.20
24 mu_0       0.6      1.01        0.990  0.295             2.05
25 mu_0       0.7      0.996       0.991  0.599             1.41
26 mu_0       0.8      0.987       0.985  0.461             1.55
27 mu_0       0.9      1.05        1      0.0763            4.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.940   0.0000159   5.89e-17      36.9
 2 mu         0.2      2.50    0.00193     2.74e-11      63.9
 3 mu         0.3      3.62    0.0246      5.32e- 8     131. 
 4 mu         0.4      4.17    0.225       1.08e- 5     158. 
 5 mu         0.5      4.10    0.626       6.24e- 4     148. 
 6 mu         0.6      5.73    0.908       1.60e- 2     175. 
 7 mu         0.7     18.6     1.03        7.19e- 4     868. 
 8 mu         0.8     53.5     0.910       1.87e- 6    2985. 
 9 mu         0.9     68.9     0.135       4.57e-11    4913. 
10 mu_1       0.1      2.09    0.0000959   5.60e-16      69.2
11 mu_1       0.2      3.31    0.00658     1.30e-10      82.1
12 mu_1       0.3      4.03    0.0665      1.69e- 7     164. 
13 mu_1       0.4      4.19    0.349       2.56e- 5     148. 
14 mu_1       0.5      4.03    0.761       1.19e- 3     156. 
15 mu_1       0.6      6.73    0.913       1.29e- 2     245. 
16 mu_1       0.7     22.4     1.03        2.06e- 4    1045. 
17 mu_1       0.8     58.0     0.797       4.67e- 7    3317. 
18 mu_1       0.9     67.2     0.0934      1.01e-11    4852. 
19 mu_0       0.1      0.811   0.00000324  0             33.3
20 mu_0       0.2      2.30    0.000606    0             64.9
21 mu_0       0.3      3.45    0.00963     0            117. 
22 mu_0       0.4      4.16    0.0990      0            164. 
23 mu_0       0.5      4.18    0.424       0            139. 
24 mu_0       0.6      4.24    0.820       0            150. 
25 mu_0       0.7      9.62    1.00        0            457. 
26 mu_0       0.8     35.5     1.00        0           1720. 
27 mu_0       0.9     85.0     0.400       0           5459. 
[1] "Total run time was 141.315 seconds"
