
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1283"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  7  6  5  7  5  6  7  5 10  5  7  8 10  7  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01835 0.30345 0.60334 1.00000 8.00000 
[1] "event indicator table: "

  0   1 
793 490 
[1] "treatment indicator table: "

  0   1 
435 848 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 129.349 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.470 0.0933
 2 mu         0.1   0.2 0.544 0.121 
 3 mu         0.1   0.3 0.604 0.118 
 4 mu         0.1   0.4 0.678 0.131 
 5 mu         0.1   0.5 0.710 0.137 
 6 mu         0.2   0.1 0.424 0.0638
 7 mu         0.2   0.2 0.504 0.0914
 8 mu         0.2   0.3 0.566 0.0797
 9 mu         0.2   0.4 0.630 0.0831
10 mu         0.2   0.5 0.667 0.0901
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.990        0.308  0.000883     14.1 
 2 mu         0.2      1.00         0.744  0.0353        7.56
 3 mu         0.3      0.976        0.920  0.186         3.33
 4 mu         0.4      0.980        1      0.440         1.84
 5 mu         0.5      0.990        0.998  0.594         1.36
 6 mu         0.6      0.998        0.997  0.739         1.18
 7 mu         0.7      1.01         1.01   0.827         1.20
 8 mu         0.8      1.00         1.00   0.693         1.37
 9 mu         0.9      0.967        0.974  0.326         1.66
10 mu_1       0.1      1.03         0.661  0.00333      11.2 
11 mu_1       0.2      0.985        0.889  0.0698        4.62
12 mu_1       0.3      0.970        0.994  0.265         2.16
13 mu_1       0.4      0.984        1      0.526         1.46
14 mu_1       0.5      0.994        0.996  0.639         1.31
15 mu_1       0.6      1.00         0.997  0.781         1.14
16 mu_1       0.7      1.01         1.01   0.779         1.20
17 mu_1       0.8      1.00         1      0.681         1.43
18 mu_1       0.9      0.963        0.958  0.292         1.74
19 mu_0       0.1      0.986        0.263  0.000596     14.5 
20 mu_0       0.2      1.01         0.682  0.0264        8.29
21 mu_0       0.3      0.978        0.897  0.152         3.83
22 mu_0       0.4      0.977        0.984  0.383         2.14
23 mu_0       0.5      0.987        1      0.548         1.59
24 mu_0       0.6      0.994        0.990  0.656         1.24
25 mu_0       0.7      1.00         1.00   0.825         1.19
26 mu_0       0.8      1.01         1.01   0.734         1.22
27 mu_0       0.9      0.999        0.977  0.632         1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.31    0.00000909  6.35e-19     85.2 
 2 mu         0.2      1.54    0.00181     6.65e-13     58.2 
 3 mu         0.3      1.21    0.0363      2.21e- 9     18.7 
 4 mu         0.4      0.972   0.153       6.98e- 7      9.30
 5 mu         0.5      0.905   0.471       6.05e- 5      4.36
 6 mu         0.6      0.944   0.894       2.32e- 3      2.58
 7 mu         0.7      1.03    1.13        2.91e- 4      1.99
 8 mu         0.8      1.13    1.04        8.68e- 7      3.24
 9 mu         0.9      1.19    0.211       3.35e-11     10.2 
10 mu_1       0.1      1.93    0.0000559   6.35e-18    100.  
11 mu_1       0.2      1.48    0.00671     3.33e-12     34.2 
12 mu_1       0.3      1.10    0.0868      7.37e- 9     15.6 
13 mu_1       0.4      0.929   0.293       1.74e- 6      5.89
14 mu_1       0.5      0.908   0.625       1.21e- 4      3.70
15 mu_1       0.6      0.966   1.01        3.14e- 3      2.45
16 mu_1       0.7      1.06    1.22        4.89e- 5      2.09
17 mu_1       0.8      1.15    0.916       1.28e- 7      3.60
18 mu_1       0.9      1.19    0.159       4.38e-12     10.7 
19 mu_0       0.1      1.24    0.00000337  0            83.5 
20 mu_0       0.2      1.55    0.000566    0            64.2 
21 mu_0       0.3      1.25    0.00970     0            22.3 
22 mu_0       0.4      1.00    0.0681      0            11.6 
23 mu_0       0.5      0.902   0.291       0             5.23
24 mu_0       0.6      0.912   0.671       0             3.21
25 mu_0       0.7      0.970   1.01        0             2.08
26 mu_0       0.8      1.06    1.12        0             2.71
27 mu_0       0.9      1.19    0.457       0             5.92
[1] "Total run time was 134.401 seconds"
