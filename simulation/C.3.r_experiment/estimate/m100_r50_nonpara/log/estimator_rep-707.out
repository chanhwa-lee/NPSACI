
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1236"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  5  8  8  9  5  8  5  4  5  3  9  6  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03934 0.41606 0.67951 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
728 508 
[1] "treatment indicator table: "

  0   1 
412 824 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 602
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 99.531 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.254 0.0611
 2 mu         0.1   0.2 0.345 0.0970
 3 mu         0.1   0.3 0.490 0.0992
 4 mu         0.1   0.4 0.566 0.121 
 5 mu         0.1   0.5 0.635 0.155 
 6 mu         0.2   0.1 0.287 0.0343
 7 mu         0.2   0.2 0.370 0.0592
 8 mu         0.2   0.3 0.415 0.0654
 9 mu         0.2   0.4 0.513 0.0836
10 mu         0.2   0.5 0.532 0.0761
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.778        0.247 0.000000203       9.45
 2 mu         0.2      0.829        0.755 0.000330          5.58
 3 mu         0.3      0.917        0.878 0.0152            4.53
 4 mu         0.4      0.970        0.945 0.147             3.21
 5 mu         0.5      0.994        0.960 0.517             3.58
 6 mu         0.6      1.00         0.975 0.682             3.05
 7 mu         0.7      1.01         1.00  0.717             1.81
 8 mu         0.8      1.02         1.01  0.420             1.32
 9 mu         0.9      0.998        1     0.100             1.81
10 mu_1       0.1      0.739        0.544 0.00000122        3.73
11 mu_1       0.2      0.855        0.870 0.000993          3.79
12 mu_1       0.3      0.938        0.924 0.0305            4.59
13 mu_1       0.4      0.978        0.937 0.225             3.06
14 mu_1       0.5      0.996        0.952 0.611             3.68
15 mu_1       0.6      1.00         0.982 0.738             2.75
16 mu_1       0.7      1.01         1.00  0.675             1.62
17 mu_1       0.8      1.02         1.02  0.376             1.40
18 mu_1       0.9      0.996        1     0.0850            1.88
19 mu_0       0.1      0.783        0.218 0.0000000901     10.3 
20 mu_0       0.2      0.822        0.704 0.000164          6.59
21 mu_0       0.3      0.907        0.897 0.00857           4.50
22 mu_0       0.4      0.964        0.933 0.0961            3.63
23 mu_0       0.5      0.993        0.978 0.423             3.47
24 mu_0       0.6      1.00         0.972 0.598             3.49
25 mu_0       0.7      0.997        0.994 0.726             2.25
26 mu_0       0.8      1.00         1     0.594             1.35
27 mu_0       0.9      1.02         1.01  0.235             1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       8.54    0.0000339  2.42e-17    412.  
 2 mu         0.2      16.9     0.00441    1.13e-11   1110.  
 3 mu         0.3      14.8     0.0435     2.18e- 8   1137.  
 4 mu         0.4       6.73    0.211      4.43e- 6    475.  
 5 mu         0.5       2.45    0.573      2.56e- 4     94.0 
 6 mu         0.6       1.43    1.04       6.54e- 3     14.0 
 7 mu         0.7       1.25    1.13       9.56e- 5      7.31
 8 mu         0.8       1.24    0.985      1.45e- 7     18.3 
 9 mu         0.9       1.24    0.233      1.57e-12     16.4 
10 mu_1       0.1       9.40    0.000222   0           507.  
11 mu_1       0.2      17.6     0.0123     0          1388.  
12 mu_1       0.3      11.6     0.0916     0           948.  
13 mu_1       0.4       4.45    0.376      0           297.  
14 mu_1       0.5       1.80    0.808      0            47.0 
15 mu_1       0.6       1.29    1.18       0            10.4 
16 mu_1       0.7       1.20    1.09       0             8.79
17 mu_1       0.8       1.23    0.909      0            19.3 
18 mu_1       0.9       1.23    0.180      0            17.3 
19 mu_0       0.1       8.45    0.0000115  0           457.  
20 mu_0       0.2      16.7     0.00131    0          1041.  
21 mu_0       0.3      16.2     0.0176     0          1219.  
22 mu_0       0.4       8.26    0.0991     0           593.  
23 mu_0       0.5       3.10    0.356      0           141.  
24 mu_0       0.6       1.63    0.873      0            19.4 
25 mu_0       0.7       1.34    1.12       0            11.4 
26 mu_0       0.8       1.27    1.20       0            14.5 
27 mu_0       0.9       1.32    0.402      0            23.8 
[1] "Total run time was 103.786 seconds"
