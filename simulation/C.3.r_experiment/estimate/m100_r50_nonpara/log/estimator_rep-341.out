
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1159"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  8  3  7 15  4  6  5  7  5  3  6  8  7  1  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03589 0.34257 0.59914 0.99627 4.17296 
[1] "event indicator table: "

  0   1 
676 483 
[1] "treatment indicator table: "

  0   1 
426 733 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 547
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 192.483 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1  1.16 0.806
 2 mu         0.1   0.2  1.44 1.03 
 3 mu         0.1   0.3  1.64 1.17 
 4 mu         0.1   0.4  1.77 1.27 
 5 mu         0.1   0.5  1.84 1.33 
 6 mu         0.2   0.1  1.05 0.698
 7 mu         0.2   0.2  1.32 0.891
 8 mu         0.2   0.3  1.49 1.02 
 9 mu         0.2   0.4  1.62 1.10 
10 mu         0.2   0.5  1.70 1.15 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      2.96         0.367 0.000000772    218.  
 2 mu         0.2      2.81         0.819 0.000566       189.  
 3 mu         0.3      1.71         0.949 0.0156          75.6 
 4 mu         0.4      1.16         0.969 0.105           18.9 
 5 mu         0.5      1.02         1     0.318            3.62
 6 mu         0.6      1.00         1     0.608            1.39
 7 mu         0.7      0.995        1     0.748            1.28
 8 mu         0.8      1.01         1     0.376            1.85
 9 mu         0.9      1.08         1     0.0569           4.84
10 mu_1       0.1      3.85         0.688 0.00000426     291.  
11 mu_1       0.2      2.23         0.912 0.00157        126.  
12 mu_1       0.3      1.31         0.957 0.0291          34.1 
13 mu_1       0.4      1.05         1     0.151            6.97
14 mu_1       0.5      1.01         1.00  0.384            1.69
15 mu_1       0.6      1.00         1     0.669            1.31
16 mu_1       0.7      0.995        1     0.683            1.31
17 mu_1       0.8      1.02         1     0.313            2.06
18 mu_1       0.9      1.09         1     0.0431           5.20
19 mu_0       0.1      2.86         0.324 0.000000385    210.  
20 mu_0       0.2      2.96         0.743 0.000316       205.  
21 mu_0       0.3      1.89         0.925 0.00985         93.3 
22 mu_0       0.4      1.24         0.972 0.0750          26.8 
23 mu_0       0.5      1.04         0.998 0.252            5.54
24 mu_0       0.6      1.00         1     0.496            1.52
25 mu_0       0.7      0.993        1     0.756            1.24
26 mu_0       0.8      0.991        1     0.627            1.49
27 mu_0       0.9      1.03         1     0.181            2.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.525    0.0000926  9.97e-15     13.4 
 2 mu         0.2      1.59     0.00565    1.16e- 9     61.0 
 3 mu         0.3      2.30     0.0588     1.00e- 6     92.8 
 4 mu         0.4      2.20     0.339      1.14e- 4     73.2 
 5 mu         0.5      1.70     0.787      4.23e- 3     34.7 
 6 mu         0.6      1.29     0.940      7.50e- 2      9.65
 7 mu         0.7      1.20     1.09       3.40e- 3      8.91
 8 mu         0.8      1.76     0.729      2.98e- 5     50.5 
 9 mu         0.9      4.04     0.0702     5.82e- 9    234.  
10 mu_1       0.1      1.32     0.000709   9.42e-14     33.8 
11 mu_1       0.2      2.30     0.0190     5.49e- 9     93.8 
12 mu_1       0.3      2.44     0.131      3.15e- 6     95.2 
13 mu_1       0.4      1.96     0.547      2.70e- 4     56.3 
14 mu_1       0.5      1.46     0.910      7.98e- 3     21.3 
15 mu_1       0.6      1.19     0.968      3.03e- 2      6.43
16 mu_1       0.7      1.25     1.09       1.14e- 3     12.7 
17 mu_1       0.8      1.97     0.621      8.76e- 6     63.2 
18 mu_1       0.9      4.38     0.0458     1.52e- 9    260.  
19 mu_0       0.1      0.437    0.0000228  0            11.9 
20 mu_0       0.2      1.41     0.00155    0            52.8 
21 mu_0       0.3      2.25     0.0251     0            91.8 
22 mu_0       0.4      2.36     0.198      0            84.5 
23 mu_0       0.5      1.94     0.592      0            48.0 
24 mu_0       0.6      1.43     0.884      0            16.7 
25 mu_0       0.7      1.07     0.850      0             5.05
26 mu_0       0.8      0.913    0.756      0             3.50
27 mu_0       0.9      1.05     0.121      0            10.5 
[1] "Total run time was 198.365 seconds"
