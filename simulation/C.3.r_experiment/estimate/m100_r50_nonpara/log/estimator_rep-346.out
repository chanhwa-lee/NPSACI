
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1178"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 
10 10  9  7  4  5  6  8  4  6  8  6  7  9  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02794 0.35322 0.62482 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
696 482 
[1] "treatment indicator table: "

  0   1 
457 721 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 130.182 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.405 0.115 
 2 mu         0.1   0.2 0.416 0.119 
 3 mu         0.1   0.3 0.435 0.130 
 4 mu         0.1   0.4 0.455 0.144 
 5 mu         0.1   0.5 0.483 0.160 
 6 mu         0.2   0.1 0.371 0.0756
 7 mu         0.2   0.2 0.403 0.0788
 8 mu         0.2   0.3 0.436 0.0890
 9 mu         0.2   0.4 0.469 0.100 
10 mu         0.2   0.5 0.514 0.114 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.882        0.490  0.000660     22.3 
 2 mu         0.2      0.964        0.822  0.0321       15.2 
 3 mu         0.3      0.963        0.955  0.195         4.79
 4 mu         0.4      0.978        0.986  0.463         1.80
 5 mu         0.5      0.989        1      0.598         1.40
 6 mu         0.6      0.997        1      0.721         1.33
 7 mu         0.7      1.02         1      0.690         1.40
 8 mu         0.8      1.04         1      0.353         2.15
 9 mu         0.9      1.08         1      0.0551        5.50
10 mu_1       0.1      1.05         0.761  0.00278      26.2 
11 mu_1       0.2      0.985        0.947  0.0698        9.01
12 mu_1       0.3      0.977        0.991  0.297         2.07
13 mu_1       0.4      0.987        1      0.526         1.61
14 mu_1       0.5      0.991        1      0.653         1.38
15 mu_1       0.6      1.00         1      0.688         1.37
16 mu_1       0.7      1.02         1.00   0.682         1.47
17 mu_1       0.8      1.05         1      0.304         2.35
18 mu_1       0.9      1.08         1      0.0446        6.06
19 mu_0       0.1      0.863        0.441  0.000424     21.8 
20 mu_0       0.2      0.959        0.785  0.0227       16.8 
21 mu_0       0.3      0.957        0.920  0.151         5.95
22 mu_0       0.4      0.972        0.982  0.419         1.93
23 mu_0       0.5      0.986        0.998  0.543         1.51
24 mu_0       0.6      0.993        1      0.672         1.34
25 mu_0       0.7      1.01         1      0.663         1.41
26 mu_0       0.8      1.03         1.01   0.549         1.67
27 mu_0       0.9      1.05         1      0.150         3.19
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      50.7     0.000194   2.06e-14   4880.  
 2 mu         0.2      14.4     0.0175     2.13e- 9   1172.  
 3 mu         0.3       4.28    0.139      1.61e- 6    159.  
 4 mu         0.4       2.14    0.503      1.57e- 4     46.3 
 5 mu         0.5       1.44    1.06       4.84e- 3     12.7 
 6 mu         0.6       1.23    1.09       1.34e- 2      6.62
 7 mu         0.7       1.47    1.02       8.82e- 5      9.44
 8 mu         0.8       2.59    0.712      6.82e- 8     70.0 
 9 mu         0.9       6.33    0.0921     2.93e-13    409.  
10 mu_1       0.1      27.9     0.00117    0          2569.  
11 mu_1       0.2       5.79    0.0459     0           308.  
12 mu_1       0.3       2.57    0.297      0            77.6 
13 mu_1       0.4       1.67    0.770      0            28.9 
14 mu_1       0.5       1.29    1.15       0             8.50
15 mu_1       0.6       1.25    1.08       0             6.74
16 mu_1       0.7       1.60    1.03       0            13.5 
17 mu_1       0.8       2.87    0.591      0            87.5 
18 mu_1       0.9       6.79    0.0613     0           455.  
19 mu_0       0.1      53.3     0.0000569  0          5137.  
20 mu_0       0.2      16.6     0.00747    0          1387.  
21 mu_0       0.3       5.02    0.0672     0           215.  
22 mu_0       0.4       2.46    0.285      0            57.9 
23 mu_0       0.5       1.58    0.820      0            19.0 
24 mu_0       0.6       1.21    1.04       0             6.54
25 mu_0       0.7       1.17    1.01       0             6.24
26 mu_0       0.8       1.48    0.884      0            14.7 
27 mu_0       0.9       2.18    0.165      0            48.4 
[1] "Total run time was 134.921 seconds"
