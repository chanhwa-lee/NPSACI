
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1217"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  9 10  8  5  7  4  5  4  7  7  3 10  4  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03437 0.33649 0.59811 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
699 518 
[1] "treatment indicator table: "

  0   1 
449 768 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 101.494 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.654 0.163 
 2 mu         0.1   0.2 0.688 0.164 
 3 mu         0.1   0.3 0.842 0.203 
 4 mu         0.1   0.4 0.861 0.201 
 5 mu         0.1   0.5 0.924 0.221 
 6 mu         0.2   0.1 0.468 0.0931
 7 mu         0.2   0.2 0.514 0.0841
 8 mu         0.2   0.3 0.611 0.0959
 9 mu         0.2   0.4 0.647 0.0904
10 mu         0.2   0.5 0.687 0.101 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.32         0.383  0.000390     30.5 
 2 mu         0.2      1.06         0.777  0.0184       10.7 
 3 mu         0.3      0.984        0.923  0.113         2.75
 4 mu         0.4      0.974        0.959  0.304         1.84
 5 mu         0.5      0.978        0.983  0.551         1.45
 6 mu         0.6      0.995        1.01   0.672         1.27
 7 mu         0.7      1.01         1.02   0.723         1.26
 8 mu         0.8      1.01         0.992  0.748         1.50
 9 mu         0.9      0.948        0.982  0.229         1.95
10 mu_1       0.1      1.09         0.703  0.00163      19.1 
11 mu_1       0.2      0.963        0.891  0.0399        3.71
12 mu_1       0.3      0.971        0.940  0.173         1.97
13 mu_1       0.4      0.977        0.957  0.384         1.55
14 mu_1       0.5      0.984        1      0.627         1.30
15 mu_1       0.6      1.00         1.02   0.673         1.25
16 mu_1       0.7      1.02         1.02   0.738         1.29
17 mu_1       0.8      1.00         0.979  0.693         1.53
18 mu_1       0.9      0.943        0.967  0.199         1.97
19 mu_0       0.1      1.35         0.336  0.000252     31.7 
20 mu_0       0.2      1.08         0.733  0.0130       12.4 
21 mu_0       0.3      0.990        0.914  0.0867        3.41
22 mu_0       0.4      0.972        0.961  0.251         2.07
23 mu_0       0.5      0.971        0.958  0.472         1.71
24 mu_0       0.6      0.984        0.993  0.657         1.34
25 mu_0       0.7      1.01         1.02   0.690         1.28
26 mu_0       0.8      1.03         1.03   0.698         1.36
27 mu_0       0.9      0.993        0.977  0.503         1.75
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.05    0.000116   1.84e-18    147.  
 2 mu         0.2       4.80    0.00659    1.93e-12    255.  
 3 mu         0.3       4.01    0.102      6.41e- 9    151.  
 4 mu         0.4       2.18    0.484      2.02e- 6     48.4 
 5 mu         0.5       1.35    1.04       1.75e- 4      8.85
 6 mu         0.6       1.23    1.11       6.72e- 3      8.62
 7 mu         0.7       1.26    1.18       1.58e- 2      8.53
 8 mu         0.8       1.37    0.797      9.96e- 5      8.59
 9 mu         0.9       1.77    0.116      5.48e- 9     31.8 
10 mu_1       0.1       4.20    0.000878   1.84e-17    276.  
11 mu_1       0.2       5.29    0.0219     9.63e-12    239.  
12 mu_1       0.3       3.29    0.235      2.14e- 8     94.6 
13 mu_1       0.4       1.72    0.764      5.05e- 6     27.9 
14 mu_1       0.5       1.25    1.06       3.50e- 4      4.99
15 mu_1       0.6       1.23    1.01       1.12e- 2      9.33
16 mu_1       0.7       1.28    1.20       4.10e- 3      7.92
17 mu_1       0.8       1.40    0.641      3.11e- 5     10.1 
18 mu_1       0.9       1.81    0.0771     1.52e- 9     33.4 
19 mu_0       0.1       1.82    0.0000283  0           133.  
20 mu_0       0.2       4.68    0.00313    0           259.  
21 mu_0       0.3       4.32    0.0454     0           176.  
22 mu_0       0.4       2.49    0.281      0            65.5 
23 mu_0       0.5       1.45    0.819      0            14.4 
24 mu_0       0.6       1.22    1.04       0             7.54
25 mu_0       0.7       1.22    1.00       0             9.95
26 mu_0       0.8       1.25    0.955      0             6.63
27 mu_0       0.9       1.35    0.197      0            17.7 
[1] "Total run time was 105.622 seconds"
