
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1306"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5  2  1  7  7  6  6  9  6  9  4  8  7  4 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03083 0.29832 0.59258 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
751 555 
[1] "treatment indicator table: "

  0   1 
507 799 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 357.911 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.534 0.193
 2 mu         0.1   0.2 0.633 0.238
 3 mu         0.1   0.3 0.738 0.255
 4 mu         0.1   0.4 0.808 0.264
 5 mu         0.1   0.5 0.815 0.270
 6 mu         0.2   0.1 0.447 0.115
 7 mu         0.2   0.2 0.544 0.152
 8 mu         0.2   0.3 0.648 0.151
 9 mu         0.2   0.4 0.722 0.141
10 mu         0.2   0.5 0.733 0.144
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.30         0.473 0.00000149      39.7 
 2 mu         0.2      1.24         0.845 0.000695        16.3 
 3 mu         0.3      1.14         0.998 0.0167           6.64
 4 mu         0.4      1.06         0.997 0.112            4.01
 5 mu         0.5      1.02         1     0.353            1.90
 6 mu         0.6      1.00         1.00  0.668            1.21
 7 mu         0.7      1.00         1     0.689            1.32
 8 mu         0.8      1.01         1     0.258            1.80
 9 mu         0.9      0.997        0.960 0.0195           2.59
10 mu_1       0.1      1.29         0.862 0.00000878      26.9 
11 mu_1       0.2      1.17         0.980 0.00206          9.52
12 mu_1       0.3      1.09         1     0.0334           5.50
13 mu_1       0.4      1.04         1     0.170            3.22
14 mu_1       0.5      1.01         1.00  0.442            1.47
15 mu_1       0.6      1.00         1     0.738            1.20
16 mu_1       0.7      1.00         1     0.629            1.38
17 mu_1       0.8      1.01         1     0.219            1.89
18 mu_1       0.9      0.995        0.939 0.0154           2.76
19 mu_0       0.1      1.30         0.439 0.000000678     41.1 
20 mu_0       0.2      1.26         0.805 0.000354        18.7 
21 mu_0       0.3      1.16         0.982 0.00961          7.70
22 mu_0       0.4      1.08         1     0.0733           4.54
23 mu_0       0.5      1.02         1     0.263            2.32
24 mu_0       0.6      1.00         1.00  0.562            1.27
25 mu_0       0.7      1.00         1     0.822            1.22
26 mu_0       0.8      1.00         1     0.415            1.50
27 mu_0       0.9      1.02         1     0.0566           2.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.650     0.000312  2.20e-16     26.6 
 2 mu         0.2      1.51      0.0223    1.02e-10     58.2 
 3 mu         0.3      1.68      0.173     1.99e- 7     45.2 
 4 mu         0.4      1.42      0.609     4.03e- 5     19.7 
 5 mu         0.5      1.16      0.956     2.33e- 3      5.20
 6 mu         0.6      1.05      1.03      3.62e- 2      3.21
 7 mu         0.7      1.08      1.04      1.05e- 2      4.64
 8 mu         0.8      1.38      0.561     2.08e- 4     13.3 
 9 mu         0.9      1.99      0.0545    1.03e- 7     33.0 
10 mu_1       0.1      1.40      0.00190   2.09e-15     56.9 
11 mu_1       0.2      1.83      0.0649    4.87e-10     62.3 
12 mu_1       0.3      1.62      0.388     6.29e- 7     32.3 
13 mu_1       0.4      1.31      0.889     9.57e- 5     10.5 
14 mu_1       0.5      1.11      1.07      4.43e- 3      4.32
15 mu_1       0.6      1.04      1.04      3.48e- 2      3.27
16 mu_1       0.7      1.11      1.00      3.47e- 3      5.63
17 mu_1       0.8      1.44      0.453     7.87e- 5     14.1 
18 mu_1       0.9      2.02      0.0317    3.82e- 8     34.8 
19 mu_0       0.1      0.567     0.000148  0            23.2 
20 mu_0       0.2      1.44      0.00985   0            57.1 
21 mu_0       0.3      1.71      0.0792    0            50.7 
22 mu_0       0.4      1.50      0.381     0            25.7 
23 mu_0       0.5      1.22      0.791     0             8.12
24 mu_0       0.6      1.05      0.978     0             3.94
25 mu_0       0.7      1.01      0.962     0             3.03
26 mu_0       0.8      1.13      0.884     0             9.98
27 mu_0       0.9      1.65      0.136     0            18.5 
[1] "Total run time was 362.158 seconds"
