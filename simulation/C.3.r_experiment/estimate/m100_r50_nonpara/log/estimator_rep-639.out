
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1159"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  5 12  7  7  6  8  4  6  3  9  5  2 10  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02826 0.33520 0.60784 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
692 467 
[1] "treatment indicator table: "

  0   1 
426 733 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 543
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 100.496 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.605 0.267
 2 mu         0.1   0.2 0.639 0.292
 3 mu         0.1   0.3 0.697 0.332
 4 mu         0.1   0.4 0.839 0.354
 5 mu         0.1   0.5 0.894 0.368
 6 mu         0.2   0.1 0.530 0.171
 7 mu         0.2   0.2 0.583 0.183
 8 mu         0.2   0.3 0.648 0.209
 9 mu         0.2   0.4 0.762 0.220
10 mu         0.2   0.5 0.803 0.227
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.33         0.424  0.000174     61.8 
 2 mu         0.2      1.29         0.829  0.0161       38.2 
 3 mu         0.3      1.09         0.997  0.141        11.2 
 4 mu         0.4      1.02         1.00   0.447         2.74
 5 mu         0.5      0.995        1      0.751         1.28
 6 mu         0.6      0.996        1      0.785         1.19
 7 mu         0.7      1.00         1.00   0.713         1.28
 8 mu         0.8      1.02         1      0.474         1.77
 9 mu         0.9      1.06         1      0.0825        3.45
10 mu_1       0.1      1.55         0.792  0.000784     68.8 
11 mu_1       0.2      1.19         0.985  0.0373       21.9 
12 mu_1       0.3      1.04         1      0.226         5.06
13 mu_1       0.4      1.00         1      0.569         1.59
14 mu_1       0.5      0.991        1      0.786         1.24
15 mu_1       0.6      0.998        1      0.766         1.17
16 mu_1       0.7      1.01         1.00   0.691         1.33
17 mu_1       0.8      1.02         1      0.433         1.95
18 mu_1       0.9      1.07         1      0.0676        3.73
19 mu_0       0.1      1.30         0.371  0.000106     61.0 
20 mu_0       0.2      1.32         0.755  0.0108       42.3 
21 mu_0       0.3      1.11         0.989  0.104        13.9 
22 mu_0       0.4      1.03         1      0.366         3.51
23 mu_0       0.5      0.998        1.00   0.714         1.37
24 mu_0       0.6      0.994        1      0.775         1.24
25 mu_0       0.7      1.00         1      0.743         1.27
26 mu_0       0.8      1.00         1.01   0.636         1.45
27 mu_0       0.9      1.02         1      0.216         2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.00     0.000151   1.36e-13     87.4 
 2 mu         0.2      2.13     0.00649    7.03e- 9     75.6 
 3 mu         0.3      1.51     0.0614     3.53e- 6     30.0 
 4 mu         0.4      1.10     0.302      2.59e- 4      7.19
 5 mu         0.5      0.997    0.680      6.39e- 3      3.68
 6 mu         0.6      1.09     1.08       4.79e- 2      2.66
 7 mu         0.7      1.42     1.19       1.58e- 3      8.43
 8 mu         0.8      2.13     0.827      9.25e- 6     22.1 
 9 mu         0.9      3.16     0.173      7.43e-10     74.9 
10 mu_1       0.1      2.81     0.00120    1.21e-12    117.  
11 mu_1       0.2      1.88     0.0257     3.12e- 8     50.4 
12 mu_1       0.3      1.26     0.136      1.05e- 5     13.3 
13 mu_1       0.4      1.02     0.514      5.76e- 4      5.56
14 mu_1       0.5      1.00     0.872      1.14e- 2      3.68
15 mu_1       0.6      1.14     1.18       1.25e- 2      2.92
16 mu_1       0.7      1.51     1.17       5.02e- 4     10.4 
17 mu_1       0.8      2.25     0.647      2.57e- 6     24.5 
18 mu_1       0.9      3.26     0.127      2.07e-10     83.2 
19 mu_0       0.1      1.91     0.0000343  0            84.2 
20 mu_0       0.2      2.19     0.00195    0            81.9 
21 mu_0       0.3      1.61     0.0342     0            37.1 
22 mu_0       0.4      1.16     0.144      0            10.4 
23 mu_0       0.5      0.991    0.462      0             4.08
24 mu_0       0.6      1.02     0.926      0             3.32
25 mu_0       0.7      1.22     1.28       0             3.75
26 mu_0       0.8      1.63     1.23       0            14.2 
27 mu_0       0.9      2.25     0.518      0            40.3 
[1] "Total run time was 104.165 seconds"
