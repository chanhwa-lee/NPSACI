
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1274"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  7  6  6  3  8  5 11  6  6 10  3  6  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03067 0.30211 0.59604 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
769 505 
[1] "treatment indicator table: "

  0   1 
468 806 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 154.013 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.357 0.0885
 2 mu         0.1   0.2 0.478 0.0987
 3 mu         0.1   0.3 0.568 0.110 
 4 mu         0.1   0.4 0.626 0.138 
 5 mu         0.1   0.5 0.634 0.131 
 6 mu         0.2   0.1 0.324 0.0645
 7 mu         0.2   0.2 0.465 0.0687
 8 mu         0.2   0.3 0.530 0.0691
 9 mu         0.2   0.4 0.585 0.0863
10 mu         0.2   0.5 0.604 0.0810
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.787        0.416  0.000375     16.0 
 2 mu         0.2      0.848        0.710  0.0215        6.79
 3 mu         0.3      0.910        0.863  0.141         2.81
 4 mu         0.4      0.963        0.944  0.392         1.69
 5 mu         0.5      1.00         1      0.694         1.39
 6 mu         0.6      1.01         1.01   0.849         1.22
 7 mu         0.7      1.01         1.00   0.761         1.24
 8 mu         0.8      1.00         1      0.660         1.36
 9 mu         0.9      0.991        0.997  0.300         1.76
10 mu_1       0.1      0.766        0.773  0.00153       3.53
11 mu_1       0.2      0.871        0.849  0.0491        3.50
12 mu_1       0.3      0.935        0.934  0.224         2.06
13 mu_1       0.4      0.980        0.972  0.503         1.50
14 mu_1       0.5      1.01         1      0.763         1.42
15 mu_1       0.6      1.01         1.01   0.835         1.23
16 mu_1       0.7      1.01         1.00   0.752         1.23
17 mu_1       0.8      0.999        1      0.594         1.40
18 mu_1       0.9      0.989        0.997  0.274         1.81
19 mu_0       0.1      0.789        0.379  0.000246     17.6 
20 mu_0       0.2      0.842        0.687  0.0146        8.28
21 mu_0       0.3      0.899        0.821  0.105         3.71
22 mu_0       0.4      0.951        0.926  0.318         1.82
23 mu_0       0.5      0.992        0.982  0.605         1.43
24 mu_0       0.6      1.01         1.00   0.779         1.34
25 mu_0       0.7      1.01         1.01   0.781         1.27
26 mu_0       0.8      1.01         1.01   0.727         1.27
27 mu_0       0.9      1.01         1      0.535         1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.11     0.0000378  2.40e-15     66.4 
 2 mu         0.2      1.46     0.00665    4.97e-10     35.4 
 3 mu         0.3      1.58     0.0876     4.21e- 7     36.0 
 4 mu         0.4      1.38     0.406      4.20e- 5     17.9 
 5 mu         0.5      1.13     0.906      1.49e- 3      4.91
 6 mu         0.6      0.974    1.03       4.67e- 3      2.45
 7 mu         0.7      0.925    0.957      9.71e- 5      1.97
 8 mu         0.8      1.06     0.665      3.80e- 7      4.72
 9 mu         0.9      1.46     0.0981     2.61e-11     18.1 
10 mu_1       0.1      1.47     0.000277   2.16e-14     44.2 
11 mu_1       0.2      1.67     0.0200     2.24e- 9     44.2 
12 mu_1       0.3      1.55     0.187      1.35e- 6     30.0 
13 mu_1       0.4      1.26     0.619      1.05e- 4     11.2 
14 mu_1       0.5      1.05     1.04       2.99e- 3      3.68
15 mu_1       0.6      0.938    0.895      5.19e- 4      2.29
16 mu_1       0.7      0.929    0.992      9.25e- 6      2.10
17 mu_1       0.8      1.10     0.531      3.17e- 8      5.53
18 mu_1       0.9      1.50     0.0664     1.93e-12     20.1 
19 mu_0       0.1      1.07     0.0000163  0            68.8 
20 mu_0       0.2      1.41     0.00330    0            33.1 
21 mu_0       0.3      1.60     0.0377     0            38.6 
22 mu_0       0.4      1.46     0.225      0            22.4 
23 mu_0       0.5      1.21     0.687      0             7.36
24 mu_0       0.6      1.03     1.04       0             2.68
25 mu_0       0.7      0.917    0.918      0             2.19
26 mu_0       0.8      0.896    0.857      0             2.68
27 mu_0       0.9      1.10     0.215      0             8.63
[1] "Total run time was 159.09 seconds"
