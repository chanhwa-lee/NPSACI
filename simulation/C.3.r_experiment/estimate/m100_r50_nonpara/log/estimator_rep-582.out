
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1199"
[1] "cluster size dist'n: "

 5  6  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  9 10  5  8  5  8  6  6  8  6  8  3  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06522 0.36043 0.62214 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
680 519 
[1] "treatment indicator table: "

  0   1 
439 760 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 568
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 163.218 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.264 0.0620
 2 mu         0.1   0.2 0.325 0.0603
 3 mu         0.1   0.3 0.437 0.0822
 4 mu         0.1   0.4 0.487 0.0856
 5 mu         0.1   0.5 0.482 0.0939
 6 mu         0.2   0.1 0.262 0.0419
 7 mu         0.2   0.2 0.347 0.0398
 8 mu         0.2   0.3 0.461 0.0511
 9 mu         0.2   0.4 0.520 0.0553
10 mu         0.2   0.5 0.526 0.0637
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.826        0.458  0.00146       6.32
 2 mu         0.2      0.910        0.921  0.0307        2.75
 3 mu         0.3      0.957        0.983  0.147         1.76
 4 mu         0.4      0.985        1      0.374         1.60
 5 mu         0.5      0.999        1      0.614         1.45
 6 mu         0.6      1.01         1      0.771         1.24
 7 mu         0.7      1.00         1      0.737         1.26
 8 mu         0.8      0.990        1      0.566         1.53
 9 mu         0.9      0.992        0.998  0.418         2.04
10 mu_1       0.1      0.957        0.876  0.00750       4.69
11 mu_1       0.2      0.947        0.963  0.0813        1.86
12 mu_1       0.3      0.975        1      0.269         1.78
13 mu_1       0.4      0.993        1      0.520         1.52
14 mu_1       0.5      1.00         1      0.652         1.39
15 mu_1       0.6      1.01         1      0.804         1.24
16 mu_1       0.7      1.00         1      0.728         1.32
17 mu_1       0.8      0.988        1      0.534         1.62
18 mu_1       0.9      0.993        0.995  0.390         2.15
19 mu_0       0.1      0.812        0.400  0.000789      6.50
20 mu_0       0.2      0.900        0.866  0.0180        3.07
21 mu_0       0.3      0.949        0.964  0.0949        1.75
22 mu_0       0.4      0.980        1      0.266         1.68
23 mu_0       0.5      0.994        1      0.517         1.51
24 mu_0       0.6      1.00         1      0.712         1.29
25 mu_0       0.7      1.00         1      0.733         1.24
26 mu_0       0.8      0.996        1      0.646         1.31
27 mu_0       0.9      0.980        1      0.471         1.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.561    0.000177   2.26e-14     13.5 
 2 mu         0.2      1.17     0.00697    1.32e- 9     23.3 
 3 mu         0.3      1.39     0.0725     7.57e- 7     13.9 
 4 mu         0.4      1.34     0.264      6.48e- 5      8.90
 5 mu         0.5      1.17     0.723      1.92e- 3      5.38
 6 mu         0.6      1.04     0.913      2.84e- 2      3.62
 7 mu         0.7      1.01     1.04       1.58e- 3      2.79
 8 mu         0.8      1.06     0.873      7.02e- 6      3.92
 9 mu         0.9      1.00     0.206      3.86e-10      5.70
10 mu_1       0.1      1.17     0.00138    2.13e-13     25.3 
11 mu_1       0.2      1.46     0.0287     6.20e- 9     21.9 
12 mu_1       0.3      1.43     0.181      2.38e- 6     11.0 
13 mu_1       0.4      1.28     0.501      1.52e- 4      7.29
14 mu_1       0.5      1.12     0.901      3.61e- 3      4.74
15 mu_1       0.6      1.02     0.964      2.28e- 2      2.89
16 mu_1       0.7      1.03     1.10       5.63e- 4      2.81
17 mu_1       0.8      1.07     0.691      2.20e- 6      4.24
18 mu_1       0.9      0.989    0.149      1.07e-10      6.34
19 mu_0       0.1      0.494    0.0000431  0            12.2 
20 mu_0       0.2      1.10     0.00197    0            23.7 
21 mu_0       0.3      1.38     0.0265     0            16.1 
22 mu_0       0.4      1.38     0.118      0            10.4 
23 mu_0       0.5      1.23     0.480      0             6.79
24 mu_0       0.6      1.07     0.966      0             5.03
25 mu_0       0.7      0.990    0.801      0             3.20
26 mu_0       0.8      1.02     0.995      0             2.86
27 mu_0       0.9      1.12     0.427      0             6.03
[1] "Total run time was 171.344 seconds"
