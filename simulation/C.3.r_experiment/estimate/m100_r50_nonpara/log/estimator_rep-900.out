
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1291"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  2  7  8  6  9  6  3  6  7  7  6  9  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04397 0.39721 0.63736 1.00000 8.00000 
[1] "event indicator table: "

  0   1 
782 509 
[1] "treatment indicator table: "

  0   1 
422 869 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 621
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 112.987 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.231 0.0925
 2 mu         0.1   0.2 0.316 0.102 
 3 mu         0.1   0.3 0.489 0.103 
 4 mu         0.1   0.4 0.483 0.108 
 5 mu         0.1   0.5 0.556 0.109 
 6 mu         0.2   0.1 0.237 0.0595
 7 mu         0.2   0.2 0.314 0.0620
 8 mu         0.2   0.3 0.444 0.0544
 9 mu         0.2   0.4 0.457 0.0548
10 mu         0.2   0.5 0.513 0.0473
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.902        0.226 0.000000290     16.7 
 2 mu         0.2      0.845        0.687 0.000261         4.30
 3 mu         0.3      0.913        0.900 0.00912          2.94
 4 mu         0.4      0.962        0.946 0.0786           2.38
 5 mu         0.5      0.985        0.968 0.293            2.15
 6 mu         0.6      0.991        0.992 0.601            1.49
 7 mu         0.7      0.989        1     0.612            1.31
 8 mu         0.8      0.997        1     0.529            1.46
 9 mu         0.9      1.04         1.00  0.394            2.09
10 mu_1       0.1      0.694        0.517 0.00000169       5.94
11 mu_1       0.2      0.844        0.844 0.000771         3.10
12 mu_1       0.3      0.933        0.945 0.0182           2.29
13 mu_1       0.4      0.973        0.977 0.120            2.45
14 mu_1       0.5      0.989        0.983 0.369            1.97
15 mu_1       0.6      0.993        0.999 0.660            1.43
16 mu_1       0.7      0.989        1     0.587            1.35
17 mu_1       0.8      1.00         1     0.536            1.56
18 mu_1       0.9      1.05         1.00  0.359            2.22
19 mu_0       0.1      0.925        0.182 0.000000134     18.4 
20 mu_0       0.2      0.846        0.625 0.000134         4.85
21 mu_0       0.3      0.905        0.889 0.00522          3.44
22 mu_0       0.4      0.955        0.925 0.0508           2.34
23 mu_0       0.5      0.980        0.968 0.217            2.34
24 mu_0       0.6      0.990        0.990 0.511            1.76
25 mu_0       0.7      0.988        1     0.669            1.48
26 mu_0       0.8      0.982        1     0.501            1.42
27 mu_0       0.9      0.996        0.998 0.443            1.97
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      12.6    0.0000134   2.08e-16    924.  
 2 mu         0.2      12.2    0.00220     4.85e-11    640.  
 3 mu         0.3       8.58   0.0304      6.27e- 8    289.  
 4 mu         0.4       5.07   0.186       9.53e- 6     96.2 
 5 mu         0.5       2.81   0.536       4.41e- 4     25.7 
 6 mu         0.6       1.71   1.12        9.39e- 3      9.90
 7 mu         0.7       1.39   1.12        1.03e- 2      4.29
 8 mu         0.8       1.70   0.943       4.20e- 4     12.9 
 9 mu         0.9       2.88   0.326       4.62e- 8     42.5 
10 mu_1       0.1      15.3    0.000113    1.97e-15    924.  
11 mu_1       0.2       9.48   0.00868     2.30e-10    320.  
12 mu_1       0.3       5.93   0.0752      1.98e- 7    113.  
13 mu_1       0.4       3.52   0.337       2.26e- 5     41.3 
14 mu_1       0.5       2.13   0.821       8.36e- 4     21.2 
15 mu_1       0.6       1.49   1.21        1.48e- 2      6.80
16 mu_1       0.7       1.37   1.15        1.64e- 3      4.96
17 mu_1       0.8       1.80   0.838       6.40e- 5     15.2 
18 mu_1       0.9       2.99   0.221       1.35e- 8     44.5 
19 mu_0       0.1      12.3    0.00000255  0           924.  
20 mu_0       0.2      12.8    0.000813    0           720.  
21 mu_0       0.3       9.71   0.0119      0           371.  
22 mu_0       0.4       6.11   0.0955      0           144.  
23 mu_0       0.5       3.49   0.306       0            41.9 
24 mu_0       0.6       2.05   0.819       0            14.6 
25 mu_0       0.7       1.42   1.06        0             4.44
26 mu_0       0.8       1.31   1.10        0             6.38
27 mu_0       0.9       1.87   0.349       0            25.0 
[1] "Total run time was 117.157 seconds"
