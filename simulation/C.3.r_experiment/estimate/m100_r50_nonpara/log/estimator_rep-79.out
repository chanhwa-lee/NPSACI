
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1232"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10  9  6  3  5  7  3  8  9  4  4  9  8  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03347 0.33823 0.60019 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
742 490 
[1] "treatment indicator table: "

  0   1 
467 765 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 130.118 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.295 0.0843
 2 mu         0.1   0.2 0.362 0.110 
 3 mu         0.1   0.3 0.392 0.108 
 4 mu         0.1   0.4 0.372 0.0930
 5 mu         0.1   0.5 0.375 0.0784
 6 mu         0.2   0.1 0.324 0.0759
 7 mu         0.2   0.2 0.399 0.0802
 8 mu         0.2   0.3 0.452 0.0906
 9 mu         0.2   0.4 0.447 0.0744
10 mu         0.2   0.5 0.454 0.0641
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.500        0.293 0.0000000451      2.07
 2 mu         0.2      0.695        0.672 0.0000760         2.18
 3 mu         0.3      0.836        0.844 0.00367           3.06
 4 mu         0.4      0.942        0.970 0.0387            3.80
 5 mu         0.5      0.988        0.989 0.168             2.86
 6 mu         0.6      0.990        0.999 0.419             1.59
 7 mu         0.7      0.990        1     0.604             1.40
 8 mu         0.8      1.02         1     0.373             1.69
 9 mu         0.9      1.07         0.986 0.0888            4.66
10 mu_1       0.1      0.672        0.642 0.000000272       2.61
11 mu_1       0.2      0.803        0.826 0.000230          2.25
12 mu_1       0.3      0.908        0.955 0.00747           3.93
13 mu_1       0.4      0.977        0.998 0.0601            3.70
14 mu_1       0.5      0.994        0.996 0.217             2.33
15 mu_1       0.6      0.988        0.998 0.479             1.36
16 mu_1       0.7      0.990        1     0.556             1.43
17 mu_1       0.8      1.02         1     0.346             1.83
18 mu_1       0.9      1.07         0.994 0.0697            5.07
19 mu_0       0.1      0.481        0.251 0.0000000199      2.12
20 mu_0       0.2      0.668        0.609 0.0000375         2.22
21 mu_0       0.3      0.806        0.813 0.00204           2.68
22 mu_0       0.4      0.918        0.925 0.0244            3.87
23 mu_0       0.5      0.982        0.986 0.120             3.39
24 mu_0       0.6      0.995        0.994 0.329             2.04
25 mu_0       0.7      0.988        0.998 0.626             1.31
26 mu_0       0.8      0.997        0.987 0.483             1.49
27 mu_0       0.9      1.04         1.00  0.261             2.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      81.3     0.000117   5.01e-15   8085.  
 2 mu         0.2     197.      0.0105     4.58e-10  19649.  
 3 mu         0.3     119.      0.125      3.01e- 7  11744.  
 4 mu         0.4      33.3     0.420      3.00e- 5   3151.  
 5 mu         0.5       5.98    0.861      1.07e- 3    416.  
 6 mu         0.6       1.75    1.00       1.97e- 2     24.3 
 7 mu         0.7       1.31    0.921      4.02e- 3      9.44
 8 mu         0.8       1.73    0.473      6.07e- 5     27.2 
 9 mu         0.9       2.82    0.0538     1.40e- 8     49.3 
10 mu_1       0.1     163.      0.000736   4.51e-14  16169.  
11 mu_1       0.2     198.      0.0327     2.29e- 9  19649.  
12 mu_1       0.3      79.8     0.245      1.00e- 6   7830.  
13 mu_1       0.4      17.6     0.633      7.50e- 5   1575.  
14 mu_1       0.5       3.42    0.915      2.13e- 3    166.  
15 mu_1       0.6       1.52    1.02       1.79e- 2     16.6 
16 mu_1       0.7       1.33    0.831      8.84e- 4     11.8 
17 mu_1       0.8       1.87    0.386      1.17e- 5     29.8 
18 mu_1       0.9       2.92    0.0338     4.34e- 9     51.5 
19 mu_0       0.1      72.2     0.0000469  0          7186.  
20 mu_0       0.2     197.      0.00532    0         19649.  
21 mu_0       0.3     135.      0.0736     0         13422.  
22 mu_0       0.4      43.7     0.262      0          4201.  
23 mu_0       0.5       8.53    0.675      0           666.  
24 mu_0       0.6       2.11    0.960      0            48.6 
25 mu_0       0.7       1.24    0.948      0            10.5 
26 mu_0       0.8       1.17    0.633      0            17.0 
27 mu_0       0.9       1.95    0.0812     0            44.2 
[1] "Total run time was 135.295 seconds"
