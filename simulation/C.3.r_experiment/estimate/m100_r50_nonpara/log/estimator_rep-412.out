
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1263"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  5  4  7  6  7  5  5  7  9  6  9  8  4  4  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03163 0.40110 0.63826 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
745 518 
[1] "treatment indicator table: "

  0   1 
434 829 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 89.43 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.303 0.148 
 2 mu         0.1   0.2 0.339 0.140 
 3 mu         0.1   0.3 0.392 0.123 
 4 mu         0.1   0.4 0.420 0.155 
 5 mu         0.1   0.5 0.402 0.210 
 6 mu         0.2   0.1 0.286 0.0993
 7 mu         0.2   0.2 0.346 0.101 
 8 mu         0.2   0.3 0.399 0.0847
 9 mu         0.2   0.4 0.435 0.114 
10 mu         0.2   0.5 0.422 0.159 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.718        0.260  0.000306      4.69
 2 mu         0.2      0.819        0.705  0.0196        5.82
 3 mu         0.3      0.897        0.888  0.123         3.62
 4 mu         0.4      0.957        0.976  0.367         1.76
 5 mu         0.5      0.990        0.994  0.581         1.67
 6 mu         0.6      0.994        1      0.721         1.46
 7 mu         0.7      0.995        0.995  0.659         1.27
 8 mu         0.8      1.01         1.00   0.476         1.40
 9 mu         0.9      1.01         0.992  0.0992        3.03
10 mu_1       0.1      0.768        0.536  0.00138       7.82
11 mu_1       0.2      0.877        0.827  0.0488        4.92
12 mu_1       0.3      0.937        0.961  0.214         2.23
13 mu_1       0.4      0.981        0.994  0.512         1.54
14 mu_1       0.5      0.997        1      0.609         1.68
15 mu_1       0.6      0.994        1.00   0.727         1.38
16 mu_1       0.7      0.996        0.998  0.653         1.30
17 mu_1       0.8      1.01         0.993  0.427         1.50
18 mu_1       0.9      1.01         0.988  0.0818        3.25
19 mu_0       0.1      0.712        0.216  0.000186      4.79
20 mu_0       0.2      0.804        0.646  0.0123        6.05
21 mu_0       0.3      0.881        0.871  0.0834        4.22
22 mu_0       0.4      0.941        0.980  0.271         2.17
23 mu_0       0.5      0.983        0.976  0.553         1.65
24 mu_0       0.6      0.993        1      0.693         1.57
25 mu_0       0.7      0.992        0.995  0.670         1.20
26 mu_0       0.8      1.00         1      0.638         1.41
27 mu_0       0.9      1.02         1      0.256         2.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      28.5    0.0000158   1.40e-17   2679.  
 2 mu         0.2      11.6    0.00445     6.54e-12    916.  
 3 mu         0.3       3.85   0.0684      1.27e- 8    185.  
 4 mu         0.4       1.70   0.262       2.57e- 6     24.5 
 5 mu         0.5       1.21   0.637       1.49e- 4      6.75
 6 mu         0.6       1.13   0.869       3.80e- 3      5.71
 7 mu         0.7       1.11   1.04        3.34e- 4      4.15
 8 mu         0.8       1.14   0.979       1.49e- 6      9.69
 9 mu         0.9       1.12   0.204       1.15e-10     17.9 
10 mu_1       0.1      19.7    0.000108    1.33e-16   1674.  
11 mu_1       0.2       5.35   0.0133      3.11e-11    286.  
12 mu_1       0.3       2.09   0.156       4.02e- 8     38.6 
13 mu_1       0.4       1.30   0.483       6.11e- 6      9.94
14 mu_1       0.5       1.12   0.801       2.82e- 4      5.29
15 mu_1       0.6       1.10   0.909       2.87e- 3      5.81
16 mu_1       0.7       1.11   1.06        5.96e- 5      3.63
17 mu_1       0.8       1.14   0.817       2.33e- 7     10.8 
18 mu_1       0.9       1.10   0.163       8.13e-12     17.8 
19 mu_0       0.1      29.5    0.00000477  0          2791.  
20 mu_0       0.2      13.2    0.00198     0          1073.  
21 mu_0       0.3       4.61   0.0253      0           248.  
22 mu_0       0.4       1.96   0.138       0            38.2 
23 mu_0       0.5       1.30   0.385       0             9.45
24 mu_0       0.6       1.16   0.812       0             5.55
25 mu_0       0.7       1.13   0.925       0             5.38
26 mu_0       0.8       1.15   1.04        0             5.10
27 mu_0       0.9       1.30   0.517       0            18.9 
[1] "Total run time was 93.165 seconds"
