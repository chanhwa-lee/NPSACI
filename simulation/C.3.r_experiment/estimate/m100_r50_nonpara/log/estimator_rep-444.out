
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1238"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7 12  3  8  6  4  5  6  6  5  4  4 10  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03372 0.32244 0.61015 1.00000 5.64814 
[1] "event indicator table: "

  0   1 
721 517 
[1] "treatment indicator table: "

  0   1 
463 775 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 88.277 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.375 0.0682
 2 mu         0.1   0.2 0.446 0.0970
 3 mu         0.1   0.3 0.465 0.0714
 4 mu         0.1   0.4 0.475 0.0655
 5 mu         0.1   0.5 0.494 0.0643
 6 mu         0.2   0.1 0.371 0.0495
 7 mu         0.2   0.2 0.459 0.0629
 8 mu         0.2   0.3 0.520 0.0572
 9 mu         0.2   0.4 0.540 0.0509
10 mu         0.2   0.5 0.587 0.0564
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.668        0.423 0.00000988      4.08
 2 mu         0.2      0.876        0.809 0.00213         2.42
 3 mu         0.3      0.955        0.954 0.0335          2.33
 4 mu         0.4      0.978        0.982 0.175           2.21
 5 mu         0.5      0.989        0.997 0.479           1.60
 6 mu         0.6      1.00         0.999 0.789           1.22
 7 mu         0.7      1.01         1     0.718           1.25
 8 mu         0.8      1.00         0.998 0.442           1.45
 9 mu         0.9      0.986        0.996 0.286           2.48
10 mu_1       0.1      0.875        0.838 0.0000502       3.75
11 mu_1       0.2      0.954        0.973 0.00557         2.59
12 mu_1       0.3      0.976        0.988 0.0607          2.54
13 mu_1       0.4      0.981        0.989 0.250           1.97
14 mu_1       0.5      0.990        0.993 0.579           1.38
15 mu_1       0.6      1.00         1     0.794           1.24
16 mu_1       0.7      1.01         1     0.645           1.28
17 mu_1       0.8      1.00         0.999 0.418           1.49
18 mu_1       0.9      0.986        0.985 0.251           2.60
19 mu_0       0.1      0.644        0.372 0.00000540      4.22
20 mu_0       0.2      0.856        0.767 0.00127         2.58
21 mu_0       0.3      0.946        0.963 0.0218          2.24
22 mu_0       0.4      0.976        0.990 0.125           2.37
23 mu_0       0.5      0.987        0.994 0.379           1.82
24 mu_0       0.6      0.999        1     0.727           1.30
25 mu_0       0.7      1.01         1     0.805           1.25
26 mu_0       0.8      1.01         1     0.541           1.33
27 mu_0       0.9      0.985        0.973 0.287           1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.904    0.0000521  4.18e-15     60.6 
 2 mu         0.2      1.25     0.00477    4.87e-10     26.2 
 3 mu         0.3      1.52     0.0867     4.20e- 7     31.9 
 4 mu         0.4      1.47     0.408      4.79e- 5     28.2 
 5 mu         0.5      1.27     0.816      1.77e- 3     12.1 
 6 mu         0.6      1.14     0.950      9.60e- 3      4.73
 7 mu         0.7      1.14     1.10       2.66e- 4      9.21
 8 mu         0.8      1.23     0.668      1.56e- 6      8.99
 9 mu         0.9      1.35     0.103      2.15e-10     13.6 
10 mu_1       0.1      1.17     0.000335   3.95e-14     43.3 
11 mu_1       0.2      1.51     0.0160     2.30e- 9     23.2 
12 mu_1       0.3      1.62     0.177      1.32e- 6     35.4 
13 mu_1       0.4      1.42     0.595      1.13e- 4     23.5 
14 mu_1       0.5      1.21     0.979      3.35e- 3      9.45
15 mu_1       0.6      1.12     1.05       1.14e- 3      4.81
16 mu_1       0.7      1.14     0.997      2.71e- 5      9.87
17 mu_1       0.8      1.25     0.527      1.39e- 7      8.43
18 mu_1       0.9      1.36     0.0701     1.70e-11     14.6 
19 mu_0       0.1      0.874    0.0000147  0            62.5 
20 mu_0       0.2      1.18     0.00206    0            30.4 
21 mu_0       0.3      1.48     0.0405     0            30.4 
22 mu_0       0.4      1.50     0.249      0            31.3 
23 mu_0       0.5      1.33     0.635      0            16.1 
24 mu_0       0.6      1.17     1.01       0             7.10
25 mu_0       0.7      1.12     1.06       0             7.68
26 mu_0       0.8      1.17     1.03       0            11.2 
27 mu_0       0.9      1.33     0.267      0            13.9 
[1] "Total run time was 91.956 seconds"
