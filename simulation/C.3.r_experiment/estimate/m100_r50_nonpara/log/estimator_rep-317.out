
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1266"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  6  9  2  6  8 10  7  6  2  4  6  9  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02902 0.34607 0.62204 1.00000 5.72182 
[1] "event indicator table: "

  0   1 
740 526 
[1] "treatment indicator table: "

  0   1 
474 792 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 590
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 676
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 83.408 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.219 0.0882
 2 mu         0.1   0.2 0.305 0.0871
 3 mu         0.1   0.3 0.342 0.0943
 4 mu         0.1   0.4 0.439 0.103 
 5 mu         0.1   0.5 0.434 0.114 
 6 mu         0.2   0.1 0.286 0.0477
 7 mu         0.2   0.2 0.351 0.0628
 8 mu         0.2   0.3 0.399 0.0627
 9 mu         0.2   0.4 0.452 0.0739
10 mu         0.2   0.5 0.461 0.0853
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.740        0.224 0.0000109      11.2 
 2 mu         0.2      0.880        0.659 0.00368         5.09
 3 mu         0.3      0.928        0.936 0.0620          2.68
 4 mu         0.4      0.955        0.977 0.283           1.85
 5 mu         0.5      0.975        0.987 0.610           1.41
 6 mu         0.6      0.987        0.996 0.732           1.15
 7 mu         0.7      0.996        1     0.704           1.29
 8 mu         0.8      1.02         1     0.456           2.04
 9 mu         0.9      1.08         0.939 0.133           6.42
10 mu_1       0.1      0.869        0.541 0.0000549       5.16
11 mu_1       0.2      0.924        0.920 0.00932         2.76
12 mu_1       0.3      0.943        0.993 0.106           1.87
13 mu_1       0.4      0.962        0.996 0.375           1.79
14 mu_1       0.5      0.978        0.985 0.681           1.27
15 mu_1       0.6      0.988        0.992 0.732           1.18
16 mu_1       0.7      0.999        1     0.673           1.39
17 mu_1       0.8      1.02         1     0.411           2.20
18 mu_1       0.9      1.09         0.941 0.117           7.03
19 mu_0       0.1      0.726        0.184 0.00000604     12.2 
20 mu_0       0.2      0.869        0.603 0.00227         5.83
21 mu_0       0.3      0.921        0.900 0.0430          3.11
22 mu_0       0.4      0.951        0.981 0.222           1.97
23 mu_0       0.5      0.973        0.986 0.533           1.55
24 mu_0       0.6      0.985        0.991 0.734           1.16
25 mu_0       0.7      0.991        0.999 0.738           1.26
26 mu_0       0.8      0.998        1.00  0.598           1.41
27 mu_0       0.9      1.02         0.969 0.282           2.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.660    0.0000662  1.25e-16     14.5 
 2 mu         0.2      1.84     0.00801    3.28e-11     43.0 
 3 mu         0.3      2.27     0.0823     4.84e- 8     36.9 
 4 mu         0.4      1.78     0.301      8.59e- 6     23.9 
 5 mu         0.5      1.19     0.723      4.77e- 4      7.89
 6 mu         0.6      1.01     0.986      1.27e- 2      2.38
 7 mu         0.7      1.20     1.09       7.02e- 3     10.3 
 8 mu         0.8      1.82     0.658      4.10e- 5     34.2 
 9 mu         0.9      3.08     0.112      4.01e- 9     81.0 
10 mu_1       0.1      1.47     0.000369   1.25e-15     31.1 
11 mu_1       0.2      2.33     0.0269     1.64e-10     47.8 
12 mu_1       0.3      2.19     0.181      1.61e- 7     36.9 
13 mu_1       0.4      1.54     0.466      2.15e- 5     18.0 
14 mu_1       0.5      1.08     0.894      9.54e- 4      5.81
15 mu_1       0.6      1.02     0.991      2.12e- 2      3.33
16 mu_1       0.7      1.28     1.04       2.23e- 3     13.6 
17 mu_1       0.8      1.96     0.531      1.14e- 5     39.4 
18 mu_1       0.9      3.17     0.0762     9.91e-10     84.0 
19 mu_0       0.1      0.570    0.0000266  0            13.2 
20 mu_0       0.2      1.72     0.00408    0            41.8 
21 mu_0       0.3      2.30     0.0342     0            37.3 
22 mu_0       0.4      1.94     0.201      0            27.9 
23 mu_0       0.5      1.31     0.518      0             9.96
24 mu_0       0.6      0.985    0.894      0             3.07
25 mu_0       0.7      1.01     0.980      0             3.67
26 mu_0       0.8      1.26     0.990      0            13.1 
27 mu_0       0.9      2.24     0.286      0            54.0 
[1] "Total run time was 86.812 seconds"
