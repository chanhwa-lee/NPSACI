
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1298"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  2  7  6  7 10  5  4  7 10  5  9  5  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04515 0.37036 0.62033 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
779 519 
[1] "treatment indicator table: "

  0   1 
423 875 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 111.947 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.402 0.117
 2 mu         0.1   0.2 0.485 0.133
 3 mu         0.1   0.3 0.484 0.128
 4 mu         0.1   0.4 0.518 0.131
 5 mu         0.1   0.5 0.583 0.153
 6 mu         0.2   0.1 0.368 0.107
 7 mu         0.2   0.2 0.452 0.120
 8 mu         0.2   0.3 0.455 0.115
 9 mu         0.2   0.4 0.487 0.116
10 mu         0.2   0.5 0.562 0.141
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.854       0.0917 0.00000217      14.5 
 2 mu         0.2      0.865       0.457  0.000603        15.7 
 3 mu         0.3      0.887       0.799  0.0118           5.70
 4 mu         0.4      0.976       0.949  0.0748           3.82
 5 mu         0.5      1.02        0.987  0.245            3.09
 6 mu         0.6      1.01        1      0.519            1.52
 7 mu         0.7      1.01        1.00   0.805            1.30
 8 mu         0.8      1.01        1.02   0.641            1.32
 9 mu         0.9      0.997       0.992  0.285            1.91
10 mu_1       0.1      0.942       0.257  0.0000131       21.7 
11 mu_1       0.2      0.880       0.678  0.00185         11.8 
12 mu_1       0.3      0.927       0.908  0.0245           3.07
13 mu_1       0.4      1.01        0.976  0.119            3.99
14 mu_1       0.5      1.02        0.983  0.322            2.67
15 mu_1       0.6      1.01        0.998  0.599            1.30
16 mu_1       0.7      1.01        1.00   0.806            1.32
17 mu_1       0.8      1.01        1.02   0.612            1.40
18 mu_1       0.9      0.996       0.996  0.257            1.97
19 mu_0       0.1      0.844       0.0706 0.000000954     13.7 
20 mu_0       0.2      0.861       0.391  0.000293        16.6 
21 mu_0       0.3      0.869       0.720  0.00640          6.82
22 mu_0       0.4      0.956       0.891  0.0455           3.72
23 mu_0       0.5      1.01        0.985  0.168            3.50
24 mu_0       0.6      1.01        0.998  0.399            1.85
25 mu_0       0.7      1.00        1.01   0.687            1.29
26 mu_0       0.8      1.01        1.01   0.758            1.35
27 mu_0       0.9      1.01        1.01   0.512            1.39
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    7256.     0.00000491  4.12e-16 720403.  
 2 mu         0.2    3539.     0.00146     1.92e-10 345852.  
 3 mu         0.3     746.     0.0290      2.55e- 7  70342.  
 4 mu         0.4      90.8    0.154       3.32e- 5   7799.  
 5 mu         0.5       7.79   0.485       1.28e- 3    458.  
 6 mu         0.6       1.57   0.884       2.18e- 2     13.3 
 7 mu         0.7       1.15   0.973       2.08e- 2      5.54
 8 mu         0.8       1.22   1.03        8.05e- 5     13.2 
 9 mu         0.9       1.63   0.364       3.89e-10     61.8 
10 mu_1       0.1    7297.     0.0000359   3.91e-15 720403.  
11 mu_1       0.2    1801.     0.00564     9.12e-10 172926.  
12 mu_1       0.3     260.     0.0675      7.65e- 7  23447.  
13 mu_1       0.4      26.1    0.284       7.47e- 5   1950.  
14 mu_1       0.5       3.01   0.747       2.30e- 3     91.5 
15 mu_1       0.6       1.34   0.821       3.27e- 2     10.7 
16 mu_1       0.7       1.14   0.958       7.94e- 3      4.22
17 mu_1       0.8       1.26   0.945       1.01e- 5     15.7 
18 mu_1       0.9       1.66   0.287       4.32e-11     65.3 
19 mu_0       0.1    7252.     0.00000116  0        720403.  
20 mu_0       0.2    3974.     0.000467    0        389083.  
21 mu_0       0.3     955.     0.00921     0         90440.  
22 mu_0       0.4     134.     0.0561      0         11699.  
23 mu_0       0.5      12.6    0.217       0           824.  
24 mu_0       0.6       1.91   0.592       0            27.3 
25 mu_0       0.7       1.17   0.762       0             8.61
26 mu_0       0.8       1.07   1.01        0             3.77
27 mu_0       0.9       1.42   0.621       0            30.9 
[1] "Total run time was 117.001 seconds"
