
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1259"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 15 16 17 18 19 20 
 9  8  5  4  2  5  9  9  7  8  8  5  7  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03822 0.36423 0.62543 1.00000 4.25402 
[1] "event indicator table: "

  0   1 
753 506 
[1] "treatment indicator table: "

  0   1 
452 807 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 103.285 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.269 0.0718
 2 mu         0.1   0.2 0.285 0.0713
 3 mu         0.1   0.3 0.282 0.0770
 4 mu         0.1   0.4 0.342 0.101 
 5 mu         0.1   0.5 0.357 0.105 
 6 mu         0.2   0.1 0.296 0.0604
 7 mu         0.2   0.2 0.337 0.0561
 8 mu         0.2   0.3 0.352 0.0619
 9 mu         0.2   0.4 0.424 0.0829
10 mu         0.2   0.5 0.464 0.0858
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.607        0.144 0.0000341     18.4 
 2 mu         0.2      0.828        0.498 0.00696       14.4 
 3 mu         0.3      0.910        0.859 0.0961         5.51
 4 mu         0.4      0.954        0.981 0.408          1.92
 5 mu         0.5      0.977        1     0.649          1.41
 6 mu         0.6      0.987        0.997 0.755          1.17
 7 mu         0.7      0.991        1     0.636          1.21
 8 mu         0.8      1.01         1     0.346          1.58
 9 mu         0.9      1.07         1     0.0758         3.55
10 mu_1       0.1      0.880        0.445 0.000181      23.1 
11 mu_1       0.2      0.916        0.768 0.0185         9.25
12 mu_1       0.3      0.944        0.987 0.172          2.79
13 mu_1       0.4      0.968        1     0.524          1.63
14 mu_1       0.5      0.982        0.992 0.665          1.23
15 mu_1       0.6      0.988        0.996 0.746          1.16
16 mu_1       0.7      0.992        1     0.590          1.32
17 mu_1       0.8      1.01         1     0.315          1.71
18 mu_1       0.9      1.08         1     0.0651         3.87
19 mu_0       0.1      0.577        0.114 0.0000178     17.9 
20 mu_0       0.2      0.806        0.435 0.00407       15.7 
21 mu_0       0.3      0.895        0.815 0.0636         6.68
22 mu_0       0.4      0.945        0.988 0.308          2.28
23 mu_0       0.5      0.972        1     0.598          1.71
24 mu_0       0.6      0.986        0.989 0.727          1.31
25 mu_0       0.7      0.990        1.00  0.742          1.15
26 mu_0       0.8      0.989        1     0.470          1.31
27 mu_0       0.9      1.00         1     0.172          2.04
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      8.38    0.0000324   9.32e-15    784.  
 2 mu         0.2      6.50    0.00336     1.93e- 9    536.  
 3 mu         0.3      3.17    0.0603      1.56e- 6    163.  
 4 mu         0.4      1.92    0.324       1.53e- 4     28.6 
 5 mu         0.5      1.40    0.775       4.70e- 3     15.5 
 6 mu         0.6      1.06    0.970       6.68e- 2      8.10
 7 mu         0.7      0.979   0.887       2.68e- 3      4.89
 8 mu         0.8      1.16    0.657       7.98e- 6      8.29
 9 mu         0.9      1.30    0.128       3.08e-10     20.6 
10 mu_1       0.1     10.3     0.000231    8.39e-14    922.  
11 mu_1       0.2      4.58    0.0112      8.69e- 9    315.  
12 mu_1       0.3      2.32    0.123       4.65e- 6     63.8 
13 mu_1       0.4      1.69    0.539       3.41e- 4     25.4 
14 mu_1       0.5      1.27    0.867       8.42e- 3     12.9 
15 mu_1       0.6      1.00    0.890       2.88e- 2      5.62
16 mu_1       0.7      0.990   0.870       4.50e- 4      5.37
17 mu_1       0.8      1.19    0.526       1.17e- 6      9.33
18 mu_1       0.9      1.30    0.0983      4.03e-11     22.9 
19 mu_0       0.1      8.17    0.00000729  0           768.  
20 mu_0       0.2      6.98    0.00165     0           591.  
21 mu_0       0.3      3.53    0.0275      0           205.  
22 mu_0       0.4      2.08    0.200       0            42.1 
23 mu_0       0.5      1.52    0.601       0            18.7 
24 mu_0       0.6      1.15    1.07        0            11.8 
25 mu_0       0.7      0.955   0.902       0             4.54
26 mu_0       0.8      1.03    0.893       0             6.35
27 mu_0       0.9      1.30    0.245       0            17.3 
[1] "Total run time was 107.71 seconds"
