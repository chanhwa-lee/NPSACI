
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  8  7  4  6  3  7  6  7  7  4  9  4 10  7  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03213 0.32967 0.62638 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
694 512 
[1] "treatment indicator table: "

  0   1 
420 786 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 127.864 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.522 0.257 
 2 mu         0.1   0.2 0.767 0.304 
 3 mu         0.1   0.3 0.887 0.343 
 4 mu         0.1   0.4 0.929 0.363 
 5 mu         0.1   0.5 0.975 0.389 
 6 mu         0.2   0.1 0.417 0.0874
 7 mu         0.2   0.2 0.575 0.100 
 8 mu         0.2   0.3 0.653 0.111 
 9 mu         0.2   0.4 0.678 0.115 
10 mu         0.2   0.5 0.700 0.120 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.57         0.706  0.000608     56.2 
 2 mu         0.2      1.17         0.950  0.0315       15.9 
 3 mu         0.3      1.04         1      0.198         3.26
 4 mu         0.4      1.01         1      0.459         1.78
 5 mu         0.5      0.998        0.993  0.508         1.43
 6 mu         0.6      0.990        0.982  0.649         1.34
 7 mu         0.7      0.986        0.995  0.687         1.28
 8 mu         0.8      1.00         1      0.401         1.50
 9 mu         0.9      1.04         1      0.112         3.02
10 mu_1       0.1      1.33         0.994  0.00271      31.6 
11 mu_1       0.2      1.06         1      0.0716        5.18
12 mu_1       0.3      1.01         1      0.310         2.18
13 mu_1       0.4      1.00         1      0.448         1.59
14 mu_1       0.5      0.997        0.996  0.574         1.40
15 mu_1       0.6      0.989        0.992  0.732         1.35
16 mu_1       0.7      0.987        1      0.634         1.24
17 mu_1       0.8      1.00         1.01   0.360         1.56
18 mu_1       0.9      1.05         1      0.0963        3.26
19 mu_0       0.1      1.59         0.644  0.000375     58.9 
20 mu_0       0.2      1.19         0.925  0.0215       18.6 
21 mu_0       0.3      1.05         1      0.150         4.09
22 mu_0       0.4      1.01         1      0.423         1.91
23 mu_0       0.5      1.00         0.999  0.442         1.45
24 mu_0       0.6      0.991        0.993  0.525         1.41
25 mu_0       0.7      0.983        0.990  0.668         1.36
26 mu_0       0.8      0.987        1      0.561         1.24
27 mu_0       0.9      0.999        1      0.257         1.97
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.600    0.0000571  1.61e-14     16.7 
 2 mu         0.2      1.33     0.00714    1.06e- 9     22.4 
 3 mu         0.3      1.51     0.0842     6.95e- 7     26.2 
 4 mu         0.4      1.34     0.308      6.93e- 5     12.8 
 5 mu         0.5      1.27     0.855      2.46e- 3      7.82
 6 mu         0.6      1.31     1.03       4.55e- 2      5.10
 7 mu         0.7      1.36     1.25       1.31e- 3      5.35
 8 mu         0.8      1.70     0.931      5.10e- 6     15.9 
 9 mu         0.9      3.30     0.165      2.49e-10     93.3 
10 mu_1       0.1      1.13     0.000429   1.61e-13     23.8 
11 mu_1       0.2      1.58     0.0222     5.29e- 9     29.5 
12 mu_1       0.3      1.48     0.175      2.32e- 6     23.0 
13 mu_1       0.4      1.29     0.564      1.73e- 4     10.6 
14 mu_1       0.5      1.28     1.02       4.93e- 3      6.02
15 mu_1       0.6      1.33     1.16       1.85e- 2      4.78
16 mu_1       0.7      1.40     1.34       3.94e- 4      5.94
17 mu_1       0.8      1.81     0.796      1.34e- 6     19.9 
18 mu_1       0.9      3.49     0.117      5.83e-11    104.  
19 mu_0       0.1      0.541    0.0000179  0            15.9 
20 mu_0       0.2      1.26     0.00260    0            21.1 
21 mu_0       0.3      1.52     0.0313     0            27.6 
22 mu_0       0.4      1.37     0.142      0            15.7 
23 mu_0       0.5      1.26     0.587      0             9.62
24 mu_0       0.6      1.27     1.01       0             5.57
25 mu_0       0.7      1.29     1.02       0             5.06
26 mu_0       0.8      1.29     1.03       0             7.61
27 mu_0       0.9      1.56     0.321      0            19.9 
[1] "Total run time was 133.65 seconds"
