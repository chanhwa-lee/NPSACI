
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1242"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  9  7  2  6  9  6  9 10  5  5  8  6  5  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01201 0.26793 0.52198 0.86312 7.00000 
[1] "event indicator table: "

  0   1 
725 517 
[1] "treatment indicator table: "

  0   1 
505 737 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 609
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 129.25 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.430 0.0822
 2 mu         0.1   0.2 0.510 0.103 
 3 mu         0.1   0.3 0.533 0.103 
 4 mu         0.1   0.4 0.558 0.109 
 5 mu         0.1   0.5 0.592 0.117 
 6 mu         0.2   0.1 0.407 0.0426
 7 mu         0.2   0.2 0.496 0.0575
 8 mu         0.2   0.3 0.526 0.0517
 9 mu         0.2   0.4 0.561 0.0528
10 mu         0.2   0.5 0.602 0.0597
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.884        0.421   0.00285     11.9 
 2 mu         0.2      0.962        0.848   0.0864       4.15
 3 mu         0.3      1.01         1       0.295        1.76
 4 mu         0.4      1.03         1.01    0.568        1.45
 5 mu         0.5      1.02         1.01    0.800        1.22
 6 mu         0.6      1.01         1.00    0.875        1.21
 7 mu         0.7      0.994        0.993   0.802        1.18
 8 mu         0.8      0.973        0.991   0.615        1.42
 9 mu         0.9      0.916        0.938   0.157        1.89
10 mu_1       0.1      0.904        0.766   0.0114       6.42
11 mu_1       0.2      0.988        0.961   0.156        2.32
12 mu_1       0.3      1.03         1       0.392        1.67
13 mu_1       0.4      1.03         1.01    0.665        1.34
14 mu_1       0.5      1.02         1.01    0.827        1.23
15 mu_1       0.6      1.00         0.997   0.890        1.22
16 mu_1       0.7      0.991        0.992   0.782        1.20
17 mu_1       0.8      0.969        0.984   0.574        1.48
18 mu_1       0.9      0.912        0.916   0.136        1.94
19 mu_0       0.1      0.882        0.381   0.00191     13.2 
20 mu_0       0.2      0.955        0.796   0.0626       4.70
21 mu_0       0.3      1.01         0.976   0.254        2.01
22 mu_0       0.4      1.03         1.01    0.504        1.51
23 mu_0       0.5      1.03         1.02    0.766        1.26
24 mu_0       0.6      1.01         1.01    0.847        1.21
25 mu_0       0.7      1.00         0.993   0.847        1.23
26 mu_0       0.8      0.988        0.981   0.751        1.22
27 mu_0       0.9      0.954        0.968   0.350        1.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.258     0.000345  5.29e-13      7.13
 2 mu         0.2      1.09      0.0244    1.54e- 8     21.9 
 3 mu         0.3      1.52      0.181     5.91e- 6     20.4 
 4 mu         0.4      1.40      0.528     3.79e- 4     10.9 
 5 mu         0.5      1.13      1.01      8.97e- 3      3.83
 6 mu         0.6      0.969     0.958     9.58e- 2      2.40
 7 mu         0.7      0.987     0.986     3.16e- 3      3.26
 8 mu         0.8      1.17      0.486     1.85e- 5      5.48
 9 mu         0.9      1.39      0.0591    1.81e- 9     19.4 
10 mu_1       0.1      0.649     0.00197   4.96e-12     15.9 
11 mu_1       0.2      1.51      0.0755    7.22e- 8     25.0 
12 mu_1       0.3      1.62      0.352     1.85e- 5     17.0 
13 mu_1       0.4      1.35      0.855     8.88e- 4      8.00
14 mu_1       0.5      1.09      1.14      1.68e- 2      3.28
15 mu_1       0.6      0.971     0.992     3.55e- 2      2.44
16 mu_1       0.7      1.02      0.955     1.00e- 3      3.78
17 mu_1       0.8      1.21      0.354     5.13e- 6      5.90
18 mu_1       0.9      1.41      0.0394    4.46e-10     21.6 
19 mu_0       0.1      0.214     0.000196  0             6.16
20 mu_0       0.2      0.989     0.0118    0            21.3 
21 mu_0       0.3      1.48      0.103     0            21.9 
22 mu_0       0.4      1.43      0.340     0            12.8 
23 mu_0       0.5      1.17      0.780     0             5.25
24 mu_0       0.6      0.966     0.951     0             2.74
25 mu_0       0.7      0.900     0.946     0             2.26
26 mu_0       0.8      0.984     0.860     0             5.14
27 mu_0       0.9      1.20      0.176     0             7.57
[1] "Total run time was 132.852 seconds"
