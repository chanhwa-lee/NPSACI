
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1254"
[1] "cluster size dist'n: "

 5  6  7  8 10 11 12 13 14 15 16 17 18 19 20 
 4  3  4 12 12  9  9  5  9  4  6  9  5  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06897 0.43729 0.67055 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
734 520 
[1] "treatment indicator table: "

  0   1 
399 855 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 102.61 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.487 0.0824
 2 mu         0.1   0.2 0.551 0.0940
 3 mu         0.1   0.3 0.579 0.104 
 4 mu         0.1   0.4 0.676 0.122 
 5 mu         0.1   0.5 0.696 0.130 
 6 mu         0.2   0.1 0.351 0.0355
 7 mu         0.2   0.2 0.400 0.0334
 8 mu         0.2   0.3 0.411 0.0361
 9 mu         0.2   0.4 0.485 0.0477
10 mu         0.2   0.5 0.496 0.0501
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.31         0.572  0.000416     14.5 
 2 mu         0.2      0.980        0.947  0.0148        3.99
 3 mu         0.3      0.960        0.959  0.0928        1.90
 4 mu         0.4      0.988        1      0.282         1.71
 5 mu         0.5      1.01         1.02   0.579         1.44
 6 mu         0.6      1.01         1      0.631         1.30
 7 mu         0.7      1.01         1.01   0.735         1.24
 8 mu         0.8      0.993        0.988  0.709         1.40
 9 mu         0.9      0.979        0.981  0.496         1.50
10 mu_1       0.1      0.964        0.877  0.00187       8.08
11 mu_1       0.2      0.935        0.929  0.0352        2.03
12 mu_1       0.3      0.970        0.984  0.157         1.85
13 mu_1       0.4      0.997        1      0.389         1.64
14 mu_1       0.5      1.01         1.01   0.590         1.43
15 mu_1       0.6      1.01         1      0.665         1.29
16 mu_1       0.7      1.01         1.01   0.724         1.30
17 mu_1       0.8      0.991        0.990  0.699         1.41
18 mu_1       0.9      0.979        0.976  0.463         1.57
19 mu_0       0.1      1.34         0.528  0.000255     15.3 
20 mu_0       0.2      0.991        0.883  0.00973       4.68
21 mu_0       0.3      0.955        0.948  0.0651        2.10
22 mu_0       0.4      0.981        0.988  0.211         1.77
23 mu_0       0.5      1.00         1.01   0.460         1.52
24 mu_0       0.6      1.01         1.02   0.579         1.38
25 mu_0       0.7      1.01         1.00   0.708         1.27
26 mu_0       0.8      0.999        1.00   0.704         1.37
27 mu_0       0.9      0.983        0.996  0.688         1.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.172  0.00000616   2.49e-17      4.86
 2 mu         0.2      0.566  0.000879     6.54e-12      8.57
 3 mu         0.3      0.957  0.0187       9.66e- 9     10.0 
 4 mu         0.4      1.21   0.194        1.71e- 6     16.6 
 5 mu         0.5      1.30   0.602        9.51e- 5     22.1 
 6 mu         0.6      1.23   0.791        2.53e- 3     16.6 
 7 mu         0.7      1.12   1.01         4.90e- 3      6.54
 8 mu         0.8      1.15   1.12         3.27e- 5      3.51
 9 mu         0.9      1.31   0.297        3.60e- 9      8.28
10 mu_1       0.1      0.427  0.0000443    2.49e-16      8.10
11 mu_1       0.2      0.865  0.00310      3.27e-11     11.3 
12 mu_1       0.3      1.16   0.0519       3.22e- 8     10.9 
13 mu_1       0.4      1.29   0.305        4.28e- 6     20.8 
14 mu_1       0.5      1.29   0.673        1.90e- 4     22.1 
15 mu_1       0.6      1.18   0.849        4.22e- 3     13.9 
16 mu_1       0.7      1.10   1.09         1.84e- 3      4.67
17 mu_1       0.8      1.17   1.01         1.08e- 5      3.57
18 mu_1       0.9      1.33   0.218        1.05e- 9      9.21
19 mu_0       0.1      0.143  0.000000708  0             4.50
20 mu_0       0.2      0.491  0.000299     0             7.90
21 mu_0       0.3      0.870  0.00755      0            10.6 
22 mu_0       0.4      1.15   0.0848       0            13.9 
23 mu_0       0.5      1.30   0.408        0            22.1 
24 mu_0       0.6      1.30   0.654        0            20.8 
25 mu_0       0.7      1.16   0.762        0            10.9 
26 mu_0       0.8      1.06   0.881        0             3.69
27 mu_0       0.9      1.11   0.308        0             4.95
[1] "Total run time was 106.076 seconds"
