
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1238"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5 10  8  6  8  7  5  2  4  8  4 11  6  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01737 0.32047 0.56875 1.00000 4.50284 
[1] "event indicator table: "

  0   1 
747 491 
[1] "treatment indicator table: "

  0   1 
470 768 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 588
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 96.631 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.492 0.114 
 2 mu         0.1   0.2 0.502 0.103 
 3 mu         0.1   0.3 0.604 0.118 
 4 mu         0.1   0.4 0.598 0.113 
 5 mu         0.1   0.5 0.668 0.123 
 6 mu         0.2   0.1 0.422 0.0722
 7 mu         0.2   0.2 0.445 0.0657
 8 mu         0.2   0.3 0.536 0.0674
 9 mu         0.2   0.4 0.537 0.0672
10 mu         0.2   0.5 0.606 0.0728
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.877        0.575  0.000503      6.62
 2 mu         0.2      0.967        0.913  0.0248        4.11
 3 mu         0.3      0.990        0.979  0.172         2.31
 4 mu         0.4      0.996        0.979  0.526         1.45
 5 mu         0.5      1.00         1      0.706         1.23
 6 mu         0.6      1.00         1      0.847         1.17
 7 mu         0.7      0.994        1      0.758         1.25
 8 mu         0.8      0.984        1      0.465         1.30
 9 mu         0.9      0.966        1      0.0828        2.07
10 mu_1       0.1      0.938        0.908  0.00211       5.63
11 mu_1       0.2      0.970        0.989  0.0548        2.57
12 mu_1       0.3      0.981        0.972  0.275         1.69
13 mu_1       0.4      0.993        0.991  0.612         1.33
14 mu_1       0.5      1.00         1.00   0.753         1.23
15 mu_1       0.6      0.999        1.00   0.799         1.18
16 mu_1       0.7      0.992        1      0.703         1.29
17 mu_1       0.8      0.982        0.998  0.415         1.34
18 mu_1       0.9      0.965        1      0.0691        2.13
19 mu_0       0.1      0.870        0.523  0.000325      7.20
20 mu_0       0.2      0.966        0.896  0.0173        4.51
21 mu_0       0.3      0.994        0.971  0.128         2.67
22 mu_0       0.4      0.998        0.976  0.424         1.73
23 mu_0       0.5      1.00         1      0.658         1.32
24 mu_0       0.6      1.00         1.01   0.830         1.17
25 mu_0       0.7      0.997        1.00   0.753         1.17
26 mu_0       0.8      0.991        1      0.662         1.37
27 mu_0       0.9      0.975        1      0.206         1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.77    0.000176   2.85e-16     97.6 
 2 mu         0.2       1.98    0.0154     7.48e-11     60.1 
 3 mu         0.3       1.69    0.120      1.11e- 7     23.7 
 4 mu         0.4       1.33    0.443      1.96e- 5     13.1 
 5 mu         0.5       1.15    0.928      9.05e- 4      4.13
 6 mu         0.6       1.11    1.17       2.01e- 2      2.22
 7 mu         0.7       1.13    1.12       2.89e- 3      2.60
 8 mu         0.8       1.26    0.700      2.53e- 5      6.81
 9 mu         0.9       1.81    0.0927     4.95e- 9     42.8 
10 mu_1       0.1       2.36    0.00118    2.85e-15     88.7 
11 mu_1       0.2       1.81    0.0512     3.74e-10     27.3 
12 mu_1       0.3       1.39    0.277      3.69e- 7     21.3 
13 mu_1       0.4       1.15    0.703      4.90e- 5      9.09
14 mu_1       0.5       1.10    1.04       1.81e- 3      3.62
15 mu_1       0.6       1.11    1.18       2.57e- 2      2.29
16 mu_1       0.7       1.14    0.985      9.70e- 4      2.98
17 mu_1       0.8       1.29    0.541      7.44e- 6      7.66
18 mu_1       0.9       1.87    0.0647     1.29e- 9     47.6 
19 mu_0       0.1       1.70    0.0000675  0            98.6 
20 mu_0       0.2       2.02    0.00640    0            68.3 
21 mu_0       0.3       1.82    0.0558     0            30.8 
22 mu_0       0.4       1.45    0.265      0            15.7 
23 mu_0       0.5       1.20    0.714      0             6.38
24 mu_0       0.6       1.11    1.08       0             2.94
25 mu_0       0.7       1.11    1.16       0             2.44
26 mu_0       0.8       1.15    1.03       0             4.36
27 mu_0       0.9       1.25    0.198      0            14.2 
[1] "Total run time was 100.033 seconds"
