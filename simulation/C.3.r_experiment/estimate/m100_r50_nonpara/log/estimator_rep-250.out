
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1248"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  5 11  8  8  3  4 11  5  5  7  3 12  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03958 0.35761 0.62396 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
768 480 
[1] "treatment indicator table: "

  0   1 
445 803 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 577
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 91.205 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.239 0.0552
 2 mu         0.1   0.2 0.291 0.0579
 3 mu         0.1   0.3 0.319 0.0542
 4 mu         0.1   0.4 0.328 0.0703
 5 mu         0.1   0.5 0.360 0.0756
 6 mu         0.2   0.1 0.268 0.0405
 7 mu         0.2   0.2 0.339 0.0489
 8 mu         0.2   0.3 0.383 0.0437
 9 mu         0.2   0.4 0.405 0.0600
10 mu         0.2   0.5 0.441 0.0656
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.575        0.210 0.0000587      3.37
 2 mu         0.2      0.758        0.635 0.00933        3.01
 3 mu         0.3      0.893        0.888 0.105          2.61
 4 mu         0.4      0.955        0.959 0.386          1.89
 5 mu         0.5      0.982        0.995 0.663          1.39
 6 mu         0.6      0.995        0.989 0.754          1.26
 7 mu         0.7      0.996        1     0.771          1.26
 8 mu         0.8      0.985        0.998 0.465          1.94
 9 mu         0.9      0.946        0.961 0.116          4.71
10 mu_1       0.1      0.688        0.502 0.000267       3.94
11 mu_1       0.2      0.863        0.795 0.0216         2.54
12 mu_1       0.3      0.947        0.969 0.168          2.53
13 mu_1       0.4      0.974        0.975 0.474          1.60
14 mu_1       0.5      0.989        0.989 0.753          1.37
15 mu_1       0.6      0.998        0.997 0.746          1.25
16 mu_1       0.7      0.997        0.994 0.712          1.29
17 mu_1       0.8      0.982        1     0.403          2.07
18 mu_1       0.9      0.942        0.964 0.0933         5.18
19 mu_0       0.1      0.563        0.176 0.0000356      3.67
20 mu_0       0.2      0.731        0.596 0.00626        3.15
21 mu_0       0.3      0.871        0.850 0.0773         2.64
22 mu_0       0.4      0.943        0.956 0.313          2.08
23 mu_0       0.5      0.974        0.989 0.573          1.42
24 mu_0       0.6      0.990        0.991 0.751          1.42
25 mu_0       0.7      0.995        0.990 0.744          1.25
26 mu_0       0.8      0.995        1     0.616          1.40
27 mu_0       0.9      0.986        1     0.280          2.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      73.2     0.0000386  1.76e-15   5120.  
 2 mu         0.2      45.1     0.00521    1.15e-10   3111.  
 3 mu         0.3      14.5     0.0622     7.57e- 8    826.  
 4 mu         0.4       3.85    0.277      7.55e- 6    149.  
 5 mu         0.5       1.47    0.627      2.68e- 4     30.1 
 6 mu         0.6       1.11    0.943      4.96e- 3      3.88
 7 mu         0.7       1.59    1.14       5.83e- 3     21.2 
 8 mu         0.8       4.32    0.789      1.16e- 5    178.  
 9 mu         0.9      12.8     0.130      2.24e-10    836.  
10 mu_1       0.1      77.3     0.000345   1.76e-14   5689.  
11 mu_1       0.2      24.2     0.0186     5.76e-10   1728.  
12 mu_1       0.3       5.73    0.137      2.52e- 7    306.  
13 mu_1       0.4       1.79    0.489      1.89e- 5     34.6 
14 mu_1       0.5       1.12    0.797      5.36e- 4      5.48
15 mu_1       0.6       1.11    1.02       8.27e- 3      4.06
16 mu_1       0.7       1.81    1.04       9.25e- 4     28.7 
17 mu_1       0.8       4.89    0.660      1.61e- 6    212.  
18 mu_1       0.9      13.4     0.0996     2.76e-11    882.  
19 mu_0       0.1      72.7     0.0000161  0          5057.  
20 mu_0       0.2      50.4     0.00187    0          3457.  
21 mu_0       0.3      18.3     0.0261     0          1049.  
22 mu_0       0.4       5.23    0.134      0           226.  
23 mu_0       0.5       1.83    0.412      0            54.8 
24 mu_0       0.6       1.10    0.748      0             8.83
25 mu_0       0.7       1.08    0.888      0             4.60
26 mu_0       0.8       2.03    0.952      0            44.6 
27 mu_0       0.9       7.71    0.289      0           418.  
[1] "Total run time was 94.651 seconds"
