
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1281"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  6  7  5  4  8  8  4  7  6  4  7  9  9  3  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03805 0.38443 0.67361 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
787 494 
[1] "treatment indicator table: "

  0   1 
429 852 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 688
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 110.695 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.238 0.181 
 2 mu         0.1   0.2 0.477 0.231 
 3 mu         0.1   0.3 0.491 0.245 
 4 mu         0.1   0.4 0.471 0.258 
 5 mu         0.1   0.5 0.497 0.296 
 6 mu         0.2   0.1 0.234 0.0793
 7 mu         0.2   0.2 0.410 0.0939
 8 mu         0.2   0.3 0.422 0.0976
 9 mu         0.2   0.4 0.419 0.105 
10 mu         0.2   0.5 0.465 0.120 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.14         0.250 0.0000486     52.6 
 2 mu         0.2      0.991        0.647 0.00816       18.5 
 3 mu         0.3      0.949        0.904 0.0952         4.67
 4 mu         0.4      0.978        0.987 0.358          1.70
 5 mu         0.5      1.00         0.999 0.604          1.49
 6 mu         0.6      1.01         1     0.740          1.26
 7 mu         0.7      1.00         1     0.827          1.16
 8 mu         0.8      1.00         0.999 0.739          1.29
 9 mu         0.9      0.996        0.980 0.606          1.86
10 mu_1       0.1      1.13         0.489 0.000222      33.0 
11 mu_1       0.2      0.949        0.825 0.0191         6.43
12 mu_1       0.3      0.958        0.966 0.154          2.15
13 mu_1       0.4      0.992        1     0.439          1.57
14 mu_1       0.5      1.01         0.999 0.671          1.45
15 mu_1       0.6      1.01         1.00  0.768          1.26
16 mu_1       0.7      1.00         1     0.793          1.18
17 mu_1       0.8      0.999        0.996 0.743          1.30
18 mu_1       0.9      0.995        0.973 0.586          1.95
19 mu_0       0.1      1.14         0.207 0.0000294     54.8 
20 mu_0       0.2      1.00         0.600 0.00543       21.5 
21 mu_0       0.3      0.945        0.864 0.0699         5.84
22 mu_0       0.4      0.969        0.969 0.290          1.96
23 mu_0       0.5      1.00         0.998 0.537          1.55
24 mu_0       0.6      1.01         0.996 0.699          1.34
25 mu_0       0.7      1.01         1     0.836          1.23
26 mu_0       0.8      1.00         1     0.724          1.28
27 mu_0       0.9      1.00         1.00  0.595          1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.517    0.0000493  1.04e-18     24.8 
 2 mu         0.2      0.910    0.00562    1.09e-12     24.5 
 3 mu         0.3      1.22     0.0506     3.61e- 9     16.5 
 4 mu         0.4      1.25     0.227      1.14e- 6     12.5 
 5 mu         0.5      1.15     0.683      9.87e- 5      7.73
 6 mu         0.6      1.05     1.07       3.78e- 3      3.55
 7 mu         0.7      1.02     1.04       5.48e- 3      2.25
 8 mu         0.8      1.05     1.05       3.66e- 5      3.26
 9 mu         0.9      1.01     0.246      4.03e- 9     12.6 
10 mu_1       0.1      0.833    0.000308   1.04e-17     35.5 
11 mu_1       0.2      1.08     0.0208     5.43e-12     17.5 
12 mu_1       0.3      1.27     0.114      1.20e- 8     13.0 
13 mu_1       0.4      1.22     0.400      2.85e- 6     11.8 
14 mu_1       0.5      1.11     0.900      1.97e- 4      5.80
15 mu_1       0.6      1.04     1.03       6.31e- 3      3.25
16 mu_1       0.7      1.03     1.10       2.06e- 3      2.32
17 mu_1       0.8      1.05     0.933      1.20e- 5      3.60
18 mu_1       0.9      0.995    0.193      1.18e- 9     14.0 
19 mu_0       0.1      0.482    0.0000176  0            23.7 
20 mu_0       0.2      0.868    0.00157    0            26.3 
21 mu_0       0.3      1.21     0.0190     0            20.2 
22 mu_0       0.4      1.28     0.0994     0            13.1 
23 mu_0       0.5      1.18     0.408      0             9.66
24 mu_0       0.6      1.07     0.836      0             3.99
25 mu_0       0.7      1.02     1.05       0             2.18
26 mu_0       0.8      1.06     1.20       0             2.43
27 mu_0       0.9      1.14     0.703      0             6.15
[1] "Total run time was 114.551 seconds"
