
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1268"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 20 
 3  6  9  5  5 10  4  6  6  8  7  9  8  1 13 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02802 0.31155 0.61588 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
778 490 
[1] "treatment indicator table: "

  0   1 
479 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 646
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 161.476 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.436 0.0892
 2 mu         0.1   0.2 0.524 0.0934
 3 mu         0.1   0.3 0.610 0.109 
 4 mu         0.1   0.4 0.619 0.111 
 5 mu         0.1   0.5 0.630 0.113 
 6 mu         0.2   0.1 0.373 0.0478
 7 mu         0.2   0.2 0.455 0.0521
 8 mu         0.2   0.3 0.534 0.0548
 9 mu         0.2   0.4 0.548 0.0548
10 mu         0.2   0.5 0.563 0.0550
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.19         0.885   0.00600      8.65
 2 mu         0.2      1.04         0.983   0.136        2.94
 3 mu         0.3      0.996        0.987   0.429        1.67
 4 mu         0.4      0.997        0.985   0.684        1.59
 5 mu         0.5      1.00         1       0.800        1.37
 6 mu         0.6      1.01         1.00    0.847        1.18
 7 mu         0.7      1.01         1.01    0.788        1.28
 8 mu         0.8      0.996        1.02    0.526        1.51
 9 mu         0.9      0.965        0.963   0.199        1.58
10 mu_1       0.1      1.03         0.958   0.0223       4.33
11 mu_1       0.2      0.985        0.954   0.235        1.70
12 mu_1       0.3      0.991        0.980   0.583        1.50
13 mu_1       0.4      1.00         0.999   0.761        1.59
14 mu_1       0.5      1.00         0.991   0.803        1.28
15 mu_1       0.6      1.01         1.01    0.819        1.20
16 mu_1       0.7      1.01         1.02    0.765        1.37
17 mu_1       0.8      0.993        1.01    0.479        1.54
18 mu_1       0.9      0.962        0.965   0.179        1.60
19 mu_0       0.1      1.21         0.853   0.00419      9.59
20 mu_0       0.2      1.05         0.991   0.112        3.25
21 mu_0       0.3      0.998        0.999   0.329        1.82
22 mu_0       0.4      0.994        0.985   0.568        1.59
23 mu_0       0.5      0.997        0.987   0.757        1.46
24 mu_0       0.6      1.00         0.988   0.808        1.21
25 mu_0       0.7      1.01         1.02    0.798        1.21
26 mu_0       0.8      1.01         1.01    0.706        1.36
27 mu_0       0.9      0.993        1.01    0.372        1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.48     0.0000487  1.24e-16     66.2 
 2 mu         0.2      1.50     0.00425    5.80e-11     31.8 
 3 mu         0.3      1.11     0.0486     1.13e- 7      7.94
 4 mu         0.4      0.931    0.293      2.28e- 5      3.85
 5 mu         0.5      0.906    0.665      1.32e- 3      3.65
 6 mu         0.6      0.934    0.885      1.09e- 3      3.16
 7 mu         0.7      1.07     1.15       8.38e- 6      2.90
 8 mu         0.8      1.35     0.770      7.40e- 9      5.83
 9 mu         0.9      1.68     0.120      3.57e-14     18.7 
10 mu_1       0.1      2.03     0.000322   1.18e-15     66.2 
11 mu_1       0.2      1.37     0.0140     2.76e-10     15.9 
12 mu_1       0.3      0.978    0.113      3.56e- 7      5.75
13 mu_1       0.4      0.889    0.417      5.42e- 5      3.61
14 mu_1       0.5      0.899    0.604      2.51e- 3      3.86
15 mu_1       0.6      0.951    0.925      1.82e- 4      2.79
16 mu_1       0.7      1.11     1.11       1.20e- 6      3.11
17 mu_1       0.8      1.41     0.641      9.25e-10      6.56
18 mu_1       0.9      1.70     0.0894     3.97e-15     19.7 
19 mu_0       0.1      1.42     0.0000120  0            66.2 
20 mu_0       0.2      1.53     0.00159    0            35.8 
21 mu_0       0.3      1.16     0.0211     0             9.92
22 mu_0       0.4      0.958    0.178      0             5.24
23 mu_0       0.5      0.912    0.461      0             3.43
24 mu_0       0.6      0.908    0.713      0             3.71
25 mu_0       0.7      0.956    0.960      0             2.78
26 mu_0       0.8      1.13     1.01       0             3.54
27 mu_0       0.9      1.50     0.319      0            12.2 
[1] "Total run time was 166.552 seconds"
