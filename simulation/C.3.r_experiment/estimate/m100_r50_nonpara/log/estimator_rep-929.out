
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  6  7  5  9  9  9  9  4  4 12  4  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02698 0.31627 0.59964 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
736 516 
[1] "treatment indicator table: "

  0   1 
483 769 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 83.95 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.278 0.123 
 2 mu         0.1   0.2 0.397 0.151 
 3 mu         0.1   0.3 0.439 0.144 
 4 mu         0.1   0.4 0.447 0.154 
 5 mu         0.1   0.5 0.493 0.155 
 6 mu         0.2   0.1 0.332 0.0764
 7 mu         0.2   0.2 0.441 0.0935
 8 mu         0.2   0.3 0.476 0.0963
 9 mu         0.2   0.4 0.485 0.104 
10 mu         0.2   0.5 0.546 0.101 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.471   0.00154     22.3 
 2 mu         0.2      1.10         0.835   0.0420      13.6 
 3 mu         0.3      1.01         0.958   0.186        4.31
 4 mu         0.4      0.980        0.952   0.396        1.89
 5 mu         0.5      0.986        0.987   0.607        1.31
 6 mu         0.6      1.00         1.00    0.825        1.34
 7 mu         0.7      1.02         1.01    0.761        1.58
 8 mu         0.8      1.04         1.00    0.555        1.93
 9 mu         0.9      1.06         1       0.232        4.06
10 mu_1       0.1      1.22         0.806   0.00610     24.2 
11 mu_1       0.2      1.05         0.922   0.0859       8.26
12 mu_1       0.3      0.983        0.975   0.270        2.40
13 mu_1       0.4      0.976        0.983   0.476        1.62
14 mu_1       0.5      0.991        0.990   0.674        1.34
15 mu_1       0.6      1.01         1       0.826        1.32
16 mu_1       0.7      1.03         1.00    0.688        1.64
17 mu_1       0.8      1.05         1       0.486        2.13
18 mu_1       0.9      1.06         1       0.210        4.34
19 mu_0       0.1      1.06         0.415   0.00104     22.1 
20 mu_0       0.2      1.12         0.810   0.0311      15.0 
21 mu_0       0.3      1.02         0.923   0.150        5.18
22 mu_0       0.4      0.982        0.963   0.343        2.07
23 mu_0       0.5      0.981        0.981   0.540        1.44
24 mu_0       0.6      0.995        0.999   0.745        1.37
25 mu_0       0.7      1.01         1       0.805        1.44
26 mu_0       0.8      1.03         1       0.744        1.78
27 mu_0       0.9      1.05         1       0.426        2.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.852    0.000156   9.33e-15     26.8 
 2 mu         0.2      1.65     0.0122     1.09e- 9     37.2 
 3 mu         0.3      1.76     0.106      9.37e- 7     25.2 
 4 mu         0.4      1.44     0.417      1.07e- 4     11.2 
 5 mu         0.5      1.14     0.823      3.39e- 3      4.84
 6 mu         0.6      1.06     0.966      5.01e- 2      3.58
 7 mu         0.7      1.22     0.954      7.95e- 3      6.59
 8 mu         0.8      1.50     0.638      6.07e- 5     11.0 
 9 mu         0.9      1.67     0.0652     7.51e- 9     19.2 
10 mu_1       0.1      1.69     0.00104    8.81e-14     48.8 
11 mu_1       0.2      1.91     0.0374     5.13e- 9     33.8 
12 mu_1       0.3      1.63     0.243      2.95e- 6     15.2 
13 mu_1       0.4      1.27     0.648      2.52e- 4      6.26
14 mu_1       0.5      1.07     0.880      6.38e- 3      4.46
15 mu_1       0.6      1.09     1.00       6.26e- 2      4.26
16 mu_1       0.7      1.30     0.955      3.41e- 3      7.32
17 mu_1       0.8      1.55     0.505      2.27e- 5     12.2 
18 mu_1       0.9      1.68     0.0450     2.50e- 9     21.3 
19 mu_0       0.1      0.759    0.0000506  0            24.4 
20 mu_0       0.2      1.59     0.00558    0            38.0 
21 mu_0       0.3      1.81     0.0527     0            29.4 
22 mu_0       0.4      1.56     0.255      0            15.2 
23 mu_0       0.5      1.21     0.727      0             5.54
24 mu_0       0.6      1.02     0.831      0             4.08
25 mu_0       0.7      1.05     0.917      0             4.88
26 mu_0       0.8      1.28     0.981      0             9.38
27 mu_0       0.9      1.61     0.201      0            15.7 
[1] "Total run time was 87.289 seconds"
