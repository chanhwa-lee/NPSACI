
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1263"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  6  6  5  7  3  9  4  8  4  9  6  7  7  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02368 0.31901 0.60699 1.00000 4.22853 
[1] "event indicator table: "

  0   1 
744 519 
[1] "treatment indicator table: "

  0   1 
447 816 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 92.61 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.237 0.0901
 2 mu         0.1   0.2 0.278 0.0646
 3 mu         0.1   0.3 0.268 0.0910
 4 mu         0.1   0.4 0.272 0.119 
 5 mu         0.1   0.5 0.348 0.0697
 6 mu         0.2   0.1 0.170 0.0867
 7 mu         0.2   0.2 0.223 0.0694
 8 mu         0.2   0.3 0.250 0.101 
 9 mu         0.2   0.4 0.257 0.131 
10 mu         0.2   0.5 0.352 0.0551
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.671        0.595 0.0000337      3.24
 2 mu         0.2      0.751        0.819 0.00621        2.55
 3 mu         0.3      0.890        0.953 0.0793         3.03
 4 mu         0.4      0.996        0.984 0.288          3.56
 5 mu         0.5      1.02         1     0.526          2.42
 6 mu         0.6      1.00         0.995 0.708          1.67
 7 mu         0.7      0.992        0.990 0.682          1.40
 8 mu         0.8      0.999        1     0.393          1.72
 9 mu         0.9      1.02         1     0.100          2.70
10 mu_1       0.1      0.726        0.750 0.000155       3.43
11 mu_1       0.2      0.827        0.928 0.0147         1.93
12 mu_1       0.3      0.962        0.958 0.131          3.68
13 mu_1       0.4      1.03         0.998 0.348          3.36
14 mu_1       0.5      1.02         1     0.615          2.03
15 mu_1       0.6      1.00         0.998 0.734          1.57
16 mu_1       0.7      0.991        0.990 0.633          1.46
17 mu_1       0.8      1.00         0.998 0.369          1.86
18 mu_1       0.9      1.02         1     0.0869         2.90
19 mu_0       0.1      0.665        0.542 0.0000202      3.42
20 mu_0       0.2      0.731        0.821 0.00407        2.70
21 mu_0       0.3      0.859        0.952 0.0573         2.75
22 mu_0       0.4      0.976        0.976 0.247          3.69
23 mu_0       0.5      1.02         1     0.438          2.82
24 mu_0       0.6      1.01         1     0.665          1.83
25 mu_0       0.7      0.993        0.989 0.711          1.43
26 mu_0       0.8      0.986        0.993 0.492          1.61
27 mu_0       0.9      1.01         0.997 0.222          2.26
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.69   0.0000388   2.27e-18    580.  
 2 mu         0.2      28.4    0.00507     1.19e-12   2541.  
 3 mu         0.3      32.3    0.0901      2.64e- 9   2961.  
 4 mu         0.4      19.3    0.369       6.24e- 7   1717.  
 5 mu         0.5       7.29   0.817       4.33e- 5    564.  
 6 mu         0.6       2.35   1.07        1.38e- 3    100.  
 7 mu         0.7       1.31   1.04        2.59e- 2      7.86
 8 mu         0.8       1.81   0.609       1.48e- 3     34.1 
 9 mu         0.9       4.80   0.0805      1.70e- 6    178.  
10 mu_1       0.1      18.9    0.000227    2.27e-17   1547.  
11 mu_1       0.2      37.0    0.0161      5.95e-12   3388.  
12 mu_1       0.3      28.7    0.171       8.79e- 9   2632.  
13 mu_1       0.4      13.3    0.634       1.56e- 6   1145.  
14 mu_1       0.5       4.50   1.10        8.66e- 5    301.  
15 mu_1       0.6       1.72   1.01        2.31e- 3     44.7 
16 mu_1       0.7       1.29   1.06        1.88e- 2      7.52
17 mu_1       0.8       1.99   0.490       4.27e- 4     42.7 
18 mu_1       0.9       5.16   0.0565      5.28e- 7    197.  
19 mu_0       0.1       6.45   0.00000777  0           473.  
20 mu_0       0.2      26.2    0.00243     0          2329.  
21 mu_0       0.3      33.9    0.0423      0          3102.  
22 mu_0       0.4      23.3    0.235       0          2099.  
23 mu_0       0.5      10.1    0.588       0           828.  
24 mu_0       0.6       3.30   1.11        0           184.  
25 mu_0       0.7       1.37   1.04        0            19.2 
26 mu_0       0.8       1.07   0.700       0             8.51
27 mu_0       0.9       1.57   0.0927      0            63.1 
[1] "Total run time was 96.866 seconds"
