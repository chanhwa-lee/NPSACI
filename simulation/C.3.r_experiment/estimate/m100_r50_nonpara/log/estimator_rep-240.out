
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1297"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  3 11  5  3  8  5 13  3  5  6  4  4 11  5 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03324 0.32727 0.61224 1.00000 5.79460 
[1] "event indicator table: "

  0   1 
757 540 
[1] "treatment indicator table: "

  0   1 
475 822 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 100.653 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.400 0.132 
 2 mu         0.1   0.2 0.552 0.153 
 3 mu         0.1   0.3 0.609 0.145 
 4 mu         0.1   0.4 0.612 0.148 
 5 mu         0.1   0.5 0.618 0.153 
 6 mu         0.2   0.1 0.405 0.0969
 7 mu         0.2   0.2 0.554 0.111 
 8 mu         0.2   0.3 0.622 0.0837
 9 mu         0.2   0.4 0.634 0.0796
10 mu         0.2   0.5 0.648 0.0796
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.01         0.401 0.00000180      25.1 
 2 mu         0.2      1.12         0.890 0.000825        10.0 
 3 mu         0.3      1.10         1.03  0.0198           3.03
 4 mu         0.4      1.04         1     0.135            2.22
 5 mu         0.5      1.01         1     0.439            1.65
 6 mu         0.6      0.993        1     0.752            1.23
 7 mu         0.7      0.989        0.998 0.600            1.31
 8 mu         0.8      0.979        0.994 0.348            1.88
 9 mu         0.9      0.973        0.925 0.0466           3.13
10 mu_1       0.1      1.18         0.784 0.0000101       16.9 
11 mu_1       0.2      1.13         1.01  0.00235          3.97
12 mu_1       0.3      1.07         1.00  0.0384           2.53
13 mu_1       0.4      1.02         1     0.202            1.97
14 mu_1       0.5      0.994        0.996 0.548            1.40
15 mu_1       0.6      0.991        0.987 0.779            1.22
16 mu_1       0.7      0.988        1     0.533            1.37
17 mu_1       0.8      0.979        0.986 0.311            1.97
18 mu_1       0.9      0.975        0.919 0.0372           3.24
19 mu_0       0.1      0.994        0.341 0.000000876     26.0 
20 mu_0       0.2      1.12         0.836 0.000443        11.6 
21 mu_0       0.3      1.12         1     0.0118           3.71
22 mu_0       0.4      1.06         1     0.0899           2.39
23 mu_0       0.5      1.02         1     0.329            1.89
24 mu_0       0.6      0.998        1     0.694            1.34
25 mu_0       0.7      0.990        0.985 0.758            1.22
26 mu_0       0.8      0.981        1     0.499            1.50
27 mu_0       0.9      0.957        0.997 0.131            2.57
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.59    0.0000341  7.37e-17    450.  
 2 mu         0.2       4.70    0.00387    3.44e-11    246.  
 3 mu         0.3       2.91    0.0588     6.67e- 8     85.0 
 4 mu         0.4       1.87    0.277      1.35e- 5     26.2 
 5 mu         0.5       1.28    0.710      7.81e- 4     13.5 
 6 mu         0.6       1.10    0.986      2.00e- 2      4.15
 7 mu         0.7       1.36    0.990      7.99e- 4     22.6 
 8 mu         0.8       2.44    0.780      3.56e- 6     98.2 
 9 mu         0.9       5.98    0.121      1.96e-10    359.  
10 mu_1       0.1       6.40    0.000219   7.01e-16    375.  
11 mu_1       0.2       3.11    0.0145     1.63e-10    103.  
12 mu_1       0.3       2.04    0.124      2.11e- 7     29.9 
13 mu_1       0.4       1.45    0.495      3.21e- 5     23.1 
14 mu_1       0.5       1.11    0.904      1.48e- 3      9.50
15 mu_1       0.6       1.10    0.985      1.15e- 2      6.91
16 mu_1       0.7       1.50    1.08       2.85e- 4     32.3 
17 mu_1       0.8       2.77    0.665      1.11e- 6    123.  
18 mu_1       0.9       6.51    0.0919     5.44e-11    399.  
19 mu_0       0.1       6.61    0.0000115  0           458.  
20 mu_0       0.2       5.10    0.00133    0           282.  
21 mu_0       0.3       3.28    0.0279     0           111.  
22 mu_0       0.4       2.15    0.138      0            31.8 
23 mu_0       0.5       1.45    0.473      0            17.4 
24 mu_0       0.6       1.09    0.866      0             5.58
25 mu_0       0.7       1.03    0.873      0             3.74
26 mu_0       0.8       1.13    0.935      0             7.67
27 mu_0       0.9       1.23    0.175      0            11.2 
[1] "Total run time was 104.314 seconds"
