
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1230"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  4  8  5  5  5  7  6 11  5  9  5  9  7  1  5 
[1] "observed time summary: "
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.000000 0.007809 0.289341 0.591560 0.985093 5.000000 
[1] "event indicator table: "

  0   1 
759 471 
[1] "treatment indicator table: "

  0   1 
486 744 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 575
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 83.043 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.423 0.106 
 2 mu         0.1   0.2 0.499 0.0806
 3 mu         0.1   0.3 0.532 0.0768
 4 mu         0.1   0.4 0.541 0.0827
 5 mu         0.1   0.5 0.581 0.0814
 6 mu         0.2   0.1 0.417 0.0953
 7 mu         0.2   0.2 0.478 0.0656
 8 mu         0.2   0.3 0.525 0.0555
 9 mu         0.2   0.4 0.547 0.0537
10 mu         0.2   0.5 0.583 0.0531
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         0.541   0.00541     11.4 
 2 mu         0.2      1.05         0.943   0.0842       7.87
 3 mu         0.3      1.02         0.996   0.314        2.77
 4 mu         0.4      1.00         1       0.609        1.49
 5 mu         0.5      0.991        0.996   0.692        1.27
 6 mu         0.6      0.993        1       0.743        1.21
 7 mu         0.7      1.00         1       0.739        1.41
 8 mu         0.8      1.04         1.01    0.416        3.21
 9 mu         0.9      1.34         1       0.0703      27.5 
10 mu_1       0.1      1.11         0.882   0.0192      13.4 
11 mu_1       0.2      1.05         0.958   0.165        4.76
12 mu_1       0.3      1.02         1       0.452        1.74
13 mu_1       0.4      0.996        0.993   0.680        1.34
14 mu_1       0.5      0.989        1       0.677        1.24
15 mu_1       0.6      0.994        0.998   0.770        1.24
16 mu_1       0.7      1.01         1       0.732        1.42
17 mu_1       0.8      1.05         1.00    0.359        3.84
18 mu_1       0.9      1.38         1       0.0562      30.5 
19 mu_0       0.1      0.987        0.482   0.00387     11.2 
20 mu_0       0.2      1.05         0.886   0.0641       8.65
21 mu_0       0.3      1.02         0.979   0.255        3.31
22 mu_0       0.4      1.00         1       0.548        1.59
23 mu_0       0.5      0.992        0.995   0.695        1.30
24 mu_0       0.6      0.991        1       0.657        1.17
25 mu_0       0.7      0.998        1       0.696        1.36
26 mu_0       0.8      1.00         1       0.640        1.46
27 mu_0       0.9      1.02         1       0.197        3.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     12.4       0.000427  5.09e-15   1228.  
 2 mu         0.2      6.28      0.0240    3.34e-10    589.  
 3 mu         0.3      1.96      0.199     2.19e- 7    120.  
 4 mu         0.4      1.13      0.674     2.19e- 5     13.3 
 5 mu         0.5      1.03      0.971     7.77e- 4      3.88
 6 mu         0.6      0.992     1.05      1.44e- 2      2.69
 7 mu         0.7      1.09      0.920     1.55e- 4      4.30
 8 mu         0.8      1.71      0.442     1.37e- 7     41.7 
 9 mu         0.9      4.91      0.0481    6.62e-13    309.  
10 mu_1       0.1     12.6       0.00262   5.09e-14   1228.  
11 mu_1       0.2      3.58      0.0739    1.67e- 9    295.  
12 mu_1       0.3      1.34      0.382     7.31e- 7     40.0 
13 mu_1       0.4      1.09      0.935     5.47e- 5      3.92
14 mu_1       0.5      1.03      1.06      1.55e- 3      3.88
15 mu_1       0.6      0.993     0.969     3.37e- 3      2.24
16 mu_1       0.7      1.13      0.789     2.22e- 5      6.15
17 mu_1       0.8      1.88      0.326     1.72e- 8     52.1 
18 mu_1       0.9      5.30      0.0325    7.36e-14    343.  
19 mu_0       0.1     12.4       0.000235  0          1228.  
20 mu_0       0.2      6.96      0.0122    0           663.  
21 mu_0       0.3      2.22      0.120     0           154.  
22 mu_0       0.4      1.15      0.466     0            19.9 
23 mu_0       0.5      1.04      0.802     0             3.88
24 mu_0       0.6      0.990     1.05      0             3.36
25 mu_0       0.7      0.976     1.01      0             2.60
26 mu_0       0.8      1.06      0.811     0             5.11
27 mu_0       0.9      1.46      0.163     0            26.6 
[1] "Total run time was 86.164 seconds"
