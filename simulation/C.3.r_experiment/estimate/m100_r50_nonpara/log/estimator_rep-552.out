
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1260"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1 11 10  7  6  9  2  2  5  5  9  8  1  6 10  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02933 0.31251 0.58445 0.97773 6.00000 
[1] "event indicator table: "

  0   1 
752 508 
[1] "treatment indicator table: "

  0   1 
460 800 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 76.533 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.181 0.0657
 2 mu         0.1   0.2 0.317 0.0737
 3 mu         0.1   0.3 0.338 0.0880
 4 mu         0.1   0.4 0.450 0.0690
 5 mu         0.1   0.5 0.537 0.142 
 6 mu         0.2   0.1 0.272 0.0606
 7 mu         0.2   0.2 0.430 0.0922
 8 mu         0.2   0.3 0.445 0.0865
 9 mu         0.2   0.4 0.499 0.0771
10 mu         0.2   0.5 0.671 0.207 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.780        0.321 0.0000486      7.11
 2 mu         0.2      0.902        0.725 0.00586       12.4 
 3 mu         0.3      0.953        0.892 0.0660         7.76
 4 mu         0.4      0.969        0.966 0.228          3.13
 5 mu         0.5      0.981        0.990 0.483          1.39
 6 mu         0.6      0.995        0.999 0.759          1.23
 7 mu         0.7      1.01         0.999 0.714          1.39
 8 mu         0.8      1.02         1.00  0.438          1.71
 9 mu         0.9      0.991        0.924 0.100          3.30
10 mu_1       0.1      0.868        0.675 0.000248      13.3 
11 mu_1       0.2      0.956        0.888 0.0153        11.8 
12 mu_1       0.3      0.972        0.937 0.118          5.19
13 mu_1       0.4      0.977        0.980 0.353          1.98
14 mu_1       0.5      0.987        1.00  0.629          1.28
15 mu_1       0.6      1.00         1.00  0.733          1.27
16 mu_1       0.7      1.02         1.01  0.625          1.44
17 mu_1       0.8      1.02         0.985 0.403          1.79
18 mu_1       0.9      0.988        0.923 0.0841         3.57
19 mu_0       0.1      0.771        0.276 0.0000265      6.42
20 mu_0       0.2      0.889        0.659 0.00351       12.6 
21 mu_0       0.3      0.945        0.835 0.0427         8.86
22 mu_0       0.4      0.964        0.963 0.144          3.89
23 mu_0       0.5      0.974        0.980 0.338          1.62
24 mu_0       0.6      0.987        1.00  0.613          1.22
25 mu_0       0.7      1.00         0.997 0.708          1.30
26 mu_0       0.8      1.02         1.00  0.579          1.55
27 mu_0       0.9      1.02         1.01  0.228          2.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.913   0.0000342   1.10e-13     46.7 
 2 mu         0.2      2.47    0.00308     1.14e- 8    141.  
 3 mu         0.3      3.78    0.0459      8.62e- 6    246.  
 4 mu         0.4      3.20    0.235       5.51e- 4    190.  
 5 mu         0.5      1.99    0.769       1.04e- 2     78.1 
 6 mu         0.6      1.41    1.10        7.12e- 2     16.7 
 7 mu         0.7      1.57    1.28        3.95e- 3     13.3 
 8 mu         0.8      2.19    0.786       2.64e- 5     49.9 
 9 mu         0.9      2.48    0.0997      2.90e- 9     82.2 
10 mu_1       0.1      1.27    0.000215    0            50.2 
11 mu_1       0.2      3.49    0.00994     0           220.  
12 mu_1       0.3      3.92    0.0984      0           256.  
13 mu_1       0.4      2.71    0.397       0           148.  
14 mu_1       0.5      1.65    0.908       0            48.8 
15 mu_1       0.6      1.37    1.17        0             8.69
16 mu_1       0.7      1.67    1.18        0            16.8 
17 mu_1       0.8      2.30    0.683       0            55.5 
18 mu_1       0.9      2.46    0.0721      0            81.2 
19 mu_0       0.1      0.874   0.00000569  0            51.9 
20 mu_0       0.2      2.22    0.00104     0           121.  
21 mu_0       0.3      3.71    0.0175      0           241.  
22 mu_0       0.4      3.53    0.129       0           218.  
23 mu_0       0.5      2.33    0.532       0           107.  
24 mu_0       0.6      1.48    0.965       0            28.7 
25 mu_0       0.7      1.33    1.20        0             4.91
26 mu_0       0.8      1.74    1.12        0            27.7 
27 mu_0       0.9      2.65    0.306       0            91.3 
[1] "Total run time was 79.657 seconds"
