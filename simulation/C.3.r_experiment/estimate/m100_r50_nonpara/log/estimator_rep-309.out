
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1213"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  5  6 11  8  8  6  6  6  7  3  7  5  7  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.07157 0.39507 0.65978 1.00000 5.21907 
[1] "event indicator table: "

  0   1 
720 493 
[1] "treatment indicator table: "

  0   1 
425 788 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 213.494 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.250 0.0889
 2 mu         0.1   0.2 0.366 0.181 
 3 mu         0.1   0.3 0.440 0.171 
 4 mu         0.1   0.4 0.419 0.172 
 5 mu         0.1   0.5 0.408 0.165 
 6 mu         0.2   0.1 0.252 0.0732
 7 mu         0.2   0.2 0.391 0.143 
 8 mu         0.2   0.3 0.487 0.128 
 9 mu         0.2   0.4 0.492 0.127 
10 mu         0.2   0.5 0.498 0.121 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.619        0.198 0.0000429     11.2 
 2 mu         0.2      0.817        0.629 0.00871        7.30
 3 mu         0.3      0.915        0.863 0.103          3.79
 4 mu         0.4      0.953        0.941 0.338          2.51
 5 mu         0.5      0.970        0.974 0.565          1.49
 6 mu         0.6      0.985        0.990 0.751          1.25
 7 mu         0.7      0.996        0.996 0.754          1.40
 8 mu         0.8      0.999        0.995 0.507          1.59
 9 mu         0.9      1.02         1     0.136          7.83
10 mu_1       0.1      0.855        0.507 0.000200      10.4 
11 mu_1       0.2      0.909        0.873 0.0209         3.81
12 mu_1       0.3      0.956        0.954 0.166          3.62
13 mu_1       0.4      0.969        0.961 0.417          2.02
14 mu_1       0.5      0.978        0.989 0.654          1.35
15 mu_1       0.6      0.991        0.995 0.738          1.25
16 mu_1       0.7      0.998        1     0.694          1.40
17 mu_1       0.8      0.998        1     0.464          1.79
18 mu_1       0.9      1.02         1     0.115          8.60
19 mu_0       0.1      0.593        0.163 0.0000254     11.3 
20 mu_0       0.2      0.794        0.575 0.00566        8.17
21 mu_0       0.3      0.897        0.828 0.0756         4.18
22 mu_0       0.4      0.943        0.929 0.272          2.84
23 mu_0       0.5      0.961        0.955 0.477          1.68
24 mu_0       0.6      0.977        0.976 0.689          1.34
25 mu_0       0.7      0.992        0.999 0.721          1.38
26 mu_0       0.8      1.00         1     0.677          1.53
27 mu_0       0.9      1.01         1     0.298          1.81
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.276    0.000100   1.98e-16     17.0 
 2 mu         0.2      0.821    0.0139     9.24e-11     37.3 
 3 mu         0.3      1.26     0.104      1.79e- 7     29.0 
 4 mu         0.4      1.52     0.369      3.63e- 5     12.6 
 5 mu         0.5      1.48     0.885      2.10e- 3     10.0 
 6 mu         0.6      1.32     1.09       5.37e- 2      4.63
 7 mu         0.7      1.47     1.08       3.30e- 2     10.2 
 8 mu         0.8      2.35     0.627      5.70e- 4     33.8 
 9 mu         0.9      4.61     0.0937     3.96e- 7    106.  
10 mu_1       0.1      0.706    0.000751   1.88e-15     36.5 
11 mu_1       0.2      1.21     0.0445     4.39e-10     40.0 
12 mu_1       0.3      1.49     0.234      5.68e- 7     20.7 
13 mu_1       0.4      1.58     0.601      8.63e- 5     11.6 
14 mu_1       0.5      1.42     1.09       3.99e- 3      8.92
15 mu_1       0.6      1.30     1.12       8.42e- 2      4.79
16 mu_1       0.7      1.58     0.980      1.01e- 2     14.5 
17 mu_1       0.8      2.59     0.472      1.53e- 4     42.3 
18 mu_1       0.9      4.85     0.0639     9.43e- 8    112.  
19 mu_0       0.1      0.228    0.0000406  0            14.9 
20 mu_0       0.2      0.724    0.00543    0            36.7 
21 mu_0       0.3      1.16     0.0399     0            32.6 
22 mu_0       0.4      1.48     0.219      0            16.5 
23 mu_0       0.5      1.54     0.678      0            11.1 
24 mu_0       0.6      1.35     1.05       0             6.43
25 mu_0       0.7      1.21     1.15       0             6.91
26 mu_0       0.8      1.39     0.935      0            11.6 
27 mu_0       0.9      2.46     0.257      0            55.9 
[1] "Total run time was 220.408 seconds"
