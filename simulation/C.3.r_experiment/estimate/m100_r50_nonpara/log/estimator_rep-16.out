
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1321"
[1] "cluster size dist'n: "

 5  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  6  7  6  8  6  6  3  8  7  5  9  4 12 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02057 0.27384 0.56315 0.92503 5.00000 
[1] "event indicator table: "

  0   1 
768 553 
[1] "treatment indicator table: "

  0   1 
526 795 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 691
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 87.88 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.392 0.0665
 2 mu         0.1   0.2 0.559 0.0688
 3 mu         0.1   0.3 0.697 0.130 
 4 mu         0.1   0.4 0.746 0.152 
 5 mu         0.1   0.5 0.778 0.134 
 6 mu         0.2   0.1 0.359 0.0515
 7 mu         0.2   0.2 0.486 0.0478
 8 mu         0.2   0.3 0.591 0.0834
 9 mu         0.2   0.4 0.645 0.0955
10 mu         0.2   0.5 0.696 0.0839
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.939   0.00390      4.34
 2 mu         0.2      0.997        0.973   0.0746       2.00
 3 mu         0.3      0.980        0.997   0.290        1.51
 4 mu         0.4      0.981        1       0.601        1.39
 5 mu         0.5      0.993        1.00    0.739        1.20
 6 mu         0.6      1.01         1       0.773        1.31
 7 mu         0.7      1.01         1       0.688        1.39
 8 mu         0.8      1.01         0.989   0.677        1.54
 9 mu         0.9      1.01         1       0.216        1.76
10 mu_1       0.1      1.05         1.01    0.0122       2.52
11 mu_1       0.2      0.991        1.00    0.130        1.73
12 mu_1       0.3      0.975        1       0.389        1.50
13 mu_1       0.4      0.983        1       0.661        1.32
14 mu_1       0.5      0.998        1       0.751        1.26
15 mu_1       0.6      1.01         1       0.756        1.30
16 mu_1       0.7      1.01         1       0.689        1.42
17 mu_1       0.8      1.01         0.992   0.635        1.55
18 mu_1       0.9      1.01         1       0.194        1.83
19 mu_0       0.1      1.01         0.904   0.00298      4.58
20 mu_0       0.2      0.998        1       0.0606       2.11
21 mu_0       0.3      0.982        0.997   0.248        1.55
22 mu_0       0.4      0.980        1       0.537        1.44
23 mu_0       0.5      0.989        1       0.699        1.19
24 mu_0       0.6      1.00         1       0.747        1.31
25 mu_0       0.7      1.01         0.999   0.686        1.31
26 mu_0       0.8      1.01         1       0.718        1.54
27 mu_0       0.9      1.01         1       0.416        1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.786     0.000398  1.67e-18     23.6 
 2 mu         0.2      0.834     0.0228    1.75e-12     12.9 
 3 mu         0.3      0.836     0.152     5.83e- 9      4.90
 4 mu         0.4      0.935     0.675     1.84e- 6      4.80
 5 mu         0.5      1.03      1.04      1.59e- 4      3.30
 6 mu         0.6      1.07      1.15      6.11e- 3      3.40
 7 mu         0.7      1.06      1.01      9.34e- 4      2.78
 8 mu         0.8      1.05      0.520     7.42e- 6      4.50
 9 mu         0.9      1.15      0.0374    1.29e- 9     20.3 
10 mu_1       0.1      1.01      0.00236   1.67e-17     19.7 
11 mu_1       0.2      0.792     0.0689    8.76e-12      7.29
12 mu_1       0.3      0.835     0.343     1.94e- 8      5.03
13 mu_1       0.4      0.971     0.690     4.59e- 6      4.80
14 mu_1       0.5      1.06      1.08      3.19e- 4      3.47
15 mu_1       0.6      1.08      1.04      2.63e- 3      3.40
16 mu_1       0.7      1.06      1.00      1.11e- 4      2.87
17 mu_1       0.8      1.05      0.404     1.29e- 6      4.64
18 mu_1       0.9      1.17      0.0210    2.69e-10     22.6 
19 mu_0       0.1      0.762     0.000174  0            24.1 
20 mu_0       0.2      0.844     0.00761   0            14.8 
21 mu_0       0.3      0.836     0.0944    0             5.94
22 mu_0       0.4      0.911     0.422     0             4.80
23 mu_0       0.5      1.01      0.854     0             3.85
24 mu_0       0.6      1.06      1.10      0             3.40
25 mu_0       0.7      1.06      1.07      0             3.23
26 mu_0       0.8      1.04      0.704     0             3.97
27 mu_0       0.9      0.984     0.0988    0             5.84
[1] "Total run time was 91.227 seconds"
