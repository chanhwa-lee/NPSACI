
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1322"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  4  7  4  2  6 10  9  3  5  3 11  5  7 10  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03519 0.37487 0.63689 1.00000 4.79036 
[1] "event indicator table: "

  0   1 
780 542 
[1] "treatment indicator table: "

  0   1 
473 849 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 654
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 97.93 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.328 0.0571
 2 mu         0.1   0.2 0.359 0.0719
 3 mu         0.1   0.3 0.454 0.0993
 4 mu         0.1   0.4 0.587 0.0950
 5 mu         0.1   0.5 0.596 0.0983
 6 mu         0.2   0.1 0.276 0.0259
 7 mu         0.2   0.2 0.323 0.0365
 8 mu         0.2   0.3 0.385 0.0461
 9 mu         0.2   0.4 0.499 0.0588
10 mu         0.2   0.5 0.512 0.0595
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.969        0.498   0.0117       8.08
 2 mu         0.2      0.927        0.902   0.205        2.87
 3 mu         0.3      0.957        0.965   0.491        1.91
 4 mu         0.4      0.980        0.997   0.669        1.56
 5 mu         0.5      0.996        1       0.733        1.33
 6 mu         0.6      1.00         1       0.761        1.27
 7 mu         0.7      1.01         1.00    0.768        1.24
 8 mu         0.8      1.00         1       0.613        1.33
 9 mu         0.9      1.02         0.990   0.303        2.47
10 mu_1       0.1      0.902        0.765   0.0378       4.01
11 mu_1       0.2      0.960        0.940   0.319        2.49
12 mu_1       0.3      0.977        0.978   0.572        1.57
13 mu_1       0.4      0.991        0.999   0.699        1.54
14 mu_1       0.5      1.00         1       0.717        1.25
15 mu_1       0.6      1.01         1       0.796        1.25
16 mu_1       0.7      1.01         1       0.767        1.25
17 mu_1       0.8      1.01         1       0.592        1.42
18 mu_1       0.9      1.02         1       0.276        2.58
19 mu_0       0.1      0.976        0.448   0.00876      8.97
20 mu_0       0.2      0.919        0.848   0.169        2.97
21 mu_0       0.3      0.949        0.950   0.435        2.12
22 mu_0       0.4      0.973        0.965   0.607        1.58
23 mu_0       0.5      0.991        1       0.703        1.47
24 mu_0       0.6      1.00         1       0.709        1.30
25 mu_0       0.7      1.01         1       0.770        1.28
26 mu_0       0.8      1.00         0.991   0.697        1.31
27 mu_0       0.9      0.991        1.00    0.507        1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.575    0.0000806  3.45e-16     41.2 
 2 mu         0.2      0.900    0.00520    8.03e-11     31.7 
 3 mu         0.3      1.02     0.0526     1.04e- 7     13.2 
 4 mu         0.4      1.04     0.279      1.42e- 5      7.29
 5 mu         0.5      0.990    0.675      5.03e- 4      3.83
 6 mu         0.6      0.976    1.05       9.30e- 3      2.74
 7 mu         0.7      1.02     1.10       4.22e- 4      4.22
 8 mu         0.8      1.06     0.865      1.89e- 6      3.74
 9 mu         0.9      1.13     0.112      1.46e-10      9.66
10 mu_1       0.1      0.907    0.000597   3.26e-15     51.5 
11 mu_1       0.2      1.04     0.0192     3.80e-10     19.8 
12 mu_1       0.3      1.10     0.123      3.28e- 7     11.0 
13 mu_1       0.4      1.06     0.475      3.54e- 5      6.38
14 mu_1       0.5      0.992    0.873      1.01e- 3      3.16
15 mu_1       0.6      0.981    1.01       3.63e- 3      3.20
16 mu_1       0.7      1.02     1.10       7.54e- 5      4.22
17 mu_1       0.8      1.06     0.720      2.95e- 7      3.93
18 mu_1       0.9      1.15     0.0801     2.03e-11     10.7 
19 mu_0       0.1      0.538    0.0000263  0            40.1 
20 mu_0       0.2      0.866    0.00167    0            34.7 
21 mu_0       0.3      0.994    0.0260     0            14.2 
22 mu_0       0.4      1.02     0.129      0             7.90
23 mu_0       0.5      0.989    0.478      0             4.51
24 mu_0       0.6      0.970    0.896      0             2.90
25 mu_0       0.7      1.02     1.01       0             4.22
26 mu_0       0.8      1.05     1.07       0             3.60
27 mu_0       0.9      0.971    0.298      0             4.99
[1] "Total run time was 101.969 seconds"
