
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1171"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  8  7  7  9 10  4  2  4  8  7 10  1  6  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03157 0.37328 0.63482 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
716 455 
[1] "treatment indicator table: "

  0   1 
399 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 578
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 78.443 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.597 0.204
 2 mu         0.1   0.2 0.666 0.227
 3 mu         0.1   0.3 0.685 0.248
 4 mu         0.1   0.4 0.820 0.283
 5 mu         0.1   0.5 0.884 0.301
 6 mu         0.2   0.1 0.483 0.140
 7 mu         0.2   0.2 0.545 0.137
 8 mu         0.2   0.3 0.554 0.145
 9 mu         0.2   0.4 0.682 0.163
10 mu         0.2   0.5 0.748 0.173
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.32        0.122  0.00000000921     39.9 
 2 mu         0.2      1.14        0.480  0.0000342         20.3 
 3 mu         0.3      1.05        0.880  0.00273            9.75
 4 mu         0.4      1.02        1      0.0418             4.92
 5 mu         0.5      0.999       0.997  0.238              2.36
 6 mu         0.6      0.983       0.996  0.661              1.36
 7 mu         0.7      0.981       0.982  0.484              1.26
 8 mu         0.8      0.981       1      0.163              1.73
 9 mu         0.9      0.960       0.997  0.0129             2.08
10 mu_1       0.1      1.12        0.322  0.0000000600      32.3 
11 mu_1       0.2      0.965       0.708  0.000112          10.3 
12 mu_1       0.3      0.978       0.938  0.00597            4.56
13 mu_1       0.4      0.993       0.989  0.0690             2.19
14 mu_1       0.5      0.984       1.00   0.318              1.43
15 mu_1       0.6      0.979       0.992  0.719              1.20
16 mu_1       0.7      0.981       0.993  0.414              1.27
17 mu_1       0.8      0.980       0.999  0.129              1.82
18 mu_1       0.9      0.957       0.989  0.00941            2.06
19 mu_0       0.1      1.34        0.0979 0.00000000357     40.7 
20 mu_0       0.2      1.18        0.395  0.0000148         23.0 
21 mu_0       0.3      1.08        0.862  0.00134           12.0 
22 mu_0       0.4      1.05        1.00   0.0237             6.74
23 mu_0       0.5      1.01        1      0.158              3.38
24 mu_0       0.6      0.989       0.995  0.518              1.76
25 mu_0       0.7      0.981       0.990  0.648              1.23
26 mu_0       0.8      0.984       0.986  0.299              1.36
27 mu_0       0.9      0.988       1      0.0445             2.31
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.81     0.0000464  6.17e-18    152.  
 2 mu         0.2      6.02     0.00440    2.88e-12    282.  
 3 mu         0.3      6.34     0.0475     5.58e- 9    430.  
 4 mu         0.4      4.76     0.268      1.13e- 6    339.  
 5 mu         0.5      2.81     0.687      6.54e- 5    160.  
 6 mu         0.6      1.58     0.961      1.67e- 3     44.6 
 7 mu         0.7      1.13     1.03       1.21e- 3      6.21
 8 mu         0.8      1.17     0.771      2.75e- 6     10.9 
 9 mu         0.9      1.97     0.202      5.97e-11     23.5 
10 mu_1       0.1      5.49     0.000290   5.86e-17    240.  
11 mu_1       0.2      7.28     0.0148     1.37e-11    434.  
12 mu_1       0.3      6.04     0.103      1.77e- 8    441.  
13 mu_1       0.4      3.86     0.471      2.69e- 6    261.  
14 mu_1       0.5      2.17     0.840      1.24e- 4     98.7 
15 mu_1       0.6      1.35     0.992      2.65e- 3     22.9 
16 mu_1       0.7      1.11     1.05       2.73e- 4      8.01
17 mu_1       0.8      1.24     0.664      5.42e- 7     13.7 
18 mu_1       0.9      2.10     0.152      1.05e-11     26.1 
19 mu_0       0.1      2.51     0.0000108  0           142.  
20 mu_0       0.2      5.70     0.00123    0           244.  
21 mu_0       0.3      6.46     0.0194     0           425.  
22 mu_0       0.4      5.36     0.0976     0           391.  
23 mu_0       0.5      3.46     0.401      0           222.  
24 mu_0       0.6      1.92     0.793      0            77.3 
25 mu_0       0.7      1.17     0.984      0            14.3 
26 mu_0       0.8      0.897    0.932      0             4.84
27 mu_0       0.9      0.771    0.198      0             4.79
[1] "Total run time was 81.656 seconds"
