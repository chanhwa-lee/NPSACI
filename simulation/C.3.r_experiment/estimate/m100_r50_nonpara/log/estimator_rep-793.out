
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1237"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  7  6  8  6  4  5  8  6  7  9  7  6  6  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03412 0.38692 0.62233 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
740 497 
[1] "treatment indicator table: "

  0   1 
455 782 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 584
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 95.975 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.448 0.117 
 2 mu         0.1   0.2 0.494 0.127 
 3 mu         0.1   0.3 0.524 0.132 
 4 mu         0.1   0.4 0.558 0.130 
 5 mu         0.1   0.5 0.605 0.141 
 6 mu         0.2   0.1 0.375 0.0723
 7 mu         0.2   0.2 0.436 0.0802
 8 mu         0.2   0.3 0.476 0.0840
 9 mu         0.2   0.4 0.514 0.0853
10 mu         0.2   0.5 0.569 0.0938
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      1.00         0.635 0.00000101      16.3 
 2 mu         0.2      0.996        0.878 0.000556        12.6 
 3 mu         0.3      0.972        0.962 0.0153           4.80
 4 mu         0.4      0.977        1     0.116            2.96
 5 mu         0.5      0.987        1     0.409            1.88
 6 mu         0.6      0.991        1     0.710            1.26
 7 mu         0.7      0.992        0.999 0.479            1.39
 8 mu         0.8      1.01         0.998 0.204            2.27
 9 mu         0.9      1.07         1     0.0225           4.97
10 mu_1       0.1      1.02         0.886 0.00000553      20.4 
11 mu_1       0.2      0.974        0.940 0.00157          8.07
12 mu_1       0.3      0.967        0.990 0.0297           3.65
13 mu_1       0.4      0.978        1     0.175            2.36
14 mu_1       0.5      0.988        1     0.512            1.51
15 mu_1       0.6      0.991        1     0.673            1.22
16 mu_1       0.7      0.993        1     0.439            1.48
17 mu_1       0.8      1.02         1     0.178            2.44
18 mu_1       0.9      1.07         1     0.0172           5.50
19 mu_0       0.1      1.00         0.600 0.000000509     15.8 
20 mu_0       0.2      1.00         0.853 0.000303        13.8 
21 mu_0       0.3      0.974        0.955 0.00919          5.81
22 mu_0       0.4      0.976        0.987 0.0775           3.36
23 mu_0       0.5      0.986        1     0.306            2.24
24 mu_0       0.6      0.992        1     0.687            1.44
25 mu_0       0.7      0.989        1     0.573            1.19
26 mu_0       0.8      0.984        1     0.307            1.57
27 mu_0       0.9      1.01         1     0.0603           3.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.24    0.0000710  3.94e-16     55.3 
 2 mu         0.2       1.73    0.00827    1.03e-10     54.5 
 3 mu         0.3       1.70    0.0926     1.53e- 7     40.4 
 4 mu         0.4       1.46    0.421      2.71e- 5     28.5 
 5 mu         0.5       1.24    0.906      1.10e- 3     14.9 
 6 mu         0.6       1.17    1.07       2.04e- 2      5.63
 7 mu         0.7       1.40    1.04       2.56e- 3     21.8 
 8 mu         0.8       2.09    0.532      2.25e- 5     62.6 
 9 mu         0.9       3.10    0.0651     4.39e- 9     59.1 
10 mu_1       0.1       2.16    0.000405   3.94e-15     78.9 
11 mu_1       0.2       1.81    0.0253     5.16e-10     50.1 
12 mu_1       0.3       1.46    0.174      5.09e- 7     33.7 
13 mu_1       0.4       1.22    0.616      6.77e- 5     17.8 
14 mu_1       0.5       1.11    0.888      2.21e- 3      9.99
15 mu_1       0.6       1.16    1.05       2.28e- 2      5.64
16 mu_1       0.7       1.48    0.977      8.61e- 4     26.5 
17 mu_1       0.8       2.22    0.420      6.60e- 6     66.6 
18 mu_1       0.9       3.21    0.0423     1.15e- 9     65.7 
19 mu_0       0.1       1.14    0.0000272  0            52.6 
20 mu_0       0.2       1.71    0.00344    0            58.4 
21 mu_0       0.3       1.80    0.0499     0            44.9 
22 mu_0       0.4       1.61    0.270      0            35.6 
23 mu_0       0.5       1.36    0.687      0            22.4 
24 mu_0       0.6       1.19    1.00       0            10.6 
25 mu_0       0.7       1.21    1.11       0            10.9 
26 mu_0       0.8       1.56    0.782      0            47.0 
27 mu_0       0.9       2.10    0.168      0            87.0 
[1] "Total run time was 99.437 seconds"
