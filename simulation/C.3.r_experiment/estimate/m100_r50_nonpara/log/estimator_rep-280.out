
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1216"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  9  5  7  7  7  6  7  6  2  4  4  6  9  6  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02365 0.28927 0.58902 0.97107 5.00000 
[1] "event indicator table: "

  0   1 
711 505 
[1] "treatment indicator table: "

  0   1 
450 766 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 100.97 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.586 0.151 
 2 mu         0.1   0.2 0.673 0.132 
 3 mu         0.1   0.3 0.689 0.116 
 4 mu         0.1   0.4 0.691 0.114 
 5 mu         0.1   0.5 0.707 0.108 
 6 mu         0.2   0.1 0.430 0.0725
 7 mu         0.2   0.2 0.532 0.0728
 8 mu         0.2   0.3 0.600 0.0663
 9 mu         0.2   0.4 0.614 0.0662
10 mu         0.2   0.5 0.653 0.0615
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.953        0.500 0.0000485      6.85
 2 mu         0.2      0.993        0.889 0.00981        3.81
 3 mu         0.3      1.01         1     0.127          2.50
 4 mu         0.4      1.00         1     0.485          1.59
 5 mu         0.5      0.992        0.995 0.738          1.38
 6 mu         0.6      0.988        1     0.791          1.19
 7 mu         0.7      0.993        1     0.813          1.30
 8 mu         0.8      1.01         1     0.454          1.41
 9 mu         0.9      1.02         1     0.0881         2.33
10 mu_1       0.1      0.915        0.768 0.000226       7.20
11 mu_1       0.2      0.990        0.968 0.0235         3.68
12 mu_1       0.3      1.00         1.00  0.209          1.90
13 mu_1       0.4      0.996        0.999 0.619          1.57
14 mu_1       0.5      0.988        0.990 0.741          1.30
15 mu_1       0.6      0.987        0.997 0.775          1.18
16 mu_1       0.7      0.995        1     0.744          1.33
17 mu_1       0.8      1.01         1     0.413          1.41
18 mu_1       0.9      1.03         1     0.0755         2.49
19 mu_0       0.1      0.958        0.445 0.0000287      7.52
20 mu_0       0.2      0.994        0.852 0.00638        4.22
21 mu_0       0.3      1.01         0.997 0.0922         2.75
22 mu_0       0.4      1.00         1     0.396          1.70
23 mu_0       0.5      0.995        1.00  0.682          1.46
24 mu_0       0.6      0.989        0.995 0.769          1.21
25 mu_0       0.7      0.990        1     0.774          1.24
26 mu_0       0.8      1.00         1     0.616          1.37
27 mu_0       0.9      1.01         0.996 0.202          1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.900    0.000192   4.06e-17     27.3 
 2 mu         0.2      1.45     0.00817    1.89e-11     33.1 
 3 mu         0.3      1.34     0.0837     3.67e- 8     23.6 
 4 mu         0.4      1.14     0.299      7.43e- 6     11.5 
 5 mu         0.5      1.07     0.735      4.30e- 4      6.68
 6 mu         0.6      1.06     0.967      6.05e- 3      4.07
 7 mu         0.7      1.06     1.15       7.23e- 5      3.40
 8 mu         0.8      1.10     0.680      1.09e- 7      5.81
 9 mu         0.9      1.14     0.0910     1.19e-12     10.1 
10 mu_1       0.1      1.47     0.00138    3.85e-16     40.8 
11 mu_1       0.2      1.52     0.0293     8.98e-11     33.1 
12 mu_1       0.3      1.26     0.192      1.16e- 7     20.7 
13 mu_1       0.4      1.11     0.537      1.77e- 5      8.76
14 mu_1       0.5      1.06     0.865      8.17e- 4      5.62
15 mu_1       0.6      1.06     1.08       1.51e- 3      3.93
16 mu_1       0.7      1.07     1.07       1.55e- 5      3.84
17 mu_1       0.8      1.12     0.566      2.05e- 8      5.98
18 mu_1       0.9      1.14     0.0620     1.98e-13     11.2 
19 mu_0       0.1      0.837    0.0000463  0            26.6 
20 mu_0       0.2      1.43     0.00372    0            33.1 
21 mu_0       0.3      1.38     0.0259     0            24.9 
22 mu_0       0.4      1.17     0.168      0            14.1 
23 mu_0       0.5      1.07     0.500      0             7.73
24 mu_0       0.6      1.05     0.934      0             4.29
25 mu_0       0.7      1.04     0.951      0             3.12
26 mu_0       0.8      1.04     1.10       0             5.24
27 mu_0       0.9      1.10     0.244      0             6.93
[1] "Total run time was 105.111 seconds"
