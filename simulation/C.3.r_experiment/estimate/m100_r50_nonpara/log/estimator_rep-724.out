
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1267"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  3  6  8 11  8  6  6  6  7  8  8  4  5  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06292 0.37384 0.62432 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
751 516 
[1] "treatment indicator table: "

  0   1 
451 816 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.99 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.257 0.112 
 2 mu         0.1   0.2 0.253 0.147 
 3 mu         0.1   0.3 0.337 0.112 
 4 mu         0.1   0.4 0.374 0.102 
 5 mu         0.1   0.5 0.373 0.120 
 6 mu         0.2   0.1 0.289 0.0853
 7 mu         0.2   0.2 0.316 0.111 
 8 mu         0.2   0.3 0.406 0.0860
 9 mu         0.2   0.4 0.453 0.0778
10 mu         0.2   0.5 0.470 0.0904
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.895        0.304 0.000000661      7.74
 2 mu         0.2      1.03         0.694 0.000557         6.32
 3 mu         0.3      1.00         0.942 0.0179           3.19
 4 mu         0.4      0.977        0.971 0.138            2.21
 5 mu         0.5      0.979        0.962 0.459            1.62
 6 mu         0.6      0.995        0.996 0.829            1.18
 7 mu         0.7      1.00         1.01  0.740            1.23
 8 mu         0.8      0.976        0.978 0.452            1.73
 9 mu         0.9      0.903        0.884 0.155            2.89
10 mu_1       0.1      1.05         0.682 0.00000368       9.46
11 mu_1       0.2      1.03         0.891 0.00157          4.61
12 mu_1       0.3      0.979        0.981 0.0342           2.27
13 mu_1       0.4      0.972        0.971 0.203            2.00
14 mu_1       0.5      0.985        0.990 0.559            1.46
15 mu_1       0.6      1.00         1.00  0.836            1.15
16 mu_1       0.7      1.00         1.01  0.677            1.35
17 mu_1       0.8      0.972        0.967 0.395            1.96
18 mu_1       0.9      0.898        0.872 0.131            3.12
19 mu_0       0.1      0.879        0.257 0.000000325      7.55
20 mu_0       0.2      1.03         0.629 0.000303         6.75
21 mu_0       0.3      1.01         0.935 0.0109           3.59
22 mu_0       0.4      0.981        0.979 0.0951           2.64
23 mu_0       0.5      0.973        0.954 0.359            1.85
24 mu_0       0.6      0.986        0.988 0.690            1.35
25 mu_0       0.7      1.00         1     0.807            1.23
26 mu_0       0.8      0.996        1.00  0.640            1.32
27 mu_0       0.9      0.946        0.966 0.343            1.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.55    0.0000324  2.54e-13    139.  
 2 mu         0.2       2.49    0.00526    4.17e- 9     80.0 
 3 mu         0.3       1.79    0.0707     1.22e- 6     41.4 
 4 mu         0.4       1.34    0.333      6.83e- 5     13.5 
 5 mu         0.5       1.17    0.743      1.55e- 3      8.03
 6 mu         0.6       1.12    1.02       1.99e- 2      4.66
 7 mu         0.7       1.17    1.03       5.49e- 3      4.06
 8 mu         0.8       1.32    0.825      7.25e- 5      8.82
 9 mu         0.9       1.32    0.157      3.86e- 8     11.4 
10 mu_1       0.1       3.23    0.000265   2.54e-12    116.  
11 mu_1       0.2       2.11    0.0162     2.08e- 8     61.6 
12 mu_1       0.3       1.43    0.153      4.05e- 6     21.3 
13 mu_1       0.4       1.20    0.522      1.71e- 4      9.01
14 mu_1       0.5       1.13    0.862      3.10e- 3      7.23
15 mu_1       0.6       1.12    1.05       1.55e- 2      4.58
16 mu_1       0.7       1.20    1.10       6.53e- 4      4.89
17 mu_1       0.8       1.34    0.672      7.55e- 6      9.44
18 mu_1       0.9       1.32    0.119      3.69e- 9     12.7 
19 mu_0       0.1       2.48    0.0000121  0           141.  
20 mu_0       0.2       2.59    0.00177    0            87.1 
21 mu_0       0.3       1.94    0.0278     0            50.1 
22 mu_0       0.4       1.44    0.167      0            19.1 
23 mu_0       0.5       1.21    0.488      0             8.83
24 mu_0       0.6       1.12    0.822      0             5.37
25 mu_0       0.7       1.11    1.01       0             4.83
26 mu_0       0.8       1.24    1.03       0             6.30
27 mu_0       0.9       1.32    0.323      0            12.9 
[1] "Total run time was 88.328 seconds"
