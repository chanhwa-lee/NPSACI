
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8 10  8  9  5  2  4  5  7  2  7 10  7  4  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03222 0.33649 0.61882 1.00000 4.41844 
[1] "event indicator table: "

  0   1 
739 467 
[1] "treatment indicator table: "

  0   1 
405 801 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 590
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 81.424 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.377 0.0900
 2 mu         0.1   0.2 0.461 0.0985
 3 mu         0.1   0.3 0.570 0.142 
 4 mu         0.1   0.4 0.589 0.141 
 5 mu         0.1   0.5 0.667 0.172 
 6 mu         0.2   0.1 0.350 0.0711
 7 mu         0.2   0.2 0.443 0.0803
 8 mu         0.2   0.3 0.550 0.127 
 9 mu         0.2   0.4 0.568 0.122 
10 mu         0.2   0.5 0.641 0.153 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.835        0.268 0.00000408     11.4 
 2 mu         0.2      0.919        0.648 0.00109        12.9 
 3 mu         0.3      0.981        0.871 0.0205          9.20
 4 mu         0.4      1.01         0.978 0.122           4.09
 5 mu         0.5      1.00         0.988 0.369           2.16
 6 mu         0.6      0.991        0.989 0.683           1.32
 7 mu         0.7      0.985        0.988 0.716           1.59
 8 mu         0.8      0.985        0.995 0.305           2.50
 9 mu         0.9      0.938        0.950 0.0420          3.61
10 mu_1       0.1      0.981        0.610 0.0000233      13.0 
11 mu_1       0.2      0.992        0.881 0.00317        13.1 
12 mu_1       0.3      1.01         0.977 0.0406          6.50
13 mu_1       0.4      1.01         0.989 0.187           2.69
14 mu_1       0.5      0.999        0.986 0.465           1.94
15 mu_1       0.6      0.988        0.985 0.754           1.20
16 mu_1       0.7      0.984        0.986 0.651           1.70
17 mu_1       0.8      0.983        0.996 0.264           2.58
18 mu_1       0.9      0.932        0.956 0.0345          3.66
19 mu_0       0.1      0.819        0.230 0.00000194     11.9 
20 mu_0       0.2      0.901        0.593 0.000570       12.8 
21 mu_0       0.3      0.969        0.840 0.0119         10.4 
22 mu_0       0.4      1.00         0.988 0.0795          5.10
23 mu_0       0.5      1.01         0.991 0.272           2.38
24 mu_0       0.6      0.995        0.999 0.504           1.52
25 mu_0       0.7      0.987        0.985 0.675           1.32
26 mu_0       0.8      0.989        0.980 0.470           2.20
27 mu_0       0.9      0.996        1     0.109           3.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1   22667.      0.0000705  2.44e-15 2266598. 
 2 mu         0.2   12245.      0.00476    5.06e-10 1224169. 
 3 mu         0.3    2850.      0.0419     5.73e- 7  284552. 
 4 mu         0.4     372.      0.218      7.47e- 5   36808. 
 5 mu         0.5      28.4     0.660      2.88e- 3    2592. 
 6 mu         0.6       2.39    1.11       3.81e- 2      84.1
 7 mu         0.7       1.75    1.22       4.27e- 2      35.0
 8 mu         0.8       4.48    0.983      1.14e- 3     172. 
 9 mu         0.9      11.9     0.260      1.10e- 8     700. 
10 mu_1       0.1   23861.      0.000521   0        2385892. 
11 mu_1       0.2    6447.      0.0131     0         644300. 
12 mu_1       0.3    1003.      0.105      0          99843. 
13 mu_1       0.4     100.      0.381      0           9686. 
14 mu_1       0.5       7.43    0.856      0            546. 
15 mu_1       0.6       1.54    1.14       0             17.9
16 mu_1       0.7       1.90    1.14       0             45.0
17 mu_1       0.8       5.01    0.823      0            193. 
18 mu_1       0.9      12.4     0.202      0            739. 
19 mu_0       0.1   22534.      0.0000134  0        2253343. 
20 mu_0       0.2   13694.      0.00140    0        1369137. 
21 mu_0       0.3    3641.      0.0166     0         363712. 
22 mu_0       0.4     553.      0.0992     0          54889. 
23 mu_0       0.5      49.3     0.437      0           4639. 
24 mu_0       0.6       3.67    0.931      0            188. 
25 mu_0       0.7       1.40    1.19       0             11.7
26 mu_0       0.8       2.37    1.04       0             86.0
27 mu_0       0.9       8.26    0.386      0            358. 
[1] "Total run time was 84.959 seconds"
