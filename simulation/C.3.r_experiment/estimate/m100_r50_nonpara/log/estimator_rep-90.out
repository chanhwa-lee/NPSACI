
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1253"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  5  8  6  5  6 12  6  5  8  4  5  5  9  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04426 0.36894 0.64519 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
771 482 
[1] "treatment indicator table: "

  0   1 
429 824 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 79.087 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.251 0.119 
 2 mu         0.1   0.2 0.347 0.118 
 3 mu         0.1   0.3 0.387 0.134 
 4 mu         0.1   0.4 0.397 0.151 
 5 mu         0.1   0.5 0.426 0.175 
 6 mu         0.2   0.1 0.239 0.0812
 7 mu         0.2   0.2 0.328 0.0692
 8 mu         0.2   0.3 0.378 0.0795
 9 mu         0.2   0.4 0.394 0.0942
10 mu         0.2   0.5 0.427 0.111 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.939        0.185 0.00000101      19.9 
 2 mu         0.2      1.01         0.592 0.000718         7.86
 3 mu         0.3      1.08         0.881 0.0186           8.55
 4 mu         0.4      1.07         1     0.116            6.03
 5 mu         0.5      1.03         1     0.333            3.24
 6 mu         0.6      1.00         1     0.593            1.66
 7 mu         0.7      0.995        0.991 0.593            1.62
 8 mu         0.8      0.987        0.958 0.252            2.57
 9 mu         0.9      0.996        0.967 0.0387           5.47
10 mu_1       0.1      0.931        0.479 0.00000555      10.3 
11 mu_1       0.2      1.04         0.872 0.00198         10.1 
12 mu_1       0.3      1.08         0.980 0.0351           7.65
13 mu_1       0.4      1.05         1     0.169            5.12
14 mu_1       0.5      1.01         1     0.394            2.33
15 mu_1       0.6      1.00         0.998 0.647            1.32
16 mu_1       0.7      0.993        0.981 0.540            1.68
17 mu_1       0.8      0.988        0.954 0.220            2.93
18 mu_1       0.9      1.00         0.963 0.0328           5.90
19 mu_0       0.1      0.940        0.138 0.000000504     22.0 
20 mu_0       0.2      1.00         0.521 0.000404         9.32
21 mu_0       0.3      1.08         0.834 0.0101           8.94
22 mu_0       0.4      1.08         0.997 0.0714           6.97
23 mu_0       0.5      1.04         1     0.258            4.15
24 mu_0       0.6      1.01         1.00  0.511            2.17
25 mu_0       0.7      0.998        1     0.715            1.49
26 mu_0       0.8      0.983        0.959 0.382            1.94
27 mu_0       0.9      0.944        0.949 0.0922           2.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.18   0.0000270   7.90e-14      68.3
 2 mu         0.2       2.04   0.00440     2.59e- 9      84.2
 3 mu         0.3       1.66   0.0681      1.13e- 6      49.8
 4 mu         0.4       1.30   0.291       8.49e- 5      19.0
 5 mu         0.5       1.29   0.714       2.41e- 3      13.5
 6 mu         0.6       1.33   0.904       3.17e- 2      16.8
 7 mu         0.7       1.42   0.866       1.31e- 3      23.3
 8 mu         0.8       2.07   0.956       4.46e- 6     100. 
 9 mu         0.9       2.88   0.276       1.09e-10     186. 
10 mu_1       0.1       2.17   0.000160    7.90e-13     114. 
11 mu_1       0.2       2.09   0.0146      1.29e- 8      74.8
12 mu_1       0.3       1.43   0.148       3.78e- 6      29.8
13 mu_1       0.4       1.23   0.461       2.12e- 4      11.4
14 mu_1       0.5       1.30   0.790       4.82e- 3      15.6
15 mu_1       0.6       1.33   0.908       1.47e- 2      16.2
16 mu_1       0.7       1.46   0.881       4.16e- 4      29.8
17 mu_1       0.8       2.17   0.766       1.11e- 6     112. 
18 mu_1       0.9       2.88   0.205       2.42e-11     185. 
19 mu_0       0.1       1.07   0.00000917  0             63.3
20 mu_0       0.2       2.03   0.00160     0             87.7
21 mu_0       0.3       1.76   0.0286      0             59.3
22 mu_0       0.4       1.35   0.147       0             26.3
23 mu_0       0.5       1.28   0.456       0             11.3
24 mu_0       0.6       1.33   0.808       0             17.7
25 mu_0       0.7       1.32   0.839       0             12.9
26 mu_0       0.8       1.64   0.908       0             52.8
27 mu_0       0.9       2.89   0.210       0            195. 
[1] "Total run time was 82.122 seconds"
