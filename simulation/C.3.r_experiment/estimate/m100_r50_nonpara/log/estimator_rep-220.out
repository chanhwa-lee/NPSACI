
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1256"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8  3  4  7  9  9 10  1  4  7  8 11  4  3  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03003 0.34952 0.60601 0.98299 5.19226 
[1] "event indicator table: "

  0   1 
732 524 
[1] "treatment indicator table: "

  0   1 
484 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 590
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 89.109 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.370 0.0935
 2 mu         0.1   0.2 0.436 0.0978
 3 mu         0.1   0.3 0.506 0.116 
 4 mu         0.1   0.4 0.510 0.101 
 5 mu         0.1   0.5 0.530 0.106 
 6 mu         0.2   0.1 0.318 0.0648
 7 mu         0.2   0.2 0.380 0.0679
 8 mu         0.2   0.3 0.448 0.0784
 9 mu         0.2   0.4 0.461 0.0618
10 mu         0.2   0.5 0.488 0.0551
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.989        0.474   0.00375     11.4 
 2 mu         0.2      0.968        0.890   0.0820       3.86
 3 mu         0.3      0.976        0.968   0.245        2.02
 4 mu         0.4      1.00         1       0.499        1.53
 5 mu         0.5      1.03         1.02    0.581        1.42
 6 mu         0.6      1.03         1.01    0.790        1.32
 7 mu         0.7      1.01         1       0.723        1.34
 8 mu         0.8      0.992        1       0.476        1.55
 9 mu         0.9      0.986        0.988   0.106        2.10
10 mu_1       0.1      0.919        0.806   0.0133       5.02
11 mu_1       0.2      0.959        0.937   0.183        2.46
12 mu_1       0.3      0.987        0.972   0.302        1.87
13 mu_1       0.4      1.02         1.01    0.556        1.43
14 mu_1       0.5      1.03         1.02    0.613        1.43
15 mu_1       0.6      1.02         1.01    0.813        1.30
16 mu_1       0.7      1.00         0.998   0.684        1.35
17 mu_1       0.8      0.990        1       0.430        1.60
18 mu_1       0.9      0.986        0.998   0.0915       2.17
19 mu_0       0.1      0.997        0.421   0.00269     12.6 
20 mu_0       0.2      0.970        0.881   0.0537       4.58
21 mu_0       0.3      0.971        0.958   0.187        2.18
22 mu_0       0.4      0.993        1       0.392        1.65
23 mu_0       0.5      1.02         1.01    0.549        1.40
24 mu_0       0.6      1.03         1.02    0.711        1.40
25 mu_0       0.7      1.02         1.01    0.801        1.32
26 mu_0       0.8      1.00         1       0.606        1.37
27 mu_0       0.9      0.986        0.982   0.240        2.04
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.13     0.0000609  8.61e-17     86.0 
 2 mu         0.2      3.22     0.00813    4.01e-11    104.  
 3 mu         0.3      2.17     0.0955     7.78e- 8     45.0 
 4 mu         0.4      1.40     0.396      1.58e- 5     10.6 
 5 mu         0.5      1.11     0.861      9.12e- 4      4.39
 6 mu         0.6      1.04     0.918      2.29e- 2      5.48
 7 mu         0.7      1.14     0.948      6.85e- 4      5.03
 8 mu         0.8      1.26     0.856      1.56e- 6      8.01
 9 mu         0.9      1.51     0.129      3.38e-11     23.1 
10 mu_1       0.1      3.73     0.000357   8.18e-16    136.  
11 mu_1       0.2      3.13     0.0236     1.91e-10     82.5 
12 mu_1       0.3      1.80     0.217      2.46e- 7     25.0 
13 mu_1       0.4      1.23     0.663      3.75e- 5      5.79
14 mu_1       0.5      1.04     0.853      1.73e- 3      4.40
15 mu_1       0.6      1.04     0.955      1.13e- 2      5.48
16 mu_1       0.7      1.17     0.929      1.54e- 4      5.39
17 mu_1       0.8      1.30     0.689      3.07e- 7     10.0 
18 mu_1       0.9      1.56     0.0900     5.93e-12     25.7 
19 mu_0       0.1      1.95     0.0000209  0            80.4 
20 mu_0       0.2      3.25     0.00373    0           110.  
21 mu_0       0.3      2.33     0.0317     0            53.5 
22 mu_0       0.4      1.51     0.238      0            14.7 
23 mu_0       0.5      1.18     0.629      0             5.85
24 mu_0       0.6      1.04     0.999      0             5.48
25 mu_0       0.7      1.05     0.837      0             4.65
26 mu_0       0.8      1.11     0.690      0             6.28
27 mu_0       0.9      0.981    0.148      0             7.63
[1] "Total run time was 92.92 seconds"
