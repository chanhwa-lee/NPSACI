
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1220"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2 10 11  4  8  5  8  4  3 10  9  6  3  6  6  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02843 0.36980 0.60680 0.99229 6.00000 
[1] "event indicator table: "

  0   1 
694 526 
[1] "treatment indicator table: "

  0   1 
433 787 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 420.313 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.448 0.248
 2 mu         0.1   0.2 0.596 0.326
 3 mu         0.1   0.3 0.630 0.358
 4 mu         0.1   0.4 0.716 0.444
 5 mu         0.1   0.5 0.870 0.420
 6 mu         0.2   0.1 0.423 0.118
 7 mu         0.2   0.2 0.545 0.160
 8 mu         0.2   0.3 0.613 0.177
 9 mu         0.2   0.4 0.696 0.226
10 mu         0.2   0.5 0.821 0.194
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.31         0.415  0.000275     56.6 
 2 mu         0.2      1.34         0.866  0.0158       20.4 
 3 mu         0.3      1.25         1      0.118         8.74
 4 mu         0.4      1.09         0.993  0.370         5.28
 5 mu         0.5      1.01         0.998  0.622         2.17
 6 mu         0.6      0.991        1      0.726         1.16
 7 mu         0.7      0.991        0.987  0.766         1.32
 8 mu         0.8      1.00         1.02   0.669         1.30
 9 mu         0.9      1.03         1.00   0.393         2.20
10 mu_1       0.1      1.06         0.815  0.00119      11.6 
11 mu_1       0.2      1.29         0.973  0.0371       14.2 
12 mu_1       0.3      1.17         1.01   0.196         7.82
13 mu_1       0.4      1.05         0.994  0.504         3.82
14 mu_1       0.5      0.999        0.990  0.647         1.59
15 mu_1       0.6      0.989        0.999  0.768         1.20
16 mu_1       0.7      0.991        0.983  0.763         1.35
17 mu_1       0.8      1.01         1.01   0.614         1.36
18 mu_1       0.9      1.03         1.02   0.358         2.27
19 mu_0       0.1      1.34         0.359  0.000168     62.7 
20 mu_0       0.2      1.36         0.819  0.0105       25.2 
21 mu_0       0.3      1.28         0.979  0.0852        9.88
22 mu_0       0.4      1.12         0.997  0.250         6.25
23 mu_0       0.5      1.03         0.987  0.466         2.82
24 mu_0       0.6      0.995        0.999  0.662         1.28
25 mu_0       0.7      0.992        1.00   0.766         1.24
26 mu_0       0.8      0.993        0.986  0.731         1.41
27 mu_0       0.9      1.01         0.996  0.501         1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      11.7     0.0000437  1.97e-16   1117.  
 2 mu         0.2       7.83    0.00432    9.20e-11    490.  
 3 mu         0.3       5.51    0.0549     1.78e- 7    229.  
 4 mu         0.4       3.09    0.337      3.62e- 5     95.8 
 5 mu         0.5       1.71    0.848      1.94e- 3     19.0 
 6 mu         0.6       1.24    1.19       3.45e- 2      3.83
 7 mu         0.7       1.14    1.21       4.80e- 2      2.47
 8 mu         0.8       1.22    0.829      2.14e- 4      6.32
 9 mu         0.9       1.46    0.140      1.17e- 8     29.6 
10 mu_1       0.1       1.50    0.000222   0           102.  
11 mu_1       0.2       3.97    0.0145     0           280.  
12 mu_1       0.3       3.46    0.122      0           191.  
13 mu_1       0.4       2.06    0.498      0            59.9 
14 mu_1       0.5       1.37    1.00       0             9.48
15 mu_1       0.6       1.16    1.16       0             3.17
16 mu_1       0.7       1.13    1.12       0             2.77
17 mu_1       0.8       1.25    0.685      0             7.50
18 mu_1       0.9       1.47    0.104      0            31.3 
19 mu_0       0.1      12.9     0.0000123  0          1241.  
20 mu_0       0.2       8.80    0.00157    0           612.  
21 mu_0       0.3       6.39    0.0254     0           275.  
22 mu_0       0.4       3.77    0.188      0           120.  
23 mu_0       0.5       2.06    0.565      0            36.5 
24 mu_0       0.6       1.37    1.06       0             9.57
25 mu_0       0.7       1.14    1.17       0             2.94
26 mu_0       0.8       1.13    1.04       0             2.83
27 mu_0       0.9       1.39    0.420      0            14.8 
[1] "Total run time was 424.219 seconds"
