
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1307"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  4  4  5 10 12  7  7  7  2  7  5  9  6  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02375 0.32910 0.58635 1.00000 5.16486 
[1] "event indicator table: "

  0   1 
783 524 
[1] "treatment indicator table: "

  0   1 
474 833 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 105.86 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.580 0.168 
 2 mu         0.1   0.2 0.610 0.180 
 3 mu         0.1   0.3 0.681 0.202 
 4 mu         0.1   0.4 0.769 0.225 
 5 mu         0.1   0.5 0.817 0.239 
 6 mu         0.2   0.1 0.462 0.0878
 7 mu         0.2   0.2 0.505 0.0858
 8 mu         0.2   0.3 0.559 0.0963
 9 mu         0.2   0.4 0.637 0.111 
10 mu         0.2   0.5 0.674 0.116 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.03         0.188 0.000129      30.5 
 2 mu         0.2      0.956        0.639 0.00918       11.2 
 3 mu         0.3      0.955        0.903 0.0710         3.15
 4 mu         0.4      0.979        0.949 0.252          1.98
 5 mu         0.5      0.987        0.996 0.568          1.56
 6 mu         0.6      0.990        0.987 0.784          1.23
 7 mu         0.7      1.00         0.999 0.803          1.25
 8 mu         0.8      1.02         1.00  0.488          1.60
 9 mu         0.9      1.02         0.920 0.192          2.66
10 mu_1       0.1      1.07         0.437 0.000521      21.2 
11 mu_1       0.2      0.937        0.836 0.0192         4.94
12 mu_1       0.3      0.965        0.949 0.110          2.18
13 mu_1       0.4      0.984        0.971 0.330          1.86
14 mu_1       0.5      0.987        0.990 0.653          1.45
15 mu_1       0.6      0.991        0.987 0.829          1.22
16 mu_1       0.7      1.00         1.01  0.749          1.29
17 mu_1       0.8      1.03         1.00  0.444          1.70
18 mu_1       0.9      1.02         0.918 0.175          2.67
19 mu_0       0.1      1.03         0.154 0.0000860     31.6 
20 mu_0       0.2      0.961        0.567 0.00667       12.8 
21 mu_0       0.3      0.951        0.842 0.0544         3.70
22 mu_0       0.4      0.976        0.944 0.201          2.07
23 mu_0       0.5      0.987        0.982 0.482          1.67
24 mu_0       0.6      0.989        0.988 0.651          1.32
25 mu_0       0.7      0.992        0.984 0.784          1.24
26 mu_0       0.8      1.01         1.00  0.649          1.48
27 mu_0       0.9      1.03         1.00  0.346          2.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.411    0.0000829  4.56e-16     13.9 
 2 mu         0.2      0.945    0.00695    1.20e-10     21.7 
 3 mu         0.3      1.29     0.0740     1.77e- 7     16.8 
 4 mu         0.4      1.38     0.315      3.14e- 5     11.5 
 5 mu         0.5      1.27     0.739      1.61e- 3      7.08
 6 mu         0.6      1.09     1.05       3.44e- 2      3.48
 7 mu         0.7      1.04     1.08       4.13e- 2      2.74
 8 mu         0.8      1.30     0.559      1.36e- 3      9.01
 9 mu         0.9      2.28     0.0802     1.20e- 6     68.5 
10 mu_1       0.1      0.916    0.000520   4.56e-15     27.8 
11 mu_1       0.2      1.24     0.0240     5.98e-10     21.7 
12 mu_1       0.3      1.37     0.161      5.89e- 7     11.9 
13 mu_1       0.4      1.34     0.536      7.84e- 5     10.8 
14 mu_1       0.5      1.20     0.934      3.06e- 3      5.31
15 mu_1       0.6      1.05     1.05       5.43e- 2      2.58
16 mu_1       0.7      1.06     1.01       1.47e- 2      2.99
17 mu_1       0.8      1.37     0.408      5.01e- 4     10.5 
18 mu_1       0.9      2.39     0.0519     4.16e- 7     76.1 
19 mu_0       0.1      0.355    0.0000326  0            12.4 
20 mu_0       0.2      0.872    0.00205    0            21.7 
21 mu_0       0.3      1.25     0.0359     0            19.2 
22 mu_0       0.4      1.41     0.183      0            12.0 
23 mu_0       0.5      1.34     0.545      0             8.85
24 mu_0       0.6      1.15     0.995      0             4.83
25 mu_0       0.7      1.00     1.04       0             2.83
26 mu_0       0.8      1.02     0.802      0             3.95
27 mu_0       0.9      1.29     0.199      0            15.6 
[1] "Total run time was 110.326 seconds"
