
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1218"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  5 15  4  7  8  5  3  4  6  8 12  3  4  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.06414 0.42342 0.67704 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
742 476 
[1] "treatment indicator table: "

  0   1 
433 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 548
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 366.175 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.351 0.118 
 2 mu         0.1   0.2 0.376 0.0932
 3 mu         0.1   0.3 0.403 0.0903
 4 mu         0.1   0.4 0.501 0.110 
 5 mu         0.1   0.5 0.533 0.0997
 6 mu         0.2   0.1 0.308 0.0842
 7 mu         0.2   0.2 0.353 0.0638
 8 mu         0.2   0.3 0.389 0.0626
 9 mu         0.2   0.4 0.495 0.0861
10 mu         0.2   0.5 0.541 0.0779
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.860        0.321 0.0000487      7.77
 2 mu         0.2      0.968        0.697 0.00587        6.81
 3 mu         0.3      0.947        0.942 0.0628         3.68
 4 mu         0.4      0.961        0.950 0.234          2.07
 5 mu         0.5      0.987        0.999 0.473          1.32
 6 mu         0.6      0.999        1     0.658          1.38
 7 mu         0.7      0.994        1.01  0.673          1.33
 8 mu         0.8      1.00         0.993 0.356          2.14
 9 mu         0.9      1.04         0.974 0.0710         6.06
10 mu_1       0.1      1.07         0.646 0.000227       9.94
11 mu_1       0.2      0.979        0.916 0.0142         5.09
12 mu_1       0.3      0.952        0.942 0.105          2.82
13 mu_1       0.4      0.971        0.979 0.309          1.71
14 mu_1       0.5      0.993        1.00  0.536          1.34
15 mu_1       0.6      0.999        1     0.691          1.38
16 mu_1       0.7      0.993        1     0.633          1.43
17 mu_1       0.8      1.00         0.998 0.322          2.48
18 mu_1       0.9      1.05         0.978 0.0614         6.60
19 mu_0       0.1      0.837        0.289 0.0000289      7.53
20 mu_0       0.2      0.966        0.627 0.00379        7.24
21 mu_0       0.3      0.945        0.888 0.0446         4.13
22 mu_0       0.4      0.954        0.927 0.184          2.31
23 mu_0       0.5      0.981        0.972 0.410          1.39
24 mu_0       0.6      0.999        1.00  0.609          1.40
25 mu_0       0.7      0.997        1.00  0.730          1.33
26 mu_0       0.8      0.983        1.00  0.495          1.51
27 mu_0       0.9      0.995        0.977 0.158          2.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      34.8     0.0000536  6.54e-15   3350.  
 2 mu         0.2      15.2     0.00512    1.35e- 9   1288.  
 3 mu         0.3       5.45    0.0488     1.02e- 6    298.  
 4 mu         0.4       2.34    0.213      8.69e- 5     65.8 
 5 mu         0.5       1.37    0.634      2.57e- 3     21.6 
 6 mu         0.6       1.14    1.00       3.22e- 2      5.51
 7 mu         0.7       1.25    1.06       2.00e- 3      7.83
 8 mu         0.8       1.45    1.04       1.92e- 5     13.2 
 9 mu         0.9       1.32    0.192      1.32e- 9     12.1 
10 mu_1       0.1      24.5     0.000325   5.88e-14   2233.  
11 mu_1       0.2       6.96    0.0175     6.09e- 9    429.  
12 mu_1       0.3       2.94    0.112      3.19e- 6    101.  
13 mu_1       0.4       1.68    0.411      2.05e- 4     43.8 
14 mu_1       0.5       1.22    0.796      4.84e- 3     11.5 
15 mu_1       0.6       1.15    1.00       5.65e- 3      5.35
16 mu_1       0.7       1.31    1.15       2.38e- 4      9.32
17 mu_1       0.8       1.47    0.889      1.60e- 6     13.8 
18 mu_1       0.9       1.30    0.134      9.76e-11     12.1 
19 mu_0       0.1      36.0     0.0000167  0          3474.  
20 mu_0       0.2      17.3     0.00122    0          1503.  
21 mu_0       0.3       6.52    0.0172     0           397.  
22 mu_0       0.4       2.78    0.0860     0            80.4 
23 mu_0       0.5       1.52    0.371      0            31.7 
24 mu_0       0.6       1.12    0.773      0             7.06
25 mu_0       0.7       1.12    0.925      0             5.34
26 mu_0       0.8       1.35    1.05       0            11.0 
27 mu_0       0.9       1.54    0.370      0            17.9 
[1] "Total run time was 372.523 seconds"
