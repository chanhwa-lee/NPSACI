
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1215"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  6  6  6  7  5  8  8  3  8  2  6  5  9  2  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03276 0.40651 0.63241 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
708 507 
[1] "treatment indicator table: "

  0   1 
432 783 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 615
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 600
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 85.964 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.511 0.104 
 2 mu         0.1   0.2 0.623 0.168 
 3 mu         0.1   0.3 0.690 0.140 
 4 mu         0.1   0.4 0.711 0.136 
 5 mu         0.1   0.5 0.713 0.129 
 6 mu         0.2   0.1 0.443 0.0672
 7 mu         0.2   0.2 0.532 0.0974
 8 mu         0.2   0.3 0.609 0.0827
 9 mu         0.2   0.4 0.643 0.0786
10 mu         0.2   0.5 0.649 0.0744
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.893        0.530  0.00128       5.93
 2 mu         0.2      0.985        0.894  0.0535        2.97
 3 mu         0.3      1.03         0.984  0.289         2.22
 4 mu         0.4      1.03         1.00   0.651         1.93
 5 mu         0.5      1.02         1.00   0.791         1.41
 6 mu         0.6      1.01         1.00   0.800         1.19
 7 mu         0.7      1.00         1      0.823         1.17
 8 mu         0.8      0.973        0.986  0.629         1.35
 9 mu         0.9      0.917        0.966  0.392         1.61
10 mu_1       0.1      1.02         0.914  0.00469       4.14
11 mu_1       0.2      1.03         0.969  0.104         2.79
12 mu_1       0.3      1.04         1.00   0.407         2.20
13 mu_1       0.4      1.03         1.02   0.769         1.74
14 mu_1       0.5      1.02         1.00   0.762         1.34
15 mu_1       0.6      1.01         1      0.813         1.18
16 mu_1       0.7      0.997        1      0.803         1.23
17 mu_1       0.8      0.965        0.983  0.610         1.42
18 mu_1       0.9      0.911        0.963  0.367         1.66
19 mu_0       0.1      0.879        0.483  0.000905      6.25
20 mu_0       0.2      0.974        0.894  0.0408        3.12
21 mu_0       0.3      1.02         0.967  0.238         2.45
22 mu_0       0.4      1.03         1      0.527         2.06
23 mu_0       0.5      1.02         1.01   0.724         1.53
24 mu_0       0.6      1.01         1.01   0.753         1.23
25 mu_0       0.7      1.01         1.01   0.829         1.16
26 mu_0       0.8      1.00         1.00   0.706         1.23
27 mu_0       0.9      0.970        0.974  0.526         1.38
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.58     0.0000615  1.13e-16     99.3 
 2 mu         0.2      2.27     0.00689    5.25e-11     64.1 
 3 mu         0.3      2.02     0.0964     1.02e- 7     57.2 
 4 mu         0.4      1.45     0.472      2.06e- 5     24.4 
 5 mu         0.5      1.15     1.04       1.19e- 3      5.56
 6 mu         0.6      1.05     1.08       3.04e- 2      2.89
 7 mu         0.7      1.00     1.02       1.18e- 2      2.47
 8 mu         0.8      1.07     0.663      2.33e- 4      4.84
 9 mu         0.9      1.37     0.0975     4.78e- 8     17.1 
10 mu_1       0.1      2.31     0.000441   1.07e-15     90.3 
11 mu_1       0.2      2.38     0.0231     2.49e-10     75.4 
12 mu_1       0.3      1.75     0.252      3.22e- 7     44.8 
13 mu_1       0.4      1.26     0.742      4.90e- 5     14.3 
14 mu_1       0.5      1.09     1.13       2.27e- 3      3.09
15 mu_1       0.6      1.03     1.06       2.71e- 2      2.68
16 mu_1       0.7      0.988    0.956      1.53e- 3      2.65
17 mu_1       0.8      1.09     0.498      2.65e- 5      5.37
18 mu_1       0.9      1.40     0.0668     1.25e- 8     18.0 
19 mu_0       0.1      1.50     0.0000144  0           100.  
20 mu_0       0.2      2.25     0.00364    0            69.5 
21 mu_0       0.3      2.13     0.0493     0            62.5 
22 mu_0       0.4      1.57     0.284      0            31.0 
23 mu_0       0.5      1.21     0.813      0             8.50
24 mu_0       0.6      1.10     1.20       0             3.21
25 mu_0       0.7      1.04     1.08       0             2.52
26 mu_0       0.8      0.992    0.933      0             3.02
27 mu_0       0.9      1.13     0.200      0             9.02
[1] "Total run time was 89.196 seconds"
