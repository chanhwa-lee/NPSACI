
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1243"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
10  9  6  5  4  5  3  4  9  7  4 10  4  2  9  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02428 0.29834 0.58412 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
736 507 
[1] "treatment indicator table: "

  0   1 
481 762 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 573
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 100.687 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.492 0.0779
 2 mu         0.1   0.2 0.548 0.0901
 3 mu         0.1   0.3 0.579 0.0916
 4 mu         0.1   0.4 0.609 0.0974
 5 mu         0.1   0.5 0.641 0.0911
 6 mu         0.2   0.1 0.514 0.0974
 7 mu         0.2   0.2 0.581 0.112 
 8 mu         0.2   0.3 0.622 0.116 
 9 mu         0.2   0.4 0.660 0.127 
10 mu         0.2   0.5 0.697 0.132 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.813        0.691 0.000000656     10.6 
 2 mu         0.2      1.05         0.874 0.000522        21.0 
 3 mu         0.3      1.08         0.992 0.0159          14.7 
 4 mu         0.4      1.03         1     0.118            6.11
 5 mu         0.5      1.00         1.00  0.383            2.04
 6 mu         0.6      0.997        1     0.724            1.45
 7 mu         0.7      1.00         1     0.710            1.73
 8 mu         0.8      1.00         1     0.438            1.72
 9 mu         0.9      0.974        0.954 0.143            3.64
10 mu_1       0.1      1.03         0.822 0.00000364      21.3 
11 mu_1       0.2      1.12         0.949 0.00146         21.2 
12 mu_1       0.3      1.06         1     0.0302          10.2 
13 mu_1       0.4      1.01         1     0.172            3.52
14 mu_1       0.5      0.994        0.997 0.466            1.44
15 mu_1       0.6      0.996        1     0.714            1.51
16 mu_1       0.7      1.00         1     0.687            1.76
17 mu_1       0.8      1.00         1     0.406            1.84
18 mu_1       0.9      0.971        0.961 0.130            3.88
19 mu_0       0.1      0.789        0.623 0.000000324      9.46
20 mu_0       0.2      1.03         0.854 0.000287        20.9 
21 mu_0       0.3      1.08         0.972 0.00978         16.7 
22 mu_0       0.4      1.04         1     0.0820           7.84
23 mu_0       0.5      1.01         1     0.300            2.73
24 mu_0       0.6      0.997        1     0.628            1.37
25 mu_0       0.7      0.999        1     0.699            1.65
26 mu_0       0.8      1.00         1     0.570            1.83
27 mu_0       0.9      0.998        1     0.262            2.46
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      47.3     0.0000670  5.60e-17   1744.  
 2 mu         0.2      40.4     0.00743    2.94e-11   1884.  
 3 mu         0.3      16.4     0.0972     6.51e- 8    657.  
 4 mu         0.4       5.16    0.401      1.00e- 5    113.  
 5 mu         0.5       1.93    0.815      3.56e- 4     26.1 
 6 mu         0.6       1.21    1.01       6.58e- 3      5.56
 7 mu         0.7       1.13    0.961      4.03e- 3      5.19
 8 mu         0.8       1.39    0.694      7.02e- 6     11.7 
 9 mu         0.9       2.70    0.103      7.62e-11     75.7 
10 mu_1       0.1      58.6     0.000645   5.60e-16   2616.  
11 mu_1       0.2      27.9     0.0229     1.47e-10   1413.  
12 mu_1       0.3       9.03    0.206      2.17e- 7    328.  
13 mu_1       0.4       3.09    0.582      2.51e- 5     65.8 
14 mu_1       0.5       1.51    1.03       7.12e- 4     16.6 
15 mu_1       0.6       1.16    1.02       1.10e- 2      4.54
16 mu_1       0.7       1.16    0.956      9.92e- 4      6.18
17 mu_1       0.8       1.46    0.591      1.32e- 6     13.9 
18 mu_1       0.9       2.84    0.0730     1.27e-11     84.1 
19 mu_0       0.1      46.1     0.0000242  0          1647.  
20 mu_0       0.2      43.5     0.00358    0          2001.  
21 mu_0       0.3      19.5     0.0404     0           797.  
22 mu_0       0.4       6.55    0.217      0           160.  
23 mu_0       0.5       2.35    0.568      0            36.5 
24 mu_0       0.6       1.28    0.999      0             8.78
25 mu_0       0.7       1.08    0.985      0             4.37
26 mu_0       0.8       1.12    0.917      0             8.68
27 mu_0       0.9       1.50    0.219      0            27.4 
[1] "Total run time was 104.551 seconds"
