
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1274"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  2  5  5  6  5  8  7 10  4  9  4  7  4 10  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0315  0.3459  0.5960  1.0000  6.0000 
[1] "event indicator table: "

  0   1 
757 517 
[1] "treatment indicator table: "

  0   1 
481 793 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 652
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 108.901 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.439 0.0992
 2 mu         0.1   0.2 0.563 0.111 
 3 mu         0.1   0.3 0.599 0.117 
 4 mu         0.1   0.4 0.629 0.125 
 5 mu         0.1   0.5 0.654 0.126 
 6 mu         0.2   0.1 0.389 0.0540
 7 mu         0.2   0.2 0.488 0.0561
 8 mu         0.2   0.3 0.528 0.0570
 9 mu         0.2   0.4 0.570 0.0571
10 mu         0.2   0.5 0.605 0.0571
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.07         0.591  0.000299     14.3 
 2 mu         0.2      1.05         0.894  0.0218        5.10
 3 mu         0.3      1.04         1      0.154         2.21
 4 mu         0.4      1.03         1      0.418         1.56
 5 mu         0.5      1.02         1.00   0.719         1.37
 6 mu         0.6      1.00         1      0.824         1.26
 7 mu         0.7      0.988        0.982  0.747         1.29
 8 mu         0.8      0.965        0.962  0.500         1.73
 9 mu         0.9      0.924        0.912  0.173         3.32
10 mu_1       0.1      0.999        0.898  0.00121       5.39
11 mu_1       0.2      1.01         1      0.0455        2.62
12 mu_1       0.3      1.03         1      0.228         1.80
13 mu_1       0.4      1.03         1.01   0.520         1.49
14 mu_1       0.5      1.01         1      0.787         1.36
15 mu_1       0.6      0.999        0.997  0.837         1.23
16 mu_1       0.7      0.985        0.986  0.710         1.38
17 mu_1       0.8      0.961        0.960  0.474         1.90
18 mu_1       0.9      0.923        0.912  0.152         3.54
19 mu_0       0.1      1.08         0.534  0.000198     15.8 
20 mu_0       0.2      1.06         0.876  0.0159        6.10
21 mu_0       0.3      1.05         1      0.122         2.63
22 mu_0       0.4      1.04         1      0.335         1.76
23 mu_0       0.5      1.03         1.00   0.613         1.45
24 mu_0       0.6      1.01         1      0.797         1.34
25 mu_0       0.7      0.996        0.996  0.833         1.25
26 mu_0       0.8      0.981        0.976  0.605         1.44
27 mu_0       0.9      0.939        0.935  0.328         1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.643    0.000107   4.77e-15     17.2 
 2 mu         0.2      1.24     0.0105     6.25e-10     19.5 
 3 mu         0.3      1.33     0.0931     6.15e- 7     13.9 
 4 mu         0.4      1.13     0.416      8.19e- 5      6.78
 5 mu         0.5      0.965    0.782      3.64e- 3      3.36
 6 mu         0.6      0.977    0.927      3.21e- 2      4.56
 7 mu         0.7      1.17     1.10       9.09e- 4      5.78
 8 mu         0.8      1.55     0.616      4.65e- 6     10.7 
 9 mu         0.9      2.24     0.0714     4.04e-10     79.5 
10 mu_1       0.1      1.21     0.000670   4.77e-14     24.6 
11 mu_1       0.2      1.44     0.0342     3.12e- 9     17.2 
12 mu_1       0.3      1.27     0.212      2.05e- 6     12.2 
13 mu_1       0.4      1.03     0.630      2.05e- 4      5.07
14 mu_1       0.5      0.931    0.786      7.27e- 3      3.31
15 mu_1       0.6      1.00     0.985      9.45e- 3      5.26
16 mu_1       0.7      1.22     1.15       2.29e- 4      5.72
17 mu_1       0.8      1.62     0.509      1.03e- 6     13.4 
18 mu_1       0.9      2.30     0.0510     7.92e-11     88.3 
19 mu_0       0.1      0.580    0.0000440  0            16.4 
20 mu_0       0.2      1.18     0.00452    0            20.1 
21 mu_0       0.3      1.36     0.0447     0            14.6 
22 mu_0       0.4      1.19     0.274      0             8.64
23 mu_0       0.5      0.998    0.610      0             4.34
24 mu_0       0.6      0.940    0.802      0             3.51
25 mu_0       0.7      1.03     0.928      0             5.93
26 mu_0       0.8      1.29     0.854      0             7.39
27 mu_0       0.9      1.67     0.191      0            20.7 
[1] "Total run time was 113.537 seconds"
