
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1310"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  8  4  8  7  4  4  5  6  5  6  8  7  7 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03782 0.33110 0.61562 1.00000 5.26900 
[1] "event indicator table: "

  0   1 
778 532 
[1] "treatment indicator table: "

  0   1 
447 863 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 683
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 80.333 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.429 0.102
 2 mu         0.1   0.2 0.500 0.112
 3 mu         0.1   0.3 0.605 0.157
 4 mu         0.1   0.4 0.622 0.154
 5 mu         0.1   0.5 0.658 0.171
 6 mu         0.2   0.1 0.465 0.131
 7 mu         0.2   0.2 0.569 0.164
 8 mu         0.2   0.3 0.704 0.216
 9 mu         0.2   0.4 0.743 0.225
10 mu         0.2   0.5 0.802 0.251
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      0.855        0.168 0.0000000205      14.7 
 2 mu         0.2      1.13         0.624 0.0000260         36.4 
 3 mu         0.3      1.19         0.863 0.00132           37.7 
 4 mu         0.4      1.08         0.973 0.0171            16.7 
 5 mu         0.5      1.02         0.999 0.0999             4.70
 6 mu         0.6      1.01         1.00  0.334              2.60
 7 mu         0.7      1.00         1     0.682              1.84
 8 mu         0.8      0.997        1     0.432              1.51
 9 mu         0.9      0.997        0.994 0.0681             3.09
10 mu_1       0.1      0.944        0.459 0.000000142       16.6 
11 mu_1       0.2      1.22         0.827 0.0000910         45.5 
12 mu_1       0.3      1.17         0.964 0.00311           31.7 
13 mu_1       0.4      1.06         0.989 0.0306            11.1 
14 mu_1       0.5      1.02         1     0.145              3.16
15 mu_1       0.6      1.00         1.00  0.415              2.35
16 mu_1       0.7      0.997        1     0.690              1.60
17 mu_1       0.8      0.996        0.995 0.376              1.66
18 mu_1       0.9      0.997        0.996 0.0549             3.19
19 mu_0       0.1      0.845        0.147 0.00000000700     14.8 
20 mu_0       0.2      1.11         0.550 0.00000978        34.1 
21 mu_0       0.3      1.20         0.799 0.000552          40.2 
22 mu_0       0.4      1.09         0.952 0.00808           20.5 
23 mu_0       0.5      1.02         0.992 0.0543             6.24
24 mu_0       0.6      1.01         1     0.212              2.97
25 mu_0       0.7      1.01         1.00  0.499              2.38
26 mu_0       0.8      1.00         1     0.647              1.55
27 mu_0       0.9      0.995        0.994 0.187              2.20
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      29.8    0.0000384   1.44e-17    2697. 
 2 mu         0.2      76.3    0.00344     5.90e-12    6554. 
 3 mu         0.3      56.0    0.0569      8.72e- 9    3918. 
 4 mu         0.4      27.9    0.295       1.55e- 6    1222. 
 5 mu         0.5      14.9    0.836       8.59e- 5     999. 
 6 mu         0.6       7.88   0.894       2.29e- 3     543. 
 7 mu         0.7       3.49   0.976       1.67e- 2     179. 
 8 mu         0.8       2.10   0.906       2.86e- 4      32.6
 9 mu         0.9       2.97   0.157       9.55e- 9     153. 
10 mu_1       0.1      61.4    0.000289    1.37e-16    5394. 
11 mu_1       0.2      82.0    0.0115      2.95e-11    6554. 
12 mu_1       0.3      45.7    0.129       2.91e- 8    2612. 
13 mu_1       0.4      21.9    0.486       3.87e- 6    1222. 
14 mu_1       0.5      11.6    0.875       1.72e- 4     799. 
15 mu_1       0.6       5.76   0.859       3.81e- 3     362. 
16 mu_1       0.7       2.65   1.09        7.94e- 3     102. 
17 mu_1       0.8       2.04   0.772       9.77e- 5      38.8
18 mu_1       0.9       3.06   0.103       2.12e- 9     161. 
19 mu_0       0.1      26.3    0.00000507  0           2397. 
20 mu_0       0.2      74.8    0.00131     0           6554. 
21 mu_0       0.3      60.5    0.0253      0           4477. 
22 mu_0       0.4      32.0    0.175       0           1401. 
23 mu_0       0.5      18.1    0.543       0           1199. 
24 mu_0       0.6      11.1    0.956       0            814. 
25 mu_0       0.7       5.46   0.882       0            358. 
26 mu_0       0.8       2.34   0.889       0             80.4
27 mu_0       0.9       2.19   0.262       0             76.5
[1] "Total run time was 83.548 seconds"
