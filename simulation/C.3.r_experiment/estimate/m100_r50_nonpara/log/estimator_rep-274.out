
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1206"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  8  5  7 10 11  6  3  5  3  9  6  8  4  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04185 0.35128 0.62048 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
712 494 
[1] "treatment indicator table: "

  0   1 
417 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 89"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 317.928 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.246 0.103 
 2 mu         0.1   0.2 0.370 0.146 
 3 mu         0.1   0.3 0.425 0.139 
 4 mu         0.1   0.4 0.455 0.134 
 5 mu         0.1   0.5 0.474 0.139 
 6 mu         0.2   0.1 0.244 0.0668
 7 mu         0.2   0.2 0.351 0.0737
 8 mu         0.2   0.3 0.419 0.0778
 9 mu         0.2   0.4 0.474 0.0873
10 mu         0.2   0.5 0.497 0.0978
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.418        0.125 0.0000411      4.56
 2 mu         0.2      0.659        0.534 0.00502        3.33
 3 mu         0.3      0.824        0.825 0.0573         2.32
 4 mu         0.4      0.921        0.946 0.237          1.76
 5 mu         0.5      0.974        0.988 0.541          1.36
 6 mu         0.6      0.998        1     0.714          1.25
 7 mu         0.7      1.01         1.01  0.780          1.33
 8 mu         0.8      1.01         1.00  0.658          1.39
 9 mu         0.9      1.02         0.988 0.302          1.91
10 mu_1       0.1      0.614        0.335 0.000221       4.31
11 mu_1       0.2      0.794        0.815 0.0137         2.82
12 mu_1       0.3      0.899        0.921 0.106          1.97
13 mu_1       0.4      0.959        0.962 0.339          1.44
14 mu_1       0.5      0.990        0.983 0.648          1.34
15 mu_1       0.6      1.00         1.00  0.712          1.24
16 mu_1       0.7      1.01         1.01  0.748          1.33
17 mu_1       0.8      1.01         1     0.617          1.44
18 mu_1       0.9      1.02         0.992 0.270          1.97
19 mu_0       0.1      0.396        0.103 0.0000211      5.02
20 mu_0       0.2      0.626        0.464 0.00286        3.46
21 mu_0       0.3      0.792        0.789 0.0364         2.47
22 mu_0       0.4      0.896        0.923 0.169          2.01
23 mu_0       0.5      0.958        0.972 0.432          1.49
24 mu_0       0.6      0.990        0.986 0.703          1.32
25 mu_0       0.7      1.00         1     0.720          1.33
26 mu_0       0.8      1.01         1.00  0.729          1.34
27 mu_0       0.9      1.00         1     0.535          1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.720    0.0000462  1.72e-14     29.0 
 2 mu         0.2      2.46     0.00440    1.78e- 9    127.  
 3 mu         0.3      3.48     0.0514     1.34e- 6    148.  
 4 mu         0.4      2.91     0.201      1.31e- 4     85.8 
 5 mu         0.5      1.79     0.525      4.05e- 3     41.7 
 6 mu         0.6      1.13     0.850      5.75e- 2     10.7 
 7 mu         0.7      0.989    0.934      1.41e- 2      4.36
 8 mu         0.8      1.13     0.765      2.97e- 4      8.68
 9 mu         0.9      1.37     0.121      2.32e- 7     28.2 
10 mu_1       0.1      1.64     0.000268   1.54e-13     77.3 
11 mu_1       0.2      3.42     0.0146     7.96e- 9    169.  
12 mu_1       0.3      3.56     0.127      4.00e- 6    132.  
13 mu_1       0.4      2.48     0.387      2.94e- 4     71.6 
14 mu_1       0.5      1.47     0.722      7.24e- 3     29.4 
15 mu_1       0.6      1.03     0.954      2.24e- 2      6.29
16 mu_1       0.7      1.00     0.939      2.24e- 3      4.76
17 mu_1       0.8      1.17     0.652      8.73e- 5     10.9 
18 mu_1       0.9      1.40     0.0969     6.88e- 8     31.3 
19 mu_0       0.1      0.617    0.0000130  0            23.6 
20 mu_0       0.2      2.22     0.00155    0           116.  
21 mu_0       0.3      3.45     0.0172     0           155.  
22 mu_0       0.4      3.20     0.105      0           105.  
23 mu_0       0.5      2.11     0.310      0            53.9 
24 mu_0       0.6      1.27     0.658      0            17.3 
25 mu_0       0.7      0.957    0.900      0             3.42
26 mu_0       0.8      0.956    0.926      0             5.75
27 mu_0       0.9      1.09     0.289      0             6.48
[1] "Total run time was 324.249 seconds"
