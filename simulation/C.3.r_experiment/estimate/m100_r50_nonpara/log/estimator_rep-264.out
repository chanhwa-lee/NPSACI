
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1189"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  9  5 11  3  7  7  5  5  4  9  5  8  3  8  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02321 0.31859 0.57921 0.92116 5.00000 
[1] "event indicator table: "

  0   1 
696 493 
[1] "treatment indicator table: "

  0   1 
444 745 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 598
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 591
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 89.327 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.392 0.0891
 2 mu         0.1   0.2 0.479 0.0866
 3 mu         0.1   0.3 0.560 0.104 
 4 mu         0.1   0.4 0.607 0.114 
 5 mu         0.1   0.5 0.678 0.129 
 6 mu         0.2   0.1 0.388 0.0736
 7 mu         0.2   0.2 0.483 0.0752
 8 mu         0.2   0.3 0.565 0.0876
 9 mu         0.2   0.4 0.630 0.0966
10 mu         0.2   0.5 0.693 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.956        0.636 0.000101      14.4 
 2 mu         0.2      1.06         0.858 0.0105        12.7 
 3 mu         0.3      0.999        0.939 0.101          5.55
 4 mu         0.4      0.971        0.988 0.354          2.15
 5 mu         0.5      0.984        0.999 0.600          1.41
 6 mu         0.6      1.01         1     0.656          1.33
 7 mu         0.7      1.02         1.00  0.600          1.27
 8 mu         0.8      1.02         1.02  0.760          1.52
 9 mu         0.9      1.05         1     0.205          2.34
10 mu_1       0.1      1.15         0.832 0.000482      19.3 
11 mu_1       0.2      1.05         0.964 0.0256         8.71
12 mu_1       0.3      0.976        0.957 0.170          3.00
13 mu_1       0.4      0.973        0.989 0.469          1.51
14 mu_1       0.5      0.993        1     0.625          1.40
15 mu_1       0.6      1.01         1.00  0.611          1.35
16 mu_1       0.7      1.02         1.01  0.617          1.28
17 mu_1       0.8      1.03         1.01  0.726          1.62
18 mu_1       0.9      1.05         1     0.175          2.38
19 mu_0       0.1      0.935        0.632 0.0000586     13.9 
20 mu_0       0.2      1.06         0.856 0.00671       13.7 
21 mu_0       0.3      1.01         0.934 0.0715         6.65
22 mu_0       0.4      0.970        0.961 0.277          2.60
23 mu_0       0.5      0.976        0.985 0.575          1.42
24 mu_0       0.6      0.996        1     0.635          1.34
25 mu_0       0.7      1.01         1.01  0.561          1.37
26 mu_0       0.8      1.02         1.00  0.588          1.33
27 mu_0       0.9      1.03         1.01  0.440          1.94
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      91.6    0.0000560   1.80e-13   6249.  
 2 mu         0.2      37.9    0.00417     9.31e- 9   2136.  
 3 mu         0.3      10.8    0.0502      4.68e- 6    432.  
 4 mu         0.4       3.12   0.276       3.43e- 4     58.7 
 5 mu         0.5       1.45   0.919       6.35e- 3     13.0 
 6 mu         0.6       1.20   1.07        4.67e- 2      4.71
 7 mu         0.7       1.26   1.16        2.05e- 3      3.13
 8 mu         0.8       1.26   1.12        7.96e- 6      4.14
 9 mu         0.9       1.19   0.221       2.73e-10     15.1 
10 mu_1       0.1      59.0    0.000368    0          3906.  
11 mu_1       0.2      15.1    0.00926     0           667.  
12 mu_1       0.3       4.19   0.0917      0           131.  
13 mu_1       0.4       1.73   0.470       0            17.9 
14 mu_1       0.5       1.20   1.04        0             7.79
15 mu_1       0.6       1.19   1.08        0             3.25
16 mu_1       0.7       1.28   1.25        0             3.30
17 mu_1       0.8       1.27   0.976       0             5.18
18 mu_1       0.9       1.20   0.147       0            16.8 
19 mu_0       0.1      95.2    0.00000709  0          6509.  
20 mu_0       0.2      43.6    0.00144     0          2503.  
21 mu_0       0.3      13.7    0.0175      0           579.  
22 mu_0       0.4       4.05   0.153       0            89.2 
23 mu_0       0.5       1.69   0.601       0            18.2 
24 mu_0       0.6       1.22   1.00        0             8.23
25 mu_0       0.7       1.21   1.10        0             3.44
26 mu_0       0.8       1.22   1.24        0             3.52
27 mu_0       0.9       1.09   0.395       0             5.38
[1] "Total run time was 93.069 seconds"
