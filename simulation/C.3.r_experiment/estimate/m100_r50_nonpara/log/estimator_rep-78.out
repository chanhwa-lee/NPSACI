
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  7  5  7  6  7  6  6  8  6  3  8  5  8  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03744 0.34034 0.59747 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
747 522 
[1] "treatment indicator table: "

  0   1 
479 790 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 315.16 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.614 0.153 
 2 mu         0.1   0.2 0.672 0.128 
 3 mu         0.1   0.3 0.682 0.121 
 4 mu         0.1   0.4 0.702 0.116 
 5 mu         0.1   0.5 0.728 0.122 
 6 mu         0.2   0.1 0.563 0.113 
 7 mu         0.2   0.2 0.645 0.100 
 8 mu         0.2   0.3 0.663 0.0942
 9 mu         0.2   0.4 0.689 0.0902
10 mu         0.2   0.5 0.729 0.0934
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17         0.645 0.0000936     10.2 
 2 mu         0.2      1.25         0.918 0.0111         6.70
 3 mu         0.3      1.13         1.01  0.117          4.01
 4 mu         0.4      1.04         1.00  0.428          1.93
 5 mu         0.5      1.00         1.00  0.736          1.45
 6 mu         0.6      1.01         1.00  0.756          1.22
 7 mu         0.7      1.00         1     0.761          1.40
 8 mu         0.8      0.993        0.979 0.309          1.73
 9 mu         0.9      0.977        0.947 0.0305         2.41
10 mu_1       0.1      1.40         0.833 0.000417      11.4 
11 mu_1       0.2      1.22         1.01  0.0259         5.65
12 mu_1       0.3      1.08         1.02  0.191          2.63
13 mu_1       0.4      1.01         1     0.555          1.70
14 mu_1       0.5      1.00         1.00  0.708          1.35
15 mu_1       0.6      1.01         1.00  0.783          1.26
16 mu_1       0.7      1.00         1     0.733          1.45
17 mu_1       0.8      0.991        0.979 0.255          1.78
18 mu_1       0.9      0.976        0.934 0.0242         2.56
19 mu_0       0.1      1.14         0.565 0.0000577     10.1 
20 mu_0       0.2      1.26         0.905 0.00740        7.11
21 mu_0       0.3      1.16         1.00  0.0852         4.60
22 mu_0       0.4      1.05         1.00  0.343          2.32
23 mu_0       0.5      1.01         1     0.692          1.55
24 mu_0       0.6      1.00         1.00  0.716          1.22
25 mu_0       0.7      1.01         1     0.780          1.28
26 mu_0       0.8      1.00         0.998 0.523          1.54
27 mu_0       0.9      0.982        0.960 0.0874         2.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.34    0.0000784  1.52e-13    352.  
 2 mu         0.2       6.59    0.0102     1.40e- 8    380.  
 3 mu         0.3       3.50    0.108      9.21e- 6    133.  
 4 mu         0.4       1.82    0.483      5.30e- 4     22.9 
 5 mu         0.5       1.33    1.06       1.00e- 2      4.76
 6 mu         0.6       1.31    1.14       7.83e- 2      6.15
 7 mu         0.7       1.42    1.22       9.34e- 4      9.97
 8 mu         0.8       1.58    0.775      1.42e- 6      9.73
 9 mu         0.9       1.63    0.0825     1.54e-11     21.3 
10 mu_1       0.1       8.68    0.000428   1.29e-12    528.  
11 mu_1       0.2       5.15    0.0300     5.93e- 8    285.  
12 mu_1       0.3       2.36    0.241      2.61e- 5     66.3 
13 mu_1       0.4       1.44    0.781      1.24e- 3      9.77
14 mu_1       0.5       1.27    1.10       1.87e- 2      4.81
15 mu_1       0.6       1.33    1.12       1.96e- 2      6.48
16 mu_1       0.7       1.46    1.26       2.00e- 4     10.7 
17 mu_1       0.8       1.62    0.654      2.65e- 7     10.4 
18 mu_1       0.9       1.64    0.0558     2.56e-12     23.7 
19 mu_0       0.1       6.08    0.0000295  0           332.  
20 mu_0       0.2       6.95    0.00503    0           404.  
21 mu_0       0.3       3.99    0.0557     0           161.  
22 mu_0       0.4       2.07    0.295      0            32.4 
23 mu_0       0.5       1.39    0.847      0             8.46
24 mu_0       0.6       1.27    1.09       0             5.67
25 mu_0       0.7       1.33    1.21       0             8.31
26 mu_0       0.8       1.43    1.18       0            12.2 
27 mu_0       0.9       1.54    0.232      0            11.7 
[1] "Total run time was 321.942 seconds"
