
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1224"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  6  6  7  4  9  5  8  8  7  6  7  8  8  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02846 0.38275 0.60985 1.00000 4.33001 
[1] "event indicator table: "

  0   1 
773 451 
[1] "treatment indicator table: "

  0   1 
430 794 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 642
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 84.365 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.370 0.0747
 2 mu         0.1   0.2 0.449 0.111 
 3 mu         0.1   0.3 0.442 0.0902
 4 mu         0.1   0.4 0.435 0.0783
 5 mu         0.1   0.5 0.527 0.135 
 6 mu         0.2   0.1 0.382 0.0509
 7 mu         0.2   0.2 0.467 0.0810
 8 mu         0.2   0.3 0.470 0.0627
 9 mu         0.2   0.4 0.481 0.0509
10 mu         0.2   0.5 0.562 0.0992
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.706        0.261 0.0000000877      7.85
 2 mu         0.2      0.870        0.770 0.0000954         3.82
 3 mu         0.3      0.951        0.915 0.00406           3.23
 4 mu         0.4      0.995        0.969 0.0433            2.25
 5 mu         0.5      1.01         1.01  0.203             1.56
 6 mu         0.6      1.01         1.00  0.531             1.33
 7 mu         0.7      1.00         1     0.583             1.27
 8 mu         0.8      1.01         1     0.539             1.50
 9 mu         0.9      1.01         0.992 0.407             1.83
10 mu_1       0.1      0.862        0.581 0.000000544       5.78
11 mu_1       0.2      0.942        0.879 0.000300          3.44
12 mu_1       0.3      0.983        0.951 0.00867           3.03
13 mu_1       0.4      1.01         1     0.0706            1.84
14 mu_1       0.5      1.01         1.02  0.272             1.44
15 mu_1       0.6      1.01         1.00  0.616             1.31
16 mu_1       0.7      1.00         0.999 0.538             1.30
17 mu_1       0.8      1.01         1     0.559             1.56
18 mu_1       0.9      1.01         0.997 0.371             1.83
19 mu_0       0.1      0.689        0.227 0.0000000370      8.08
20 mu_0       0.2      0.852        0.697 0.0000442         3.95
21 mu_0       0.3      0.937        0.890 0.00209           3.31
22 mu_0       0.4      0.986        0.952 0.0250            2.53
23 mu_0       0.5      1.01         1.00  0.134             1.67
24 mu_0       0.6      1.02         1.02  0.404             1.38
25 mu_0       0.7      1.01         1.00  0.690             1.27
26 mu_0       0.8      1.00         1     0.460             1.41
27 mu_0       0.9      1.02         0.999 0.573             1.85
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.35    0.0000214   1.63e-14    158.  
 2 mu         0.2      1.32    0.00335     9.49e-10     48.8 
 3 mu         0.3      0.995   0.0383      5.45e- 7     13.1 
 4 mu         0.4      0.981   0.176       4.66e- 5      7.81
 5 mu         0.5      1.03    0.481       1.38e- 3      9.40
 6 mu         0.6      1.03    0.850       2.04e- 2      5.21
 7 mu         0.7      1.08    0.938       1.22e- 3      5.26
 8 mu         0.8      1.21    0.867       7.15e- 6     11.7 
 9 mu         0.9      1.29    0.188       6.99e-10     16.8 
10 mu_1       0.1      0.746   0.000104    0            42.0 
11 mu_1       0.2      0.736   0.00759     0            14.6 
12 mu_1       0.3      0.837   0.0845      0             8.91
13 mu_1       0.4      0.976   0.277       0             9.25
14 mu_1       0.5      1.05    0.645       0             8.90
15 mu_1       0.6      1.07    0.985       0             4.11
16 mu_1       0.7      1.13    0.975       0             6.77
17 mu_1       0.8      1.25    0.787       0            13.1 
18 mu_1       0.9      1.30    0.147       0            16.8 
19 mu_0       0.1      2.53    0.00000422  0           176.  
20 mu_0       0.2      1.46    0.00112     0            61.0 
21 mu_0       0.3      1.06    0.0137      0            18.3 
22 mu_0       0.4      0.984   0.0861      0             7.87
23 mu_0       0.5      1.01    0.338       0             9.89
24 mu_0       0.6      0.985   0.644       0             6.85
25 mu_0       0.7      0.958   0.845       0             2.75
26 mu_0       0.8      1.05    0.836       0             5.83
27 mu_0       0.9      1.26    0.220       0            16.8 
[1] "Total run time was 87.593 seconds"
