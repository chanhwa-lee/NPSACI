
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1275"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  6  5  8  3  3 11  8 14  5  5  7  5  7  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02696 0.34582 0.62010 1.00000 5.18219 
[1] "event indicator table: "

  0   1 
777 498 
[1] "treatment indicator table: "

  0   1 
493 782 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 79.882 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.304 0.0980
 2 mu         0.1   0.2 0.271 0.0656
 3 mu         0.1   0.3 0.292 0.0605
 4 mu         0.1   0.4 0.282 0.0411
 5 mu         0.1   0.5 0.262 0.0403
 6 mu         0.2   0.1 0.267 0.0495
 7 mu         0.2   0.2 0.254 0.0379
 8 mu         0.2   0.3 0.290 0.0513
 9 mu         0.2   0.4 0.311 0.0339
10 mu         0.2   0.5 0.310 0.0362
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.523        0.261 0.000000133       2.62
 2 mu         0.2      0.625        0.670 0.000228          1.88
 3 mu         0.3      0.702        0.831 0.00793           1.38
 4 mu         0.4      0.803        0.908 0.0619            1.40
 5 mu         0.5      0.911        0.950 0.242             1.66
 6 mu         0.6      0.993        0.993 0.577             1.66
 7 mu         0.7      1.02         1.02  0.161             1.80
 8 mu         0.8      1.01         1.03  0.0125            1.89
 9 mu         0.9      0.954        1     0.0000651         2.03
10 mu_1       0.1      0.628        0.497 0.000000799       2.47
11 mu_1       0.2      0.672        0.771 0.000692          1.74
12 mu_1       0.3      0.754        0.869 0.0172            1.40
13 mu_1       0.4      0.857        0.920 0.103             1.68
14 mu_1       0.5      0.951        0.970 0.331             1.78
15 mu_1       0.6      1.01         1     0.500             1.75
16 mu_1       0.7      1.02         1.01  0.114             1.83
17 mu_1       0.8      1.00         1.03  0.00795           1.99
18 mu_1       0.9      0.947        1     0.0000374         2.03
19 mu_0       0.1      0.511        0.232 0.0000000585      2.64
20 mu_0       0.2      0.613        0.626 0.000112          2.00
21 mu_0       0.3      0.680        0.809 0.00394           1.44
22 mu_0       0.4      0.767        0.882 0.0344            1.41
23 mu_0       0.5      0.871        0.926 0.154             1.54
24 mu_0       0.6      0.965        0.966 0.426             1.79
25 mu_0       0.7      1.02         1     0.269             1.74
26 mu_0       0.8      1.02         1.00  0.0308            2.00
27 mu_0       0.9      1.01         1.02  0.000314          2.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    2249.      0.0000857  7.40e-15  222924. 
 2 mu         0.2   12232.      0.0113     4.85e-10 1219040. 
 3 mu         0.3   12537.      0.104      3.18e- 7 1249094. 
 4 mu         0.4    5249.      0.463      3.18e- 5  521299. 
 5 mu         0.5    1053.      0.973      1.13e- 3  103257. 
 6 mu         0.6      99.2     1.12       1.70e- 2    9040. 
 7 mu         0.7       6.61    1.23       3.60e- 4     261. 
 8 mu         0.8       3.74    0.989      1.23e- 6     123. 
 9 mu         0.9       6.15    0.111      5.34e-11     355. 
10 mu_1       0.1    5622.      0.000481   0         557309. 
11 mu_1       0.2   15292.      0.0305     0        1523801. 
12 mu_1       0.3   10451.      0.213      0        1040912. 
13 mu_1       0.4    3283.      0.720      0         325812. 
14 mu_1       0.5     528.      1.08       0          51628. 
15 mu_1       0.6      42.9     0.976      0           3767. 
16 mu_1       0.7       4.20    1.19       0             93.3
17 mu_1       0.8       3.99    0.664      0            154. 
18 mu_1       0.9       6.56    0.0638     0            395. 
19 mu_0       0.1    1874.      0.0000408  0         185770. 
20 mu_0       0.2   11467.      0.00564    0        1142850. 
21 mu_0       0.3   13431.      0.0535     0        1338315. 
22 mu_0       0.4    6559.      0.315      0         651624. 
23 mu_0       0.5    1577.      0.742      0         154885. 
24 mu_0       0.6     184.      1.11       0          16950. 
25 mu_0       0.7      12.3     1.04       0            653. 
26 mu_0       0.8       2.77    0.828      0             52.9
27 mu_0       0.9       2.47    0.147      0             67.5
[1] "Total run time was 82.817 seconds"
