
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1197"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8 12  6  5  5  5  7  8  4  4  5 10  3  6  7  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0371  0.3755  0.6219  1.0000  4.0000 
[1] "event indicator table: "

  0   1 
700 497 
[1] "treatment indicator table: "

  0   1 
405 792 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 604
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 101.78 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.281 0.173
 2 mu         0.1   0.2 0.353 0.198
 3 mu         0.1   0.3 0.313 0.217
 4 mu         0.1   0.4 0.428 0.215
 5 mu         0.1   0.5 0.432 0.262
 6 mu         0.2   0.1 0.164 0.103
 7 mu         0.2   0.2 0.258 0.118
 8 mu         0.2   0.3 0.232 0.156
 9 mu         0.2   0.4 0.322 0.115
10 mu         0.2   0.5 0.333 0.144
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.602       0.0486 0.000000284     22.2 
 2 mu         0.2      0.666       0.320  0.000170         8.06
 3 mu         0.3      0.780       0.633  0.00539          5.60
 4 mu         0.4      0.884       0.836  0.0486           3.83
 5 mu         0.5      0.949       0.969  0.208            2.13
 6 mu         0.6      0.990       0.994  0.527            1.94
 7 mu         0.7      1.02        1.00   0.479            3.08
 8 mu         0.8      1.04        1.00   0.123            3.24
 9 mu         0.9      1.04        1      0.00499          6.11
10 mu_1       0.1      0.721       0.167  0.00000180      14.0 
11 mu_1       0.2      0.741       0.554  0.000547         6.62
12 mu_1       0.3      0.837       0.812  0.0117           4.94
13 mu_1       0.4      0.914       0.923  0.0810           2.83
14 mu_1       0.5      0.964       0.989  0.285            1.68
15 mu_1       0.6      1.00        1      0.619            2.22
16 mu_1       0.7      1.03        1.00   0.405            3.28
17 mu_1       0.8      1.04        1.00   0.0940           3.46
18 mu_1       0.9      1.04        1      0.00349          6.28
19 mu_0       0.1      0.589       0.0366 0.000000115     23.1 
20 mu_0       0.2      0.647       0.267  0.0000758        9.25
21 mu_0       0.3      0.756       0.536  0.00266          6.72
22 mu_0       0.4      0.864       0.774  0.0270           4.50
23 mu_0       0.5      0.934       0.941  0.132            2.66
24 mu_0       0.6      0.975       0.988  0.388            1.54
25 mu_0       0.7      1.00        0.996  0.652            2.62
26 mu_0       0.8      1.02        1      0.237            3.75
27 mu_0       0.9      1.04        1      0.0185           4.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      14.3    0.0000607   3.03e-16     866. 
 2 mu         0.2      26.7    0.00396     7.94e-11    1238. 
 3 mu         0.3      24.3    0.0425      1.17e- 7    1104. 
 4 mu         0.4      12.2    0.250       2.08e- 5     470. 
 5 mu         0.5       4.52   0.729       1.16e- 3     113. 
 6 mu         0.6       7.10   1.14        3.08e- 2     505. 
 7 mu         0.7      54.2    1.07        1.46e- 2    5099. 
 8 mu         0.8     386.     0.639       2.21e- 4   37792. 
 9 mu         0.9    2234.     0.113       1.36e- 7  221148. 
10 mu_1       0.1      21.3    0.000363    3.03e-15     842. 
11 mu_1       0.2      29.0    0.0146      3.97e-10    1456. 
12 mu_1       0.3      19.6    0.0942      3.91e- 7     866. 
13 mu_1       0.4       8.07   0.433       5.20e- 5     277. 
14 mu_1       0.5       3.47   0.906       2.31e- 3      65.6
15 mu_1       0.6      10.5    1.17        5.13e- 2     842. 
16 mu_1       0.7      76.8    1.05        3.21e- 3    7285. 
17 mu_1       0.8     482.     0.492       4.25e- 5   47239. 
18 mu_1       0.9    2482.     0.0832      2.33e- 8  245720. 
19 mu_0       0.1      13.5    0.00000909  0            875. 
20 mu_0       0.2      26.1    0.00109     0           1183. 
21 mu_0       0.3      26.2    0.0205      0           1206. 
22 mu_0       0.4      14.9    0.128       0            600. 
23 mu_0       0.5       5.56   0.470       0            164. 
24 mu_0       0.6       2.07   0.938       0             27.9
25 mu_0       0.7       1.60   1.11        0             37.3
26 mu_0       0.8       2.34   0.915       0            108. 
27 mu_0       0.9       3.90   0.212       0            140. 
[1] "Total run time was 105.041 seconds"
