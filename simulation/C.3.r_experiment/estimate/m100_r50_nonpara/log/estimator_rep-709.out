
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1316"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  9  4  1  5  9  6  8  3  4  4 13  5  7 10  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0232  0.3158  0.5926  0.9895  4.8591 
[1] "event indicator table: "

  0   1 
772 544 
[1] "treatment indicator table: "

  0   1 
477 839 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 127.56 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.163 0.0735
 2 mu         0.1   0.2 0.328 0.104 
 3 mu         0.1   0.3 0.376 0.101 
 4 mu         0.1   0.4 0.342 0.0909
 5 mu         0.1   0.5 0.476 0.134 
 6 mu         0.2   0.1 0.201 0.0603
 7 mu         0.2   0.2 0.417 0.115 
 8 mu         0.2   0.3 0.463 0.109 
 9 mu         0.2   0.4 0.443 0.0943
10 mu         0.2   0.5 0.508 0.115 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.507       0.0435 0.000000154       6.95
 2 mu         0.2      0.709       0.309  0.000177          5.89
 3 mu         0.3      0.865       0.713  0.00545           6.77
 4 mu         0.4      0.940       0.944  0.0480            4.89
 5 mu         0.5      0.972       0.973  0.202             2.75
 6 mu         0.6      0.998       0.993  0.506             1.53
 7 mu         0.7      1.02        1      0.436             3.34
 8 mu         0.8      1.06        0.977  0.101             8.52
 9 mu         0.9      1.08        0.848  0.00287          11.0 
10 mu_1       0.1      0.717       0.137  0.000000931       6.40
11 mu_1       0.2      0.821       0.555  0.000568          7.77
12 mu_1       0.3      0.913       0.833  0.0118            6.24
13 mu_1       0.4      0.949       0.974  0.0796            3.71
14 mu_1       0.5      0.974       0.981  0.275             2.03
15 mu_1       0.6      1.00        0.993  0.594             1.59
16 mu_1       0.7      1.03        1      0.358             4.00
17 mu_1       0.8      1.06        0.973  0.0779            9.29
18 mu_1       0.9      1.08        0.819  0.00204          10.6 
19 mu_0       0.1      0.484       0.0329 0.0000000682      7.05
20 mu_0       0.2      0.680       0.253  0.0000798         5.42
21 mu_0       0.3      0.844       0.644  0.00272           6.99
22 mu_0       0.4      0.935       0.896  0.0269            5.68
23 mu_0       0.5      0.969       0.969  0.129             3.47
24 mu_0       0.6      0.992       0.993  0.371             1.91
25 mu_0       0.7      1.01        1.00   0.572             1.81
26 mu_0       0.8      1.03        1      0.189             5.47
27 mu_0       0.9      1.07        0.964  0.0103           13.7 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.51    0.000110   2.48e-15     365. 
 2 mu         0.2      14.8     0.00561    2.89e-10     773. 
 3 mu         0.3      16.6     0.0657     2.49e- 7     689. 
 4 mu         0.4      11.1     0.376      2.84e- 5     342. 
 5 mu         0.5       5.44    0.825      1.05e- 3     183. 
 6 mu         0.6       3.64    1.23       1.74e- 2      99.0
 7 mu         0.7       6.83    1.04       6.58e- 4     369. 
 8 mu         0.8      13.0     0.959      5.04e- 6     618. 
 9 mu         0.9      15.0     0.149      8.77e-10     822. 
10 mu_1       0.1       7.82    0.000387   0            525. 
11 mu_1       0.2      17.3     0.0196     0            909. 
12 mu_1       0.3      15.2     0.135      0            541. 
13 mu_1       0.4       8.75    0.484      0            315. 
14 mu_1       0.5       4.21    0.985      0            135. 
15 mu_1       0.6       3.72    1.20       0            132. 
16 mu_1       0.7       7.82    1.08       0            422. 
17 mu_1       0.8      13.8     0.732      0            618. 
18 mu_1       0.9      15.1     0.0974     0            844. 
19 mu_0       0.1       7.47    0.0000213  0            406. 
20 mu_0       0.2      14.2     0.00179    0            738. 
21 mu_0       0.3      17.2     0.0242     0            753. 
22 mu_0       0.4      12.6     0.168      0            374. 
23 mu_0       0.5       6.67    0.550      0            231. 
24 mu_0       0.6       3.52    0.999      0             71.1
25 mu_0       0.7       4.54    1.04       0            246. 
26 mu_0       0.8       9.64    0.822      0            618. 
27 mu_0       0.9      14.0     0.251      0            633. 
[1] "Total run time was 132.146 seconds"
