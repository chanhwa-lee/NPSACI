
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1186"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9 11  5  9  4  6  6  5  5  6  4  7  8  2  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04518 0.35676 0.61067 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
709 477 
[1] "treatment indicator table: "

  0   1 
453 733 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 587
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 599
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 74.314 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.338 0.0919
 2 mu         0.1   0.2 0.442 0.0892
 3 mu         0.1   0.3 0.454 0.0900
 4 mu         0.1   0.4 0.461 0.0930
 5 mu         0.1   0.5 0.478 0.0966
 6 mu         0.2   0.1 0.348 0.0513
 7 mu         0.2   0.2 0.454 0.0558
 8 mu         0.2   0.3 0.472 0.0558
 9 mu         0.2   0.4 0.532 0.0743
10 mu         0.2   0.5 0.586 0.0874
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.764        0.213 0.00000466     10.4 
 2 mu         0.2      0.935        0.684 0.00120         6.31
 3 mu         0.3      0.983        0.950 0.0217          3.52
 4 mu         0.4      0.991        0.992 0.125           2.14
 5 mu         0.5      0.987        1     0.368           1.59
 6 mu         0.6      0.984        0.996 0.685           1.15
 7 mu         0.7      0.988        1     0.551           1.58
 8 mu         0.8      0.981        1     0.375           2.22
 9 mu         0.9      0.901        0.865 0.0889          3.08
10 mu_1       0.1      0.865        0.558 0.0000266       9.61
11 mu_1       0.2      0.966        0.915 0.00348         4.46
12 mu_1       0.3      0.985        1     0.0427          3.01
13 mu_1       0.4      0.988        1     0.189           1.95
14 mu_1       0.5      0.985        1     0.462           1.45
15 mu_1       0.6      0.984        0.999 0.712           1.29
16 mu_1       0.7      0.989        1     0.527           1.76
17 mu_1       0.8      0.977        1     0.336           2.38
18 mu_1       0.9      0.892        0.838 0.0758          3.20
19 mu_0       0.1      0.753        0.175 0.00000223     11.4 
20 mu_0       0.2      0.928        0.628 0.000635        6.78
21 mu_0       0.3      0.982        0.874 0.0127          3.73
22 mu_0       0.4      0.992        0.985 0.0823          2.39
23 mu_0       0.5      0.989        1     0.273           1.74
24 mu_0       0.6      0.983        1     0.572           1.22
25 mu_0       0.7      0.985        0.995 0.607           1.23
26 mu_0       0.8      0.998        1     0.475           1.56
27 mu_0       0.9      0.988        1     0.207           2.05
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.463    0.000118   2.22e-15      8.79
 2 mu         0.2      1.30     0.0139     5.17e-10     37.4 
 3 mu         0.3      2.29     0.119      6.68e- 7    112.  
 4 mu         0.4      2.58     0.423      1.02e- 4    135.  
 5 mu         0.5      2.01     0.872      4.70e- 3     83.1 
 6 mu         0.6      1.37     0.915      7.37e- 2     26.7 
 7 mu         0.7      1.23     0.959      5.05e- 3      5.91
 8 mu         0.8      1.62     0.487      3.37e- 5     22.4 
 9 mu         0.9      2.42     0.0601     3.71e- 9     51.7 
10 mu_1       0.1      1.05     0.000672   2.10e-14     15.0 
11 mu_1       0.2      1.90     0.0504     2.45e- 9     70.2 
12 mu_1       0.3      2.61     0.263      2.11e- 6    140.  
13 mu_1       0.4      2.45     0.647      2.41e- 4    126.  
14 mu_1       0.5      1.74     0.885      8.91e- 3     62.3 
15 mu_1       0.6      1.24     0.936      5.75e- 2     16.7 
16 mu_1       0.7      1.27     1.04       1.90e- 3      7.85
17 mu_1       0.8      1.73     0.377      1.11e- 5     26.0 
18 mu_1       0.9      2.50     0.0332     1.08e- 9     53.4 
19 mu_0       0.1      0.397    0.0000592  0             8.14
20 mu_0       0.2      1.15     0.00663    0            29.2 
21 mu_0       0.3      2.15     0.0578     0           100.  
22 mu_0       0.4      2.67     0.274      0           141.  
23 mu_0       0.5      2.29     0.765      0           104.  
24 mu_0       0.6      1.55     0.917      0            41.6 
25 mu_0       0.7      1.13     0.968      0             7.89
26 mu_0       0.8      1.21     0.679      0             7.99
27 mu_0       0.9      1.69     0.147      0            36.9 
[1] "Total run time was 77.383 seconds"
