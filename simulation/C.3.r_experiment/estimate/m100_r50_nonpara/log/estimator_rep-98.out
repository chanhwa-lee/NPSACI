
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1379"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  9  5  3  1  5  4  3  8 11  3  6 10  7  8 13 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01185 0.26738 0.53317 0.92834 5.00000 
[1] "event indicator table: "

  0   1 
810 569 
[1] "treatment indicator table: "

  0   1 
563 816 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 708
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 134.117 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.469 0.0747
 2 mu         0.1   0.2 0.525 0.0828
 3 mu         0.1   0.3 0.607 0.109 
 4 mu         0.1   0.4 0.633 0.112 
 5 mu         0.1   0.5 0.712 0.117 
 6 mu         0.2   0.1 0.370 0.0487
 7 mu         0.2   0.2 0.422 0.0431
 8 mu         0.2   0.3 0.474 0.0541
 9 mu         0.2   0.4 0.510 0.0533
10 mu         0.2   0.5 0.604 0.0490
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.10         0.691   0.00774     11.2 
 2 mu         0.2      0.974        0.939   0.134        2.43
 3 mu         0.3      0.959        0.969   0.402        2.03
 4 mu         0.4      0.979        0.989   0.452        1.83
 5 mu         0.5      0.998        1       0.661        1.43
 6 mu         0.6      1.00         0.996   0.803        1.28
 7 mu         0.7      0.998        1       0.754        1.21
 8 mu         0.8      1.00         1       0.645        1.57
 9 mu         0.9      0.982        0.976   0.285        2.02
10 mu_1       0.1      1.03         0.959   0.0252       4.39
11 mu_1       0.2      0.971        0.976   0.221        2.04
12 mu_1       0.3      0.969        0.960   0.471        2.03
13 mu_1       0.4      0.989        0.987   0.469        1.71
14 mu_1       0.5      1.00         0.996   0.736        1.31
15 mu_1       0.6      1.00         0.999   0.830        1.28
16 mu_1       0.7      0.999        1       0.730        1.25
17 mu_1       0.8      1.00         1       0.603        1.61
18 mu_1       0.9      0.978        0.971   0.259        2.11
19 mu_0       0.1      1.11         0.647   0.00580     12.5 
20 mu_0       0.2      0.974        0.945   0.112        2.68
21 mu_0       0.3      0.954        0.951   0.303        2.02
22 mu_0       0.4      0.973        0.979   0.441        1.91
23 mu_0       0.5      0.995        1       0.586        1.55
24 mu_0       0.6      1.00         0.984   0.751        1.29
25 mu_0       0.7      0.997        0.996   0.807        1.25
26 mu_0       0.8      0.998        1.00    0.660        1.44
27 mu_0       0.9      1.02         1       0.518        1.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.465    0.000109   3.44e-18      8.47
 2 mu         0.2      0.953    0.0116     1.81e-12     11.8 
 3 mu         0.3      1.02     0.116      4.00e- 9     12.0 
 4 mu         0.4      1.02     0.591      9.47e- 7      7.08
 5 mu         0.5      1.09     0.949      6.57e- 5      4.39
 6 mu         0.6      1.09     1.09       2.10e- 3      3.65
 7 mu         0.7      1.04     1.06       2.00e- 4      3.14
 8 mu         0.8      1.07     0.381      5.19e- 7      5.72
 9 mu         0.9      1.16     0.0270     1.27e-11     29.8 
10 mu_1       0.1      0.922    0.000616   3.44e-17     13.0 
11 mu_1       0.2      1.11     0.0381     9.03e-12     14.7 
12 mu_1       0.3      1.02     0.274      1.33e- 8      9.97
13 mu_1       0.4      1.04     0.807      2.37e- 6      4.43
14 mu_1       0.5      1.10     1.05       1.31e- 4      4.62
15 mu_1       0.6      1.08     1.19       3.50e- 3      3.20
16 mu_1       0.7      1.05     0.972      5.71e- 5      3.37
17 mu_1       0.8      1.08     0.282      1.30e- 7      7.15
18 mu_1       0.9      1.17     0.0177     2.82e-12     33.1 
19 mu_0       0.1      0.415    0.0000490  0             7.96
20 mu_0       0.2      0.913    0.00574    0            11.1 
21 mu_0       0.3      1.02     0.0631     0            12.8 
22 mu_0       0.4      1.01     0.399      0             8.85
23 mu_0       0.5      1.07     0.818      0             4.24
24 mu_0       0.6      1.09     1.05       0             4.32
25 mu_0       0.7      1.04     0.977      0             2.93
26 mu_0       0.8      1.01     0.641      0             4.59
27 mu_0       0.9      1.01     0.0613     0             7.63
[1] "Total run time was 138.695 seconds"
