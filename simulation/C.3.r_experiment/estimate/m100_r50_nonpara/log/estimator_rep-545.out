
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1252"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  8  4  6  4  6 10  9 13  5  4  2  3  4 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02912 0.38966 0.63032 1.00000 4.43769 
[1] "event indicator table: "

  0   1 
736 516 
[1] "treatment indicator table: "

  0   1 
450 802 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 655
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 246.943 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.292 0.112
 2 mu         0.1   0.2 0.326 0.107
 3 mu         0.1   0.3 0.402 0.128
 4 mu         0.1   0.4 0.433 0.146
 5 mu         0.1   0.5 0.469 0.146
 6 mu         0.2   0.1 0.393 0.161
 7 mu         0.2   0.2 0.482 0.195
 8 mu         0.2   0.3 0.615 0.251
 9 mu         0.2   0.4 0.662 0.276
10 mu         0.2   0.5 0.757 0.300
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.702       0.124  0.000000829     17.1 
 2 mu         0.2      1.25        0.578  0.000647        47.6 
 3 mu         0.3      1.28        0.917  0.0196          34.1 
 4 mu         0.4      1.13        1      0.122           12.3 
 5 mu         0.5      1.05        1.02   0.350            3.26
 6 mu         0.6      1.01        1.00   0.629            1.81
 7 mu         0.7      0.983       0.987  0.737            1.27
 8 mu         0.8      0.956       0.972  0.322            1.69
 9 mu         0.9      0.943       0.894  0.0333           2.55
10 mu_1       0.1      1.13        0.377  0.00000459      36.1 
11 mu_1       0.2      1.41        0.873  0.00181         50.7 
12 mu_1       0.3      1.24        0.987  0.0373          24.9 
13 mu_1       0.4      1.09        1      0.192            7.41
14 mu_1       0.5      1.03        1.02   0.458            2.18
15 mu_1       0.6      1.00        0.996  0.699            1.51
16 mu_1       0.7      0.975       0.985  0.684            1.37
17 mu_1       0.8      0.953       0.966  0.280            1.85
18 mu_1       0.9      0.942       0.903  0.0270           2.69
19 mu_0       0.1      0.654       0.0959 0.000000412     15.0 
20 mu_0       0.2      1.21        0.492  0.000356        46.8 
21 mu_0       0.3      1.30        0.864  0.0120          38.1 
22 mu_0       0.4      1.16        0.990  0.0750          15.5 
23 mu_0       0.5      1.07        1      0.242            4.34
24 mu_0       0.6      1.03        1.02   0.489            2.24
25 mu_0       0.7      1.00        0.987  0.742            1.58
26 mu_0       0.8      0.968       0.980  0.488            1.42
27 mu_0       0.9      0.952       0.973  0.0905           2.13
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      28.7     0.000114   2.78e-14    1601. 
 2 mu         0.2     105.      0.0113     1.82e- 9    7010. 
 3 mu         0.3     107.      0.0857     1.20e- 6    8169. 
 4 mu         0.4      57.6     0.322      1.19e- 4    4737. 
 5 mu         0.5      19.0     0.694      4.24e- 3    1557. 
 6 mu         0.6       4.30    1.01       7.83e- 2     277. 
 7 mu         0.7       1.36    0.966      1.20e- 2      21.7
 8 mu         0.8       1.36    0.578      9.15e- 5      15.4
 9 mu         0.9       1.95    0.0896     1.13e- 8      51.4
10 mu_1       0.1      69.8     0.000761   2.78e-13    4268. 
11 mu_1       0.2     131.      0.0343     9.10e- 9    9346. 
12 mu_1       0.3      91.8     0.186      3.98e- 6    7261. 
13 mu_1       0.4      38.1     0.520      2.98e- 4    3158. 
14 mu_1       0.5      10.7     0.911      8.47e- 3     830. 
15 mu_1       0.6       2.58    1.05       1.31e- 1     123. 
16 mu_1       0.7       1.24    0.976      5.14e- 3      10.4
17 mu_1       0.8       1.43    0.447      3.43e- 5      17.7
18 mu_1       0.9       2.03    0.0640     3.77e- 9      57.2
19 mu_0       0.1      24.1     0.0000414  0           1304. 
20 mu_0       0.2      98.7     0.00389    0           6426. 
21 mu_0       0.3     114.      0.0378     0           8558. 
22 mu_0       0.4      70.6     0.163      0           5790. 
23 mu_0       0.5      27.2     0.447      0           2283. 
24 mu_0       0.6       6.87    0.932      0            508. 
25 mu_0       0.7       1.63    1.04       0             53.0
26 mu_0       0.8       1.07    0.933      0             11.5
27 mu_0       0.9       1.22    0.246      0             21.3
[1] "Total run time was 253.026 seconds"
