
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1203"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9  9  4  5  6  4  9  9  4 10  3  8  5  5  5  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01738 0.29761 0.58593 1.00000 6.68577 
[1] "event indicator table: "

  0   1 
735 468 
[1] "treatment indicator table: "

  0   1 
420 783 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 573
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 73.919 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.220 0.0843
 2 mu         0.1   0.2 0.385 0.0635
 3 mu         0.1   0.3 0.465 0.0818
 4 mu         0.1   0.4 0.482 0.0923
 5 mu         0.1   0.5 0.472 0.0886
 6 mu         0.2   0.1 0.238 0.0612
 7 mu         0.2   0.2 0.370 0.0399
 8 mu         0.2   0.3 0.447 0.0545
 9 mu         0.2   0.4 0.461 0.0628
10 mu         0.2   0.5 0.466 0.0580
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.813        0.364 0.00000885      7.96
 2 mu         0.2      0.899        0.797 0.00314         4.80
 3 mu         0.3      1.01         0.954 0.0562          7.48
 4 mu         0.4      1.03         0.995 0.279           5.14
 5 mu         0.5      1.02         1     0.659           2.16
 6 mu         0.6      1.00         1.00  0.716           1.20
 7 mu         0.7      0.991        0.999 0.733           1.27
 8 mu         0.8      0.973        0.979 0.610           1.40
 9 mu         0.9      0.957        0.946 0.325           1.78
10 mu_1       0.1      0.825        0.739 0.0000447       3.39
11 mu_1       0.2      0.976        0.971 0.00801         6.87
12 mu_1       0.3      1.05         0.999 0.0977          7.40
13 mu_1       0.4      1.04         1     0.376           4.04
14 mu_1       0.5      1.01         1.01  0.674           1.62
15 mu_1       0.6      0.999        1     0.739           1.21
16 mu_1       0.7      0.985        1     0.731           1.30
17 mu_1       0.8      0.969        0.971 0.558           1.42
18 mu_1       0.9      0.955        0.953 0.299           1.88
19 mu_0       0.1      0.812        0.321 0.00000487      8.79
20 mu_0       0.2      0.879        0.723 0.00192         4.28
21 mu_0       0.3      0.988        0.925 0.0384          7.51
22 mu_0       0.4      1.03         0.990 0.213           5.87
23 mu_0       0.5      1.02         1     0.561           2.70
24 mu_0       0.6      1.01         1.01  0.681           1.24
25 mu_0       0.7      1.00         1     0.736           1.23
26 mu_0       0.8      0.988        1     0.742           1.33
27 mu_0       0.9      0.972        1     0.440           1.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.50    0.0000833  2.49e-16    296.  
 2 mu         0.2       2.71    0.00886    5.80e-11    162.  
 3 mu         0.3       1.67    0.0895     7.50e- 8     56.0 
 4 mu         0.4       1.14    0.358      1.14e- 5     13.7 
 5 mu         0.5       1.02    0.820      5.27e- 4      5.48
 6 mu         0.6       1.04    0.965      1.12e- 2      3.79
 7 mu         0.7       1.12    1.16       6.74e- 4      2.83
 8 mu         0.8       1.33    0.886      2.30e- 6      4.80
 9 mu         0.9       1.56    0.131      9.98e-11     18.3 
10 mu_1       0.1       3.57    0.000654   2.36e-15    247.  
11 mu_1       0.2       1.98    0.0302     2.75e-10     67.6 
12 mu_1       0.3       1.28    0.191      2.37e- 7     15.7 
13 mu_1       0.4       1.03    0.611      2.70e- 5      5.72
14 mu_1       0.5       1.01    0.915      9.99e- 4      5.48
15 mu_1       0.6       1.05    1.00       8.82e- 3      3.51
16 mu_1       0.7       1.15    1.15       1.60e- 4      2.65
17 mu_1       0.8       1.37    0.701      4.79e- 7      5.29
18 mu_1       0.9       1.57    0.0985     1.85e-11     20.4 
19 mu_0       0.1       3.49    0.0000348  0           302.  
20 mu_0       0.2       2.89    0.00306    0           186.  
21 mu_0       0.3       1.84    0.0358     0            73.3 
22 mu_0       0.4       1.22    0.178      0            20.9 
23 mu_0       0.5       1.03    0.523      0             5.48
24 mu_0       0.6       1.03    0.723      0             4.74
25 mu_0       0.7       1.06    1.02       0             3.47
26 mu_0       0.8       1.19    1.09       0             3.13
27 mu_0       0.9       1.51    0.319      0             8.26
[1] "Total run time was 77.066 seconds"
