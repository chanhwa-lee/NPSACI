
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1330"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  5  5  8  5  8  4  5  3  8  8  8  5  2  8 14 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01908 0.27501 0.56887 0.97107 5.85072 
[1] "event indicator table: "

  0   1 
816 514 
[1] "treatment indicator table: "

  0   1 
485 845 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 660
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 670
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 109.107 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.435 0.141 
 2 mu         0.1   0.2 0.495 0.149 
 3 mu         0.1   0.3 0.570 0.157 
 4 mu         0.1   0.4 0.646 0.144 
 5 mu         0.1   0.5 0.648 0.153 
 6 mu         0.2   0.1 0.370 0.100 
 7 mu         0.2   0.2 0.444 0.0971
 8 mu         0.2   0.3 0.549 0.0668
 9 mu         0.2   0.4 0.628 0.0505
10 mu         0.2   0.5 0.636 0.0521
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         0.372   0.00180     23.1 
 2 mu         0.2      1.02         0.930   0.0466       5.11
 3 mu         0.3      1.03         1.00    0.200        2.19
 4 mu         0.4      1.02         1       0.408        1.68
 5 mu         0.5      1.00         0.997   0.577        1.43
 6 mu         0.6      0.991        0.985   0.712        1.27
 7 mu         0.7      0.992        0.990   0.767        1.18
 8 mu         0.8      1.00         1.00    0.627        1.47
 9 mu         0.9      1.01         1.00    0.383        1.83
10 mu_1       0.1      0.935        0.713   0.00774      4.07
11 mu_1       0.2      1.02         1.01    0.101        2.84
12 mu_1       0.3      1.03         1.01    0.300        1.74
13 mu_1       0.4      1.01         1       0.492        1.70
14 mu_1       0.5      0.995        0.990   0.628        1.32
15 mu_1       0.6      0.990        0.999   0.751        1.25
16 mu_1       0.7      0.993        0.991   0.737        1.21
17 mu_1       0.8      1.00         1.01    0.609        1.50
18 mu_1       0.9      1.01         1       0.364        1.93
19 mu_0       0.1      1.01         0.325   0.00114     25.6 
20 mu_0       0.2      1.02         0.903   0.0329       6.33
21 mu_0       0.3      1.03         1       0.157        2.38
22 mu_0       0.4      1.02         1       0.352        1.66
23 mu_0       0.5      1.00         1       0.526        1.54
24 mu_0       0.6      0.994        0.991   0.653        1.30
25 mu_0       0.7      0.990        0.990   0.776        1.19
26 mu_0       0.8      0.995        1.00    0.649        1.36
27 mu_0       0.9      1.01         1       0.550        1.70
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.19    0.0000211   4.95e-17    153.  
 2 mu         0.2      5.31    0.00317     2.31e-11    192.  
 3 mu         0.3      3.10    0.0380      4.47e- 8    131.  
 4 mu         0.4      1.49    0.190       9.07e- 6     41.0 
 5 mu         0.5      1.00    0.604       5.24e- 4      6.49
 6 mu         0.6      1.00    0.985       1.34e- 2      3.81
 7 mu         0.7      1.11    1.07        7.31e- 4      4.19
 8 mu         0.8      1.23    0.881       3.26e- 6      5.26
 9 mu         0.9      1.34    0.166       1.79e-10     17.1 
10 mu_1       0.1      6.39    0.000127    4.70e-16    148.  
11 mu_1       0.2      4.31    0.0117      1.10e-10    202.  
12 mu_1       0.3      2.11    0.0949      1.42e- 7     91.9 
13 mu_1       0.4      1.14    0.339       2.15e- 5     21.6 
14 mu_1       0.5      0.971   0.768       9.96e- 4      3.74
15 mu_1       0.6      1.04    0.981       7.01e- 3      3.81
16 mu_1       0.7      1.15    1.17        2.22e- 4      4.49
17 mu_1       0.8      1.26    0.756       1.02e- 6      5.80
18 mu_1       0.9      1.35    0.117       4.97e-11     19.0 
19 mu_0       0.1      5.06    0.00000333  0           157.  
20 mu_0       0.2      5.56    0.000907    0           189.  
21 mu_0       0.3      3.52    0.0142      0           148.  
22 mu_0       0.4      1.72    0.107       0            53.9 
23 mu_0       0.5      1.03    0.382       0            10.3 
24 mu_0       0.6      0.952   0.753       0             3.81
25 mu_0       0.7      1.01    0.962       0             4.05
26 mu_0       0.8      1.11    1.06        0             5.14
27 mu_0       0.9      1.30    0.293       0             9.05
[1] "Total run time was 113.602 seconds"
