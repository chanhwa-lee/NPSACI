
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1219"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  8 13  2  7  5  4  7  8  5  9  6  5  8  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02106 0.32397 0.58774 0.95085 5.00000 
[1] "event indicator table: "

  0   1 
744 475 
[1] "treatment indicator table: "

  0   1 
484 735 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 79.876 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.402 0.123
 2 mu         0.1   0.2 0.468 0.141
 3 mu         0.1   0.3 0.499 0.143
 4 mu         0.1   0.4 0.517 0.144
 5 mu         0.1   0.5 0.508 0.132
 6 mu         0.2   0.1 0.415 0.100
 7 mu         0.2   0.2 0.501 0.112
 8 mu         0.2   0.3 0.548 0.117
 9 mu         0.2   0.4 0.581 0.120
10 mu         0.2   0.5 0.587 0.106
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.651        0.283  0.000398     13.5 
 2 mu         0.2      0.852        0.719  0.0312        4.10
 3 mu         0.3      0.956        0.927  0.222         3.35
 4 mu         0.4      0.999        1      0.439         1.97
 5 mu         0.5      1.01         1.01   0.678         1.45
 6 mu         0.6      1.00         1      0.822         1.26
 7 mu         0.7      0.989        0.993  0.559         1.49
 8 mu         0.8      0.991        0.970  0.227         2.45
 9 mu         0.9      1.02         0.953  0.0285        5.25
10 mu_1       0.1      0.800        0.632  0.00163       5.12
11 mu_1       0.2      0.947        0.932  0.0657        4.38
12 mu_1       0.3      0.990        0.992  0.316         2.64
13 mu_1       0.4      1.01         1      0.531         1.61
14 mu_1       0.5      1.01         1.00   0.758         1.38
15 mu_1       0.6      0.997        0.997  0.791         1.24
16 mu_1       0.7      0.986        0.996  0.496         1.63
17 mu_1       0.8      0.991        0.976  0.190         2.52
18 mu_1       0.9      1.02         0.937  0.0227        5.45
19 mu_0       0.1      0.635        0.241  0.000262     15.0 
20 mu_0       0.2      0.829        0.672  0.0226        4.79
21 mu_0       0.3      0.942        0.904  0.177         3.65
22 mu_0       0.4      0.992        0.991  0.378         2.22
23 mu_0       0.5      1.01         1.00   0.598         1.70
24 mu_0       0.6      1.01         1      0.810         1.34
25 mu_0       0.7      0.997        1      0.706         1.27
26 mu_0       0.8      0.992        1      0.373         2.16
27 mu_0       0.9      0.991        0.950  0.0815        3.45
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.68    0.000178   5.46e-15    291.  
 2 mu         0.2       2.25    0.0104     1.27e- 9     88.4 
 3 mu         0.3       1.49    0.129      1.65e- 6     46.0 
 4 mu         0.4       1.16    0.501      2.50e- 4     12.6 
 5 mu         0.5       1.07    0.821      1.16e- 2      4.42
 6 mu         0.6       1.12    1.06       1.80e- 3      3.34
 7 mu         0.7       1.40    1.02       1.58e- 5     12.0 
 8 mu         0.8       2.57    0.392      1.83e- 8     68.0 
 9 mu         0.9       6.03    0.0500     1.57e-13    224.  
10 mu_1       0.1       3.14    0.00142    5.17e-14    162.  
11 mu_1       0.2       1.87    0.0348     6.03e- 9     78.0 
12 mu_1       0.3       1.33    0.242      5.20e- 6     27.1 
13 mu_1       0.4       1.11    0.702      5.92e- 4      9.80
14 mu_1       0.5       1.07    0.970      7.40e- 3      3.23
15 mu_1       0.6       1.14    1.05       1.67e- 4      4.64
16 mu_1       0.7       1.51    0.879      1.25e- 6     16.2 
17 mu_1       0.8       2.84    0.289      1.27e- 9     80.0 
18 mu_1       0.9       6.35    0.0291     9.70e-15    234.  
19 mu_0       0.1       3.74    0.0000491  0           306.  
20 mu_0       0.2       2.35    0.00528    0            92.9 
21 mu_0       0.3       1.55    0.0752     0            54.1 
22 mu_0       0.4       1.20    0.309      0            17.3 
23 mu_0       0.5       1.08    0.671      0             6.05
24 mu_0       0.6       1.07    1.03       0             3.01
25 mu_0       0.7       1.15    1.11       0             4.88
26 mu_0       0.8       1.53    0.768      0            20.0 
27 mu_0       0.9       3.12    0.175      0           132.  
[1] "Total run time was 83.234 seconds"
