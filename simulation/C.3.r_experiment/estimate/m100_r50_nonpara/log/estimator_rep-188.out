
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1287"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  5  7  6  4  7  6  7  8  3  8  8  5  9  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02475 0.32133 0.59262 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
760 527 
[1] "treatment indicator table: "

  0   1 
502 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 647
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 479.586 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.260 0.0764
 2 mu         0.1   0.2 0.377 0.0675
 3 mu         0.1   0.3 0.508 0.133 
 4 mu         0.1   0.4 0.538 0.116 
 5 mu         0.1   0.5 0.584 0.135 
 6 mu         0.2   0.1 0.318 0.0435
 7 mu         0.2   0.2 0.410 0.0481
 8 mu         0.2   0.3 0.539 0.0989
 9 mu         0.2   0.4 0.588 0.0840
10 mu         0.2   0.5 0.640 0.0990
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.915        0.649   0.00484     13.0 
 2 mu         0.2      1.01         0.925   0.116        9.75
 3 mu         0.3      1.02         0.987   0.411        3.43
 4 mu         0.4      1.01         1.01    0.603        1.77
 5 mu         0.5      1.01         1       0.732        1.39
 6 mu         0.6      1.00         1.00    0.620        1.25
 7 mu         0.7      0.991        0.999   0.655        1.34
 8 mu         0.8      0.979        0.991   0.531        1.46
 9 mu         0.9      0.981        0.995   0.370        1.54
10 mu_1       0.1      1.07         0.878   0.0186      15.9 
11 mu_1       0.2      1.04         0.992   0.231        6.21
12 mu_1       0.3      1.02         1.02    0.486        2.04
13 mu_1       0.4      1.01         1       0.665        1.64
14 mu_1       0.5      1.01         1       0.707        1.40
15 mu_1       0.6      1.00         1       0.612        1.22
16 mu_1       0.7      0.988        0.998   0.617        1.38
17 mu_1       0.8      0.978        0.998   0.495        1.47
18 mu_1       0.9      0.982        0.995   0.363        1.58
19 mu_0       0.1      0.898        0.585   0.00331     12.7 
20 mu_0       0.2      1.01         0.892   0.0871      10.6 
21 mu_0       0.3      1.02         0.971   0.370        4.18
22 mu_0       0.4      1.02         1.02    0.562        1.86
23 mu_0       0.5      1.01         1       0.704        1.43
24 mu_0       0.6      1.01         1       0.633        1.33
25 mu_0       0.7      0.997        1       0.635        1.29
26 mu_0       0.8      0.981        0.983   0.565        1.42
27 mu_0       0.9      0.973        1       0.359        1.52
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     19.2      0.000172   5.10e-16   1712.  
 2 mu         0.2      7.58     0.0120     1.19e-10    520.  
 3 mu         0.3      2.65     0.131      1.49e- 7     92.1 
 4 mu         0.4      1.41     0.378      1.49e- 5     11.7 
 5 mu         0.5      1.09     0.873      5.30e- 4      5.30
 6 mu         0.6      0.950    0.840      9.79e- 3      3.33
 7 mu         0.7      0.914    0.857      2.78e- 4      2.88
 8 mu         0.8      1.04     0.716      4.85e- 7      4.20
 9 mu         0.9      1.47     0.0851     8.32e-12     11.7 
10 mu_1       0.1     13.1      0.00129    4.84e-15   1007.  
11 mu_1       0.2      3.73     0.0374     5.63e-10    153.  
12 mu_1       0.3      1.73     0.288      4.86e- 7     19.5 
13 mu_1       0.4      1.24     0.653      3.73e- 5      7.29
14 mu_1       0.5      1.04     1.01       1.06e- 3      3.85
15 mu_1       0.6      0.935    0.765      2.33e- 3      3.17
16 mu_1       0.7      0.925    0.774      2.34e- 5      2.94
17 mu_1       0.8      1.08     0.551      3.56e- 8      4.68
18 mu_1       0.9      1.51     0.0602     5.44e-13     12.3 
19 mu_0       0.1     19.9      0.0000518  0          1791.  
20 mu_0       0.2      8.55     0.00450    0           612.  
21 mu_0       0.3      3.05     0.0491     0           124.  
22 mu_0       0.4      1.53     0.234      0            16.4 
23 mu_0       0.5      1.13     0.717      0             6.74
24 mu_0       0.6      0.972    0.819      0             3.67
25 mu_0       0.7      0.887    0.755      0             2.99
26 mu_0       0.8      0.887    0.670      0             3.90
27 mu_0       0.9      1.10     0.0829     0             6.22
[1] "Total run time was 485.805 seconds"
