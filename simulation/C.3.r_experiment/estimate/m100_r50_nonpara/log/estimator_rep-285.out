
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1290"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  7  6  5  9  6  6  6  3  9  7  5  4 11  4  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0429  0.3592  0.6235  1.0000  4.0143 
[1] "event indicator table: "

  0   1 
789 501 
[1] "treatment indicator table: "

  0   1 
460 830 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 668
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 622
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 93.579 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.340 0.0543
 2 mu         0.1   0.2 0.427 0.0653
 3 mu         0.1   0.3 0.583 0.0865
 4 mu         0.1   0.4 0.593 0.0825
 5 mu         0.1   0.5 0.633 0.0899
 6 mu         0.2   0.1 0.335 0.0547
 7 mu         0.2   0.2 0.424 0.0598
 8 mu         0.2   0.3 0.533 0.0671
 9 mu         0.2   0.4 0.549 0.0607
10 mu         0.2   0.5 0.609 0.0845
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.995        0.567 0.0000250      7.24
 2 mu         0.2      0.989        0.965 0.00473        5.05
 3 mu         0.3      0.960        0.961 0.0617         1.92
 4 mu         0.4      0.982        0.995 0.264          1.82
 5 mu         0.5      1.00         1.00  0.609          1.41
 6 mu         0.6      1.00         1.00  0.798          1.25
 7 mu         0.7      0.991        0.994 0.794          1.21
 8 mu         0.8      0.972        0.970 0.475          1.45
 9 mu         0.9      0.978        0.998 0.258          1.76
10 mu_1       0.1      1.03         0.905 0.000116       8.53
11 mu_1       0.2      0.955        0.933 0.0113         3.10
12 mu_1       0.3      0.957        0.998 0.102          1.98
13 mu_1       0.4      0.990        1.00  0.350          1.70
14 mu_1       0.5      1.01         1.00  0.702          1.28
15 mu_1       0.6      1.00         1.00  0.818          1.25
16 mu_1       0.7      0.988        0.987 0.757          1.28
17 mu_1       0.8      0.971        0.965 0.440          1.47
18 mu_1       0.9      0.980        0.991 0.233          1.83
19 mu_0       0.1      0.991        0.517 0.0000149      7.10
20 mu_0       0.2      0.997        0.930 0.00310        5.54
21 mu_0       0.3      0.961        0.949 0.0443         2.20
22 mu_0       0.4      0.976        0.966 0.206          1.90
23 mu_0       0.5      1.00         1.00  0.434          1.57
24 mu_0       0.6      1.01         1.00  0.662          1.25
25 mu_0       0.7      0.999        0.998 0.811          1.27
26 mu_0       0.8      0.978        0.981 0.616          1.44
27 mu_0       0.9      0.951        0.940 0.341          1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.466   0.0000260   6.13e-18     11.6 
 2 mu         0.2      1.22    0.00240     3.21e-12     42.4 
 3 mu         0.3      1.45    0.0480      7.12e- 9     43.4 
 4 mu         0.4      1.30    0.330       1.68e- 6     18.1 
 5 mu         0.5      1.15    0.851       1.17e- 4      9.60
 6 mu         0.6      1.05    0.772       3.73e- 3      7.22
 7 mu         0.7      1.03    0.966       8.30e- 4      2.83
 8 mu         0.8      1.11    0.818       4.25e- 6      6.25
 9 mu         0.9      1.17    0.180       3.69e-10      8.28
10 mu_1       0.1      0.988   0.000182    6.13e-17     20.4 
11 mu_1       0.2      1.52    0.00892     1.61e-11     53.0 
12 mu_1       0.3      1.44    0.102       2.37e- 8     36.2 
13 mu_1       0.4      1.24    0.516       4.21e- 6     11.3 
14 mu_1       0.5      1.12    0.733       2.34e- 4      9.60
15 mu_1       0.6      1.04    0.871       6.22e- 3      6.01
16 mu_1       0.7      1.04    1.01        2.09e- 4      2.71
17 mu_1       0.8      1.13    0.717       9.37e- 7      6.83
18 mu_1       0.9      1.17    0.125       7.24e-11      9.20
19 mu_0       0.1      0.408   0.00000541  0            10.6 
20 mu_0       0.2      1.15    0.000981    0            39.7 
21 mu_0       0.3      1.46    0.0249      0            46.5 
22 mu_0       0.4      1.34    0.199       0            22.7 
23 mu_0       0.5      1.19    0.588       0             9.60
24 mu_0       0.6      1.08    0.697       0             9.02
25 mu_0       0.7      1.00    0.983       0             4.72
26 mu_0       0.8      1.03    0.960       0             3.90
27 mu_0       0.9      1.17    0.202       0            10.2 
[1] "Total run time was 96.581 seconds"
