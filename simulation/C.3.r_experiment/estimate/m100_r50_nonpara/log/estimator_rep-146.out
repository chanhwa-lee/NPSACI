
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1236"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 19 20 
 3  9  8  9  7  3  7  4  6  9  7  8  3  7 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02825 0.35088 0.59977 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
697 539 
[1] "treatment indicator table: "

  0   1 
456 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 605
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 137.474 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.617 0.100 
 2 mu         0.1   0.2 0.717 0.106 
 3 mu         0.1   0.3 0.807 0.141 
 4 mu         0.1   0.4 0.825 0.135 
 5 mu         0.1   0.5 0.838 0.134 
 6 mu         0.2   0.1 0.503 0.0678
 7 mu         0.2   0.2 0.585 0.0667
 8 mu         0.2   0.3 0.659 0.0995
 9 mu         0.2   0.4 0.684 0.0899
10 mu         0.2   0.5 0.697 0.0848
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.23         0.758    0.0144     11.0 
 2 mu         0.2      1.09         0.934    0.192       5.23
 3 mu         0.3      1.03         0.994    0.495       2.32
 4 mu         0.4      1.00         1        0.600       1.45
 5 mu         0.5      0.993        0.999    0.665       1.28
 6 mu         0.6      0.994        0.991    0.779       1.24
 7 mu         0.7      1.00         0.996    0.754       1.27
 8 mu         0.8      1.00         1        0.577       1.57
 9 mu         0.9      1.01         1.00     0.123       3.06
10 mu_1       0.1      1.05         0.874    0.0482      7.93
11 mu_1       0.2      1.03         0.959    0.345       3.00
12 mu_1       0.3      1.01         0.994    0.587       1.87
13 mu_1       0.4      0.996        0.992    0.593       1.32
14 mu_1       0.5      0.992        1.00     0.703       1.27
15 mu_1       0.6      0.996        0.991    0.771       1.26
16 mu_1       0.7      1.00         1        0.739       1.29
17 mu_1       0.8      1.01         1.01     0.511       1.68
18 mu_1       0.9      1.01         1        0.106       3.31
19 mu_0       0.1      1.25         0.738    0.0107     11.4 
20 mu_0       0.2      1.11         0.909    0.154       5.79
21 mu_0       0.3      1.04         0.949    0.456       2.64
22 mu_0       0.4      1.01         1        0.600       1.63
23 mu_0       0.5      0.994        1.00     0.626       1.34
24 mu_0       0.6      0.991        1.00     0.752       1.29
25 mu_0       0.7      0.993        0.993    0.781       1.28
26 mu_0       0.8      0.995        0.980    0.560       1.32
27 mu_0       0.9      1.00         1.00     0.275       1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.413    0.0000977  2.14e-17     12.3 
 2 mu         0.2      0.851    0.00825    2.24e-11     21.3 
 3 mu         0.3      1.01     0.102      7.46e- 8     12.7 
 4 mu         0.4      1.06     0.398      2.35e- 5      5.75
 5 mu         0.5      1.10     0.913      2.04e- 3      6.00
 6 mu         0.6      1.16     1.13       7.01e- 2      3.33
 7 mu         0.7      1.32     1.26       2.64e- 3      3.30
 8 mu         0.8      2.26     0.832      2.03e- 5     24.7 
 9 mu         0.9      7.90     0.0827     3.53e- 9    260.  
10 mu_1       0.1      0.820    0.000645   2.14e-16     23.1 
11 mu_1       0.2      1.03     0.0311     1.12e-10     19.9 
12 mu_1       0.3      1.06     0.233      2.49e- 7      7.91
13 mu_1       0.4      1.10     0.692      5.88e- 5      5.91
14 mu_1       0.5      1.14     0.990      4.08e- 3      5.69
15 mu_1       0.6      1.20     1.21       2.19e- 2      3.61
16 mu_1       0.7      1.40     1.20       7.08e- 4      4.29
17 mu_1       0.8      2.52     0.693      4.75e- 6     30.8 
18 mu_1       0.9      8.56     0.0599     7.35e-10    289.  
19 mu_0       0.1      0.368    0.0000373  0            11.1 
20 mu_0       0.2      0.806    0.00328    0            21.6 
21 mu_0       0.3      0.988    0.0490     0            14.7 
22 mu_0       0.4      1.04     0.236      0             6.64
23 mu_0       0.5      1.07     0.690      0             6.32
24 mu_0       0.6      1.10     1.02       0             4.38
25 mu_0       0.7      1.13     1.16       0             3.85
26 mu_0       0.8      1.21     1.07       0             5.75
27 mu_0       0.9      1.98     0.215      0            53.9 
[1] "Total run time was 141.515 seconds"
