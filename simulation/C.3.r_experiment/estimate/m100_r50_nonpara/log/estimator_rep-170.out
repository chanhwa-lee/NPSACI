
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1169"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  9  5  7 13  5  7  4  6  6  5  7  5  7  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02389 0.38578 0.62621 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
723 446 
[1] "treatment indicator table: "

  0   1 
403 766 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 563
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 148.571 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.403 0.168
 2 mu         0.1   0.2 0.465 0.197
 3 mu         0.1   0.3 0.514 0.219
 4 mu         0.1   0.4 0.516 0.226
 5 mu         0.1   0.5 0.582 0.254
 6 mu         0.2   0.1 0.378 0.117
 7 mu         0.2   0.2 0.435 0.132
 8 mu         0.2   0.3 0.485 0.140
 9 mu         0.2   0.4 0.490 0.131
10 mu         0.2   0.5 0.559 0.155
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.763       0.0538 0.00000257     39.4 
 2 mu         0.2      0.761       0.324  0.000767       18.8 
 3 mu         0.3      0.861       0.630  0.0158          8.54
 4 mu         0.4      0.945       0.905  0.102           3.83
 5 mu         0.5      0.983       1      0.329           1.90
 6 mu         0.6      0.993       0.999  0.648           1.34
 7 mu         0.7      1.00        0.995  0.823           1.48
 8 mu         0.8      1.02        1      0.431           2.34
 9 mu         0.9      1.04        0.996  0.0708          5.21
10 mu_1       0.1      0.526       0.172  0.0000149       6.35
11 mu_1       0.2      0.723       0.561  0.00227         3.08
12 mu_1       0.3      0.879       0.842  0.0319          2.36
13 mu_1       0.4      0.960       0.981  0.158           2.15
14 mu_1       0.5      0.988       1      0.422           1.52
15 mu_1       0.6      0.995       0.996  0.715           1.21
16 mu_1       0.7      1.01        0.993  0.772           1.57
17 mu_1       0.8      1.03        1      0.376           2.68
18 mu_1       0.9      1.04        0.986  0.0574          5.65
19 mu_0       0.1      0.789       0.0378 0.00000121     43.3 
20 mu_0       0.2      0.770       0.265  0.000391       22.9 
21 mu_0       0.3      0.853       0.549  0.00890        11.5 
22 mu_0       0.4      0.934       0.855  0.0645          5.53
23 mu_0       0.5      0.977       0.978  0.237           2.70
24 mu_0       0.6      0.989       0.999  0.532           1.53
25 mu_0       0.7      0.993       0.993  0.727           1.29
26 mu_0       0.8      1.00        0.993  0.654           1.77
27 mu_0       0.9      1.01        1      0.192           2.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value  max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>      <dbl>
 1 mu         0.1   69330.      0.000151   8.86e-16 6932880.  
 2 mu         0.2   21064.      0.00627    4.13e-10 2106218.  
 3 mu         0.3    3732.      0.0778     8.01e- 7  373013.  
 4 mu         0.4     424.      0.326      1.62e- 4   42220.  
 5 mu         0.5      30.0     0.778      9.39e- 3    2854.  
 6 mu         0.6       2.22    1.12       6.57e- 2      96.4 
 7 mu         0.7       1.29    1.10       1.39e- 3       5.56
 8 mu         0.8       1.99    0.792      4.75e- 6      35.4 
 9 mu         0.9       4.04    0.167      2.06e-10     133.  
10 mu_1       0.1   40784.      0.00139    8.42e-15 4078165.  
11 mu_1       0.2    6197.      0.0236     1.96e- 9  619476.  
12 mu_1       0.3     733.      0.188      2.54e- 6   73140.  
13 mu_1       0.4      63.6     0.546      3.86e- 4    6209.  
14 mu_1       0.5       4.66    1.01       1.78e- 2     336.  
15 mu_1       0.6       1.26    1.09       1.82e- 2       9.45
16 mu_1       0.7       1.31    1.06       3.32e- 4       7.40
17 mu_1       0.8       2.14    0.644      9.90e- 7      41.8 
18 mu_1       0.9       4.18    0.121      3.82e-11     140.  
19 mu_0       0.1   72502.      0.0000281  0        7250070.  
20 mu_0       0.2   24781.      0.00218    0        2477903.  
21 mu_0       0.3    5017.      0.0405     0         501529.  
22 mu_0       0.4     664.      0.181      0          66227.  
23 mu_0       0.5      55.3     0.504      0           5373.  
24 mu_0       0.6       3.66    0.953      0            227.  
25 mu_0       0.7       1.25    1.14       0              6.27
26 mu_0       0.8       1.36    1.03       0              9.83
27 mu_0       0.9       2.73    0.376      0             72.8 
[1] "Total run time was 153.433 seconds"
