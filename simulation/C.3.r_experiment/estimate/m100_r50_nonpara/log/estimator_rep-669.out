
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1269"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  5  6  5  6  4  8  2  9 16  7  7  4  2  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02413 0.30864 0.57691 0.96203 5.20410 
[1] "event indicator table: "

  0   1 
763 506 
[1] "treatment indicator table: "

  0   1 
469 800 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 644
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 167.46 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.309 0.0798
 2 mu         0.1   0.2 0.422 0.0722
 3 mu         0.1   0.3 0.537 0.0936
 4 mu         0.1   0.4 0.553 0.118 
 5 mu         0.1   0.5 0.556 0.117 
 6 mu         0.2   0.1 0.305 0.0562
 7 mu         0.2   0.2 0.420 0.0370
 8 mu         0.2   0.3 0.522 0.0516
 9 mu         0.2   0.4 0.535 0.0723
10 mu         0.2   0.5 0.550 0.0716
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.856        0.303   0.00605      8.18
 2 mu         0.2      0.924        0.791   0.0988       3.44
 3 mu         0.3      0.972        0.942   0.335        1.97
 4 mu         0.4      0.995        1.00    0.610        1.56
 5 mu         0.5      0.998        1.01    0.658        1.29
 6 mu         0.6      0.994        0.999   0.721        1.25
 7 mu         0.7      0.997        0.992   0.780        1.36
 8 mu         0.8      1.01         1       0.599        1.69
 9 mu         0.9      1.04         1       0.199        2.96
10 mu_1       0.1      0.940        0.700   0.0208       5.40
11 mu_1       0.2      0.966        0.957   0.185        2.23
12 mu_1       0.3      0.995        1.00    0.475        1.63
13 mu_1       0.4      1.00         1.01    0.578        1.34
14 mu_1       0.5      0.996        1.00    0.692        1.31
15 mu_1       0.6      0.992        0.991   0.711        1.21
16 mu_1       0.7      0.997        0.988   0.781        1.39
17 mu_1       0.8      1.02         1.00    0.556        1.80
18 mu_1       0.9      1.04         0.999   0.172        3.09
19 mu_0       0.1      0.847        0.259   0.00441      8.49
20 mu_0       0.2      0.914        0.738   0.0771       3.84
21 mu_0       0.3      0.962        0.913   0.275        2.15
22 mu_0       0.4      0.990        0.997   0.554        1.81
23 mu_0       0.5      1.00         1.00    0.620        1.41
24 mu_0       0.6      0.997        1.00    0.734        1.30
25 mu_0       0.7      0.996        0.998   0.722        1.31
26 mu_0       0.8      1.00         0.991   0.726        1.46
27 mu_0       0.9      1.02         1       0.442        2.17
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     10.3     0.0000124   4.30e-12    986.  
 2 mu         0.2      3.57    0.00191     7.00e- 8    266.  
 3 mu         0.3      1.42    0.0320      1.79e- 5     41.3 
 4 mu         0.4      1.00    0.229       8.60e- 4      7.87
 5 mu         0.5      0.970   0.627       1.63e- 2      4.20
 6 mu         0.6      1.04    0.885       4.76e- 3      3.49
 7 mu         0.7      1.16    1.17        5.34e- 5      3.71
 8 mu         0.8      1.27    0.766       6.20e- 8      7.00
 9 mu         0.9      1.19    0.174       5.32e-13     12.6 
10 mu_1       0.1      6.35    0.0000903   3.44e-11    548.  
11 mu_1       0.2      1.85    0.00773     3.27e- 7     74.0 
12 mu_1       0.3      1.11    0.0757      5.56e- 5     13.2 
13 mu_1       0.4      0.960   0.405       2.01e- 3      5.60
14 mu_1       0.5      0.980   0.823       2.51e- 2      3.05
15 mu_1       0.6      1.08    1.03        5.64e- 4      3.49
16 mu_1       0.7      1.21    1.11        4.24e- 6      3.88
17 mu_1       0.8      1.30    0.629       4.30e- 9      7.50
18 mu_1       0.9      1.18    0.138       3.28e-14     14.0 
19 mu_0       0.1     10.7     0.00000234  0          1035.  
20 mu_0       0.2      4.00    0.000543    0           314.  
21 mu_0       0.3      1.55    0.0141      0            55.7 
22 mu_0       0.4      1.03    0.107       0             9.83
23 mu_0       0.5      0.960   0.408       0             5.35
24 mu_0       0.6      0.993   0.802       0             3.49
25 mu_0       0.7      1.05    1.03        0             3.86
26 mu_0       0.8      1.14    1.08        0             5.00
27 mu_0       0.9      1.25    0.352       0            10.3 
[1] "Total run time was 172.901 seconds"
