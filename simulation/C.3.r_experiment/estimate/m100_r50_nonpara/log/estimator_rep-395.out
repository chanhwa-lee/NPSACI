
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1303"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  5  6  8  6  4  5  2  9 10  5  7  6  7  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0327  0.3373  0.5956  0.9987  4.0000 
[1] "event indicator table: "

  0   1 
751 552 
[1] "treatment indicator table: "

  0   1 
520 783 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 653
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 83.557 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.577 0.478
 2 mu         0.1   0.2 0.802 0.547
 3 mu         0.1   0.3 1.02  0.638
 4 mu         0.1   0.4 1.11  0.680
 5 mu         0.1   0.5 1.17  0.727
 6 mu         0.2   0.1 0.499 0.375
 7 mu         0.2   0.2 0.717 0.423
 8 mu         0.2   0.3 0.926 0.492
 9 mu         0.2   0.4 1.00  0.524
10 mu         0.2   0.5 1.06  0.561
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.07         0.455 0.0000364    139.  
 2 mu         0.2      1.88         0.771 0.00667      107.  
 3 mu         0.3      1.29         0.916 0.0788        38.0 
 4 mu         0.4      1.04         0.952 0.273          8.59
 5 mu         0.5      0.992        0.994 0.543          1.98
 6 mu         0.6      0.996        0.998 0.791          1.24
 7 mu         0.7      1.01         0.998 0.762          1.36
 8 mu         0.8      1.01         0.957 0.551          1.66
 9 mu         0.9      0.986        0.871 0.192          3.33
10 mu_1       0.1      2.52         0.753 0.000175     174.  
11 mu_1       0.2      1.56         0.916 0.0163        67.5 
12 mu_1       0.3      1.11         0.948 0.132         16.4 
13 mu_1       0.4      1.00         0.978 0.360          3.34
14 mu_1       0.5      0.992        0.991 0.624          1.67
15 mu_1       0.6      1.00         1.00  0.782          1.28
16 mu_1       0.7      1.01         1     0.722          1.42
17 mu_1       0.8      1.00         0.948 0.518          1.73
18 mu_1       0.9      0.984        0.865 0.170          3.57
19 mu_0       0.1      2.02         0.406 0.0000210    135.  
20 mu_0       0.2      1.96         0.714 0.00426      117.  
21 mu_0       0.3      1.37         0.899 0.0561        47.2 
22 mu_0       0.4      1.07         0.923 0.214         12.1 
23 mu_0       0.5      0.993        0.996 0.462          2.57
24 mu_0       0.6      0.990        0.999 0.663          1.31
25 mu_0       0.7      1.00         1     0.751          1.31
26 mu_0       0.8      1.01         1.00  0.683          1.47
27 mu_0       0.9      1.00         0.978 0.350          2.14
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     332.       0.000275  2.37e-13  31718.  
 2 mu         0.2     366.       0.0167    2.19e- 8  34261.  
 3 mu         0.3     136.       0.142     1.44e- 5  11946.  
 4 mu         0.4      28.3      0.435     1.21e- 3   2060.  
 5 mu         0.5       4.67     0.957     2.47e- 2    181.  
 6 mu         0.6       1.42     1.18      2.12e- 1     11.9 
 7 mu         0.7       1.18     0.953     2.83e- 2      3.09
 8 mu         0.8       1.41     0.473     1.28e- 4     10.5 
 9 mu         0.9       1.49     0.0607    1.39e- 9     19.9 
10 mu_1       0.1     501.       0.00175   2.02e-12  47576.  
11 mu_1       0.2     280.       0.0544    9.29e- 8  25696.  
12 mu_1       0.3      71.5      0.338     4.09e- 5   5973.  
13 mu_1       0.4      12.3      0.762     2.57e- 3    773.  
14 mu_1       0.5       2.42     1.21      4.59e- 2     54.4 
15 mu_1       0.6       1.20     1.08      1.87e- 1      3.95
16 mu_1       0.7       1.21     0.899     1.49e- 2      3.65
17 mu_1       0.8       1.44     0.364     2.39e- 5     11.7 
18 mu_1       0.9       1.50     0.0392    2.31e-10     22.1 
19 mu_0       0.1     313.       0.000102  0         29955.  
20 mu_0       0.2     388.       0.00777   0         36402.  
21 mu_0       0.3     164.       0.0581    0         14505.  
22 mu_0       0.4      39.0      0.245     0          2919.  
23 mu_0       0.5       6.92     0.647     0           308.  
24 mu_0       0.6       1.75     1.11      0            23.7 
25 mu_0       0.7       1.12     1.02      0             2.84
26 mu_0       0.8       1.25     0.757     0             6.47
27 mu_0       0.9       1.40     0.107     0            19.2 
[1] "Total run time was 86.965 seconds"
