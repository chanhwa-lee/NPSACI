
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 50"
[1] "m: 100"
[1] "N_total: 1246"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  6  8  6  6  4  8  7 13  4  8  4  5  3  8  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02383 0.31359 0.61643 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
723 523 
[1] "treatment indicator table: "

  0   1 
439 807 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 639
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 99.015 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.618 0.144 
 2 mu         0.1   0.2 0.732 0.162 
 3 mu         0.1   0.3 0.974 0.243 
 4 mu         0.1   0.4 0.996 0.234 
 5 mu         0.1   0.5 1.02  0.228 
 6 mu         0.2   0.1 0.460 0.0684
 7 mu         0.2   0.2 0.566 0.0797
 8 mu         0.2   0.3 0.741 0.154 
 9 mu         0.2   0.4 0.768 0.138 
10 mu         0.2   0.5 0.809 0.125 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value     min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>         <dbl>     <dbl>
 1 mu         0.1      1.30         0.395 0.0000000173      24.8 
 2 mu         0.2      1.11         0.784 0.0000378         10.3 
 3 mu         0.3      1.01         0.944 0.00238            4.27
 4 mu         0.4      1.02         0.981 0.0326             7.11
 5 mu         0.5      1.04         0.997 0.178              6.64
 6 mu         0.6      1.06         1.02  0.503              3.92
 7 mu         0.7      1.09         1     0.664              5.04
 8 mu         0.8      1.16         1.01  0.315              9.60
 9 mu         0.9      1.22         0.981 0.0356            14.4 
10 mu_1       0.1      1.26         0.731 0.000000106       16.9 
11 mu_1       0.2      0.999        0.880 0.000118           4.29
12 mu_1       0.3      0.991        0.983 0.00506            6.12
13 mu_1       0.4      1.03         1     0.0531             7.70
14 mu_1       0.5      1.05         1.00  0.238              5.89
15 mu_1       0.6      1.07         1.02  0.579              3.13
16 mu_1       0.7      1.11         1     0.606              5.77
17 mu_1       0.8      1.18         1     0.259              9.93
18 mu_1       0.9      1.24         0.968 0.0274            15.9 
19 mu_0       0.1      1.31         0.353 0.00000000743     25.7 
20 mu_0       0.2      1.14         0.746 0.0000176         11.8 
21 mu_0       0.3      1.02         0.899 0.00123            4.08
22 mu_0       0.4      1.01         0.974 0.0189             6.72
23 mu_0       0.5      1.04         0.989 0.118              7.39
24 mu_0       0.6      1.05         1.01  0.389              5.12
25 mu_0       0.7      1.05         1     0.653              3.31
26 mu_0       0.8      1.08         0.978 0.530              8.28
27 mu_0       0.9      1.09         0.960 0.109             11.3 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       2.16    0.000135   2.79e-16     155. 
 2 mu         0.2       2.36    0.0120     6.50e-11     121. 
 3 mu         0.3       2.22    0.149      8.40e- 8      62.3
 4 mu         0.4       2.10    0.508      1.28e- 5      37.6
 5 mu         0.5       2.07    1.08       5.91e- 4      50.1
 6 mu         0.6       2.44    1.11       1.02e- 2      37.6
 7 mu         0.7       6.74    1.11       5.01e- 4     341. 
 8 mu         0.8      41.6     0.855      6.62e- 6    3303. 
 9 mu         0.9     269.      0.129      1.75e- 9   24461. 
10 mu_1       0.1       2.80    0.000952   2.64e-15     172. 
11 mu_1       0.2       2.15    0.0386     3.08e-10      67.2
12 mu_1       0.3       2.02    0.311      2.65e- 7      28.8
13 mu_1       0.4       2.04    0.761      3.03e- 5      47.0
14 mu_1       0.5       2.10    1.13       1.12e- 3      50.1
15 mu_1       0.6       2.76    1.05       1.41e- 3      41.4
16 mu_1       0.7       8.72    1.06       5.97e- 5     487. 
17 mu_1       0.8      51.1     0.708      6.90e- 7    4128. 
18 mu_1       0.9     297.      0.101      3.37e-10   27179. 
19 mu_0       0.1       2.08    0.0000472  0            153. 
20 mu_0       0.2       2.41    0.00497    0            134. 
21 mu_0       0.3       2.30    0.0704     0             79.1
22 mu_0       0.4       2.14    0.317      0             35.9
23 mu_0       0.5       2.04    0.791      0             50.1
24 mu_0       0.6       1.97    1.05       0             47.0
25 mu_0       0.7       2.11    0.993      0             24.6
26 mu_0       0.8       3.87    0.976      0             71.5
27 mu_0       0.9      13.6     0.296      0            559. 
[1] "Total run time was 103.244 seconds"
