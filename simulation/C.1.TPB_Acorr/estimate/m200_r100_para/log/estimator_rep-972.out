
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: para"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2441"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
16 12 10 15  8 18 15  9 10 14 14 18  9 18  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03482 0.34678 0.59827 1.00000 4.96236 
[1] "event indicator table: "

   0    1 
1457  984 
[1] "treatment indicator table: "

   0    1 
 931 1510 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] "     Cluster: 103"
[1] "     Cluster: 106"
[1] "     Cluster: 107"
[1] "     Cluster: 109"
[1] "     Cluster: 110"
[1] "     Cluster: 111"
[1] "     Cluster: 112"
[1] "     Cluster: 117"
[1] "     Cluster: 122"
[1] "     Cluster: 123"
[1] "     Cluster: 124"
[1] "     Cluster: 125"
[1] "     Cluster: 126"
[1] "     Cluster: 127"
[1] "     Cluster: 129"
[1] "     Cluster: 133"
[1] "     Cluster: 137"
[1] "     Cluster: 138"
[1] "     Cluster: 139"
[1] "     Cluster: 142"
[1] "     Cluster: 145"
[1] "     Cluster: 146"
[1] "     Cluster: 147"
[1] "     Cluster: 149"
[1] "     Cluster: 151"
[1] "     Cluster: 154"
[1] "     Cluster: 156"
[1] "     Cluster: 158"
[1] "     Cluster: 160"
[1] "     Cluster: 163"
[1] "     Cluster: 164"
[1] "     Cluster: 165"
[1] "     Cluster: 167"
[1] "     Cluster: 168"
[1] "     Cluster: 174"
[1] "     Cluster: 176"
[1] "     Cluster: 177"
[1] "     Cluster: 178"
[1] "     Cluster: 181"
[1] "     Cluster: 182"
[1] "     Cluster: 183"
[1] "     Cluster: 185"
[1] "     Cluster: 187"
[1] "     Cluster: 191"
[1] "     Cluster: 192"
[1] "     Cluster: 193"
[1] "     Cluster: 195"
[1] "     Cluster: 198"
[1] "     Cluster: 199"
[1] "   Split: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "     Cluster: 101"
[1] "     Cluster: 102"
[1] "     Cluster: 104"
[1] "     Cluster: 105"
[1] "     Cluster: 108"
[1] "     Cluster: 113"
[1] "     Cluster: 114"
[1] "     Cluster: 115"
[1] "     Cluster: 116"
[1] "     Cluster: 118"
[1] "     Cluster: 119"
[1] "     Cluster: 120"
[1] "     Cluster: 121"
[1] "     Cluster: 128"
[1] "     Cluster: 130"
[1] "     Cluster: 131"
[1] "     Cluster: 132"
[1] "     Cluster: 134"
[1] "     Cluster: 135"
[1] "     Cluster: 136"
[1] "     Cluster: 140"
[1] "     Cluster: 141"
[1] "     Cluster: 143"
[1] "     Cluster: 144"
[1] "     Cluster: 148"
[1] "     Cluster: 150"
[1] "     Cluster: 152"
[1] "     Cluster: 153"
[1] "     Cluster: 155"
[1] "     Cluster: 157"
[1] "     Cluster: 159"
[1] "     Cluster: 161"
[1] "     Cluster: 162"
[1] "     Cluster: 166"
[1] "     Cluster: 169"
[1] "     Cluster: 170"
[1] "     Cluster: 171"
[1] "     Cluster: 172"
[1] "     Cluster: 173"
[1] "     Cluster: 175"
[1] "     Cluster: 179"
[1] "     Cluster: 180"
[1] "     Cluster: 184"
[1] "     Cluster: 186"
[1] "     Cluster: 188"
[1] "     Cluster: 189"
[1] "     Cluster: 190"
[1] "     Cluster: 194"
[1] "     Cluster: 196"
[1] "     Cluster: 197"
[1] "     Cluster: 200"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 1286.306 seconds"
Warning message:
In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  Model failed to converge with max|grad| = 0.00326304 (tol = 0.002, component 1)
[1] "Estimation result: "
# A tibble: 440 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0     0.1 0.158 0.0107
 2 mu         0     0.2 0.215 0.0127
 3 mu         0     0.3 0.258 0.0133
 4 mu         0     0.4 0.283 0.0133
 5 mu         0     0.5 0.323 0.0143
 6 mu         0.1   0.1 0.156 0.0106
 7 mu         0.1   0.2 0.213 0.0126
 8 mu         0.1   0.3 0.256 0.0132
 9 mu         0.1   0.4 0.281 0.0133
10 mu         0.1   0.5 0.321 0.0144
# ℹ 430 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 33 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0       1              1        1          1   
 2 mu         0.1     1.00           1.00     1.00       1.01
 3 mu         0.2     1.00           1        0.994      1.03
 4 mu         0.3     1.00           1        0.961      1.06
 5 mu         0.4     1.00           1        0.909      1.10
 6 mu         0.5     1.00           1        0.860      1.18
 7 mu         0.6     1.02           1        0.342      1.60
 8 mu         0.7     1.03           1       -1.03       4.05
 9 mu         0.8     0.680          1      -44.2        4.68
10 mu         0.9     0.971          1       -7.29      12.2 
11 mu         1      -0.0592         1     -289.       156.  
12 mu_1       0       1              1        1          1   
13 mu_1       0.1     1.00           1        0.999      1.02
14 mu_1       0.2     1.00           1        0.958      1.03
15 mu_1       0.3     1.00           1        0.955      1.11
16 mu_1       0.4     1.00           1        0.898      1.14
17 mu_1       0.5     1.00           1        0.817      1.20
18 mu_1       0.6     1.02           1        0.426      1.79
19 mu_1       0.7     1.02           1       -0.938      4.22
20 mu_1       0.8     0.696          1      -43.9        4.64
21 mu_1       0.9     0.978          1       -8.40      13.4 
22 mu_1       1      -0.0592         1     -289.       156.  
23 mu_0       0       1              1        1          1   
24 mu_0       0.1     1.00           1        0.953      1.00
25 mu_0       0.2     1.00           1        0.945      1.06
26 mu_0       0.3     1.00           1        0.891      1.08
27 mu_0       0.4     1.00           1        0.900      1.10
28 mu_0       0.5     1.00           1        0.899      1.13
29 mu_0       0.6     1.02           1.00     0.559      1.41
30 mu_0       0.7     1.05           1.00    -0.130      2.40
31 mu_0       0.8     0.943          1      -10.3        3.89
32 mu_0       0.9     1.05           1      -11.5       17.0 
33 mu_0       1       0.861          1      -33.6       13.7 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 33 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0        1            1         1          1   
 2 mu         0.1      1.00         1.00      0          1.05
 3 mu         0.2      0.997        1.02      0          1.22
 4 mu         0.3      1.01         1.07      0          1.50
 5 mu         0.4      0.990        1.13      0          2.11
 6 mu         0.5      1.01         1.22      0          2.24
 7 mu         0.6      1.02         1.21      0          4.32
 8 mu         0.7      1.17         0         0          8.40
 9 mu         0.8      1.38         0         0         33.9 
10 mu         0.9      1.25         0         0         33.7 
11 mu         1        2.39         0         0        156.  
12 mu_1       0        1.00         1.02      0.277      1.54
13 mu_1       0.1      1.00         1.03      0          1.60
14 mu_1       0.2      1.00         1.05      0          1.74
15 mu_1       0.3      1.01         1.10      0          2.20
16 mu_1       0.4      1.01         1.15      0          3.18
17 mu_1       0.5      1.02         1.22      0          3.18
18 mu_1       0.6      1.08         0.892     0          5.54
19 mu_1       0.7      1.25         0         0         12.1 
20 mu_1       0.8      1.35         0         0         29.1 
21 mu_1       0.9      1.31         0         0         38.4 
22 mu_1       1        2.39         0         0        156.  
23 mu_0       0        1.02         1.10      0          2.02
24 mu_0       0.1      1.02         1.11      0          2.03
25 mu_0       0.2      1.01         1.11      0          2.03
26 mu_0       0.3      1.01         1.15      0          2.04
27 mu_0       0.4      0.998        1.15      0          2.04
28 mu_0       0.5      0.992        1.18      0          1.83
29 mu_0       0.6      0.969        1.19      0          3.20
30 mu_0       0.7      1.07         0         0          4.65
31 mu_0       0.8      1.26         0         0         14.1 
32 mu_0       0.9      1.38         0         0         35.9 
33 mu_0       1        1.03         0         0         47.9 
[1] "Total run time was 1290.125 seconds"
