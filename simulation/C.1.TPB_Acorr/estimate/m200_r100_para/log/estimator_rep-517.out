
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: para"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2411"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
15  9 16 17 13 16 16  9  7 17  7 14 11 10 12 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05068 0.39733 0.63656 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1405 1006 
[1] "treatment indicator table: "

   0    1 
 835 1576 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "     Cluster: 101"
[1] "     Cluster: 105"
[1] "     Cluster: 109"
[1] "     Cluster: 112"
[1] "     Cluster: 113"
[1] "     Cluster: 114"
[1] "     Cluster: 115"
[1] "     Cluster: 116"
[1] "     Cluster: 118"
[1] "     Cluster: 122"
[1] "     Cluster: 124"
[1] "     Cluster: 125"
[1] "     Cluster: 126"
[1] "     Cluster: 127"
[1] "     Cluster: 129"
[1] "     Cluster: 130"
[1] "     Cluster: 132"
[1] "     Cluster: 133"
[1] "     Cluster: 138"
[1] "     Cluster: 139"
[1] "     Cluster: 140"
[1] "     Cluster: 144"
[1] "     Cluster: 145"
[1] "     Cluster: 146"
[1] "     Cluster: 149"
[1] "     Cluster: 156"
[1] "     Cluster: 158"
[1] "     Cluster: 159"
[1] "     Cluster: 160"
[1] "     Cluster: 162"
[1] "     Cluster: 165"
[1] "     Cluster: 167"
[1] "     Cluster: 168"
[1] "     Cluster: 171"
[1] "     Cluster: 172"
[1] "     Cluster: 173"
[1] "     Cluster: 175"
[1] "     Cluster: 176"
[1] "     Cluster: 178"
[1] "     Cluster: 179"
[1] "     Cluster: 181"
[1] "     Cluster: 182"
[1] "     Cluster: 183"
[1] "     Cluster: 184"
[1] "     Cluster: 185"
[1] "     Cluster: 186"
[1] "     Cluster: 187"
[1] "     Cluster: 189"
[1] "     Cluster: 192"
[1] "     Cluster: 194"
[1] "     Cluster: 196"
[1] "     Cluster: 197"
[1] "     Cluster: 199"
[1] "     Cluster: 200"
[1] "   Split: 2"
[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 102"
[1] "     Cluster: 103"
[1] "     Cluster: 104"
[1] "     Cluster: 106"
[1] "     Cluster: 107"
[1] "     Cluster: 108"
[1] "     Cluster: 110"
[1] "     Cluster: 111"
[1] "     Cluster: 117"
[1] "     Cluster: 119"
[1] "     Cluster: 120"
[1] "     Cluster: 121"
[1] "     Cluster: 123"
[1] "     Cluster: 128"
[1] "     Cluster: 131"
[1] "     Cluster: 134"
[1] "     Cluster: 135"
[1] "     Cluster: 136"
[1] "     Cluster: 137"
[1] "     Cluster: 141"
[1] "     Cluster: 142"
[1] "     Cluster: 143"
[1] "     Cluster: 147"
[1] "     Cluster: 148"
[1] "     Cluster: 150"
[1] "     Cluster: 151"
[1] "     Cluster: 152"
[1] "     Cluster: 153"
[1] "     Cluster: 154"
[1] "     Cluster: 155"
[1] "     Cluster: 157"
[1] "     Cluster: 161"
[1] "     Cluster: 163"
[1] "     Cluster: 164"
[1] "     Cluster: 166"
[1] "     Cluster: 169"
[1] "     Cluster: 170"
[1] "     Cluster: 174"
[1] "     Cluster: 177"
[1] "     Cluster: 180"
[1] "     Cluster: 188"
[1] "     Cluster: 190"
[1] "     Cluster: 191"
[1] "     Cluster: 193"
[1] "     Cluster: 195"
[1] "     Cluster: 198"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 1268.943 seconds"
Warning message:
In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  Model failed to converge with max|grad| = 0.00273857 (tol = 0.002, component 1)
[1] "Estimation result: "
# A tibble: 440 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0     0.1 0.152 0.0113
 2 mu         0     0.2 0.200 0.0123
 3 mu         0     0.3 0.244 0.0129
 4 mu         0     0.4 0.279 0.0133
 5 mu         0     0.5 0.317 0.0140
 6 mu         0.1   0.1 0.152 0.0114
 7 mu         0.1   0.2 0.200 0.0124
 8 mu         0.1   0.3 0.244 0.0129
 9 mu         0.1   0.4 0.279 0.0134
10 mu         0.1   0.5 0.317 0.0140
# ℹ 430 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 33 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0        1             1        1          1   
 2 mu         0.1      1.00          1.00     1.00       1.00
 3 mu         0.2      1.00          1.00     0.997      1.01
 4 mu         0.3      1.00          1        0.960      1.07
 5 mu         0.4      1.00          1        0.906      1.12
 6 mu         0.5      0.997         1        0.738      1.18
 7 mu         0.6      1.00          1        0.336      1.69
 8 mu         0.7      1.00          1       -0.370      2.33
 9 mu         0.8      1.07          1.00    -0.383      5.34
10 mu         0.9      1.28          1      -11.2       74.1 
11 mu         1        0.460         1      -72.0       23.2 
12 mu_1       0        1             1        1          1   
13 mu_1       0.1      1.00          1        0.999      1.00
14 mu_1       0.2      1.00          1        0.989      1.01
15 mu_1       0.3      1.00          1.00     0.914      1.10
16 mu_1       0.4      1.00          1        0.914      1.08
17 mu_1       0.5      0.998         1        0.732      1.18
18 mu_1       0.6      1.01          1        0.312      1.72
19 mu_1       0.7      0.997         1       -0.458      2.44
20 mu_1       0.8      1.07          1       -0.489      5.66
21 mu_1       0.9      1.26          1      -12.1       74.1 
22 mu_1       1        0.460         1      -72.0       23.2 
23 mu_0       0        1             1        1          1   
24 mu_0       0.1      1.00          1        0.999      1.00
25 mu_0       0.2      1.00          1        0.994      1.01
26 mu_0       0.3      1.00          1        0.955      1.08
27 mu_0       0.4      1.00          1        0.892      1.10
28 mu_0       0.5      0.996         1        0.835      1.11
29 mu_0       0.6      0.999         1        0.590      1.68
30 mu_0       0.7      1.00          1        0.237      1.92
31 mu_0       0.8      1.04          1       -0.518      6.42
32 mu_0       0.9      0.993         1       -9.15       5.45
33 mu_0       1        0.651         1      -48.3       16.4 
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 33 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0        1             1        1          1   
 2 mu         0.1      1.01          1.00     1          1.06
 3 mu         0.2      1.01          1.01     0          1.13
 4 mu         0.3      0.987         1.05     0          1.43
 5 mu         0.4      0.999         1.09     0          1.74
 6 mu         0.5      1.02          1.17     0          2.97
 7 mu         0.6      1.07          1.32     0          4.56
 8 mu         0.7      0.965         0        0          6.05
 9 mu         0.8      1.13          0        0         14.8 
10 mu         0.9      1.59          0        0         74.1 
11 mu         1        1.98          0        0        149.  
12 mu_1       0        1.00          1.03     0.319      1.34
13 mu_1       0.1      1.00          1.04     0.125      1.35
14 mu_1       0.2      0.998         1.05     0          1.45
15 mu_1       0.3      0.989         1.07     0          1.68
16 mu_1       0.4      1.00          1.12     0          2.05
17 mu_1       0.5      1.04          1.19     0          3.48
18 mu_1       0.6      1.02          1.13     0          4.64
19 mu_1       0.7      0.977         0        0          7.47
20 mu_1       0.8      1.15          0        0         17.5 
21 mu_1       0.9      1.62          0        0         70.2 
22 mu_1       1        1.98          0        0        149.  
23 mu_0       0        1.03          1.09     0          2.38
24 mu_0       0.1      1.04          1.10     0          2.38
25 mu_0       0.2      1.04          1.10     0          2.38
26 mu_0       0.3      1.03          1.12     0          2.40
27 mu_0       0.4      1.01          1.15     0          2.40
28 mu_0       0.5      1.02          1.15     0          2.72
29 mu_0       0.6      1.05          1.24     0          4.16
30 mu_0       0.7      1.01          1.05     0          4.75
31 mu_0       0.8      0.988         0        0         12.9 
32 mu_0       0.9      1.10          0        0         17.3 
33 mu_0       1        1.97          0        0         85.9 
[1] "Total run time was 1274.441 seconds"
