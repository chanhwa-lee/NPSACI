
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: para"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2574"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
12  3  9 13 19 14 10 20 11 13  8 11 17 11 20  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04455 0.36760 0.62470 1.00000 5.27726 
[1] "event indicator table: "

   0    1 
1565 1009 
[1] "treatment indicator table: "

   0    1 
 910 1664 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 103"
[1] "     Cluster: 105"
[1] "     Cluster: 107"
[1] "     Cluster: 108"
[1] "     Cluster: 109"
[1] "     Cluster: 110"
[1] "     Cluster: 114"
[1] "     Cluster: 116"
[1] "     Cluster: 117"
[1] "     Cluster: 120"
[1] "     Cluster: 122"
[1] "     Cluster: 123"
[1] "     Cluster: 124"
[1] "     Cluster: 125"
[1] "     Cluster: 127"
[1] "     Cluster: 129"
[1] "     Cluster: 130"
[1] "     Cluster: 131"
[1] "     Cluster: 135"
[1] "     Cluster: 137"
[1] "     Cluster: 139"
[1] "     Cluster: 141"
[1] "     Cluster: 143"
[1] "     Cluster: 144"
[1] "     Cluster: 145"
[1] "     Cluster: 146"
[1] "     Cluster: 148"
[1] "     Cluster: 154"
[1] "     Cluster: 159"
[1] "     Cluster: 160"
[1] "     Cluster: 161"
[1] "     Cluster: 163"
[1] "     Cluster: 166"
[1] "     Cluster: 167"
[1] "     Cluster: 168"
[1] "     Cluster: 169"
[1] "     Cluster: 172"
[1] "     Cluster: 175"
[1] "     Cluster: 178"
[1] "     Cluster: 180"
[1] "     Cluster: 181"
[1] "     Cluster: 183"
[1] "     Cluster: 184"
[1] "     Cluster: 185"
[1] "     Cluster: 188"
[1] "     Cluster: 189"
[1] "     Cluster: 191"
[1] "     Cluster: 192"
[1] "     Cluster: 194"
[1] "     Cluster: 195"
[1] "     Cluster: 199"
[1] "     Cluster: 200"
[1] "   Split: 2"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "     Cluster: 101"
[1] "     Cluster: 102"
[1] "     Cluster: 104"
[1] "     Cluster: 106"
[1] "     Cluster: 111"
[1] "     Cluster: 112"
[1] "     Cluster: 113"
[1] "     Cluster: 115"
[1] "     Cluster: 118"
[1] "     Cluster: 119"
[1] "     Cluster: 121"
[1] "     Cluster: 126"
[1] "     Cluster: 128"
[1] "     Cluster: 132"
[1] "     Cluster: 133"
[1] "     Cluster: 134"
[1] "     Cluster: 136"
[1] "     Cluster: 138"
[1] "     Cluster: 140"
[1] "     Cluster: 142"
[1] "     Cluster: 147"
[1] "     Cluster: 149"
[1] "     Cluster: 150"
[1] "     Cluster: 151"
[1] "     Cluster: 152"
[1] "     Cluster: 153"
[1] "     Cluster: 155"
[1] "     Cluster: 156"
[1] "     Cluster: 157"
[1] "     Cluster: 158"
[1] "     Cluster: 162"
[1] "     Cluster: 164"
[1] "     Cluster: 165"
[1] "     Cluster: 170"
[1] "     Cluster: 171"
[1] "     Cluster: 173"
[1] "     Cluster: 174"
[1] "     Cluster: 176"
[1] "     Cluster: 177"
[1] "     Cluster: 179"
[1] "     Cluster: 182"
[1] "     Cluster: 186"
[1] "     Cluster: 187"
[1] "     Cluster: 190"
[1] "     Cluster: 193"
[1] "     Cluster: 196"
[1] "     Cluster: 197"
[1] "     Cluster: 198"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 1439.594 seconds"
Warning message:
In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  Model failed to converge with max|grad| = 0.00212947 (tol = 0.002, component 1)
[1] "Estimation result: "
# A tibble: 440 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0     0.1 0.140 0.0117
 2 mu         0     0.2 0.191 0.0123
 3 mu         0     0.3 0.237 0.0126
 4 mu         0     0.4 0.276 0.0134
 5 mu         0     0.5 0.310 0.0139
 6 mu         0.1   0.1 0.136 0.0114
 7 mu         0.1   0.2 0.185 0.0116
 8 mu         0.1   0.3 0.231 0.0120
 9 mu         0.1   0.4 0.270 0.0129
10 mu         0.1   0.5 0.305 0.0135
# ℹ 430 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 33 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0        1            1        1           1   
 2 mu         0.1      1.00         1.00     1.00        1.00
 3 mu         0.2      1.00         1.00     0.977       1.02
 4 mu         0.3      1.00         1        0.977       1.08
 5 mu         0.4      1.00         1        0.939       1.08
 6 mu         0.5      1.00         1        0.895       1.16
 7 mu         0.6      0.991        1        0.567       1.26
 8 mu         0.7      0.992        1       -0.529       1.47
 9 mu         0.8      1.04         1.02    -2.51        2.45
10 mu         0.9      1.08         1       -3.87       24.4 
11 mu         1        1.09         0.971   -3.25       25.3 
12 mu_1       0        1            1        1           1   
13 mu_1       0.1      1.00         1        0.999       1.01
14 mu_1       0.2      1.00         1        0.966       1.07
15 mu_1       0.3      1.00         1        0.966       1.08
16 mu_1       0.4      1.00         1        0.938       1.08
17 mu_1       0.5      1.00         1        0.879       1.12
18 mu_1       0.6      0.992        1        0.534       1.36
19 mu_1       0.7      0.993        1       -0.764       1.42
20 mu_1       0.8      1.03         1.00    -2.39        2.65
21 mu_1       0.9      1.06         1       -3.25       21.3 
22 mu_1       1        1.09         0.971   -3.25       25.3 
23 mu_0       0        1            1        1           1   
24 mu_0       0.1      1.00         1        0.999       1.03
25 mu_0       0.2      1.00         1        0.950       1.03
26 mu_0       0.3      1.00         1        0.970       1.04
27 mu_0       0.4      1.00         1        0.928       1.06
28 mu_0       0.5      1.00         1        0.908       1.13
29 mu_0       0.6      0.995        1        0.681       1.17
30 mu_0       0.7      0.981        1.00    -0.0365      1.27
31 mu_0       0.8      1.02         1       -1.36        2.34
32 mu_0       0.9      0.994        1      -13.5         6.25
33 mu_0       1        0.836        1      -42.4         6.25
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 33 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0        1             1            1      1   
 2 mu         0.1      0.994         1.00         0      1.05
 3 mu         0.2      0.986         1.01         0      1.07
 4 mu         0.3      1.01          1.05         0      1.23
 5 mu         0.4      1.01          1.11         0      1.37
 6 mu         0.5      1.00          1.21         0      1.75
 7 mu         0.6      1.01          1.44         0      2.98
 8 mu         0.7      1.05          0            0      4.46
 9 mu         0.8      1.10          0            0      8.25
10 mu         0.9      1.10          0            0     39.8 
11 mu         1        0.604         0            0     45.9 
12 mu_1       0        1.00          1.04         0      1.34
13 mu_1       0.1      1.00          1.05         0      1.36
14 mu_1       0.2      1.00          1.06         0      1.36
15 mu_1       0.3      1.01          1.10         0      1.45
16 mu_1       0.4      1.01          1.14         0      1.70
17 mu_1       0.5      1.00          1.24         0      2.06
18 mu_1       0.6      1.02          1.22         0      3.45
19 mu_1       0.7      1.06          0            0      5.17
20 mu_1       0.8      1.07          0            0     10.2 
21 mu_1       0.9      1.07          0            0     37.7 
22 mu_1       1        0.604         0            0     45.9 
23 mu_0       0        1.02          1.08         0      2.01
24 mu_0       0.1      1.01          1.08         0      1.64
25 mu_0       0.2      1.01          1.08         0      1.65
26 mu_0       0.3      1.02          1.11         0      1.77
27 mu_0       0.4      1.03          1.12         0      1.77
28 mu_0       0.5      1.03          1.18         0      1.89
29 mu_0       0.6      1.04          1.29         0      2.35
30 mu_0       0.7      1.13          1.42         0      3.53
31 mu_0       0.8      1.08          0            0      6.35
32 mu_0       0.9      1.08          0            0     19.3 
33 mu_0       1        1.10          0            0     30.1 
[1] "Total run time was 1443.027 seconds"
