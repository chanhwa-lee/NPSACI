
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: para"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1"
[1] "r: 100"
[1] "m: 200"
[1] "N_total: 2524"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 9 17 14  7 10 19  8 13 14 13 14  8 12 18 11 13 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0270  0.3118  0.5866  1.0000  5.9539 
[1] "event indicator table: "

   0    1 
1503 1021 
[1] "treatment indicator table: "

   0    1 
1013 1511 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "     Cluster: 101"
[1] "     Cluster: 104"
[1] "     Cluster: 106"
[1] "     Cluster: 107"
[1] "     Cluster: 109"
[1] "     Cluster: 110"
[1] "     Cluster: 113"
[1] "     Cluster: 115"
[1] "     Cluster: 116"
[1] "     Cluster: 117"
[1] "     Cluster: 119"
[1] "     Cluster: 120"
[1] "     Cluster: 123"
[1] "     Cluster: 124"
[1] "     Cluster: 126"
[1] "     Cluster: 128"
[1] "     Cluster: 129"
[1] "     Cluster: 130"
[1] "     Cluster: 135"
[1] "     Cluster: 141"
[1] "     Cluster: 142"
[1] "     Cluster: 143"
[1] "     Cluster: 148"
[1] "     Cluster: 151"
[1] "     Cluster: 152"
[1] "     Cluster: 153"
[1] "     Cluster: 154"
[1] "     Cluster: 155"
[1] "     Cluster: 156"
[1] "     Cluster: 158"
[1] "     Cluster: 159"
[1] "     Cluster: 161"
[1] "     Cluster: 162"
[1] "     Cluster: 164"
[1] "     Cluster: 165"
[1] "     Cluster: 168"
[1] "     Cluster: 169"
[1] "     Cluster: 171"
[1] "     Cluster: 172"
[1] "     Cluster: 174"
[1] "     Cluster: 177"
[1] "     Cluster: 178"
[1] "     Cluster: 181"
[1] "     Cluster: 182"
[1] "     Cluster: 184"
[1] "     Cluster: 193"
[1] "     Cluster: 196"
[1] "     Cluster: 198"
[1] "     Cluster: 199"
[1] "     Cluster: 200"
[1] "   Split: 2"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 102"
[1] "     Cluster: 103"
[1] "     Cluster: 105"
[1] "     Cluster: 108"
[1] "     Cluster: 111"
[1] "     Cluster: 112"
[1] "     Cluster: 114"
[1] "     Cluster: 118"
[1] "     Cluster: 121"
[1] "     Cluster: 122"
[1] "     Cluster: 125"
[1] "     Cluster: 127"
[1] "     Cluster: 131"
[1] "     Cluster: 132"
[1] "     Cluster: 133"
[1] "     Cluster: 134"
[1] "     Cluster: 136"
[1] "     Cluster: 137"
[1] "     Cluster: 138"
[1] "     Cluster: 139"
[1] "     Cluster: 140"
[1] "     Cluster: 144"
[1] "     Cluster: 145"
[1] "     Cluster: 146"
[1] "     Cluster: 147"
[1] "     Cluster: 149"
[1] "     Cluster: 150"
[1] "     Cluster: 157"
[1] "     Cluster: 160"
[1] "     Cluster: 163"
[1] "     Cluster: 166"
[1] "     Cluster: 167"
[1] "     Cluster: 170"
[1] "     Cluster: 173"
[1] "     Cluster: 175"
[1] "     Cluster: 176"
[1] "     Cluster: 179"
[1] "     Cluster: 180"
[1] "     Cluster: 183"
[1] "     Cluster: 185"
[1] "     Cluster: 186"
[1] "     Cluster: 187"
[1] "     Cluster: 188"
[1] "     Cluster: 189"
[1] "     Cluster: 190"
[1] "     Cluster: 191"
[1] "     Cluster: 192"
[1] "     Cluster: 194"
[1] "     Cluster: 195"
[1] "     Cluster: 197"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 2303.545 seconds"
Warning message:
In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
  Model failed to converge with max|grad| = 0.00745252 (tol = 0.002, component 1)
[1] "Estimation result: "
# A tibble: 440 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0     0.1 0.154 0.0109
 2 mu         0     0.2 0.204 0.0122
 3 mu         0     0.3 0.252 0.0130
 4 mu         0     0.4 0.304 0.0136
 5 mu         0     0.5 0.339 0.0147
 6 mu         0.1   0.1 0.149 0.0105
 7 mu         0.1   0.2 0.198 0.0119
 8 mu         0.1   0.3 0.246 0.0128
 9 mu         0.1   0.4 0.297 0.0134
10 mu         0.1   0.5 0.333 0.0147
# ℹ 430 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 33 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0        1             1        1          1   
 2 mu         0.1      1.00          1.00     0.988      1.00
 3 mu         0.2      1.00          1        0.980      1.04
 4 mu         0.3      1.00          1        0.944      1.06
 5 mu         0.4      0.998         1        0.873      1.11
 6 mu         0.5      0.995         1        0.678      1.18
 7 mu         0.6      0.986         1       -0.476      1.49
 8 mu         0.7      0.980         1       -5.21       3.97
 9 mu         0.8      0.719         1      -43.2        3.97
10 mu         0.9      7.07          1        0       1000   
11 mu         1       11.3           1        0       2000   
12 mu_1       0        1             1        1          1   
13 mu_1       0.1      1.00          1        0.984      1.05
14 mu_1       0.2      1.00          1        0.979      1.07
15 mu_1       0.3      1.00          1        0.927      1.12
16 mu_1       0.4      0.996         1        0.862      1.12
17 mu_1       0.5      0.995         1        0.654      1.17
18 mu_1       0.6      0.987         1       -0.567      1.46
19 mu_1       0.7      0.984         1       -4.81       3.97
20 mu_1       0.8      0.711         1      -40.6        3.97
21 mu_1       0.9      7.05          1        0       1000   
22 mu_1       1       11.3           1        0       2000   
23 mu_0       0        1             1        1          1   
24 mu_0       0.1      1.00          1        0.944      1.04
25 mu_0       0.2      1.00          1        0.963      1.06
26 mu_0       0.3      1.00          1        0.952      1.05
27 mu_0       0.4      0.999         1        0.915      1.08
28 mu_0       0.5      0.996         1        0.812      1.15
29 mu_0       0.6      0.997         1        0.465      1.45
30 mu_0       0.7      0.984         1       -2.46       2.13
31 mu_0       0.8      0.842         1      -23.0        2.92
32 mu_0       0.9     -9.15          1    -1847.        14.6 
33 mu_0       1       11.1           1       -1.20    2000   
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 33 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0        1            1             1      1   
 2 mu         0.1      0.987        1.01          0      1.06
 3 mu         0.2      0.987        1.04          0      1.17
 4 mu         0.3      1.04         1.10          0      1.63
 5 mu         0.4      1.04         1.18          0      2.11
 6 mu         0.5      1.04         1.27          0      2.82
 7 mu         0.6      1.09         1.21          0      6.05
 8 mu         0.7      1.10         0             0     14.6 
 9 mu         0.8      1.43         0             0     58.8 
10 mu         0.9      6.71         0             0   1000   
11 mu         1       10.9          0             0   2000   
12 mu_1       0        1.01         1.04          0      1.40
13 mu_1       0.1      1.01         1.05          0      1.48
14 mu_1       0.2      1.02         1.08          0      1.51
15 mu_1       0.3      1.05         1.14          0      2.13
16 mu_1       0.4      1.04         1.22          0      2.22
17 mu_1       0.5      1.05         1.23          0      3.59
18 mu_1       0.6      1.09         0.886         0      8.14
19 mu_1       0.7      1.16         0             0     18.4 
20 mu_1       0.8      1.55         0             0     74.2 
21 mu_1       0.9      6.74         0             0    947.  
22 mu_1       1       10.9          0             0   2000   
23 mu_0       0        1.02         1.10          0      1.75
24 mu_0       0.1      1.00         1.10          0      1.75
25 mu_0       0.2      0.995        1.12          0      1.74
26 mu_0       0.3      1.03         1.19          0      1.85
27 mu_0       0.4      1.05         1.21          0      2.08
28 mu_0       0.5      1.06         1.22          0      2.20
29 mu_0       0.6      1.05         1.29          0      3.77
30 mu_0       0.7      1.06         0             0      5.85
31 mu_0       0.8      1.09         0             0     15.6 
32 mu_0       0.9      2.26         0             0    266.  
33 mu_0       1       11.5          0             0   2133.  
[1] "Total run time was 2308.58 seconds"
