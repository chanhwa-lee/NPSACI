
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04124 0.39608 0.63232 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1209  791 
[1] "treatment indicator table: "

   0    1 
 666 1334 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 191.87 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.238 0.133 
 2 mu         0.1   0.2 0.345 0.168 
 3 mu         0.1   0.3 0.446 0.189 
 4 mu         0.1   0.4 0.500 0.206 
 5 mu         0.1   0.5 0.520 0.221 
 6 mu         0.2   0.1 0.214 0.0809
 7 mu         0.2   0.2 0.316 0.0967
 8 mu         0.2   0.3 0.404 0.102 
 9 mu         0.2   0.4 0.456 0.109 
10 mu         0.2   0.5 0.479 0.118 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.25         0.127 0.0000133      37.2 
 2 mu         0.2      1.15         0.643 0.00427        18.0 
 3 mu         0.3      1.03         0.900 0.0683          4.46
 4 mu         0.4      0.997        0.967 0.297           1.79
 5 mu         0.5      1.00         0.990 0.576           1.46
 6 mu         0.6      1.00         0.990 0.717           1.33
 7 mu         0.7      0.991        0.987 0.851           1.32
 8 mu         0.8      0.988        0.994 0.655           1.36
 9 mu         0.9      1.00         0.983 0.249           2.22
10 mu_1       0.1      1.31         0.285 0.0000664      37.2 
11 mu_1       0.2      1.09         0.777 0.0107          9.17
12 mu_1       0.3      1.00         0.948 0.116           3.13
13 mu_1       0.4      0.996        0.980 0.390           1.77
14 mu_1       0.5      1.00         0.989 0.630           1.39
15 mu_1       0.6      0.999        0.995 0.740           1.32
16 mu_1       0.7      0.990        0.979 0.834           1.31
17 mu_1       0.8      0.989        0.996 0.622           1.39
18 mu_1       0.9      1.01         0.985 0.227           2.29
19 mu_0       0.1      1.24         0.109 0.00000736     37.2 
20 mu_0       0.2      1.17         0.597 0.00265        20.2 
21 mu_0       0.3      1.04         0.885 0.0479          5.11
22 mu_0       0.4      0.998        0.965 0.235           1.95
23 mu_0       0.5      1.00         0.983 0.521           1.54
24 mu_0       0.6      1.00         0.990 0.682           1.35
25 mu_0       0.7      0.994        0.996 0.793           1.35
26 mu_0       0.8      0.987        0.980 0.743           1.37
27 mu_0       0.9      0.992        1.00  0.441           1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value  median_value min_value max_value
   <fct>    <dbl>      <dbl>         <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.22 0.0000000222   3.40e-19    161.  
 2 mu         0.2       8.59 0.0000798      3.56e-13    391.  
 3 mu         0.3       6.25 0.00610        1.19e- 9    234.  
 4 mu         0.4       3.04 0.0924         3.74e- 7     62.7 
 5 mu         0.5       1.81 0.453          3.24e- 5     20.3 
 6 mu         0.6       1.38 0.831          1.24e- 3     13.5 
 7 mu         0.7       1.23 0.984          4.81e- 4      5.86
 8 mu         0.8       1.37 0.837          1.25e- 6     12.0 
 9 mu         0.9       1.76 0.0590         3.05e-11     19.4 
10 mu_1       0.1       6.55 0.000000144    3.40e-18    322.  
11 mu_1       0.2       9.01 0.000259       1.78e-12    391.  
12 mu_1       0.3       4.86 0.0132         3.95e- 9    156.  
13 mu_1       0.4       2.42 0.156          9.34e- 7     31.3 
14 mu_1       0.5       1.65 0.634          6.48e- 5     20.3 
15 mu_1       0.6       1.32 1.00           2.07e- 3     11.3 
16 mu_1       0.7       1.22 0.957          1.37e- 4      5.56
17 mu_1       0.8       1.40 0.727          3.12e- 7     12.7 
18 mu_1       0.9       1.78 0.0436         6.78e-12     21.5 
19 mu_0       0.1       2.85 0.00000000864  0           143.  
20 mu_0       0.2       8.49 0.0000349      0           391.  
21 mu_0       0.3       6.85 0.00305        0           267.  
22 mu_0       0.4       3.46 0.0509         0            83.6 
23 mu_0       0.5       1.97 0.376          0            22.0 
24 mu_0       0.6       1.46 0.838          0            16.9 
25 mu_0       0.7       1.23 0.952          0             6.84
26 mu_0       0.8       1.25 0.846          0             8.97
27 mu_0       0.9       1.62 0.128          0            19.3 
[1] "Total run time was 195.897 seconds"
