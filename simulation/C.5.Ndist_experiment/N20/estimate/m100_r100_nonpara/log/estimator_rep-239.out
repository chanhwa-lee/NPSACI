
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04201 0.36178 0.63601 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1209  791 
[1] "treatment indicator table: "

   0    1 
 689 1311 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 146.631 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.429 0.0726
 2 mu         0.1   0.2 0.484 0.0740
 3 mu         0.1   0.3 0.555 0.131 
 4 mu         0.1   0.4 0.604 0.113 
 5 mu         0.1   0.5 0.628 0.104 
 6 mu         0.2   0.1 0.434 0.0528
 7 mu         0.2   0.2 0.506 0.0495
 8 mu         0.2   0.3 0.566 0.0850
 9 mu         0.2   0.4 0.630 0.0720
10 mu         0.2   0.5 0.654 0.0644
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.916        0.418 0.00000853      9.20
 2 mu         0.2      1.03         0.895 0.00295         5.86
 3 mu         0.3      1.02         1.03  0.0532          2.79
 4 mu         0.4      1.01         0.984 0.274           1.71
 5 mu         0.5      0.990        0.977 0.681           1.39
 6 mu         0.6      0.981        0.980 0.670           1.18
 7 mu         0.7      0.986        0.982 0.706           1.28
 8 mu         0.8      1.00         1.00  0.758           1.31
 9 mu         0.9      0.995        0.999 0.432           1.82
10 mu_1       0.1      1.08         0.732 0.0000429       9.74
11 mu_1       0.2      1.03         0.978 0.00753         4.09
12 mu_1       0.3      1.01         1.01  0.0929          2.17
13 mu_1       0.4      1.00         0.990 0.374           1.57
14 mu_1       0.5      0.986        0.973 0.737           1.30
15 mu_1       0.6      0.980        0.983 0.664           1.20
16 mu_1       0.7      0.988        0.983 0.733           1.30
17 mu_1       0.8      1.00         0.997 0.732           1.33
18 mu_1       0.9      0.993        1.00  0.399           1.88
19 mu_0       0.1      0.897        0.377 0.00000471      9.13
20 mu_0       0.2      1.03         0.868 0.00181         6.30
21 mu_0       0.3      1.02         1.02  0.0362          3.06
22 mu_0       0.4      1.01         0.991 0.207           1.84
23 mu_0       0.5      0.993        0.979 0.572           1.47
24 mu_0       0.6      0.981        0.987 0.679           1.22
25 mu_0       0.7      0.982        0.976 0.645           1.25
26 mu_0       0.8      0.996        0.991 0.742           1.33
27 mu_0       0.9      1.01         1.00  0.634           1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.56     2.98e- 9  1.84e-18     88.9 
 2 mu         0.2       2.57     2.41e- 5  1.93e-12     96.0 
 3 mu         0.3       2.00     3.10e- 3  6.43e- 9     33.5 
 4 mu         0.4       1.32     5.29e- 2  2.03e- 6     15.1 
 5 mu         0.5       1.06     3.31e- 1  1.76e- 4      6.90
 6 mu         0.6       1.11     6.12e- 1  6.12e- 3     10.3 
 7 mu         0.7       1.19     8.54e- 1  1.11e- 4      6.57
 8 mu         0.8       1.38     7.61e- 1  1.68e- 7      6.51
 9 mu         0.9       1.78     5.65e- 2  1.82e-12     30.5 
10 mu_1       0.1       2.54     2.09e- 8  1.84e-17    133.  
11 mu_1       0.2       2.54     8.43e- 5  9.66e-12     72.0 
12 mu_1       0.3       1.73     6.90e- 3  2.14e- 8     19.6 
13 mu_1       0.4       1.17     8.89e- 2  5.07e- 6     13.2 
14 mu_1       0.5       1.04     3.70e- 1  3.52e- 4      8.28
15 mu_1       0.6       1.12     7.03e- 1  2.32e- 3     10.3 
16 mu_1       0.7       1.20     9.14e- 1  2.37e- 5      6.41
17 mu_1       0.8       1.41     8.01e- 1  3.14e- 8      7.73
18 mu_1       0.9       1.80     4.40e- 2  3.04e-13     32.2 
19 mu_0       0.1       1.45     9.93e-10  0            83.9 
20 mu_0       0.2       2.58     9.03e- 6  0           102.  
21 mu_0       0.3       2.12     1.35e- 3  0            40.6 
22 mu_0       0.4       1.42     2.89e- 2  0            16.3 
23 mu_0       0.5       1.07     2.15e- 1  0             8.74
24 mu_0       0.6       1.08     4.29e- 1  0            10.3 
25 mu_0       0.7       1.16     6.74e- 1  0             8.76
26 mu_0       0.8       1.25     8.45e- 1  0             6.34
27 mu_0       0.9       1.59     1.61e- 1  0            15.3 
[1] "Total run time was 149.973 seconds"
