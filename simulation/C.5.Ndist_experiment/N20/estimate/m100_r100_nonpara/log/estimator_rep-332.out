
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03431 0.36716 0.61602 1.00000 5.45861 
[1] "event indicator table: "

   0    1 
1177  823 
[1] "treatment indicator table: "

   0    1 
 731 1269 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 154.118 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.357 0.0651
 2 mu         0.1   0.2 0.502 0.124 
 3 mu         0.1   0.3 0.491 0.0881
 4 mu         0.1   0.4 0.517 0.0855
 5 mu         0.1   0.5 0.524 0.0883
 6 mu         0.2   0.1 0.369 0.0633
 7 mu         0.2   0.2 0.518 0.117 
 8 mu         0.2   0.3 0.524 0.0903
 9 mu         0.2   0.4 0.561 0.0919
10 mu         0.2   0.5 0.579 0.0961
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.839        0.364 0.00000493     11.9 
 2 mu         0.2      1.03         0.787 0.00188        13.1 
 3 mu         0.3      1.01         0.908 0.0364          8.19
 4 mu         0.4      0.975        0.962 0.193           3.03
 5 mu         0.5      0.983        0.969 0.489           1.90
 6 mu         0.6      0.997        0.977 0.744           1.52
 7 mu         0.7      1.00         1.00  0.766           1.37
 8 mu         0.8      1.01         1.01  0.693           1.33
 9 mu         0.9      0.999        0.946 0.347           3.88
10 mu_1       0.1      0.974        0.609 0.0000250      17.8 
11 mu_1       0.2      1.05         0.839 0.00487        13.1 
12 mu_1       0.3      0.991        0.929 0.0642          5.78
13 mu_1       0.4      0.973        0.965 0.265           2.14
14 mu_1       0.5      0.987        0.970 0.571           1.76
15 mu_1       0.6      0.999        0.996 0.760           1.52
16 mu_1       0.7      1.01         1.00  0.757           1.33
17 mu_1       0.8      1.01         1.01  0.676           1.35
18 mu_1       0.9      0.999        0.943 0.314           4.24
19 mu_0       0.1      0.824        0.330 0.00000270     11.2 
20 mu_0       0.2      1.03         0.767 0.00114        13.6 
21 mu_0       0.3      1.02         0.899 0.0245          9.22
22 mu_0       0.4      0.977        0.954 0.145           3.64
23 mu_0       0.5      0.978        0.966 0.407           2.04
24 mu_0       0.6      0.994        0.972 0.718           1.52
25 mu_0       0.7      1.00         1.00  0.781           1.45
26 mu_0       0.8      1.01         1.00  0.716           1.27
27 mu_0       0.9      1.00         1.02  0.568           1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.69 0.0000000718  6.42e-19    525.  
 2 mu         0.2      19.3  0.000258      6.74e-13   1277.  
 3 mu         0.3      14.6  0.0176        2.24e- 9    763.  
 4 mu         0.4       6.06 0.189         7.06e- 7    205.  
 5 mu         0.5       2.46 0.821         6.13e- 5     27.6 
 6 mu         0.6       1.53 1.19          2.35e- 3     11.3 
 7 mu         0.7       1.40 0.990         4.33e- 5      8.77
 8 mu         0.8       2.30 0.572         6.56e- 8     73.9 
 9 mu         0.9       6.96 0.0216        7.13e-13    346.  
10 mu_1       0.1      13.8  0.000000467   6.42e-18   1051.  
11 mu_1       0.2      20.8  0.000838      3.37e-12   1277.  
12 mu_1       0.3      11.2  0.0368        7.47e- 9    509.  
13 mu_1       0.4       4.24 0.294         1.77e- 6    102.  
14 mu_1       0.5       2.02 1.05          1.23e- 4     23.0 
15 mu_1       0.6       1.44 1.07          9.07e- 4      8.50
16 mu_1       0.7       1.43 1.03          9.28e- 6     11.9 
17 mu_1       0.8       2.51 0.465         1.23e- 8     87.7 
18 mu_1       0.9       7.36 0.0156        1.19e-13    366.  
19 mu_0       0.1       5.90 0.0000000279  0           467.  
20 mu_0       0.2      18.9  0.000113      0          1277.  
21 mu_0       0.3      16.0  0.00938       0           872.  
22 mu_0       0.4       7.27 0.122         0           273.  
23 mu_0       0.5       2.89 0.577         0            43.3 
24 mu_0       0.6       1.65 1.23          0            15.6 
25 mu_0       0.7       1.33 0.843         0             6.19
26 mu_0       0.8       1.48 0.712         0            18.5 
27 mu_0       0.9       3.29 0.0461        0           173.  
[1] "Total run time was 157.217 seconds"
