
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05183 0.39323 0.64301 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1206  794 
[1] "treatment indicator table: "

   0    1 
 676 1324 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 133.962 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.360 0.107 
 2 mu         0.1   0.2 0.442 0.130 
 3 mu         0.1   0.3 0.438 0.136 
 4 mu         0.1   0.4 0.462 0.143 
 5 mu         0.1   0.5 0.460 0.150 
 6 mu         0.2   0.1 0.384 0.0723
 7 mu         0.2   0.2 0.465 0.0870
 8 mu         0.2   0.3 0.470 0.0848
 9 mu         0.2   0.4 0.485 0.0910
10 mu         0.2   0.5 0.488 0.101 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.823       0.0421 0.0000153      15.7 
 2 mu         0.2      0.967       0.387  0.00348         9.81
 3 mu         0.3      0.996       0.867  0.0541          5.42
 4 mu         0.4      1.04        0.987  0.262           4.40
 5 mu         0.5      1.03        1.01   0.626           2.27
 6 mu         0.6      0.999       0.992  0.764           1.49
 7 mu         0.7      0.987       0.977  0.756           1.19
 8 mu         0.8      0.997       1.01   0.629           1.37
 9 mu         0.9      0.977       0.970  0.192           2.06
10 mu_1       0.1      1.03        0.120  0.0000718      16.7 
11 mu_1       0.2      0.972       0.607  0.00855         6.52
12 mu_1       0.3      1.01        0.909  0.0928          5.69
13 mu_1       0.4      1.04        1.02   0.354           3.74
14 mu_1       0.5      1.02        1.02   0.668           1.94
15 mu_1       0.6      0.993       0.989  0.779           1.37
16 mu_1       0.7      0.988       0.980  0.718           1.20
17 mu_1       0.8      0.997       1.01   0.630           1.39
18 mu_1       0.9      0.974       0.965  0.168           2.13
19 mu_0       0.1      0.799       0.0333 0.00000898     15.5 
20 mu_0       0.2      0.966       0.339  0.00221        10.6 
21 mu_0       0.3      0.988       0.813  0.0375          5.31
22 mu_0       0.4      1.03        0.967  0.200           4.84
23 mu_0       0.5      1.04        1.02   0.532           2.69
24 mu_0       0.6      1.01        1.00   0.728           1.66
25 mu_0       0.7      0.986       0.976  0.844           1.22
26 mu_0       0.8      0.994       0.998  0.625           1.27
27 mu_0       0.9      1.00        0.993  0.414           1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06      2.49e- 9  4.31e-17     99.8 
 2 mu         0.2      1.84      2.01e- 5  2.01e-11    108.  
 3 mu         0.3      2.36      2.63e- 3  3.89e- 8    111.  
 4 mu         0.4      2.44      5.30e- 2  7.89e- 6    113.  
 5 mu         0.5      1.87      4.04e- 1  4.56e- 4     50.2 
 6 mu         0.6      1.27      8.85e- 1  1.17e- 2      9.88
 7 mu         0.7      1.10      1.04e+ 0  2.65e- 4      5.07
 8 mu         0.8      1.46      7.75e- 1  4.01e- 7     11.1 
 9 mu         0.9      2.02      7.24e- 2  4.36e-12     52.2 
10 mu_1       0.1      1.67      1.74e- 8  4.09e-16    150.  
11 mu_1       0.2      2.04      7.04e- 5  9.53e-11     80.8 
12 mu_1       0.3      2.52      6.15e- 3  1.23e- 7    130.  
13 mu_1       0.4      2.35      9.28e- 2  1.87e- 5     98.5 
14 mu_1       0.5      1.69      4.23e- 1  8.67e- 4     35.1 
15 mu_1       0.6      1.19      8.32e- 1  5.55e- 3      5.76
16 mu_1       0.7      1.11      9.84e- 1  5.68e- 5      5.80
17 mu_1       0.8      1.52      7.00e- 1  7.53e- 8     13.2 
18 mu_1       0.9      2.04      5.63e- 2  7.27e-13     55.1 
19 mu_0       0.1      0.993     8.29e-10  2.39e-18     94.2 
20 mu_0       0.2      1.80      7.54e- 6  1.25e-12    115.  
21 mu_0       0.3      2.29      1.13e- 3  2.78e- 9    103.  
22 mu_0       0.4      2.51      2.82e- 2  6.57e- 7    122.  
23 mu_0       0.5      2.04      2.42e- 1  4.56e- 5     65.2 
24 mu_0       0.6      1.40      6.86e- 1  1.46e- 3     16.1 
25 mu_0       0.7      1.06      9.00e- 1  7.51e- 4      4.07
26 mu_0       0.8      1.23      7.08e- 1  1.71e- 6      8.49
27 mu_0       0.9      1.91      2.17e- 1  3.71e-11     26.1 
[1] "Total run time was 137.411 seconds"
