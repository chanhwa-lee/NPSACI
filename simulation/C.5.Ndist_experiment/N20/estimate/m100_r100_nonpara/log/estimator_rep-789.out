
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0372  0.3770  0.6392  1.0000  7.0000 
[1] "event indicator table: "

   0    1 
1181  819 
[1] "treatment indicator table: "

   0    1 
 655 1345 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 250.211 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.350 0.0674
 2 mu         0.1   0.2 0.493 0.105 
 3 mu         0.1   0.3 0.495 0.0926
 4 mu         0.1   0.4 0.536 0.103 
 5 mu         0.1   0.5 0.592 0.112 
 6 mu         0.2   0.1 0.478 0.135 
 7 mu         0.2   0.2 0.649 0.181 
 8 mu         0.2   0.3 0.682 0.193 
 9 mu         0.2   0.4 0.742 0.212 
10 mu         0.2   0.5 0.823 0.230 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.888        0.436 0.00000302     13.5 
 2 mu         0.2      1.45         0.649 0.00151        32.7 
 3 mu         0.3      1.28         0.851 0.0358         19.7 
 4 mu         0.4      1.06         0.928 0.219           5.81
 5 mu         0.5      1.00         0.990 0.557           1.66
 6 mu         0.6      0.993        0.993 0.732           1.23
 7 mu         0.7      0.991        0.991 0.726           1.20
 8 mu         0.8      0.992        0.995 0.716           1.31
 9 mu         0.9      1.01         0.993 0.427           2.14
10 mu_1       0.1      1.22         0.546 0.0000158      26.9 
11 mu_1       0.2      1.50         0.687 0.00405        32.7 
12 mu_1       0.3      1.17         0.867 0.0652         13.3 
13 mu_1       0.4      1.02         0.951 0.307           3.30
14 mu_1       0.5      0.998        1.00  0.639           1.49
15 mu_1       0.6      0.992        0.998 0.698           1.18
16 mu_1       0.7      0.991        0.994 0.749           1.20
17 mu_1       0.8      0.992        0.998 0.701           1.35
18 mu_1       0.9      1.01         0.996 0.401           2.32
19 mu_0       0.1      0.851        0.408 0.00000160     12.0 
20 mu_0       0.2      1.43         0.649 0.000879       32.7 
21 mu_0       0.3      1.32         0.809 0.0231         22.5 
22 mu_0       0.4      1.08         0.906 0.160           7.48
23 mu_0       0.5      1.01         1.00  0.470           1.92
24 mu_0       0.6      0.994        0.990 0.729           1.30
25 mu_0       0.7      0.991        0.996 0.672           1.20
26 mu_0       0.8      0.990        0.990 0.726           1.21
27 mu_0       0.9      1.00         1.02  0.561           1.51
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      76.7      2.05e- 9  4.86e-18   3812.  
 2 mu         0.2     189.       1.66e- 5  5.10e-12   9264.  
 3 mu         0.3     116.       2.17e- 3  1.70e- 8   5537.  
 4 mu         0.4      34.2      4.83e- 2  5.35e- 6   1486.  
 5 mu         0.5       6.38     3.68e- 1  4.64e- 4    196.  
 6 mu         0.6       1.56     1.11e+ 0  1.78e- 2     11.4 
 7 mu         0.7       1.17     1.03e+ 0  5.68e- 2      3.00
 8 mu         0.8       1.44     1.09e+ 0  2.19e- 4      9.77
 9 mu         0.9       1.89     1.06e- 1  5.34e- 9     59.1 
10 mu_1       0.1     154.       1.43e- 8  4.86e-17   7623.  
11 mu_1       0.2     190.       5.80e- 5  2.55e-11   9264.  
12 mu_1       0.3      79.5      5.06e- 3  5.65e- 8   3691.  
13 mu_1       0.4      18.7      8.45e- 2  1.34e- 5    743.  
14 mu_1       0.5       3.60     5.15e- 1  9.28e- 4     78.5 
15 mu_1       0.6       1.30     1.11e+ 0  2.96e- 2      8.55
16 mu_1       0.7       1.19     1.05e+ 0  2.03e- 2      3.00
17 mu_1       0.8       1.47     9.50e- 1  5.47e- 5     11.0 
18 mu_1       0.9       1.92     8.56e- 2  1.19e- 9     65.7 
19 mu_0       0.1      68.2      6.83e-10  0          3388.  
20 mu_0       0.2     189.       6.21e- 6  0          9264.  
21 mu_0       0.3     132.       9.30e- 4  0          6328.  
22 mu_0       0.4      44.5      2.42e- 2  0          1981.  
23 mu_0       0.5       9.15     2.21e- 1  0           314.  
24 mu_0       0.6       1.96     9.28e- 1  0            22.9 
25 mu_0       0.7       1.14     1.01e+ 0  0             3.53
26 mu_0       0.8       1.29     1.17e+ 0  0             4.88
27 mu_0       0.9       1.58     2.65e- 1  0            20.3 
[1] "Total run time was 255.927 seconds"
