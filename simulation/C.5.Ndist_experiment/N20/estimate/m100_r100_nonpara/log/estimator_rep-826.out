
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0446  0.3483  0.6386  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
1193  807 
[1] "treatment indicator table: "

   0    1 
 713 1287 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 154.811 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.387 0.100 
 2 mu         0.1   0.2 0.472 0.125 
 3 mu         0.1   0.3 0.517 0.131 
 4 mu         0.1   0.4 0.617 0.152 
 5 mu         0.1   0.5 0.732 0.219 
 6 mu         0.2   0.1 0.354 0.0540
 7 mu         0.2   0.2 0.447 0.0592
 8 mu         0.2   0.3 0.496 0.0587
 9 mu         0.2   0.4 0.602 0.118 
10 mu         0.2   0.5 0.686 0.135 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.860        0.352 0.00000588     11.0 
 2 mu         0.2      0.966        0.849 0.00232         4.62
 3 mu         0.3      1.05         1.00  0.0459          5.12
 4 mu         0.4      1.03         0.990 0.244           3.16
 5 mu         0.5      1.01         0.997 0.581           2.17
 6 mu         0.6      1.01         1.00  0.768           1.41
 7 mu         0.7      1.01         1.01  0.848           1.20
 8 mu         0.8      0.988        0.988 0.737           1.24
 9 mu         0.9      0.947        0.942 0.230           2.07
10 mu_1       0.1      0.871        0.632 0.0000299       5.80
11 mu_1       0.2      1.02         0.960 0.00602         5.86
12 mu_1       0.3      1.05         0.997 0.0812          4.49
13 mu_1       0.4      1.02         0.991 0.332           2.96
14 mu_1       0.5      1.01         1.01  0.599           1.91
15 mu_1       0.6      1.01         0.999 0.821           1.31
16 mu_1       0.7      1.00         1.01  0.834           1.20
17 mu_1       0.8      0.985        0.985 0.722           1.25
18 mu_1       0.9      0.943        0.933 0.202           2.12
19 mu_0       0.1      0.859        0.312 0.00000320     11.6 
20 mu_0       0.2      0.953        0.821 0.00139         4.31
21 mu_0       0.3      1.04         0.998 0.0307          5.39
22 mu_0       0.4      1.04         0.986 0.184           3.30
23 mu_0       0.5      1.01         0.989 0.500           2.42
24 mu_0       0.6      1.01         1.00  0.687           1.55
25 mu_0       0.7      1.01         0.997 0.854           1.21
26 mu_0       0.8      0.999        0.997 0.782           1.24
27 mu_0       0.9      0.980        0.976 0.489           1.62
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     27.5   0.0000000359  9.98e-19   2478.  
 2 mu         0.2     29.9   0.000129      1.05e-12   2677.  
 3 mu         0.3     10.9   0.00986       3.48e- 9    933.  
 4 mu         0.4      2.68  0.141         1.10e- 6    161.  
 5 mu         0.5      1.28  0.684         9.52e- 5     14.2 
 6 mu         0.6      1.08  0.792         3.65e- 3      7.99
 7 mu         0.7      0.984 0.892         9.66e- 5      2.67
 8 mu         0.8      1.17  0.597         1.46e- 7     10.1 
 9 mu         0.9      1.51  0.0216        1.59e-12     47.4 
10 mu_1       0.1     41.3   0.000000234   9.98e-18   3717.  
11 mu_1       0.2     22.6   0.000419      5.23e-12   2008.  
12 mu_1       0.3      5.85  0.0214        1.16e- 8    467.  
13 mu_1       0.4      1.67  0.229         2.74e- 6     60.4 
14 mu_1       0.5      1.19  0.612         1.90e- 4     12.0 
15 mu_1       0.6      1.05  0.869         2.02e- 3      6.65
16 mu_1       0.7      0.987 0.849         2.07e- 5      2.67
17 mu_1       0.8      1.20  0.485         2.74e- 8     12.0 
18 mu_1       0.9      1.52  0.0156        2.65e-13     50.1 
19 mu_0       0.1     25.9   0.0000000140  0          2340.  
20 mu_0       0.2     31.7   0.0000565     0          2844.  
21 mu_0       0.3     13.1   0.00493       0          1133.  
22 mu_0       0.4      3.36  0.0823        0           228.  
23 mu_0       0.5      1.37  0.479         0            24.1 
24 mu_0       0.6      1.13  0.764         0             9.98
25 mu_0       0.7      0.979 0.828         0             3.69
26 mu_0       0.8      1.03  0.673         0             3.80
27 mu_0       0.9      1.43  0.0668        0            23.7 
[1] "Total run time was 158.9 seconds"
