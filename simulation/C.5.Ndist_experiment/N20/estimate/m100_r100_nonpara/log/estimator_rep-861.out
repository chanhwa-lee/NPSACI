
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04615 0.33912 0.58658 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1186  814 
[1] "treatment indicator table: "

   0    1 
 741 1259 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 185.603 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.273 0.0555
 2 mu         0.1   0.2 0.324 0.0614
 3 mu         0.1   0.3 0.315 0.0557
 4 mu         0.1   0.4 0.402 0.0609
 5 mu         0.1   0.5 0.449 0.0862
 6 mu         0.2   0.1 0.273 0.0464
 7 mu         0.2   0.2 0.333 0.0498
 8 mu         0.2   0.3 0.339 0.0394
 9 mu         0.2   0.4 0.426 0.0421
10 mu         0.2   0.5 0.487 0.0724
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.660        0.275 0.00000849      4.34
 2 mu         0.2      0.772        0.685 0.00311         3.14
 3 mu         0.3      0.856        0.857 0.0573          2.10
 4 mu         0.4      0.927        0.955 0.289           1.40
 5 mu         0.5      0.971        0.984 0.622           1.35
 6 mu         0.6      0.998        0.987 0.810           1.19
 7 mu         0.7      1.02         1.01  0.643           1.69
 8 mu         0.8      1.04         0.995 0.220           2.69
 9 mu         0.9      1.02         0.966 0.0134          5.57
10 mu_1       0.1      0.728        0.423 0.0000430       4.75
11 mu_1       0.2      0.808        0.743 0.00797         2.43
12 mu_1       0.3      0.884        0.901 0.100           1.90
13 mu_1       0.4      0.944        0.964 0.392           1.34
14 mu_1       0.5      0.979        0.978 0.690           1.32
15 mu_1       0.6      1.00         0.998 0.822           1.25
16 mu_1       0.7      1.03         1.01  0.580           1.80
17 mu_1       0.8      1.04         0.990 0.184           2.77
18 mu_1       0.9      1.01         0.964 0.0102          5.83
19 mu_0       0.1      0.652        0.237 0.00000466      4.30
20 mu_0       0.2      0.763        0.663 0.00189         3.33
21 mu_0       0.3      0.844        0.839 0.0390          2.19
22 mu_0       0.4      0.915        0.949 0.221           1.53
23 mu_0       0.5      0.963        0.982 0.554           1.37
24 mu_0       0.6      0.991        0.981 0.761           1.22
25 mu_0       0.7      1.01         1.01  0.789           1.41
26 mu_0       0.8      1.04         1.01  0.364           2.33
27 mu_0       0.9      1.05         0.972 0.0414          3.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.71 0.0000000362  6.75e-17     87.2 
 2 mu         0.2       5.18 0.000130      3.15e-11    435.  
 3 mu         0.3       5.46 0.00993       6.10e- 8    446.  
 4 mu         0.4       2.95 0.142         1.24e- 5    186.  
 5 mu         0.5       1.44 0.640         7.15e- 4     36.8 
 6 mu         0.6       1.32 1.04          1.44e- 3     17.4 
 7 mu         0.7       2.80 1.02          1.10e- 5    101.  
 8 mu         0.8      11.7  0.385         9.75e- 9    393.  
 9 mu         0.9      74.6  0.0119        4.71e-14   4143.  
10 mu_1       0.1       2.97 0.000000235   6.41e-16    199.  
11 mu_1       0.2       6.28 0.000422      1.49e-10    544.  
12 mu_1       0.3       4.78 0.0215        1.93e- 7    371.  
13 mu_1       0.4       2.25 0.230         2.94e- 5    116.  
14 mu_1       0.5       1.26 0.663         1.36e- 3     18.4 
15 mu_1       0.6       1.41 1.14          2.40e- 4     24.7 
16 mu_1       0.7       3.27 0.993         1.58e- 6    123.  
17 mu_1       0.8      13.6  0.306         1.22e- 9    491.  
18 mu_1       0.9      82.0  0.00863       5.23e-15   4604.  
19 mu_0       0.1       1.57 0.0000000141  0            87.2 
20 mu_0       0.2       4.91 0.0000569     0           408.  
21 mu_0       0.3       5.75 0.00497       0           477.  
22 mu_0       0.4       3.41 0.0829        0           232.  
23 mu_0       0.5       1.61 0.475         0            55.3 
24 mu_0       0.6       1.19 0.927         0             6.54
25 mu_0       0.7       1.69 1.00          0            50.5 
26 mu_0       0.8       3.80 0.583         0           217.  
27 mu_0       0.9       8.58 0.0332        0           403.  
[1] "Total run time was 189.688 seconds"
