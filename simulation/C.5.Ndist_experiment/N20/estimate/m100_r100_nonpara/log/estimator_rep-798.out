
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03723 0.35824 0.62731 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1237  763 
[1] "treatment indicator table: "

   0    1 
 661 1339 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 144.005 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.252 0.147 
 2 mu         0.1   0.2 0.216 0.120 
 3 mu         0.1   0.3 0.231 0.0821
 4 mu         0.1   0.4 0.214 0.105 
 5 mu         0.1   0.5 0.205 0.0997
 6 mu         0.2   0.1 0.350 0.127 
 7 mu         0.2   0.2 0.363 0.102 
 8 mu         0.2   0.3 0.416 0.0717
 9 mu         0.2   0.4 0.414 0.0894
10 mu         0.2   0.5 0.415 0.0852
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.321       0.0262 0.00000259      8.88
 2 mu         0.2      0.715       0.394  0.00106         5.02
 3 mu         0.3      0.917       0.846  0.0225          3.72
 4 mu         0.4      0.981       0.953  0.131           2.63
 5 mu         0.5      0.990       0.984  0.361           2.21
 6 mu         0.6      0.988       0.995  0.632           1.24
 7 mu         0.7      0.981       0.985  0.787           1.12
 8 mu         0.8      0.981       0.986  0.625           1.30
 9 mu         0.9      1.03        0.944  0.269           2.25
10 mu_1       0.1      0.526       0.0812 0.0000132       9.02
11 mu_1       0.2      0.835       0.578  0.00279         5.25
12 mu_1       0.3      0.958       0.911  0.0403          2.97
13 mu_1       0.4      0.989       0.970  0.183           2.75
14 mu_1       0.5      0.990       0.983  0.429           1.96
15 mu_1       0.6      0.987       0.987  0.683           1.17
16 mu_1       0.7      0.980       0.985  0.772           1.12
17 mu_1       0.8      0.982       0.983  0.598           1.33
18 mu_1       0.9      1.03        0.940  0.249           2.44
19 mu_0       0.1      0.298       0.0202 0.00000141      8.87
20 mu_0       0.2      0.685       0.331  0.000634        5.37
21 mu_0       0.3      0.899       0.826  0.0148          4.04
22 mu_0       0.4      0.976       0.953  0.0960          2.55
23 mu_0       0.5      0.990       0.977  0.294           2.46
24 mu_0       0.6      0.989       0.995  0.555           1.45
25 mu_0       0.7      0.984       0.973  0.793           1.14
26 mu_0       0.8      0.975       0.985  0.733           1.22
27 mu_0       0.9      0.991       0.977  0.425           1.53
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.55     1.83e- 9  1.69e-18    414.  
 2 mu         0.2       4.57     1.48e- 5  1.77e-12    199.  
 3 mu         0.3       4.14     1.94e- 3  5.89e- 9    184.  
 4 mu         0.4       3.05     4.32e- 2  1.86e- 6     76.9 
 5 mu         0.5       1.84     3.14e- 1  1.61e- 4     46.9 
 6 mu         0.6       1.18     8.78e- 1  6.18e- 3     13.9 
 7 mu         0.7       1.02     1.00e+ 0  5.23e- 5      3.41
 8 mu         0.8       1.12     7.40e- 1  4.62e- 8      5.68
 9 mu         0.9       1.93     5.63e- 2  2.23e-13     32.3 
10 mu_1       0.1       5.18     1.28e- 8  1.69e-17    414.  
11 mu_1       0.2       4.46     5.18e- 5  8.86e-12    225.  
12 mu_1       0.3       3.88     4.53e- 3  1.96e- 8    153.  
13 mu_1       0.4       2.66     7.55e- 2  4.65e- 6     70.2 
14 mu_1       0.5       1.59     4.40e- 1  3.22e- 4     37.5 
15 mu_1       0.6       1.11     9.76e- 1  1.14e- 3      9.24
16 mu_1       0.7       1.01     9.95e- 1  7.48e- 6      3.16
17 mu_1       0.8       1.14     6.34e- 1  5.78e- 9      6.03
18 mu_1       0.9       2.02     4.38e- 2  2.48e-14     35.9 
19 mu_0       0.1       4.48     6.11e-10  0           414.  
20 mu_0       0.2       4.60     5.55e- 6  0           223.  
21 mu_0       0.3       4.25     8.31e- 4  0           197.  
22 mu_0       0.4       3.31     2.16e- 2  0            96.1 
23 mu_0       0.5       2.08     1.97e- 1  0            56.3 
24 mu_0       0.6       1.28     6.80e- 1  0            20.8 
25 mu_0       0.7       1.03     9.65e- 1  0             3.97
26 mu_0       0.8       1.01     7.59e- 1  0             4.26
27 mu_0       0.9       1.13     1.10e- 1  0            10.4 
[1] "Total run time was 147.288 seconds"
