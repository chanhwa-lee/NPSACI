
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03986 0.35864 0.63151 1.00000 6.16337 
[1] "event indicator table: "

   0    1 
1177  823 
[1] "treatment indicator table: "

   0    1 
 722 1278 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 172.958 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.170 0.101 
 2 mu         0.1   0.2 0.239 0.0682
 3 mu         0.1   0.3 0.268 0.0811
 4 mu         0.1   0.4 0.325 0.0754
 5 mu         0.1   0.5 0.344 0.0849
 6 mu         0.2   0.1 0.242 0.0907
 7 mu         0.2   0.2 0.334 0.0664
 8 mu         0.2   0.3 0.373 0.0765
 9 mu         0.2   0.4 0.435 0.0745
10 mu         0.2   0.5 0.461 0.0827
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.651        0.322 0.00000926      3.38
 2 mu         0.2      0.868        0.790 0.00314         8.29
 3 mu         0.3      0.978        0.924 0.0544          5.31
 4 mu         0.4      0.987        0.964 0.215           2.77
 5 mu         0.5      0.997        0.994 0.492           1.55
 6 mu         0.6      1.01         1.00  0.794           1.28
 7 mu         0.7      1.00         1.00  0.729           1.18
 8 mu         0.8      0.993        0.982 0.598           1.43
 9 mu         0.9      0.973        0.897 0.330           2.73
10 mu_1       0.1      0.739        0.595 0.0000465       6.76
11 mu_1       0.2      0.945        0.863 0.00797         8.37
12 mu_1       0.3      0.990        0.922 0.0889          4.50
13 mu_1       0.4      0.987        0.969 0.282           2.19
14 mu_1       0.5      1.00         0.995 0.570           1.44
15 mu_1       0.6      1.01         1.01  0.845           1.23
16 mu_1       0.7      0.998        1.00  0.700           1.19
17 mu_1       0.8      0.992        0.980 0.592           1.47
18 mu_1       0.9      0.970        0.881 0.304           2.88
19 mu_0       0.1      0.641        0.290 0.00000512      3.19
20 mu_0       0.2      0.848        0.769 0.00193         8.27
21 mu_0       0.3      0.972        0.914 0.0374          5.95
22 mu_0       0.4      0.986        0.955 0.170           3.20
23 mu_0       0.5      0.993        0.985 0.413           1.72
24 mu_0       0.6      1.01         1.00  0.714           1.36
25 mu_0       0.7      1.00         1.01  0.797           1.22
26 mu_0       0.8      0.994        1.00  0.622           1.36
27 mu_0       0.9      0.997        0.978 0.560           1.82
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      28.7  0.0000000296  1.12e-18   2047.  
 2 mu         0.2      76.6  0.000106      1.18e-12   4974.  
 3 mu         0.3      53.3  0.00812       3.92e- 9   2973.  
 4 mu         0.4      19.4  0.116         1.24e- 6    798.  
 5 mu         0.5       5.18 0.510         1.07e- 4    105.  
 6 mu         0.6       1.65 1.17          4.11e- 3      9.44
 7 mu         0.7       1.06 0.861         3.66e- 4      3.39
 8 mu         0.8       1.33 0.485         9.51e- 7     24.5 
 9 mu         0.9       2.19 0.0178        2.33e-11    115.  
10 mu_1       0.1      58.4  0.000000192   1.12e-17   4093.  
11 mu_1       0.2      80.2  0.000345      5.89e-12   4974.  
12 mu_1       0.3      39.4  0.0176        1.31e- 8   1982.  
13 mu_1       0.4      12.2  0.189         3.09e- 6    399.  
14 mu_1       0.5       3.45 0.593         2.14e- 4     43.2 
15 mu_1       0.6       1.37 1.11          6.58e- 3      5.74
16 mu_1       0.7       1.06 0.775         1.05e- 4      3.95
17 mu_1       0.8       1.38 0.386         2.38e- 7     29.1 
18 mu_1       0.9       2.24 0.0128        5.17e-12    121.  
19 mu_0       0.1      25.4  0.0000000115  0          1819.  
20 mu_0       0.2      75.8  0.0000465     0          4974.  
21 mu_0       0.3      59.3  0.00406       0          3398.  
22 mu_0       0.4      24.1  0.0678        0          1064.  
23 mu_0       0.5       6.91 0.413         0           169.  
24 mu_0       0.6       2.07 1.05          0            15.3 
25 mu_0       0.7       1.08 1.03          0             3.55
26 mu_0       0.8       1.10 0.700         0             6.13
27 mu_0       0.9       1.72 0.0550        0            57.5 
[1] "Total run time was 176.752 seconds"
