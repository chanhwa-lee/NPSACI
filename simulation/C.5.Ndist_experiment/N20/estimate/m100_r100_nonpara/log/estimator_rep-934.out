
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03335 0.33880 0.61946 1.00000 4.61683 
[1] "event indicator table: "

   0    1 
1166  834 
[1] "treatment indicator table: "

   0    1 
 782 1218 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 171.115 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.302 0.0595
 2 mu         0.1   0.2 0.387 0.0707
 3 mu         0.1   0.3 0.384 0.0855
 4 mu         0.1   0.4 0.401 0.0915
 5 mu         0.1   0.5 0.440 0.117 
 6 mu         0.2   0.1 0.336 0.0503
 7 mu         0.2   0.2 0.424 0.0600
 8 mu         0.2   0.3 0.436 0.0753
 9 mu         0.2   0.4 0.457 0.0831
10 mu         0.2   0.5 0.504 0.109 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.881        0.469 0.0000102       6.52
 2 mu         0.2      1.02         0.826 0.00367         7.46
 3 mu         0.3      0.985        0.987 0.0657          3.19
 4 mu         0.4      0.981        1.01  0.316           1.80
 5 mu         0.5      0.989        0.996 0.655           1.51
 6 mu         0.6      0.995        0.988 0.810           1.20
 7 mu         0.7      0.999        1.00  0.794           1.29
 8 mu         0.8      0.996        1.00  0.503           1.79
 9 mu         0.9      0.994        0.908 0.0972          7.04
10 mu_1       0.1      1.02         0.702 0.0000516       9.86
11 mu_1       0.2      1.02         0.922 0.00939         5.91
12 mu_1       0.3      0.976        0.976 0.114           2.20
13 mu_1       0.4      0.983        1.00  0.423           1.81
14 mu_1       0.5      0.991        0.996 0.694           1.40
15 mu_1       0.6      0.996        0.990 0.829           1.23
16 mu_1       0.7      0.999        1.00  0.754           1.34
17 mu_1       0.8      0.996        0.985 0.465           1.91
18 mu_1       0.9      0.994        0.903 0.0833          7.65
19 mu_0       0.1      0.866        0.435 0.00000562      6.15
20 mu_0       0.2      1.02         0.793 0.00224         7.85
21 mu_0       0.3      0.989        0.983 0.0450          3.70
22 mu_0       0.4      0.979        1.00  0.245           1.80
23 mu_0       0.5      0.988        0.993 0.610           1.62
24 mu_0       0.6      0.993        0.990 0.765           1.24
25 mu_0       0.7      0.999        0.993 0.845           1.25
26 mu_0       0.8      0.998        1.01  0.627           1.50
27 mu_0       0.9      0.994        0.972 0.223           2.34
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      20.6   0.000000392  5.75e-19   2051.  
 2 mu         0.2      10.8   0.000626     6.03e-13    985.  
 3 mu         0.3       4.05  0.0279       2.01e- 9    200.  
 4 mu         0.4       2.32  0.238        6.33e- 7     36.0 
 5 mu         0.5       1.58  0.861        5.49e- 5     10.7 
 6 mu         0.6       1.22  1.04         2.10e- 3      6.15
 7 mu         0.7       1.20  1.01         2.59e- 4      8.88
 8 mu         0.8       1.75  0.278        2.29e- 7     25.5 
 9 mu         0.9       3.32  0.00446      1.11e-12    107.  
10 mu_1       0.1      20.7   0.00000235   5.75e-18   2051.  
11 mu_1       0.2       6.39  0.00188      3.02e-12    492.  
12 mu_1       0.3       2.94  0.0558       6.69e- 9     66.7 
13 mu_1       0.4       2.02  0.362        1.58e- 6     27.0 
14 mu_1       0.5       1.44  1.01         1.10e- 4      9.24
15 mu_1       0.6       1.18  1.01         3.51e- 3      5.12
16 mu_1       0.7       1.23  0.948        3.71e- 5     10.8 
17 mu_1       0.8       1.86  0.208        2.87e- 8     27.1 
18 mu_1       0.9       3.41  0.00297      1.23e-13    113.  
19 mu_0       0.1      20.6   0.000000174  0          2051.  
20 mu_0       0.2      11.9   0.000313     0          1108.  
21 mu_0       0.3       4.53  0.0160       0           257.  
22 mu_0       0.4       2.51  0.161        0            42.0 
23 mu_0       0.5       1.71  0.658        0            15.0 
24 mu_0       0.6       1.28  1.08         0             7.68
25 mu_0       0.7       1.13  0.756        0             4.71
26 mu_0       0.8       1.35  0.473        0            19.1 
27 mu_0       0.9       2.48  0.0167       0            53.5 
[1] "Total run time was 174.593 seconds"
