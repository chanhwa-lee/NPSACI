
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01877 0.31335 0.59893 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1181  819 
[1] "treatment indicator table: "

   0    1 
 772 1228 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 163.857 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.344 0.186 
 2 mu         0.1   0.2 0.427 0.246 
 3 mu         0.1   0.3 0.475 0.293 
 4 mu         0.1   0.4 0.513 0.320 
 5 mu         0.1   0.5 0.546 0.336 
 6 mu         0.2   0.1 0.281 0.0749
 7 mu         0.2   0.2 0.310 0.0827
 8 mu         0.2   0.3 0.342 0.0941
 9 mu         0.2   0.4 0.377 0.0986
10 mu         0.2   0.5 0.418 0.106 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.12        0.113  0.00000353     61.3 
 2 mu         0.2      0.865       0.544  0.00145         7.14
 3 mu         0.3      0.955       0.871  0.0298          2.90
 4 mu         0.4      0.996       0.961  0.170           2.48
 5 mu         0.5      0.998       1.00   0.471           1.55
 6 mu         0.6      0.997       0.997  0.838           1.19
 7 mu         0.7      0.999       1.00   0.831           1.23
 8 mu         0.8      1.01        1.01   0.667           1.53
 9 mu         0.9      1.06        0.988  0.133           2.83
10 mu_1       0.1      0.695       0.259  0.0000180      13.8 
11 mu_1       0.2      0.890       0.763  0.00377         4.10
12 mu_1       0.3      0.981       0.949  0.0533          3.01
13 mu_1       0.4      1.00        0.970  0.237           2.21
14 mu_1       0.5      0.998       1.01   0.561           1.35
15 mu_1       0.6      0.997       0.990  0.833           1.17
16 mu_1       0.7      1.00        0.997  0.836           1.24
17 mu_1       0.8      1.02        1.01   0.617           1.57
18 mu_1       0.9      1.06        0.990  0.115           2.95
19 mu_0       0.1      1.16        0.0950 0.00000192     68.0 
20 mu_0       0.2      0.859       0.498  0.000863        8.53
21 mu_0       0.3      0.943       0.835  0.0198          2.85
22 mu_0       0.4      0.993       0.958  0.125           2.67
23 mu_0       0.5      0.999       0.989  0.380           1.74
24 mu_0       0.6      0.996       0.997  0.740           1.22
25 mu_0       0.7      0.997       0.999  0.819           1.20
26 mu_0       0.8      1.00        0.982  0.743           1.34
27 mu_0       0.9      1.04        1.00   0.304           1.90
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.148  0.000000331  6.55e-19      7.59
 2 mu         0.2      1.07   0.000529     6.86e-13     41.5 
 3 mu         0.3      1.81   0.0250       2.28e- 9     42.5 
 4 mu         0.4      1.73   0.257        7.20e- 7     37.2 
 5 mu         0.5      1.40   0.879        6.24e- 5     16.6 
 6 mu         0.6      1.19   0.894        2.39e- 3      5.36
 7 mu         0.7      1.05   0.797        4.48e- 4      5.43
 8 mu         0.8      1.19   0.231        1.99e- 6     10.8 
 9 mu         0.9      2.78   0.00351      1.10e-10     75.1 
10 mu_1       0.1      0.384  0.00000199   6.55e-18     19.0 
11 mu_1       0.2      1.50   0.00159      3.43e-12     51.9 
12 mu_1       0.3      1.90   0.0520       7.61e- 9     43.0 
13 mu_1       0.4      1.64   0.401        1.80e- 6     32.6 
14 mu_1       0.5      1.33   1.04         1.25e- 4     11.6 
15 mu_1       0.6      1.15   0.900        3.99e- 3      4.91
16 mu_1       0.7      1.04   0.693        1.60e- 4      5.82
17 mu_1       0.8      1.25   0.165        6.23e- 7     12.8 
18 mu_1       0.9      2.94   0.00234      3.04e-11     83.5 
19 mu_0       0.1      0.122  0.000000147  0             6.33
20 mu_0       0.2      0.967  0.000264     0            38.9 
21 mu_0       0.3      1.76   0.0135       0            45.6 
22 mu_0       0.4      1.79   0.162        0            40.3 
23 mu_0       0.5      1.47   0.704        0            21.6 
24 mu_0       0.6      1.24   0.972        0             6.03
25 mu_0       0.7      1.08   0.826        0             4.53
26 mu_0       0.8      0.975  0.388        0             7.23
27 mu_0       0.9      1.42   0.0117       0            25.3 
[1] "Total run time was 167.198 seconds"
