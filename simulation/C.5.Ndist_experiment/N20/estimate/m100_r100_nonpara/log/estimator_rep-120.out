
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0319  0.3323  0.6163  1.0000  5.0000 
[1] "event indicator table: "

   0    1 
1173  827 
[1] "treatment indicator table: "

   0    1 
 767 1233 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 161.906 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.370 0.0600
 2 mu         0.1   0.2 0.452 0.0713
 3 mu         0.1   0.3 0.464 0.0770
 4 mu         0.1   0.4 0.500 0.0979
 5 mu         0.1   0.5 0.597 0.100 
 6 mu         0.2   0.1 0.351 0.0490
 7 mu         0.2   0.2 0.427 0.0681
 8 mu         0.2   0.3 0.453 0.0781
 9 mu         0.2   0.4 0.521 0.0858
10 mu         0.2   0.5 0.598 0.0866
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.06         0.757 0.00000709     11.7 
 2 mu         0.2      1.10         0.919 0.00259        12.7 
 3 mu         0.3      0.992        0.917 0.0482          4.63
 4 mu         0.4      0.970        0.958 0.252           1.77
 5 mu         0.5      0.993        0.994 0.638           1.27
 6 mu         0.6      1.00         1.00  0.794           1.34
 7 mu         0.7      1.00         0.999 0.818           1.26
 8 mu         0.8      1.01         1.01  0.642           1.34
 9 mu         0.9      0.996        1.01  0.391           1.56
10 mu_1       0.1      1.17         0.894 0.0000358      17.5 
11 mu_1       0.2      1.06         0.905 0.00664         9.57
12 mu_1       0.3      0.968        0.915 0.0846          2.50
13 mu_1       0.4      0.974        0.972 0.345           1.57
14 mu_1       0.5      0.998        1.01  0.707           1.31
15 mu_1       0.6      1.00         1.00  0.819           1.35
16 mu_1       0.7      1.00         1.00  0.829           1.23
17 mu_1       0.8      1.01         1.01  0.604           1.36
18 mu_1       0.9      0.995        1.01  0.391           1.60
19 mu_0       0.1      1.05         0.725 0.00000389     11.0 
20 mu_0       0.2      1.11         0.907 0.00157        13.5 
21 mu_0       0.3      1.00         0.920 0.0326          5.54
22 mu_0       0.4      0.967        0.944 0.190           1.91
23 mu_0       0.5      0.988        0.992 0.532           1.33
24 mu_0       0.6      1.00         1.00  0.758           1.31
25 mu_0       0.7      0.999        0.997 0.792           1.34
26 mu_0       0.8      1.01         1.00  0.786           1.27
27 mu_0       0.9      1.01         1.01  0.399           1.47
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.78  0.000000326  5.04e-19     95.6 
 2 mu         0.2       2.51  0.000574     5.28e-13    103.  
 3 mu         0.3       1.70  0.0286       1.76e- 9     36.0 
 4 mu         0.4       1.41  0.301        5.54e- 7     16.6 
 5 mu         0.5       1.36  0.678        4.81e- 5     16.7 
 6 mu         0.6       1.20  0.938        1.84e- 3      7.39
 7 mu         0.7       1.11  0.809        2.21e- 5      4.49
 8 mu         0.8       1.28  0.510        3.35e- 8      8.54
 9 mu         0.9       1.62  0.0139       3.64e-13     22.0 
10 mu_1       0.1       2.82  0.00000197   5.04e-18    143.  
11 mu_1       0.2       2.27  0.00175      2.64e-12     77.5 
12 mu_1       0.3       1.48  0.0585       5.86e- 9     18.0 
13 mu_1       0.4       1.39  0.331        1.39e- 6     18.7 
14 mu_1       0.5       1.33  0.657        9.61e- 5     15.0 
15 mu_1       0.6       1.16  0.927        4.63e- 4      5.54
16 mu_1       0.7       1.12  0.779        4.74e- 6      4.49
17 mu_1       0.8       1.30  0.414        6.28e- 9      9.08
18 mu_1       0.9       1.64  0.00978      6.07e-14     23.2 
19 mu_0       0.1       1.66  0.000000144  0            90.3 
20 mu_0       0.2       2.57  0.000281     0           110.  
21 mu_0       0.3       1.80  0.0158       0            43.7 
22 mu_0       0.4       1.42  0.192        0            15.2 
23 mu_0       0.5       1.38  0.635        0            18.3 
24 mu_0       0.6       1.25  0.753        0            10.2 
25 mu_0       0.7       1.10  0.850        0             4.49
26 mu_0       0.8       1.16  0.548        0             6.41
27 mu_0       0.9       1.51  0.0304       0            11.9 
[1] "Total run time was 165.922 seconds"
