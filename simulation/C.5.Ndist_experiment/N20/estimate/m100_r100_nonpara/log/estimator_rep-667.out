
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0359  0.3404  0.6206  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
1202  798 
[1] "treatment indicator table: "

   0    1 
 718 1282 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 157.803 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.403 0.0910
 2 mu         0.1   0.2 0.523 0.126 
 3 mu         0.1   0.3 0.542 0.134 
 4 mu         0.1   0.4 0.588 0.141 
 5 mu         0.1   0.5 0.665 0.160 
 6 mu         0.2   0.1 0.368 0.0452
 7 mu         0.2   0.2 0.473 0.0656
 8 mu         0.2   0.3 0.508 0.0586
 9 mu         0.2   0.4 0.555 0.0569
10 mu         0.2   0.5 0.612 0.0749
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.993        0.192 0.00000555     22.1 
 2 mu         0.2      0.990        0.789 0.00192         4.57
 3 mu         0.3      0.975        0.823 0.0338          2.67
 4 mu         0.4      0.982        0.972 0.167           1.72
 5 mu         0.5      0.993        0.997 0.404           1.35
 6 mu         0.6      0.989        0.983 0.658           1.21
 7 mu         0.7      0.986        0.977 0.723           1.21
 8 mu         0.8      0.990        0.997 0.528           1.21
 9 mu         0.9      0.992        0.962 0.0956          2.02
10 mu_1       0.1      0.961        0.412 0.0000279       6.84
11 mu_1       0.2      0.987        0.808 0.00488         3.77
12 mu_1       0.3      0.972        0.873 0.0586          2.43
13 mu_1       0.4      0.986        0.974 0.226           1.56
14 mu_1       0.5      0.994        1.00  0.469           1.33
15 mu_1       0.6      0.988        0.984 0.707           1.21
16 mu_1       0.7      0.986        0.983 0.721           1.19
17 mu_1       0.8      0.991        0.996 0.479           1.23
18 mu_1       0.9      0.992        0.953 0.0815          2.08
19 mu_0       0.1      0.997        0.167 0.00000306     24.5 
20 mu_0       0.2      0.991        0.754 0.00118         4.77
21 mu_0       0.3      0.976        0.839 0.0231          2.77
22 mu_0       0.4      0.979        0.953 0.128           1.89
23 mu_0       0.5      0.992        0.993 0.339           1.43
24 mu_0       0.6      0.991        0.995 0.584           1.27
25 mu_0       0.7      0.985        0.975 0.727           1.25
26 mu_0       0.8      0.988        0.993 0.695           1.18
27 mu_0       0.9      0.995        0.988 0.222           1.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.371 0.0000000418  9.24e-19     34.2 
 2 mu         0.2      1.42  0.000150      9.69e-13     83.0 
 3 mu         0.3      2.21  0.0115        3.22e- 9     61.6 
 4 mu         0.4      2.25  0.137         1.02e- 6     62.2 
 5 mu         0.5      1.69  0.578         8.81e- 5     27.7 
 6 mu         0.6      1.19  1.02          3.38e- 3      5.46
 7 mu         0.7      1.00  0.790         1.90e- 3      3.98
 8 mu         0.8      1.03  0.335         4.95e- 6      7.24
 9 mu         0.9      1.53  0.0102        1.21e-10     22.6 
10 mu_1       0.1      0.778 0.000000272   9.24e-18     68.3 
11 mu_1       0.2      1.83  0.000488      4.84e-12     83.0 
12 mu_1       0.3      2.38  0.0249        1.07e- 8     71.9 
13 mu_1       0.4      2.14  0.214         2.54e- 6     54.4 
14 mu_1       0.5      1.53  0.751         1.76e- 4     19.4 
15 mu_1       0.6      1.13  0.964         5.63e- 3      4.10
16 mu_1       0.7      0.989 0.772         5.44e- 4      4.25
17 mu_1       0.8      1.04  0.261         1.24e- 6      8.14
18 mu_1       0.9      1.58  0.00737       2.69e-11     23.9 
19 mu_0       0.1      0.326 0.0000000163  0            30.4 
20 mu_0       0.2      1.32  0.0000658     0            83.0 
21 mu_0       0.3      2.14  0.00574       0            57.2 
22 mu_0       0.4      2.32  0.0854        0            67.4 
23 mu_0       0.5      1.84  0.434         0            36.0 
24 mu_0       0.6      1.29  0.948         0             8.87
25 mu_0       0.7      1.03  0.809         0             3.98
26 mu_0       0.8      0.962 0.467         0             4.84
27 mu_0       0.9      1.08  0.0198        0            15.1 
[1] "Total run time was 162.377 seconds"
