
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05256 0.37413 0.64717 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
1172  828 
[1] "treatment indicator table: "

   0    1 
 755 1245 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 226.023 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.276 0.0786
 2 mu         0.1   0.2 0.307 0.0897
 3 mu         0.1   0.3 0.310 0.0816
 4 mu         0.1   0.4 0.311 0.0919
 5 mu         0.1   0.5 0.398 0.0751
 6 mu         0.2   0.1 0.304 0.0794
 7 mu         0.2   0.2 0.349 0.0949
 8 mu         0.2   0.3 0.362 0.0874
 9 mu         0.2   0.4 0.377 0.0882
10 mu         0.2   0.5 0.443 0.0785
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.767        0.337 0.00000938     20.4 
 2 mu         0.2      0.915        0.753 0.00330        22.1 
 3 mu         0.3      0.910        0.897 0.0594          7.97
 4 mu         0.4      0.939        0.954 0.269           1.83
 5 mu         0.5      0.979        0.976 0.580           1.43
 6 mu         0.6      1.00         0.990 0.762           1.25
 7 mu         0.7      1.00         1.00  0.714           1.21
 8 mu         0.8      1.00         0.995 0.696           1.39
 9 mu         0.9      0.977        0.924 0.409           1.94
10 mu_1       0.1      0.900        0.573 0.0000473      30.6 
11 mu_1       0.2      0.923        0.808 0.00844        16.6 
12 mu_1       0.3      0.912        0.913 0.101           4.21
13 mu_1       0.4      0.952        0.954 0.358           1.55
14 mu_1       0.5      0.988        0.979 0.638           1.40
15 mu_1       0.6      1.00         1.00  0.788           1.24
16 mu_1       0.7      1.00         1.00  0.697           1.22
17 mu_1       0.8      1.00         0.995 0.678           1.42
18 mu_1       0.9      0.975        0.926 0.392           2.01
19 mu_0       0.1      0.752        0.297 0.00000517     19.2 
20 mu_0       0.2      0.913        0.719 0.00202        23.4 
21 mu_0       0.3      0.910        0.898 0.0406          9.58
22 mu_0       0.4      0.930        0.958 0.210           2.34
23 mu_0       0.5      0.971        0.978 0.520           1.46
24 mu_0       0.6      0.997        0.987 0.720           1.30
25 mu_0       0.7      1.00         1.00  0.752           1.22
26 mu_0       0.8      1.01         1.00  0.667           1.31
27 mu_0       0.9      0.993        0.974 0.535           1.55
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     293.   0.0000000604  4.67e-18  20668.  
 2 mu         0.2     143.   0.000217      4.89e-12   9922.  
 3 mu         0.3      31.6  0.0166        1.63e- 8   2018.  
 4 mu         0.4       5.35 0.237         5.13e- 6    224.  
 5 mu         0.5       1.79 0.829         4.45e- 4     13.1 
 6 mu         0.6       1.38 0.919         1.42e- 3      6.34
 7 mu         0.7       1.26 1.21          1.70e- 5      4.13
 8 mu         0.8       1.26 0.703         2.57e- 8      6.90
 9 mu         0.9       1.58 0.0221        2.80e-13     56.7 
10 mu_1       0.1     294.   0.000000393   4.67e-17  20668.  
11 mu_1       0.2      73.6  0.000705      2.45e-11   4961.  
12 mu_1       0.3      12.3  0.0359        5.42e- 8    673.  
13 mu_1       0.4       2.73 0.311         1.28e- 5     55.9 
14 mu_1       0.5       1.56 1.02          8.90e- 4      9.13
15 mu_1       0.6       1.35 1.02          3.56e- 4      6.34
16 mu_1       0.7       1.25 1.17          3.64e- 6      4.72
17 mu_1       0.8       1.26 0.561         4.83e- 9      7.16
18 mu_1       0.9       1.63 0.0160        4.66e-14     63.0 
19 mu_0       0.1     293.   0.0000000235  0         20668.  
20 mu_0       0.2     161.   0.0000949     0         11163.  
21 mu_0       0.3      39.9  0.00829       0          2595.  
22 mu_0       0.4       7.10 0.138         0           336.  
23 mu_0       0.5       2.03 0.650         0            23.6 
24 mu_0       0.6       1.44 0.931         0             6.34
25 mu_0       0.7       1.28 1.12          0             5.38
26 mu_0       0.8       1.23 1.01          0             6.90
27 mu_0       0.9       1.17 0.0665        0            10.3 
[1] "Total run time was 229.815 seconds"
