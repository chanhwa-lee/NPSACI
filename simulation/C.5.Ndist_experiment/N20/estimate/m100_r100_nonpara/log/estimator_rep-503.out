
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03155 0.35714 0.61473 1.00000 5.00000 
[1] "event indicator table: "

   0    1 
1179  821 
[1] "treatment indicator table: "

   0    1 
 723 1277 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 188.948 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.367 0.0754
 2 mu         0.1   0.2 0.368 0.0645
 3 mu         0.1   0.3 0.391 0.0581
 4 mu         0.1   0.4 0.444 0.0813
 5 mu         0.1   0.5 0.461 0.0705
 6 mu         0.2   0.1 0.397 0.0744
 7 mu         0.2   0.2 0.408 0.0536
 8 mu         0.2   0.3 0.448 0.0378
 9 mu         0.2   0.4 0.514 0.0619
10 mu         0.2   0.5 0.533 0.0499
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.788        0.409 0.0000170       6.25
 2 mu         0.2      0.955        0.892 0.00551         3.30
 3 mu         0.3      1.01         0.987 0.0883          2.30
 4 mu         0.4      1.00         0.976 0.354           1.74
 5 mu         0.5      0.993        1.00  0.701           1.34
 6 mu         0.6      0.994        0.997 0.770           1.18
 7 mu         0.7      0.996        0.988 0.764           1.22
 8 mu         0.8      0.999        1.00  0.560           1.53
 9 mu         0.9      1.02         1.01  0.375           1.98
10 mu_1       0.1      0.894        0.691 0.0000851       5.16
11 mu_1       0.2      0.997        0.971 0.0139          3.01
12 mu_1       0.3      1.01         0.971 0.149           2.05
13 mu_1       0.4      0.999        0.998 0.443           1.62
14 mu_1       0.5      0.992        1.00  0.722           1.29
15 mu_1       0.6      0.994        0.992 0.779           1.20
16 mu_1       0.7      0.997        0.993 0.739           1.26
17 mu_1       0.8      0.999        1.00  0.550           1.56
18 mu_1       0.9      1.03         1.01  0.344           2.04
19 mu_0       0.1      0.777        0.374 0.00000942      6.54
20 mu_0       0.2      0.945        0.889 0.00343         3.37
21 mu_0       0.3      1.01         0.990 0.0621          2.43
22 mu_0       0.4      1.01         0.975 0.295           1.85
23 mu_0       0.5      0.994        1.00  0.607           1.44
24 mu_0       0.6      0.993        1.00  0.756           1.21
25 mu_0       0.7      0.996        0.988 0.821           1.21
26 mu_0       0.8      0.996        0.991 0.600           1.42
27 mu_0       0.9      0.996        0.984 0.534           1.76
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     115.   0.0000000382  2.41e-17   8566.  
 2 mu         0.2      48.6  0.000137      1.12e-11   4112.  
 3 mu         0.3      10.2  0.0105        2.18e- 8    836.  
 4 mu         0.4       2.21 0.150         4.41e- 6     92.7 
 5 mu         0.5       1.31 0.722         2.55e- 4     10.7 
 6 mu         0.6       1.22 1.20          3.08e- 3      5.61
 7 mu         0.7       1.24 1.00          1.52e- 5      4.12
 8 mu         0.8       1.22 0.658         7.82e- 9      5.17
 9 mu         0.9       1.26 0.0238        1.68e-14     18.0 
10 mu_1       0.1     102.   0.000000248   2.29e-16   8566.  
11 mu_1       0.2      23.3  0.000446      5.33e-11   2056.  
12 mu_1       0.3       4.02 0.0227        6.89e- 8    279.  
13 mu_1       0.4       1.50 0.244         1.05e- 5     23.2 
14 mu_1       0.5       1.26 0.915         4.85e- 4      8.44
15 mu_1       0.6       1.22 1.23          2.56e- 4      4.67
16 mu_1       0.7       1.24 1.04          1.08e- 6      4.42
17 mu_1       0.8       1.21 0.535         4.89e-10      5.56
18 mu_1       0.9       1.27 0.0172        9.32e-16     19.0 
19 mu_0       0.1     116.   0.0000000149  1.34e-18   8566.  
20 mu_0       0.2      54.9  0.0000601     7.01e-13   4626.  
21 mu_0       0.3      12.8  0.00525       1.55e- 9   1075.  
22 mu_0       0.4       2.68 0.0876        3.68e- 7    139.  
23 mu_0       0.5       1.37 0.471         2.55e- 5     13.9 
24 mu_0       0.6       1.22 1.07          8.15e- 4      7.01
25 mu_0       0.7       1.23 1.17          4.80e- 5      3.74
26 mu_0       0.8       1.24 0.667         3.71e- 8      5.17
27 mu_0       0.9       1.21 0.0832        1.59e-13     10.3 
[1] "Total run time was 192.411 seconds"
