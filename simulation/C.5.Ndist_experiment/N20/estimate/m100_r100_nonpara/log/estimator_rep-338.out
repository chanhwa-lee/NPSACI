
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 2000"
[1] "cluster size dist'n: "

 20 
100 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04338 0.41447 0.67063 1.00000 5.59710 
[1] "event indicator table: "

   0    1 
1196  804 
[1] "treatment indicator table: "

   0    1 
 716 1284 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 1000
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 209.725 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.210 0.0346
 2 mu         0.1   0.2 0.208 0.0526
 3 mu         0.1   0.3 0.279 0.0713
 4 mu         0.1   0.4 0.347 0.0743
 5 mu         0.1   0.5 0.382 0.0985
 6 mu         0.2   0.1 0.254 0.0281
 7 mu         0.2   0.2 0.288 0.0358
 8 mu         0.2   0.3 0.366 0.0441
 9 mu         0.2   0.4 0.411 0.0482
10 mu         0.2   0.5 0.458 0.0642
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.686        0.240 0.00000565      6.73
 2 mu         0.2      0.854        0.750 0.00191         4.22
 3 mu         0.3      0.917        0.946 0.0334          2.40
 4 mu         0.4      0.959        0.993 0.170           1.79
 5 mu         0.5      0.985        0.988 0.450           1.56
 6 mu         0.6      1.00         1.01  0.718           1.26
 7 mu         0.7      1.01         1.01  0.799           1.34
 8 mu         0.8      1.01         0.989 0.685           1.67
 9 mu         0.9      0.985        0.969 0.398           2.48
10 mu_1       0.1      0.820        0.475 0.0000284       6.81
11 mu_1       0.2      0.888        0.880 0.00485         3.56
12 mu_1       0.3      0.935        0.981 0.0581          2.31
13 mu_1       0.4      0.969        0.984 0.233           1.81
14 mu_1       0.5      0.990        0.988 0.532           1.47
15 mu_1       0.6      1.01         1.01  0.739           1.22
16 mu_1       0.7      1.02         1.01  0.790           1.36
17 mu_1       0.8      1.01         0.982 0.670           1.75
18 mu_1       0.9      0.983        0.982 0.363           2.51
19 mu_0       0.1      0.671        0.210 0.00000312      6.72
20 mu_0       0.2      0.845        0.700 0.00118         4.39
21 mu_0       0.3      0.910        0.952 0.0229          2.44
22 mu_0       0.4      0.952        0.994 0.128           1.91
23 mu_0       0.5      0.980        0.987 0.366           1.66
24 mu_0       0.6      0.999        0.997 0.646           1.34
25 mu_0       0.7      1.01         1.01  0.788           1.29
26 mu_0       0.8      1.02         1.00  0.743           1.40
27 mu_0       0.9      1.01         0.978 0.576           2.25
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.51 0.0000000308  7.85e-19    104.  
 2 mu         0.2       3.52 0.000111      8.23e-13    113.  
 3 mu         0.3       4.05 0.00847       2.74e- 9    185.  
 4 mu         0.4       3.05 0.121         8.63e- 7    120.  
 5 mu         0.5       1.89 0.615         7.49e- 5     35.7 
 6 mu         0.6       1.34 0.820         2.87e- 3      9.86
 7 mu         0.7       1.15 1.14          2.77e- 4      3.74
 8 mu         0.8       1.15 0.648         4.19e- 7      6.37
 9 mu         0.9       1.16 0.0268        4.55e-12     12.1 
10 mu_1       0.1       2.62 0.000000201   7.85e-18    156.  
11 mu_1       0.2       4.07 0.000360      4.11e-12    158.  
12 mu_1       0.3       3.92 0.0183        9.12e- 9    185.  
13 mu_1       0.4       2.65 0.197         2.16e- 6     90.0 
14 mu_1       0.5       1.68 0.745         1.50e- 4     21.4 
15 mu_1       0.6       1.28 0.922         4.78e- 3      8.21
16 mu_1       0.7       1.14 1.14          5.93e- 5      3.74
17 mu_1       0.8       1.15 0.530         7.86e- 8      6.77
18 mu_1       0.9       1.16 0.0193        7.59e-13     13.5 
19 mu_0       0.1       1.39 0.0000000120  0            98.4 
20 mu_0       0.2       3.38 0.0000485     0           120.  
21 mu_0       0.3       4.11 0.00423       0           185.  
22 mu_0       0.4       3.31 0.0707        0           140.  
23 mu_0       0.5       2.10 0.433         0            49.9 
24 mu_0       0.6       1.43 0.702         0            12.3 
25 mu_0       0.7       1.18 0.959         0             4.32
26 mu_0       0.8       1.13 0.794         0             4.78
27 mu_0       0.9       1.17 0.0593        0            10.8 
[1] "Total run time was 213.756 seconds"
