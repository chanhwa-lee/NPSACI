
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7515"
[1] "cluster size dist'n: "

51 52 53 54 55 57 58 60 62 63 65 66 68 69 70 71 72 73 74 75 76 77 78 79 81 83 
 1  1  2  3  5  1  5  3  3  2  3  1  3  3  1  4  2  3  2  3  3  1  2  2  3  4 
84 86 87 88 89 90 91 93 94 95 96 97 98 99 
 4  5  3  2  3  2  1  5  2  1  1  2  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03177 0.36246 0.61011 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
4535 2980 
[1] "treatment indicator table: "

   0    1 
2800 4715 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3763
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3752
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 415.685 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.271 0.0664
 2 mu         0.1   0.2 0.347 0.0670
 3 mu         0.1   0.3 0.380 0.0880
 4 mu         0.1   0.4 0.433 0.0938
 5 mu         0.1   0.5 0.507 0.0813
 6 mu         0.2   0.1 0.294 0.0358
 7 mu         0.2   0.2 0.379 0.0318
 8 mu         0.2   0.3 0.423 0.0441
 9 mu         0.2   0.4 0.485 0.0533
10 mu         0.2   0.5 0.556 0.0443
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.859        0.276 0.00000148      7.56
 2 mu         0.2      0.970        0.846 0.0333          2.65
 3 mu         0.3      0.981        0.946 0.333           1.96
 4 mu         0.4      0.983        0.948 0.458           1.57
 5 mu         0.5      1.04         1.03  0.496           1.71
 6 mu         0.6      1.03         1.03  0.679           1.47
 7 mu         0.7      1.01         1.00  0.553           1.47
 8 mu         0.8      0.963        0.964 0.418           1.60
 9 mu         0.9      0.979        0.950 0.0179          3.00
10 mu_1       0.1      0.873        0.421 0.00000421      5.92
11 mu_1       0.2      0.981        0.901 0.0479          2.73
12 mu_1       0.3      0.976        0.920 0.349           1.81
13 mu_1       0.4      0.987        0.965 0.440           1.59
14 mu_1       0.5      1.04         1.03  0.506           1.73
15 mu_1       0.6      1.02         1.03  0.674           1.44
16 mu_1       0.7      1.01         1.01  0.543           1.45
17 mu_1       0.8      0.961        0.966 0.420           1.59
18 mu_1       0.9      0.979        0.951 0.0165          3.06
19 mu_0       0.1      0.857        0.259 0.00000118      7.88
20 mu_0       0.2      0.967        0.848 0.0297          2.63
21 mu_0       0.3      0.983        0.954 0.321           2.03
22 mu_0       0.4      0.981        0.939 0.469           1.57
23 mu_0       0.5      1.03         1.02  0.486           1.68
24 mu_0       0.6      1.03         1.04  0.687           1.51
25 mu_0       0.7      1.01         1.00  0.579           1.50
26 mu_0       0.8      0.971        0.958 0.412           1.65
27 mu_0       0.9      0.983        0.971 0.0298          2.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.249     2.16e-27  6.48e-68     24.8 
 2 mu         0.2      0.853     1.40e-14  1.72e-44     31.3 
 3 mu         0.3      1.96      2.62e- 8  5.50e-31     40.1 
 4 mu         0.4      1.57      2.30e- 4  1.39e-21     20.8 
 5 mu         0.5      0.896     3.52e- 2  1.75e-14      7.29
 6 mu         0.6      1.06      7.40e- 2  2.73e-10     12.2 
 7 mu         0.7      1.26      2.53e- 1  5.09e-17     10.1 
 8 mu         0.8      1.44      3.70e- 2  1.17e-27     12.7 
 9 mu         0.9      1.54      1.09e- 7  8.36e-47     32.9 
10 mu_1       0.1      0.375     1.38e-26  5.95e-67     37.2 
11 mu_1       0.2      0.934     4.61e-14  7.89e-44     26.6 
12 mu_1       0.3      2.04      5.88e- 8  1.68e-30     41.5 
13 mu_1       0.4      1.47      3.92e- 4  3.18e-21     18.5 
14 mu_1       0.5      0.893     3.73e- 2  3.22e-14      7.72
15 mu_1       0.6      1.07      9.41e- 2  6.83e-11     12.2 
16 mu_1       0.7      1.27      2.66e- 1  1.67e-17     10.6 
17 mu_1       0.8      1.45      3.05e- 2  3.36e-28     13.0 
18 mu_1       0.9      1.56      8.15e- 8  2.14e-47     33.6 
19 mu_0       0.1      0.235     8.88e-28  5.86e-69     23.4 
20 mu_0       0.2      0.833     5.98e-15  1.75e-45     33.2 
21 mu_0       0.3      1.93      1.23e- 8  6.39e-32     39.5 
22 mu_0       0.4      1.64      1.23e- 4  1.88e-22     22.4 
23 mu_0       0.5      0.899     2.55e- 2  2.85e-15      7.01
24 mu_0       0.6      1.05      5.36e- 2  5.81e-10     12.2 
25 mu_0       0.7      1.23      3.05e- 1  1.31e-16      9.13
26 mu_0       0.8      1.44      3.53e- 2  4.51e-27     11.3 
27 mu_0       0.9      1.36      3.57e- 7  6.44e-46     26.8 
[1] "Total run time was 419.423 seconds"
