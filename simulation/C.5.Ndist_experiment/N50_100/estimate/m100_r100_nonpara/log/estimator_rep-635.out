
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7355"
[1] "cluster size dist'n: "

50 51 52 54 55 56 57 58 59 60 61 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 
 1  1  2  3  5  2  5  1  4  3  1  2  2  2  2  4  1  4  2  1  2  3  2  2  2  2 
78 81 82 83 84 85 86 87 89 90 91 92 93 95 97 98 99 
 3  3  4  1  1  2  2  3  1  1  2  2  1  5  1  3  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03286 0.35992 0.61676 1.00000 5.28368 
[1] "event indicator table: "

   0    1 
4416 2939 
[1] "treatment indicator table: "

   0    1 
2588 4767 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3649
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 386.198 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.446 0.0795
 2 mu         0.1   0.2 0.551 0.0983
 3 mu         0.1   0.3 0.579 0.110 
 4 mu         0.1   0.4 0.648 0.114 
 5 mu         0.1   0.5 0.708 0.128 
 6 mu         0.2   0.1 0.403 0.0375
 7 mu         0.2   0.2 0.501 0.0438
 8 mu         0.2   0.3 0.530 0.0475
 9 mu         0.2   0.4 0.594 0.0440
10 mu         0.2   0.5 0.656 0.0556
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.09         0.220  1.21e- 9     12.4 
 2 mu         0.2      1.08         0.983  1.19e- 3      3.83
 3 mu         0.3      0.972        0.877  2.53e- 1      2.60
 4 mu         0.4      0.987        0.944  4.65e- 1      2.10
 5 mu         0.5      0.996        0.993  4.93e- 1      1.58
 6 mu         0.6      1.01         1.02   6.32e- 1      1.54
 7 mu         0.7      0.990        0.998  6.84e- 1      1.33
 8 mu         0.8      1.00         1.02   6.12e- 1      1.34
 9 mu         0.9      1.02         1.02   3.15e- 1      1.63
10 mu_1       0.1      1.11         0.364  4.55e- 9     11.8 
11 mu_1       0.2      1.07         0.967  2.27e- 3      3.31
12 mu_1       0.3      0.973        0.900  3.22e- 1      2.44
13 mu_1       0.4      0.988        0.937  4.63e- 1      2.08
14 mu_1       0.5      0.997        0.996  5.06e- 1      1.53
15 mu_1       0.6      1.01         1.02   6.35e- 1      1.53
16 mu_1       0.7      0.989        0.997  6.84e- 1      1.34
17 mu_1       0.8      1.00         1.03   6.09e- 1      1.34
18 mu_1       0.9      1.02         1.02   3.01e- 1      1.65
19 mu_0       0.1      1.09         0.204  8.38e-10     12.5 
20 mu_0       0.2      1.09         0.972  9.23e- 4      3.96
21 mu_0       0.3      0.971        0.873  2.22e- 1      2.67
22 mu_0       0.4      0.986        0.951  4.66e- 1      2.12
23 mu_0       0.5      0.996        0.986  4.79e- 1      1.62
24 mu_0       0.6      1.01         1.01   6.28e- 1      1.57
25 mu_0       0.7      0.992        1.00   6.65e- 1      1.35
26 mu_0       0.8      0.996        1.01   6.14e- 1      1.37
27 mu_0       0.9      1.02         1.00   4.40e- 1      1.50
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0215     1.67e-28  6.85e-79      1.99
 2 mu         0.2     1.18       2.60e-15  6.61e-52     87.7 
 3 mu         0.3     1.01       2.54e- 8  2.40e-36     27.6 
 4 mu         0.4     1.13       2.69e- 4  1.64e-25     19.8 
 5 mu         0.5     1.22       1.90e- 2  2.51e-17     12.3 
 6 mu         0.6     0.940      6.61e- 2  6.76e-11      6.08
 7 mu         0.7     0.915      8.29e- 2  1.73e-16     11.2 
 8 mu         0.8     0.999      4.88e- 2  1.77e-26     10.3 
 9 mu         0.9     1.09       1.86e- 6  1.87e-44     12.0 
10 mu_1       0.1     0.0444     1.03e-27  6.29e-78      4.07
11 mu_1       0.2     1.25       8.22e-15  3.04e-51     90.0 
12 mu_1       0.3     1.02       5.35e- 8  7.36e-36     27.5 
13 mu_1       0.4     1.13       4.45e- 4  3.76e-25     18.2 
14 mu_1       0.5     1.21       2.17e- 2  4.61e-17     11.6 
15 mu_1       0.6     0.935      5.49e- 2  1.04e-10      6.22
16 mu_1       0.7     0.913      7.79e- 2  5.07e-17     12.0 
17 mu_1       0.8     1.01       3.92e- 2  4.54e-27      9.63
18 mu_1       0.9     1.09       1.38e- 6  4.62e-45     12.0 
19 mu_0       0.1     0.0190     7.09e-29  6.15e-80      1.75
20 mu_0       0.2     1.16       1.19e-15  6.67e-53     87.2 
21 mu_0       0.3     1.00       1.34e- 8  2.77e-37     27.6 
22 mu_0       0.4     1.13       1.51e- 4  2.21e-26     20.9 
23 mu_0       0.5     1.23       1.50e- 2  4.06e-18     13.0 
24 mu_0       0.6     0.949      9.23e- 2  1.03e-11      5.87
25 mu_0       0.7     0.918      5.56e- 2  4.58e-16      9.35
26 mu_0       0.8     0.955      6.47e- 2  7.04e-26     12.8 
27 mu_0       0.9     1.12       6.17e- 6  1.46e-43     12.0 
[1] "Total run time was 389.608 seconds"
