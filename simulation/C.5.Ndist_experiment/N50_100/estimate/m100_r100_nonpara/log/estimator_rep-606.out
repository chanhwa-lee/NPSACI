
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7284"
[1] "cluster size dist'n: "

50 51 52 53 54 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 
 1  3  1  3  3  3  1  2  3  4  2  1  6  3  4  2  1  2  2  2  1  3  1  1  3  2 
77 79 80 81 82 85 86 87 88 89 90 91 92 93 94 96 97 98 99 
 4  5  1  2  1  1  3  1  2  4  1  2  1  2  1  2  2  2  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03823 0.36142 0.62086 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
4389 2895 
[1] "treatment indicator table: "

   0    1 
2668 4616 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3701
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3583
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 491.249 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.308 0.0602
 2 mu         0.1   0.2 0.356 0.0687
 3 mu         0.1   0.3 0.390 0.0656
 4 mu         0.1   0.4 0.451 0.0793
 5 mu         0.1   0.5 0.475 0.0804
 6 mu         0.2   0.1 0.326 0.0431
 7 mu         0.2   0.2 0.395 0.0481
 8 mu         0.2   0.3 0.443 0.0395
 9 mu         0.2   0.4 0.520 0.0518
10 mu         0.2   0.5 0.551 0.0516
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.736       0.0898  1.71e-12      8.85
 2 mu         0.2      0.925       0.807   1.69e- 4      6.16
 3 mu         0.3      1.01        1.03    1.18e- 1      1.82
 4 mu         0.4      1.03        1.01    4.21e- 1      2.18
 5 mu         0.5      1.01        0.994   5.36e- 1      1.42
 6 mu         0.6      0.998       0.992   6.61e- 1      1.32
 7 mu         0.7      1.00        0.992   7.25e- 1      1.33
 8 mu         0.8      1.01        1.00    6.91e- 1      1.63
 9 mu         0.9      0.928       0.892   1.59e- 1      2.14
10 mu_1       0.1      0.765       0.158   6.63e-12     10.3 
11 mu_1       0.2      0.941       0.821   3.29e- 4      5.76
12 mu_1       0.3      1.01        1.02    1.51e- 1      1.90
13 mu_1       0.4      1.03        1.01    4.12e- 1      2.11
14 mu_1       0.5      1.01        0.990   5.40e- 1      1.37
15 mu_1       0.6      0.999       0.995   6.50e- 1      1.30
16 mu_1       0.7      1.00        0.995   7.18e- 1      1.35
17 mu_1       0.8      1.01        1.00    6.83e- 1      1.64
18 mu_1       0.9      0.928       0.884   1.50e- 1      2.16
19 mu_0       0.1      0.733       0.0825  1.16e-12      8.68
20 mu_0       0.2      0.921       0.815   1.28e- 4      6.26
21 mu_0       0.3      1.01        1.03    1.04e- 1      1.84
22 mu_0       0.4      1.03        1.02    4.27e- 1      2.22
23 mu_0       0.5      1.01        1.00    5.31e- 1      1.47
24 mu_0       0.6      0.997       0.999   6.78e- 1      1.33
25 mu_0       0.7      1.00        0.992   7.06e- 1      1.32
26 mu_0       0.8      1.01        1.01    6.94e- 1      1.58
27 mu_0       0.9      0.936       0.942   2.41e- 1      1.95
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.56      2.27e-27  5.03e-67    155.  
 2 mu         0.2      4.78      1.11e-14  3.76e-45    423.  
 3 mu         0.3      0.799     7.27e- 8  2.06e-32     21.5 
 4 mu         0.4      1.13      8.75e- 4  2.00e-23     18.5 
 5 mu         0.5      1.00      8.60e- 2  1.65e-16      7.06
 6 mu         0.6      1.13      2.43e- 1  2.29e-12      8.05
 7 mu         0.7      1.16      4.19e- 1  5.41e-20      7.36
 8 mu         0.8      1.22      3.36e- 2  3.26e-31      9.60
 9 mu         0.9      1.90      2.19e- 7  5.11e-51     41.5 
10 mu_1       0.1      2.50      1.44e-26  4.90e-66    249.  
11 mu_1       0.2      4.02      3.40e-14  1.83e-44    340.  
12 mu_1       0.3      0.777     1.52e- 7  6.68e-32     19.7 
13 mu_1       0.4      1.15      1.37e- 3  4.86e-23     18.0 
14 mu_1       0.5      1.00      1.02e- 1  3.20e-16      7.34
15 mu_1       0.6      1.14      2.69e- 1  6.11e-13      7.94
16 mu_1       0.7      1.16      4.50e- 1  1.24e-20      7.41
17 mu_1       0.8      1.22      2.79e- 2  6.54e-32     10.3 
18 mu_1       0.9      1.92      1.51e- 7  9.11e-52     42.3 
19 mu_0       0.1      1.45      9.20e-28  1.49e-68    145.  
20 mu_0       0.2      4.97      5.29e-15  1.25e-46    444.  
21 mu_0       0.3      0.808     3.88e- 8  7.84e-34     22.3 
22 mu_0       0.4      1.12      5.46e- 4  8.87e-25     18.8 
23 mu_0       0.5      1.00      5.93e- 2  8.77e-18      6.79
24 mu_0       0.6      1.12      1.84e- 1  4.23e-12      8.22
25 mu_0       0.7      1.16      4.06e- 1  1.52e-19      7.25
26 mu_0       0.8      1.23      5.95e- 2  1.37e-30      8.69
27 mu_0       0.9      1.71      8.54e- 7  4.29e-50     34.6 
[1] "Total run time was 495.485 seconds"
