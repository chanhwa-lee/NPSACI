
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7544"
[1] "cluster size dist'n: "

50 51 53 54 55 56 58 59 60 62 63 64 65 66 67 68 69 70 71 72 74 75 76 77 78 79 
 1  4  2  2  1  1  1  1  2  2  2  1  5  4  2  2  1  2  1  4  3  5  2  4  4  4 
80 81 82 83 84 85 86 87 89 90 91 92 93 95 96 97 98 99 
 4  1  2  2  1  2  1  1  2  3  1  5  3  4  2  1  1  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03138 0.32473 0.60101 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
4482 3062 
[1] "treatment indicator table: "

   0    1 
2891 4653 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3796
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3748
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 391.074 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.376 0.0608
 2 mu         0.1   0.2 0.496 0.103 
 3 mu         0.1   0.3 0.502 0.0797
 4 mu         0.1   0.4 0.506 0.0715
 5 mu         0.1   0.5 0.562 0.0777
 6 mu         0.2   0.1 0.322 0.0463
 7 mu         0.2   0.2 0.436 0.0648
 8 mu         0.2   0.3 0.464 0.0742
 9 mu         0.2   0.4 0.482 0.0774
10 mu         0.2   0.5 0.526 0.0802
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.877        0.823  0.000570      3.50
 2 mu         0.2      0.983        0.960  0.187         2.02
 3 mu         0.3      1.00         0.984  0.525         1.54
 4 mu         0.4      1.01         1.01   0.577         1.54
 5 mu         0.5      1.02         1.04   0.666         1.36
 6 mu         0.6      0.990        0.994  0.555         1.35
 7 mu         0.7      0.980        0.962  0.641         1.51
 8 mu         0.8      0.984        0.981  0.561         1.56
 9 mu         0.9      1.03         0.993  0.492         2.08
10 mu_1       0.1      0.924        0.850  0.00142       3.16
11 mu_1       0.2      0.989        0.951  0.179         1.93
12 mu_1       0.3      0.999        0.980  0.535         1.48
13 mu_1       0.4      1.02         1.03   0.574         1.54
14 mu_1       0.5      1.02         1.03   0.664         1.36
15 mu_1       0.6      0.988        0.996  0.540         1.36
16 mu_1       0.7      0.981        0.968  0.645         1.51
17 mu_1       0.8      0.984        0.985  0.561         1.54
18 mu_1       0.9      1.03         0.993  0.479         2.06
19 mu_0       0.1      0.871        0.806  0.000476      3.53
20 mu_0       0.2      0.982        0.974  0.189         2.04
21 mu_0       0.3      1.00         0.980  0.518         1.57
22 mu_0       0.4      1.01         0.995  0.579         1.54
23 mu_0       0.5      1.02         1.03   0.654         1.39
24 mu_0       0.6      0.992        1.00   0.577         1.34
25 mu_0       0.7      0.980        0.958  0.631         1.50
26 mu_0       0.8      0.984        0.975  0.557         1.62
27 mu_0       0.9      1.03         0.996  0.562         2.18
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.969     9.37e-28  5.36e-75     80.7 
 2 mu         0.2      0.823     9.03e-15  1.82e-49     21.6 
 3 mu         0.3      0.850     4.32e- 8  9.94e-35     15.1 
 4 mu         0.4      0.884     3.62e- 4  1.88e-24      8.51
 5 mu         0.5      0.846     4.14e- 2  1.13e-16      6.10
 6 mu         0.6      0.920     4.49e- 2  5.29e-15     10.5 
 7 mu         0.7      1.00      8.72e- 2  8.64e-22      8.31
 8 mu         0.8      1.24      1.18e- 2  4.11e-32      9.99
 9 mu         0.9      1.74      5.64e- 9  1.29e-53     28.9 
10 mu_1       0.1      0.901     6.09e-27  4.96e-74     65.1 
11 mu_1       0.2      0.829     2.78e-14  8.41e-49     20.2 
12 mu_1       0.3      0.867     9.29e- 8  3.06e-34     15.9 
13 mu_1       0.4      0.879     5.96e- 4  4.34e-24      9.37
14 mu_1       0.5      0.845     4.38e- 2  2.09e-16      5.59
15 mu_1       0.6      0.927     3.22e- 2  7.10e-16     10.7 
16 mu_1       0.7      1.01      8.71e- 2  9.95e-23      8.22
17 mu_1       0.8      1.26      9.33e- 3  1.12e-32     10.7 
18 mu_1       0.9      1.73      3.89e- 9  3.14e-54     29.1 
19 mu_0       0.1      0.976     3.65e-28  4.48e-76     82.4 
20 mu_0       0.2      0.822     4.33e-15  1.71e-50     22.9 
21 mu_0       0.3      0.843     2.19e- 8  1.07e-35     14.7 
22 mu_0       0.4      0.887     2.07e- 4  2.36e-25      7.93
23 mu_0       0.5      0.846     3.82e- 2  1.70e-17      6.83
24 mu_0       0.6      0.910     5.36e- 2  1.21e-14     10.2 
25 mu_0       0.7      0.988     5.82e- 2  2.65e-21      8.52
26 mu_0       0.8      1.18      2.18e- 2  1.61e-31      9.85
27 mu_0       0.9      1.86      2.14e- 8  1.01e-52     27.4 
[1] "Total run time was 394.905 seconds"
