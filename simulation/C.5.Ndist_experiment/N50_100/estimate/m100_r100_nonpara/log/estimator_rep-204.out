
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7263"
[1] "cluster size dist'n: "

50 51 52 53 54 55 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 76 77 
 3  1  4  1  2  1  5  3  3  4  3  2  3  1  1  1  2  3  3  1  1  1  4  1  5  3 
78 79 80 82 83 84 85 86 87 88 89 90 91 93 95 96 97 98 99 
 5  1  2  2  1  2  3  2  1  2  3  2  1  2  1  2  1  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02934 0.32169 0.59560 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
4172 3091 
[1] "treatment indicator table: "

   0    1 
2972 4291 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3741
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3522
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 360.892 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.463 0.0618
 2 mu         0.1   0.2 0.554 0.0772
 3 mu         0.1   0.3 0.599 0.0980
 4 mu         0.1   0.4 0.717 0.0999
 5 mu         0.1   0.5 0.784 0.116 
 6 mu         0.2   0.1 0.360 0.0295
 7 mu         0.2   0.2 0.447 0.0356
 8 mu         0.2   0.3 0.507 0.0400
 9 mu         0.2   0.4 0.568 0.0416
10 mu         0.2   0.5 0.622 0.0572
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.09         0.438 0.0000793      6.07
 2 mu         0.2      0.974        0.881 0.0984         3.81
 3 mu         0.3      0.951        0.917 0.259          1.72
 4 mu         0.4      0.975        0.955 0.323          1.75
 5 mu         0.5      1.01         0.983 0.569          1.62
 6 mu         0.6      1.01         0.998 0.581          1.55
 7 mu         0.7      1.00         1.00  0.607          1.38
 8 mu         0.8      1.03         1.01  0.422          1.71
 9 mu         0.9      1.04         0.946 0.0875         2.59
10 mu_1       0.1      1.11         0.569 0.000212       5.87
11 mu_1       0.2      0.966        0.902 0.122          3.51
12 mu_1       0.3      0.951        0.923 0.294          1.66
13 mu_1       0.4      0.980        0.964 0.359          1.78
14 mu_1       0.5      1.01         0.994 0.561          1.57
15 mu_1       0.6      1.01         1.00  0.579          1.57
16 mu_1       0.7      1.00         1.01  0.615          1.37
17 mu_1       0.8      1.04         0.999 0.419          1.72
18 mu_1       0.9      1.04         0.933 0.0825         2.63
19 mu_0       0.1      1.09         0.435 0.0000646      6.11
20 mu_0       0.2      0.976        0.876 0.0924         3.89
21 mu_0       0.3      0.952        0.924 0.241          1.75
22 mu_0       0.4      0.971        0.957 0.299          1.73
23 mu_0       0.5      1.01         0.983 0.577          1.67
24 mu_0       0.6      1.01         1.00  0.583          1.52
25 mu_0       0.7      1.00         1.00  0.586          1.41
26 mu_0       0.8      1.03         1.01  0.432          1.67
27 mu_0       0.9      1.04         0.976 0.132          2.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.19      1.67e-24  8.06e-70    416.  
 2 mu         0.2      0.916     5.38e-13  1.52e-45     64.2 
 3 mu         0.3      0.814     2.47e- 6  1.44e-31     18.7 
 4 mu         0.4      1.23      6.51e- 3  7.36e-22     16.7 
 5 mu         0.5      1.30      2.11e- 1  1.51e-14     16.7 
 6 mu         0.6      1.48      2.55e- 1  8.23e-14     20.1 
 7 mu         0.7      1.03      1.17e- 1  2.37e-22      7.27
 8 mu         0.8      0.962     2.03e- 3  4.83e-35     12.7 
 9 mu         0.9      2.49      5.12e-10  1.33e-57     53.1 
10 mu_1       0.1      2.56      1.06e-23  7.35e-69    250.  
11 mu_1       0.2      0.816     1.67e-12  6.92e-45     60.2 
12 mu_1       0.3      0.877     4.67e- 6  4.36e-31     17.0 
13 mu_1       0.4      1.23      8.27e- 3  1.68e-21     16.9 
14 mu_1       0.5      1.33      2.46e- 1  2.76e-14     17.8 
15 mu_1       0.6      1.45      2.94e- 1  2.57e-14     18.7 
16 mu_1       0.7      1.03      1.09e- 1  6.35e-23      7.14
17 mu_1       0.8      0.971     1.51e- 3  1.13e-35     12.7 
18 mu_1       0.9      2.50      3.57e-10  2.77e-58     53.0 
19 mu_0       0.1      4.38      5.49e-25  7.96e-71    435.  
20 mu_0       0.2      0.941     2.59e-13  1.69e-46     65.2 
21 mu_0       0.3      0.787     1.53e- 6  1.82e-32     19.4 
22 mu_0       0.4      1.23      4.30e- 3  1.09e-22     16.5 
23 mu_0       0.5      1.27      1.87e- 1  2.69e-15     15.6 
24 mu_0       0.6      1.52      2.16e- 1  1.67e-13     22.1 
25 mu_0       0.7      1.04      1.37e- 1  6.42e-22      7.59
26 mu_0       0.8      0.925     4.12e- 3  1.96e-34     12.5 
27 mu_0       0.9      2.46      1.91e- 9  1.08e-56     54.5 
[1] "Total run time was 363.875 seconds"
