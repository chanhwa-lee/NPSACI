
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7442"
[1] "cluster size dist'n: "

50 51 52 53 54 55 56 57 58 60 61 63 64 65 67 68 69 70 71 72 73 74 75 76 77 78 
 2  4  1  1  2  1  3  1  4  4  4  2  3  1  1  2  3  3  3  2  1  3  1  1  1  1 
79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 96 99 
 1  2  1  1  5  3  3  3  2  2  2  4  4  2  2  5  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01423 0.30437 0.57587 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
4445 2997 
[1] "treatment indicator table: "

   0    1 
2911 4531 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3748
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3694
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 362.536 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.479 0.0900
 2 mu         0.1   0.2 0.556 0.100 
 3 mu         0.1   0.3 0.614 0.110 
 4 mu         0.1   0.4 0.653 0.119 
 5 mu         0.1   0.5 0.666 0.118 
 6 mu         0.2   0.1 0.353 0.0621
 7 mu         0.2   0.2 0.416 0.0768
 8 mu         0.2   0.3 0.493 0.0563
 9 mu         0.2   0.4 0.554 0.0646
10 mu         0.2   0.5 0.575 0.0628
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         0.125  1.59e-10      8.62
 2 mu         0.2      1.00         0.892  4.61e- 4      3.52
 3 mu         0.3      1.03         1.01   1.51e- 1      1.94
 4 mu         0.4      1.00         1.02   2.50e- 1      1.78
 5 mu         0.5      0.976        0.961  4.47e- 1      1.40
 6 mu         0.6      0.993        1.02   4.94e- 1      1.41
 7 mu         0.7      0.976        0.993  5.58e- 1      1.57
 8 mu         0.8      0.993        0.996  4.84e- 1      1.49
 9 mu         0.9      0.990        0.943  9.26e- 2      2.48
10 mu_1       0.1      0.997        0.231  5.78e-10      6.05
11 mu_1       0.2      1.02         0.907  8.54e- 4      3.62
12 mu_1       0.3      1.03         1.01   1.95e- 1      1.90
13 mu_1       0.4      0.996        1.01   2.56e- 1      1.75
14 mu_1       0.5      0.976        0.960  4.63e- 1      1.38
15 mu_1       0.6      0.993        1.01   5.04e- 1      1.40
16 mu_1       0.7      0.976        0.990  5.59e- 1      1.59
17 mu_1       0.8      0.992        0.999  4.75e- 1      1.48
18 mu_1       0.9      0.991        0.937  8.53e- 2      2.50
19 mu_0       0.1      1.00         0.115  1.12e-10      9.00
20 mu_0       0.2      1.00         0.895  3.62e- 4      3.50
21 mu_0       0.3      1.03         1.00   1.33e- 1      1.96
22 mu_0       0.4      1.00         1.02   2.46e- 1      1.81
23 mu_0       0.5      0.976        0.957  4.31e- 1      1.44
24 mu_0       0.6      0.994        1.02   4.78e- 1      1.43
25 mu_0       0.7      0.975        0.970  5.56e- 1      1.52
26 mu_0       0.8      0.994        0.984  5.21e- 1      1.55
27 mu_0       0.9      0.980        0.995  1.58e- 1      2.27
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.00      3.45e-28  1.02e-61    151.  
 2 mu         0.2      1.00      1.71e-14  8.77e-39     55.5 
 3 mu         0.3      0.657     8.90e- 8  4.27e-26     16.7 
 4 mu         0.4      0.844     9.09e- 4  2.10e-17      9.36
 5 mu         0.5      1.39      8.99e- 2  1.37e-11     24.5 
 6 mu         0.6      1.29      3.52e- 1  4.97e-18     11.7 
 7 mu         0.7      1.23      1.44e- 1  1.29e-26     11.0 
 8 mu         0.8      1.43      4.84e- 3  5.25e-39     15.3 
 9 mu         0.9      0.768     5.88e-10  1.43e-60     17.4 
10 mu_1       0.1      3.26      2.11e-27  8.49e-61    170.  
11 mu_1       0.2      0.826     5.20e-14  3.79e-38     51.6 
12 mu_1       0.3      0.682     1.83e- 7  1.23e-25     17.6 
13 mu_1       0.4      0.899     1.41e- 3  4.53e-17     11.2 
14 mu_1       0.5      1.39      7.64e- 2  2.71e-12     23.6 
15 mu_1       0.6      1.29      3.68e- 1  8.18e-19     11.7 
16 mu_1       0.7      1.23      1.18e- 1  1.82e-27     11.0 
17 mu_1       0.8      1.44      3.82e- 3  6.49e-40     16.0 
18 mu_1       0.9      0.740     4.13e-10  1.57e-61     17.0 
19 mu_0       0.1      2.97      1.48e-28  1.89e-62    152.  
20 mu_0       0.2      1.04      8.34e-15  1.50e-39     56.5 
21 mu_0       0.3      0.646     5.00e- 8  8.31e-27     16.4 
22 mu_0       0.4      0.808     5.33e- 4  4.77e-18      8.11
23 mu_0       0.5      1.39      8.42e- 2  1.49e-11     25.5 
24 mu_0       0.6      1.29      3.11e- 1  1.12e-17     11.7 
25 mu_0       0.7      1.23      1.86e- 1  3.88e-26     10.8 
26 mu_0       0.8      1.38      8.93e- 3  2.37e-38     12.8 
27 mu_0       0.9      1.02      2.26e- 9  1.29e-59     21.2 
[1] "Total run time was 365.682 seconds"
