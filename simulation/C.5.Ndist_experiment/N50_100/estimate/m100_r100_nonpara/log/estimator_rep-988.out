
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7556"
[1] "cluster size dist'n: "

50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 69 70 71 72 74 75 76 77 
 1  3  1  3  1  1  3  2  1  1  1  2  2  3  4  5  2  1  2  3  2  1  4  1  2  2 
79 80 81 83 84 85 86 88 89 90 93 94 95 97 98 99 
 1  4  3  3  1  2  3  6  2  2  4  2  2  3  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03111 0.34618 0.61017 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
4516 3040 
[1] "treatment indicator table: "

   0    1 
2626 4930 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3769
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3787
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 78"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 393.289 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.301 0.0714
 2 mu         0.1   0.2 0.364 0.0790
 3 mu         0.1   0.3 0.444 0.0996
 4 mu         0.1   0.4 0.526 0.111 
 5 mu         0.1   0.5 0.542 0.109 
 6 mu         0.2   0.1 0.327 0.0402
 7 mu         0.2   0.2 0.396 0.0409
 8 mu         0.2   0.3 0.472 0.0594
 9 mu         0.2   0.4 0.564 0.0647
10 mu         0.2   0.5 0.592 0.0613
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.794        0.260  8.57e-10     12.6 
 2 mu         0.2      0.986        0.852  7.55e- 4      5.71
 3 mu         0.3      1.02         0.999  9.68e- 2      2.58
 4 mu         0.4      1.04         0.999  3.30e- 1      3.09
 5 mu         0.5      1.02         1.00   5.85e- 1      1.84
 6 mu         0.6      0.992        0.990  5.17e- 1      1.43
 7 mu         0.7      0.967        0.955  5.81e- 1      1.41
 8 mu         0.8      0.982        0.956  4.80e- 1      1.61
 9 mu         0.9      1.04         1.02   2.89e- 1      2.03
10 mu_1       0.1      0.811        0.412  2.93e- 9     10.9 
11 mu_1       0.2      1.00         0.872  1.31e- 3      4.81
12 mu_1       0.3      1.01         0.991  1.19e- 1      2.53
13 mu_1       0.4      1.05         0.995  3.46e- 1      3.20
14 mu_1       0.5      1.01         0.991  5.79e- 1      1.87
15 mu_1       0.6      0.992        0.981  5.16e- 1      1.45
16 mu_1       0.7      0.966        0.962  5.62e- 1      1.42
17 mu_1       0.8      0.983        0.954  4.91e- 1      1.61
18 mu_1       0.9      1.04         1.02   2.79e- 1      2.05
19 mu_0       0.1      0.792        0.237  6.26e-10     12.8 
20 mu_0       0.2      0.982        0.855  6.16e- 4      5.94
21 mu_0       0.3      1.02         1.01   8.74e- 2      2.61
22 mu_0       0.4      1.04         1.00   3.20e- 1      3.01
23 mu_0       0.5      1.02         0.996  5.68e- 1      1.95
24 mu_0       0.6      0.993        0.990  5.19e- 1      1.45
25 mu_0       0.7      0.969        0.988  5.83e- 1      1.40
26 mu_0       0.8      0.979        0.957  4.36e- 1      1.64
27 mu_0       0.9      1.02         0.990  3.81e- 1      1.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0155     3.11e-30  6.26e-87      1.55
 2 mu         0.2     0.628      7.93e-16  2.76e-59     46.9 
 3 mu         0.3     1.50       5.23e- 9  3.83e-43     52.5 
 4 mu         0.4     0.763      8.30e- 5  1.02e-31     17.8 
 5 mu         0.5     0.790      1.84e- 2  7.03e-23      6.74
 6 mu         0.6     0.816      1.92e- 1  1.08e-15      7.03
 7 mu         0.7     1.17       2.34e- 1  4.62e-22      9.74
 8 mu         0.8     2.25       4.17e- 2  1.41e-34     35.6 
 9 mu         0.9     1.77       5.47e- 7  7.78e-57     60.3 
10 mu_1       0.1     0.0295     2.10e-29  6.20e-86      2.94
11 mu_1       0.2     0.676      2.64e-15  1.36e-58     44.4 
12 mu_1       0.3     1.53       1.17e- 8  1.26e-42     56.4 
13 mu_1       0.4     0.733      1.39e- 4  2.53e-31     14.4 
14 mu_1       0.5     0.794      2.39e- 2  1.39e-22      6.30
15 mu_1       0.6     0.821      2.19e- 1  1.79e-15      7.32
16 mu_1       0.7     1.20       2.66e- 1  1.25e-22     10.5 
17 mu_1       0.8     2.27       3.29e- 2  3.34e-35     35.6 
18 mu_1       0.9     1.78       3.88e- 7  1.64e-57     62.0 
19 mu_0       0.1     0.0140     1.12e-30  7.48e-89      1.40
20 mu_0       0.2     0.616      3.32e-16  3.71e-61     47.5 
21 mu_0       0.3     1.48       2.46e- 9  5.88e-45     50.8 
22 mu_0       0.4     0.782      4.60e- 5  1.84e-33     20.1 
23 mu_0       0.5     0.786      1.05e- 2  1.51e-24      7.17
24 mu_0       0.6     0.809      1.48e- 1  2.91e-17      6.59
25 mu_0       0.7     1.10       1.50e- 1  1.25e-21      9.55
26 mu_0       0.8     2.20       5.92e- 2  5.72e-34     35.6 
27 mu_0       0.9     1.65       1.99e- 6  6.31e-56     45.5 
[1] "Total run time was 396.453 seconds"
