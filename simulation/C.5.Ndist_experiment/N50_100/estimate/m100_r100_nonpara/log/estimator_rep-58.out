
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7317"
[1] "cluster size dist'n: "

50 51 52 53 54 56 57 58 59 60 61 62 63 65 66 67 68 69 71 72 74 75 76 77 78 79 
 2  2  5  2  1  1  2  2  5  3  2  5  3  1  3  2  2  2  2  2  1  2  4  5  1  1 
80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 96 97 98 
 2  1  3  1  1  2  2  2  3  1  2  5  3  3  3  1  1  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02662 0.32727 0.58714 0.98925 5.38579 
[1] "event indicator table: "

   0    1 
4326 2991 
[1] "treatment indicator table: "

   0    1 
2812 4505 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3569
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3748
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 626.743 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.441 0.0769
 2 mu         0.1   0.2 0.514 0.0922
 3 mu         0.1   0.3 0.626 0.106 
 4 mu         0.1   0.4 0.656 0.111 
 5 mu         0.1   0.5 0.674 0.118 
 6 mu         0.2   0.1 0.401 0.0428
 7 mu         0.2   0.2 0.474 0.0440
 8 mu         0.2   0.3 0.557 0.0419
 9 mu         0.2   0.4 0.606 0.0534
10 mu         0.2   0.5 0.630 0.0520
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      1.09         0.556 0.00000188     15.6 
 2 mu         0.2      1.07         0.985 0.0545          3.27
 3 mu         0.3      0.998        0.965 0.195           1.86
 4 mu         0.4      1.01         1.00  0.555           1.49
 5 mu         0.5      1.01         0.988 0.522           1.48
 6 mu         0.6      1.00         0.985 0.637           1.68
 7 mu         0.7      0.982        0.958 0.684           1.48
 8 mu         0.8      0.971        0.939 0.523           1.63
 9 mu         0.9      1.06         1.03  0.165           2.14
10 mu_1       0.1      1.13         0.769 0.00000553     11.2 
11 mu_1       0.2      1.04         0.973 0.0625          2.98
12 mu_1       0.3      1.00         0.970 0.202           1.76
13 mu_1       0.4      1.01         0.997 0.563           1.48
14 mu_1       0.5      1.01         0.998 0.516           1.45
15 mu_1       0.6      1.00         0.971 0.630           1.68
16 mu_1       0.7      0.981        0.945 0.692           1.46
17 mu_1       0.8      0.972        0.946 0.515           1.63
18 mu_1       0.9      1.05         1.02  0.153           2.18
19 mu_0       0.1      1.09         0.524 0.00000148     16.1 
20 mu_0       0.2      1.07         0.969 0.0481          3.34
21 mu_0       0.3      0.996        0.990 0.192           1.91
22 mu_0       0.4      1.01         1.01  0.550           1.54
23 mu_0       0.5      1.01         0.987 0.528           1.51
24 mu_0       0.6      1.00         0.998 0.624           1.68
25 mu_0       0.7      0.984        0.964 0.664           1.52
26 mu_0       0.8      0.968        0.927 0.538           1.61
27 mu_0       0.9      1.06         1.05  0.269           1.92
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      3.84      2.57e-28  2.85e-84    146.  
 2 mu         0.2      2.60      4.42e-16  1.57e-57    107.  
 3 mu         0.3      1.28      2.31e- 8  6.45e-42     42.4 
 4 mu         0.4      1.14      3.22e- 4  7.28e-31     16.6 
 5 mu         0.5      1.38      2.10e- 2  2.56e-22     10.8 
 6 mu         0.6      1.16      2.63e- 1  3.88e-16      6.08
 7 mu         0.7      1.90      3.14e- 1  9.87e-25     18.8 
 8 mu         0.8      1.52      5.33e- 2  7.85e-38     14.2 
 9 mu         0.9      0.838     2.74e- 6  6.76e-61     30.9 
10 mu_1       0.1      4.92      1.87e-27  2.82e-83    178.  
11 mu_1       0.2      2.06      1.35e-15  7.75e-57     80.5 
12 mu_1       0.3      1.26      4.71e- 8  2.13e-41     43.4 
13 mu_1       0.4      1.17      2.73e- 4  1.80e-30     16.8 
14 mu_1       0.5      1.37      1.88e- 2  5.06e-22     11.2 
15 mu_1       0.6      1.17      2.39e- 1  7.89e-17      6.23
16 mu_1       0.7      1.91      3.06e- 1  2.12e-25     19.0 
17 mu_1       0.8      1.51      4.73e- 2  1.48e-38     14.7 
18 mu_1       0.9      0.839     1.94e- 6  1.13e-61     32.5 
19 mu_0       0.1      3.72      7.82e-29  3.52e-86    143.  
20 mu_0       0.2      2.73      2.16e-16  2.18e-59    114.  
21 mu_0       0.3      1.29      1.29e- 8  1.02e-43     42.0 
22 mu_0       0.4      1.11      2.76e- 4  1.35e-32     16.4 
23 mu_0       0.5      1.39      2.06e- 2  5.68e-24     10.5 
24 mu_0       0.6      1.15      2.52e- 1  6.34e-17      6.45
25 mu_0       0.7      1.87      2.97e- 1  2.80e-24     18.1 
26 mu_0       0.8      1.54      9.58e- 2  3.34e-37     12.0 
27 mu_0       0.9      0.833     9.49e- 6  5.74e-60     16.6 
[1] "Total run time was 629.94 seconds"
