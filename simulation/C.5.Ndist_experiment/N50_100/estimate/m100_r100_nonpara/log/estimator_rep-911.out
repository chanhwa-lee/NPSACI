
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7597"
[1] "cluster size dist'n: "

50 52 53 54 56 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 
 3  1  2  1  2  1  1  2  4  2  5  1  2  4  1  2  3  2  4  3  1  1  3  1  1  3 
79 80 81 82 83 84 86 87 88 90 92 93 94 95 96 97 98 99 
 4  1  2  4  2  1  3  1  1  3  2  4  1  5  4  2  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04181 0.35906 0.62392 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
4430 3167 
[1] "treatment indicator table: "

   0    1 
2814 4783 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3799
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3798
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 385.527 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.302 0.0792
 2 mu         0.1   0.2 0.341 0.0798
 3 mu         0.1   0.3 0.422 0.105 
 4 mu         0.1   0.4 0.440 0.104 
 5 mu         0.1   0.5 0.447 0.105 
 6 mu         0.2   0.1 0.357 0.0575
 7 mu         0.2   0.2 0.427 0.0570
 8 mu         0.2   0.3 0.519 0.0760
 9 mu         0.2   0.4 0.554 0.0746
10 mu         0.2   0.5 0.570 0.0743
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.628       0.0218  7.63e-13      8.72
 2 mu         0.2      0.935       0.829   9.34e- 6      6.17
 3 mu         0.3      0.931       0.907   1.37e- 2      2.42
 4 mu         0.4      0.966       0.960   2.93e- 1      2.45
 5 mu         0.5      1.03        1.02    3.52e- 1      1.97
 6 mu         0.6      1.01        0.988   6.58e- 1      1.56
 7 mu         0.7      0.992       0.986   6.00e- 1      1.43
 8 mu         0.8      1.05        1.01    4.88e- 1      2.05
 9 mu         0.9      1.01        0.920   2.55e- 1      2.97
10 mu_1       0.1      0.706       0.0410  3.24e-12     12.1 
11 mu_1       0.2      0.941       0.870   2.03e- 5      4.33
12 mu_1       0.3      0.934       0.884   2.03e- 2      2.71
13 mu_1       0.4      0.971       0.963   2.94e- 1      2.28
14 mu_1       0.5      1.03        1.02    3.61e- 1      2.03
15 mu_1       0.6      1.00        0.994   6.62e- 1      1.50
16 mu_1       0.7      0.991       0.982   6.05e- 1      1.41
17 mu_1       0.8      1.05        1.01    4.92e- 1      2.09
18 mu_1       0.9      1.01        0.916   2.43e- 1      2.96
19 mu_0       0.1      0.619       0.0196  4.87e-13      8.35
20 mu_0       0.2      0.933       0.804   6.62e- 6      6.63
21 mu_0       0.3      0.930       0.915   1.09e- 2      2.29
22 mu_0       0.4      0.963       0.967   2.83e- 1      2.57
23 mu_0       0.5      1.03        1.01    3.43e- 1      1.92
24 mu_0       0.6      1.01        0.982   6.19e- 1      1.64
25 mu_0       0.7      0.992       0.991   5.88e- 1      1.47
26 mu_0       0.8      1.04        1.01    4.74e- 1      1.89
27 mu_0       0.9      1.03        0.945   3.58e- 1      3.08
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.206     8.62e-29  3.64e-77      19.7
 2 mu         0.2      3.22      2.28e-15  3.51e-50     221. 
 3 mu         0.3      1.93      1.42e- 8  1.27e-34      68.8
 4 mu         0.4      2.23      2.46e- 4  8.70e-24      50.7
 5 mu         0.5      2.22      6.67e- 2  1.33e-15      54.0
 6 mu         0.6      2.02      1.91e- 1  5.76e-10      48.8
 7 mu         0.7      1.67      2.33e- 1  2.75e-17      15.3
 8 mu         0.8      1.58      4.55e- 2  1.62e-28      13.9
 9 mu         0.9      7.53      9.81e- 8  6.53e-49     579. 
10 mu_1       0.1      0.392     5.63e-28  3.34e-76      37.2
11 mu_1       0.2      3.29      7.24e-15  1.61e-49     208. 
12 mu_1       0.3      1.86      3.33e- 8  3.91e-34      54.6
13 mu_1       0.4      2.22      4.13e- 4  2.00e-23      46.4
14 mu_1       0.5      2.22      8.15e- 2  2.45e-15      54.0
15 mu_1       0.6      2.00      1.91e- 1  2.48e-10      46.3
16 mu_1       0.7      1.65      2.21e- 1  1.01e-17      14.9
17 mu_1       0.8      1.59      4.61e- 2  5.23e-29      14.2
18 mu_1       0.9      7.63      7.08e- 8  1.87e-49     591. 
19 mu_0       0.1      0.185     3.10e-29  3.26e-78      17.8
20 mu_0       0.2      3.20      1.04e-15  3.54e-51     224. 
21 mu_0       0.3      1.95      6.02e- 9  1.47e-35      74.9
22 mu_0       0.4      2.23      1.46e- 4  1.17e-24      53.6
23 mu_0       0.5      2.21      4.83e- 2  2.15e-16      54.0
24 mu_0       0.6      2.05      1.82e- 1  7.25e-10      52.5
25 mu_0       0.7      1.71      3.02e- 1  6.80e-17      16.2
26 mu_0       0.8      1.51      5.43e- 2  6.02e-28      12.9
27 mu_0       0.9      6.62      3.22e- 7  4.84e-48     468. 
[1] "Total run time was 389.762 seconds"
