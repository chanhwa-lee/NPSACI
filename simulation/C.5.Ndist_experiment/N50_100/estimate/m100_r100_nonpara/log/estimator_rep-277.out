
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7231"
[1] "cluster size dist'n: "

50 51 52 53 54 55 56 57 58 59 60 62 63 64 65 66 68 69 70 71 72 74 75 76 77 78 
 3  4  3  1  5  2  4  2  1  4  3  1  1  1  3  2  2  1  4  2  3  3  4  1  1  3 
81 82 83 84 85 86 87 88 89 90 91 92 94 95 96 97 99 
 3  2  1  3  1  3  3  4  1  1  2  1  3  2  1  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04036 0.37740 0.64938 1.00000 6.14090 
[1] "event indicator table: "

   0    1 
4283 2948 
[1] "treatment indicator table: "

   0    1 
2507 4724 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3556
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 415.209 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.289 0.0561
 2 mu         0.1   0.2 0.392 0.0764
 3 mu         0.1   0.3 0.389 0.0740
 4 mu         0.1   0.4 0.433 0.0824
 5 mu         0.1   0.5 0.467 0.103 
 6 mu         0.2   0.1 0.334 0.0318
 7 mu         0.2   0.2 0.452 0.0521
 8 mu         0.2   0.3 0.460 0.0335
 9 mu         0.2   0.4 0.514 0.0393
10 mu         0.2   0.5 0.558 0.0671
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.772       0.0980  9.53e-10      8.52
 2 mu         0.2      0.979       0.779   2.06e- 3      2.96
 3 mu         0.3      0.994       0.988   1.99e- 1      2.10
 4 mu         0.4      1.01        0.970   4.64e- 1      1.78
 5 mu         0.5      0.998       0.997   5.90e- 1      1.56
 6 mu         0.6      0.978       0.977   6.53e- 1      1.34
 7 mu         0.7      1.01        1.02    5.89e- 1      1.39
 8 mu         0.8      1.05        1.05    5.99e- 1      1.55
 9 mu         0.9      1.06        1.01    5.08e- 1      2.00
10 mu_1       0.1      0.890       0.184   3.09e- 9      9.48
11 mu_1       0.2      0.970       0.794   3.44e- 3      2.72
12 mu_1       0.3      0.999       0.995   2.21e- 1      2.00
13 mu_1       0.4      1.01        0.975   4.51e- 1      1.76
14 mu_1       0.5      0.998       1.01    6.07e- 1      1.55
15 mu_1       0.6      0.977       0.979   6.48e- 1      1.34
16 mu_1       0.7      1.01        1.03    5.78e- 1      1.39
17 mu_1       0.8      1.04        1.05    5.84e- 1      1.53
18 mu_1       0.9      1.06        1.01    4.92e- 1      1.99
19 mu_0       0.1      0.759       0.0882  7.16e-10      8.42
20 mu_0       0.2      0.981       0.783   1.72e- 3      3.09
21 mu_0       0.3      0.992       0.981   1.75e- 1      2.14
22 mu_0       0.4      1.01        0.976   4.73e- 1      1.79
23 mu_0       0.5      0.999       1.00    5.73e- 1      1.57
24 mu_0       0.6      0.979       0.982   6.62e- 1      1.33
25 mu_0       0.7      1.00        1.02    5.85e- 1      1.39
26 mu_0       0.8      1.05        1.03    6.61e- 1      1.61
27 mu_0       0.9      1.04        1.01    5.33e- 1      2.09
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0778     1.15e-26  4.87e-66      7.76
 2 mu         0.2     0.603      1.06e-14  1.28e-42     35.3 
 3 mu         0.3     0.613      3.01e- 8  1.40e-29     13.9 
 4 mu         0.4     0.819      1.75e- 4  1.45e-20     10.4 
 5 mu         0.5     1.11       3.51e- 2  1.81e-14      9.91
 6 mu         0.6     1.08       2.53e- 1  1.21e-10      6.41
 7 mu         0.7     0.870      2.10e- 1  2.37e-18     11.1 
 8 mu         0.8     1.07       1.13e- 1  4.77e-30      7.14
 9 mu         0.9     1.46       1.29e- 5  3.79e-51     41.7 
10 mu_1       0.1     0.139      6.72e-26  4.17e-65     13.9 
11 mu_1       0.2     0.616      3.42e-14  5.74e-42     31.5 
12 mu_1       0.3     0.640      6.48e- 8  4.17e-29     11.6 
13 mu_1       0.4     0.835      3.01e- 4  3.26e-20     11.1 
14 mu_1       0.5     1.13       3.82e- 2  3.52e-14     10.3 
15 mu_1       0.6     1.08       1.88e- 1  4.76e-11      6.27
16 mu_1       0.7     0.863      1.79e- 1  8.04e-19     10.8 
17 mu_1       0.8     1.08       1.13e- 1  1.41e-30      7.50
18 mu_1       0.9     1.46       9.55e- 6  9.99e-52     41.3 
19 mu_0       0.1     0.0710     4.71e-27  7.82e-67      7.08
20 mu_0       0.2     0.600      4.73e-15  1.68e-43     36.2 
21 mu_0       0.3     0.601      1.42e- 8  2.09e-30     15.1 
22 mu_0       0.4     0.808      9.10e- 5  1.05e-21     10.0 
23 mu_0       0.5     1.10       2.20e- 2  1.12e-15      9.91
24 mu_0       0.6     1.10       1.90e- 1  8.69e-11      6.80
25 mu_0       0.7     0.887      2.15e- 1  6.03e-18     11.7 
26 mu_0       0.8     1.01       9.47e- 2  1.82e-29      6.76
27 mu_0       0.9     1.48       4.34e- 5  2.89e-50     44.6 
[1] "Total run time was 418.609 seconds"
