
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7541"
[1] "cluster size dist'n: "

51 52 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 72 73 74 75 76 77 78 
 3  1  2  2  3  2  1  6  3  3  1  1  1  1  3  5  4  2  1  2  1  2  3  2  1  1 
80 82 83 84 85 86 87 88 89 90 91 92 93 95 96 97 98 99 
 1  1  3  3  3  2  2  2  4  1  1  3  1  3  5  1  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03856 0.35681 0.61480 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
4542 2999 
[1] "treatment indicator table: "

   0    1 
2727 4814 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3704
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3837
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 487.378 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.328 0.104 
 2 mu         0.1   0.2 0.423 0.138 
 3 mu         0.1   0.3 0.477 0.163 
 4 mu         0.1   0.4 0.526 0.171 
 5 mu         0.1   0.5 0.551 0.184 
 6 mu         0.2   0.1 0.348 0.0389
 7 mu         0.2   0.2 0.449 0.0547
 8 mu         0.2   0.3 0.515 0.0696
 9 mu         0.2   0.4 0.572 0.0675
10 mu         0.2   0.5 0.613 0.0744
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.809       0.0169  3.57e-10     21.2 
 2 mu         0.2      0.957       0.768   1.65e- 3      4.44
 3 mu         0.3      0.981       0.934   2.90e- 1      2.48
 4 mu         0.4      0.966       0.962   4.67e- 1      1.55
 5 mu         0.5      0.952       0.929   5.10e- 1      1.49
 6 mu         0.6      1.01        0.988   6.63e- 1      1.35
 7 mu         0.7      1.03        1.02    6.12e- 1      1.49
 8 mu         0.8      1.03        1.01    6.51e- 1      1.63
 9 mu         0.9      1.10        1.04    1.27e- 1      2.58
10 mu_1       0.1      0.852       0.0338  1.20e- 9     17.9 
11 mu_1       0.2      0.955       0.771   2.82e- 3      3.47
12 mu_1       0.3      0.983       0.930   3.18e- 1      2.47
13 mu_1       0.4      0.961       0.950   4.82e- 1      1.55
14 mu_1       0.5      0.954       0.931   5.30e- 1      1.50
15 mu_1       0.6      1.01        0.995   6.79e- 1      1.35
16 mu_1       0.7      1.03        1.02    6.16e- 1      1.47
17 mu_1       0.8      1.03        1.01    6.46e- 1      1.66
18 mu_1       0.9      1.10        1.04    1.20e- 1      2.59
19 mu_0       0.1      0.804       0.0150  2.63e-10     21.5 
20 mu_0       0.2      0.958       0.771   1.36e- 3      4.68
21 mu_0       0.3      0.981       0.928   2.78e- 1      2.48
22 mu_0       0.4      0.969       0.968   4.58e- 1      1.56
23 mu_0       0.5      0.950       0.932   4.90e- 1      1.50
24 mu_0       0.6      1.00        0.988   6.38e- 1      1.35
25 mu_0       0.7      1.03        1.03    6.03e- 1      1.53
26 mu_0       0.8      1.02        1.02    6.22e- 1      1.53
27 mu_0       0.9      1.07        1.03    1.98e- 1      2.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     13.7       4.95e-28  1.57e-70   1371.  
 2 mu         0.2      0.419     4.77e-15  2.96e-48     26.3 
 3 mu         0.3      0.827     4.15e- 8  3.18e-35     19.9 
 4 mu         0.4      0.734     3.73e- 4  5.59e-26      9.10
 5 mu         0.5      0.979     8.04e- 2  8.29e-19      8.71
 6 mu         0.6      1.29      5.68e- 1  6.92e-16      6.73
 7 mu         0.7      1.14      4.65e- 1  2.01e-23      5.27
 8 mu         0.8      1.25      3.15e- 2  3.16e-34     15.6 
 9 mu         0.9      1.35      9.91e- 8  6.18e-53     47.3 
10 mu_1       0.1     10.1       2.85e-27  1.57e-69   1008.  
11 mu_1       0.2      0.320     1.49e-14  1.48e-47     13.0 
12 mu_1       0.3      0.845     9.10e- 8  1.06e-34     18.1 
13 mu_1       0.4      0.733     5.95e- 4  1.40e-25      9.81
14 mu_1       0.5      1.00      9.71e- 2  1.66e-18      8.71
15 mu_1       0.6      1.29      5.06e- 1  8.48e-17      6.83
16 mu_1       0.7      1.14      5.44e- 1  2.11e-24      4.97
17 mu_1       0.8      1.25      2.47e- 2  2.91e-35     15.7 
18 mu_1       0.9      1.35      7.40e- 8  5.05e-54     47.7 
19 mu_0       0.1     14.1       2.19e-28  0          1411.  
20 mu_0       0.2      0.444     2.23e-15  0            30.4 
21 mu_0       0.3      0.819     2.03e- 8  0            20.7 
22 mu_0       0.4      0.734     2.25e- 4  0             8.95
23 mu_0       0.5      0.957     6.86e- 2  0             8.71
24 mu_0       0.6      1.28      6.90e- 1  0             6.80
25 mu_0       0.7      1.17      5.26e- 1  0             5.99
26 mu_0       0.8      1.23      5.86e- 2  0            15.0 
27 mu_0       0.9      1.34      1.88e- 7  0            43.5 
[1] "Total run time was 491.336 seconds"
