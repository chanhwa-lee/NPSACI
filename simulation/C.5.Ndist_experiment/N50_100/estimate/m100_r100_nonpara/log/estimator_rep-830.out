
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7500"
[1] "cluster size dist'n: "

50 51 52 53 54 57 58 60 61 62 63 64 65 66 67 68 69 70 72 73 74 75 76 77 78 79 
 1  2  1  2  7  1  1  4  2  1  2  2  4  2  2  2  3  1  1  3  3  3  5  3  3  1 
80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 
 1  2  1  1  2  3  1  1  2  2  4  3  2  3  2  2  1  1  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03106 0.35428 0.61018 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
4562 2938 
[1] "treatment indicator table: "

   0    1 
2598 4902 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3716
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3784
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 407.168 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.400 0.190 
 2 mu         0.1   0.2 0.468 0.191 
 3 mu         0.1   0.3 0.538 0.226 
 4 mu         0.1   0.4 0.549 0.228 
 5 mu         0.1   0.5 0.595 0.253 
 6 mu         0.2   0.1 0.375 0.0418
 7 mu         0.2   0.2 0.439 0.0491
 8 mu         0.2   0.3 0.510 0.0526
 9 mu         0.2   0.4 0.534 0.0611
10 mu         0.2   0.5 0.573 0.0591
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05        0.0372  1.16e-12     40.8 
 2 mu         0.2      1.08        0.908   1.05e- 4      8.11
 3 mu         0.3      1.01        0.931   1.33e- 1      2.52
 4 mu         0.4      0.948       0.927   5.34e- 1      1.68
 5 mu         0.5      0.963       0.948   4.60e- 1      1.68
 6 mu         0.6      0.983       0.977   6.46e- 1      1.33
 7 mu         0.7      0.987       0.993   6.57e- 1      1.35
 8 mu         0.8      1.02        1.03    6.10e- 1      1.45
 9 mu         0.9      0.953       0.904   1.75e- 1      2.03
10 mu_1       0.1      1.09        0.0738  4.50e-12     34.0 
11 mu_1       0.2      1.08        0.975   2.04e- 4      8.11
12 mu_1       0.3      0.995       0.920   1.73e- 1      2.24
13 mu_1       0.4      0.946       0.932   5.41e- 1      1.64
14 mu_1       0.5      0.966       0.963   4.56e- 1      1.70
15 mu_1       0.6      0.983       0.981   6.45e- 1      1.32
16 mu_1       0.7      0.988       0.993   6.53e- 1      1.38
17 mu_1       0.8      1.02        1.03    6.14e- 1      1.44
18 mu_1       0.9      0.951       0.903   1.65e- 1      2.05
19 mu_0       0.1      1.04        0.0334  7.91e-13     41.6 
20 mu_0       0.2      1.08        0.910   8.02e- 5      8.10
21 mu_0       0.3      1.01        0.939   1.15e- 1      2.81
22 mu_0       0.4      0.949       0.924   5.29e- 1      1.71
23 mu_0       0.5      0.961       0.945   4.64e- 1      1.65
24 mu_0       0.6      0.983       0.979   6.26e- 1      1.34
25 mu_0       0.7      0.984       0.981   6.68e- 1      1.36
26 mu_0       0.8      1.02        1.04    5.90e- 1      1.48
27 mu_0       0.9      0.967       0.961   2.65e- 1      1.93
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.25      3.49e-30  1.86e-88    525.  
 2 mu         0.2      5.58      2.12e-16  1.63e-60    446.  
 3 mu         0.3      0.675     3.70e- 9  3.40e-44     37.2 
 4 mu         0.4      0.760     1.46e- 4  1.21e-32     10.3 
 5 mu         0.5      1.34      3.43e- 2  1.04e-23     18.4 
 6 mu         0.6      1.22      1.81e- 1  1.93e-16      8.62
 7 mu         0.7      0.904     3.19e- 1  3.22e-22      7.25
 8 mu         0.8      1.19      5.08e- 2  3.36e-34     14.4 
 9 mu         0.9      1.11      1.63e- 6  2.92e-55     30.0 
10 mu_1       0.1      7.50      2.16e-29  1.84e-87    750.  
11 mu_1       0.2      4.45      6.93e-16  8.09e-60    319.  
12 mu_1       0.3      0.621     8.06e- 9  1.12e-43     28.0 
13 mu_1       0.4      0.782     2.41e- 4  3.00e-32      9.80
14 mu_1       0.5      1.38      4.47e- 2  2.06e-23     19.3 
15 mu_1       0.6      1.19      1.95e- 1  3.18e-16      8.00
16 mu_1       0.7      0.904     3.13e- 1  6.58e-23      7.62
17 mu_1       0.8      1.20      4.16e- 2  5.99e-35     13.9 
18 mu_1       0.9      1.11      1.18e- 6  4.64e-56     30.6 
19 mu_0       0.1      5.00      1.51e-30  2.19e-90    500.  
20 mu_0       0.2      5.86      9.19e-17  2.17e-62    478.  
21 mu_0       0.3      0.699     1.83e- 9  5.17e-46     41.1 
22 mu_0       0.4      0.745     8.24e- 5  2.15e-34     10.6 
23 mu_0       0.5      1.29      2.39e- 2  2.22e-25     17.6 
24 mu_0       0.6      1.27      1.82e- 1  5.12e-18      9.55
25 mu_0       0.7      0.904     2.26e- 1  9.21e-22      6.55
26 mu_0       0.8      1.18      7.38e- 2  1.44e-33     16.6 
27 mu_0       0.9      1.12      5.68e- 6  2.50e-54     24.3 
[1] "Total run time was 410.304 seconds"
