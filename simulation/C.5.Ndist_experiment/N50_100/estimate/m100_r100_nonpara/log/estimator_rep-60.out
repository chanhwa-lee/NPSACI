
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7526"
[1] "cluster size dist'n: "

50 51 52 54 55 56 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 77 78 
 1  2  5  1  1  2  1  1  2  4  3  2  1  1  2  5  1  1  5  1  3  3  3  1  3  3 
79 80 81 82 83 84 85 86 88 89 90 91 92 93 94 97 98 99 
 1  3  1  1  3  2  2  1  2  4  5  2  4  1  2  4  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03336 0.33536 0.59561 1.00000 6.03692 
[1] "event indicator table: "

   0    1 
4419 3107 
[1] "treatment indicator table: "

   0    1 
2907 4619 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3722
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3804
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 377.14 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.552 0.123 
 2 mu         0.1   0.2 0.707 0.160 
 3 mu         0.1   0.3 0.818 0.180 
 4 mu         0.1   0.4 0.905 0.200 
 5 mu         0.1   0.5 1.02  0.221 
 6 mu         0.2   0.1 0.286 0.0262
 7 mu         0.2   0.2 0.364 0.0325
 8 mu         0.2   0.3 0.432 0.0382
 9 mu         0.2   0.4 0.486 0.0448
10 mu         0.2   0.5 0.564 0.0550
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.78         0.281  3.09e-11     34.9 
 2 mu         0.2      0.978        0.841  2.44e- 4      4.50
 3 mu         0.3      0.950        0.936  9.28e- 2      2.37
 4 mu         0.4      0.968        0.971  3.73e- 1      1.54
 5 mu         0.5      0.996        1.00   5.05e- 1      1.55
 6 mu         0.6      0.979        0.980  6.19e- 1      1.33
 7 mu         0.7      1.04         1.02   7.00e- 1      1.50
 8 mu         0.8      1.03         1.03   5.69e- 1      1.45
 9 mu         0.9      0.942        0.918  9.03e- 2      2.00
10 mu_1       0.1      1.66         0.434  1.13e-10     28.5 
11 mu_1       0.2      0.967        0.896  4.52e- 4      4.21
12 mu_1       0.3      0.948        0.931  1.13e- 1      2.39
13 mu_1       0.4      0.971        0.975  3.81e- 1      1.51
14 mu_1       0.5      0.996        1.00   5.01e- 1      1.54
15 mu_1       0.6      0.979        0.987  6.18e- 1      1.32
16 mu_1       0.7      1.04         1.02   6.98e- 1      1.51
17 mu_1       0.8      1.03         1.03   5.55e- 1      1.44
18 mu_1       0.9      0.939        0.914  8.30e- 2      2.00
19 mu_0       0.1      1.80         0.264  2.18e-11     35.6 
20 mu_0       0.2      0.981        0.820  1.92e- 4      4.60
21 mu_0       0.3      0.951        0.929  8.41e- 2      2.36
22 mu_0       0.4      0.966        0.974  3.67e- 1      1.56
23 mu_0       0.5      0.997        1.00   5.08e- 1      1.57
24 mu_0       0.6      0.978        0.987  6.20e- 1      1.36
25 mu_0       0.7      1.03         1.02   7.05e- 1      1.49
26 mu_0       0.8      1.04         1.03   6.06e- 1      1.49
27 mu_0       0.9      0.962        0.935  1.56e- 1      2.01
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00136     2.06e-24  9.46e-80    0.0970
 2 mu         0.2    0.513       5.60e-13  1.03e-52   27.1   
 3 mu         0.3    1.65        4.80e- 7  4.26e-37   49.5   
 4 mu         0.4    1.27        1.68e- 3  3.39e-26   19.7   
 5 mu         0.5    0.913       7.92e- 2  6.24e-18    6.68  
 6 mu         0.6    0.764       1.38e- 1  2.10e-11    5.92  
 7 mu         0.7    1.20        8.59e- 2  3.29e-18   11.6   
 8 mu         0.8    1.11        2.57e- 2  3.36e-29    8.03  
 9 mu         0.9    1.85        9.63e- 8  6.01e-49   90.7   
10 mu_1       0.1    0.00313     1.25e-23  8.78e-79    0.222 
11 mu_1       0.2    0.638       1.81e-12  4.77e-52   31.0   
12 mu_1       0.3    1.72        9.76e- 7  1.32e-36   50.5   
13 mu_1       0.4    1.21        2.73e- 3  7.88e-26   16.2   
14 mu_1       0.5    0.896       6.76e- 2  1.16e-17    6.92  
15 mu_1       0.6    0.778       1.48e- 1  2.36e-11    6.20  
16 mu_1       0.7    1.22        7.13e- 2  1.06e-18   12.0   
17 mu_1       0.8    1.09        2.03e- 2  9.45e-30    7.58  
18 mu_1       0.9    1.90        7.05e- 8  1.50e-49   95.0   
19 mu_0       0.1    0.00116     9.06e-25  7.50e-81    0.0831
20 mu_0       0.2    0.482       2.48e-13  9.17e-54   26.1   
21 mu_0       0.3    1.62        2.66e- 7  4.35e-38   49.0   
22 mu_0       0.4    1.32        9.83e- 4  4.04e-27   22.1   
23 mu_0       0.5    0.930       6.98e- 2  8.91e-19    7.41  
24 mu_0       0.6    0.743       8.74e- 2  3.75e-12    5.50  
25 mu_0       0.7    1.16        1.06e- 1  8.51e-18   10.8   
26 mu_0       0.8    1.16        2.73e- 2  1.30e-28   10.0   
27 mu_0       0.9    1.38        3.28e- 7  4.66e-48   52.3   
[1] "Total run time was 380.281 seconds"
