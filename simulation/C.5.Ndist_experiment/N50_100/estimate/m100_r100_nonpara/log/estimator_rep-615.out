
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7283"
[1] "cluster size dist'n: "

50 52 53 54 55 57 58 59 60 61 62 63 64 65 66 67 68 70 71 72 73 74 75 76 78 79 
 2  5  1  2  4  1  5  2  2  4  4  2  4  4  1  1  3  1  2  3  1  2  3  2  1  4 
81 82 83 85 87 88 89 90 91 92 93 94 95 96 97 
 2  2  1  2  3  2  2  2  2  2  3  5  2  1  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0308  0.3406  0.6156  1.0000  6.2070 
[1] "event indicator table: "

   0    1 
4269 3014 
[1] "treatment indicator table: "

   0    1 
2779 4504 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3659
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 382.272 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.326 0.0999
 2 mu         0.1   0.2 0.369 0.0899
 3 mu         0.1   0.3 0.412 0.0850
 4 mu         0.1   0.4 0.425 0.0884
 5 mu         0.1   0.5 0.526 0.129 
 6 mu         0.2   0.1 0.333 0.0414
 7 mu         0.2   0.2 0.395 0.0404
 8 mu         0.2   0.3 0.426 0.0389
 9 mu         0.2   0.4 0.475 0.0333
10 mu         0.2   0.5 0.526 0.0410
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.710        0.427  1.08e-11      3.69
 2 mu         0.2      0.936        0.904  2.28e- 4      2.29
 3 mu         0.3      1.04         0.986  6.64e- 2      3.71
 4 mu         0.4      0.997        0.987  5.43e- 1      1.57
 5 mu         0.5      0.979        0.997  6.45e- 1      1.37
 6 mu         0.6      0.972        0.958  5.76e- 1      1.54
 7 mu         0.7      0.977        0.971  6.51e- 1      1.34
 8 mu         0.8      0.996        1.00   4.37e- 1      1.66
 9 mu         0.9      1.03         1.02   1.76e- 1      1.99
10 mu_1       0.1      0.741        0.567  4.09e-11      3.56
11 mu_1       0.2      0.959        0.927  4.36e- 4      2.28
12 mu_1       0.3      1.04         0.995  9.35e- 2      3.58
13 mu_1       0.4      0.994        0.990  5.54e- 1      1.55
14 mu_1       0.5      0.978        1.00   6.38e- 1      1.36
15 mu_1       0.6      0.972        0.957  5.81e- 1      1.52
16 mu_1       0.7      0.978        0.969  6.54e- 1      1.35
17 mu_1       0.8      0.996        1.00   4.28e- 1      1.66
18 mu_1       0.9      1.03         1.02   1.70e- 1      2.01
19 mu_0       0.1      0.706        0.415  7.41e-12      3.81
20 mu_0       0.2      0.930        0.899  1.75e- 4      2.32
21 mu_0       0.3      1.04         0.984  5.47e- 2      3.77
22 mu_0       0.4      0.998        0.990  4.96e- 1      1.62
23 mu_0       0.5      0.980        0.987  6.50e- 1      1.39
24 mu_0       0.6      0.973        0.947  5.70e- 1      1.58
25 mu_0       0.7      0.975        0.973  6.43e- 1      1.35
26 mu_0       0.8      0.997        0.989  4.75e- 1      1.69
27 mu_0       0.9      1.01         0.990  2.30e- 1      1.82
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.53     9.83e-25  1.76e-74     95.3 
 2 mu         0.2       4.60     6.55e-13  1.89e-48    294.  
 3 mu         0.3       1.45     1.31e- 6  1.78e-33     30.3 
 4 mu         0.4       1.54     3.77e- 3  4.38e-23     25.4 
 5 mu         0.5       1.51     2.46e- 2  2.87e-15     17.9 
 6 mu         0.6       1.16     2.13e- 1  3.04e-11     12.8 
 7 mu         0.7       1.05     1.71e- 1  1.33e-18      8.61
 8 mu         0.8       1.77     1.76e- 2  1.37e-29     19.9 
 9 mu         0.9       1.49     1.81e- 7  3.44e-49     42.7 
10 mu_1       0.1       1.98     5.88e-24  1.60e-73    126.  
11 mu_1       0.2       4.33     1.98e-12  8.56e-48    286.  
12 mu_1       0.3       1.41     2.76e- 6  5.38e-33     34.8 
13 mu_1       0.4       1.55     4.13e- 3  9.95e-23     21.9 
14 mu_1       0.5       1.49     3.39e- 2  5.20e-15     16.6 
15 mu_1       0.6       1.14     1.93e- 1  7.64e-12     13.0 
16 mu_1       0.7       1.07     1.84e- 1  3.81e-19      8.97
17 mu_1       0.8       1.79     1.37e- 2  3.43e-30     20.2 
18 mu_1       0.9       1.46     1.24e- 7  7.64e-50     43.1 
19 mu_0       0.1       1.48     4.39e-25  1.81e-75     91.9 
20 mu_0       0.2       4.66     3.24e-13  2.19e-49    295.  
21 mu_0       0.3       1.47     6.93e- 7  2.36e-34     33.0 
22 mu_0       0.4       1.53     2.32e- 3  6.78e-24     27.7 
23 mu_0       0.5       1.52     2.26e- 2  5.32e-16     19.2 
24 mu_0       0.6       1.20     2.02e- 1  6.08e-11     12.4 
25 mu_0       0.7       1.01     2.04e- 1  3.56e-18      7.75
26 mu_0       0.8       1.72     3.32e- 2  5.48e-29     18.5 
27 mu_0       0.9       1.70     6.96e- 7  2.75e-48     39.6 
[1] "Total run time was 385.939 seconds"
