
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7317"
[1] "cluster size dist'n: "

50 51 52 53 55 56 57 58 59 60 61 62 63 64 65 67 68 69 70 71 72 73 75 76 77 78 
 2  1  1  2  3  1  5  2  1  3  4  1  4  2  6  4  1  1  6  5  1  2  1  2  1  1 
79 81 82 84 85 86 88 89 90 91 92 93 94 95 96 97 98 99 
 6  1  2  1  2  4  3  1  1  1  1  2  1  1  3  3  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04166 0.35226 0.61634 1.00000 6.84184 
[1] "event indicator table: "

   0    1 
4343 2974 
[1] "treatment indicator table: "

   0    1 
2704 4613 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3738
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3579
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 355.118 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.374 0.110 
 2 mu         0.1   0.2 0.389 0.100 
 3 mu         0.1   0.3 0.440 0.129 
 4 mu         0.1   0.4 0.447 0.142 
 5 mu         0.1   0.5 0.455 0.134 
 6 mu         0.2   0.1 0.402 0.0928
 7 mu         0.2   0.2 0.449 0.0788
 8 mu         0.2   0.3 0.514 0.101 
 9 mu         0.2   0.4 0.537 0.107 
10 mu         0.2   0.5 0.561 0.0967
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.800        0.501 0.00000279      4.48
 2 mu         0.2      1.02         1.03  0.0529          2.40
 3 mu         0.3      1.00         0.976 0.371           1.87
 4 mu         0.4      0.979        0.976 0.526           1.42
 5 mu         0.5      0.985        1.00  0.607           1.44
 6 mu         0.6      1.00         1.01  0.603           1.30
 7 mu         0.7      1.02         1.00  0.671           1.42
 8 mu         0.8      0.999        1.00  0.442           1.51
 9 mu         0.9      0.991        0.918 0.0666          2.35
10 mu_1       0.1      0.850        0.617 0.00000827      5.34
11 mu_1       0.2      1.03         1.01  0.0800          2.32
12 mu_1       0.3      0.998        0.974 0.396           1.79
13 mu_1       0.4      0.979        0.985 0.493           1.40
14 mu_1       0.5      0.986        0.986 0.619           1.44
15 mu_1       0.6      1.00         1.01  0.611           1.32
16 mu_1       0.7      1.02         1.01  0.663           1.41
17 mu_1       0.8      0.998        1.00  0.433           1.52
18 mu_1       0.9      0.992        0.912 0.0613          2.39
19 mu_0       0.1      0.795        0.474 0.00000218      4.39
20 mu_0       0.2      1.01         1.02  0.0461          2.42
21 mu_0       0.3      1.01         0.975 0.361           1.94
22 mu_0       0.4      0.980        0.971 0.547           1.43
23 mu_0       0.5      0.983        1.00  0.595           1.43
24 mu_0       0.6      1.00         1.02  0.590           1.34
25 mu_0       0.7      1.02         0.999 0.691           1.44
26 mu_0       0.8      1.01         1.01  0.474           1.53
27 mu_0       0.9      0.980        0.909 0.115           2.02
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.579     2.86e-27  1.61e-84     37.6 
 2 mu         0.2      0.940     1.36e-14  1.77e-56     44.9 
 3 mu         0.3      0.695     6.67e- 8  2.67e-40     17.8 
 4 mu         0.4      0.984     8.54e- 4  2.21e-29     13.0 
 5 mu         0.5      0.918     8.37e- 2  5.40e-21      5.42
 6 mu         0.6      1.12      1.52e- 1  3.08e-14      7.38
 7 mu         0.7      0.982     2.84e- 1  8.52e-18      6.52
 8 mu         0.8      1.16      6.24e- 3  2.26e-27      9.53
 9 mu         0.9      1.28      2.53e- 8  1.37e-44     29.2 
10 mu_1       0.1      0.852     1.90e-26  1.53e-83     52.7 
11 mu_1       0.2      0.820     4.32e-14  8.42e-56     35.8 
12 mu_1       0.3      0.699     1.43e- 7  8.60e-40     15.9 
13 mu_1       0.4      0.992     1.33e- 3  5.35e-29     12.6 
14 mu_1       0.5      0.941     1.08e- 1  1.04e-20      5.88
15 mu_1       0.6      1.11      1.57e- 1  4.97e-14      7.18
16 mu_1       0.7      0.984     2.69e- 1  1.94e-18      6.31
17 mu_1       0.8      1.16      5.56e- 3  4.51e-28      9.82
18 mu_1       0.9      1.30      1.66e- 8  4.20e-45     30.0 
19 mu_0       0.1      0.549     1.07e-27  9.06e-86     35.9 
20 mu_0       0.2      0.970     6.24e-15  1.12e-57     47.1 
21 mu_0       0.3      0.693     3.38e- 8  1.24e-41     18.6 
22 mu_0       0.4      0.979     5.36e- 4  1.20e-30     13.3 
23 mu_0       0.5      0.896     5.90e- 2  3.52e-22      4.96
24 mu_0       0.6      1.13      1.75e- 1  2.51e-15      7.69
25 mu_0       0.7      0.977     2.11e- 1  2.39e-17      7.02
26 mu_0       0.8      1.15      1.09e- 2  9.52e-27      8.54
27 mu_0       0.9      1.15      1.04e- 7  9.89e-44     21.5 
[1] "Total run time was 358.597 seconds"
