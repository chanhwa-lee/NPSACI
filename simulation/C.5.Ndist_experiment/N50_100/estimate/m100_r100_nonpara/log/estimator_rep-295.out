
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7558"
[1] "cluster size dist'n: "

50 51 52 53 54 55 56 57 58 61 62 65 66 67 68 69 70 71 72 73 75 76 77 78 80 81 
 3  4  4  1  2  3  1  1  2  2  2  2  2  1  2  5  1  3  1  4  3  2  2  1  3  5 
83 85 86 87 88 89 90 91 92 94 95 96 97 99 
 2  2  1  2  3  2  4  2  5  5  2  2  1  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0430  0.3572  0.6074  1.0000  6.0000 
[1] "event indicator table: "

   0    1 
4478 3080 
[1] "treatment indicator table: "

   0    1 
2844 4714 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3688
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3870
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 377.263 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.339 0.0916
 2 mu         0.1   0.2 0.410 0.0984
 3 mu         0.1   0.3 0.434 0.0932
 4 mu         0.1   0.4 0.447 0.0948
 5 mu         0.1   0.5 0.475 0.102 
 6 mu         0.2   0.1 0.374 0.0560
 7 mu         0.2   0.2 0.494 0.0736
 8 mu         0.2   0.3 0.557 0.0805
 9 mu         0.2   0.4 0.571 0.0674
10 mu         0.2   0.5 0.600 0.0572
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value  min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>      <dbl>     <dbl>
 1 mu         0.1      0.673       0.0332 0.00000173      7.61
 2 mu         0.2      0.988       0.880  0.0577          3.44
 3 mu         0.3      0.992       0.981  0.0833          2.25
 4 mu         0.4      0.997       0.978  0.581           1.88
 5 mu         0.5      0.990       0.967  0.561           1.68
 6 mu         0.6      0.980       0.987  0.558           1.41
 7 mu         0.7      0.988       0.971  0.573           1.46
 8 mu         0.8      1.02        0.980  0.534           1.73
 9 mu         0.9      1.07        1.01   0.122           2.91
10 mu_1       0.1      0.714       0.0664 0.00000475      7.34
11 mu_1       0.2      0.997       0.885  0.0827          3.57
12 mu_1       0.3      0.991       0.963  0.107           2.33
13 mu_1       0.4      0.999       0.979  0.619           1.86
14 mu_1       0.5      0.987       0.964  0.558           1.70
15 mu_1       0.6      0.981       0.987  0.545           1.38
16 mu_1       0.7      0.988       0.974  0.566           1.46
17 mu_1       0.8      1.03        0.988  0.533           1.74
18 mu_1       0.9      1.06        1.00   0.114           2.99
19 mu_0       0.1      0.668       0.0296 0.00000139      8.00
20 mu_0       0.2      0.985       0.865  0.0497          3.41
21 mu_0       0.3      0.993       0.956  0.0732          2.22
22 mu_0       0.4      0.996       0.982  0.556           1.91
23 mu_0       0.5      0.993       0.982  0.564           1.66
24 mu_0       0.6      0.979       0.980  0.558           1.46
25 mu_0       0.7      0.989       0.972  0.591           1.45
26 mu_0       0.8      1.01        0.976  0.541           1.73
27 mu_0       0.9      1.08        1.04   0.197           2.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.335     1.30e-26  1.74e-76     27.8 
 2 mu         0.2      2.44      1.45e-14  2.36e-50    116.  
 3 mu         0.3      0.548     1.10e- 7  2.90e-35     22.7 
 4 mu         0.4      0.768     9.05e- 4  9.73e-25     15.9 
 5 mu         0.5      1.71      8.58e- 2  9.16e-17     34.6 
 6 mu         0.6      1.90      3.23e- 1  1.61e-11     38.5 
 7 mu         0.7      1.29      3.53e- 1  1.31e-19      8.93
 8 mu         0.8      1.07      1.88e- 2  8.94e-32      9.96
 9 mu         0.9      2.22      4.80e- 8  1.40e-53     65.3 
10 mu_1       0.1      0.568     8.99e-26  1.61e-75     45.6 
11 mu_1       0.2      2.40      4.37e-14  1.09e-49    126.  
12 mu_1       0.3      0.463     2.32e- 7  8.95e-35     16.4 
13 mu_1       0.4      0.824     1.46e- 3  2.25e-24     17.2 
14 mu_1       0.5      1.77      9.51e- 2  1.70e-16     38.2 
15 mu_1       0.6      1.87      3.00e- 1  5.80e-12     35.5 
16 mu_1       0.7      1.27      3.36e- 1  4.05e-20      8.61
17 mu_1       0.8      1.07      1.48e- 2  2.42e-32      9.99
18 mu_1       0.9      2.24      3.35e- 8  3.38e-54     66.9 
19 mu_0       0.1      0.309     4.46e-27  1.42e-77     25.9 
20 mu_0       0.2      2.45      7.19e-15  2.17e-51    114.  
21 mu_0       0.3      0.584     6.17e- 8  3.05e-36     25.4 
22 mu_0       0.4      0.731     5.35e- 4  1.19e-25     14.9 
23 mu_0       0.5      1.65      8.89e- 2  1.35e-17     30.9 
24 mu_0       0.6      1.93      2.38e- 1  3.15e-11     43.0 
25 mu_0       0.7      1.33      3.30e- 1  3.42e-19      9.67
26 mu_0       0.8      1.08      3.47e- 2  3.50e-31     10.5 
27 mu_0       0.9      2.01      1.78e- 7  1.10e-52     51.2 
[1] "Total run time was 380.589 seconds"
