
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7471"
[1] "cluster size dist'n: "

50 51 52 53 54 55 56 57 59 60 61 62 63 64 65 67 68 69 71 72 73 74 75 76 77 78 
 4  3  1  4  2  1  3  3  3  2  1  2  3  1  1  3  2  1  3  2  1  3  2  1  2  1 
80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 
 2  2  1  1  1  4  3  2  4  2  4  3  1  2  2  3  2  3  1  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02687 0.32090 0.58934 1.00000 5.97513 
[1] "event indicator table: "

   0    1 
4489 2982 
[1] "treatment indicator table: "

   0    1 
2770 4701 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3648
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3823
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 441.588 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.382 0.0765
 2 mu         0.1   0.2 0.463 0.0629
 3 mu         0.1   0.3 0.491 0.0654
 4 mu         0.1   0.4 0.516 0.0753
 5 mu         0.1   0.5 0.628 0.0848
 6 mu         0.2   0.1 0.356 0.0468
 7 mu         0.2   0.2 0.449 0.0390
 8 mu         0.2   0.3 0.499 0.0452
 9 mu         0.2   0.4 0.553 0.0444
10 mu         0.2   0.5 0.619 0.0450
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.939        0.376 0.0000358      5.02
 2 mu         0.2      0.970        0.895 0.166          2.79
 3 mu         0.3      1.02         1.03  0.445          1.84
 4 mu         0.4      1.01         1.01  0.428          1.58
 5 mu         0.5      0.999        1.00  0.324          1.39
 6 mu         0.6      0.984        0.991 0.659          1.32
 7 mu         0.7      0.996        0.973 0.550          1.40
 8 mu         0.8      1.01         0.995 0.647          1.60
 9 mu         0.9      1.02         0.969 0.355          1.95
10 mu_1       0.1      0.919        0.608 0.0000958      4.81
11 mu_1       0.2      0.986        0.928 0.197          2.71
12 mu_1       0.3      1.02         1.02  0.462          1.76
13 mu_1       0.4      1.01         1.01  0.413          1.62
14 mu_1       0.5      0.996        1.00  0.330          1.41
15 mu_1       0.6      0.985        0.985 0.670          1.33
16 mu_1       0.7      0.995        0.971 0.555          1.40
17 mu_1       0.8      1.01         1.00  0.644          1.59
18 mu_1       0.9      1.02         0.982 0.352          1.97
19 mu_0       0.1      0.942        0.345 0.0000292      5.05
20 mu_0       0.2      0.966        0.886 0.150          2.82
21 mu_0       0.3      1.02         1.04  0.437          1.88
22 mu_0       0.4      1.00         1.01  0.438          1.56
23 mu_0       0.5      1.00         1.01  0.317          1.38
24 mu_0       0.6      0.983        0.993 0.642          1.31
25 mu_0       0.7      0.996        0.973 0.540          1.41
26 mu_0       0.8      1.01         0.995 0.656          1.64
27 mu_0       0.9      1.02         0.990 0.386          1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.529     3.93e-28  2.89e-75     52.3 
 2 mu         0.2      1.49      1.42e-15  5.52e-50     55.9 
 3 mu         0.3      1.00      3.01e- 9  2.30e-35     13.8 
 4 mu         0.4      0.613     4.99e- 5  3.80e-25      8.46
 5 mu         0.5      0.872     1.22e- 2  7.95e-18      8.41
 6 mu         0.6      1.07      2.54e- 1  2.66e-12      9.25
 7 mu         0.7      1.25      5.73e- 1  1.85e-18      7.04
 8 mu         0.8      1.25      6.03e- 2  1.10e-29      6.85
 9 mu         0.9      0.960     7.21e- 7  8.76e-50     15.3 
10 mu_1       0.1      0.760     2.65e-27  2.70e-74     74.7 
11 mu_1       0.2      1.48      5.27e-15  2.58e-49     59.7 
12 mu_1       0.3      0.952     6.66e- 9  7.16e-35     14.1 
13 mu_1       0.4      0.609     8.10e- 5  8.87e-25      9.19
14 mu_1       0.5      0.896     1.65e- 2  1.57e-17      8.41
15 mu_1       0.6      1.08      2.52e- 1  4.37e-12      8.68
16 mu_1       0.7      1.26      4.96e- 1  5.64e-19      7.32
17 mu_1       0.8      1.23      5.05e- 2  2.94e-30      6.97
18 mu_1       0.9      0.953     5.50e- 7  2.08e-50     15.3 
19 mu_0       0.1      0.503     1.50e-28  2.12e-76     49.8 
20 mu_0       0.2      1.49      4.55e-16  4.55e-51     55.0 
21 mu_0       0.3      1.03      1.16e- 9  2.17e-36     14.1 
22 mu_0       0.4      0.616     2.92e- 5  2.91e-26      7.98
23 mu_0       0.5      0.848     8.66e- 3  2.21e-19      8.41
24 mu_0       0.6      1.06      2.57e- 1  9.24e-14     10.1 
25 mu_0       0.7      1.22      5.95e- 1  4.85e-18      6.40
26 mu_0       0.8      1.30      9.95e- 2  4.34e-29      6.40
27 mu_0       0.9      1.02      2.26e- 6  6.89e-49     15.0 
[1] "Total run time was 446.97 seconds"
