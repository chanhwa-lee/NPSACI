
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7561"
[1] "cluster size dist'n: "

50 51 52 54 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 73 74 75 76 77 78 
 2  1  3  1  4  3  2  1  3  3  1  1  2  1  3  1  4  1  1  1  1  4  2  2  1  3 
79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 95 96 97 98 99 
 4  6  2  2  1  1  1  4  3  2  2  1  2  4  3  2  2  3  2  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03297 0.36037 0.63032 1.00000 5.99906 
[1] "event indicator table: "

   0    1 
4441 3120 
[1] "treatment indicator table: "

   0    1 
2751 4810 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3727
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3834
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 86"
[1] "     Cluster: 91"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 433.763 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.246 0.0418
 2 mu         0.1   0.2 0.319 0.0510
 3 mu         0.1   0.3 0.341 0.0586
 4 mu         0.1   0.4 0.392 0.0678
 5 mu         0.1   0.5 0.422 0.0713
 6 mu         0.2   0.1 0.329 0.0280
 7 mu         0.2   0.2 0.414 0.0284
 8 mu         0.2   0.3 0.462 0.0316
 9 mu         0.2   0.4 0.522 0.0404
10 mu         0.2   0.5 0.558 0.0409
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.680        0.201 0.0000000385      6.54
 2 mu         0.2      0.997        0.947 0.00455           2.72
 3 mu         0.3      1.00         0.964 0.255             2.26
 4 mu         0.4      1.03         1.03  0.610             1.64
 5 mu         0.5      1.03         1.02  0.723             1.64
 6 mu         0.6      0.996        0.988 0.652             1.34
 7 mu         0.7      0.997        1.01  0.431             1.39
 8 mu         0.8      0.977        0.954 0.440             1.69
 9 mu         0.9      0.983        0.951 0.204             3.33
10 mu_1       0.1      0.747        0.336 0.000000130       7.36
11 mu_1       0.2      1.01         0.958 0.00780           2.72
12 mu_1       0.3      0.998        0.972 0.248             2.22
13 mu_1       0.4      1.03         1.02  0.621             1.62
14 mu_1       0.5      1.02         1.01  0.722             1.61
15 mu_1       0.6      0.996        0.993 0.664             1.35
16 mu_1       0.7      0.997        0.996 0.417             1.39
17 mu_1       0.8      0.977        0.945 0.427             1.72
18 mu_1       0.9      0.984        0.961 0.195             3.41
19 mu_0       0.1      0.673        0.184 0.0000000283      6.45
20 mu_0       0.2      0.993        0.928 0.00374           2.72
21 mu_0       0.3      1.00         0.963 0.235             2.28
22 mu_0       0.4      1.02         1.02  0.598             1.65
23 mu_0       0.5      1.03         1.02  0.700             1.67
24 mu_0       0.6      0.997        0.982 0.634             1.32
25 mu_0       0.7      0.997        1.01  0.464             1.39
26 mu_0       0.8      0.978        0.979 0.492             1.63
27 mu_0       0.9      0.971        0.949 0.281             2.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.987     1.79e-26  1.55e-73     98.7 
 2 mu         0.2      1.05      6.03e-15  1.48e-48    105.  
 3 mu         0.3      0.260     1.92e- 8  4.11e-34      7.21
 4 mu         0.4      1.10      1.97e- 4  5.09e-24      9.93
 5 mu         0.5      1.07      6.15e- 2  1.39e-16      7.14
 6 mu         0.6      0.895     1.52e- 1  2.21e-15      5.96
 7 mu         0.7      0.995     1.36e- 1  5.24e-24      5.63
 8 mu         0.8      0.958     2.23e- 2  1.23e-36      6.90
 9 mu         0.9      1.89      4.37e- 7  7.53e-59     41.8 
10 mu_1       0.1      1.44      1.01e-25  1.45e-72    144.  
11 mu_1       0.2      0.770     1.92e-14  6.90e-48     76.5 
12 mu_1       0.3      0.321     4.53e- 8  1.28e-33      8.23
13 mu_1       0.4      1.14      2.24e- 4  1.19e-23     10.4 
14 mu_1       0.5      1.05      8.14e- 2  2.70e-16      6.78
15 mu_1       0.6      0.901     1.67e- 1  5.38e-16      6.10
16 mu_1       0.7      0.996     1.40e- 1  1.09e-24      5.59
17 mu_1       0.8      0.956     1.78e- 2  2.25e-37      6.82
18 mu_1       0.9      1.91      2.96e- 7  1.22e-59     43.3 
19 mu_0       0.1      0.936     6.86e-27  1.15e-74     93.6 
20 mu_0       0.2      1.12      2.74e-15  1.23e-49    112.  
21 mu_0       0.3      0.234     8.02e- 9  3.91e-35      6.78
22 mu_0       0.4      1.07      1.17e- 4  5.65e-25      9.59
23 mu_0       0.5      1.09      4.16e- 2  7.51e-18      7.50
24 mu_0       0.6      0.885     1.59e- 1  4.72e-15      6.15
25 mu_0       0.7      0.993     9.82e- 2  1.49e-23      5.71
26 mu_0       0.8      0.969     3.19e- 2  5.25e-36      7.24
27 mu_0       0.9      1.69      1.67e- 6  6.43e-58     27.9 
[1] "Total run time was 437.116 seconds"
