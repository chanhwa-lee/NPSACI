
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7514"
[1] "cluster size dist'n: "

50 51 52 53 54 55 56 57 58 59 60 61 63 64 65 66 67 68 69 70 71 72 73 74 75 76 
 1  4  1  1  4  2  3  2  1  2  1  2  1  1  2  1  1  7  1  3  1  2  1  2  3  2 
77 78 79 80 82 83 84 85 86 87 89 90 91 92 93 95 96 97 98 99 
 1  4  3  2  2  3  1  1  4  3  1  3  3  4  1  1  4  3  1  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04314 0.37653 0.62671 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
4457 3057 
[1] "treatment indicator table: "

   0    1 
2840 4674 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3884
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 500.737 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.395 0.160 
 2 mu         0.1   0.2 0.430 0.183 
 3 mu         0.1   0.3 0.440 0.200 
 4 mu         0.1   0.4 0.481 0.225 
 5 mu         0.1   0.5 0.553 0.255 
 6 mu         0.2   0.1 0.309 0.0584
 7 mu         0.2   0.2 0.338 0.0441
 8 mu         0.2   0.3 0.357 0.0414
 9 mu         0.2   0.4 0.403 0.0473
10 mu         0.2   0.5 0.481 0.0640
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01       0.00920  2.32e-14     35.5 
 2 mu         0.2      0.858      0.655    1.01e- 5      3.89
 3 mu         0.3      0.915      0.937    3.50e- 2      2.10
 4 mu         0.4      0.972      0.942    4.86e- 1      2.47
 5 mu         0.5      0.983      0.965    6.31e- 1      1.48
 6 mu         0.6      1.03       1.02     5.69e- 1      1.59
 7 mu         0.7      1.02       1.02     6.65e- 1      1.54
 8 mu         0.8      0.979      0.972    5.30e- 1      1.55
 9 mu         0.9      0.961      0.891    5.57e- 2      2.72
10 mu_1       0.1      0.968      0.0199   9.47e-14     24.6 
11 mu_1       0.2      0.856      0.777    2.07e- 5      3.50
12 mu_1       0.3      0.922      0.961    4.80e- 2      1.91
13 mu_1       0.4      0.972      0.937    4.92e- 1      2.42
14 mu_1       0.5      0.987      0.964    6.39e- 1      1.45
15 mu_1       0.6      1.03       1.02     5.63e- 1      1.63
16 mu_1       0.7      1.02       1.02     6.53e- 1      1.51
17 mu_1       0.8      0.979      0.963    5.13e- 1      1.56
18 mu_1       0.9      0.962      0.886    5.28e- 2      2.78
19 mu_0       0.1      1.01       0.00804  1.52e-14     36.7 
20 mu_0       0.2      0.859      0.642    7.45e- 6      4.19
21 mu_0       0.3      0.911      0.917    2.94e- 2      2.18
22 mu_0       0.4      0.972      0.947    4.82e- 1      2.51
23 mu_0       0.5      0.980      0.962    6.24e- 1      1.50
24 mu_0       0.6      1.03       1.01     5.79e- 1      1.53
25 mu_0       0.7      1.03       1.02     6.95e- 1      1.60
26 mu_0       0.8      0.981      1.00     5.72e- 1      1.52
27 mu_0       0.9      0.956      0.889    8.15e- 2      2.43
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0358     4.65e-25  4.37e-71      3.56
 2 mu         0.2     1.87       5.25e-14  1.65e-45    153.  
 3 mu         0.3     1.83       5.62e- 8  6.92e-31     96.1 
 4 mu         0.4     1.45       3.75e- 4  8.06e-21     25.3 
 5 mu         0.5     2.00       7.07e- 2  2.44e-13     41.7 
 6 mu         0.6     0.983      4.11e- 1  3.14e-12      6.79
 7 mu         0.7     0.950      8.09e- 2  2.86e-20      8.25
 8 mu         0.8     0.988      2.50e- 3  2.95e-32      7.92
 9 mu         0.9     2.21       8.79e-10  1.30e-53     80.7 
10 mu_1       0.1     0.0701     2.96e-24  3.84e-70      6.97
11 mu_1       0.2     1.98       1.77e-13  7.23e-45    150.  
12 mu_1       0.3     1.78       1.29e- 7  2.03e-30     89.8 
13 mu_1       0.4     1.49       6.00e- 4  1.77e-20     24.9 
14 mu_1       0.5     1.97       8.48e- 2  4.29e-13     41.2 
15 mu_1       0.6     0.952      3.48e- 1  1.02e-12      5.78
16 mu_1       0.7     0.958      8.54e- 2  8.00e-21      8.40
17 mu_1       0.8     0.998      1.91e- 3  7.22e-33      8.44
18 mu_1       0.9     2.21       6.11e-10  2.83e-54     83.1 
19 mu_0       0.1     0.0320     1.88e-25  5.88e-72      3.19
20 mu_0       0.2     1.84       2.13e-14  2.49e-46    154.  
21 mu_0       0.3     1.85       2.49e- 8  1.20e-31     98.7 
22 mu_0       0.4     1.42       2.26e- 4  1.63e-21     25.5 
23 mu_0       0.5     2.04       4.97e- 2  5.92e-14     42.2 
24 mu_0       0.6     1.03       4.05e- 1  6.32e-12      8.59
25 mu_0       0.7     0.933      1.05e- 1  7.68e-20      8.62
26 mu_0       0.8     0.945      4.84e- 3  1.19e-31      8.15
27 mu_0       0.9     2.17       3.29e- 9  1.05e-52     59.3 
[1] "Total run time was 505.092 seconds"
