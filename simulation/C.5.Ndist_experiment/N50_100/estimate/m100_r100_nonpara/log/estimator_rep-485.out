
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7381"
[1] "cluster size dist'n: "

50 51 52 53 54 55 56 57 58 59 61 62 64 65 66 68 69 70 71 73 74 75 76 78 79 82 
 3  2  5  2  3  3  1  4  2  3  2  2  2  3  2  1  1  4  1  4  2  2  2  2  3  1 
83 84 85 86 88 89 90 91 92 93 94 95 96 97 98 99 
 5  3  3  2  1  1  3  1  2  4  1  2  2  1  1  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03267 0.34458 0.61722 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
4463 2918 
[1] "treatment indicator table: "

   0    1 
2721 4660 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3730
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3651
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 452.422 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.500 0.118 
 2 mu         0.1   0.2 0.551 0.103 
 3 mu         0.1   0.3 0.601 0.112 
 4 mu         0.1   0.4 0.642 0.106 
 5 mu         0.1   0.5 0.669 0.104 
 6 mu         0.2   0.1 0.414 0.0622
 7 mu         0.2   0.2 0.503 0.0551
 8 mu         0.2   0.3 0.528 0.0415
 9 mu         0.2   0.4 0.585 0.0508
10 mu         0.2   0.5 0.613 0.0587
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.958        0.602   0.00191      4.60
 2 mu         0.2      1.04         1.01    0.297        2.29
 3 mu         0.3      1.01         0.978   0.478        1.85
 4 mu         0.4      1.03         1.03    0.653        1.62
 5 mu         0.5      1.02         1.02    0.531        1.84
 6 mu         0.6      0.979        0.962   0.610        1.48
 7 mu         0.7      0.990        0.973   0.634        1.35
 8 mu         0.8      1.00         0.993   0.597        1.48
 9 mu         0.9      0.964        0.915   0.224        1.87
10 mu_1       0.1      0.997        0.778   0.00395      3.80
11 mu_1       0.2      1.04         1.01    0.352        2.18
12 mu_1       0.3      1.00         0.967   0.477        1.83
13 mu_1       0.4      1.03         1.04    0.639        1.61
14 mu_1       0.5      1.02         1.02    0.512        1.81
15 mu_1       0.6      0.978        0.970   0.628        1.50
16 mu_1       0.7      0.991        0.980   0.616        1.33
17 mu_1       0.8      1.00         0.993   0.592        1.48
18 mu_1       0.9      0.963        0.905   0.223        1.89
19 mu_0       0.1      0.954        0.577   0.00168      4.70
20 mu_0       0.2      1.04         1.02    0.283        2.31
21 mu_0       0.3      1.01         0.970   0.463        1.86
22 mu_0       0.4      1.03         1.02    0.650        1.62
23 mu_0       0.5      1.02         1.01    0.551        1.87
24 mu_0       0.6      0.979        0.950   0.583        1.46
25 mu_0       0.7      0.989        0.973   0.675        1.38
26 mu_0       0.8      0.999        0.999   0.604        1.48
27 mu_0       0.9      0.977        0.959   0.220        1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.51      3.26e-29  1.31e-86    148.  
 2 mu         0.2      0.573     3.07e-16  3.23e-58     27.9 
 3 mu         0.3      0.581     3.65e- 9  1.01e-41     13.9 
 4 mu         0.4      0.785     1.87e- 5  4.05e-30      7.71
 5 mu         0.5      1.04      1.38e- 2  3.14e-21      8.31
 6 mu         0.6      0.954     1.91e- 1  3.12e-25      9.02
 7 mu         0.7      1.38      3.28e- 1  5.97e-36      7.28
 8 mu         0.8      1.16      1.43e- 1  2.83e-51      6.05
 9 mu         0.9      1.20      2.60e- 6  9.27e-78     24.5 
10 mu_1       0.1      0.998     2.44e-28  1.25e-85     93.2 
11 mu_1       0.2      0.601     1.10e-15  1.55e-57     25.8 
12 mu_1       0.3      0.585     7.89e- 9  3.25e-41     10.7 
13 mu_1       0.4      0.817     3.04e- 5  9.72e-30      8.06
14 mu_1       0.5      1.02      1.27e- 2  6.03e-21      7.92
15 mu_1       0.6      0.966     2.07e- 1  3.28e-26      8.54
16 mu_1       0.7      1.40      3.49e- 1  5.39e-37      7.21
17 mu_1       0.8      1.16      1.23e- 1  2.23e-52      6.21
18 mu_1       0.9      1.19      2.01e- 6  6.50e-79     24.5 
19 mu_0       0.1      1.57      9.14e-30  5.87e-88    154.  
20 mu_0       0.2      0.565     1.08e-16  1.63e-59     28.6 
21 mu_0       0.3      0.580     1.84e- 9  5.86e-43     15.3 
22 mu_0       0.4      0.764     1.09e- 5  2.73e-31      7.47
23 mu_0       0.5      1.05      1.41e- 2  2.54e-22      8.69
24 mu_0       0.6      0.935     1.89e- 1  7.30e-25      9.73
25 mu_0       0.7      1.35      2.30e- 1  1.86e-35      7.44
26 mu_0       0.8      1.17      2.00e- 1  1.33e-50      6.14
27 mu_0       0.9      1.26      7.87e- 6  8.68e-77     24.5 
[1] "Total run time was 456.175 seconds"
