
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7317"
[1] "cluster size dist'n: "

50 51 52 53 54 55 56 57 58 59 60 62 63 64 65 66 67 68 69 70 71 74 75 76 78 79 
 1  3  2  2  3  1  3  3  3  5  2  1  2  2  5  3  2  3  1  4  2  2  1  2  1  3 
80 82 83 84 85 86 87 88 89 91 92 93 94 95 96 97 98 99 
 4  2  1  2  3  3  4  1  1  1  1  1  2  2  3  2  3  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03243 0.35444 0.60689 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
4392 2925 
[1] "treatment indicator table: "

   0    1 
2571 4746 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3597
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3720
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 599.146 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.260 0.0440
 2 mu         0.1   0.2 0.327 0.0755
 3 mu         0.1   0.3 0.384 0.0890
 4 mu         0.1   0.4 0.432 0.0940
 5 mu         0.1   0.5 0.434 0.0923
 6 mu         0.2   0.1 0.296 0.0352
 7 mu         0.2   0.2 0.381 0.0640
 8 mu         0.2   0.3 0.447 0.0699
 9 mu         0.2   0.4 0.494 0.0715
10 mu         0.2   0.5 0.510 0.0773
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.713        0.239  2.13e-12     10.5 
 2 mu         0.2      0.981        0.752  7.16e- 5      6.11
 3 mu         0.3      0.954        0.938  4.81e- 2      2.25
 4 mu         0.4      0.992        0.960  3.48e- 1      1.87
 5 mu         0.5      1.01         1.00   4.16e- 1      1.60
 6 mu         0.6      1.04         1.04   6.52e- 1      1.71
 7 mu         0.7      1.01         1.01   6.61e- 1      1.44
 8 mu         0.8      0.990        0.983  4.80e- 1      1.44
 9 mu         0.9      0.951        0.890  3.18e- 1      1.98
10 mu_1       0.1      0.813        0.348  8.32e-12     13.0 
11 mu_1       0.2      0.971        0.806  1.40e- 4      5.12
12 mu_1       0.3      0.957        0.948  6.87e- 2      2.10
13 mu_1       0.4      0.993        0.977  3.70e- 1      1.86
14 mu_1       0.5      1.01         1.03   4.28e- 1      1.57
15 mu_1       0.6      1.04         1.04   6.59e- 1      1.72
16 mu_1       0.7      1.01         1.00   6.56e- 1      1.46
17 mu_1       0.8      0.989        0.988  4.83e- 1      1.42
18 mu_1       0.9      0.951        0.877  3.05e- 1      1.99
19 mu_0       0.1      0.702        0.229  1.44e-12     10.3 
20 mu_0       0.2      0.984        0.738  5.45e- 5      6.36
21 mu_0       0.3      0.952        0.931  3.93e- 2      2.32
22 mu_0       0.4      0.992        0.957  3.33e- 1      1.89
23 mu_0       0.5      1.01         0.995  4.05e- 1      1.63
24 mu_0       0.6      1.04         1.03   6.42e- 1      1.71
25 mu_0       0.7      1.01         1.01   6.73e- 1      1.47
26 mu_0       0.8      0.992        0.984  4.68e- 1      1.52
27 mu_0       0.9      0.951        0.933  3.07e- 1      1.92
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0523     1.37e-28  1.72e-69      3.61
 2 mu         0.2     1.92       8.52e-16  1.12e-46    102.  
 3 mu         0.3     2.08       1.04e- 8  1.81e-33     83.2 
 4 mu         0.4     1.40       2.22e- 4  3.57e-24     17.5 
 5 mu         0.5     0.961      5.05e- 2  4.79e-17     12.3 
 6 mu         0.6     0.992      2.10e- 1  2.55e-11      5.54
 7 mu         0.7     1.31       2.71e- 1  5.35e-11     10.6 
 8 mu         0.8     1.01       8.58e- 2  1.22e-18      8.61
 9 mu         0.9     1.47       7.79e- 7  1.60e-32     24.5 
10 mu_1       0.1     0.115      9.36e-28  1.55e-68      7.63
11 mu_1       0.2     2.27       2.71e-15  5.39e-46    123.  
12 mu_1       0.3     1.89       2.20e- 8  5.81e-33     66.8 
13 mu_1       0.4     1.37       3.79e- 4  8.58e-24     17.7 
14 mu_1       0.5     0.923      5.68e- 2  9.21e-17     11.3 
15 mu_1       0.6     1.02       1.51e- 1  4.10e-11      5.86
16 mu_1       0.7     1.30       2.71e- 1  1.97e-11     10.9 
17 mu_1       0.8     1.02       7.20e- 2  3.92e-19      9.15
18 mu_1       0.9     1.47       5.52e- 7  4.58e-33     25.0 
19 mu_0       0.1     0.0452     5.08e-29  8.90e-71      3.16
20 mu_0       0.2     1.84       4.10e-16  5.32e-48     96.8 
21 mu_0       0.3     2.16       5.51e- 9  9.83e-35     90.2 
22 mu_0       0.4     1.41       1.13e- 4  2.26e-25     17.3 
23 mu_0       0.5     0.999      3.48e- 2  3.64e-18     13.3 
24 mu_0       0.6     0.954      1.67e- 1  2.42e-12      5.07
25 mu_0       0.7     1.33       2.34e- 1  1.32e-10      9.85
26 mu_0       0.8     0.982      8.70e- 2  4.52e-18      6.46
27 mu_0       0.9     1.44       2.82e- 6  1.19e-31     24.1 
[1] "Total run time was 603.456 seconds"
