
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7482"
[1] "cluster size dist'n: "

50 52 53 54 55 56 57 59 60 66 67 68 69 71 72 73 74 75 76 77 78 79 80 81 82 83 
 1  6  1  4  3  2  4  2  3  1  6  2  1  2  1  5  3  2  3  2  2  3  2  2  2  2 
84 85 86 87 88 89 91 92 93 94 97 98 99 
 5  2  1  2  2  2  5  3  2  2  2  1  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02814 0.34163 0.60417 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
4445 3037 
[1] "treatment indicator table: "

   0    1 
2868 4614 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3856
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 550.45 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.433 0.0343
 2 mu         0.1   0.2 0.519 0.0393
 3 mu         0.1   0.3 0.581 0.0436
 4 mu         0.1   0.4 0.655 0.0482
 5 mu         0.1   0.5 0.752 0.0614
 6 mu         0.2   0.1 0.371 0.0223
 7 mu         0.2   0.2 0.460 0.0361
 8 mu         0.2   0.3 0.498 0.0240
 9 mu         0.2   0.4 0.573 0.0323
10 mu         0.2   0.5 0.632 0.0331
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.17         0.969    0.0154      4.19
 2 mu         0.2      1.02         1.01     0.141       2.07
 3 mu         0.3      1.01         1.00     0.318       2.39
 4 mu         0.4      0.997        1.00     0.511       1.56
 5 mu         0.5      0.992        0.976    0.579       1.62
 6 mu         0.6      0.995        0.958    0.557       1.50
 7 mu         0.7      0.975        0.977    0.607       1.53
 8 mu         0.8      0.987        0.994    0.516       1.49
 9 mu         0.9      1.05         1.05     0.224       1.88
10 mu_1       0.1      1.15         0.955    0.0334      3.72
11 mu_1       0.2      1.02         1.00     0.176       2.23
12 mu_1       0.3      1.01         1.02     0.315       2.22
13 mu_1       0.4      0.999        1.02     0.537       1.57
14 mu_1       0.5      0.991        0.975    0.592       1.63
15 mu_1       0.6      0.994        0.957    0.553       1.51
16 mu_1       0.7      0.974        0.975    0.608       1.53
17 mu_1       0.8      0.988        0.998    0.513       1.49
18 mu_1       0.9      1.05         1.05     0.221       1.88
19 mu_0       0.1      1.17         0.984    0.0134      4.24
20 mu_0       0.2      1.02         1.02     0.133       2.08
21 mu_0       0.3      1.01         1.01     0.319       2.46
22 mu_0       0.4      0.996        1.01     0.494       1.56
23 mu_0       0.5      0.993        0.973    0.565       1.60
24 mu_0       0.6      0.996        0.960    0.563       1.48
25 mu_0       0.7      0.976        0.968    0.603       1.53
26 mu_0       0.8      0.983        0.986    0.524       1.52
27 mu_0       0.9      1.05         1.07     0.251       1.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.234     6.68e-28  8.85e-73     13.4 
 2 mu         0.2      0.828     2.57e-15  4.22e-48     25.8 
 3 mu         0.3      0.628     1.31e- 8  2.50e-34     10.8 
 4 mu         0.4      0.733     2.48e- 4  6.57e-25     10.2 
 5 mu         0.5      0.895     3.62e- 2  1.10e-17     13.4 
 6 mu         0.6      1.12      4.44e- 2  5.48e-15     14.1 
 7 mu         0.7      1.18      1.96e- 1  9.54e-23      7.57
 8 mu         0.8      1.23      3.62e- 2  4.40e-34      9.15
 9 mu         0.9      1.41      2.30e- 7  5.44e-54     26.5 
10 mu_1       0.1      0.362     4.57e-27  8.25e-72     18.7 
11 mu_1       0.2      0.794     9.03e-15  1.97e-47     21.9 
12 mu_1       0.3      0.634     2.89e- 8  8.02e-34     10.7 
13 mu_1       0.4      0.733     3.99e- 4  1.58e-24      9.74
14 mu_1       0.5      0.926     3.12e- 2  2.12e-17     14.8 
15 mu_1       0.6      1.13      5.71e- 2  1.27e-15     13.0 
16 mu_1       0.7      1.17      2.32e- 1  1.90e-23      7.34
17 mu_1       0.8      1.24      2.92e- 2  7.65e-35      9.40
18 mu_1       0.9      1.40      1.62e- 7  8.42e-55     27.5 
19 mu_0       0.1      0.220     2.35e-28  0            12.8 
20 mu_0       0.2      0.837     9.57e-16  0            26.8 
21 mu_0       0.3      0.626     6.39e- 9  0            10.9 
22 mu_0       0.4      0.733     1.42e- 4  0            10.4 
23 mu_0       0.5      0.865     3.37e- 2  0            12.0 
24 mu_0       0.6      1.10      3.59e- 2  0            15.8 
25 mu_0       0.7      1.19      2.10e- 1  0             8.11
26 mu_0       0.8      1.19      3.77e- 2  0             8.15
27 mu_0       0.9      1.50      6.58e- 7  0            28.0 
[1] "Total run time was 554.797 seconds"
