
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7369"
[1] "cluster size dist'n: "

50 52 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 70 72 73 74 75 76 77 79 81 
 3  4  3  2  5  2  1  2  5  3  1  3  2  2  2  1  1  1  4  4  4  2  1  2  1  3 
82 83 84 85 86 87 89 91 92 93 94 95 96 97 98 99 
 3  1  2  3  2  1  5  3  1  4  1  1  1  2  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03506 0.35323 0.62270 1.00000 7.00000 
[1] "event indicator table: "

   0    1 
4328 3041 
[1] "treatment indicator table: "

   0    1 
2782 4587 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3706
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 487.506 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.537 0.150 
 2 mu         0.1   0.2 0.682 0.177 
 3 mu         0.1   0.3 0.776 0.201 
 4 mu         0.1   0.4 0.914 0.236 
 5 mu         0.1   0.5 1.02  0.265 
 6 mu         0.2   0.1 0.312 0.0297
 7 mu         0.2   0.2 0.405 0.0340
 8 mu         0.2   0.3 0.461 0.0463
 9 mu         0.2   0.4 0.555 0.0671
10 mu         0.2   0.5 0.622 0.0873
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.61        0.0927  7.55e-10     29.8 
 2 mu         0.2      0.988       0.891   1.68e- 3      3.76
 3 mu         0.3      1.05        0.999   1.90e- 1      2.48
 4 mu         0.4      1.06        1.02    4.02e- 1      2.18
 5 mu         0.5      0.993       0.990   5.84e- 1      1.59
 6 mu         0.6      1.00        0.982   5.72e- 1      1.52
 7 mu         0.7      1.01        0.999   6.12e- 1      1.81
 8 mu         0.8      0.997       0.996   5.03e- 1      1.60
 9 mu         0.9      0.993       0.979   3.26e- 1      2.17
10 mu_1       0.1      1.31        0.163   2.55e- 9     15.8 
11 mu_1       0.2      0.990       0.887   2.86e- 3      3.86
12 mu_1       0.3      1.06        1.00    2.19e- 1      2.47
13 mu_1       0.4      1.05        1.03    4.18e- 1      2.13
14 mu_1       0.5      0.991       0.995   5.78e- 1      1.56
15 mu_1       0.6      1.00        0.990   5.83e- 1      1.52
16 mu_1       0.7      1.01        0.995   6.11e- 1      1.81
17 mu_1       0.8      0.996       0.994   4.87e- 1      1.62
18 mu_1       0.9      0.994       0.984   3.37e- 1      2.15
19 mu_0       0.1      1.65        0.0849  5.55e-10     31.3 
20 mu_0       0.2      0.987       0.899   1.39e- 3      3.73
21 mu_0       0.3      1.05        1.00    1.78e- 1      2.48
22 mu_0       0.4      1.06        1.04    3.92e- 1      2.22
23 mu_0       0.5      0.994       0.988   5.91e- 1      1.62
24 mu_0       0.6      0.998       0.999   5.55e- 1      1.51
25 mu_0       0.7      1.01        1.01    6.08e- 1      1.79
26 mu_0       0.8      1.00        1.01    5.65e- 1      1.54
27 mu_0       0.9      0.983       0.968   2.36e- 1      2.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     0.0177     1.07e-24  3.18e-79      1.49
 2 mu         0.2     1.01       7.46e-14  5.46e-53     42.8 
 3 mu         0.3     1.44       1.45e- 7  8.77e-38     48.1 
 4 mu         0.4     1.31       1.51e- 3  4.01e-27     24.5 
 5 mu         0.5     1.65       9.12e- 2  5.43e-19     16.5 
 6 mu         0.6     1.36       2.94e- 1  1.65e-12     13.3 
 7 mu         0.7     1.56       2.22e- 1  1.81e-12     20.2 
 8 mu         0.8     1.26       1.08e- 2  3.63e-20     22.4 
 9 mu         0.9     0.806      7.75e- 8  1.19e-35     14.7 
10 mu_1       0.1     0.0386     6.85e-24  3.01e-78      3.18
11 mu_1       0.2     1.20       2.52e-13  2.58e-52     48.0 
12 mu_1       0.3     1.36       3.13e- 7  2.77e-37     44.3 
13 mu_1       0.4     1.36       2.35e- 3  9.48e-27     25.2 
14 mu_1       0.5     1.64       9.74e- 2  1.03e-18     16.0 
15 mu_1       0.6     1.35       3.29e- 1  2.61e-12     12.9 
16 mu_1       0.7     1.57       2.07e- 1  5.52e-13     20.8 
17 mu_1       0.8     1.24       8.11e- 3  9.67e-21     21.6 
18 mu_1       0.9     0.804      5.40e- 8  4.51e-36     14.9 
19 mu_0       0.1     0.0154     4.22e-25  1.90e-80      1.30
20 mu_0       0.2     0.959      3.03e-14  3.67e-54     42.1 
21 mu_0       0.3     1.48       6.58e- 8  6.74e-39     49.7 
22 mu_0       0.4     1.28       9.59e- 4  3.59e-28     24.0 
23 mu_0       0.5     1.66       6.99e- 2  5.84e-20     17.0 
24 mu_0       0.6     1.37       3.31e- 1  2.22e-13     14.1 
25 mu_0       0.7     1.52       2.86e- 1  4.75e-12     18.6 
26 mu_0       0.8     1.35       1.81e- 2  1.43e-19     25.7 
27 mu_0       0.9     0.817      2.88e- 7  7.86e-35     13.3 
[1] "Total run time was 491.552 seconds"
