
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7649"
[1] "cluster size dist'n: "

50 52 53 56 59 60 61 62 63 64 66 67 68 70 71 72 73 74 75 76 77 78 79 80 81 82 
 2  6  2  1  1  5  3  1  4  2  2  3  1  2  2  2  1  3  1  3  4  2  1  1  3  3 
83 84 85 86 87 88 89 90 91 92 95 97 98 99 
 1  2  3  4  2  1  3  7  1  1  3  3  6  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04651 0.38995 0.65156 1.00000 6.80869 
[1] "event indicator table: "

   0    1 
4570 3079 
[1] "treatment indicator table: "

   0    1 
2633 5016 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3795
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3854
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 384.697 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.244 0.0396
 2 mu         0.1   0.2 0.295 0.0489
 3 mu         0.1   0.3 0.373 0.0507
 4 mu         0.1   0.4 0.417 0.0556
 5 mu         0.1   0.5 0.466 0.0597
 6 mu         0.2   0.1 0.272 0.0240
 7 mu         0.2   0.2 0.342 0.0297
 8 mu         0.2   0.3 0.417 0.0316
 9 mu         0.2   0.4 0.470 0.0334
10 mu         0.2   0.5 0.509 0.0383
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.801        0.389 0.000000519      5.07
 2 mu         0.2      0.957        0.842 0.0249           4.33
 3 mu         0.3      0.998        0.911 0.325            2.86
 4 mu         0.4      0.942        0.934 0.340            1.73
 5 mu         0.5      0.969        0.952 0.489            1.50
 6 mu         0.6      1.02         0.996 0.530            1.71
 7 mu         0.7      0.975        0.953 0.667            1.40
 8 mu         0.8      1.01         1.00  0.574            1.51
 9 mu         0.9      0.997        1.01  0.267            1.87
10 mu_1       0.1      0.784        0.512 0.00000157       3.87
11 mu_1       0.2      0.973        0.891 0.0440           4.03
12 mu_1       0.3      0.992        0.902 0.325            2.75
13 mu_1       0.4      0.941        0.912 0.322            1.73
14 mu_1       0.5      0.974        0.952 0.491            1.50
15 mu_1       0.6      1.02         1.00  0.539            1.70
16 mu_1       0.7      0.975        0.950 0.662            1.41
17 mu_1       0.8      1.01         1.00  0.574            1.51
18 mu_1       0.9      0.997        1.01  0.261            1.90
19 mu_0       0.1      0.803        0.366 0.000000402      5.21
20 mu_0       0.2      0.953        0.825 0.0202           4.40
21 mu_0       0.3      1.00         0.901 0.325            2.91
22 mu_0       0.4      0.942        0.920 0.353            1.74
23 mu_0       0.5      0.964        0.958 0.488            1.50
24 mu_0       0.6      1.02         0.997 0.517            1.72
25 mu_0       0.7      0.975        0.967 0.681            1.42
26 mu_0       0.8      1.00         0.997 0.575            1.51
27 mu_0       0.9      1.00         1.02  0.319            1.84
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.276     7.81e-33  1.62e-77     21.1 
 2 mu         0.2      0.873     1.92e-18  2.19e-51     32.0 
 3 mu         0.3      0.890     4.64e-11  2.70e-36     33.3 
 4 mu         0.4      1.13      3.05e- 6  9.06e-26     27.9 
 5 mu         0.5      0.889     2.25e- 3  3.16e-18     10.1 
 6 mu         0.6      1.24      7.22e- 2  6.16e-14     33.2 
 7 mu         0.7      1.41      3.30e- 1  1.55e-22     22.7 
 8 mu         0.8      1.37      9.86e- 2  2.41e-35      9.60
 9 mu         0.9      1.06      4.66e- 6  3.74e-58     13.8 
10 mu_1       0.1      0.402     4.98e-32  1.50e-76     30.1 
11 mu_1       0.2      0.865     7.17e-18  1.02e-50     33.1 
12 mu_1       0.3      0.907     1.15e-10  8.34e-36     34.5 
13 mu_1       0.4      1.14      5.53e- 6  2.10e-25     27.9 
14 mu_1       0.5      0.876     3.25e- 3  6.09e-18      9.85
15 mu_1       0.6      1.28      9.02e- 2  1.99e-14     35.5 
16 mu_1       0.7      1.40      3.03e- 1  4.30e-23     20.9 
17 mu_1       0.8      1.37      8.37e- 2  5.84e-36      9.46
18 mu_1       0.9      1.05      3.57e- 6  8.05e-59     13.5 
19 mu_0       0.1      0.263     3.14e-33  1.32e-78     20.1 
20 mu_0       0.2      0.875     6.50e-19  2.02e-52     32.3 
21 mu_0       0.3      0.883     1.74e-11  2.84e-37     32.8 
22 mu_0       0.4      1.13      1.39e- 6  9.31e-27     27.9 
23 mu_0       0.5      0.901     1.21e- 3  2.34e-19     10.3 
24 mu_0       0.6      1.18      4.60e- 2  1.24e-13     29.7 
25 mu_0       0.7      1.42      2.32e- 1  4.18e-22     27.1 
26 mu_0       0.8      1.38      1.47e- 1  9.71e-35     10.1 
27 mu_0       0.9      1.17      1.45e- 5  3.01e-57     16.1 
[1] "Total run time was 387.924 seconds"
