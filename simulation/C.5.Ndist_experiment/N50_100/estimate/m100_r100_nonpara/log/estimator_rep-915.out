
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7297"
[1] "cluster size dist'n: "

51 52 53 54 55 56 57 58 59 61 62 63 65 66 69 71 72 73 74 75 76 77 78 79 80 81 
 2  4  3  4  4  2  5  3  1  1  4  4  2  2  1  3  2  4  2  2  2  2  3  1  1  1 
83 84 85 86 87 88 89 90 91 92 93 95 97 99 
 1  3  5  2  2  1  4  4  3  2  1  1  3  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03419 0.34023 0.60302 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
4313 2984 
[1] "treatment indicator table: "

   0    1 
2740 4557 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3671
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3626
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 365.012 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.376 0.0717
 2 mu         0.1   0.2 0.461 0.0771
 3 mu         0.1   0.3 0.465 0.0736
 4 mu         0.1   0.4 0.516 0.0763
 5 mu         0.1   0.5 0.540 0.0726
 6 mu         0.2   0.1 0.392 0.0529
 7 mu         0.2   0.2 0.491 0.0564
 8 mu         0.2   0.3 0.509 0.0486
 9 mu         0.2   0.4 0.569 0.0478
10 mu         0.2   0.5 0.605 0.0428
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.791        0.422 0.00000121       5.12
 2 mu         0.2      0.986        0.977 0.0578           3.26
 3 mu         0.3      1.07         1.05  0.346            2.94
 4 mu         0.4      0.975        0.980 0.323            2.03
 5 mu         0.5      1.00         0.998 0.546            1.57
 6 mu         0.6      0.976        0.985 0.543            1.25
 7 mu         0.7      0.984        0.970 0.661            1.37
 8 mu         0.8      1.02         1.01  0.534            1.50
 9 mu         0.9      1.05         1.05  0.128            1.84
10 mu_1       0.1      0.778        0.453 0.00000356       5.54
11 mu_1       0.2      1.02         0.994 0.0853           3.38
12 mu_1       0.3      1.06         1.03  0.317            2.85
13 mu_1       0.4      0.972        0.981 0.334            2.05
14 mu_1       0.5      1.00         1.01  0.564            1.49
15 mu_1       0.6      0.973        0.981 0.540            1.27
16 mu_1       0.7      0.986        0.978 0.644            1.40
17 mu_1       0.8      1.02         1.01  0.531            1.51
18 mu_1       0.9      1.05         1.05  0.121            1.86
19 mu_0       0.1      0.792        0.401 0.000000949      5.12
20 mu_0       0.2      0.978        0.971 0.0509           3.23
21 mu_0       0.3      1.07         1.05  0.359            2.97
22 mu_0       0.4      0.977        0.980 0.317            2.01
23 mu_0       0.5      0.999        0.985 0.528            1.64
24 mu_0       0.6      0.981        0.981 0.546            1.26
25 mu_0       0.7      0.979        0.971 0.666            1.36
26 mu_0       0.8      1.01         0.993 0.547            1.53
27 mu_0       0.9      1.05         1.05  0.196            1.69
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      4.56      2.07e-24  1.45e-86    241.  
 2 mu         0.2      1.58      1.00e-12  3.58e-58     65.6 
 3 mu         0.3      1.67      9.39e- 7  1.12e-41     42.6 
 4 mu         0.4      1.94      1.52e- 3  4.49e-30     36.6 
 5 mu         0.5      1.36      1.55e- 1  3.48e-21     13.1 
 6 mu         0.6      1.27      5.51e- 2  2.11e-15      7.70
 7 mu         0.7      0.933     7.10e- 2  2.70e-23      7.17
 8 mu         0.8      1.12      4.73e- 3  9.54e-35      7.49
 9 mu         0.9      1.73      1.36e- 8  9.33e-55     19.3 
10 mu_1       0.1      5.59      1.13e-23  1.39e-85    297.  
11 mu_1       0.2      1.14      3.38e-12  1.72e-57     40.5 
12 mu_1       0.3      1.82      2.00e- 6  3.60e-41     45.9 
13 mu_1       0.4      1.88      2.04e- 3  1.08e-29     33.9 
14 mu_1       0.5      1.36      1.40e- 1  6.68e-21     12.9 
15 mu_1       0.6      1.26      7.03e- 2  4.12e-16      8.32
16 mu_1       0.7      0.923     6.78e- 2  4.51e-24      6.64
17 mu_1       0.8      1.13      3.88e- 3  1.39e-35      7.61
18 mu_1       0.9      1.74      8.95e- 9  1.21e-55     20.2 
19 mu_0       0.1      4.44      1.04e-24  6.50e-88    235.  
20 mu_0       0.2      1.69      4.09e-13  1.81e-59     71.9 
21 mu_0       0.3      1.60      4.82e- 7  6.49e-43     41.1 
22 mu_0       0.4      1.97      1.20e- 3  3.02e-31     38.4 
23 mu_0       0.5      1.37      1.29e- 1  2.81e-22     13.9 
24 mu_0       0.6      1.29      3.97e- 2  4.67e-15      8.46
25 mu_0       0.7      0.956     7.72e- 2  7.96e-23      8.41
26 mu_0       0.8      1.07      7.71e- 3  4.21e-34      7.16
27 mu_0       0.9      1.64      5.50e- 8  8.24e-54     17.7 
[1] "Total run time was 368.68 seconds"
