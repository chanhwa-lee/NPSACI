
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7655"
[1] "cluster size dist'n: "

50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 69 70 71 72 73 74 75 76 
 1  1  3  1  4  1  2  3  3  1  1  3  1  2  1  1  1  2  2  5  2  1  2  1  1  2 
77 80 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 98 99 
 2  2  2  1  2  5  4  1  2  4  7  3  2  1  4  1  2  4  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03048 0.34484 0.60355 1.00000 6.50304 
[1] "event indicator table: "

   0    1 
4608 3047 
[1] "treatment indicator table: "

   0    1 
2759 4896 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3728
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3927
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 440.404 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.417 0.0760
 2 mu         0.1   0.2 0.484 0.0769
 3 mu         0.1   0.3 0.556 0.0829
 4 mu         0.1   0.4 0.556 0.0780
 5 mu         0.1   0.5 0.584 0.0782
 6 mu         0.2   0.1 0.503 0.0909
 7 mu         0.2   0.2 0.613 0.0968
 8 mu         0.2   0.3 0.686 0.100 
 9 mu         0.2   0.4 0.716 0.0940
10 mu         0.2   0.5 0.764 0.0914
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.839        0.606  2.21e-14      6.09
 2 mu         0.2      1.18         0.955  1.34e- 5      4.57
 3 mu         0.3      1.07         1.04   4.76e- 2      4.22
 4 mu         0.4      1.02         0.994  3.52e- 1      1.81
 5 mu         0.5      1.01         1.00   5.01e- 1      1.45
 6 mu         0.6      0.981        0.983  6.43e- 1      1.46
 7 mu         0.7      0.993        0.981  5.84e- 1      1.46
 8 mu         0.8      0.997        0.992  5.27e- 1      1.71
 9 mu         0.9      0.992        0.966  5.15e- 1      2.18
10 mu_1       0.1      0.858        0.603  8.82e-14      6.78
11 mu_1       0.2      1.19         0.932  2.68e- 5      5.09
12 mu_1       0.3      1.06         1.01   6.44e- 2      3.75
13 mu_1       0.4      1.02         0.998  3.58e- 1      1.80
14 mu_1       0.5      1.00         0.990  5.04e- 1      1.44
15 mu_1       0.6      0.980        0.979  6.44e- 1      1.45
16 mu_1       0.7      0.995        0.981  5.87e- 1      1.47
17 mu_1       0.8      0.997        0.993  5.16e- 1      1.70
18 mu_1       0.9      0.994        0.972  5.14e- 1      2.21
19 mu_0       0.1      0.836        0.573  1.48e-14      6.01
20 mu_0       0.2      1.18         0.968  1.00e- 5      4.67
21 mu_0       0.3      1.08         1.03   4.04e- 2      4.42
22 mu_0       0.4      1.02         0.985  3.49e- 1      1.86
23 mu_0       0.5      1.01         1.01   4.88e- 1      1.47
24 mu_0       0.6      0.982        1.00   6.12e- 1      1.47
25 mu_0       0.7      0.990        0.980  5.79e- 1      1.48
26 mu_0       0.8      1.00         1.01   5.70e- 1      1.75
27 mu_0       0.9      0.978        0.959  5.27e- 1      1.87
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08      2.45e-29  3.78e-76     70.0 
 2 mu         0.2      8.54      3.34e-16  4.56e-51    603.  
 3 mu         0.3      2.14      2.31e- 9  1.66e-36     70.5 
 4 mu         0.4      1.86      5.40e- 5  2.79e-26     29.9 
 5 mu         0.5      2.21      4.82e- 3  1.86e-18     48.5 
 6 mu         0.6      1.24      1.10e- 1  3.42e-12     14.3 
 7 mu         0.7      1.44      6.80e- 2  1.33e-19     10.8 
 8 mu         0.8      1.70      1.39e- 1  4.37e-31     13.2 
 9 mu         0.9      1.95      1.75e- 4  4.33e-52     39.9 
10 mu_1       0.1      1.82      1.75e-28  3.61e-75    124.  
11 mu_1       0.2      7.94      1.18e-15  2.18e-50    532.  
12 mu_1       0.3      1.94      5.35e- 9  5.27e-36     66.6 
13 mu_1       0.4      1.93      9.33e- 5  6.67e-26     29.6 
14 mu_1       0.5      2.18      5.21e- 3  3.55e-18     48.5 
15 mu_1       0.6      1.21      1.22e- 1  2.15e-12     13.8 
16 mu_1       0.7      1.47      6.61e- 2  3.35e-20     11.5 
17 mu_1       0.8      1.68      1.57e- 1  1.02e-31     14.1 
18 mu_1       0.9      1.96      1.33e- 4  9.95e-53     40.7 
19 mu_0       0.1      0.997     7.79e-30  1.91e-77     64.1 
20 mu_0       0.2      8.69      1.22e-16  2.59e-52    620.  
21 mu_0       0.3      2.23      1.01e- 9  1.08e-37     72.1 
22 mu_0       0.4      1.81      2.79e- 5  2.12e-27     30.2 
23 mu_0       0.5      2.24      3.82e- 3  1.69e-19     48.5 
24 mu_0       0.6      1.30      7.37e- 2  3.88e-13     15.0 
25 mu_0       0.7      1.35      5.44e- 2  3.65e-19      9.87
26 mu_0       0.8      1.77      1.38e- 1  1.73e-30     12.2 
27 mu_0       0.9      1.86      5.54e- 4  3.44e-51     32.9 
[1] "Total run time was 443.818 seconds"
