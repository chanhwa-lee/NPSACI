
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7280"
[1] "cluster size dist'n: "

50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 
 2  2  1  4  3  2  1  5  2  1  3  5  1  2  1  1  4  2  1  4  3  1  1  1  1  3 
76 77 78 79 80 81 82 83 87 88 93 94 95 96 98 99 
 2  2  1  3  3  2  2  3  5  4  3  3  1  3  4  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02711 0.33187 0.59953 1.00000 6.95221 
[1] "event indicator table: "

   0    1 
4246 3034 
[1] "treatment indicator table: "

   0    1 
2928 4352 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3687
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 385.233 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.396 0.0661
 2 mu         0.1   0.2 0.487 0.0939
 3 mu         0.1   0.3 0.527 0.0967
 4 mu         0.1   0.4 0.598 0.0700
 5 mu         0.1   0.5 0.659 0.102 
 6 mu         0.2   0.1 0.374 0.0500
 7 mu         0.2   0.2 0.432 0.0551
 8 mu         0.2   0.3 0.476 0.0574
 9 mu         0.2   0.4 0.547 0.0447
10 mu         0.2   0.5 0.574 0.0505
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.04         0.987    0.0154      3.02
 2 mu         0.2      1.00         1.02     0.338       1.79
 3 mu         0.3      1.03         1.02     0.582       1.73
 4 mu         0.4      0.988        0.989    0.362       1.57
 5 mu         0.5      0.989        0.984    0.537       1.55
 6 mu         0.6      0.985        0.942    0.660       1.48
 7 mu         0.7      0.974        0.963    0.612       1.58
 8 mu         0.8      1.04         1.04     0.415       1.60
 9 mu         0.9      1.05         1.04     0.281       1.95
10 mu_1       0.1      1.02         0.982    0.0276      2.95
11 mu_1       0.2      1.00         1.00     0.332       1.82
12 mu_1       0.3      1.03         1.03     0.568       1.78
13 mu_1       0.4      0.984        0.972    0.365       1.59
14 mu_1       0.5      0.990        0.979    0.535       1.56
15 mu_1       0.6      0.984        0.944    0.662       1.47
16 mu_1       0.7      0.974        0.973    0.609       1.57
17 mu_1       0.8      1.04         1.04     0.413       1.61
18 mu_1       0.9      1.04         1.05     0.264       1.96
19 mu_0       0.1      1.04         0.982    0.0140      3.06
20 mu_0       0.2      1.00         1.02     0.339       1.78
21 mu_0       0.3      1.03         1.02     0.585       1.71
22 mu_0       0.4      0.991        0.995    0.359       1.56
23 mu_0       0.5      0.989        0.987    0.534       1.55
24 mu_0       0.6      0.985        0.947    0.658       1.50
25 mu_0       0.7      0.974        0.961    0.591       1.59
26 mu_0       0.8      1.03         1.03     0.424       1.53
27 mu_0       0.9      1.06         1.01     0.432       1.91
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.555     1.93e-23  6.43e-91     27.6 
 2 mu         0.2      0.485     4.88e-12  2.26e-62     18.4 
 3 mu         0.3      0.603     4.89e- 6  1.06e-45      6.79
 4 mu         0.4      0.839     6.33e- 3  6.72e-34      5.58
 5 mu         0.5      0.886     1.03e- 1  9.01e-25      7.87
 6 mu         0.6      1.05      1.15e- 1  2.40e-17      5.90
 7 mu         0.7      1.14      8.29e- 2  5.19e-23     11.7 
 8 mu         0.8      1.11      4.26e- 3  1.39e-35      6.74
 9 mu         0.9      1.43      1.02e- 8  6.79e-58     34.5 
10 mu_1       0.1      0.658     1.14e-22  6.36e-90     34.4 
11 mu_1       0.2      0.444     1.43e-11  1.12e-61     16.7 
12 mu_1       0.3      0.645     1.01e- 5  3.50e-45      6.24
13 mu_1       0.4      0.839     9.32e- 3  1.66e-33      6.00
14 mu_1       0.5      0.899     1.17e- 1  1.78e-24      8.15
15 mu_1       0.6      1.06      1.23e- 1  3.96e-17      6.07
16 mu_1       0.7      1.14      9.81e- 2  1.34e-23     11.5 
17 mu_1       0.8      1.12      3.40e- 3  3.13e-36      7.07
18 mu_1       0.9      1.42      6.73e- 9  1.36e-58     35.1 
19 mu_0       0.1      0.544     8.82e-24  7.44e-93     27.4 
20 mu_0       0.2      0.495     2.52e-12  2.95e-64     18.9 
21 mu_0       0.3      0.585     2.67e- 6  1.58e-47      7.03
22 mu_0       0.4      0.838     4.24e- 3  1.17e-35      5.58
23 mu_0       0.5      0.874     7.74e- 2  1.88e-26      7.58
24 mu_0       0.6      1.03      9.73e- 2  6.25e-19      5.99
25 mu_0       0.7      1.15      6.03e- 2  1.42e-22     12.4 
26 mu_0       0.8      1.07      7.74e- 3  5.68e-35      5.76
27 mu_0       0.9      1.49      4.13e- 8  5.56e-57     28.7 
[1] "Total run time was 388.656 seconds"
