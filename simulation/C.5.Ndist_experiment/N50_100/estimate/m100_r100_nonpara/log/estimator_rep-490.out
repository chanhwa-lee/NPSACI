
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7337"
[1] "cluster size dist'n: "

50 51 52 53 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 
 1  2  3  1  3  2  1  5  2  2  4  3  3  3  2  2  3  3  2  1  1  1  2  2  4  1 
78 79 80 81 83 84 85 86 87 89 90 91 92 93 94 95 96 97 99 
 2  2  2  3  3  3  2  1  3  1  2  2  2  2  2  1  4  2  2 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04797 0.38789 0.64367 1.00000 6.00000 
[1] "event indicator table: "

   0    1 
4423 2914 
[1] "treatment indicator table: "

   0    1 
2491 4846 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3657
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 55"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 355.548 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.232 0.0597
 2 mu         0.1   0.2 0.287 0.0684
 3 mu         0.1   0.3 0.338 0.0708
 4 mu         0.1   0.4 0.385 0.0811
 5 mu         0.1   0.5 0.421 0.0902
 6 mu         0.2   0.1 0.267 0.0543
 7 mu         0.2   0.2 0.322 0.0588
 8 mu         0.2   0.3 0.361 0.0641
 9 mu         0.2   0.4 0.423 0.0566
10 mu         0.2   0.5 0.467 0.0613
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.698       0.0747  4.38e-11      9.30
 2 mu         0.2      0.824       0.693   4.09e- 4      3.24
 3 mu         0.3      0.908       0.835   1.27e- 1      2.14
 4 mu         0.4      0.978       0.982   3.53e- 1      1.62
 5 mu         0.5      0.996       0.984   4.90e- 1      1.53
 6 mu         0.6      1.02        1.01    6.10e- 1      1.63
 7 mu         0.7      1.01        0.993   5.58e- 1      1.75
 8 mu         0.8      1.01        0.965   6.85e- 1      1.68
 9 mu         0.9      1.03        1.03    4.05e- 1      1.95
10 mu_1       0.1      0.682       0.145   1.59e-10      7.66
11 mu_1       0.2      0.826       0.706   7.43e- 4      2.99
12 mu_1       0.3      0.924       0.878   1.57e- 1      2.07
13 mu_1       0.4      0.976       0.992   3.87e- 1      1.57
14 mu_1       0.5      1.00        0.999   5.00e- 1      1.57
15 mu_1       0.6      1.02        0.996   6.32e- 1      1.60
16 mu_1       0.7      1.00        0.985   5.71e- 1      1.79
17 mu_1       0.8      1.01        0.965   6.72e- 1      1.65
18 mu_1       0.9      1.03        1.03    4.03e- 1      1.96
19 mu_0       0.1      0.699       0.0670  3.10e-11      9.57
20 mu_0       0.2      0.823       0.665   3.26e- 4      3.30
21 mu_0       0.3      0.902       0.823   1.15e- 1      2.17
22 mu_0       0.4      0.979       0.972   3.31e- 1      1.66
23 mu_0       0.5      0.993       0.977   4.55e- 1      1.48
24 mu_0       0.6      1.02        1.01    5.77e- 1      1.66
25 mu_0       0.7      1.01        1.00    5.30e- 1      1.63
26 mu_0       0.8      1.00        0.965   7.10e- 1      1.81
27 mu_0       0.9      1.05        1.01    4.23e- 1      1.86
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    0.00208     1.06e-30  9.87e-67    0.0783
 2 mu         0.2    0.929       1.72e-17  1.86e-43   33.1   
 3 mu         0.3    1.45        3.96e-10  1.02e-30   62.6   
 4 mu         0.4    0.862       1.39e- 5  8.33e-22   10.5   
 5 mu         0.5    1.06        3.51e- 3  4.97e-15   11.7   
 6 mu         0.6    1.00        1.46e- 1  6.12e-10    9.91  
 7 mu         0.7    1.39        2.21e- 1  8.67e-17   15.7   
 8 mu         0.8    1.30        1.38e- 1  3.93e-27    7.43  
 9 mu         0.9    1.38        5.51e- 5  9.97e-46   20.9   
10 mu_1       0.1    0.00501     6.99e-30  8.54e-66    0.177 
11 mu_1       0.2    1.17        5.82e-17  8.70e-43   43.5   
12 mu_1       0.3    1.31        9.56e-10  3.19e-30   54.8   
13 mu_1       0.4    0.903       2.40e- 5  1.95e-21   11.3   
14 mu_1       0.5    1.05        4.20e- 3  9.30e-15   11.3   
15 mu_1       0.6    1.01        1.62e- 1  2.31e-10    9.98  
16 mu_1       0.7    1.42        2.61e- 1  2.80e-17   16.0   
17 mu_1       0.8    1.29        1.62e- 1  1.11e-27    7.64  
18 mu_1       0.9    1.38        4.21e- 5  2.51e-46   21.2   
19 mu_0       0.1    0.00176     3.16e-31  1.49e-67    0.0674
20 mu_0       0.2    0.868       6.89e-18  1.47e-44   30.5   
21 mu_0       0.3    1.51        1.56e-10  9.25e-32   66.0   
22 mu_0       0.4    0.834       7.13e- 6  8.79e-23    9.95  
23 mu_0       0.5    1.08        2.03e- 3  6.29e-16   12.1   
24 mu_0       0.6    0.991       1.13e- 1  1.86e-10    9.80  
25 mu_0       0.7    1.34        1.47e- 1  2.24e-16   15.1   
26 mu_0       0.8    1.34        1.46e- 1  1.52e-26    8.14  
27 mu_0       0.9    1.35        1.60e- 4  7.72e-45   18.3   
[1] "Total run time was 359.043 seconds"
