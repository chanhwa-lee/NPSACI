
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 7550"
[1] "cluster size dist'n: "

50 51 52 53 54 55 56 57 58 60 61 63 64 65 66 67 68 69 70 71 72 73 74 76 77 78 
 1  1  1  3  3  1  3  1  3  3  3  2  1  1  1  2  5  3  1  3  3  2  1  1  3  1 
79 80 81 82 83 84 86 87 88 89 90 91 93 94 95 96 97 98 99 
 2  3  5  4  5  1  1  1  2  3  2  1  1  2  3  2  5  3  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03336 0.36427 0.61461 1.00000 5.91316 
[1] "event indicator table: "

   0    1 
4582 2968 
[1] "treatment indicator table: "

   0    1 
2697 4853 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3775
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 3775
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 362.991 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.378 0.0952
 2 mu         0.1   0.2 0.488 0.128 
 3 mu         0.1   0.3 0.546 0.130 
 4 mu         0.1   0.4 0.586 0.139 
 5 mu         0.1   0.5 0.644 0.146 
 6 mu         0.2   0.1 0.290 0.0452
 7 mu         0.2   0.2 0.391 0.0752
 8 mu         0.2   0.3 0.446 0.0619
 9 mu         0.2   0.4 0.478 0.0595
10 mu         0.2   0.5 0.537 0.0576
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.956       0.0533  9.28e-10     14.8 
 2 mu         0.2      0.892       0.845   1.61e- 3      3.14
 3 mu         0.3      0.948       0.932   2.33e- 1      1.95
 4 mu         0.4      0.979       0.960   3.71e- 1      1.63
 5 mu         0.5      1.00        0.990   6.06e- 1      1.58
 6 mu         0.6      1.01        0.993   6.98e- 1      1.47
 7 mu         0.7      1.03        1.01    5.60e- 1      1.49
 8 mu         0.8      0.980       0.982   6.38e- 1      1.47
 9 mu         0.9      1.06        1.07    9.09e- 2      1.88
10 mu_1       0.1      0.965       0.104   3.10e- 9     12.3 
11 mu_1       0.2      0.899       0.877   2.74e- 3      2.92
12 mu_1       0.3      0.952       0.924   2.43e- 1      2.03
13 mu_1       0.4      0.981       0.961   3.77e- 1      1.65
14 mu_1       0.5      1.00        0.993   5.89e- 1      1.59
15 mu_1       0.6      1.01        0.987   7.07e- 1      1.48
16 mu_1       0.7      1.02        1.01    5.66e- 1      1.52
17 mu_1       0.8      0.980       0.986   6.32e- 1      1.50
18 mu_1       0.9      1.06        1.07    8.50e- 2      1.88
19 mu_0       0.1      0.955       0.0476  6.87e-10     15.0 
20 mu_0       0.2      0.891       0.825   1.33e- 3      3.20
21 mu_0       0.3      0.947       0.946   2.13e- 1      1.91
22 mu_0       0.4      0.978       0.947   3.67e- 1      1.61
23 mu_0       0.5      1.01        0.973   5.97e- 1      1.61
24 mu_0       0.6      1.00        0.995   6.85e- 1      1.45
25 mu_0       0.7      1.03        1.02    5.46e- 1      1.44
26 mu_0       0.8      0.977       0.973   6.64e- 1      1.46
27 mu_0       0.9      1.05        1.04    1.43e- 1      1.88
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1  0.0000448     3.58e-28  1.70e-78   0.00178
 2 mu         0.2  0.249         1.02e-14  9.25e-52  15.7    
 3 mu         0.3  1.05          9.73e- 8  2.56e-36  34.5    
 4 mu         0.4  1.14          1.56e- 3  1.53e-25  15.0    
 5 mu         0.5  1.39          1.13e- 1  2.25e-17  10.8    
 6 mu         0.6  1.34          2.45e- 1  6.02e-11  11.7    
 7 mu         0.7  1.04          1.29e- 1  9.53e-16   6.86   
 8 mu         0.8  0.997         1.70e- 2  1.27e-26  10.7    
 9 mu         0.9  2.18          2.62e- 7  2.04e-46  39.8    
10 mu_1       0.1  0.000124      2.12e-27  1.58e-77   0.00468
11 mu_1       0.2  0.339         3.42e-14  4.29e-51  20.6    
12 mu_1       0.3  1.07          1.96e- 7  7.92e-36  30.3    
13 mu_1       0.4  1.18          2.49e- 3  3.55e-25  12.9    
14 mu_1       0.5  1.38          1.46e- 1  4.17e-17  11.3    
15 mu_1       0.6  1.34          2.88e- 1  9.66e-11  12.4    
16 mu_1       0.7  1.01          1.26e- 1  3.58e-16   6.50   
17 mu_1       0.8  1.01          1.71e- 2  4.17e-27  10.9    
18 mu_1       0.9  2.20          1.81e- 7  5.96e-47  41.5    
19 mu_0       0.1  0.0000360     1.63e-28  1.37e-79   0.00146
20 mu_0       0.2  0.226         4.19e-15  8.34e-53  14.4    
21 mu_0       0.3  1.05          5.51e- 8  2.64e-37  36.4    
22 mu_0       0.4  1.12          9.36e- 4  1.84e-26  16.5    
23 mu_0       0.5  1.39          8.01e- 2  3.25e-18  10.4    
24 mu_0       0.6  1.33          2.86e- 1  5.79e-12  10.8    
25 mu_0       0.7  1.09          1.50e- 1  2.34e-15   8.18   
26 mu_0       0.8  0.937         2.94e- 2  4.67e-26   9.64   
27 mu_0       0.9  1.99          9.93e- 7  1.50e-45  24.1    
[1] "Total run time was 366.134 seconds"
