
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1306"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  6  4  4  6  3  9 10 14  8  5  8  2  5  4 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04981 0.37945 0.62674 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
795 511 
[1] "treatment indicator table: "

  0   1 
435 871 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 640
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 666
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 173.64 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.373 0.0485
 2 mu         0.1   0.2 0.518 0.0957
 3 mu         0.1   0.3 0.560 0.0825
 4 mu         0.1   0.4 0.567 0.0781
 5 mu         0.1   0.5 0.593 0.0783
 6 mu         0.2   0.1 0.364 0.0404
 7 mu         0.2   0.2 0.478 0.0485
 8 mu         0.2   0.3 0.509 0.0387
 9 mu         0.2   0.4 0.523 0.0360
10 mu         0.2   0.5 0.568 0.0392
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.904        0.742 0.000108       4.41
 2 mu         0.2      0.969        1     0.00857        2.55
 3 mu         0.3      0.986        1     0.0724         1.74
 4 mu         0.4      0.995        0.997 0.250          1.68
 5 mu         0.5      0.998        1     0.513          1.53
 6 mu         0.6      0.999        0.994 0.757          1.27
 7 mu         0.7      0.994        1     0.809          1.24
 8 mu         0.8      0.978        0.995 0.672          1.20
 9 mu         0.9      0.967        1     0.356          1.52
10 mu_1       0.1      0.976        1     0.000487       3.49
11 mu_1       0.2      0.985        1     0.0224         2.08
12 mu_1       0.3      0.989        1     0.130          1.75
13 mu_1       0.4      0.995        1     0.351          1.68
14 mu_1       0.5      0.997        1     0.610          1.42
15 mu_1       0.6      0.997        0.987 0.792          1.21
16 mu_1       0.7      0.991        0.999 0.813          1.25
17 mu_1       0.8      0.975        0.993 0.620          1.20
18 mu_1       0.9      0.967        1     0.325          1.54
19 mu_0       0.1      0.896        0.693 0.0000655      4.60
20 mu_0       0.2      0.965        1     0.00510        2.76
21 mu_0       0.3      0.985        1     0.0477         1.93
22 mu_0       0.4      0.995        0.996 0.183          1.68
23 mu_0       0.5      0.999        1     0.416          1.64
24 mu_0       0.6      1.00         0.999 0.668          1.41
25 mu_0       0.7      1.00         1.00  0.798          1.24
26 mu_0       0.8      0.988        0.998 0.789          1.29
27 mu_0       0.9      0.970        0.994 0.583          1.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.934   0.00000661  3.03e-19     46.1 
 2 mu         0.2      1.54    0.00190     3.18e-13     31.4 
 3 mu         0.3      1.73    0.0330      1.06e- 9     30.4 
 4 mu         0.4      1.51    0.181       3.33e- 7     31.3 
 5 mu         0.5      1.26    0.595       2.89e- 5     16.1 
 6 mu         0.6      1.16    0.844       1.11e- 3     11.8 
 7 mu         0.7      1.11    0.903       5.48e- 4      5.53
 8 mu         0.8      1.10    0.907       1.87e- 6      5.33
 9 mu         0.9      1.44    0.222       8.12e-11     22.6 
10 mu_1       0.1      1.41    0.0000443   3.03e-18     38.2 
11 mu_1       0.2      1.82    0.00679     1.59e-12     29.7 
12 mu_1       0.3      1.72    0.0786      3.52e- 9     35.8 
13 mu_1       0.4      1.38    0.327       8.33e- 7     27.7 
14 mu_1       0.5      1.19    0.813       5.78e- 5     12.6 
15 mu_1       0.6      1.15    0.810       1.85e- 3     11.0 
16 mu_1       0.7      1.11    1.02        6.67e- 5      4.80
17 mu_1       0.8      1.12    0.862       3.89e- 7      5.77
18 mu_1       0.9      1.50    0.167       1.50e-11     25.1 
19 mu_0       0.1      0.882   0.00000189  0            47.2 
20 mu_0       0.2      1.47    0.000614    0            32.7 
21 mu_0       0.3      1.73    0.0109      0            28.1 
22 mu_0       0.4      1.59    0.0895      0            33.8 
23 mu_0       0.5      1.33    0.388       0            20.8 
24 mu_0       0.6      1.18    0.807       0            13.1 
25 mu_0       0.7      1.11    0.826       0             8.19
26 mu_0       0.8      1.02    0.917       0             5.68
27 mu_0       0.9      0.891   0.168       0             8.21
[1] "Total run time was 177.717 seconds"
