
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1276"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  4  6  5  5 10  5  9  4  8  8 10  5  4  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03321 0.37296 0.65053 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
754 522 
[1] "treatment indicator table: "

  0   1 
487 789 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 675
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 601
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 221.254 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.365 0.0747
 2 mu         0.1   0.2 0.423 0.0837
 3 mu         0.1   0.3 0.444 0.0871
 4 mu         0.1   0.4 0.473 0.0896
 5 mu         0.1   0.5 0.498 0.0934
 6 mu         0.2   0.1 0.319 0.0513
 7 mu         0.2   0.2 0.376 0.0530
 8 mu         0.2   0.3 0.405 0.0554
 9 mu         0.2   0.4 0.444 0.0579
10 mu         0.2   0.5 0.484 0.0583
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.997        0.931    0.0564      4.98
 2 mu         0.2      0.991        0.994    0.296       2.41
 3 mu         0.3      0.997        1        0.616       1.44
 4 mu         0.4      0.999        1        0.781       1.43
 5 mu         0.5      1.00         1        0.748       1.28
 6 mu         0.6      1.01         1        0.785       1.21
 7 mu         0.7      1.00         0.999    0.825       1.25
 8 mu         0.8      1.01         1        0.729       1.36
 9 mu         0.9      1.01         1        0.463       1.76
10 mu_1       0.1      0.985        0.997    0.167       2.59
11 mu_1       0.2      0.999        1        0.503       1.55
12 mu_1       0.3      1.00         1        0.754       1.47
13 mu_1       0.4      1.00         1        0.745       1.41
14 mu_1       0.5      1.01         1.00     0.749       1.20
15 mu_1       0.6      1.01         1.01     0.808       1.21
16 mu_1       0.7      1.00         1        0.809       1.27
17 mu_1       0.8      1.01         0.999    0.715       1.39
18 mu_1       0.9      1.02         1        0.430       1.85
19 mu_0       0.1      0.999        0.924    0.0441      5.42
20 mu_0       0.2      0.989        0.993    0.245       2.75
21 mu_0       0.3      0.996        1        0.541       1.62
22 mu_0       0.4      0.997        1        0.774       1.44
23 mu_0       0.5      1.00         1.00     0.747       1.35
24 mu_0       0.6      1.01         1.00     0.751       1.20
25 mu_0       0.7      1.00         1        0.817       1.21
26 mu_0       0.8      1.00         0.993    0.771       1.33
27 mu_0       0.9      1.00         1        0.558       1.48
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      5.81     0.0000646  8.31e-15    327.  
 2 mu         0.2      1.85     0.00819    1.72e- 9     55.8 
 3 mu         0.3      1.05     0.0743     1.20e- 6     11.0 
 4 mu         0.4      1.00     0.394      7.43e- 5      5.70
 5 mu         0.5      1.04     0.830      1.69e- 3      3.29
 6 mu         0.6      1.04     0.972      1.70e- 3      3.15
 7 mu         0.7      1.06     1.04       2.09e- 5      2.56
 8 mu         0.8      1.21     0.773      3.17e- 8      7.39
 9 mu         0.9      1.50     0.102      3.44e-13     17.3 
10 mu_1       0.1      0.922    0.000237   0            22.8 
11 mu_1       0.2      0.893    0.0213     0            14.2 
12 mu_1       0.3      0.931    0.156      0             7.50
13 mu_1       0.4      1.02     0.466      0             4.40
14 mu_1       0.5      1.05     0.959      0             3.36
15 mu_1       0.6      1.04     0.974      0             2.91
16 mu_1       0.7      1.08     1.00       0             2.96
17 mu_1       0.8      1.24     0.580      0             8.31
18 mu_1       0.9      1.53     0.0722     0            19.2 
19 mu_0       0.1      6.35     0.0000252  0           363.  
20 mu_0       0.2      2.09     0.00221    0            69.7 
21 mu_0       0.3      1.11     0.0344     0            14.1 
22 mu_0       0.4      0.989    0.232      0             7.60
23 mu_0       0.5      1.03     0.589      0             3.88
24 mu_0       0.6      1.04     0.987      0             3.49
25 mu_0       0.7      1.02     0.915      0             2.70
26 mu_0       0.8      1.09     0.961      0             4.02
27 mu_0       0.9      1.24     0.113      0            15.4 
[1] "Total run time was 225.585 seconds"
