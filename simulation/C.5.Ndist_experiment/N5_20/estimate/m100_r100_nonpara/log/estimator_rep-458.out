
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1244"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  3  4  6 13  8  7  2  8  9  9  5  4  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01949 0.30719 0.57244 1.00000 4.58577 
[1] "event indicator table: "

  0   1 
732 512 
[1] "treatment indicator table: "

  0   1 
474 770 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 125.791 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.442 0.0578
 2 mu         0.1   0.2 0.564 0.0594
 3 mu         0.1   0.3 0.656 0.0843
 4 mu         0.1   0.4 0.657 0.0676
 5 mu         0.1   0.5 0.668 0.0615
 6 mu         0.2   0.1 0.407 0.0464
 7 mu         0.2   0.2 0.526 0.0434
 8 mu         0.2   0.3 0.613 0.0568
 9 mu         0.2   0.4 0.632 0.0458
10 mu         0.2   0.5 0.653 0.0423
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.02         0.995    0.0439      3.66
 2 mu         0.2      1.05         1        0.312       2.34
 3 mu         0.3      1.04         1        0.679       1.72
 4 mu         0.4      1.02         1.01     0.791       1.32
 5 mu         0.5      1.00         1        0.858       1.18
 6 mu         0.6      0.995        1        0.872       1.12
 7 mu         0.7      0.996        1        0.841       1.15
 8 mu         0.8      0.994        1        0.771       1.34
 9 mu         0.9      0.980        0.997    0.510       1.69
10 mu_1       0.1      1.06         1        0.135       2.82
11 mu_1       0.2      1.05         1        0.519       2.08
12 mu_1       0.3      1.03         1.01     0.707       1.53
13 mu_1       0.4      1.01         1        0.818       1.21
14 mu_1       0.5      0.997        1        0.851       1.17
15 mu_1       0.6      0.995        1        0.875       1.11
16 mu_1       0.7      0.996        1        0.820       1.17
17 mu_1       0.8      0.993        1        0.750       1.38
18 mu_1       0.9      0.979        1        0.478       1.79
19 mu_0       0.1      1.02         0.994    0.0338      3.98
20 mu_0       0.2      1.05         1        0.260       2.40
21 mu_0       0.3      1.04         1        0.609       1.81
22 mu_0       0.4      1.02         1.01     0.766       1.39
23 mu_0       0.5      1.01         1        0.811       1.18
24 mu_0       0.6      0.995        1        0.858       1.15
25 mu_0       0.7      0.994        0.996    0.889       1.12
26 mu_0       0.8      0.998        1.00     0.725       1.21
27 mu_0       0.9      0.992        1        0.599       1.60
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.24     0.0000608  3.30e-17     75.7 
 2 mu         0.2      1.38     0.00919    1.73e-11     41.4 
 3 mu         0.3      1.13     0.123      3.83e- 8     14.3 
 4 mu         0.4      0.977    0.462      9.07e- 6      4.92
 5 mu         0.5      1.01     0.888      6.29e- 4      3.00
 6 mu         0.6      1.04     1.12       2.01e- 2      2.33
 7 mu         0.7      1.02     1.03       9.49e- 4      2.09
 8 mu         0.8      1.13     0.710      3.70e- 6      4.80
 9 mu         0.9      1.83     0.0764     1.81e-10     44.6 
10 mu_1       0.1      1.62     0.000392   3.30e-16     63.0 
11 mu_1       0.2      1.31     0.0293     8.65e-11     19.4 
12 mu_1       0.3      1.02     0.277      1.28e- 7      8.80
13 mu_1       0.4      0.956    0.646      2.27e- 5      3.63
14 mu_1       0.5      1.02     0.980      1.26e- 3      3.00
15 mu_1       0.6      1.05     1.22       6.67e- 3      2.19
16 mu_1       0.7      1.03     1.09       2.47e- 4      2.79
17 mu_1       0.8      1.17     0.573      9.73e- 7      5.94
18 mu_1       0.9      1.91     0.0538     4.23e-11     49.5 
19 mu_0       0.1      1.20     0.0000225  0            77.1 
20 mu_0       0.2      1.39     0.00465    0            47.5 
21 mu_0       0.3      1.18     0.0573     0            18.7 
22 mu_0       0.4      0.991    0.285      0             6.56
23 mu_0       0.5      0.989    0.709      0             3.30
24 mu_0       0.6      1.03     1.04       0             2.56
25 mu_0       0.7      1.01     1.15       0             2.32
26 mu_0       0.8      0.993    0.849      0             3.01
27 mu_0       0.9      1.09     0.182      0             8.33
[1] "Total run time was 129.19 seconds"
