
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1221"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  7  5  8  8  6  6  8  6  7  6  4  7  3  7  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03256 0.35585 0.62864 1.00000 5.30425 
[1] "event indicator table: "

  0   1 
735 486 
[1] "treatment indicator table: "

  0   1 
421 800 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 614
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 58"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 607
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 143.863 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.381 0.101 
 2 mu         0.1   0.2 0.434 0.124 
 3 mu         0.1   0.3 0.499 0.134 
 4 mu         0.1   0.4 0.529 0.132 
 5 mu         0.1   0.5 0.567 0.152 
 6 mu         0.2   0.1 0.391 0.0839
 7 mu         0.2   0.2 0.467 0.105 
 8 mu         0.2   0.3 0.531 0.115 
 9 mu         0.2   0.4 0.573 0.113 
10 mu         0.2   0.5 0.615 0.128 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.828        0.402 0.0000461     13.9 
 2 mu         0.2      0.984        0.803 0.00653       15.7 
 3 mu         0.3      0.966        0.933 0.0791         6.58
 4 mu         0.4      0.965        0.981 0.321          2.17
 5 mu         0.5      0.978        1     0.671          1.35
 6 mu         0.6      0.990        1     0.775          1.14
 7 mu         0.7      0.998        1     0.859          1.27
 8 mu         0.8      1.01         1     0.603          1.55
 9 mu         0.9      1.00         1     0.164          2.18
10 mu_1       0.1      1.00         0.696 0.000229      21.0 
11 mu_1       0.2      1.01         0.885 0.0168        12.3 
12 mu_1       0.3      0.972        0.958 0.139          4.07
13 mu_1       0.4      0.974        1     0.437          1.51
14 mu_1       0.5      0.984        1     0.710          1.27
15 mu_1       0.6      0.993        1.00  0.799          1.14
16 mu_1       0.7      1.00         1     0.784          1.32
17 mu_1       0.8      1.01         1     0.541          1.61
18 mu_1       0.9      1.00         1     0.142          2.26
19 mu_0       0.1      0.809        0.351 0.0000258     13.2 
20 mu_0       0.2      0.978        0.764 0.00398       16.5 
21 mu_0       0.3      0.963        0.916 0.0534         7.65
22 mu_0       0.4      0.960        0.974 0.244          2.61
23 mu_0       0.5      0.972        1     0.575          1.42
24 mu_0       0.6      0.984        1     0.736          1.21
25 mu_0       0.7      0.993        1     0.800          1.14
26 mu_0       0.8      1.00         1     0.841          1.40
27 mu_0       0.9      1.01         1     0.363          1.66
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.404    0.0000871  2.42e-16     29.1 
 2 mu         0.2      1.62     0.00554    3.18e-11     89.6 
 3 mu         0.3      2.18     0.0899     3.13e- 8     69.9 
 4 mu         0.4      1.96     0.318      4.16e- 6     40.6 
 5 mu         0.5      1.50     0.782      1.85e- 4     20.0 
 6 mu         0.6      1.16     1.01       4.10e- 3      5.79
 7 mu         0.7      1.11     0.896      1.46e- 2     11.2 
 8 mu         0.8      1.44     0.772      8.54e- 5     37.0 
 9 mu         0.9      1.78     0.173      8.35e- 9     54.1 
10 mu_1       0.1      1.01     0.000619   2.42e-15     64.7 
11 mu_1       0.2      2.20     0.0218     1.59e-10     99.5 
12 mu_1       0.3      2.27     0.169      1.04e- 7     51.8 
13 mu_1       0.4      1.84     0.580      1.04e- 5     33.9 
14 mu_1       0.5      1.39     1.08       3.70e- 4     13.4 
15 mu_1       0.6      1.12     1.07       6.84e- 3      4.36
16 mu_1       0.7      1.16     0.849      4.64e- 3     14.2 
17 mu_1       0.8      1.52     0.697      2.37e- 5     40.8 
18 mu_1       0.9      1.79     0.127      2.06e- 9     53.1 
19 mu_0       0.1      0.337    0.0000330  0            25.2 
20 mu_0       0.2      1.47     0.00231    0            87.1 
21 mu_0       0.3      2.13     0.0345     0            77.7 
22 mu_0       0.4      2.04     0.126      0            45.2 
23 mu_0       0.5      1.62     0.525      0            26.7 
24 mu_0       0.6      1.22     0.914      0             8.92
25 mu_0       0.7      1.01     0.855      0             4.91
26 mu_0       0.8      1.12     0.674      0            21.8 
27 mu_0       0.9      1.69     0.170      0            63.7 
[1] "Total run time was 148.02 seconds"
