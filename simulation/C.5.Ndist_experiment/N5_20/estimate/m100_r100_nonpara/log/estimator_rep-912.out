
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1334"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  5  2  6  4  5  8 10 11  8  4  8  9  5  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03499 0.35955 0.61487 1.00000 7.00000 
[1] "event indicator table: "

  0   1 
787 547 
[1] "treatment indicator table: "

  0   1 
471 863 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 676
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 74"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 124.191 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.346 0.116 
 2 mu         0.1   0.2 0.396 0.138 
 3 mu         0.1   0.3 0.435 0.121 
 4 mu         0.1   0.4 0.475 0.132 
 5 mu         0.1   0.5 0.536 0.0894
 6 mu         0.2   0.1 0.330 0.0856
 7 mu         0.2   0.2 0.394 0.103 
 8 mu         0.2   0.3 0.447 0.0903
 9 mu         0.2   0.4 0.490 0.101 
10 mu         0.2   0.5 0.546 0.0648
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.890        0.817  0.000957      7.25
 2 mu         0.2      0.959        0.977  0.0459        3.43
 3 mu         0.3      0.985        0.997  0.269         2.99
 4 mu         0.4      0.975        0.986  0.504         1.92
 5 mu         0.5      0.982        0.988  0.698         1.33
 6 mu         0.6      0.999        1.00   0.791         1.15
 7 mu         0.7      1.00         1      0.842         1.20
 8 mu         0.8      0.999        1.00   0.731         1.39
 9 mu         0.9      1.01         1.00   0.465         1.72
10 mu_1       0.1      0.930        0.898  0.00403       4.02
11 mu_1       0.2      0.995        1      0.0993        3.68
12 mu_1       0.3      0.984        1      0.405         2.54
13 mu_1       0.4      0.974        0.988  0.603         1.57
14 mu_1       0.5      0.988        0.993  0.721         1.28
15 mu_1       0.6      1.00         1      0.820         1.17
16 mu_1       0.7      1.00         1      0.809         1.19
17 mu_1       0.8      1.00         1      0.708         1.44
18 mu_1       0.9      1.02         1.00   0.428         1.73
19 mu_0       0.1      0.885        0.806  0.000616      8.01
20 mu_0       0.2      0.950        0.961  0.0325        3.51
21 mu_0       0.3      0.985        1      0.211         3.19
22 mu_0       0.4      0.975        0.996  0.438         2.15
23 mu_0       0.5      0.977        0.984  0.640         1.39
24 mu_0       0.6      0.995        0.999  0.746         1.22
25 mu_0       0.7      1.00         1      0.826         1.22
26 mu_0       0.8      0.994        1      0.725         1.20
27 mu_0       0.9      0.988        0.984  0.622         1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.36   0.0000123   1.77e-19    256.  
 2 mu         0.2       4.73   0.00397     1.85e-13    222.  
 3 mu         0.3       2.89   0.0546      6.17e-10     88.0 
 4 mu         0.4       1.68   0.321       1.94e- 7     21.9 
 5 mu         0.5       1.21   0.922       1.69e- 5      9.00
 6 mu         0.6       1.09   1.01        6.47e- 4      2.87
 7 mu         0.7       1.08   1.03        4.33e- 3      3.37
 8 mu         0.8       1.11   0.888       1.93e- 5      7.02
 9 mu         0.9       1.43   0.161       9.42e-10     28.1 
10 mu_1       0.1       6.20   0.0000715   1.77e-18    342.  
11 mu_1       0.2       3.95   0.0124      9.27e-13    148.  
12 mu_1       0.3       2.18   0.124       2.06e- 9     39.1 
13 mu_1       0.4       1.41   0.544       4.86e- 7     17.1 
14 mu_1       0.5       1.14   0.980       3.37e- 5      5.62
15 mu_1       0.6       1.07   1.04        1.08e- 3      3.10
16 mu_1       0.7       1.07   1.00        8.25e- 4      3.45
17 mu_1       0.8       1.12   0.826       4.84e- 6      7.61
18 mu_1       0.9       1.47   0.122       2.20e-10     31.2 
19 mu_0       0.1       4.16   0.00000606  0           247.  
20 mu_0       0.2       4.93   0.00150     0           240.  
21 mu_0       0.3       3.20   0.0269      0           109.  
22 mu_0       0.4       1.85   0.178       0            30.4 
23 mu_0       0.5       1.29   0.609       0            12.4 
24 mu_0       0.6       1.11   0.928       0             3.65
25 mu_0       0.7       1.08   1.11        0             3.55
26 mu_0       0.8       1.08   0.857       0             4.68
27 mu_0       0.9       1.02   0.250       0            10.8 
[1] "Total run time was 127.488 seconds"
