
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1264"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  8  4  8  6  6 10  9  3  7  5  6  5  5  6  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02426 0.32258 0.57121 0.93884 5.00000 
[1] "event indicator table: "

  0   1 
744 520 
[1] "treatment indicator table: "

  0   1 
463 801 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 79"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 632
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 121.534 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.426 0.0499
 2 mu         0.1   0.2 0.501 0.0479
 3 mu         0.1   0.3 0.553 0.0513
 4 mu         0.1   0.4 0.669 0.0871
 5 mu         0.1   0.5 0.670 0.0802
 6 mu         0.2   0.1 0.391 0.0439
 7 mu         0.2   0.2 0.483 0.0372
 8 mu         0.2   0.3 0.525 0.0343
 9 mu         0.2   0.4 0.623 0.0637
10 mu         0.2   0.5 0.631 0.0577
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.936        0.866   0.00619      5.25
 2 mu         0.2      0.964        0.953   0.112        2.24
 3 mu         0.3      0.985        1       0.379        1.58
 4 mu         0.4      0.993        0.997   0.665        1.29
 5 mu         0.5      0.996        1       0.752        1.16
 6 mu         0.6      0.999        1       0.847        1.18
 7 mu         0.7      1.00         1       0.865        1.16
 8 mu         0.8      1.01         1.00    0.735        1.33
 9 mu         0.9      1.04         1       0.252        2.01
10 mu_1       0.1      0.942        0.949   0.0193       2.93
11 mu_1       0.2      0.977        0.994   0.191        1.80
12 mu_1       0.3      0.994        0.988   0.486        1.52
13 mu_1       0.4      0.996        1       0.705        1.20
14 mu_1       0.5      0.997        1       0.785        1.19
15 mu_1       0.6      1.00         1       0.860        1.19
16 mu_1       0.7      1.00         1       0.853        1.20
17 mu_1       0.8      1.02         1.00    0.694        1.35
18 mu_1       0.9      1.04         1       0.226        2.05
19 mu_0       0.1      0.935        0.854   0.00474      5.71
20 mu_0       0.2      0.961        0.959   0.0922       2.57
21 mu_0       0.3      0.981        1       0.333        1.66
22 mu_0       0.4      0.991        0.997   0.616        1.37
23 mu_0       0.5      0.994        1       0.718        1.19
24 mu_0       0.6      0.997        1       0.820        1.20
25 mu_0       0.7      1.00         1       0.848        1.16
26 mu_0       0.8      1.01         1.00    0.823        1.23
27 mu_0       0.9      1.03         1.00    0.485        1.67
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.22     0.0000627  7.39e-18     64.4 
 2 mu         0.2      2.27     0.00585    7.75e-12     62.7 
 3 mu         0.3      1.52     0.0663     2.58e- 8     28.4 
 4 mu         0.4      1.08     0.309      8.13e- 6     10.2 
 5 mu         0.5      0.944    0.708      7.05e- 4      3.02
 6 mu         0.6      0.975    1.03       1.01e- 2      2.82
 7 mu         0.7      1.09     1.19       3.27e- 4      3.23
 8 mu         0.8      1.32     0.984      2.19e- 6      8.52
 9 mu         0.9      2.29     0.128      1.73e-10     89.8 
10 mu_1       0.1      3.09     0.000456   7.39e-17     92.1 
11 mu_1       0.2      1.88     0.0211     3.87e-11     44.8 
12 mu_1       0.3      1.19     0.156      8.59e- 8     14.9 
13 mu_1       0.4      0.965    0.505      2.03e- 5      4.50
14 mu_1       0.5      0.941    0.859      1.41e- 3      2.86
15 mu_1       0.6      1.01     1.07       2.24e- 3      2.68
16 mu_1       0.7      1.12     1.21       6.22e- 5      3.33
17 mu_1       0.8      1.37     0.852      3.49e- 7     10.7 
18 mu_1       0.9      2.38     0.0982     2.40e-11     99.8 
19 mu_0       0.1      2.12     0.0000242  0            61.4 
20 mu_0       0.2      2.36     0.00201    0            67.2 
21 mu_0       0.3      1.66     0.0310     0            34.8 
22 mu_0       0.4      1.16     0.143      0            14.2 
23 mu_0       0.5      0.947    0.513      0             4.31
24 mu_0       0.6      0.924    0.851      0             3.02
25 mu_0       0.7      1.00     1.01       0             2.99
26 mu_0       0.8      1.14     1.18       0             3.47
27 mu_0       0.9      1.45     0.345      0            10.8 
[1] "Total run time was 124.756 seconds"
