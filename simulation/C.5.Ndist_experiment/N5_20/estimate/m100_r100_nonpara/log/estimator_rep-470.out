
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1297"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  6  7  5  6  6  7  3  9  8  8  8  5 11  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04407 0.36122 0.61114 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
743 554 
[1] "treatment indicator table: "

  0   1 
447 850 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 673
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 68"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 80"
[1] "     Cluster: 84"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 149.18 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.427 0.0919
 2 mu         0.1   0.2 0.560 0.120 
 3 mu         0.1   0.3 0.554 0.105 
 4 mu         0.1   0.4 0.553 0.106 
 5 mu         0.1   0.5 0.705 0.127 
 6 mu         0.2   0.1 0.449 0.0773
 7 mu         0.2   0.2 0.596 0.0981
 8 mu         0.2   0.3 0.602 0.0887
 9 mu         0.2   0.4 0.620 0.0948
10 mu         0.2   0.5 0.769 0.119 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.825        0.661 0.0000650      6.70
 2 mu         0.2      0.999        0.906 0.0120        12.2 
 3 mu         0.3      1.06         0.956 0.145         10.9 
 4 mu         0.4      1.05         1     0.443          5.72
 5 mu         0.5      1.03         1.00  0.755          2.24
 6 mu         0.6      1.02         1.02  0.822          1.31
 7 mu         0.7      1.00         1     0.869          1.21
 8 mu         0.8      0.987        1     0.659          1.24
 9 mu         0.9      1.00         0.982 0.282          1.92
10 mu_1       0.1      0.963        0.920 0.000300      11.4 
11 mu_1       0.2      1.07         0.924 0.0283        14.1 
12 mu_1       0.3      1.06         1     0.235          8.44
13 mu_1       0.4      1.03         1     0.566          3.50
14 mu_1       0.5      1.02         1.01  0.779          1.43
15 mu_1       0.6      1.01         1.02  0.857          1.28
16 mu_1       0.7      0.999        1     0.846          1.21
17 mu_1       0.8      0.985        1.00  0.610          1.28
18 mu_1       0.9      1.00         0.986 0.251          1.96
19 mu_0       0.1      0.810        0.612 0.0000389      7.33
20 mu_0       0.2      0.982        0.891 0.00787       11.7 
21 mu_0       0.3      1.06         0.943 0.106         11.9 
22 mu_0       0.4      1.05         1     0.361          7.19
23 mu_0       0.5      1.04         1     0.671          3.05
24 mu_0       0.6      1.03         1.02  0.769          1.34
25 mu_0       0.7      1.01         1.02  0.840          1.21
26 mu_0       0.8      0.993        1     0.748          1.18
27 mu_0       0.9      0.990        1     0.563          1.59
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      13.8    0.0000138   4.36e-15   1362.  
 2 mu         0.2      12.8    0.00225     5.08e-10   1178.  
 3 mu         0.3       6.64   0.0322      4.38e- 7    467.  
 4 mu         0.4       3.28   0.192       5.00e- 5    112.  
 5 mu         0.5       1.90   0.741       1.85e- 3     48.0 
 6 mu         0.6       1.32   1.08        3.28e- 2     16.0 
 7 mu         0.7       1.20   1.14        2.35e- 2      3.24
 8 mu         0.8       1.30   0.972       2.81e- 4      7.85
 9 mu         0.9       1.52   0.125       4.34e- 8     28.7 
10 mu_1       0.1      18.8    0.000100    4.12e-14   1816.  
11 mu_1       0.2       9.56   0.00736     2.40e- 9    786.  
12 mu_1       0.3       4.37   0.0821      1.38e- 6    208.  
13 mu_1       0.4       2.45   0.339       1.18e- 4     72.5 
14 mu_1       0.5       1.59   0.942       3.49e- 3     34.3 
15 mu_1       0.6       1.23   1.11        5.17e- 2      9.55
16 mu_1       0.7       1.21   1.09        7.76e- 3      3.76
17 mu_1       0.8       1.35   0.810       4.68e- 5      9.81
18 mu_1       0.9       1.57   0.0955      6.43e- 9     31.8 
19 mu_0       0.1      13.3    0.00000309  0          1312.  
20 mu_0       0.2      13.7    0.000548    0          1277.  
21 mu_0       0.3       7.61   0.0130      0           579.  
22 mu_0       0.4       3.84   0.102       0           162.  
23 mu_0       0.5       2.21   0.449       0            61.8 
24 mu_0       0.6       1.46   1.05        0            25.8 
25 mu_0       0.7       1.17   1.14        0             5.58
26 mu_0       0.8       1.12   0.851       0             5.10
27 mu_0       0.9       1.09   0.178       0             9.57
[1] "Total run time was 153.353 seconds"
