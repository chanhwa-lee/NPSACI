
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1302"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  7 10  8  4  7  2  7  6  4  6  4  6 11 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03142 0.37416 0.63321 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
798 504 
[1] "treatment indicator table: "

  0   1 
436 866 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 664
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 109.078 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.394 0.0504
 2 mu         0.1   0.2 0.431 0.0697
 3 mu         0.1   0.3 0.431 0.0916
 4 mu         0.1   0.4 0.488 0.0573
 5 mu         0.1   0.5 0.537 0.0799
 6 mu         0.2   0.1 0.377 0.0373
 7 mu         0.2   0.2 0.429 0.0623
 8 mu         0.2   0.3 0.446 0.0824
 9 mu         0.2   0.4 0.490 0.0561
10 mu         0.2   0.5 0.543 0.0820
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.920        0.662   0.00469      4.36
 2 mu         0.2      1.00         0.976   0.0871       2.45
 3 mu         0.3      1.01         1       0.336        1.92
 4 mu         0.4      0.998        1       0.660        1.39
 5 mu         0.5      0.992        0.985   0.754        1.24
 6 mu         0.6      0.990        0.997   0.762        1.21
 7 mu         0.7      0.992        0.992   0.749        1.17
 8 mu         0.8      0.994        1       0.800        1.21
 9 mu         0.9      0.991        1       0.651        1.39
10 mu_1       0.1      0.959        0.935   0.0175       2.94
11 mu_1       0.2      1.01         1       0.174        2.41
12 mu_1       0.3      1.00         1       0.484        1.63
13 mu_1       0.4      0.995        0.997   0.675        1.28
14 mu_1       0.5      0.991        0.988   0.796        1.24
15 mu_1       0.6      0.990        1.00    0.724        1.19
16 mu_1       0.7      0.993        0.993   0.769        1.19
17 mu_1       0.8      0.994        1       0.789        1.22
18 mu_1       0.9      0.990        1       0.630        1.41
19 mu_0       0.1      0.916        0.616   0.00327      4.59
20 mu_0       0.2      1.00         0.964   0.0653       2.66
21 mu_0       0.3      1.01         1       0.272        2.06
22 mu_0       0.4      1.00         1       0.583        1.46
23 mu_0       0.5      0.993        0.985   0.713        1.25
24 mu_0       0.6      0.990        0.990   0.818        1.24
25 mu_0       0.7      0.991        1.00    0.702        1.19
26 mu_0       0.8      0.995        0.998   0.805        1.22
27 mu_0       0.9      0.996        0.997   0.726        1.35
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.08     0.0000419  7.66e-19     48.1 
 2 mu         0.2      1.25     0.00559    8.04e-13     38.0 
 3 mu         0.3      1.11     0.0587     2.67e- 9     19.7 
 4 mu         0.4      1.03     0.300      8.43e- 7      9.54
 5 mu         0.5      1.05     0.741      7.31e- 5      3.90
 6 mu         0.6      1.06     1.04       2.80e- 3      3.53
 7 mu         0.7      1.04     0.944      5.70e- 3      3.21
 8 mu         0.8      1.02     0.782      1.13e- 4      3.96
 9 mu         0.9      1.05     0.103      8.95e- 8      9.32
10 mu_1       0.1      1.52     0.000252   7.66e-18     53.4 
11 mu_1       0.2      1.21     0.0203     4.02e-12     29.2 
12 mu_1       0.3      1.03     0.141      8.91e- 9     16.0 
13 mu_1       0.4      1.02     0.535      2.11e- 6      5.96
14 mu_1       0.5      1.05     0.909      1.46e- 4      3.94
15 mu_1       0.6      1.03     1.07       4.67e- 3      3.21
16 mu_1       0.7      1.01     0.967      7.41e- 4      3.38
17 mu_1       0.8      1.01     0.641      1.28e- 5      4.13
18 mu_1       0.9      1.06     0.0718     1.25e- 8     10.4 
19 mu_0       0.1      1.03     0.0000194  0            48.6 
20 mu_0       0.2      1.26     0.00200    0            40.2 
21 mu_0       0.3      1.14     0.0262     0            23.8 
22 mu_0       0.4      1.04     0.148      0            11.9 
23 mu_0       0.5      1.06     0.520      0             4.48
24 mu_0       0.6      1.10     0.883      0             4.14
25 mu_0       0.7      1.09     1.07       0             3.24
26 mu_0       0.8      1.06     0.883      0             3.61
27 mu_0       0.9      0.882    0.226      0             4.83
[1] "Total run time was 112.175 seconds"
