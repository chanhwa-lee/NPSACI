
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1303"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  5  6  8  5  8  4  3 15 11  3  5  7  5  6  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02099 0.33427 0.57925 0.99162 4.09983 
[1] "event indicator table: "

  0   1 
741 562 
[1] "treatment indicator table: "

  0   1 
530 773 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 680
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 46"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 623
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 218.649 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.404 0.136 
 2 mu         0.1   0.2 0.460 0.123 
 3 mu         0.1   0.3 0.486 0.113 
 4 mu         0.1   0.4 0.534 0.108 
 5 mu         0.1   0.5 0.532 0.105 
 6 mu         0.2   0.1 0.425 0.0950
 7 mu         0.2   0.2 0.482 0.0820
 8 mu         0.2   0.3 0.527 0.0773
 9 mu         0.2   0.4 0.586 0.0668
10 mu         0.2   0.5 0.588 0.0665
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.768        0.327  0.000738      9.06
 2 mu         0.2      0.959        0.827  0.0473        5.45
 3 mu         0.3      1.01         0.925  0.268         2.35
 4 mu         0.4      1.01         1.00   0.549         1.73
 5 mu         0.5      1.00         1      0.738         1.20
 6 mu         0.6      1.00         1.00   0.899         1.11
 7 mu         0.7      1.01         1.01   0.852         1.32
 8 mu         0.8      1.00         0.992  0.566         1.81
 9 mu         0.9      1.00         0.912  0.123         3.19
10 mu_1       0.1      0.893        0.694  0.00296       9.46
11 mu_1       0.2      1.00         0.923  0.0956        3.49
12 mu_1       0.3      1.01         0.973  0.371         2.30
13 mu_1       0.4      1.00         1      0.619         1.48
14 mu_1       0.5      1.00         1      0.781         1.16
15 mu_1       0.6      1.01         1.00   0.914         1.13
16 mu_1       0.7      1.01         1.00   0.805         1.38
17 mu_1       0.8      1.00         0.989  0.513         1.89
18 mu_1       0.9      1.01         0.903  0.102         3.45
19 mu_0       0.1      0.754        0.286  0.000491      9.90
20 mu_0       0.2      0.948        0.775  0.0352        5.94
21 mu_0       0.3      1.01         0.934  0.224         2.49
22 mu_0       0.4      1.01         0.986  0.502         1.90
23 mu_0       0.5      1.00         1      0.695         1.25
24 mu_0       0.6      1.00         1      0.857         1.13
25 mu_0       0.7      1.01         1.00   0.884         1.18
26 mu_0       0.8      1.01         1.00   0.755         1.47
27 mu_0       0.9      0.989        1      0.310         2.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.68     0.0000866  8.91e-17     77.4 
 2 mu         0.2      2.17     0.00641    4.67e-11     58.3 
 3 mu         0.3      2.08     0.0711     1.04e- 7     40.9 
 4 mu         0.4      1.64     0.307      2.45e- 5     26.6 
 5 mu         0.5      1.19     0.787      1.70e- 3      7.89
 6 mu         0.6      1.05     0.938      5.43e- 2      3.52
 7 mu         0.7      1.48     0.952      1.47e- 2     19.2 
 8 mu         0.8      3.77     0.477      2.22e- 4    144.  
 9 mu         0.9     15.4      0.0422     4.40e- 8    945.  
10 mu_1       0.1      2.40     0.000593   8.91e-16     81.9 
11 mu_1       0.2      2.13     0.0232     2.33e-10     44.8 
12 mu_1       0.3      1.83     0.144      3.45e- 7     40.9 
13 mu_1       0.4      1.40     0.499      6.12e- 5     19.9 
14 mu_1       0.5      1.08     0.892      3.40e- 3      4.73
15 mu_1       0.6      1.10     1.02       5.24e- 2      5.86
16 mu_1       0.7      1.73     0.868      3.24e- 3     27.4 
17 mu_1       0.8      4.46     0.383      4.28e- 5    179.  
18 mu_1       0.9     17.0      0.0304     1.47e- 8   1050.  
19 mu_0       0.1      1.60     0.0000299  0            77.4 
20 mu_0       0.2      2.18     0.00253    0            61.7 
21 mu_0       0.3      2.19     0.0355     0            40.9 
22 mu_0       0.4      1.81     0.190      0            31.0 
23 mu_0       0.5      1.30     0.548      0            11.0 
24 mu_0       0.6      0.967    0.893      0             2.76
25 mu_0       0.7      0.913    0.812      0             5.91
26 mu_0       0.8      1.02     0.555      0            17.0 
27 mu_0       0.9      1.07     0.0467     0            22.2 
[1] "Total run time was 223.675 seconds"
