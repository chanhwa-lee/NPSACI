
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1219"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 8  5  8  5 10  6  7  7  3  3  7  9  5  4  5  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01982 0.30962 0.58149 1.00000 4.87740 
[1] "event indicator table: "

  0   1 
741 478 
[1] "treatment indicator table: "

  0   1 
452 767 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 578
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 146.413 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.379 0.0508
 2 mu         0.1   0.2 0.485 0.0717
 3 mu         0.1   0.3 0.494 0.0683
 4 mu         0.1   0.4 0.496 0.0643
 5 mu         0.1   0.5 0.496 0.0715
 6 mu         0.2   0.1 0.351 0.0487
 7 mu         0.2   0.2 0.443 0.0560
 8 mu         0.2   0.3 0.478 0.0654
 9 mu         0.2   0.4 0.497 0.0534
10 mu         0.2   0.5 0.519 0.0657
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.754        0.490  0.000705      4.35
 2 mu         0.2      0.848        0.846  0.0478        2.67
 3 mu         0.3      0.939        0.987  0.290         2.21
 4 mu         0.4      0.981        1      0.530         1.61
 5 mu         0.5      0.991        1      0.725         1.20
 6 mu         0.6      0.997        1      0.841         1.14
 7 mu         0.7      0.994        1.00   0.827         1.19
 8 mu         0.8      0.967        0.971  0.657         1.37
 9 mu         0.9      0.908        0.969  0.143         3.03
10 mu_1       0.1      0.828        0.806  0.00284       3.63
11 mu_1       0.2      0.917        0.967  0.0978        2.71
12 mu_1       0.3      0.975        1      0.401         2.11
13 mu_1       0.4      0.989        1      0.640         1.37
14 mu_1       0.5      0.993        0.999  0.754         1.18
15 mu_1       0.6      0.997        1      0.857         1.16
16 mu_1       0.7      0.991        0.997  0.777         1.20
17 mu_1       0.8      0.962        0.963  0.621         1.44
18 mu_1       0.9      0.904        0.973  0.122         3.25
19 mu_0       0.1      0.745        0.453  0.000468      4.43
20 mu_0       0.2      0.831        0.815  0.0352        2.79
21 mu_0       0.3      0.924        0.959  0.241         2.42
22 mu_0       0.4      0.975        0.996  0.457         1.77
23 mu_0       0.5      0.990        0.997  0.656         1.29
24 mu_0       0.6      0.998        1      0.791         1.14
25 mu_0       0.7      1.00         1      0.876         1.19
26 mu_0       0.8      0.988        0.991  0.767         1.24
27 mu_0       0.9      0.949        0.964  0.331         1.61
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.878    0.000105   8.52e-14     32.2 
 2 mu         0.2      3.01     0.0125     7.84e- 9     94.5 
 3 mu         0.3      3.59     0.108      5.17e- 6     99.7 
 4 mu         0.4      2.49     0.366      4.33e- 4     56.6 
 5 mu         0.5      1.49     0.785      1.11e- 2     16.2 
 6 mu         0.6      1.14     1.08       1.09e- 1      3.99
 7 mu         0.7      1.46     1.14       4.97e- 3     10.7 
 8 mu         0.8      2.64     0.764      3.32e- 5     35.1 
 9 mu         0.9      4.85     0.126      3.65e- 9     91.4 
10 mu_1       0.1      2.03     0.000684   7.24e-13     64.4 
11 mu_1       0.2      3.86     0.0366     3.33e- 8    118.  
12 mu_1       0.3      3.34     0.252      1.47e- 5     92.3 
13 mu_1       0.4      2.04     0.625      9.21e- 4     39.3 
14 mu_1       0.5      1.30     0.955      1.89e- 2      8.97
15 mu_1       0.6      1.16     1.07       5.66e- 2      3.66
16 mu_1       0.7      1.63     1.07       1.87e- 3     12.7 
17 mu_1       0.8      2.91     0.654      1.09e- 5     41.0 
18 mu_1       0.9      5.11     0.0906     1.07e- 9     97.5 
19 mu_0       0.1      0.750    0.0000454  0            28.6 
20 mu_0       0.2      2.80     0.00591    0            88.6 
21 mu_0       0.3      3.70     0.0449     0           104.  
22 mu_0       0.4      2.78     0.194      0            68.2 
23 mu_0       0.5      1.67     0.503      0            23.3 
24 mu_0       0.6      1.11     0.856      0             4.49
25 mu_0       0.7      1.06     0.984      0             5.95
26 mu_0       0.8      1.56     0.936      0            19.6 
27 mu_0       0.9      2.52     0.275      0            60.9 
[1] "Total run time was 150.639 seconds"
