
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1347"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  4  5  8  4  2  6  5  6  8 13  7  9  9  5  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04427 0.32246 0.58960 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
811 536 
[1] "treatment indicator table: "

  0   1 
505 842 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 710
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 154.008 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.421 0.108
 2 mu         0.1   0.2 0.540 0.159
 3 mu         0.1   0.3 0.553 0.147
 4 mu         0.1   0.4 0.552 0.145
 5 mu         0.1   0.5 0.630 0.161
 6 mu         0.2   0.1 0.489 0.148
 7 mu         0.2   0.2 0.626 0.193
 8 mu         0.2   0.3 0.679 0.204
 9 mu         0.2   0.4 0.704 0.212
10 mu         0.2   0.5 0.795 0.236
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.910        0.677 0.0000312     24.5 
 2 mu         0.2      1.23         0.875 0.00617       37.7 
 3 mu         0.3      1.14         0.975 0.0823        19.7 
 4 mu         0.4      1.03         1.00  0.317          5.58
 5 mu         0.5      1.00         0.996 0.647          1.85
 6 mu         0.6      1.00         1     0.782          1.23
 7 mu         0.7      1.01         1     0.692          1.32
 8 mu         0.8      0.994        0.997 0.392          1.81
 9 mu         0.9      0.918        0.977 0.0641         2.60
10 mu_1       0.1      1.27         0.858 0.000158      43.2 
11 mu_1       0.2      1.26         0.970 0.0158        33.3 
12 mu_1       0.3      1.08         0.974 0.143         11.6 
13 mu_1       0.4      1.01         0.992 0.418          2.66
14 mu_1       0.5      1.00         1     0.721          1.53
15 mu_1       0.6      1.01         1     0.817          1.21
16 mu_1       0.7      1.01         1     0.648          1.42
17 mu_1       0.8      0.989        1     0.351          1.91
18 mu_1       0.9      0.912        0.969 0.0544         2.64
19 mu_0       0.1      0.870        0.670 0.0000172     22.4 
20 mu_0       0.2      1.23         0.858 0.00377       38.8 
21 mu_0       0.3      1.16         0.955 0.0565        23.1 
22 mu_0       0.4      1.05         1.00  0.250          7.53
23 mu_0       0.5      1.00         0.993 0.557          2.16
24 mu_0       0.6      1.00         1     0.728          1.35
25 mu_0       0.7      1.01         1     0.793          1.21
26 mu_0       0.8      1.01         1.00  0.543          1.41
27 mu_0       0.9      0.966        0.999 0.151          2.27
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       3.71    0.0000490  2.87e-16    306.  
 2 mu         0.2       5.66    0.00830    7.52e-11    372.  
 3 mu         0.3       3.73    0.116      1.11e- 7    148.  
 4 mu         0.4       2.23    0.477      1.97e- 5     60.0 
 5 mu         0.5       1.62    0.877      1.09e- 3     23.7 
 6 mu         0.6       1.37    1.18       9.04e- 3      8.64
 7 mu         0.7       1.76    1.05       1.92e- 4     19.1 
 8 mu         0.8       5.23    0.608      6.54e- 7    108.  
 9 mu         0.9      19.1     0.0666     2.84e-11    466.  
10 mu_1       0.1       6.31    0.000263   2.87e-15    483.  
11 mu_1       0.2       5.45    0.0231     3.76e-10    294.  
12 mu_1       0.3       3.03    0.214      3.71e- 7     84.5 
13 mu_1       0.4       1.90    0.617      4.93e- 5     42.9 
14 mu_1       0.5       1.48    0.977      2.19e- 3     13.5 
15 mu_1       0.6       1.34    1.15       2.51e- 3      8.00
16 mu_1       0.7       1.97    1.00       4.57e- 5     25.7 
17 mu_1       0.8       6.07    0.458      1.36e- 7    127.  
18 mu_1       0.9      20.4     0.0433     5.26e-12    517.  
19 mu_0       0.1       3.42    0.0000257  0           286.  
20 mu_0       0.2       5.71    0.00451    0           391.  
21 mu_0       0.3       4.03    0.0730     0           178.  
22 mu_0       0.4       2.46    0.336      0            71.4 
23 mu_0       0.5       1.76    0.751      0            33.8 
24 mu_0       0.6       1.42    1.02       0             9.59
25 mu_0       0.7       1.27    1.19       0             5.98
26 mu_0       0.8       1.89    0.686      0            31.8 
27 mu_0       0.9       6.59    0.143      0           209.  
[1] "Total run time was 158.522 seconds"
