
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1223"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  6 11  9  5  8  7  8  6 10  3  3  5  2  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04362 0.38603 0.63403 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
675 548 
[1] "treatment indicator table: "

  0   1 
439 784 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 606
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 142.132 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.533 0.0955
 2 mu         0.1   0.2 0.547 0.0820
 3 mu         0.1   0.3 0.550 0.0843
 4 mu         0.1   0.4 0.598 0.0864
 5 mu         0.1   0.5 0.607 0.0891
 6 mu         0.2   0.1 0.450 0.0688
 7 mu         0.2   0.2 0.493 0.0565
 8 mu         0.2   0.3 0.512 0.0566
 9 mu         0.2   0.4 0.554 0.0597
10 mu         0.2   0.5 0.572 0.0588
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.01        0.813   0.00297      7.79
 2 mu         0.2       1.02        0.946   0.0619       4.86
 3 mu         0.3       1.01        0.997   0.228        2.50
 4 mu         0.4       1.01        1       0.463        1.58
 5 mu         0.5       1.01        1.00    0.727        1.63
 6 mu         0.6       1.01        1       0.855        1.43
 7 mu         0.7       1.01        1.00    0.865        1.17
 8 mu         0.8       1.01        1       0.764        1.25
 9 mu         0.9       1.02        1.00    0.523        1.44
10 mu_1       0.1       1.06        0.910   0.0107       8.34
11 mu_1       0.2       1.02        0.988   0.116        3.22
12 mu_1       0.3       1.02        1       0.314        1.96
13 mu_1       0.4       1.02        1       0.556        1.58
14 mu_1       0.5       1.01        1.00    0.754        1.61
15 mu_1       0.6       1.01        1.00    0.866        1.37
16 mu_1       0.7       1.01        1.00    0.850        1.20
17 mu_1       0.8       1.01        1.01    0.740        1.25
18 mu_1       0.9       1.02        1       0.499        1.48
19 mu_0       0.1       1.00        0.771   0.00211      7.72
20 mu_0       0.2       1.02        0.924   0.0484       5.27
21 mu_0       0.3       1.01        0.980   0.192        2.73
22 mu_0       0.4       1.01        1       0.401        1.78
23 mu_0       0.5       1.01        1       0.662        1.64
24 mu_0       0.6       1.01        1       0.827        1.52
25 mu_0       0.7       1.01        1.00    0.874        1.23
26 mu_0       0.8       1.01        1       0.820        1.24
27 mu_0       0.9       1.01        1.00    0.640        1.26
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.71    0.0000261   4.01e-17     76.6 
 2 mu         0.2      1.66    0.00237     1.87e-11     42.0 
 3 mu         0.3      1.43    0.0369      3.63e- 8     15.9 
 4 mu         0.4      1.19    0.213       7.35e- 6     11.8 
 5 mu         0.5      1.03    0.580       4.25e- 4      7.53
 6 mu         0.6      0.978   0.879       1.09e- 2      3.75
 7 mu         0.7      1.04    1.02        9.20e- 4      3.27
 8 mu         0.8      1.09    1.21        4.10e- 6      3.11
 9 mu         0.9      0.986   0.278       2.25e-10      6.27
10 mu_1       0.1      2.01    0.000198    3.81e-16     63.9 
11 mu_1       0.2      1.43    0.00879     8.88e-11     17.5 
12 mu_1       0.3      1.21    0.0896      1.15e- 7     15.3 
13 mu_1       0.4      1.07    0.364       1.75e- 5      9.07
14 mu_1       0.5      0.981   0.676       8.08e- 4      6.69
15 mu_1       0.6      0.993   0.930       8.54e- 3      2.92
16 mu_1       0.7      1.07    1.09        3.29e- 4      3.37
17 mu_1       0.8      1.09    1.15        1.28e- 6      3.39
18 mu_1       0.9      0.965   0.223       6.26e-11      6.62
19 mu_0       0.1      1.67    0.00000529  0            78.1 
20 mu_0       0.2      1.72    0.00102     0            48.1 
21 mu_0       0.3      1.52    0.0144      0            20.2 
22 mu_0       0.4      1.28    0.104       0            13.6 
23 mu_0       0.5      1.07    0.412       0             8.37
24 mu_0       0.6      0.957   0.698       0             5.00
25 mu_0       0.7      0.973   0.921       0             3.03
26 mu_0       0.8      1.07    1.08        0             3.82
27 mu_0       0.9      1.18    0.618       0             4.79
[1] "Total run time was 145.352 seconds"
