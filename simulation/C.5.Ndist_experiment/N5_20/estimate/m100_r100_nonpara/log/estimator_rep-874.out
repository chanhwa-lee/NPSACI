
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1195"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2 10  7  7  8 10  7  5  6  8  5  4  9  2  7  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0436  0.3695  0.6126  1.0000  5.7447 
[1] "event indicator table: "

  0   1 
711 484 
[1] "treatment indicator table: "

  0   1 
418 777 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 603
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 24"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 119.241 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.311 0.0596
 2 mu         0.1   0.2 0.404 0.0554
 3 mu         0.1   0.3 0.415 0.0730
 4 mu         0.1   0.4 0.442 0.103 
 5 mu         0.1   0.5 0.482 0.143 
 6 mu         0.2   0.1 0.309 0.0424
 7 mu         0.2   0.2 0.394 0.0332
 8 mu         0.2   0.3 0.406 0.0469
 9 mu         0.2   0.4 0.429 0.0714
10 mu         0.2   0.5 0.468 0.102 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.00         0.895   0.00974      9.47
 2 mu         0.2      1.02         0.998   0.124        3.06
 3 mu         0.3      0.997        1       0.312        1.61
 4 mu         0.4      0.986        1.00    0.531        1.36
 5 mu         0.5      0.992        1.00    0.753        1.21
 6 mu         0.6      0.997        0.999   0.872        1.18
 7 mu         0.7      1.00         1       0.859        1.16
 8 mu         0.8      1.01         1.01    0.857        1.22
 9 mu         0.9      1.03         1       0.617        2.02
10 mu_1       0.1      0.996        0.980   0.0321       3.66
11 mu_1       0.2      1.01         1       0.214        2.02
12 mu_1       0.3      0.984        1       0.416        1.53
13 mu_1       0.4      0.986        0.999   0.628        1.24
14 mu_1       0.5      0.994        0.998   0.769        1.20
15 mu_1       0.6      0.998        1       0.864        1.19
16 mu_1       0.7      1.00         1       0.860        1.15
17 mu_1       0.8      1.02         1.01    0.843        1.23
18 mu_1       0.9      1.03         1       0.594        2.10
19 mu_0       0.1      1.00         0.860   0.00725     10.5 
20 mu_0       0.2      1.03         0.981   0.101        3.63
21 mu_0       0.3      1.00         1       0.267        1.65
22 mu_0       0.4      0.986        1       0.467        1.49
23 mu_0       0.5      0.989        0.997   0.677        1.28
24 mu_0       0.6      0.994        0.995   0.822        1.18
25 mu_0       0.7      0.997        1       0.838        1.20
26 mu_0       0.8      1.00         1       0.792        1.23
27 mu_0       0.9      1.02         1.01    0.742        1.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      2.98     0.000241   2.96e-16    228.  
 2 mu         0.2      2.45     0.0107     6.89e-11    141.  
 3 mu         0.3      1.71     0.123      8.91e- 8     55.5 
 4 mu         0.4      1.40     0.432      1.35e- 5     15.8 
 5 mu         0.5      1.25     1.00       6.26e- 4      4.39
 6 mu         0.6      1.09     1.09       1.33e- 2      2.87
 7 mu         0.7      0.993    0.971      1.52e- 2      2.84
 8 mu         0.8      1.05     0.743      2.29e- 4      4.10
 9 mu         0.9      1.23     0.105      1.41e- 7     10.5 
10 mu_1       0.1      3.29     0.00174    2.80e-15    207.  
11 mu_1       0.2      1.83     0.0395     3.26e-10     63.9 
12 mu_1       0.3      1.41     0.265      2.81e- 7     16.8 
13 mu_1       0.4      1.30     0.744      3.21e- 5      5.84
14 mu_1       0.5      1.18     1.15       1.19e- 3      3.84
15 mu_1       0.6      1.04     0.977      2.11e- 2      3.10
16 mu_1       0.7      0.977    0.998      3.33e- 3      2.86
17 mu_1       0.8      1.07     0.626      4.40e- 5      4.69
18 mu_1       0.9      1.24     0.0743     2.42e- 8     11.7 
19 mu_0       0.1      2.94     0.0000796  0           231.  
20 mu_0       0.2      2.60     0.00425    0           160.  
21 mu_0       0.3      1.85     0.0587     0            72.0 
22 mu_0       0.4      1.47     0.258      0            24.0 
23 mu_0       0.5      1.32     0.755      0             5.81
24 mu_0       0.6      1.18     1.13       0             3.46
25 mu_0       0.7      1.03     0.973      0             3.31
26 mu_0       0.8      0.979    0.797      0             3.46
27 mu_0       0.9      1.11     0.237      0             6.24
[1] "Total run time was 122.52 seconds"
