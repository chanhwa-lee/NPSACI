
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1333"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  5  6  5  9  9  5  6  9  3  2  6  8  6 11  9 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02307 0.32189 0.61702 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
809 524 
[1] "treatment indicator table: "

  0   1 
513 820 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 703
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 630
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 237.396 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.343 0.129 
 2 mu         0.1   0.2 0.392 0.100 
 3 mu         0.1   0.3 0.463 0.178 
 4 mu         0.1   0.4 0.512 0.149 
 5 mu         0.1   0.5 0.519 0.149 
 6 mu         0.2   0.1 0.282 0.0876
 7 mu         0.2   0.2 0.344 0.0623
 8 mu         0.2   0.3 0.383 0.109 
 9 mu         0.2   0.4 0.433 0.0837
10 mu         0.2   0.5 0.447 0.0869
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.833        0.694 0.000147       3.90
 2 mu         0.2      0.923        0.906 0.0120         4.16
 3 mu         0.3      0.949        0.984 0.110          3.03
 4 mu         0.4      0.962        0.978 0.411          1.60
 5 mu         0.5      0.985        0.994 0.717          1.36
 6 mu         0.6      0.997        1     0.814          1.16
 7 mu         0.7      1.00         1.00  0.844          1.20
 8 mu         0.8      1.01         1.01  0.511          1.36
 9 mu         0.9      1.03         1     0.122          3.40
10 mu_1       0.1      0.906        0.908 0.000597       3.19
11 mu_1       0.2      0.958        0.961 0.0261         4.41
12 mu_1       0.3      0.956        0.982 0.175          2.30
13 mu_1       0.4      0.970        0.987 0.533          1.40
14 mu_1       0.5      0.990        1     0.734          1.20
15 mu_1       0.6      0.998        0.997 0.820          1.15
16 mu_1       0.7      1.00         1     0.791          1.22
17 mu_1       0.8      1.01         1.02  0.447          1.41
18 mu_1       0.9      1.03         1     0.0992         3.67
19 mu_0       0.1      0.824        0.675 0.0000967      4.24
20 mu_0       0.2      0.915        0.890 0.00853        4.10
21 mu_0       0.3      0.946        0.970 0.0826         3.34
22 mu_0       0.4      0.957        0.979 0.329          1.74
23 mu_0       0.5      0.979        0.992 0.698          1.53
24 mu_0       0.6      0.995        1     0.768          1.31
25 mu_0       0.7      1.00         1     0.824          1.18
26 mu_0       0.8      1.01         1     0.766          1.28
27 mu_0       0.9      1.01         1     0.325          1.73
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       7.16    0.0000667  2.18e-16    685.  
 2 mu         0.2       5.01    0.00472    5.70e-11    416.  
 3 mu         0.3       2.31    0.0770     8.43e- 8    110.  
 4 mu         0.4       1.49    0.462      1.49e- 5     16.7 
 5 mu         0.5       1.25    0.921      8.30e- 4      8.23
 6 mu         0.6       1.13    1.06       2.21e- 2      4.01
 7 mu         0.7       1.13    1.02       7.79e- 4      3.84
 8 mu         0.8       1.28    0.594      1.55e- 6      6.23
 9 mu         0.9       1.80    0.0598     2.99e-11     32.7 
10 mu_1       0.1       8.31    0.000486   2.18e-15    761.  
11 mu_1       0.2       3.47    0.0162     2.85e-10    231.  
12 mu_1       0.3       1.76    0.164      2.81e- 7     40.9 
13 mu_1       0.4       1.37    0.711      3.74e- 5     10.8 
14 mu_1       0.5       1.19    0.963      1.66e- 3      6.93
15 mu_1       0.6       1.12    1.08       1.06e- 2      4.27
16 mu_1       0.7       1.16    0.991      1.24e- 4      3.99
17 mu_1       0.8       1.33    0.482      2.15e- 7      7.79
18 mu_1       0.9       1.85    0.0391     3.69e-12     36.3 
19 mu_0       0.1       7.03    0.0000201  0           676.  
20 mu_0       0.2       5.39    0.00186    0           462.  
21 mu_0       0.3       2.55    0.0446     0           140.  
22 mu_0       0.4       1.57    0.258      0            24.7 
23 mu_0       0.5       1.31    0.765      0             9.90
24 mu_0       0.6       1.16    0.898      0             5.73
25 mu_0       0.7       1.08    0.969      0             4.51
26 mu_0       0.8       1.10    0.918      0             4.59
27 mu_0       0.9       1.29    0.166      0            10.8 
[1] "Total run time was 242.102 seconds"
