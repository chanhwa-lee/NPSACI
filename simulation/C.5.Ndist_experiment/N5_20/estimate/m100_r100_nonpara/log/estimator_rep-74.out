
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1284"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2  4  7 10 11  5  3  5  6  7 10  4  2  9  7  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0317  0.3320  0.5975  0.9995  5.7482 
[1] "event indicator table: "

  0   1 
775 509 
[1] "treatment indicator table: "

  0   1 
486 798 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 628
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 25"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 393.602 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.437 0.0770
 2 mu         0.1   0.2 0.470 0.0603
 3 mu         0.1   0.3 0.496 0.0627
 4 mu         0.1   0.4 0.537 0.0717
 5 mu         0.1   0.5 0.568 0.0744
 6 mu         0.2   0.1 0.422 0.0580
 7 mu         0.2   0.2 0.462 0.0362
 8 mu         0.2   0.3 0.491 0.0355
 9 mu         0.2   0.4 0.530 0.0398
10 mu         0.2   0.5 0.570 0.0479
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.907        0.737    0.0166      5.79
 2 mu         0.2      1.01         1        0.149       2.43
 3 mu         0.3      1.05         1.00     0.413       2.30
 4 mu         0.4      1.03         1.00     0.667       1.81
 5 mu         0.5      1.01         1.00     0.751       1.32
 6 mu         0.6      1.00         0.996    0.860       1.19
 7 mu         0.7      0.998        0.992    0.864       1.16
 8 mu         0.8      0.996        0.997    0.778       1.31
 9 mu         0.9      0.978        0.987    0.333       2.08
10 mu_1       0.1      0.944        0.997    0.0594      2.89
11 mu_1       0.2      1.05         1        0.289       2.65
12 mu_1       0.3      1.05         1        0.587       2.26
13 mu_1       0.4      1.02         1.01     0.687       1.62
14 mu_1       0.5      1.00         1        0.800       1.24
15 mu_1       0.6      1.00         0.999    0.881       1.16
16 mu_1       0.7      0.998        0.998    0.846       1.16
17 mu_1       0.8      0.995        0.991    0.754       1.36
18 mu_1       0.9      0.976        0.987    0.303       2.17
19 mu_0       0.1      0.903        0.668    0.0119      6.41
20 mu_0       0.2      1.00         0.996    0.114       2.71
21 mu_0       0.3      1.05         1.00     0.339       2.31
22 mu_0       0.4      1.03         1        0.615       1.93
23 mu_0       0.5      1.01         1.01     0.702       1.40
24 mu_0       0.6      1.00         1        0.810       1.23
25 mu_0       0.7      0.998        1        0.884       1.15
26 mu_0       0.8      0.999        0.991    0.804       1.22
27 mu_0       0.9      1.00         1        0.599       1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       4.16    0.0000942  8.30e-17    287.  
 2 mu         0.2       3.05    0.0104     3.87e-11    128.  
 3 mu         0.3       1.78    0.102      7.51e- 8     50.9 
 4 mu         0.4       1.25    0.433      1.52e- 5     11.6 
 5 mu         0.5       1.07    0.891      8.80e- 4      4.98
 6 mu         0.6       1.02    1.02       2.02e- 2      2.77
 7 mu         0.7       1.04    1.03       4.20e- 4      3.15
 8 mu         0.8       1.11    0.674      1.65e- 6      5.66
 9 mu         0.9       1.40    0.138      4.13e-11     16.8 
10 mu_1       0.1       4.13    0.000583   7.89e-16    191.  
11 mu_1       0.2       2.32    0.0317     1.84e-10    101.  
12 mu_1       0.3       1.47    0.217      2.38e- 7     26.8 
13 mu_1       0.4       1.17    0.686      3.61e- 5      9.70
14 mu_1       0.5       1.04    1.02       1.67e- 3      3.34
15 mu_1       0.6       1.01    1.04       2.25e- 3      2.82
16 mu_1       0.7       1.05    0.954      4.00e- 5      3.15
17 mu_1       0.8       1.14    0.525      1.37e- 7      7.08
18 mu_1       0.9       1.43    0.0953     7.25e-12     18.2 
19 mu_0       0.1       4.16    0.0000313  0           298.  
20 mu_0       0.2       3.23    0.00451    0           134.  
21 mu_0       0.3       1.91    0.0525     0            61.2 
22 mu_0       0.4       1.31    0.244      0            14.4 
23 mu_0       0.5       1.09    0.689      0             6.64
24 mu_0       0.6       1.02    1.06       0             2.69
25 mu_0       0.7       1.01    0.996      0             3.15
26 mu_0       0.8       1.01    0.864      0             3.54
27 mu_0       0.9       1.14    0.191      0             9.33
[1] "Total run time was 397.766 seconds"
