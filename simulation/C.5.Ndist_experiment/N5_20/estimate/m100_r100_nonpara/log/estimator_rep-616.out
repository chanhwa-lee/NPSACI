
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1303"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  4  8  8  4  3 11  7  3  5  6  7  6  8  9  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05115 0.45570 0.68910 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
769 534 
[1] "treatment indicator table: "

  0   1 
432 871 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 645
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 39"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 658
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 144.677 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.155 0.0594
 2 mu         0.1   0.2 0.160 0.0924
 3 mu         0.1   0.3 0.245 0.0845
 4 mu         0.1   0.4 0.249 0.0956
 5 mu         0.1   0.5 0.234 0.116 
 6 mu         0.2   0.1 0.219 0.0481
 7 mu         0.2   0.2 0.251 0.0755
 8 mu         0.2   0.3 0.341 0.0652
 9 mu         0.2   0.4 0.356 0.0745
10 mu         0.2   0.5 0.352 0.0917
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.700        0.226  0.000190     15.0 
 2 mu         0.2      0.947        0.632  0.0171        9.61
 3 mu         0.3      1.01         0.913  0.145         3.47
 4 mu         0.4      1.02         1      0.457         1.81
 5 mu         0.5      1.01         1.00   0.744         1.45
 6 mu         0.6      0.997        1      0.807         1.21
 7 mu         0.7      0.993        1      0.856         1.11
 8 mu         0.8      0.993        1      0.678         1.39
 9 mu         0.9      0.999        0.994  0.304         2.15
10 mu_1       0.1      0.996        0.554  0.000855     16.8 
11 mu_1       0.2      1.03         0.868  0.0393        5.83
12 mu_1       0.3      1.03         1      0.232         2.34
13 mu_1       0.4      1.02         1      0.581         1.48
14 mu_1       0.5      1.00         1      0.752         1.25
15 mu_1       0.6      0.994        1      0.830         1.10
16 mu_1       0.7      0.992        1      0.807         1.11
17 mu_1       0.8      0.993        1      0.643         1.44
18 mu_1       0.9      0.999        0.994  0.281         2.30
19 mu_0       0.1      0.667        0.184  0.000117     14.8 
20 mu_0       0.2      0.927        0.584  0.0115       10.6 
21 mu_0       0.3      0.998        0.847  0.108         4.03
22 mu_0       0.4      1.02         1      0.374         2.08
23 mu_0       0.5      1.02         1      0.677         1.65
24 mu_0       0.6      1.00         1      0.771         1.38
25 mu_0       0.7      0.997        1      0.865         1.18
26 mu_0       0.8      0.994        1      0.773         1.23
27 mu_0       0.9      0.994        1      0.506         1.78
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1     18.2     0.0000112   7.74e-17   1672.  
 2 mu         0.2     10.7     0.00206     3.61e-11    814.  
 3 mu         0.3      4.93    0.0279      6.99e- 8    246.  
 4 mu         0.4      2.30    0.172       1.42e- 5     51.6 
 5 mu         0.5      1.30    0.563       8.20e- 4     12.2 
 6 mu         0.6      1.02    0.871       2.10e- 2      5.97
 7 mu         0.7      1.04    1.04        1.51e- 2      3.22
 8 mu         0.8      1.33    0.849       1.94e- 4     18.3 
 9 mu         0.9      2.65    0.149       5.33e- 8     84.5 
10 mu_1       0.1     15.6     0.0000825   7.35e-16   1286.  
11 mu_1       0.2      5.93    0.00850     1.71e-10    313.  
12 mu_1       0.3      2.77    0.0668      2.21e- 7     63.0 
13 mu_1       0.4      1.55    0.301       3.37e- 5     26.3 
14 mu_1       0.5      1.09    0.720       1.56e- 3      8.27
15 mu_1       0.6      0.989   0.976       3.32e- 2      4.97
16 mu_1       0.7      1.07    1.04        2.42e- 3      4.60
17 mu_1       0.8      1.42    0.759       1.87e- 5     22.8 
18 mu_1       0.9      2.82    0.105       4.55e- 9     93.9 
19 mu_0       0.1     18.5     0.00000242  0          1715.  
20 mu_0       0.2     11.9     0.000379    0           939.  
21 mu_0       0.3      5.85    0.0121      0           324.  
22 mu_0       0.4      2.80    0.0907      0            79.3 
23 mu_0       0.5      1.51    0.322       0            17.3 
24 mu_0       0.6      1.07    0.698       0             7.46
25 mu_0       0.7      0.995   1.02        0             3.42
26 mu_0       0.8      0.986   0.966       0             3.12
27 mu_0       0.9      1.11    0.331       0            12.8 
[1] "Total run time was 148.839 seconds"
