
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1250"
[1] "cluster size dist'n: "

 5  6  7  8 10 11 12 13 14 15 16 17 18 19 20 
 6  4  7  6 11  8  9  8  5  5 10  6  7  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0125  0.2761  0.5588  0.9448  4.0000 
[1] "event indicator table: "

  0   1 
722 528 
[1] "treatment indicator table: "

  0   1 
504 746 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 625
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 158.799 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.401 0.0695
 2 mu         0.1   0.2 0.553 0.109 
 3 mu         0.1   0.3 0.601 0.0989
 4 mu         0.1   0.4 0.639 0.0976
 5 mu         0.1   0.5 0.664 0.102 
 6 mu         0.2   0.1 0.385 0.0533
 7 mu         0.2   0.2 0.537 0.0996
 8 mu         0.2   0.3 0.601 0.0832
 9 mu         0.2   0.4 0.637 0.0741
10 mu         0.2   0.5 0.668 0.0747
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.961        0.732 0.000165      14.2 
 2 mu         0.2      1.04         0.933 0.0169        10.5 
 3 mu         0.3      1.06         0.987 0.157          5.43
 4 mu         0.4      1.06         1     0.421          4.42
 5 mu         0.5      1.03         1     0.706          3.46
 6 mu         0.6      1.01         1     0.772          1.75
 7 mu         0.7      1.01         1     0.772          1.32
 8 mu         0.8      1.01         1     0.584          1.56
 9 mu         0.9      0.985        0.998 0.109          2.59
10 mu_1       0.1      1.07         0.926 0.000786      14.8 
11 mu_1       0.2      1.05         0.996 0.0411         6.01
12 mu_1       0.3      1.06         1     0.251          3.57
13 mu_1       0.4      1.04         1     0.531          4.54
14 mu_1       0.5      1.02         1     0.767          2.99
15 mu_1       0.6      1.01         1     0.785          1.50
16 mu_1       0.7      1.01         1     0.754          1.38
17 mu_1       0.8      1.01         1     0.532          1.57
18 mu_1       0.9      0.983        0.995 0.0925         2.72
19 mu_0       0.1      0.950        0.720 0.0000955     14.2 
20 mu_0       0.2      1.04         0.906 0.0109        11.6 
21 mu_0       0.3      1.07         0.985 0.113          6.66
22 mu_0       0.4      1.06         1     0.348          4.34
23 mu_0       0.5      1.04         1     0.625          3.92
24 mu_0       0.6      1.01         1     0.753          2.12
25 mu_0       0.7      1.01         1     0.816          1.24
26 mu_0       0.8      1.02         1.00  0.688          1.52
27 mu_0       0.9      1.01         1     0.263          1.77
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1    103.        0.000425  8.03e-16   8191.  
 2 mu         0.2     61.9       0.0217    1.66e-10   4977.  
 3 mu         0.3     19.7       0.136     1.88e- 7   1322.  
 4 mu         0.4      6.10      0.551     2.45e- 5    200.  
 5 mu         0.5      2.71      1.02      9.46e- 4     88.6 
 6 mu         0.6      1.54      1.07      1.61e- 2     25.7 
 7 mu         0.7      1.14      0.859     3.31e- 4      8.24
 8 mu         0.8      1.07      0.421     6.58e- 7      9.24
 9 mu         0.9      1.15      0.0291    1.27e-11     21.1 
10 mu_1       0.1    109.        0.00237   7.23e-15   9101.  
11 mu_1       0.2     35.6       0.0755    7.49e-10   2765.  
12 mu_1       0.3      9.74      0.319     5.65e- 7    490.  
13 mu_1       0.4      3.76      0.808     5.52e- 5    133.  
14 mu_1       0.5      2.03      1.04      1.70e- 3     48.3 
15 mu_1       0.6      1.32      0.952     4.49e- 3     11.7 
16 mu_1       0.7      1.11      0.831     5.25e- 5      8.83
17 mu_1       0.8      1.08      0.344     9.14e- 8     11.5 
18 mu_1       0.9      1.17      0.0165    1.57e-12     23.4 
19 mu_0       0.1    102.        0.000222  0          8089.  
20 mu_0       0.2     68.4       0.00642   0          5530.  
21 mu_0       0.3     24.0       0.0689    0          1679.  
22 mu_0       0.4      7.66      0.329     0           296.  
23 mu_0       0.5      3.39      0.929     0           129.  
24 mu_0       0.6      1.88      1.12      0            46.7 
25 mu_0       0.7      1.23      0.895     0             9.90
26 mu_0       0.8      1.03      0.621     0            10.1 
27 mu_0       0.9      0.891     0.0950    0             6.20
[1] "Total run time was 162.848 seconds"
