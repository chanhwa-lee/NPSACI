
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1253"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  5  5 10 11  5  2  6  7  5  6  1 10  9  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0396  0.3586  0.6358  1.0000  4.0000 
[1] "event indicator table: "

  0   1 
761 492 
[1] "treatment indicator table: "

  0   1 
462 791 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 616
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 637
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 392.707 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.407 0.0906
 2 mu         0.1   0.2 0.457 0.113 
 3 mu         0.1   0.3 0.467 0.103 
 4 mu         0.1   0.4 0.487 0.0973
 5 mu         0.1   0.5 0.519 0.0774
 6 mu         0.2   0.1 0.417 0.102 
 7 mu         0.2   0.2 0.499 0.137 
 8 mu         0.2   0.3 0.514 0.124 
 9 mu         0.2   0.4 0.535 0.112 
10 mu         0.2   0.5 0.560 0.0853
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.672        0.627 0.000117       2.25
 2 mu         0.2      0.819        0.864 0.0186         2.13
 3 mu         0.3      0.933        0.979 0.173          2.16
 4 mu         0.4      0.992        1     0.449          1.79
 5 mu         0.5      1.00         1     0.686          1.43
 6 mu         0.6      0.997        1     0.697          1.22
 7 mu         0.7      1.00         1     0.818          1.35
 8 mu         0.8      1.01         1     0.494          1.84
 9 mu         0.9      0.938        0.990 0.0792         2.98
10 mu_1       0.1      0.803        0.827 0.000531       2.35
11 mu_1       0.2      0.905        0.975 0.0429         2.30
12 mu_1       0.3      0.975        1     0.264          2.21
13 mu_1       0.4      1.00         1     0.557          1.57
14 mu_1       0.5      1.00         1     0.670          1.42
15 mu_1       0.6      0.997        1     0.716          1.17
16 mu_1       0.7      1.00         1     0.842          1.42
17 mu_1       0.8      1.01         1     0.435          1.96
18 mu_1       0.9      0.930        0.984 0.0647         3.04
19 mu_0       0.1      0.657        0.582 0.0000707      2.32
20 mu_0       0.2      0.798        0.847 0.0125         2.08
21 mu_0       0.3      0.916        0.966 0.134          2.14
22 mu_0       0.4      0.985        1     0.377          1.93
23 mu_0       0.5      1.00         0.997 0.663          1.43
24 mu_0       0.6      0.998        1     0.668          1.32
25 mu_0       0.7      0.997        1     0.742          1.19
26 mu_0       0.8      1.01         1     0.713          1.63
27 mu_0       0.9      1.01         1     0.210          2.44
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      25.8     0.0000422  3.26e-14   1863.  
 2 mu         0.2      63.9     0.00553    3.80e- 9   5731.  
 3 mu         0.3      48.3     0.0757     2.69e- 6   4474.  
 4 mu         0.4      18.3     0.316      1.97e- 4   1634.  
 5 mu         0.5       4.56    0.708      4.86e- 3    311.  
 6 mu         0.6       1.64    1.07       1.51e- 2     28.3 
 7 mu         0.7       1.66    1.24       6.51e- 4     26.5 
 8 mu         0.8       3.14    0.944      6.55e- 6    130.  
 9 mu         0.9       5.72    0.236      1.57e- 9    271.  
10 mu_1       0.1      51.3     0.000266   3.08e-13   4141.  
11 mu_1       0.2      68.7     0.0178     1.79e- 8   6368.  
12 mu_1       0.3      35.5     0.173      7.96e- 6   3314.  
13 mu_1       0.4      10.6     0.518      4.38e- 4    908.  
14 mu_1       0.5       2.71    0.944      8.64e- 3    138.  
15 mu_1       0.6       1.48    1.26       3.60e- 3     10.5 
16 mu_1       0.7       1.81    1.24       1.33e- 4     34.0 
17 mu_1       0.8       3.44    0.794      1.17e- 6    146.  
18 mu_1       0.9       5.85    0.179      2.18e-10    271.  
19 mu_0       0.1      22.9     0.0000153  0          1610.  
20 mu_0       0.2      62.7     0.00208    0          5572.  
21 mu_0       0.3      53.8     0.0321     0          4972.  
22 mu_0       0.4      23.5     0.176      0          2118.  
23 mu_0       0.5       6.41    0.501      0           483.  
24 mu_0       0.6       1.88    0.904      0            55.1 
25 mu_0       0.7       1.32    1.11       0             8.82
26 mu_0       0.8       1.94    1.15       0            65.1 
27 mu_0       0.9       4.55    0.521      0           271.  
[1] "Total run time was 396.732 seconds"
