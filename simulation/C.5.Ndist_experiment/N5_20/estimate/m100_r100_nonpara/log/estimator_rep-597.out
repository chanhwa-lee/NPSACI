
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1211"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
11  5  8  7  5  7  8  2  6  5  4  7  4  7  7  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05091 0.34756 0.61769 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
691 520 
[1] "treatment indicator table: "

  0   1 
439 772 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 594
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 617
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 115.21 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.302 0.0733
 2 mu         0.1   0.2 0.430 0.0949
 3 mu         0.1   0.3 0.440 0.0965
 4 mu         0.1   0.4 0.481 0.104 
 5 mu         0.1   0.5 0.491 0.111 
 6 mu         0.2   0.1 0.358 0.0609
 7 mu         0.2   0.2 0.481 0.0770
 8 mu         0.2   0.3 0.500 0.0729
 9 mu         0.2   0.4 0.533 0.0768
10 mu         0.2   0.5 0.550 0.0818
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.759        0.249 0.0000355     12.3 
 2 mu         0.2      0.905        0.758 0.00692        5.13
 3 mu         0.3      0.967        1     0.0916         2.81
 4 mu         0.4      0.990        1     0.354          1.64
 5 mu         0.5      1.00         1     0.591          1.39
 6 mu         0.6      1.01         1     0.811          1.28
 7 mu         0.7      1.01         1     0.805          1.76
 8 mu         0.8      0.997        1     0.600          2.66
 9 mu         0.9      0.961        1     0.158          2.78
10 mu_1       0.1      0.883        0.649 0.000171       7.19
11 mu_1       0.2      0.956        0.970 0.0171         3.71
12 mu_1       0.3      0.981        1     0.155          1.95
13 mu_1       0.4      0.994        1     0.453          1.49
14 mu_1       0.5      1.00         1     0.675          1.36
15 mu_1       0.6      1.01         1     0.869          1.36
16 mu_1       0.7      1.01         1     0.750          1.88
17 mu_1       0.8      0.995        1     0.546          2.78
18 mu_1       0.9      0.957        1     0.135          2.69
19 mu_0       0.1      0.745        0.203 0.0000204     13.5 
20 mu_0       0.2      0.893        0.702 0.00438        5.62
21 mu_0       0.3      0.961        0.995 0.0644         3.18
22 mu_0       0.4      0.987        1     0.281          1.85
23 mu_0       0.5      0.998        1     0.507          1.42
24 mu_0       0.6      1.00         1     0.725          1.26
25 mu_0       0.7      1.01         1     0.860          1.46
26 mu_0       0.8      1.01         1     0.790          2.17
27 mu_0       0.9      0.997        1     0.372          3.63
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.454    0.000164   1.55e-14     15.6 
 2 mu         0.2      2.04     0.00954    1.61e- 9     95.7 
 3 mu         0.3      2.72     0.0889     1.21e- 6    112.  
 4 mu         0.4      2.11     0.368      1.19e- 4     54.6 
 5 mu         0.5      1.39     0.809      3.46e- 3     13.0 
 6 mu         0.6      1.16     0.946      4.10e- 2     12.5 
 7 mu         0.7      1.77     0.859      1.08e- 2     60.7 
 8 mu         0.8      4.18     0.586      9.45e- 5    175.  
 9 mu         0.9     10.9      0.102      1.85e- 8    592.  
10 mu_1       0.1      1.19     0.00131    1.39e-13     40.9 
11 mu_1       0.2      2.84     0.0328     7.20e- 9    126.  
12 mu_1       0.3      2.73     0.207      3.62e- 6     98.3 
13 mu_1       0.4      1.84     0.618      2.65e- 4     35.9 
14 mu_1       0.5      1.24     0.949      6.15e- 3      7.65
15 mu_1       0.6      1.19     0.930      6.07e- 2     18.2 
16 mu_1       0.7      2.02     0.826      3.62e- 3     75.9 
17 mu_1       0.8      4.66     0.484      2.78e- 5    191.  
18 mu_1       0.9     11.6      0.0719     4.83e- 9    658.  
19 mu_0       0.1      0.372    0.0000364  0            12.7 
20 mu_0       0.2      1.84     0.00449    0            88.2 
21 mu_0       0.3      2.72     0.0490     0           118.  
22 mu_0       0.4      2.29     0.207      0            67.0 
23 mu_0       0.5      1.54     0.559      0            19.1 
24 mu_0       0.6      1.12     0.832      0             5.98
25 mu_0       0.7      1.20     0.830      0            25.3 
26 mu_0       0.8      2.23     0.882      0           109.  
27 mu_0       0.9      4.82     0.297      0           284.  
[1] "Total run time was 118.37 seconds"
