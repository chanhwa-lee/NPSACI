
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1225"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10  7 11  2  5  5  5  7  6  7  6  6  5  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03648 0.33321 0.59725 0.97179 5.62516 
[1] "event indicator table: "

  0   1 
714 511 
[1] "treatment indicator table: "

  0   1 
470 755 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 569
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 88"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 656
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 115.945 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.428 0.129 
 2 mu         0.1   0.2 0.455 0.121 
 3 mu         0.1   0.3 0.536 0.150 
 4 mu         0.1   0.4 0.556 0.155 
 5 mu         0.1   0.5 0.582 0.159 
 6 mu         0.2   0.1 0.397 0.0950
 7 mu         0.2   0.2 0.445 0.0735
 8 mu         0.2   0.3 0.539 0.0956
 9 mu         0.2   0.4 0.571 0.0958
10 mu         0.2   0.5 0.597 0.0959
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.958        0.532  0.00102      27.3 
 2 mu         0.2      1.01         0.907  0.0479       15.1 
 3 mu         0.3      0.992        1      0.268         4.12
 4 mu         0.4      1.00         1      0.556         1.56
 5 mu         0.5      1.01         1      0.804         1.30
 6 mu         0.6      1.00         1      0.860         1.22
 7 mu         0.7      0.996        1      0.739         1.27
 8 mu         0.8      0.983        1      0.329         1.81
 9 mu         0.9      0.929        0.983  0.0309        2.95
10 mu_1       0.1      1.16         0.811  0.00428      28.9 
11 mu_1       0.2      1.02         1      0.103         8.28
12 mu_1       0.3      0.999        1      0.362         1.99
13 mu_1       0.4      1.01         1      0.644         1.40
14 mu_1       0.5      1.01         1      0.852         1.27
15 mu_1       0.6      1.00         1      0.849         1.24
16 mu_1       0.7      0.994        1      0.729         1.27
17 mu_1       0.8      0.981        1      0.281         1.91
18 mu_1       0.9      0.923        0.987  0.0245        3.01
19 mu_0       0.1      0.936        0.502  0.000658     27.2 
20 mu_0       0.2      1.00         0.872  0.0341       16.8 
21 mu_0       0.3      0.989        1      0.218         5.04
22 mu_0       0.4      1.00         1      0.493         1.68
23 mu_0       0.5      1.01         1      0.689         1.35
24 mu_0       0.6      1.01         1      0.835         1.24
25 mu_0       0.7      1.00         1      0.757         1.28
26 mu_0       0.8      0.991        1      0.519         1.42
27 mu_0       0.9      0.983        1      0.0883        2.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      14.2     0.0000854  2.92e-14   1308.  
 2 mu         0.2       9.54    0.0119     6.04e- 9    707.  
 3 mu         0.3       4.00    0.153      6.84e- 6    164.  
 4 mu         0.4       1.88    0.470      8.00e- 4     37.1 
 5 mu         0.5       1.33    0.845      2.56e- 2      8.46
 6 mu         0.6       1.32    1.04       3.51e- 2      6.73
 7 mu         0.7       1.93    1.12       4.96e- 4     14.8 
 8 mu         0.8       4.35    0.693      6.58e- 7     72.9 
 9 mu         0.9       9.63    0.108      6.35e-12    247.  
10 mu_1       0.1      15.9     0.000503   2.63e-13   1377.  
11 mu_1       0.2       6.57    0.0363     2.72e- 8    372.  
12 mu_1       0.3       2.66    0.309      2.05e- 5     68.2 
13 mu_1       0.4       1.52    0.751      1.89e- 3     21.8 
14 mu_1       0.5       1.28    0.968      4.73e- 2      7.96
15 mu_1       0.6       1.38    1.15       8.51e- 3      5.98
16 mu_1       0.7       2.17    1.10       7.47e- 5     19.8 
17 mu_1       0.8       4.83    0.546      8.66e- 8     85.5 
18 mu_1       0.9      10.0     0.0753     7.43e-13    275.  
19 mu_0       0.1      14.0     0.0000405  0          1301.  
20 mu_0       0.2      10.3     0.00575    0           790.  
21 mu_0       0.3       4.57    0.0803     0           210.  
22 mu_0       0.4       2.12    0.280      0            47.2 
23 mu_0       0.5       1.39    0.649      0            12.9 
24 mu_0       0.6       1.23    0.939      0             7.85
25 mu_0       0.7       1.37    0.998      0             5.36
26 mu_0       0.8       2.40    1.01       0            24.1 
27 mu_0       0.9       5.89    0.181      0           133.  
[1] "Total run time was 119.152 seconds"
