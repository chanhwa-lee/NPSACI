
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1342"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  7  3  4  5  9  5  8  5  2  6  7 10 10  4 11 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.00779 0.30051 0.55707 0.95831 5.00000 
[1] "event indicator table: "

  0   1 
796 546 
[1] "treatment indicator table: "

  0   1 
525 817 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 679
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 42"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 663
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 142.609 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.552 0.172 
 2 mu         0.1   0.2 0.683 0.239 
 3 mu         0.1   0.3 0.699 0.221 
 4 mu         0.1   0.4 0.741 0.190 
 5 mu         0.1   0.5 0.789 0.171 
 6 mu         0.2   0.1 0.445 0.0899
 7 mu         0.2   0.2 0.533 0.120 
 8 mu         0.2   0.3 0.565 0.111 
 9 mu         0.2   0.4 0.602 0.0939
10 mu         0.2   0.5 0.655 0.0823
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.05         0.837    0.0222      5.73
 2 mu         0.2      1.02         1        0.213       2.75
 3 mu         0.3      1.02         1        0.520       1.68
 4 mu         0.4      1.02         1        0.747       1.31
 5 mu         0.5      1.02         1.01     0.863       1.18
 6 mu         0.6      1.01         1.00     0.866       1.15
 7 mu         0.7      0.995        1        0.812       1.20
 8 mu         0.8      0.965        0.977    0.736       1.19
 9 mu         0.9      0.941        0.988    0.488       1.46
10 mu_1       0.1      0.977        1        0.0621      2.93
11 mu_1       0.2      1.02         1        0.340       1.95
12 mu_1       0.3      1.02         1.00     0.634       1.53
13 mu_1       0.4      1.02         1.01     0.803       1.25
14 mu_1       0.5      1.02         1.01     0.859       1.19
15 mu_1       0.6      1.01         1        0.856       1.17
16 mu_1       0.7      0.989        1.00     0.787       1.20
17 mu_1       0.8      0.960        0.974    0.716       1.21
18 mu_1       0.9      0.940        0.987    0.465       1.50
19 mu_0       0.1      1.06         0.805    0.0178      6.30
20 mu_0       0.2      1.02         0.998    0.181       3.08
21 mu_0       0.3      1.02         1        0.454       1.75
22 mu_0       0.4      1.02         1        0.705       1.39
23 mu_0       0.5      1.02         1.02     0.834       1.22
24 mu_0       0.6      1.02         1.01     0.872       1.20
25 mu_0       0.7      1.01         1.00     0.855       1.21
26 mu_0       0.8      0.982        0.996    0.725       1.17
27 mu_0       0.9      0.945        0.978    0.645       1.28
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.347    0.0000421  1.02e-15     18.2 
 2 mu         0.2      0.775    0.00681    1.34e-10     14.7 
 3 mu         0.3      0.969    0.101      1.32e- 7     11.5 
 4 mu         0.4      1.01     0.475      1.76e- 5      6.02
 5 mu         0.5      1.11     0.913      7.82e- 4      7.61
 6 mu         0.6      1.18     1.06       1.73e- 2      5.10
 7 mu         0.7      1.13     1.11       2.41e- 3      3.85
 8 mu         0.8      1.11     0.555      1.41e- 5      5.72
 9 mu         0.9      1.30     0.0435     1.37e- 9     19.1 
10 mu_1       0.1      0.636    0.000310   1.02e-14     20.2 
11 mu_1       0.2      0.974    0.0199     6.71e-10     16.4 
12 mu_1       0.3      1.01     0.200      4.41e- 7      8.53
13 mu_1       0.4      1.04     0.703      4.40e- 5      6.32
14 mu_1       0.5      1.15     0.919      1.56e- 3      7.61
15 mu_1       0.6      1.19     1.08       2.70e- 2      4.50
16 mu_1       0.7      1.13     1.18       7.64e- 4      4.21
17 mu_1       0.8      1.13     0.431      3.91e- 6      6.20
18 mu_1       0.9      1.34     0.0283     3.39e-10     21.2 
19 mu_0       0.1      0.314    0.0000154  0            18.0 
20 mu_0       0.2      0.725    0.00262    0            15.8 
21 mu_0       0.3      0.950    0.0479     0            12.8 
22 mu_0       0.4      0.989    0.301      0             7.52
23 mu_0       0.5      1.07     0.742      0             7.61
24 mu_0       0.6      1.16     0.950      0             6.32
25 mu_0       0.7      1.13     1.14       0             4.52
26 mu_0       0.8      1.04     0.855      0             5.08
27 mu_0       0.9      0.965    0.120      0             8.82
[1] "Total run time was 146.41 seconds"
