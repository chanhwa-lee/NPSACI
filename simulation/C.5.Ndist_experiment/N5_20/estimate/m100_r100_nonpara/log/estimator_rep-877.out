
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1288"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  8  6  5  3  4  6  6  5  7  8  6  4  9 11  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05689 0.40430 0.65368 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
751 537 
[1] "treatment indicator table: "

  0   1 
486 802 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 638
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 650
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 24"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 116.722 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.472 0.0969
 2 mu         0.1   0.2 0.601 0.160 
 3 mu         0.1   0.3 0.675 0.166 
 4 mu         0.1   0.4 0.677 0.151 
 5 mu         0.1   0.5 0.742 0.143 
 6 mu         0.2   0.1 0.376 0.0679
 7 mu         0.2   0.2 0.449 0.0967
 8 mu         0.2   0.3 0.516 0.116 
 9 mu         0.2   0.4 0.538 0.119 
10 mu         0.2   0.5 0.617 0.0976
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06         0.944   0.0107       9.40
 2 mu         0.2      1.05         1       0.181        2.54
 3 mu         0.3      1.02         1       0.515        1.88
 4 mu         0.4      1.01         1       0.726        1.39
 5 mu         0.5      0.998        1       0.820        1.20
 6 mu         0.6      0.997        1       0.858        1.14
 7 mu         0.7      1.00         1       0.794        1.21
 8 mu         0.8      1.01         1       0.660        1.34
 9 mu         0.9      0.986        0.999   0.277        1.63
10 mu_1       0.1      1.08         1       0.0344       5.01
11 mu_1       0.2      1.04         1       0.309        2.25
12 mu_1       0.3      1.01         1       0.606        1.64
13 mu_1       0.4      1.00         1       0.793        1.25
14 mu_1       0.5      0.997        1       0.834        1.18
15 mu_1       0.6      0.998        1       0.855        1.13
16 mu_1       0.7      1.00         1       0.762        1.25
17 mu_1       0.8      1.00         1       0.624        1.34
18 mu_1       0.9      0.985        0.993   0.254        1.67
19 mu_0       0.1      1.06         0.922   0.00805      9.89
20 mu_0       0.2      1.06         1       0.149        2.92
21 mu_0       0.3      1.03         1       0.475        1.98
22 mu_0       0.4      1.01         1       0.678        1.48
23 mu_0       0.5      1.00         1       0.805        1.21
24 mu_0       0.6      0.995        1       0.832        1.15
25 mu_0       0.7      1.00         1       0.857        1.16
26 mu_0       0.8      1.01         1       0.713        1.31
27 mu_0       0.9      0.999        1       0.478        1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.858    0.000156   7.76e-14     52.2 
 2 mu         0.2      1.18     0.00825    2.54e- 9     29.0 
 3 mu         0.3      1.30     0.0819     1.11e- 6     19.9 
 4 mu         0.4      1.12     0.328      8.33e- 5      8.49
 5 mu         0.5      0.959    0.795      2.37e- 3      2.99
 6 mu         0.6      0.963    0.927      1.63e- 2      2.43
 7 mu         0.7      1.09     1.15       1.07e- 3      2.91
 8 mu         0.8      1.23     0.784      2.12e- 5      4.76
 9 mu         0.9      1.27     0.108      1.67e- 8     19.2 
10 mu_1       0.1      0.682    0.000924   0            15.2 
11 mu_1       0.2      1.16     0.0307     0            26.3 
12 mu_1       0.3      1.18     0.171      0            15.6 
13 mu_1       0.4      1.02     0.542      0             5.00
14 mu_1       0.5      0.937    0.912      0             2.40
15 mu_1       0.6      0.995    0.964      0             2.45
16 mu_1       0.7      1.13     1.21       0             2.91
17 mu_1       0.8      1.25     0.638      0             5.18
18 mu_1       0.9      1.26     0.0740     0            21.3 
19 mu_0       0.1      0.878    0.0000448  0            58.0 
20 mu_0       0.2      1.19     0.00242    0            36.2 
21 mu_0       0.3      1.35     0.0342     0            21.8 
22 mu_0       0.4      1.19     0.170      0            11.5 
23 mu_0       0.5      0.980    0.519      0             5.52
24 mu_0       0.6      0.914    0.874      0             2.55
25 mu_0       0.7      1.01     1.00       0             2.91
26 mu_0       0.8      1.18     1.10       0             3.94
27 mu_0       0.9      1.33     0.320      0             7.33
[1] "Total run time was 120.032 seconds"
