
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1300"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  9  3  3  4  8  7  7 12  8  6  4  3  8  8  7 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02749 0.30994 0.58649 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
748 552 
[1] "treatment indicator table: "

  0   1 
573 727 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 16"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 665
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 52"
[1] "     Cluster: 59"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 149.31 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.402 0.0850
 2 mu         0.1   0.2 0.413 0.0726
 3 mu         0.1   0.3 0.470 0.0704
 4 mu         0.1   0.4 0.538 0.0761
 5 mu         0.1   0.5 0.533 0.0690
 6 mu         0.2   0.1 0.345 0.0479
 7 mu         0.2   0.2 0.386 0.0415
 8 mu         0.2   0.3 0.455 0.0505
 9 mu         0.2   0.4 0.527 0.0615
10 mu         0.2   0.5 0.531 0.0545
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.705        0.786 0.00000142       3.05
 2 mu         0.2      0.833        0.922 0.000654         3.12
 3 mu         0.3      0.903        0.972 0.0155           2.45
 4 mu         0.4      0.943        0.997 0.0978           1.61
 5 mu         0.5      0.971        1     0.315            1.46
 6 mu         0.6      0.986        1     0.526            1.51
 7 mu         0.7      0.996        1     0.196            2.00
 8 mu         0.8      1.01         1     0.0269           3.38
 9 mu         0.9      1.09         0.979 0.000345        16.2 
10 mu_1       0.1      0.796        0.868 0.00000836       4.02
11 mu_1       0.2      0.883        0.955 0.00193          3.07
12 mu_1       0.3      0.924        0.988 0.0308           2.02
13 mu_1       0.4      0.955        1     0.152            1.64
14 mu_1       0.5      0.978        1     0.393            1.36
15 mu_1       0.6      0.991        1     0.456            1.65
16 mu_1       0.7      0.999        1     0.155            2.24
17 mu_1       0.8      1.02         1     0.0194           4.02
18 mu_1       0.9      1.10         0.974 0.000227        17.9 
19 mu_0       0.1      0.695        0.761 0.000000647      3.24
20 mu_0       0.2      0.820        0.907 0.000334         3.17
21 mu_0       0.3      0.894        0.963 0.00895          2.64
22 mu_0       0.4      0.935        0.987 0.0620           1.74
23 mu_0       0.5      0.963        0.998 0.227            1.56
24 mu_0       0.6      0.980        1     0.497            1.30
25 mu_0       0.7      0.988        1     0.290            1.55
26 mu_0       0.8      0.992        1     0.0567           2.25
27 mu_0       0.9      1.00         1     0.00141          4.00
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       6.40     0.000595  4.47e-15     333. 
 2 mu         0.2       6.69     0.0374    5.21e-10     365. 
 3 mu         0.3       5.01     0.250     4.49e- 7     189. 
 4 mu         0.4       3.58     1.00      5.12e- 5      61.7
 5 mu         0.5       4.11     0.909     1.50e- 3     182. 
 6 mu         0.6       9.37     0.783     8.32e- 3     723. 
 7 mu         0.7      21.8      0.831     1.39e- 4    1899. 
 8 mu         0.8      36.4      0.347     3.15e- 7    3208. 
 9 mu         0.9      32.4      0.0231    6.85e-12    2605. 
10 mu_1       0.1       6.61     0.00255   0            513. 
11 mu_1       0.2       5.28     0.0918    0            281. 
12 mu_1       0.3       3.76     0.487     0             96.9
13 mu_1       0.4       3.22     0.964     0             58.7
14 mu_1       0.5       5.19     0.901     0            304. 
15 mu_1       0.6      12.4      0.819     0           1004. 
16 mu_1       0.7      25.8      0.741     0           2261. 
17 mu_1       0.8      38.1      0.259     0           3342. 
18 mu_1       0.9      30.7      0.0161    0           2412. 
19 mu_0       0.1       6.38     0.000287  0            313. 
20 mu_0       0.2       7.04     0.0150    0            386. 
21 mu_0       0.3       5.55     0.149     0            229. 
22 mu_0       0.4       3.81     0.657     0             87.0
23 mu_0       0.5       3.04     1.05      0             60.8
24 mu_0       0.6       4.87     0.813     0            301. 
25 mu_0       0.7      12.5      0.752     0           1055. 
26 mu_0       0.8      29.3      0.497     0           2673. 
27 mu_0       0.9      47.7      0.0406    0           4341. 
[1] "Total run time was 153.707 seconds"
