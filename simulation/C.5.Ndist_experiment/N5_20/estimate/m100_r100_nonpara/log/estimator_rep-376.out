
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1297"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  5  4 10  6  4  3  3  8  4 15  6  8  4  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04711 0.41890 0.65689 1.00000 4.29563 
[1] "event indicator table: "

  0   1 
798 499 
[1] "treatment indicator table: "

  0   1 
448 849 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 684
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 291.23 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.268 0.0699
 2 mu         0.1   0.2 0.334 0.0643
 3 mu         0.1   0.3 0.382 0.0556
 4 mu         0.1   0.4 0.510 0.0705
 5 mu         0.1   0.5 0.572 0.103 
 6 mu         0.2   0.1 0.240 0.0491
 7 mu         0.2   0.2 0.311 0.0510
 8 mu         0.2   0.3 0.363 0.0417
 9 mu         0.2   0.4 0.487 0.0487
10 mu         0.2   0.5 0.549 0.0788
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.945        0.810    0.0307      8.21
 2 mu         0.2      0.930        0.938    0.211       2.09
 3 mu         0.3      0.965        1        0.457       1.53
 4 mu         0.4      0.992        0.989    0.637       1.40
 5 mu         0.5      1.01         1        0.784       1.33
 6 mu         0.6      1.02         1        0.784       1.24
 7 mu         0.7      1.01         1.01     0.821       1.31
 8 mu         0.8      1.00         1        0.731       1.21
 9 mu         0.9      0.996        1        0.474       1.44
10 mu_1       0.1      0.913        0.975    0.0801      2.25
11 mu_1       0.2      0.954        0.955    0.322       1.91
12 mu_1       0.3      0.984        0.998    0.434       1.34
13 mu_1       0.4      1.00         1        0.736       1.42
14 mu_1       0.5      1.01         1        0.777       1.32
15 mu_1       0.6      1.02         1.01     0.792       1.27
16 mu_1       0.7      1.01         1.00     0.826       1.30
17 mu_1       0.8      0.997        1        0.719       1.21
18 mu_1       0.9      0.996        1        0.444       1.46
19 mu_0       0.1      0.948        0.775    0.0250      8.90
20 mu_0       0.2      0.924        0.937    0.183       2.34
21 mu_0       0.3      0.957        1.00     0.467       1.62
22 mu_0       0.4      0.985        0.985    0.572       1.39
23 mu_0       0.5      1.00         1        0.734       1.35
24 mu_0       0.6      1.01         1        0.772       1.29
25 mu_0       0.7      1.02         1.01     0.807       1.33
26 mu_0       0.8      1.01         1.01     0.778       1.26
27 mu_0       0.9      0.995        1        0.640       1.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.34   0.0000149   3.18e-19     72.9 
 2 mu         0.2       1.70   0.00194     3.33e-13     88.5 
 3 mu         0.3       1.40   0.0468      1.11e- 9     35.3 
 4 mu         0.4       1.21   0.290       3.49e- 7     14.7 
 5 mu         0.5       1.14   0.719       3.03e- 5      8.37
 6 mu         0.6       1.10   0.941       1.16e- 3      4.80
 7 mu         0.7       1.10   1.05        5.81e- 4      5.77
 8 mu         0.8       1.12   0.935       1.32e- 6      6.50
 9 mu         0.9       1.07   0.198       2.87e-11      5.60
10 mu_1       0.1       1.66   0.0000934   0           115.  
11 mu_1       0.2       1.56   0.00725     0            69.9 
12 mu_1       0.3       1.26   0.102       0            18.6 
13 mu_1       0.4       1.16   0.409       0            12.3 
14 mu_1       0.5       1.12   0.808       0             7.83
15 mu_1       0.6       1.10   1.00        0             4.05
16 mu_1       0.7       1.11   1.04        0             6.34
17 mu_1       0.8       1.12   0.807       0             6.25
18 mu_1       0.9       1.06   0.152       0             6.08
19 mu_0       0.1       1.31   0.00000263  0            68.2 
20 mu_0       0.2       1.73   0.000859    0            93.2 
21 mu_0       0.3       1.45   0.0251      0            42.4 
22 mu_0       0.4       1.24   0.135       0            16.4 
23 mu_0       0.5       1.15   0.466       0            11.2 
24 mu_0       0.6       1.11   0.935       0             6.36
25 mu_0       0.7       1.09   0.959       0             4.49
26 mu_0       0.8       1.09   0.917       0             7.50
27 mu_0       0.9       1.14   0.231       0             6.09
[1] "Total run time was 295.457 seconds"
