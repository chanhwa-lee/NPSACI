
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1275"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  2  7  5  4  8  7  9  7  6  4 13  1  8  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03546 0.34442 0.60496 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
801 474 
[1] "treatment indicator table: "

  0   1 
410 865 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 613
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 129.306 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.318 0.130 
 2 mu         0.1   0.2 0.472 0.171 
 3 mu         0.1   0.3 0.640 0.196 
 4 mu         0.1   0.4 0.666 0.210 
 5 mu         0.1   0.5 0.730 0.236 
 6 mu         0.2   0.1 0.259 0.0737
 7 mu         0.2   0.2 0.358 0.0768
 8 mu         0.2   0.3 0.476 0.0419
 9 mu         0.2   0.4 0.494 0.0421
10 mu         0.2   0.5 0.551 0.0453
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.25         0.590   0.00199     38.6 
 2 mu         0.2      1.00         0.958   0.0810       5.54
 3 mu         0.3      0.980        1       0.395        2.08
 4 mu         0.4      1.01         1       0.468        1.91
 5 mu         0.5      1.02         1       0.541        1.52
 6 mu         0.6      1.00         1.00    0.759        1.18
 7 mu         0.7      0.990        0.996   0.774        1.16
 8 mu         0.8      0.990        0.999   0.821        1.22
 9 mu         0.9      1.01         1       0.527        1.37
10 mu_1       0.1      0.978        0.903   0.00788      4.49
11 mu_1       0.2      0.976        0.993   0.164        2.47
12 mu_1       0.3      0.992        0.991   0.530        2.08
13 mu_1       0.4      1.02         1       0.457        1.75
14 mu_1       0.5      1.02         1.01    0.584        1.35
15 mu_1       0.6      0.999        1       0.791        1.16
16 mu_1       0.7      0.988        0.994   0.776        1.17
17 mu_1       0.8      0.992        1       0.822        1.23
18 mu_1       0.9      1.01         1.00    0.494        1.37
19 mu_0       0.1      1.28         0.549   0.00134     42.8 
20 mu_0       0.2      1.01         0.904   0.0603       6.69
21 mu_0       0.3      0.974        0.997   0.328        2.12
22 mu_0       0.4      0.999        1       0.475        2.02
23 mu_0       0.5      1.02         1       0.498        1.70
24 mu_0       0.6      1.01         1.01    0.691        1.30
25 mu_0       0.7      0.994        1       0.770        1.14
26 mu_0       0.8      0.986        0.992   0.733        1.21
27 mu_0       0.9      0.995        1       0.736        1.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.61    0.0000486  7.43e-18     91.3 
 2 mu         0.2       1.81    0.00378    3.90e-12     62.4 
 3 mu         0.3       1.30    0.0526     8.64e- 9     23.9 
 4 mu         0.4       1.06    0.210      2.04e- 6     10.6 
 5 mu         0.5       1.07    0.529      1.42e- 4      5.79
 6 mu         0.6       1.11    0.954      4.53e- 3      3.78
 7 mu         0.7       1.10    1.08       3.12e- 4      2.64
 8 mu         0.8       1.08    1.00       9.30e- 7      3.09
 9 mu         0.9       1.26    0.357      3.59e-11     11.5 
10 mu_1       0.1       2.29    0.000281   7.43e-17    107.  
11 mu_1       0.2       1.66    0.0142     1.95e-11     39.9 
12 mu_1       0.3       1.19    0.131      2.88e- 8     15.9 
13 mu_1       0.4       1.08    0.427      5.11e- 6      7.96
14 mu_1       0.5       1.11    0.750      2.83e- 4      4.94
15 mu_1       0.6       1.12    1.06       3.36e- 3      3.26
16 mu_1       0.7       1.10    1.10       5.24e- 5      2.75
17 mu_1       0.8       1.08    0.912      1.37e- 7      3.54
18 mu_1       0.9       1.28    0.275      4.70e-12     12.8 
19 mu_0       0.1       1.54    0.0000167  0            89.5 
20 mu_0       0.2       1.84    0.00137    0            68.9 
21 mu_0       0.3       1.34    0.0194     0            27.3 
22 mu_0       0.4       1.05    0.0856     0            12.4 
23 mu_0       0.5       1.04    0.301      0             8.10
24 mu_0       0.6       1.10    0.755      0             5.25
25 mu_0       0.7       1.12    1.07       0             3.53
26 mu_0       0.8       1.08    1.14       0             2.93
27 mu_0       0.9       1.03    0.475      0             4.70
[1] "Total run time was 132.875 seconds"
