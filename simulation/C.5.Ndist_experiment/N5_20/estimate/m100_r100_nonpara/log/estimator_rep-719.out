
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1274"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  2  5 11  9  3  6 10  6 10  3  6  5  8  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03389 0.37110 0.60981 1.00000 4.94464 
[1] "event indicator table: "

  0   1 
716 558 
[1] "treatment indicator table: "

  0   1 
444 830 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 641
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 633
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 117.961 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.908 0.386
 2 mu         0.1   0.2 1.03  0.428
 3 mu         0.1   0.3 1.12  0.489
 4 mu         0.1   0.4 1.19  0.543
 5 mu         0.1   0.5 1.27  0.580
 6 mu         0.2   0.1 0.620 0.156
 7 mu         0.2   0.2 0.712 0.169
 8 mu         0.2   0.3 0.773 0.187
 9 mu         0.2   0.4 0.822 0.204
10 mu         0.2   0.5 0.877 0.217
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.74         0.734  0.00122      83.9 
 2 mu         0.2      1.30         0.994  0.0602       29.3 
 3 mu         0.3      1.10         0.997  0.285         6.74
 4 mu         0.4      1.03         1.01   0.537         1.95
 5 mu         0.5      1.01         1      0.723         1.42
 6 mu         0.6      0.997        1      0.740         1.20
 7 mu         0.7      0.992        1      0.804         1.24
 8 mu         0.8      0.986        0.994  0.719         1.23
 9 mu         0.9      0.979        0.975  0.501         1.85
10 mu_1       0.1      1.49         0.985  0.00496      52.7 
11 mu_1       0.2      1.13         1      0.126         9.84
12 mu_1       0.3      1.05         0.993  0.404         2.69
13 mu_1       0.4      1.02         1      0.644         1.64
14 mu_1       0.5      1.00         0.999  0.718         1.37
15 mu_1       0.6      0.996        1.00   0.762         1.17
16 mu_1       0.7      0.991        0.993  0.813         1.25
17 mu_1       0.8      0.985        0.996  0.695         1.25
18 mu_1       0.9      0.978        0.965  0.465         1.91
19 mu_0       0.1      1.77         0.678  0.000807     87.3 
20 mu_0       0.2      1.35         0.973  0.0437       34.1 
21 mu_0       0.3      1.13         1      0.223         8.68
22 mu_0       0.4      1.04         1      0.452         2.21
23 mu_0       0.5      1.01         1      0.689         1.52
24 mu_0       0.6      0.999        1      0.706         1.27
25 mu_0       0.7      0.995        1      0.781         1.21
26 mu_0       0.8      0.990        0.999  0.799         1.26
27 mu_0       0.9      0.984        0.993  0.546         1.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      23.0    0.0000246   1.96e-17    878.  
 2 mu         0.2      18.7    0.00460     5.14e-12    768.  
 3 mu         0.3       9.59   0.0667      7.59e- 9    348.  
 4 mu         0.4       3.99   0.337       1.35e- 6     97.3 
 5 mu         0.5       1.82   0.887       7.48e- 5     17.1 
 6 mu         0.6       1.26   1.04        1.99e- 3      6.30
 7 mu         0.7       1.15   1.02        3.19e- 2      3.90
 8 mu         0.8       1.14   0.797       7.33e- 4      6.53
 9 mu         0.9       1.47   0.154       1.75e- 7     46.8 
10 mu_1       0.1      26.2    0.000193    1.96e-16   1128.  
11 mu_1       0.2      12.2    0.0148      2.57e-11    549.  
12 mu_1       0.3       5.10   0.143       2.53e- 8    166.  
13 mu_1       0.4       2.24   0.613       3.37e- 6     34.8 
14 mu_1       0.5       1.37   1.04        1.50e- 4      9.27
15 mu_1       0.6       1.18   1.00        3.32e- 3      4.63
16 mu_1       0.7       1.14   1.03        1.35e- 2      4.46
17 mu_1       0.8       1.15   0.610       1.31e- 4      6.53
18 mu_1       0.9       1.52   0.109       3.59e- 8     52.0 
19 mu_0       0.1      22.7    0.00000764  0           887.  
20 mu_0       0.2      20.4    0.00196     0           823.  
21 mu_0       0.3      11.5    0.0324      0           426.  
22 mu_0       0.4       5.16   0.186       0           139.  
23 mu_0       0.5       2.27   0.593       0            29.2 
24 mu_0       0.6       1.38   1.04        0            10.5 
25 mu_0       0.7       1.18   0.951       0             3.96
26 mu_0       0.8       1.11   0.929       0             6.53
27 mu_0       0.9       1.05   0.284       0             6.86
[1] "Total run time was 121.118 seconds"
