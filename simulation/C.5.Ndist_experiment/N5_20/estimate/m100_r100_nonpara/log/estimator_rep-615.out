
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1308"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  5  6  5  8  7  2  8 10  9  4  4  5  8  8  8 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03712 0.33589 0.60508 1.00000 4.00000 
[1] "event indicator table: "

  0   1 
771 537 
[1] "treatment indicator table: "

  0   1 
500 808 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 49"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 677
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 147.575 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.439 0.0560
 2 mu         0.1   0.2 0.473 0.0580
 3 mu         0.1   0.3 0.484 0.0512
 4 mu         0.1   0.4 0.557 0.0650
 5 mu         0.1   0.5 0.567 0.0590
 6 mu         0.2   0.1 0.387 0.0460
 7 mu         0.2   0.2 0.432 0.0416
 8 mu         0.2   0.3 0.457 0.0438
 9 mu         0.2   0.4 0.514 0.0446
10 mu         0.2   0.5 0.529 0.0404
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.960        0.799    0.0158      4.04
 2 mu         0.2      0.929        0.930    0.256       2.48
 3 mu         0.3      0.959        0.977    0.645       1.44
 4 mu         0.4      0.981        0.994    0.735       1.34
 5 mu         0.5      0.987        1        0.762       1.31
 6 mu         0.6      0.993        0.997    0.826       1.26
 7 mu         0.7      1.01         1        0.826       1.20
 8 mu         0.8      1.02         1.00     0.788       1.29
 9 mu         0.9      0.976        1        0.431       1.59
10 mu_1       0.1      0.907        0.883    0.0490      3.50
11 mu_1       0.2      0.943        0.977    0.418       1.88
12 mu_1       0.3      0.974        1        0.702       1.32
13 mu_1       0.4      0.986        1        0.753       1.35
14 mu_1       0.5      0.988        0.997    0.775       1.29
15 mu_1       0.6      0.995        0.998    0.832       1.24
16 mu_1       0.7      1.01         1.00     0.819       1.23
17 mu_1       0.8      1.02         1.01     0.767       1.29
18 mu_1       0.9      0.970        1        0.395       1.65
19 mu_0       0.1      0.965        0.780    0.0121      4.16
20 mu_0       0.2      0.926        0.906    0.215       2.63
21 mu_0       0.3      0.952        0.979    0.561       1.54
22 mu_0       0.4      0.977        0.992    0.720       1.33
23 mu_0       0.5      0.986        1        0.748       1.32
24 mu_0       0.6      0.989        0.994    0.818       1.28
25 mu_0       0.7      1.00         1        0.825       1.20
26 mu_0       0.8      1.02         1.01     0.822       1.30
27 mu_0       0.9      1.03         1.03     0.654       1.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.29     0.0000743  4.66e-17     58.2 
 2 mu         0.2      1.26     0.00935    1.22e-11     31.8 
 3 mu         0.3      1.05     0.129      1.81e- 8     11.0 
 4 mu         0.4      0.952    0.556      3.21e- 6      5.24
 5 mu         0.5      0.985    0.949      1.78e- 4      3.77
 6 mu         0.6      1.03     1.01       4.74e- 3      3.46
 7 mu         0.7      1.06     1.00       9.24e- 5      2.81
 8 mu         0.8      1.25     0.465      2.10e- 7      6.67
 9 mu         0.9      1.80     0.0571     4.56e-12     34.7 
10 mu_1       0.1      1.49     0.000546   4.66e-16     48.5 
11 mu_1       0.2      1.16     0.0271     6.11e-11     13.3 
12 mu_1       0.3      0.985    0.275      6.02e- 8      7.76
13 mu_1       0.4      0.951    0.783      8.01e- 6      3.86
14 mu_1       0.5      0.999    0.930      3.56e- 4      3.82
15 mu_1       0.6      1.03     0.983      1.46e- 3      3.18
16 mu_1       0.7      1.07     0.953      2.08e- 5      3.16
17 mu_1       0.8      1.29     0.345      4.14e- 8      8.33
18 mu_1       0.9      1.84     0.0339     8.00e-13     38.5 
19 mu_0       0.1      1.27     0.0000252  0            59.2 
20 mu_0       0.2      1.29     0.00490    0            36.5 
21 mu_0       0.3      1.08     0.0700     0            14.4 
22 mu_0       0.4      0.952    0.388      0             6.17
23 mu_0       0.5      0.970    0.774      0             3.97
24 mu_0       0.6      1.03     0.907      0             3.90
25 mu_0       0.7      1.04     1.04       0             3.38
26 mu_0       0.8      1.09     0.826      0             3.97
27 mu_0       0.9      1.40     0.144      0            10.8 
[1] "Total run time was 152.073 seconds"
