
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1205"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7 10  5  5  8  4  5  7  6  8  9  6  6  6  7  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04103 0.35747 0.64206 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
726 479 
[1] "treatment indicator table: "

  0   1 
420 785 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 574
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 631
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 4"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 144.862 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.461 0.104 
 2 mu         0.1   0.2 0.496 0.0888
 3 mu         0.1   0.3 0.498 0.0811
 4 mu         0.1   0.4 0.508 0.0709
 5 mu         0.1   0.5 0.510 0.0701
 6 mu         0.2   0.1 0.409 0.0720
 7 mu         0.2   0.2 0.467 0.0570
 8 mu         0.2   0.3 0.482 0.0500
 9 mu         0.2   0.4 0.496 0.0414
10 mu         0.2   0.5 0.514 0.0400
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.868        0.607   0.00625      4.91
 2 mu         0.2      0.961        0.999   0.100        3.00
 3 mu         0.3      0.994        1       0.368        2.05
 4 mu         0.4      0.996        1       0.613        1.63
 5 mu         0.5      0.993        1       0.771        1.19
 6 mu         0.6      0.997        0.999   0.833        1.13
 7 mu         0.7      1.00         1.00    0.841        1.18
 8 mu         0.8      1.01         1       0.645        1.32
 9 mu         0.9      1.01         1       0.405        1.64
10 mu_1       0.1      0.946        0.945   0.0250       4.23
11 mu_1       0.2      0.990        1       0.211        2.21
12 mu_1       0.3      1.00         1       0.549        2.00
13 mu_1       0.4      0.998        1       0.645        1.45
14 mu_1       0.5      0.994        1       0.829        1.19
15 mu_1       0.6      0.999        1       0.834        1.15
16 mu_1       0.7      1.01         1       0.810        1.21
17 mu_1       0.8      1.01         1       0.614        1.32
18 mu_1       0.9      1.01         1       0.396        1.71
19 mu_0       0.1      0.859        0.564   0.00417      4.98
20 mu_0       0.2      0.953        0.971   0.0727       3.27
21 mu_0       0.3      0.990        1       0.290        2.08
22 mu_0       0.4      0.996        1       0.591        1.75
23 mu_0       0.5      0.992        1       0.693        1.25
24 mu_0       0.6      0.994        0.997   0.831        1.19
25 mu_0       0.7      1.00         1       0.842        1.17
26 mu_0       0.8      1.01         1.00    0.751        1.31
27 mu_0       0.9      1.00         1       0.489        1.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.334    0.0000894  4.52e-14      7.38
 2 mu         0.2      1.05     0.00755    2.63e- 9     34.1 
 3 mu         0.3      1.38     0.0607     1.51e- 6     40.0 
 4 mu         0.4      1.24     0.276      1.30e- 4     19.5 
 5 mu         0.5      1.08     0.733      3.83e- 3      4.63
 6 mu         0.6      1.03     0.946      5.67e- 2      3.82
 7 mu         0.7      1.08     1.09       1.95e- 2      3.24
 8 mu         0.8      1.20     0.812      1.30e- 4      6.54
 9 mu         0.9      1.27     0.193      1.43e- 8     21.5 
10 mu_1       0.1      0.764    0.000722   4.26e-13     14.6 
11 mu_1       0.2      1.41     0.0265     1.24e- 8     44.9 
12 mu_1       0.3      1.42     0.150      4.75e- 6     35.1 
13 mu_1       0.4      1.18     0.477      3.05e- 4     12.8 
14 mu_1       0.5      1.05     0.876      7.22e- 3      4.36
15 mu_1       0.6      1.03     0.977      8.90e- 2      4.02
16 mu_1       0.7      1.10     1.10       7.33e- 3      3.39
17 mu_1       0.8      1.21     0.682      4.28e- 5      7.69
18 mu_1       0.9      1.28     0.142      4.19e- 9     22.5 
19 mu_0       0.1      0.286    0.0000242  0             6.83
20 mu_0       0.2      0.955    0.00296    0            31.4 
21 mu_0       0.3      1.36     0.0254     0            42.1 
22 mu_0       0.4      1.28     0.147      0            23.9 
23 mu_0       0.5      1.10     0.505      0             6.82
24 mu_0       0.6      1.03     0.833      0             4.30
25 mu_0       0.7      1.04     1.00       0             3.98
26 mu_0       0.8      1.13     1.10       0             4.64
27 mu_0       0.9      1.26     0.399      0            12.7 
[1] "Total run time was 148.397 seconds"
