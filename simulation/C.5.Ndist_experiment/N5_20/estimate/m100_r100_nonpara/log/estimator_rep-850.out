
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1223"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 2 11  7  8  5  4 10  7  5  8  6  3  4 13  2  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02144 0.33895 0.59677 0.98920 6.98743 
[1] "event indicator table: "

  0   1 
741 482 
[1] "treatment indicator table: "

  0   1 
445 778 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 634
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 589
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 9"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 88"
[1] "     Cluster: 92"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 115.857 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.307 0.0897
 2 mu         0.1   0.2 0.404 0.146 
 3 mu         0.1   0.3 0.495 0.145 
 4 mu         0.1   0.4 0.498 0.134 
 5 mu         0.1   0.5 0.500 0.131 
 6 mu         0.2   0.1 0.336 0.0675
 7 mu         0.2   0.2 0.438 0.109 
 8 mu         0.2   0.3 0.510 0.0999
 9 mu         0.2   0.4 0.543 0.0967
10 mu         0.2   0.5 0.564 0.0975
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.821        0.755   0.0123       3.99
 2 mu         0.2      0.936        0.967   0.233        2.57
 3 mu         0.3      0.997        0.993   0.557        2.32
 4 mu         0.4      1.01         1       0.751        1.53
 5 mu         0.5      1.00         1       0.771        1.19
 6 mu         0.6      0.998        1       0.851        1.17
 7 mu         0.7      1.00         1       0.805        1.18
 8 mu         0.8      1.02         1       0.772        1.40
 9 mu         0.9      1.05         1       0.474        2.70
10 mu_1       0.1      0.871        0.921   0.0390       2.80
11 mu_1       0.2      0.988        0.996   0.378        2.64
12 mu_1       0.3      1.01         1       0.665        2.09
13 mu_1       0.4      1.01         1       0.768        1.29
14 mu_1       0.5      1.00         1       0.764        1.17
15 mu_1       0.6      0.998        1       0.864        1.16
16 mu_1       0.7      1.00         1       0.794        1.18
17 mu_1       0.8      1.02         1       0.759        1.43
18 mu_1       0.9      1.05         1       0.434        2.87
19 mu_0       0.1      0.816        0.703   0.00935      4.40
20 mu_0       0.2      0.923        0.944   0.193        2.61
21 mu_0       0.3      0.990        1.00    0.460        2.42
22 mu_0       0.4      1.01         1       0.703        1.70
23 mu_0       0.5      1.00         1.00    0.768        1.26
24 mu_0       0.6      0.999        1       0.781        1.18
25 mu_0       0.7      1.00         1       0.831        1.18
26 mu_0       0.8      1.01         1       0.764        1.27
27 mu_0       0.9      1.04         1       0.688        1.64
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.698    0.0000642  3.09e-16     21.6 
 2 mu         0.2      1.14     0.00524    8.09e-11     29.7 
 3 mu         0.3      1.20     0.0524     1.20e- 7     20.1 
 4 mu         0.4      1.09     0.285      2.12e- 5      8.91
 5 mu         0.5      1.02     0.886      1.18e- 3      4.10
 6 mu         0.6      1.07     0.948      4.05e- 3      2.69
 7 mu         0.7      1.17     1.18       7.37e- 5      2.64
 8 mu         0.8      1.42     0.719      2.20e- 7     11.4 
 9 mu         0.9      2.43     0.108      8.49e-12     46.3 
10 mu_1       0.1      1.24     0.000430   3.09e-15     38.9 
11 mu_1       0.2      1.31     0.0180     4.04e-10     27.0 
12 mu_1       0.3      1.19     0.133      3.98e- 7     12.2 
13 mu_1       0.4      1.05     0.449      5.30e- 5      5.03
14 mu_1       0.5      1.03     0.972      2.35e- 3      3.07
15 mu_1       0.6      1.11     1.08       7.95e- 4      2.56
16 mu_1       0.7      1.20     1.23       1.24e- 5      3.37
17 mu_1       0.8      1.49     0.584      3.23e- 8     12.7 
18 mu_1       0.9      2.54     0.0735     1.11e-12     51.4 
19 mu_0       0.1      0.637    0.0000235  0            21.2 
20 mu_0       0.2      1.10     0.00167    0            30.3 
21 mu_0       0.3      1.20     0.0250     0            23.5 
22 mu_0       0.4      1.11     0.155      0            12.2 
23 mu_0       0.5      1.02     0.578      0             5.12
24 mu_0       0.6      1.03     0.907      0             3.62
25 mu_0       0.7      1.09     1.02       0             2.78
26 mu_0       0.8      1.17     1.05       0             5.98
27 mu_0       0.9      1.42     0.276      0            22.1 
[1] "Total run time was 119.106 seconds"
