
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1243"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 7  3  9  8  6  6  4  5 11  6  5  6  3  8  8  5 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01212 0.32073 0.58998 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
731 512 
[1] "treatment indicator table: "

  0   1 
497 746 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 661
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 35"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 582
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 14"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 96"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 147.577 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.526 0.123 
 2 mu         0.1   0.2 0.588 0.108 
 3 mu         0.1   0.3 0.611 0.104 
 4 mu         0.1   0.4 0.618 0.101 
 5 mu         0.1   0.5 0.649 0.115 
 6 mu         0.2   0.1 0.492 0.0804
 7 mu         0.2   0.2 0.563 0.0719
 8 mu         0.2   0.3 0.592 0.0689
 9 mu         0.2   0.4 0.609 0.0667
10 mu         0.2   0.5 0.634 0.0711
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.991        0.634   0.00162      8.12
 2 mu         0.2      1.09         0.987   0.0608       8.97
 3 mu         0.3      1.05         1.00    0.298        3.77
 4 mu         0.4      1.01         1       0.652        1.52
 5 mu         0.5      0.997        1       0.694        1.22
 6 mu         0.6      0.998        1       0.847        1.11
 7 mu         0.7      0.995        0.998   0.718        1.27
 8 mu         0.8      0.976        0.969   0.621        2.13
 9 mu         0.9      0.974        0.929   0.339        4.28
10 mu_1       0.1      1.14         1       0.00585     12.2 
11 mu_1       0.2      1.10         1       0.116        6.95
12 mu_1       0.3      1.03         1       0.412        2.40
13 mu_1       0.4      1.00         1       0.707        1.30
14 mu_1       0.5      0.996        1       0.709        1.18
15 mu_1       0.6      0.998        1       0.847        1.13
16 mu_1       0.7      0.991        0.998   0.686        1.32
17 mu_1       0.8      0.973        0.973   0.604        2.28
18 mu_1       0.9      0.974        0.922   0.308        4.38
19 mu_0       0.1      0.975        0.609   0.00115      7.67
20 mu_0       0.2      1.09         0.952   0.0471       9.48
21 mu_0       0.3      1.06         1       0.249        4.35
22 mu_0       0.4      1.02         1       0.582        1.72
23 mu_0       0.5      0.998        1       0.679        1.29
24 mu_0       0.6      0.998        1       0.777        1.21
25 mu_0       0.7      1.00         1       0.793        1.13
26 mu_0       0.8      0.989        0.997   0.606        1.50
27 mu_0       0.9      0.972        0.967   0.538        3.42
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.71     0.000167   1.24e-16     83.1 
 2 mu         0.2      2.11     0.0152     5.79e-11     75.2 
 3 mu         0.3      1.62     0.0912     1.12e- 7     34.2 
 4 mu         0.4      1.16     0.416      2.28e- 5      8.83
 5 mu         0.5      0.935    0.716      1.32e- 3      5.00
 6 mu         0.6      0.908    0.883      2.96e- 2      2.74
 7 mu         0.7      1.05     0.963      1.09e- 3      3.85
 8 mu         0.8      1.25     0.623      4.48e- 6      7.18
 9 mu         0.9      1.39     0.102      1.95e-10     18.7 
10 mu_1       0.1      2.31     0.00112    1.18e-15     91.7 
11 mu_1       0.2      2.02     0.0498     2.75e-10     62.7 
12 mu_1       0.3      1.42     0.216      3.56e- 7     19.0 
13 mu_1       0.4      1.06     0.586      5.41e- 5      6.11
14 mu_1       0.5      0.916    0.810      2.50e- 3      4.17
15 mu_1       0.6      0.939    0.895      3.80e- 3      2.51
16 mu_1       0.7      1.10     0.953      1.20e- 4      4.34
17 mu_1       0.8      1.29     0.496      9.27e- 7      7.78
18 mu_1       0.9      1.39     0.0782     3.61e-11     19.7 
19 mu_0       0.1      1.64     0.0000860  0            85.2 
20 mu_0       0.2      2.13     0.00520    0            78.3 
21 mu_0       0.3      1.70     0.0432     0            40.8 
22 mu_0       0.4      1.22     0.269      0            11.2 
23 mu_0       0.5      0.953    0.636      0             5.83
24 mu_0       0.6      0.862    0.717      0             3.80
25 mu_0       0.7      0.926    0.872      0             2.82
26 mu_0       0.8      1.11     0.984      0             5.93
27 mu_0       0.9      1.37     0.201      0            11.4 
[1] "Total run time was 151.971 seconds"
