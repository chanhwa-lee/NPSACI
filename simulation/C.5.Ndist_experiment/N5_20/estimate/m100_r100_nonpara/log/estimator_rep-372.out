
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1183"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  9  6 12  6  4  7  4  8  4  7  3 11  6  6  1 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02618 0.35798 0.64385 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
726 457 
[1] "treatment indicator table: "

  0   1 
402 781 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 91"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 588
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 140.392 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.295 0.0625
 2 mu         0.1   0.2 0.320 0.0662
 3 mu         0.1   0.3 0.379 0.104 
 4 mu         0.1   0.4 0.385 0.110 
 5 mu         0.1   0.5 0.421 0.135 
 6 mu         0.2   0.1 0.301 0.0385
 7 mu         0.2   0.2 0.365 0.0468
 8 mu         0.2   0.3 0.425 0.0725
 9 mu         0.2   0.4 0.451 0.0762
10 mu         0.2   0.5 0.484 0.0918
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.865        0.887    0.0520      3.25
 2 mu         0.2      0.971        0.982    0.324       2.48
 3 mu         0.3      0.982        1        0.511       1.86
 4 mu         0.4      0.984        0.998    0.649       1.42
 5 mu         0.5      0.991        0.998    0.717       1.31
 6 mu         0.6      0.995        1        0.822       1.24
 7 mu         0.7      0.998        1        0.872       1.18
 8 mu         0.8      1.01         1        0.788       1.26
 9 mu         0.9      1.02         1        0.585       1.58
10 mu_1       0.1      0.976        0.997    0.141       2.79
11 mu_1       0.2      0.989        0.982    0.492       1.94
12 mu_1       0.3      0.983        0.985    0.625       1.48
13 mu_1       0.4      0.987        0.998    0.652       1.29
14 mu_1       0.5      0.994        1        0.748       1.31
15 mu_1       0.6      0.996        1        0.846       1.20
16 mu_1       0.7      1.00         0.996    0.842       1.17
17 mu_1       0.8      1.01         1        0.771       1.30
18 mu_1       0.9      1.02         1        0.568       1.63
19 mu_0       0.1      0.852        0.870    0.0421      3.30
20 mu_0       0.2      0.967        0.987    0.274       2.61
21 mu_0       0.3      0.981        1        0.428       2.02
22 mu_0       0.4      0.981        1        0.598       1.56
23 mu_0       0.5      0.988        1.00     0.687       1.30
24 mu_0       0.6      0.992        1        0.783       1.29
25 mu_0       0.7      0.994        0.999    0.838       1.20
26 mu_0       0.8      1.00         1        0.840       1.20
27 mu_0       0.9      1.01         1        0.670       1.37
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.306    0.0000514  1.92e-14     13.4 
 2 mu         0.2      0.852    0.00368    7.36e-10     21.3 
 3 mu         0.3      1.13     0.0402     3.22e- 7     14.4 
 4 mu         0.4      1.13     0.176      2.41e- 5      8.63
 5 mu         0.5      1.00     0.485      6.85e- 4      4.08
 6 mu         0.6      0.944    0.822      1.06e- 2      2.62
 7 mu         0.7      1.06     1.00       9.60e- 4      3.48
 8 mu         0.8      1.26     1.05       4.91e- 6      8.74
 9 mu         0.9      1.28     0.445      4.26e-10      7.19
10 mu_1       0.1      0.659    0.000439   1.72e-13     23.6 
11 mu_1       0.2      1.13     0.0141     3.68e- 9     21.3 
12 mu_1       0.3      1.23     0.106      1.07e- 6     11.2 
13 mu_1       0.4      1.13     0.331      6.03e- 5      6.64
14 mu_1       0.5      0.996    0.689      1.37e- 3      3.56
15 mu_1       0.6      0.974    0.921      9.98e- 3      2.62
16 mu_1       0.7      1.11     1.11       2.42e- 4      4.19
17 mu_1       0.8      1.30     1.02       1.08e- 6      9.19
18 mu_1       0.9      1.28     0.367      8.36e-11      6.73
19 mu_0       0.1      0.267    0.0000133  0            12.2 
20 mu_0       0.2      0.784    0.00122    0            21.3 
21 mu_0       0.3      1.08     0.0111     0            16.5 
22 mu_0       0.4      1.12     0.0724     0             9.96
23 mu_0       0.5      1.01     0.273      0             5.65
24 mu_0       0.6      0.899    0.649      0             3.28
25 mu_0       0.7      0.928    0.831      0             2.88
26 mu_0       0.8      1.12     1.03       0             6.90
27 mu_0       0.9      1.24     0.430      0            11.3 
[1] "Total run time was 145.6 seconds"
