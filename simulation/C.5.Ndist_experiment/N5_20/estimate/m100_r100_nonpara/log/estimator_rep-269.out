
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1203"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
12  2  6  8  5  6 10  6  5  2 10  7  8  4  5  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0369  0.3137  0.6214  1.0000  5.0000 
[1] "event indicator table: "

  0   1 
691 512 
[1] "treatment indicator table: "

  0   1 
481 722 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 608
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 595
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 21"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 108.566 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.284 0.0897
 2 mu         0.1   0.2 0.387 0.0933
 3 mu         0.1   0.3 0.452 0.108 
 4 mu         0.1   0.4 0.475 0.111 
 5 mu         0.1   0.5 0.546 0.0851
 6 mu         0.2   0.1 0.275 0.0593
 7 mu         0.2   0.2 0.362 0.0613
 8 mu         0.2   0.3 0.455 0.0670
 9 mu         0.2   0.4 0.485 0.0679
10 mu         0.2   0.5 0.545 0.0501
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.926        0.653   0.00694      8.00
 2 mu         0.2      0.998        0.970   0.150        3.09
 3 mu         0.3      1.01         1       0.530        1.91
 4 mu         0.4      1.01         1       0.651        1.42
 5 mu         0.5      1.01         1.00    0.716        1.26
 6 mu         0.6      1.01         1.00    0.825        1.13
 7 mu         0.7      0.999        1       0.837        1.29
 8 mu         0.8      1.01         1       0.724        1.72
 9 mu         0.9      1.07         1       0.348        2.65
10 mu_1       0.1      1.00         0.938   0.0232       3.23
11 mu_1       0.2      1.01         1       0.269        1.75
12 mu_1       0.3      1.01         1       0.552        1.58
13 mu_1       0.4      1.01         1       0.670        1.33
14 mu_1       0.5      1.01         1       0.743        1.23
15 mu_1       0.6      1.00         1       0.832        1.15
16 mu_1       0.7      0.999        1       0.838        1.39
17 mu_1       0.8      1.01         1       0.683        1.85
18 mu_1       0.9      1.07         1       0.310        2.85
19 mu_0       0.1      0.917        0.618   0.00514      8.64
20 mu_0       0.2      0.995        0.924   0.120        3.54
21 mu_0       0.3      1.01         1       0.470        2.27
22 mu_0       0.4      1.01         1       0.627        1.53
23 mu_0       0.5      1.01         1       0.688        1.29
24 mu_0       0.6      1.01         1       0.790        1.19
25 mu_0       0.7      1.00         1       0.802        1.15
26 mu_0       0.8      0.995        1       0.812        1.33
27 mu_0       0.9      1.02         1       0.664        1.74
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.23    0.000258   5.48e-14     51.8 
 2 mu         0.2       1.64    0.0138     3.19e- 9     39.8 
 3 mu         0.3       1.53    0.125      1.84e- 6     18.3 
 4 mu         0.4       1.31    0.496      1.57e- 4     14.1 
 5 mu         0.5       1.16    0.924      4.65e- 3      6.67
 6 mu         0.6       1.16    0.991      6.45e- 3      3.77
 7 mu         0.7       1.21    1.06       1.17e- 4      8.16
 8 mu         0.8       1.22    0.558      3.50e- 7      8.55
 9 mu         0.9       1.34    0.0848     1.35e-11     35.2 
10 mu_1       0.1       1.94    0.00148    5.16e-13     64.7 
11 mu_1       0.2       1.76    0.0451     1.50e- 8     24.9 
12 mu_1       0.3       1.47    0.257      5.76e- 6     18.3 
13 mu_1       0.4       1.22    0.739      3.69e- 4     10.8 
14 mu_1       0.5       1.13    0.992      8.75e- 3      4.10
15 mu_1       0.6       1.17    1.07       1.26e- 3      4.26
16 mu_1       0.7       1.22    1.04       1.97e- 5      8.75
17 mu_1       0.8       1.22    0.434      5.15e- 8     10.7 
18 mu_1       0.9       1.38    0.0600     1.77e-12     39.1 
19 mu_0       0.1       1.15    0.0000760  0            50.3 
20 mu_0       0.2       1.60    0.00514    0            43.5 
21 mu_0       0.3       1.56    0.0620     0            19.2 
22 mu_0       0.4       1.36    0.320      0            16.3 
23 mu_0       0.5       1.18    0.697      0             9.23
24 mu_0       0.6       1.14    1.00       0             3.85
25 mu_0       0.7       1.20    1.05       0             6.80
26 mu_0       0.8       1.22    0.943      0             9.96
27 mu_0       0.9       1.02    0.170      0             6.64
[1] "Total run time was 111.704 seconds"
