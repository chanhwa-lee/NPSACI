
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1217"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  9 11  5  6  6  5  6  7  6  2 10  9  5  3  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02125 0.33065 0.58873 0.98341 5.62393 
[1] "event indicator table: "

  0   1 
711 506 
[1] "treatment indicator table: "

  0   1 
433 784 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 624
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 87"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 593
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 32"
[1] "     Cluster: 35"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 89"
[1] "     Cluster: 90"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 127.803 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.487 0.0691
 2 mu         0.1   0.2 0.499 0.0641
 3 mu         0.1   0.3 0.512 0.0629
 4 mu         0.1   0.4 0.632 0.0665
 5 mu         0.1   0.5 0.661 0.0583
 6 mu         0.2   0.1 0.385 0.0548
 7 mu         0.2   0.2 0.408 0.0623
 8 mu         0.2   0.3 0.439 0.0568
 9 mu         0.2   0.4 0.528 0.0713
10 mu         0.2   0.5 0.570 0.0488
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.06          1       0.0758      3.98
 2 mu         0.2      1.02          1       0.275       2.00
 3 mu         0.3      1.00          1       0.517       1.56
 4 mu         0.4      1.01          1       0.728       1.31
 5 mu         0.5      1.02          1.01    0.760       1.28
 6 mu         0.6      1.00          1       0.812       1.19
 7 mu         0.7      0.988         1       0.747       1.14
 8 mu         0.8      0.984         1       0.675       1.25
 9 mu         0.9      0.993         1       0.413       1.62
10 mu_1       0.1      1.04          1       0.178       2.94
11 mu_1       0.2      1.00          1       0.404       1.86
12 mu_1       0.3      1.01          1       0.643       1.41
13 mu_1       0.4      1.02          1.02    0.765       1.30
14 mu_1       0.5      1.01          1.01    0.759       1.26
15 mu_1       0.6      0.998         1       0.761       1.16
16 mu_1       0.7      0.986         1       0.724       1.15
17 mu_1       0.8      0.984         1       0.675       1.28
18 mu_1       0.9      0.993         1       0.388       1.66
19 mu_0       0.1      1.07          1       0.0644      4.36
20 mu_0       0.2      1.02          1       0.243       2.15
21 mu_0       0.3      1.00          1       0.462       1.62
22 mu_0       0.4      1.01          1       0.691       1.31
23 mu_0       0.5      1.02          1.01    0.738       1.29
24 mu_0       0.6      1.01          1.00    0.760       1.22
25 mu_0       0.7      0.993         1       0.722       1.15
26 mu_0       0.8      0.984         1       0.672       1.23
27 mu_0       0.9      0.992         1       0.619       1.30
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.47     0.0000590  9.87e-17     75.3 
 2 mu         0.2      1.37     0.00589    4.60e-11     32.6 
 3 mu         0.3      1.14     0.0669     8.92e- 8     13.2 
 4 mu         0.4      0.975    0.352      1.81e- 5      6.03
 5 mu         0.5      0.893    0.772      1.05e- 3      3.71
 6 mu         0.6      0.916    0.931      1.19e- 2      5.08
 7 mu         0.7      1.03     1.05       3.31e- 4      4.31
 8 mu         0.8      1.26     0.893      1.94e- 6      4.14
 9 mu         0.9      1.57     0.205      2.67e-10     18.9 
10 mu_1       0.1      1.71     0.000421   9.37e-16     53.8 
11 mu_1       0.2      1.27     0.0197     2.18e-10     22.4 
12 mu_1       0.3      1.04     0.169      2.82e- 7      7.79
13 mu_1       0.4      0.912    0.491      4.29e- 5      5.65
14 mu_1       0.5      0.872    0.810      1.99e- 3      3.43
15 mu_1       0.6      0.927    0.920      1.42e- 3      5.34
16 mu_1       0.7      1.05     1.01       3.37e- 5      3.89
17 mu_1       0.8      1.28     0.766      1.73e- 7      4.81
18 mu_1       0.9      1.57     0.147      2.12e-11     20.9 
19 mu_0       0.1      1.45     0.0000232  0            77.7 
20 mu_0       0.2      1.40     0.00203    0            37.8 
21 mu_0       0.3      1.18     0.0334     0            15.6 
22 mu_0       0.4      1.02     0.202      0             6.28
23 mu_0       0.5      0.913    0.572      0             4.64
24 mu_0       0.6      0.899    0.865      0             4.68
25 mu_0       0.7      0.981    0.984      0             5.29
26 mu_0       0.8      1.17     1.20       0             3.49
27 mu_0       0.9      1.61     0.544      0             8.07
[1] "Total run time was 131.287 seconds"
