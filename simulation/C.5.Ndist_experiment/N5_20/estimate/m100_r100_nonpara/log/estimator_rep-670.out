
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1219"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5 10  6  7  6  9  4  9  6  2  6  3  8  7  6  6 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.02819 0.37552 0.63567 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
757 462 
[1] "treatment indicator table: "

  0   1 
399 820 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 592
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 15"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 34"
[1] "     Cluster: 36"
[1] "     Cluster: 41"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 86"
[1] "     Cluster: 89"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 627
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 31"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 78"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 102.097 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est    se
   <chr>    <dbl> <dbl> <dbl> <dbl>
 1 mu         0.1   0.1 0.497 0.183
 2 mu         0.1   0.2 0.618 0.166
 3 mu         0.1   0.3 0.649 0.167
 4 mu         0.1   0.4 0.677 0.162
 5 mu         0.1   0.5 0.710 0.153
 6 mu         0.2   0.1 0.416 0.134
 7 mu         0.2   0.2 0.528 0.122
 8 mu         0.2   0.3 0.550 0.124
 9 mu         0.2   0.4 0.591 0.119
10 mu         0.2   0.5 0.643 0.108
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.929        0.509  0.000458     10.1 
 2 mu         0.2      0.966        0.907  0.0369        6.54
 3 mu         0.3      0.971        1      0.246         2.58
 4 mu         0.4      0.982        1      0.538         1.70
 5 mu         0.5      0.992        1      0.707         1.39
 6 mu         0.6      0.999        1      0.806         1.17
 7 mu         0.7      1.01         1      0.895         1.12
 8 mu         0.8      1.01         1      0.852         1.18
 9 mu         0.9      1.01         1      0.659         1.40
10 mu_1       0.1      1.04         0.873  0.00195      11.3 
11 mu_1       0.2      0.988        1      0.0804        4.05
12 mu_1       0.3      0.982        1      0.349         1.90
13 mu_1       0.4      0.991        0.998  0.611         1.58
14 mu_1       0.5      0.997        1      0.735         1.33
15 mu_1       0.6      1.00         1      0.839         1.12
16 mu_1       0.7      1.01         1      0.889         1.14
17 mu_1       0.8      1.01         1      0.819         1.21
18 mu_1       0.9      1.01         1      0.634         1.43
19 mu_0       0.1      0.916        0.465  0.000292     10.0 
20 mu_0       0.2      0.961        0.843  0.0261        7.16
21 mu_0       0.3      0.966        0.992  0.202         2.95
22 mu_0       0.4      0.976        1      0.489         1.78
23 mu_0       0.5      0.987        0.995  0.678         1.46
24 mu_0       0.6      0.995        1      0.758         1.25
25 mu_0       0.7      1.00         1      0.855         1.17
26 mu_0       0.8      1.01         1.00   0.858         1.18
27 mu_0       0.9      1.02         1.00   0.703         1.29
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.306    0.000107   6.71e-17     22.1 
 2 mu         0.2      0.628    0.00658    3.13e-11     21.8 
 3 mu         0.3      1.11     0.0828     6.07e- 8     29.4 
 4 mu         0.4      1.37     0.311      1.23e- 5     29.7 
 5 mu         0.5      1.29     0.743      7.10e- 4     13.2 
 6 mu         0.6      1.07     1.02       1.58e- 2      3.63
 7 mu         0.7      0.918    0.888      4.15e- 2      2.30
 8 mu         0.8      0.966    0.762      8.14e- 4      4.05
 9 mu         0.9      1.54     0.169      4.53e- 7     27.2 
10 mu_1       0.1      0.590    0.000636   6.38e-16     31.6 
11 mu_1       0.2      0.881    0.0254     1.49e-10     17.1 
12 mu_1       0.3      1.30     0.175      1.92e- 7     34.3 
13 mu_1       0.4      1.40     0.531      2.92e- 5     26.0 
14 mu_1       0.5      1.23     0.933      1.35e- 3      9.26
15 mu_1       0.6      1.01     1.06       2.63e- 2      3.02
16 mu_1       0.7      0.895    0.877      2.18e- 2      2.29
17 mu_1       0.8      0.989    0.632      3.75e- 4      4.59
18 mu_1       0.9      1.61     0.130      1.86e- 7     30.2 
19 mu_0       0.1      0.274    0.0000257  0            21.1 
20 mu_0       0.2      0.565    0.00226    0            23.4 
21 mu_0       0.3      1.03     0.0348     0            27.3 
22 mu_0       0.4      1.35     0.172      0            32.2 
23 mu_0       0.5      1.35     0.541      0            17.2 
24 mu_0       0.6      1.16     0.941      0             4.54
25 mu_0       0.7      0.971    1.02       0             2.71
26 mu_0       0.8      0.874    0.831      0             3.04
27 mu_0       0.9      0.915    0.338      0             5.62
[1] "Total run time was 105.138 seconds"
