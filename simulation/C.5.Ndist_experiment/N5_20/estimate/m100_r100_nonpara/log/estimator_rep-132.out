
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1274"
[1] "cluster size dist'n: "

 6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 5  7  5  9  7  9  7  2 10  8 14  6  3  5  3 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.03633 0.39147 0.67214 1.00000 5.00000 
[1] "event indicator table: "

  0   1 
792 482 
[1] "treatment indicator table: "

  0   1 
431 843 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 612
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 26"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 86"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 93"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 8"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 75"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 85"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 94"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 115.515 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.304 0.0985
 2 mu         0.1   0.2 0.470 0.163 
 3 mu         0.1   0.3 0.527 0.120 
 4 mu         0.1   0.4 0.545 0.108 
 5 mu         0.1   0.5 0.561 0.0987
 6 mu         0.2   0.1 0.369 0.0824
 7 mu         0.2   0.2 0.540 0.138 
 8 mu         0.2   0.3 0.603 0.0977
 9 mu         0.2   0.4 0.622 0.0812
10 mu         0.2   0.5 0.654 0.0747
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.707        0.400  0.000795      7.34
 2 mu         0.2      0.946        0.909  0.0336        3.93
 3 mu         0.3      1.01         1      0.187         2.54
 4 mu         0.4      0.999        0.996  0.469         1.64
 5 mu         0.5      0.991        0.984  0.695         1.35
 6 mu         0.6      0.993        0.997  0.805         1.21
 7 mu         0.7      1.00         1      0.773         1.12
 8 mu         0.8      1.01         1      0.755         1.26
 9 mu         0.9      1.01         1      0.438         1.50
10 mu_1       0.1      0.902        0.729  0.00302       4.63
11 mu_1       0.2      1.02         0.998  0.0672        3.49
12 mu_1       0.3      1.01         0.999  0.270         2.09
13 mu_1       0.4      0.996        0.991  0.571         1.51
14 mu_1       0.5      0.991        0.988  0.719         1.30
15 mu_1       0.6      0.995        0.998  0.831         1.18
16 mu_1       0.7      1.00         1      0.771         1.14
17 mu_1       0.8      1.01         1      0.748         1.29
18 mu_1       0.9      1.01         1      0.399         1.53
19 mu_0       0.1      0.685        0.359  0.000547      8.11
20 mu_0       0.2      0.928        0.839  0.0252        4.04
21 mu_0       0.3      1.00         1      0.151         2.74
22 mu_0       0.4      1.00         1      0.401         1.78
23 mu_0       0.5      0.991        0.987  0.671         1.40
24 mu_0       0.6      0.989        0.990  0.765         1.27
25 mu_0       0.7      0.995        0.998  0.778         1.14
26 mu_0       0.8      1.00         1      0.783         1.21
27 mu_0       0.9      1.01         1      0.638         1.40
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.60   0.0000268   6.77e-19    138.  
 2 mu         0.2       1.52   0.00338     7.10e-13     95.5 
 3 mu         0.3       1.23   0.0421      2.36e- 9     43.0 
 4 mu         0.4       1.15   0.229       7.45e- 7     14.3 
 5 mu         0.5       1.15   0.634       6.46e- 5      8.13
 6 mu         0.6       1.10   1.01        2.48e- 3      5.63
 7 mu         0.7       1.08   0.953       1.96e- 3      5.78
 8 mu         0.8       1.15   0.929       1.51e- 5      8.78
 9 mu         0.9       1.39   0.186       2.62e- 9     11.4 
10 mu_1       0.1       1.92   0.000209    6.77e-18    138.  
11 mu_1       0.2       1.26   0.0128      3.55e-12     47.7 
12 mu_1       0.3       1.07   0.0959      7.87e- 9     14.3 
13 mu_1       0.4       1.11   0.390       1.86e- 6      7.04
14 mu_1       0.5       1.12   0.810       1.29e- 4      8.13
15 mu_1       0.6       1.08   0.980       4.13e- 3      4.69
16 mu_1       0.7       1.09   0.916       5.26e- 4      6.20
17 mu_1       0.8       1.17   0.875       3.53e- 6      9.60
18 mu_1       0.9       1.42   0.144       5.45e-10     12.2 
19 mu_0       0.1       1.57   0.00000792  0           138.  
20 mu_0       0.2       1.59   0.00127     0           107.  
21 mu_0       0.3       1.30   0.0186      0            55.3 
22 mu_0       0.4       1.18   0.125       0            21.5 
23 mu_0       0.5       1.17   0.451       0             8.13
24 mu_0       0.6       1.12   0.896       0             7.04
25 mu_0       0.7       1.07   1.06        0             4.82
26 mu_0       0.8       1.09   0.927       0             7.09
27 mu_0       0.9       1.09   0.217       0            14.3 
[1] "Total run time was 118.677 seconds"
