
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1313"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  9  5  6  5  6  4  4  9  7  7  8  4  4  4 15 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04702 0.36493 0.60170 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
761 552 
[1] "treatment indicator table: "

  0   1 
477 836 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 678
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 8"
[1] "     Cluster: 10"
[1] "     Cluster: 12"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 41"
[1] "     Cluster: 42"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 65"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 82"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 635
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 11"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 25"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 50"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 66"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 74"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 140.356 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.616 0.180 
 2 mu         0.1   0.2 0.768 0.220 
 3 mu         0.1   0.3 0.865 0.238 
 4 mu         0.1   0.4 1.01  0.281 
 5 mu         0.1   0.5 1.06  0.307 
 6 mu         0.2   0.1 0.321 0.0458
 7 mu         0.2   0.2 0.449 0.0696
 8 mu         0.2   0.3 0.512 0.0731
 9 mu         0.2   0.4 0.574 0.0748
10 mu         0.2   0.5 0.586 0.0751
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.58         0.489  0.000619     32.0 
 2 mu         0.2      0.973        0.902  0.0315        3.99
 3 mu         0.3      0.939        1      0.199         1.79
 4 mu         0.4      0.963        0.999  0.515         1.37
 5 mu         0.5      0.979        1      0.723         1.17
 6 mu         0.6      0.993        0.999  0.836         1.18
 7 mu         0.7      1.01         1.00   0.855         1.18
 8 mu         0.8      1.01         1      0.726         1.30
 9 mu         0.9      1.01         1      0.394         1.91
10 mu_1       0.1      0.915        0.814  0.00262       5.15
11 mu_1       0.2      0.909        0.997  0.0692        2.21
12 mu_1       0.3      0.948        1      0.306         1.52
13 mu_1       0.4      0.969        0.996  0.635         1.28
14 mu_1       0.5      0.983        1      0.770         1.14
15 mu_1       0.6      0.996        1      0.819         1.20
16 mu_1       0.7      1.01         1.00   0.845         1.17
17 mu_1       0.8      1.01         1      0.701         1.39
18 mu_1       0.9      1.01         1      0.364         1.97
19 mu_0       0.1      1.65         0.433  0.000396     35.5 
20 mu_0       0.2      0.989        0.863  0.0221        4.92
21 mu_0       0.3      0.935        0.984  0.153         2.03
22 mu_0       0.4      0.958        1      0.435         1.45
23 mu_0       0.5      0.975        1      0.675         1.23
24 mu_0       0.6      0.987        1      0.802         1.15
25 mu_0       0.7      1.00         1      0.807         1.23
26 mu_0       0.8      1.01         1.02   0.813         1.27
27 mu_0       0.9      1.01         1      0.623         1.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      0.421    0.000105   1.10e-16     10.0 
 2 mu         0.2      1.12     0.00696    5.15e-11     43.8 
 3 mu         0.3      1.52     0.0811     9.98e- 8     51.0 
 4 mu         0.4      1.49     0.358      2.02e- 5     29.6 
 5 mu         0.5      1.24     0.736      1.17e- 3      9.73
 6 mu         0.6      1.01     0.941      2.99e- 2      3.58
 7 mu         0.7      0.995    0.989      1.29e- 2      3.19
 8 mu         0.8      1.25     0.524      3.82e- 4      7.04
 9 mu         0.9      1.74     0.0753     5.94e- 7     32.6 
10 mu_1       0.1      0.957    0.000797   1.05e-15     26.7 
11 mu_1       0.2      1.50     0.0252     2.44e-10     58.4 
12 mu_1       0.3      1.57     0.169      3.16e- 7     45.4 
13 mu_1       0.4      1.38     0.583      4.81e- 5     19.7 
14 mu_1       0.5      1.13     0.843      2.22e- 3      6.14
15 mu_1       0.6      0.964    0.982      4.74e- 2      3.16
16 mu_1       0.7      1.02     0.902      5.27e- 3      3.64
17 mu_1       0.8      1.29     0.390      1.36e- 4      8.80
18 mu_1       0.9      1.78     0.0473     1.90e- 7     36.2 
19 mu_0       0.1      0.361    0.0000385  0             8.15
20 mu_0       0.2      1.02     0.00239    0            40.2 
21 mu_0       0.3      1.50     0.0387     0            53.5 
22 mu_0       0.4      1.57     0.212      0            36.2 
23 mu_0       0.5      1.36     0.632      0            14.3 
24 mu_0       0.6      1.08     0.896      0             4.21
25 mu_0       0.7      0.942    0.864      0             2.92
26 mu_0       0.8      1.06     0.755      0             5.34
27 mu_0       0.9      1.34     0.153      0             9.73
[1] "Total run time was 144.769 seconds"
