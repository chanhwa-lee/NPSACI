
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1188"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 6  8 11  4  5  9  6  6  6  8  6  4  6  7  4  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.05447 0.44166 0.66783 1.00000 5.58134 
[1] "event indicator table: "

  0   1 
708 480 
[1] "treatment indicator table: "

  0   1 
447 741 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 620
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 21"
[1] "     Cluster: 23"
[1] "     Cluster: 25"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 31"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 37"
[1] "     Cluster: 39"
[1] "     Cluster: 42"
[1] "     Cluster: 47"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 57"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 60"
[1] "     Cluster: 61"
[1] "     Cluster: 63"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 71"
[1] "     Cluster: 73"
[1] "     Cluster: 76"
[1] "     Cluster: 77"
[1] "     Cluster: 79"
[1] "     Cluster: 81"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 568
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 18"
[1] "     Cluster: 20"
[1] "     Cluster: 22"
[1] "     Cluster: 24"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 30"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 38"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 44"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 62"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 111.429 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.275 0.137 
 2 mu         0.1   0.2 0.427 0.154 
 3 mu         0.1   0.3 0.445 0.142 
 4 mu         0.1   0.4 0.433 0.154 
 5 mu         0.1   0.5 0.428 0.166 
 6 mu         0.2   0.1 0.174 0.100 
 7 mu         0.2   0.2 0.313 0.0940
 8 mu         0.2   0.3 0.355 0.0928
 9 mu         0.2   0.4 0.341 0.116 
10 mu         0.2   0.5 0.333 0.136 
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value    min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>        <dbl>     <dbl>
 1 mu         0.1      0.839        0.794 0.0000000517     12.5 
 2 mu         0.2      0.805        0.885 0.0000592         5.69
 3 mu         0.3      0.832        0.939 0.00269           2.62
 4 mu         0.4      0.893        0.999 0.0308            2.23
 5 mu         0.5      0.960        1     0.156             2.50
 6 mu         0.6      0.996        1     0.421             2.23
 7 mu         0.7      0.994        1     0.563             1.46
 8 mu         0.8      0.961        1     0.219             1.26
 9 mu         0.9      0.884        0.967 0.0220            1.32
10 mu_1       0.1      0.736        0.867 0.000000337       1.87
11 mu_1       0.2      0.782        0.906 0.000195          1.53
12 mu_1       0.3      0.847        0.958 0.00598           2.38
13 mu_1       0.4      0.919        1     0.0522            2.07
14 mu_1       0.5      0.978        1     0.217             2.62
15 mu_1       0.6      1.00         1     0.476             2.06
16 mu_1       0.7      0.989        0.999 0.501             1.40
17 mu_1       0.8      0.952        0.998 0.183             1.24
18 mu_1       0.9      0.876        0.966 0.0170            1.35
19 mu_0       0.1      0.851        0.798 0.0000000199     13.8 
20 mu_0       0.2      0.810        0.853 0.0000251         6.99
21 mu_0       0.3      0.826        0.928 0.00127           3.43
22 mu_0       0.4      0.876        0.974 0.0165            2.33
23 mu_0       0.5      0.941        0.999 0.0961            2.39
24 mu_0       0.6      0.991        1     0.320             2.50
25 mu_0       0.7      1.01         1     0.541             1.66
26 mu_0       0.8      0.996        1     0.360             1.32
27 mu_0       0.9      0.954        1     0.0662            1.36
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value  max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>      <dbl>
 1 mu         0.1  708702.       0.000323  5.83e-16  66374958.
 2 mu         0.2 1167935.       0.0188    7.64e-11 114844832.
 3 mu         0.3  688323.       0.124     7.53e- 8  68310887.
 4 mu         0.4  219256.       0.451     1.00e- 5  21827192.
 5 mu         0.5   39980.       0.932     4.45e- 4   3984481.
 6 mu         0.6    3800.       1.16      9.87e- 3    378517.
 7 mu         0.7     146.       1.26      5.73e- 3     14280.
 8 mu         0.8       6.78     0.950     1.95e- 4       294.
 9 mu         0.9      12.8      0.198     2.57e- 7       860.
10 mu_1       0.1 1276658.       0.00209   5.83e-15 124453047.
11 mu_1       0.2 1083677.       0.0585    3.82e-10 107667030.
12 mu_1       0.3  428243.       0.281     2.51e- 7  42694304.
13 mu_1       0.4  102529.       0.611     2.50e- 5  10231496.
14 mu_1       0.5   14976.       1.17      8.90e- 4   1494180.
15 mu_1       0.6    1189.       1.22      1.64e- 2    118287.
16 mu_1       0.7      41.4      1.28      1.49e- 3      3825.
17 mu_1       0.8       6.61     0.847     4.43e- 5       344.
18 mu_1       0.9      13.2      0.149     4.44e- 8       895.
19 mu_0       0.1  645596.       0.000106  0         59921837.
20 mu_0       0.2 1188999.       0.00648   0        116639283.
21 mu_0       0.3  799785.       0.0611    0         79289422.
22 mu_0       0.4  297074.       0.257     0         29557656.
23 mu_0       0.5   64983.       0.587     0          6474781.
24 mu_0       0.6    7717.       1.05      0           768862.
25 mu_0       0.7     391.       1.24      0            38674.
26 mu_0       0.8       7.43     1.13      0              445.
27 mu_0       0.9       8.56     0.287     0              537.
[1] "Total run time was 114.585 seconds"
