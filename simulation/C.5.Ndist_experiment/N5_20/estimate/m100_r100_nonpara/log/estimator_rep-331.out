
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1228"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 3  8  7  4  9  8  6  8 10  3  9  2  6  7  6  4 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.04456 0.37707 0.64684 1.00000 6.00000 
[1] "event indicator table: "

  0   1 
727 501 
[1] "treatment indicator table: "

  0   1 
448 780 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 643
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 2"
[1] "     Cluster: 7"
[1] "     Cluster: 8"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 13"
[1] "     Cluster: 14"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 19"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 33"
[1] "     Cluster: 36"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 48"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 58"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 62"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 69"
[1] "     Cluster: 72"
[1] "     Cluster: 73"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 81"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 91"
[1] "     Cluster: 96"
[1] "     Cluster: 97"
[1] "     Cluster: 98"
[1] "     Cluster: 100"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 585
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 11"
[1] "     Cluster: 12"
[1] "     Cluster: 15"
[1] "     Cluster: 17"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 27"
[1] "     Cluster: 28"
[1] "     Cluster: 32"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 37"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 49"
[1] "     Cluster: 51"
[1] "     Cluster: 53"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 60"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 74"
[1] "     Cluster: 75"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 80"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 89"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 99"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 106.957 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.453 0.0975
 2 mu         0.1   0.2 0.550 0.134 
 3 mu         0.1   0.3 0.587 0.131 
 4 mu         0.1   0.4 0.659 0.128 
 5 mu         0.1   0.5 0.681 0.125 
 6 mu         0.2   0.1 0.378 0.0603
 7 mu         0.2   0.2 0.448 0.0853
 8 mu         0.2   0.3 0.475 0.0811
 9 mu         0.2   0.4 0.555 0.0750
10 mu         0.2   0.5 0.586 0.0678
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      1.01         0.504  0.00114      13.3 
 2 mu         0.2      0.990        0.952  0.0554        4.85
 3 mu         0.3      0.983        1      0.209         2.07
 4 mu         0.4      0.985        1      0.483         1.51
 5 mu         0.5      0.994        0.999  0.759         1.18
 6 mu         0.6      1.00         1      0.837         1.11
 7 mu         0.7      1.00         1      0.884         1.19
 8 mu         0.8      1.01         1      0.765         1.33
 9 mu         0.9      1.04         1      0.344         1.81
10 mu_1       0.1      1.01         0.868  0.00441       8.40
11 mu_1       0.2      0.991        1      0.100         2.48
12 mu_1       0.3      0.983        1      0.290         1.81
13 mu_1       0.4      0.987        1      0.595         1.31
14 mu_1       0.5      0.996        1      0.799         1.18
15 mu_1       0.6      1.00         1      0.843         1.11
16 mu_1       0.7      1.00         1.00   0.862         1.22
17 mu_1       0.8      1.01         1      0.728         1.36
18 mu_1       0.9      1.04         1      0.312         1.89
19 mu_0       0.1      1.01         0.457  0.000774     13.8 
20 mu_0       0.2      0.990        0.873  0.0409        5.58
21 mu_0       0.3      0.983        1      0.174         2.35
22 mu_0       0.4      0.984        1      0.409         1.66
23 mu_0       0.5      0.992        0.996  0.710         1.25
24 mu_0       0.6      1.00         1      0.819         1.15
25 mu_0       0.7      1.00         1      0.867         1.14
26 mu_0       0.8      0.999        1      0.854         1.22
27 mu_0       0.9      1.01         1      0.508         1.58
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1       1.56    0.0000360  1.50e-13     89.8 
 2 mu         0.2       2.66    0.00632    7.78e- 9    109.  
 3 mu         0.3       2.18    0.0955     3.91e- 6     64.4 
 4 mu         0.4       1.47    0.342      2.87e- 4     26.9 
 5 mu         0.5       1.13    0.787      7.07e- 3      6.11
 6 mu         0.6       1.05    0.984      4.50e- 2      3.12
 7 mu         0.7       1.08    1.13       7.16e- 4      3.53
 8 mu         0.8       1.21    0.781      1.63e- 6      5.76
 9 mu         0.9       1.40    0.0969     3.53e-11     26.6 
10 mu_1       0.1       2.80    0.000283   1.34e-12    142.  
11 mu_1       0.2       2.77    0.0223     3.46e- 8     86.2 
12 mu_1       0.3       1.87    0.212      1.16e- 5     53.7 
13 mu_1       0.4       1.26    0.563      6.37e- 4     16.8 
14 mu_1       0.5       1.06    0.932      1.26e- 2      4.08
15 mu_1       0.6       1.04    0.988      1.18e- 2      3.47
16 mu_1       0.7       1.11    1.16       1.61e- 4      3.49
17 mu_1       0.8       1.25    0.641      3.21e- 7      7.20
18 mu_1       0.9       1.42    0.0710     6.20e-12     29.6 
19 mu_0       0.1       1.42    0.0000153  0            84.0 
20 mu_0       0.2       2.63    0.00277    0           115.  
21 mu_0       0.3       2.31    0.0455     0            69.0 
22 mu_0       0.4       1.61    0.181      0            33.6 
23 mu_0       0.5       1.20    0.497      0             8.15
24 mu_0       0.6       1.05    0.950      0             3.53
25 mu_0       0.7       1.02    0.929      0             3.92
26 mu_0       0.8       1.09    0.935      0             3.28
27 mu_0       0.9       1.19    0.258      0             8.10
[1] "Total run time was 110.231 seconds"
