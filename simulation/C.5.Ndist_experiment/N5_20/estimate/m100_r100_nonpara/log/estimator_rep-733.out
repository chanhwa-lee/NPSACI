
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: foreach
Loading required package: iterators
Loading required package: parallel

 randomForestSRC 3.2.2 
 
 Type rfsrc.news() to see new features, changes, and bug fixes. 
 

── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.3.6     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     0.3.5     ✔ tidyr     1.2.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ purrr::accumulate() masks foreach::accumulate()
✖ tidyr::extract()    masks dbarts::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
✖ purrr::partial()    masks randomForestSRC::partial()
✖ purrr::when()       masks foreach::when()
ℹ Use the [conflicted package](http://conflicted.r-lib.org/) to force all conflicts to become errors
[1] "[Analysis setting]"
[1] "n.cpus: 8"
[1] "method: nonpara"
[1] "taus: 0.1, 0.2, 0.3, 0.4, 0.5"
[1] "thetas: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"
[1] "r: 100"
[1] "m: 100"
[1] "N_total: 1280"
[1] "cluster size dist'n: "

 5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 4  8  7  9  5  4  8  5  4  4  5  7  3 11  6 10 
[1] "observed time summary: "
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0000  0.0308  0.3325  0.5726  0.9715  5.0000 
[1] "event indicator table: "

  0   1 
758 522 
[1] "treatment indicator table: "

  0   1 
458 822 
[1] ""
[1] "Estimation start"
[1] "   Split: 1"
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.T.names)` instead of `X.T.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.C.names)` instead of `X.C.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(X.A.names)` instead of `X.A.names` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 662
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 2"
[1] "     Cluster: 3"
[1] "     Cluster: 4"
[1] "     Cluster: 5"
[1] "     Cluster: 6"
[1] "     Cluster: 7"
[1] "     Cluster: 9"
[1] "     Cluster: 10"
[1] "     Cluster: 11"
[1] "     Cluster: 14"
[1] "     Cluster: 15"
[1] "     Cluster: 16"
[1] "     Cluster: 18"
[1] "     Cluster: 28"
[1] "     Cluster: 29"
[1] "     Cluster: 30"
[1] "     Cluster: 31"
[1] "     Cluster: 32"
[1] "     Cluster: 33"
[1] "     Cluster: 37"
[1] "     Cluster: 38"
[1] "     Cluster: 39"
[1] "     Cluster: 40"
[1] "     Cluster: 41"
[1] "     Cluster: 43"
[1] "     Cluster: 45"
[1] "     Cluster: 46"
[1] "     Cluster: 48"
[1] "     Cluster: 51"
[1] "     Cluster: 58"
[1] "     Cluster: 60"
[1] "     Cluster: 62"
[1] "     Cluster: 63"
[1] "     Cluster: 66"
[1] "     Cluster: 67"
[1] "     Cluster: 69"
[1] "     Cluster: 73"
[1] "     Cluster: 75"
[1] "     Cluster: 77"
[1] "     Cluster: 78"
[1] "     Cluster: 80"
[1] "     Cluster: 81"
[1] "     Cluster: 82"
[1] "     Cluster: 83"
[1] "     Cluster: 89"
[1] "     Cluster: 91"
[1] "     Cluster: 92"
[1] "     Cluster: 93"
[1] "     Cluster: 96"
[1] "     Cluster: 98"
[1] "   Split: 2"

Running BART with binary y

number of trees: 25
number of chains: 1, number of threads 1
tree thinning rate: 1
Prior:
	prior on k: chi with 1.250000 degrees of freedom and inf scale
	power and base for tree prior: 2.000000 0.950000
	use quantiles for rule cut points: false
	proposal probabilities: birth/death 0.50, swap 0.10, change 0.40; birth 0.50
data:
	number of training observations: 618
	number of test observations: 0
	number of explanatory variables: 15

Cutoff rules c in x<=c vs x>c
Number of cutoffs: (var: number of possible c):
(1: 100) (2: 100) (3: 100) (4: 100) (5: 100) 
(6: 100) (7: 100) (8: 100) (9: 100) (10: 100) 
(11: 100) (12: 100) (13: 100) (14: 100) (15: 100) 

[1] "     Cluster: 1"
[1] "     Cluster: 8"
[1] "     Cluster: 12"
[1] "     Cluster: 13"
[1] "     Cluster: 17"
[1] "     Cluster: 19"
[1] "     Cluster: 20"
[1] "     Cluster: 21"
[1] "     Cluster: 22"
[1] "     Cluster: 23"
[1] "     Cluster: 24"
[1] "     Cluster: 25"
[1] "     Cluster: 26"
[1] "     Cluster: 27"
[1] "     Cluster: 34"
[1] "     Cluster: 35"
[1] "     Cluster: 36"
[1] "     Cluster: 42"
[1] "     Cluster: 44"
[1] "     Cluster: 47"
[1] "     Cluster: 49"
[1] "     Cluster: 50"
[1] "     Cluster: 52"
[1] "     Cluster: 53"
[1] "     Cluster: 54"
[1] "     Cluster: 55"
[1] "     Cluster: 56"
[1] "     Cluster: 57"
[1] "     Cluster: 59"
[1] "     Cluster: 61"
[1] "     Cluster: 64"
[1] "     Cluster: 65"
[1] "     Cluster: 68"
[1] "     Cluster: 70"
[1] "     Cluster: 71"
[1] "     Cluster: 72"
[1] "     Cluster: 74"
[1] "     Cluster: 76"
[1] "     Cluster: 79"
[1] "     Cluster: 84"
[1] "     Cluster: 85"
[1] "     Cluster: 86"
[1] "     Cluster: 87"
[1] "     Cluster: 88"
[1] "     Cluster: 90"
[1] "     Cluster: 94"
[1] "     Cluster: 95"
[1] "     Cluster: 97"
[1] "     Cluster: 99"
[1] "     Cluster: 100"
[1] ""
[1] "IF for proposed nonparametric estimator computed."
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta', 'tau'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'theta'. You can override using the
`.groups` argument.
[1] ""
[1] "Total run time was 132.654 seconds"
[1] "Estimation result: "
# A tibble: 360 × 5
   estimand theta   tau   est     se
   <chr>    <dbl> <dbl> <dbl>  <dbl>
 1 mu         0.1   0.1 0.381 0.102 
 2 mu         0.1   0.2 0.414 0.0982
 3 mu         0.1   0.3 0.426 0.0824
 4 mu         0.1   0.4 0.429 0.0666
 5 mu         0.1   0.5 0.449 0.0737
 6 mu         0.2   0.1 0.399 0.0959
 7 mu         0.2   0.2 0.453 0.0972
 8 mu         0.2   0.3 0.487 0.0870
 9 mu         0.2   0.4 0.509 0.0767
10 mu         0.2   0.5 0.546 0.0880
# ℹ 350 more rows
[1] ""
[1] "OR weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value   min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>       <dbl>     <dbl>
 1 mu         0.1      0.731        0.532 0.000000324      5.84
 2 mu         0.2      0.986        0.852 0.000255        12.8 
 3 mu         0.3      1.07         0.986 0.00808         10.4 
 4 mu         0.4      1.05         1     0.0671           4.41
 5 mu         0.5      1.01         0.996 0.257            2.10
 6 mu         0.6      0.997        1     0.301            1.36
 7 mu         0.7      0.992        1     0.104            1.45
 8 mu         0.8      0.990        1     0.0153           1.94
 9 mu         0.9      0.999        1     0.000286         3.35
10 mu_1       0.1      0.938        0.842 0.00000179       9.04
11 mu_1       0.2      1.09         0.982 0.000715        14.3 
12 mu_1       0.3      1.08         1     0.0156           8.03
13 mu_1       0.4      1.03         1     0.101            2.86
14 mu_1       0.5      1.00         1     0.324            1.65
15 mu_1       0.6      0.994        1     0.241            1.26
16 mu_1       0.7      0.991        1     0.0769           1.51
17 mu_1       0.8      0.990        1     0.0103           2.01
18 mu_1       0.9      0.999        1.00  0.000176         3.45
19 mu_0       0.1      0.708        0.488 0.000000161      6.01
20 mu_0       0.2      0.958        0.822 0.000140        12.4 
21 mu_0       0.3      1.07         0.972 0.00488         11.5 
22 mu_0       0.4      1.06         1     0.0446           5.45
23 mu_0       0.5      1.02         1     0.190            2.56
24 mu_0       0.6      1.00         1     0.390            1.58
25 mu_0       0.7      0.993        1     0.167            1.33
26 mu_0       0.8      0.992        1     0.0352           1.65
27 mu_0       0.9      0.993        1     0.00128          2.41
[1] ""
[1] "IPCW weights"
`summarise()` has grouped output by 'estimand'. You can override using the
`.groups` argument.
# A tibble: 27 × 6
# Groups:   estimand [3]
   estimand theta mean_value median_value min_value max_value
   <fct>    <dbl>      <dbl>        <dbl>     <dbl>     <dbl>
 1 mu         0.1      19.0    0.0000217   2.73e-15     745. 
 2 mu         0.2      26.7    0.00492     3.18e-10    1032. 
 3 mu         0.3      18.4    0.0616      2.74e- 7     698. 
 4 mu         0.4       9.14   0.335       3.13e- 5     310. 
 5 mu         0.5       4.52   0.833       1.16e- 3      93.9
 6 mu         0.6       2.72   1.21        2.06e- 2      41.2
 7 mu         0.7       2.28   1.18        8.26e- 4      32.1
 8 mu         0.8       2.51   1.16        2.82e- 6      35.7
 9 mu         0.9       2.80   0.211       1.22e-10      53.2
10 mu_1       0.1      31.4    0.000130    2.58e-14    1354. 
11 mu_1       0.2      24.1    0.0174      1.50e- 9     938. 
12 mu_1       0.3      11.9    0.158       8.64e- 7     423. 
13 mu_1       0.4       5.44   0.598       7.39e- 5     141. 
14 mu_1       0.5       3.18   1.06        2.19e- 3      59.5
15 mu_1       0.6       2.38   1.09        1.08e- 2      34.3
16 mu_1       0.7       2.29   1.17        1.97e- 4      30.6
17 mu_1       0.8       2.59   0.994       5.87e- 7      39.0
18 mu_1       0.9       2.84   0.164       2.27e-11      59.1
19 mu_0       0.1      17.6    0.00000750  0            699. 
20 mu_0       0.2      27.4    0.00143     0           1056. 
21 mu_0       0.3      21.3    0.0214      0            816. 
22 mu_0       0.4      11.6    0.136       0            423. 
23 mu_0       0.5       5.85   0.559       0            154. 
24 mu_0       0.6       3.23   1.05        0             51.5
25 mu_0       0.7       2.25   1.12        0             35.7
26 mu_0       0.8       2.19   1.01        0             26.8
27 mu_0       0.9       2.46   0.317       0             58.0
[1] "Total run time was 136.021 seconds"
